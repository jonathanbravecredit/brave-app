{
    "pipes": [
        {
            "name": "AccountStatusPipe",
            "id": "pipe-AccountStatusPipe-0bb1c12903f80f1f6a7017987d354c4d",
            "file": "src/app/shared/components/cards/creditcard-card/account-status.pipe.ts",
            "type": "pipe",
            "description": "",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "value",
                            "type": "Status"
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 8,
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "Status",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "ngname": "accountStatus",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\nimport { Status } from '@shared/components/cards/creditcard-card/creditcard-card.component';\n\n@Pipe({\n  name: 'accountStatus',\n})\nexport class AccountStatusPipe implements PipeTransform {\n  transform(value: Status): string {\n    return statuses[value];\n  }\n}\n\nconst statuses: Record<Status, any> = {\n  excellent: 'bg-teal-500',\n  good: 'bg-amber-300',\n  okay: 'bg-orange-500',\n  poor: 'bg-rose-800',\n};\n"
        },
        {
            "name": "CreditReportGraphicPipe",
            "id": "pipe-CreditReportGraphicPipe-a1e3b3f71e683ce24553af66f433ea94",
            "file": "src/app/shared/components/graphics/credit-report-graphic/credit-report-graphic.pipe.ts",
            "type": "pipe",
            "description": "",
            "properties": [
                {
                    "name": "possibleStatusFromValue",
                    "defaultValue": "[\n    { \n      percentage: 25,\n      status: CreditReportStatus.Safe,\n    },\n    {\n      percentage: 50,\n      status: CreditReportStatus.Danger\n    },\n    {\n      percentage: 75,\n      status: CreditReportStatus.Critical\n    }\n  ]",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "possibleValues",
                    "defaultValue": "[\n    0, 1, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100\n  ]",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 44,
                    "modifierKind": [
                        112
                    ]
                }
            ],
            "methods": [
                {
                    "name": "getAverageThresholdFromValue",
                    "args": [
                        {
                            "name": "value",
                            "type": "number"
                        }
                    ],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 48,
                    "modifierKind": [
                        112
                    ],
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "number",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getPossibeStatusFromPercentage",
                    "args": [
                        {
                            "name": "value",
                            "type": "number"
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 35,
                    "modifierKind": [
                        112
                    ],
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "number",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "value",
                            "type": "number"
                        },
                        {
                            "name": "args",
                            "type": "string[]",
                            "dotDotDotToken": true
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 56,
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "number",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "args",
                            "type": "string[]",
                            "dotDotDotToken": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "ngname": "creditReportGraphic",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\nexport enum CreditReportStatus {\n  Critical = 'critical',\n  Danger = 'danger',\n  Safe = 'safe',\n  Default = 'default',\n};\n\nconst enumStrColorCLassIndicator = {\n  [CreditReportStatus.Danger]: 'brave-danger',\n  [CreditReportStatus.Safe]: 'brave-safe',\n  [CreditReportStatus.Critical]: 'brave-critical',\n  [CreditReportStatus.Default]: 'lt-gray'\n};\n\n@Pipe({\n  name: 'creditReportGraphic'\n})\nexport class CreditReportGraphicPipe implements PipeTransform {\n  private possibleStatusFromValue = [\n    { \n      percentage: 25,\n      status: CreditReportStatus.Safe,\n    },\n    {\n      percentage: 50,\n      status: CreditReportStatus.Danger\n    },\n    {\n      percentage: 75,\n      status: CreditReportStatus.Critical\n    }\n  ];\n\n  private getPossibeStatusFromPercentage(value: number): string {\n    let result = CreditReportStatus.Default;\n    this.possibleStatusFromValue.reverse().forEach((possibleValue) => {\n       if (value <= possibleValue.percentage) { result = possibleValue.status}\n    });\n\n    return result;\n  }\n\n  private possibleValues = [\n    0, 1, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100\n  ];\n\n  private getAverageThresholdFromValue(value: number): number {\n    let result: number = 0;\n    this.possibleValues.forEach((possibleValue) => {\n      if (value >= possibleValue) { result = possibleValue }\n    });\n    return result;\n  }\n\n  transform(value: number, ...args: string[]): string {\n    const outputType: string = args[0]\n    let result= '';\n    if (outputType === 'css-class') {\n      result = enumStrColorCLassIndicator[this.getPossibeStatusFromPercentage(value) as CreditReportStatus];\n    } else if (outputType === 'margin-placement') {\n      result = 'ml-' + this.getAverageThresholdFromValue(value).toString() + 'percent';\n    } else if (outputType === 'status') {\n      result = this.getPossibeStatusFromPercentage(value);\n    }\n\n    return result;\n  }\n}\n"
        },
        {
            "name": "CreditReportPipe",
            "id": "pipe-CreditReportPipe-6b9780bee8b7fcf1ef95383a9f209ede",
            "file": "src/app/views/credit-report/credit-report/credit-report.pipe.ts",
            "type": "pipe",
            "description": "",
            "properties": [
                {
                    "name": "creditReportAccounts",
                    "type": "ICreditReportCardInputs[] | undefined",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "tradeLines",
                    "type": "ITradeLinePartition | ITradeLinePartition[] | undefined",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        112
                    ]
                }
            ],
            "methods": [
                {
                    "name": "filterTradelines",
                    "args": [
                        {
                            "name": "partitions",
                            "type": "ITradeLinePartition[] | ITradeLinePartition"
                        },
                        {
                            "name": "prefs",
                            "type": "PreferencesStateModel"
                        }
                    ],
                    "optional": false,
                    "returnType": "CreditReportPipe",
                    "typeParameters": [],
                    "line": 45,
                    "description": "<p>Filters the tradeline by the negative status code</p>\n",
                    "modifierKind": [
                        112
                    ],
                    "jsdoctags": [
                        {
                            "name": "partitions",
                            "type": "ITradeLinePartition[] | ITradeLinePartition",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "prefs",
                            "type": "PreferencesStateModel",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "tagName": {
                                "pos": 1801,
                                "end": 1808,
                                "flags": 0,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ]
                },
                {
                    "name": "getFirstFields",
                    "args": [
                        {
                            "name": "partition",
                            "type": "ITradeLinePartition | undefined"
                        }
                    ],
                    "optional": false,
                    "returnType": "literal type",
                    "typeParameters": [],
                    "line": 177,
                    "description": "<p>Helper function to get the label and value for the first fields</p>\n",
                    "modifierKind": [
                        112
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 6077,
                                "end": 6086,
                                "flags": 0,
                                "escapedText": "partition"
                            },
                            "type": "ITradeLinePartition | undefined",
                            "tagName": {
                                "pos": 6037,
                                "end": 6042,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": "",
                            "typeExpression": {
                                "pos": 6043,
                                "end": 6076,
                                "flags": 0,
                                "kind": 277,
                                "type": {
                                    "pos": 6044,
                                    "end": 6075,
                                    "flags": 2097152,
                                    "kind": 168,
                                    "types": [
                                        {
                                            "pos": 6044,
                                            "end": 6063,
                                            "flags": 2097152,
                                            "kind": 161,
                                            "typeName": {
                                                "pos": 6044,
                                                "end": 6063,
                                                "flags": 2097152,
                                                "escapedText": "ITradeLinePartition"
                                            }
                                        },
                                        {
                                            "pos": 6065,
                                            "end": 6075,
                                            "flags": 2097152,
                                            "kind": 140
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "tagName": {
                                "pos": 6093,
                                "end": 6100,
                                "flags": 0,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ]
                },
                {
                    "name": "getSecondFields",
                    "args": [
                        {
                            "name": "partition",
                            "type": "ITradeLinePartition | undefined"
                        }
                    ],
                    "optional": false,
                    "returnType": "literal type",
                    "typeParameters": [],
                    "line": 207,
                    "description": "<p>Helper function to get the label and value for the second fields</p>\n",
                    "modifierKind": [
                        112
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 7209,
                                "end": 7218,
                                "flags": 0,
                                "escapedText": "partition"
                            },
                            "type": "ITradeLinePartition | undefined",
                            "tagName": {
                                "pos": 7169,
                                "end": 7174,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": "",
                            "typeExpression": {
                                "pos": 7175,
                                "end": 7208,
                                "flags": 0,
                                "kind": 277,
                                "type": {
                                    "pos": 7176,
                                    "end": 7207,
                                    "flags": 2097152,
                                    "kind": 168,
                                    "types": [
                                        {
                                            "pos": 7176,
                                            "end": 7195,
                                            "flags": 2097152,
                                            "kind": 161,
                                            "typeName": {
                                                "pos": 7176,
                                                "end": 7195,
                                                "flags": 2097152,
                                                "escapedText": "ITradeLinePartition"
                                            }
                                        },
                                        {
                                            "pos": 7197,
                                            "end": 7207,
                                            "flags": 2097152,
                                            "kind": 140
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "tagName": {
                                "pos": 7225,
                                "end": 7232,
                                "flags": 0,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ]
                },
                {
                    "name": "groupCreditReportAccounts",
                    "args": [
                        {
                            "name": "reports",
                            "type": "ICreditReportCardInputs[] | undefined"
                        }
                    ],
                    "optional": false,
                    "returnType": "ICreditReportCardGroup[]",
                    "typeParameters": [],
                    "line": 153,
                    "description": "<p>Filters and groups the cards according to the account types</p>\n",
                    "modifierKind": [
                        112
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 5233,
                                "end": 5240,
                                "flags": 0,
                                "escapedText": "reports"
                            },
                            "type": "ICreditReportCardInputs[] | undefined",
                            "tagName": {
                                "pos": 5187,
                                "end": 5192,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": "",
                            "typeExpression": {
                                "pos": 5193,
                                "end": 5232,
                                "flags": 0,
                                "kind": 277,
                                "type": {
                                    "pos": 5194,
                                    "end": 5231,
                                    "flags": 2097152,
                                    "kind": 168,
                                    "types": [
                                        {
                                            "pos": 5194,
                                            "end": 5219,
                                            "flags": 2097152,
                                            "kind": 166,
                                            "elementType": {
                                                "pos": 5194,
                                                "end": 5217,
                                                "flags": 2097152,
                                                "kind": 161,
                                                "typeName": {
                                                    "pos": 5194,
                                                    "end": 5217,
                                                    "flags": 2097152,
                                                    "escapedText": "ICreditReportCardInputs"
                                                }
                                            }
                                        },
                                        {
                                            "pos": 5221,
                                            "end": 5231,
                                            "flags": 2097152,
                                            "kind": 140
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "tagName": {
                                "pos": 5247,
                                "end": 5254,
                                "flags": 0,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ]
                },
                {
                    "name": "mapTradeLineToAccount",
                    "args": [
                        {
                            "name": "tradeLines",
                            "type": "ITradeLinePartition[]"
                        }
                    ],
                    "optional": false,
                    "returnType": "CreditReportPipe",
                    "typeParameters": [],
                    "line": 127,
                    "description": "<p>Map the tradeline object to the negative account object</p>\n",
                    "modifierKind": [
                        112
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 4283,
                                "end": 4293,
                                "flags": 0,
                                "escapedText": "tradeLines"
                            },
                            "type": "ITradeLinePartition[]",
                            "tagName": {
                                "pos": 4253,
                                "end": 4258,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": "",
                            "typeExpression": {
                                "pos": 4259,
                                "end": 4282,
                                "flags": 0,
                                "kind": 277,
                                "type": {
                                    "pos": 4260,
                                    "end": 4281,
                                    "flags": 2097152,
                                    "kind": 166,
                                    "elementType": {
                                        "pos": 4260,
                                        "end": 4279,
                                        "flags": 2097152,
                                        "kind": 161,
                                        "typeName": {
                                            "pos": 4260,
                                            "end": 4279,
                                            "flags": 2097152,
                                            "escapedText": "ITradeLinePartition"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            "tagName": {
                                "pos": 4300,
                                "end": 4307,
                                "flags": 0,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ]
                },
                {
                    "name": "sortByAccountType",
                    "args": [
                        {
                            "name": "tradeLines",
                            "type": "ITradeLinePartition[]"
                        }
                    ],
                    "optional": false,
                    "returnType": "CreditReportPipe",
                    "typeParameters": [],
                    "line": 80,
                    "description": "<p>Sorts the tradeline by the account type</p>\n",
                    "modifierKind": [
                        112
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 3042,
                                "end": 3052,
                                "flags": 0,
                                "escapedText": "tradeLines"
                            },
                            "type": "ITradeLinePartition[]",
                            "tagName": {
                                "pos": 3012,
                                "end": 3017,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": "",
                            "typeExpression": {
                                "pos": 3018,
                                "end": 3041,
                                "flags": 0,
                                "kind": 277,
                                "type": {
                                    "pos": 3019,
                                    "end": 3040,
                                    "flags": 2097152,
                                    "kind": 166,
                                    "elementType": {
                                        "pos": 3019,
                                        "end": 3038,
                                        "flags": 2097152,
                                        "kind": 161,
                                        "typeName": {
                                            "pos": 3019,
                                            "end": 3038,
                                            "flags": 2097152,
                                            "escapedText": "ITradeLinePartition"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            "tagName": {
                                "pos": 3059,
                                "end": 3066,
                                "flags": 0,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ]
                },
                {
                    "name": "sortByDateOpened",
                    "args": [
                        {
                            "name": "tradeLines",
                            "type": "ITradeLinePartition[]"
                        }
                    ],
                    "optional": false,
                    "returnType": "CreditReportPipe",
                    "typeParameters": [],
                    "line": 102,
                    "description": "<p>Sorts the tradeline by the date opened keeping the sort by account type</p>\n",
                    "modifierKind": [
                        112
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 3657,
                                "end": 3667,
                                "flags": 0,
                                "escapedText": "tradeLines"
                            },
                            "type": "ITradeLinePartition[]",
                            "tagName": {
                                "pos": 3627,
                                "end": 3632,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": "",
                            "typeExpression": {
                                "pos": 3633,
                                "end": 3656,
                                "flags": 0,
                                "kind": 277,
                                "type": {
                                    "pos": 3634,
                                    "end": 3655,
                                    "flags": 2097152,
                                    "kind": 166,
                                    "elementType": {
                                        "pos": 3634,
                                        "end": 3653,
                                        "flags": 2097152,
                                        "kind": 161,
                                        "typeName": {
                                            "pos": 3634,
                                            "end": 3653,
                                            "flags": 2097152,
                                            "escapedText": "ITradeLinePartition"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            "tagName": {
                                "pos": 3674,
                                "end": 3681,
                                "flags": 0,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ]
                },
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "report",
                            "type": "IMergeReport"
                        },
                        {
                            "name": "prefs",
                            "type": "PreferencesStateModel"
                        }
                    ],
                    "optional": false,
                    "returnType": "ICreditReportCardGroup[]",
                    "typeParameters": [],
                    "line": 22,
                    "jsdoctags": [
                        {
                            "name": "report",
                            "type": "IMergeReport",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "prefs",
                            "type": "PreferencesStateModel",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "ngname": "creditReport",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\nimport { ICreditReportCardInputs } from '@shared/components/cards/credit-report-card/credit-report-card.component';\nimport { SnapshotStatus } from '@shared/components/cards/snapshot-display-card/snapshot-display-card.component';\nimport {\n  CreditReportGroups,\n  CREDIT_REPORT_GROUPS,\n} from '@shared/data/credit-report';\nimport { POSITIVE_PAY_STATUS_CODES } from '@shared/data/pay-status-codes';\nimport {\n  IMergeReport,\n  ITradeLinePartition,\n} from '@shared/interfaces/merge-report.interface';\nimport { PreferencesStateModel } from '@store/preferences';\nimport { ICreditReportCardGroup } from '@views/credit-report/credit-report-pure/credit-report-pure.component';\n\n@Pipe({\n  name: 'creditReport',\n})\nexport class CreditReportPipe implements PipeTransform {\n  private tradeLines!: ITradeLinePartition | ITradeLinePartition[] | undefined;\n  private creditReportAccounts: ICreditReportCardInputs[] | undefined;\n  transform(\n    report: IMergeReport,\n    prefs: PreferencesStateModel\n  ): ICreditReportCardGroup[] {\n    this.tradeLines = report.TrueLinkCreditReportType.TradeLinePartition;\n\n    if (!this.tradeLines) return [{} as ICreditReportCardGroup];\n    return this.tradeLines instanceof Array\n      ? this.filterTradelines(this.tradeLines, prefs)\n          .sortByAccountType(this.tradeLines)\n          .sortByDateOpened(this.tradeLines)\n          .mapTradeLineToAccount(this.tradeLines)\n          .groupCreditReportAccounts(this.creditReportAccounts)\n      : this.filterTradelines(this.tradeLines, prefs)\n          .mapTradeLineToAccount([this.tradeLines])\n          .groupCreditReportAccounts(this.creditReportAccounts);\n  }\n\n  /**\n   * Filters the tradeline by the negative status code\n   * @param {ITradeLinePartition[]} tradeLines\n   * @returns\n   */\n  private filterTradelines(\n    partitions: ITradeLinePartition[] | ITradeLinePartition,\n    prefs: PreferencesStateModel\n  ): CreditReportPipe {\n    const filters = prefs.showAllAccounts;\n    if (!filters) return this;\n    if (partitions instanceof Array) {\n      this.tradeLines = partitions.filter((item) => {\n        const sym = item.accountTypeSymbol?.toLowerCase() || '';\n        const group: CreditReportGroups =\n          CREDIT_REPORT_GROUPS[sym]?.group || '';\n        const status = item.Tradeline?.PayStatus?.symbol || '';\n        const pos = POSITIVE_PAY_STATUS_CODES[`${status}`] || null;\n        if (filters[group]) return true;\n        if (!filters[group] && pos) return false;\n        if (!filters[group] && !pos) return true;\n        return true;\n      });\n    } else {\n      const sym = partitions.accountTypeSymbol || '';\n      const group: CreditReportGroups = CREDIT_REPORT_GROUPS[sym].group;\n      const pos =\n        POSITIVE_PAY_STATUS_CODES[\n          `${partitions.Tradeline?.PayStatus?.symbol}`\n        ] || null;\n      this.tradeLines = !(!filters[group] && pos) ? [partitions] : [];\n    }\n    return this;\n  }\n\n  /**\n   * Sorts the tradeline by the account type\n   * @param {ITradeLinePartition[]} tradeLines\n   * @returns\n   */\n  private sortByAccountType(\n    tradeLines: ITradeLinePartition[]\n  ): CreditReportPipe {\n    this.tradeLines = [\n      ...tradeLines.sort((a, b) => {\n        const symA = a.accountTypeSymbol?.toLowerCase();\n        const symB = b.accountTypeSymbol?.toLowerCase();\n        if (!symA || !symB) return 0;\n        return (\n          CREDIT_REPORT_GROUPS[symA]['order'] -\n          CREDIT_REPORT_GROUPS[symB]['order']\n        );\n      }),\n    ];\n    return this;\n  }\n\n  /**\n   * Sorts the tradeline by the date opened keeping the sort by account type\n   * @param {ITradeLinePartition[]} tradeLines\n   * @returns\n   */\n  private sortByDateOpened(\n    tradeLines: ITradeLinePartition[]\n  ): CreditReportPipe {\n    this.tradeLines = [\n      ...tradeLines.sort((a, b) => {\n        if (a.accountTypeSymbol !== b.accountTypeSymbol) {\n          return 0;\n        }\n        if (a.Tradeline?.dateOpened! < b.Tradeline?.dateOpened!) {\n          return 1;\n        }\n        if (a.Tradeline?.dateOpened! > b.Tradeline?.dateOpened!) {\n          return -1;\n        }\n        return 0;\n      }),\n    ];\n    return this;\n  }\n\n  /**\n   * Map the tradeline object to the negative account object\n   * @param {ITradeLinePartition[]} tradeLines\n   * @returns\n   */\n  private mapTradeLineToAccount(\n    tradeLines: ITradeLinePartition[]\n  ): CreditReportPipe {\n    this.creditReportAccounts = tradeLines.map((item) => {\n      const firstField = this.getFirstFields(item);\n      const secondField = this.getSecondFields(item);\n      return {\n        type: item.accountTypeSymbol,\n        creditorName: item.Tradeline?.creditorName,\n        isOpen: item.Tradeline?.OpenClosed,\n        firstFieldName: firstField.firstFieldName,\n        firstFieldValue: firstField.firstFieldValue,\n        secondFieldName: secondField.secondFieldName,\n        secondFieldValue: secondField.secondFieldValue,\n        thirdFieldName: 'Payment Status',\n        thirdFieldValue: item.Tradeline?.PayStatus?.description,\n      } as ICreditReportCardInputs;\n    });\n    return this;\n  }\n\n  /**\n   * Filters and groups the cards according to the account types\n   * @param {ICreditReportCardInputs[] | undefined} reports\n   * @returns\n   */\n  private groupCreditReportAccounts(\n    reports: ICreditReportCardInputs[] | undefined\n  ): ICreditReportCardGroup[] {\n    if (!reports) return [{} as ICreditReportCardGroup];\n    let res: Record<string, any> = {};\n    reports.forEach((r) => {\n      let index = CREDIT_REPORT_GROUPS[r.type.toLowerCase()]['group'];\n      res[index] = {\n        title: CREDIT_REPORT_GROUPS[r.type.toLowerCase()]['title'],\n        group: CREDIT_REPORT_GROUPS[r.type.toLowerCase()]['group'],\n        cards: [...res[index]['cards'], r],\n      };\n    });\n    let results: ICreditReportCardGroup[] = Object.keys(res).map((k) => {\n      return { ...res[k] } as ICreditReportCardGroup;\n    });\n    return results;\n  }\n\n  /**\n   * Helper function to get the label and value for the first fields\n   * @param {ITradeLinePartition | undefined} partition\n   * @returns\n   */\n  private getFirstFields(\n    partition: ITradeLinePartition | undefined\n  ): { firstFieldName: string; firstFieldValue: string | number } {\n    const sym = partition?.accountTypeSymbol?.toLowerCase();\n    if (!sym) return { firstFieldName: 'Unknown', firstFieldValue: 'Unknown' };\n    const group: CreditReportGroups = CREDIT_REPORT_GROUPS[sym]['group'];\n    switch (group) {\n      case CreditReportGroups.CreditCards:\n      case CreditReportGroups.InstallmentLoans:\n      case CreditReportGroups.Mortgages:\n        return {\n          firstFieldName: 'Current Balance',\n          firstFieldValue: partition?.Tradeline?.currentBalance || 0,\n        };\n      case CreditReportGroups.CollectionsAccounts:\n        return {\n          firstFieldName: 'Original Creditor',\n          firstFieldValue:\n            partition?.Tradeline?.CollectionTrade?.originalCreditor || '',\n        };\n      default:\n        return { firstFieldName: 'Unknown', firstFieldValue: 'Unknown' };\n    }\n  }\n\n  /**\n   * Helper function to get the label and value for the second fields\n   * @param {ITradeLinePartition | undefined} partition\n   * @returns\n   */\n  private getSecondFields(\n    partition: ITradeLinePartition | undefined\n  ): { secondFieldName: string; secondFieldValue: string | number } {\n    const sym = partition?.accountTypeSymbol?.toLowerCase();\n    if (!sym)\n      return { secondFieldName: 'Unknown', secondFieldValue: 'Unknown' };\n    const group = CREDIT_REPORT_GROUPS[sym]['group'];\n    switch (group) {\n      case CreditReportGroups.CreditCards:\n        return {\n          secondFieldName: 'Credit Limit',\n          secondFieldValue:\n            partition?.Tradeline?.GrantedTrade?.CreditLimit || 0,\n        };\n      case CreditReportGroups.CollectionsAccounts:\n        return {\n          secondFieldName: 'Original Creditor',\n          secondFieldValue:\n            partition?.Tradeline?.CollectionTrade?.originalCreditor || '',\n        };\n      case CreditReportGroups.InstallmentLoans:\n        return {\n          secondFieldName: 'Original Loan Amount',\n          secondFieldValue: partition?.Tradeline?.highBalance || '',\n        };\n      case CreditReportGroups.Mortgages:\n        return {\n          secondFieldName: 'Loan Amount',\n          secondFieldValue: partition?.Tradeline?.highBalance || '',\n        };\n      default:\n        return { secondFieldName: 'Unknown', secondFieldValue: 'Unknown' };\n    }\n  }\n}\n"
        },
        {
            "name": "FilledChecktextProgressbarPipe",
            "id": "pipe-FilledChecktextProgressbarPipe-bbf1cbae96b352df2d8bbfebad764188",
            "file": "src/app/shared/components/progressbars/filled-checktext-progressbar/filled-checktext-progressbar.pipe.ts",
            "type": "pipe",
            "description": "",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "value",
                            "type": "unknown"
                        },
                        {
                            "name": "args",
                            "type": "unknown[]",
                            "dotDotDotToken": true
                        }
                    ],
                    "optional": false,
                    "returnType": "unknown",
                    "typeParameters": [],
                    "line": 8,
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "unknown",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "args",
                            "type": "unknown[]",
                            "dotDotDotToken": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "ngname": "filledChecktextProgressbar",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'filledChecktextProgressbar'\n})\nexport class FilledChecktextProgressbarPipe implements PipeTransform {\n\n  transform(value: unknown, ...args: unknown[]): unknown {\n    return null;\n  }\n\n}\n"
        },
        {
            "name": "FilledClosingAlertPipe",
            "id": "pipe-FilledClosingAlertPipe-5a48fea4c9331d6343a49d2e86ee199a",
            "file": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.pipe.ts",
            "type": "pipe",
            "description": "",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "value",
                            "type": "IFilledClosingAlertConfig"
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 8,
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "IFilledClosingAlertConfig",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "ngname": "filledClosingAlert",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\nimport { IFilledClosingAlertConfig } from '@shared/components/alerts/filled-closing-alert/filled-closing-alert.component';\n\n@Pipe({\n  name: 'filledClosingAlert',\n})\nexport class FilledClosingAlertPipe implements PipeTransform {\n  transform(value: IFilledClosingAlertConfig): string {\n    let cls = `${value.backgroundColor}`;\n    cls = `${cls} ${sizeSpecificClass[value.size]}`;\n    return cls;\n  }\n}\n\nconst sizeSpecificClass: Record<string, any> = {\n  xs: 'max-w-xs',\n  sm: 'max-w-sm',\n  base: 'max-w-md',\n  lg: 'max-w-lg',\n  xl: 'max-w-xl',\n};\n"
        },
        {
            "name": "FilledOnlytextBadgePipe",
            "id": "pipe-FilledOnlytextBadgePipe-462121df0debfc3d7c8652f49a44827a",
            "file": "src/app/shared/components/badges/filled-onlytext-badge/filled-onlytext-badge.pipe.ts",
            "type": "pipe",
            "description": "",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "value",
                            "type": "IFilledOnlytextBadgeConfig"
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 8,
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "IFilledOnlytextBadgeConfig",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "ngname": "filledOnlytextBadge",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\nimport { IFilledOnlytextBadgeConfig } from '@shared/components/badges/filled-onlytext-badge/filled-onlytext-badge.component';\n\n@Pipe({\n  name: 'filledOnlytextBadge',\n})\nexport class FilledOnlytextBadgePipe implements PipeTransform {\n  transform(value: IFilledOnlytextBadgeConfig): string {\n    let cls = `${value.color} ${value.backgroundColor}`;\n    cls = `${cls} ${sizeSpecificClass[value.size]}`;\n    return cls;\n  }\n}\n\nconst sizeSpecificClass: Record<string, any> = {\n  sm: 'text-xs px-2 py-1',\n  base: 'text-xs px-2 py-1',\n  lg: 'text-xs px-2 py-1',\n};\n"
        },
        {
            "name": "FilledOnlytextButtonPipe",
            "id": "pipe-FilledOnlytextButtonPipe-b46fc09fdb7c1deb9a51b5a18829847d",
            "file": "src/app/shared/components/buttons/filled-onlytext-button/filled-onlytext-button.pipe.ts",
            "type": "pipe",
            "description": "",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "value",
                            "type": "IFilledOnlyTextButtonConfig"
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 8,
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "IFilledOnlyTextButtonConfig",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "ngname": "filledOnlytextButton",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\nimport { IFilledOnlyTextButtonConfig } from '@shared/components/buttons/filled-onlytext-button/filled-onlytext-button.component';\n\n@Pipe({\n  name: 'filledOnlytextButton',\n})\nexport class FilledOnlytextButtonPipe implements PipeTransform {\n  transform(value: IFilledOnlyTextButtonConfig): string {\n    let cls = `${value.backgroundColor} ${value.color} active:${value.activeColor}`;\n    cls = `${cls} ${sizeSpecificClass[value.buttonSize]}`;\n    return cls;\n  }\n}\n\nconst sizeSpecificClass: Record<string, any> = {\n  sm: 'text-xs px-4 py-2 hover:shadow-md',\n  base: 'text-sm px-6 py-3 hover:shadow-lg',\n  lg: 'text-base px-8 py-3 hover:shadow-lg',\n};\n"
        },
        {
            "name": "KycKbaquestionsPipe",
            "id": "pipe-KycKbaquestionsPipe-cff51bdea21700a8af05001db894d404",
            "file": "src/app/views/kyc-kbaquestions/kyc-kbaquestions/kyc-kbaquestions.pipe.ts",
            "type": "pipe",
            "description": "",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "xmlString",
                            "type": "string | null | undefined"
                        },
                        {
                            "name": "args",
                            "type": "unknown[]",
                            "dotDotDotToken": true
                        }
                    ],
                    "optional": false,
                    "returnType": "ITransunionKBAQuestion[]",
                    "typeParameters": [],
                    "line": 12,
                    "jsdoctags": [
                        {
                            "name": "xmlString",
                            "type": "string | null | undefined",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "args",
                            "type": "unknown[]",
                            "dotDotDotToken": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "ngname": "kycKbaquestions",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\nimport {\n  ITransunionKBAQuestion,\n  ITransunionKBAQuestions,\n} from '@shared/interfaces/tu-kba-questions.interface';\nimport * as parser from 'fast-xml-parser';\n\n@Pipe({\n  name: 'kycKbaquestions',\n})\nexport class KycKbaquestionsPipe implements PipeTransform {\n  transform(\n    xmlString: string | null | undefined,\n    ...args: unknown[]\n  ): ITransunionKBAQuestion[] {\n    if (!xmlString) return [];\n    const xml: ITransunionKBAQuestions = parser.parse(xmlString);\n    const questions = xml.ChallengeConfigurationType.MultiChoiceQuestion;\n    return questions instanceof Array ? questions : [questions];\n  }\n}\n"
        },
        {
            "name": "LinksOnlytextButtonPipe",
            "id": "pipe-LinksOnlytextButtonPipe-77489722b8358276425c52b184b65e15",
            "file": "src/app/shared/components/buttons/links-onlytext-button/links-onlytext-button.pipe.ts",
            "type": "pipe",
            "description": "",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "value",
                            "type": "ILinksOnlyTextButtonConfig"
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 8,
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "ILinksOnlyTextButtonConfig",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "ngname": "linksOnlytextButton",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\nimport { ILinksOnlyTextButtonConfig } from '@shared/components/buttons/links-onlytext-button/links-onlytext-button.component';\n\n@Pipe({\n  name: 'linksOnlytextButton',\n})\nexport class LinksOnlytextButtonPipe implements PipeTransform {\n  transform(value: ILinksOnlyTextButtonConfig): string {\n    let cls = `${value.color}`;\n    cls = `${cls} ${sizeSpecificClass[value.buttonSize]}`;\n    return cls;\n  }\n}\n\nconst sizeSpecificClass: Record<string, any> = {\n  sm: 'text-xs px-3 py-1',\n  base: 'text-sm px-6 py-2',\n  lg: 'text-base px-8 py-3',\n};\n"
        },
        {
            "name": "NegativeTradelinesPipe",
            "id": "pipe-NegativeTradelinesPipe-9243839e7ace8ae4591e7a45cc3bd4b6",
            "file": "src/app/views/negative-account/negative-account-initial/negative-tradelines.pipe.ts",
            "type": "pipe",
            "description": "",
            "properties": [
                {
                    "name": "tradeLines",
                    "type": "ITradeLinePartition | ITradeLinePartition[] | undefined",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        112
                    ]
                }
            ],
            "methods": [
                {
                    "name": "filterTradelines",
                    "args": [
                        {
                            "name": "tradeLines",
                            "type": "ITradeLinePartition[]"
                        }
                    ],
                    "optional": false,
                    "returnType": "NegativeTradelinesPipe",
                    "typeParameters": [],
                    "line": 34,
                    "description": "<p>Filters the tradeline by the negative status code</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1158,
                                "end": 1168,
                                "flags": 0,
                                "escapedText": "tradeLines"
                            },
                            "type": "ITradeLinePartition[]",
                            "tagName": {
                                "pos": 1128,
                                "end": 1133,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": "",
                            "typeExpression": {
                                "pos": 1134,
                                "end": 1157,
                                "flags": 0,
                                "kind": 277,
                                "type": {
                                    "pos": 1135,
                                    "end": 1156,
                                    "flags": 2097152,
                                    "kind": 166,
                                    "elementType": {
                                        "pos": 1135,
                                        "end": 1154,
                                        "flags": 2097152,
                                        "kind": 161,
                                        "typeName": {
                                            "pos": 1135,
                                            "end": 1154,
                                            "flags": 2097152,
                                            "escapedText": "ITradeLinePartition"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            "tagName": {
                                "pos": 1175,
                                "end": 1182,
                                "flags": 0,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ]
                },
                {
                    "name": "lookupAccountType",
                    "args": [
                        {
                            "name": "partition",
                            "type": "ITradeLinePartition | undefined"
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 129,
                    "description": "<p>Helper function to securely lookup the account type</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 4131,
                                "end": 4140,
                                "flags": 0,
                                "escapedText": "partition"
                            },
                            "type": "ITradeLinePartition | undefined",
                            "tagName": {
                                "pos": 4091,
                                "end": 4096,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": "",
                            "typeExpression": {
                                "pos": 4097,
                                "end": 4130,
                                "flags": 0,
                                "kind": 277,
                                "type": {
                                    "pos": 4098,
                                    "end": 4129,
                                    "flags": 2097152,
                                    "kind": 168,
                                    "types": [
                                        {
                                            "pos": 4098,
                                            "end": 4117,
                                            "flags": 2097152,
                                            "kind": 161,
                                            "typeName": {
                                                "pos": 4098,
                                                "end": 4117,
                                                "flags": 2097152,
                                                "escapedText": "ITradeLinePartition"
                                            }
                                        },
                                        {
                                            "pos": 4119,
                                            "end": 4129,
                                            "flags": 2097152,
                                            "kind": 140
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "tagName": {
                                "pos": 4147,
                                "end": 4154,
                                "flags": 0,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ]
                },
                {
                    "name": "lookupDisputeFlag",
                    "args": [
                        {
                            "name": "partition",
                            "type": "ITradeLinePartition | undefined"
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 161,
                    "description": "<p>Helper function to securely look up the dispute flag</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 5260,
                                "end": 5269,
                                "flags": 0,
                                "escapedText": "partition"
                            },
                            "type": "ITradeLinePartition | undefined",
                            "tagName": {
                                "pos": 5220,
                                "end": 5225,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": "",
                            "typeExpression": {
                                "pos": 5226,
                                "end": 5259,
                                "flags": 0,
                                "kind": 277,
                                "type": {
                                    "pos": 5227,
                                    "end": 5258,
                                    "flags": 2097152,
                                    "kind": 168,
                                    "types": [
                                        {
                                            "pos": 5227,
                                            "end": 5246,
                                            "flags": 2097152,
                                            "kind": 161,
                                            "typeName": {
                                                "pos": 5227,
                                                "end": 5246,
                                                "flags": 2097152,
                                                "escapedText": "ITradeLinePartition"
                                            }
                                        },
                                        {
                                            "pos": 5248,
                                            "end": 5258,
                                            "flags": 2097152,
                                            "kind": 140
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "tagName": {
                                "pos": 5276,
                                "end": 5283,
                                "flags": 0,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ]
                },
                {
                    "name": "lookupOriginalCreditor",
                    "args": [
                        {
                            "name": "partition",
                            "type": "ITradeLinePartition | undefined"
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 144,
                    "description": "<p>Helper function to securey look up the original creditor</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 4661,
                                "end": 4670,
                                "flags": 0,
                                "escapedText": "partition"
                            },
                            "type": "ITradeLinePartition | undefined",
                            "tagName": {
                                "pos": 4621,
                                "end": 4626,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": "",
                            "typeExpression": {
                                "pos": 4627,
                                "end": 4660,
                                "flags": 0,
                                "kind": 277,
                                "type": {
                                    "pos": 4628,
                                    "end": 4659,
                                    "flags": 2097152,
                                    "kind": 168,
                                    "types": [
                                        {
                                            "pos": 4628,
                                            "end": 4647,
                                            "flags": 2097152,
                                            "kind": 161,
                                            "typeName": {
                                                "pos": 4628,
                                                "end": 4647,
                                                "flags": 2097152,
                                                "escapedText": "ITradeLinePartition"
                                            }
                                        },
                                        {
                                            "pos": 4649,
                                            "end": 4659,
                                            "flags": 2097152,
                                            "kind": 140
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "tagName": {
                                "pos": 4677,
                                "end": 4684,
                                "flags": 0,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ]
                },
                {
                    "name": "mapTradeLineToAccount",
                    "args": [
                        {
                            "name": "tradeLines",
                            "type": "ITradeLinePartition[]"
                        }
                    ],
                    "optional": false,
                    "returnType": "INegativeAccountCardInputs[]",
                    "typeParameters": [],
                    "line": 97,
                    "description": "<p>Map the tradeline object to the negative account object</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 2861,
                                "end": 2871,
                                "flags": 0,
                                "escapedText": "tradeLines"
                            },
                            "type": "ITradeLinePartition[]",
                            "tagName": {
                                "pos": 2831,
                                "end": 2836,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": "",
                            "typeExpression": {
                                "pos": 2837,
                                "end": 2860,
                                "flags": 0,
                                "kind": 277,
                                "type": {
                                    "pos": 2838,
                                    "end": 2859,
                                    "flags": 2097152,
                                    "kind": 166,
                                    "elementType": {
                                        "pos": 2838,
                                        "end": 2857,
                                        "flags": 2097152,
                                        "kind": 161,
                                        "typeName": {
                                            "pos": 2838,
                                            "end": 2857,
                                            "flags": 2097152,
                                            "escapedText": "ITradeLinePartition"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            "tagName": {
                                "pos": 2878,
                                "end": 2885,
                                "flags": 0,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ]
                },
                {
                    "name": "sortByAccountType",
                    "args": [
                        {
                            "name": "tradeLines",
                            "type": "ITradeLinePartition[]"
                        }
                    ],
                    "optional": false,
                    "returnType": "NegativeTradelinesPipe",
                    "typeParameters": [],
                    "line": 48,
                    "description": "<p>Sorts the tradeline by the account type</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1557,
                                "end": 1567,
                                "flags": 0,
                                "escapedText": "tradeLines"
                            },
                            "type": "ITradeLinePartition[]",
                            "tagName": {
                                "pos": 1527,
                                "end": 1532,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": "",
                            "typeExpression": {
                                "pos": 1533,
                                "end": 1556,
                                "flags": 0,
                                "kind": 277,
                                "type": {
                                    "pos": 1534,
                                    "end": 1555,
                                    "flags": 2097152,
                                    "kind": 166,
                                    "elementType": {
                                        "pos": 1534,
                                        "end": 1553,
                                        "flags": 2097152,
                                        "kind": 161,
                                        "typeName": {
                                            "pos": 1534,
                                            "end": 1553,
                                            "flags": 2097152,
                                            "escapedText": "ITradeLinePartition"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            "tagName": {
                                "pos": 1574,
                                "end": 1581,
                                "flags": 0,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ]
                },
                {
                    "name": "sortByDateOpened",
                    "args": [
                        {
                            "name": "tradeLines",
                            "type": "ITradeLinePartition[]"
                        }
                    ],
                    "optional": false,
                    "returnType": "NegativeTradelinesPipe",
                    "typeParameters": [],
                    "line": 74,
                    "description": "<p>Sorts the tradeline by the date opened keeping the sort by account type</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 2245,
                                "end": 2255,
                                "flags": 0,
                                "escapedText": "tradeLines"
                            },
                            "type": "ITradeLinePartition[]",
                            "tagName": {
                                "pos": 2215,
                                "end": 2220,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": "",
                            "typeExpression": {
                                "pos": 2221,
                                "end": 2244,
                                "flags": 0,
                                "kind": 277,
                                "type": {
                                    "pos": 2222,
                                    "end": 2243,
                                    "flags": 2097152,
                                    "kind": 166,
                                    "elementType": {
                                        "pos": 2222,
                                        "end": 2241,
                                        "flags": 2097152,
                                        "kind": 161,
                                        "typeName": {
                                            "pos": 2222,
                                            "end": 2241,
                                            "flags": 2097152,
                                            "escapedText": "ITradeLinePartition"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            "tagName": {
                                "pos": 2262,
                                "end": 2269,
                                "flags": 0,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ]
                },
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "report",
                            "type": "IMergeReport"
                        }
                    ],
                    "optional": false,
                    "returnType": "[] | undefined",
                    "typeParameters": [],
                    "line": 18,
                    "jsdoctags": [
                        {
                            "name": "report",
                            "type": "IMergeReport",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "ngname": "negativeTradelines",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\nimport { INegativeAccountCardInputs } from '@shared/components/cards/negative-account-card/negative-account-card.component';\nimport {\n  BRAVE_ACCOUNT_TYPE,\n  NEGATIVE_PAY_STATUS_CODES,\n} from '@shared/data/pay-status-codes';\nimport {\n  IMergeReport,\n  ITradeLinePartition,\n} from '@shared/interfaces/merge-report.interface';\n\n@Pipe({\n  name: 'negativeTradelines',\n})\nexport class NegativeTradelinesPipe implements PipeTransform {\n  private tradeLines!: ITradeLinePartition | ITradeLinePartition[] | undefined;\n\n  transform(report: IMergeReport): INegativeAccountCardInputs[] | undefined {\n    this.tradeLines = report.TrueLinkCreditReportType.TradeLinePartition;\n    if (!this.tradeLines) return [defaultTradeline];\n    return this.tradeLines instanceof Array\n      ? this.filterTradelines(this.tradeLines)\n          .sortByAccountType(this.tradeLines)\n          .sortByDateOpened(this.tradeLines)\n          .mapTradeLineToAccount(this.tradeLines)\n      : this.mapTradeLineToAccount([this.tradeLines]);\n  }\n\n  /**\n   * Filters the tradeline by the negative status code\n   * @param {ITradeLinePartition[]} tradeLines\n   * @returns\n   */\n  filterTradelines(tradeLines: ITradeLinePartition[]): NegativeTradelinesPipe {\n    this.tradeLines = tradeLines.filter((item) => {\n      const status =\n        NEGATIVE_PAY_STATUS_CODES[`${item.Tradeline?.PayStatus?.symbol}`];\n      return !!status;\n    });\n    return this;\n  }\n\n  /**\n   * Sorts the tradeline by the account type\n   * @param {ITradeLinePartition[]} tradeLines\n   * @returns\n   */\n  sortByAccountType(tradeLines: ITradeLinePartition[]): NegativeTradelinesPipe {\n    this.tradeLines = [\n      ...tradeLines.sort((a, b) => {\n        if (\n          a.accountTypeSymbol?.toLowerCase() === 'y' &&\n          b.accountTypeDescription?.toLowerCase() !== 'y'\n        ) {\n          return 1;\n        }\n        if (\n          a.accountTypeSymbol?.toLowerCase() !== 'y' &&\n          b.accountTypeDescription?.toLowerCase() === 'y'\n        ) {\n          return -1;\n        }\n        return 0;\n      }),\n    ];\n    return this;\n  }\n\n  /**\n   * Sorts the tradeline by the date opened keeping the sort by account type\n   * @param {ITradeLinePartition[]} tradeLines\n   * @returns\n   */\n  sortByDateOpened(tradeLines: ITradeLinePartition[]): NegativeTradelinesPipe {\n    this.tradeLines = [\n      ...tradeLines.sort((a, b) => {\n        if (a.accountTypeSymbol !== b.accountTypeSymbol) {\n          return 0;\n        }\n        if (a.Tradeline?.dateOpened! < b.Tradeline?.dateOpened!) {\n          return 1;\n        }\n        if (a.Tradeline?.dateOpened! > b.Tradeline?.dateOpened!) {\n          return -1;\n        }\n        return 0;\n      }),\n    ];\n    return this;\n  }\n\n  /**\n   * Map the tradeline object to the negative account object\n   * @param {ITradeLinePartition[]} tradeLines\n   * @returns\n   */\n  mapTradeLineToAccount(\n    tradeLines: ITradeLinePartition[]\n  ): INegativeAccountCardInputs[] {\n    const negativeAccounts = tradeLines.map((item) => {\n      return {\n        creditorName: item.Tradeline?.creditorName || '',\n        lastReported: item.Tradeline?.dateReported || '',\n        accountTypeDescription: this.lookupAccountType(item),\n        accountTypeDescriptionValue:\n          item.Tradeline?.OpenClosed?.description || '',\n        disputeFlag: 'Previously Disputed?',\n        originalCreditor: 'Original Creditor',\n        originalCreditorValue: this.lookupOriginalCreditor(item),\n        disputeFlagValue: this.lookupDisputeFlag(item),\n        accountDetail: {\n          accountNumber: item.Tradeline?.accountNumber || '',\n          typeOfCollection: item.accountTypeAbbreviation || '',\n          amountPastDue: item.Tradeline?.currentBalance || 0,\n          dateOpened: item.Tradeline?.dateOpened || '',\n          dateLastPayment: item.Tradeline?.GrantedTrade?.dateLastPayment || '',\n          remarks: item.Tradeline?.Remark?.customRemark || '',\n        },\n      };\n    });\n    return negativeAccounts;\n  }\n\n  /**\n   * Helper function to securely lookup the account type\n   * @param {ITradeLinePartition | undefined} partition\n   * @returns\n   */\n  lookupAccountType(partition: ITradeLinePartition | undefined): string {\n    if (!partition) return 'unknown';\n    const description = partition.accountTypeDescription;\n    const status =\n      BRAVE_ACCOUNT_TYPE[`${partition.Tradeline?.PayStatus?.symbol}`];\n    return partition.accountTypeSymbol?.toLowerCase() === 'y'\n      ? description || 'No Data / Unknown'\n      : status;\n  }\n\n  /**\n   * Helper function to securey look up the original creditor\n   * @param {ITradeLinePartition | undefined} partition\n   * @returns\n   */\n  lookupOriginalCreditor(partition: ITradeLinePartition | undefined): string {\n    if (!partition) return 'unknown';\n    const originalCreditor =\n      partition.Tradeline?.CollectionTrade?.originalCreditor;\n    const creditorName = partition.Tradeline?.creditorName || 'unknown';\n    if (partition.accountTypeSymbol?.toLowerCase() === 'y') {\n      return originalCreditor ? originalCreditor : creditorName;\n    } else {\n      return creditorName;\n    }\n  }\n\n  /**\n   * Helper function to securely look up the dispute flag\n   * @param {ITradeLinePartition | undefined} partition\n   * @returns\n   */\n  lookupDisputeFlag(partition: ITradeLinePartition | undefined): string {\n    if (!partition) return 'No';\n    const symbol = partition.Tradeline?.DisputeFlag?.description || 'not';\n    return symbol.indexOf('not') === -1 ? 'Yes' : 'No';\n  }\n}\n\nconst defaultTradeline = {\n  creditorName: '',\n  lastReported: '',\n  accountTypeDescription: '',\n  accountTypeDescriptionValue: 'No account type',\n  disputeFlag: 'Previously Disputed?',\n  originalCreditor: 'Original Creditor',\n  originalCreditorValue: '',\n  disputeFlagValue: '',\n  accountDetail: {\n    accountNumber: '',\n    typeOfCollection: '',\n    amountPastDue: -1,\n    dateOpened: '',\n    dateLastPayment: '',\n    remarks: '',\n  },\n};\n"
        },
        {
            "name": "OutlineInputPipe",
            "id": "pipe-OutlineInputPipe-fb3f896f3a1362e91bdd05efb64d26e6",
            "file": "src/app/shared/components/inputs/outline-input/outline-input.pipe.ts",
            "type": "pipe",
            "description": "",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "value",
                            "type": "IOutlineInputeConfig"
                        },
                        {
                            "name": "args",
                            "type": "unknown[]",
                            "dotDotDotToken": true
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 8,
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "IOutlineInputeConfig",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "args",
                            "type": "unknown[]",
                            "dotDotDotToken": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "ngname": "outlineInput",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\nimport { IOutlineInputeConfig } from '@shared/components/inputs/outline-input/outline-input.component';\n\n@Pipe({\n  name: 'outlineInput',\n})\nexport class OutlineInputPipe implements PipeTransform {\n  transform(value: IOutlineInputeConfig, ...args: unknown[]): string {\n    let cls = `${sizeSpecificClass[value.size]}`;\n    return cls;\n  }\n}\n\nconst sizeSpecificClass: Record<string, any> = {\n  sm: 'text-sm px-3 py-1',\n  base: 'text-sm px-3 py-3',\n  lg: 'text-base px-3 py-4',\n};\n"
        },
        {
            "name": "OutlineOnlytextButtonPipe",
            "id": "pipe-OutlineOnlytextButtonPipe-e2432c6c5c0189186ac3334ee0c946a5",
            "file": "src/app/shared/components/buttons/outline-onlytext-button/outline-onlytext-button.pipe.ts",
            "type": "pipe",
            "description": "",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "value",
                            "type": "IOutlineOnlyTextButtonConfig"
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 8,
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "IOutlineOnlyTextButtonConfig",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "ngname": "outlineOnlytextButton",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\nimport { IOutlineOnlyTextButtonConfig } from '@shared/components/buttons/outline-onlytext-button/outline-onlytext-button.component';\n\n@Pipe({\n  name: 'outlineOnlytextButton',\n})\nexport class OutlineOnlytextButtonPipe implements PipeTransform {\n  transform(value: IOutlineOnlyTextButtonConfig): string {\n    let cls = `${value.color} ${value.borderColor} hover:${value.hoverColor} active:${value.activeColor}`;\n    cls = `${cls} ${sizeSpecificClass[value.buttonSize]}`;\n    return cls;\n  }\n}\n\nconst sizeSpecificClass: Record<string, any> = {\n  sm: 'text-xs px-4 py-2',\n  base: 'text-sm px-6 py-3',\n  lg: 'text-base px-8 py-3',\n};\n"
        },
        {
            "name": "OutlineSelectInputPipe",
            "id": "pipe-OutlineSelectInputPipe-cb33b0fe9deaa4fb257ce299690297a5",
            "file": "src/app/shared/components/inputs/outline-select-input/outline-select-input.pipe.ts",
            "type": "pipe",
            "description": "",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "value",
                            "type": "IOutlineSelectInputConfig"
                        },
                        {
                            "name": "args",
                            "type": "unknown[]",
                            "dotDotDotToken": true
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 8,
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "IOutlineSelectInputConfig",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "args",
                            "type": "unknown[]",
                            "dotDotDotToken": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "ngname": "outlineSelectInput",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\nimport { IOutlineSelectInputConfig } from '@shared/components/inputs/outline-select-input/outline-select-input.component';\n\n@Pipe({\n  name: 'outlineSelectInput',\n})\nexport class OutlineSelectInputPipe implements PipeTransform {\n  transform(value: IOutlineSelectInputConfig, ...args: unknown[]): string {\n    let cls = `${sizeSpecificClass[value.size]}`;\n    return cls;\n  }\n}\n\nconst sizeSpecificClass: Record<string, any> = {\n  sm: 'text-sm px-1 py-1',\n  base: 'text-sm px-1 py-3',\n  lg: 'text-base px-1 py-4',\n};\n"
        },
        {
            "name": "ParseTradelineDetailsPipe",
            "id": "pipe-ParseTradelineDetailsPipe-29272cf0b91e700e0b213e2302f82f4e",
            "file": "src/app/shared/components/tradelines/tradeline-details/parse-tradeline-details.pipe.ts",
            "type": "pipe",
            "description": "",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "input",
                            "type": "Record<string | any>"
                        }
                    ],
                    "optional": false,
                    "returnType": "literal type[]",
                    "typeParameters": [],
                    "line": 7,
                    "jsdoctags": [
                        {
                            "name": "input",
                            "type": "Record<string | any>",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "ngname": "parseTradelineDetails",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'parseTradelineDetails',\n})\nexport class ParseTradelineDetailsPipe implements PipeTransform {\n  transform(input: Record<string, any>): { label: string; value: string }[] {\n    if (!input) return [];\n    if (!Object.keys(input).length) return [];\n    return Object.keys(input).map((k) => {\n      return {\n        label: labelMapping[k],\n        value: input[k].toString(),\n      };\n    });\n  }\n}\n\nconst labelMapping: Record<string, any> = {\n  originalCreditor: 'Original Creditor:',\n  creditType: 'Type of Account:',\n  dateOpened: 'Opened:',\n  accountDesignator: 'Responsibility:',\n  termMonths: 'Term:',\n  late30Count: 'Times 30/60/90 Days Late:',\n  late60Count: 'Times 30/60/90 Days Late:',\n  late90Count: 'Times 30/60/90 Days Late:',\n  amountPastDue: 'Amount Past Due:',\n  disputeFlag: 'Disputed:',\n};\n"
        },
        {
            "name": "SnapshotLabelPipe",
            "id": "pipe-SnapshotLabelPipe-8470f2e935e48391b10ff05f242ba70e",
            "file": "src/app/shared/components/cards/snapshot-display-card/snapshot-label.pipe.ts",
            "type": "pipe",
            "description": "",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "value",
                            "type": "any"
                        },
                        {
                            "name": "args",
                            "type": "any[]",
                            "dotDotDotToken": true
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 21,
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "args",
                            "type": "any[]",
                            "dotDotDotToken": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "ngname": "snapshotLabel",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\n\nexport enum LabelOfSnapshot {\n  Update = 'update',\n  Hidden = 'hidden',\n  New = 'new',\n  NoLabel = 'no-label'\n}\n\nconst enumStrNameOfLabel = {\n  [LabelOfSnapshot.Update]: { text: 'Updates', colorClass: 'text-brave-magenta' },\n  [LabelOfSnapshot.Hidden]: { text: 'Hidden Items', colorClass: 'text-lt-gray' },\n  [LabelOfSnapshot.New]: { text: 'New', colorClass: 'text-brave-blurple' },\n  [LabelOfSnapshot.NoLabel]: { text: '', colorClass: '' }\n};\n\n@Pipe({\n  name: 'snapshotLabel'\n})\nexport class SnapshotLabelPipe implements PipeTransform {\n  transform(value: any, ...args: any[]): string {\n    let result = '';\n    const typeOfOutput: 'color-class' | 'text' | undefined = args[0];\n    if (typeOfOutput !== undefined) {\n      const labelValue = enumStrNameOfLabel[value as LabelOfSnapshot];\n      result = typeOfOutput === 'text' ? labelValue.text : labelValue.colorClass;\n    }\n    return result;\n  }\n}\n"
        },
        {
            "name": "SnapshotStatusPipe",
            "id": "pipe-SnapshotStatusPipe-d90f7ba79ba20639660134079062cff2",
            "file": "src/app/shared/components/cards/snapshot-display-card/snapshot-status.pipe.ts",
            "type": "pipe",
            "description": "",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "value",
                            "type": "string"
                        },
                        {
                            "name": "args",
                            "type": "any[]",
                            "dotDotDotToken": true
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 15,
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "args",
                            "type": "any[]",
                            "dotDotDotToken": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "ngname": "snapshotStatus",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\nimport { SnapshotStatus } from './snapshot-display-card.component';\n\nconst enumStrColorCLassIndicator = {\n  [SnapshotStatus.Danger]: 'brave-danger',\n  [SnapshotStatus.Safe]: 'brave-safe',\n  [SnapshotStatus.Critical]: 'brave-critical',\n  [SnapshotStatus.Default]: 'lt-gray'\n};\n\n@Pipe({\n  name: 'snapshotStatus'\n})\nexport class SnapshotStatusPipe implements PipeTransform {\n  transform(value: string, ...args: any[]): string {\n    let result = '';\n\n    const outputStyle = args[0];\n    if (outerHeight !== undefined) {\n      const prefix = outputStyle === 'text' ? 'text-' : 'bg-';\n      result = prefix + enumStrColorCLassIndicator[value as SnapshotStatus];\n      if (outputStyle === 'text') {\n        result += ' text-3.5';\n      }\n    }\n    return result;\n  }\n}\n"
        }
    ],
    "interfaces": [
        {
            "name": "FlatForm",
            "id": "interface-FlatForm-61e4e3fcc80ad00ec4cf1aa6bf80cc32",
            "file": "src/app/views/kyc-base/kyc-base.component.ts",
            "type": "interface",
            "sourceCode": "import { Component, EventEmitter, Output } from '@angular/core';\nimport { AbstractControl, FormGroup } from '@angular/forms';\n\nexport interface FlatForm {\n  [key: string]: string;\n}\n\n@Component({\n  selector: 'brave-kyc-base',\n  template: '',\n})\nexport class KycBaseComponent {\n  @Output() nextClick: EventEmitter<void> = new EventEmitter();\n  @Output() backClick: EventEmitter<void> = new EventEmitter();\n  @Output() formSubmit: EventEmitter<FormGroup> = new EventEmitter();\n  @Output()\n  formError: EventEmitter<{\n    [key: string]: AbstractControl;\n  }> = new EventEmitter();\n\n  constructor() {}\n\n  formatAttributes(\n    form: FormGroup,\n    mapObj: Record<string, any>,\n    inputType: string = 'input'\n  ): FlatForm {\n    return this.flattenAttributes(form.value, mapObj, inputType);\n  }\n\n  flattenAttributes(\n    formValues: any,\n    mapObj: Record<string, any>,\n    inputType: string\n  ): FlatForm {\n    let values: FlatForm = {};\n    Object.keys(formValues).forEach((key) => {\n      if (mapObj[key]) {\n        values[key] = formValues[key][`${inputType}`];\n      }\n    });\n    return values;\n  }\n}\n",
            "properties": [],
            "indexSignatures": [
                {
                    "id": "index-declaration-61e4e3fcc80ad00ec4cf1aa6bf80cc32",
                    "args": [
                        {
                            "name": "key",
                            "type": "string"
                        }
                    ],
                    "returnType": "string",
                    "line": 4
                }
            ],
            "kind": 159,
            "methods": []
        },
        {
            "name": "FlatForm",
            "id": "interface-FlatForm-88dd12de4882fcf3738f70a0c704fa5e-1",
            "file": "src/app/views/kyc-welcome/kyc-welcome/kyc-welcome.component.ts",
            "type": "interface",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { AbstractControl, FormGroup } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { UserAttributesInput } from '@shared/services/aws/api.service';\nimport { KycService } from '@shared/services/kyc/kyc.service';\nimport { KycBaseComponent } from '@views/kyc-base/kyc-base.component';\n\ninterface FlatForm {\n  [key: string]: string;\n}\n\n@Component({\n  selector: 'brave-kyc-welcome',\n  templateUrl: './kyc-welcome.component.html',\n})\nexport class KycWelcomeComponent extends KycBaseComponent implements OnInit {\n  stepID = 0;\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n    private kycService: KycService\n  ) {\n    super();\n  }\n\n  ngOnInit(): void {\n    this.kycService.activateStep(this.stepID);\n  }\n\n  async goToNext(form: FormGroup): Promise<void> {\n    if (form.valid) {\n      // write to state...TODO write to DB\n      const attrs = {\n        name: {\n          ...this.formatAttributes(form, name),\n        },\n        dob: {\n          ...this.formatAttributes(form, dob),\n        },\n      } as UserAttributesInput;\n      await this.kycService.updateUserAttributesAsync(attrs);\n      this.kycService.completeStep(this.stepID);\n      this.router.navigate(['../address'], { relativeTo: this.route });\n    }\n  }\n\n  handleError(errors: { [key: string]: AbstractControl }): void {\n    console.log('form errors', errors);\n  }\n}\n\nconst name: Record<string, any> = {\n  first: true,\n  middle: true,\n  last: true,\n};\n\nconst dob: Record<string, any> = {\n  year: true,\n  month: true,\n  day: true,\n};\n",
            "properties": [],
            "indexSignatures": [
                {
                    "id": "index-declaration-88dd12de4882fcf3738f70a0c704fa5e",
                    "args": [
                        {
                            "name": "key",
                            "type": "string"
                        }
                    ],
                    "returnType": "string",
                    "line": 8
                }
            ],
            "kind": 159,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "FlatForm-1"
        },
        {
            "name": "FormFields",
            "id": "interface-FormFields-6f0ff2e88b3511b0c6727e84be58a763",
            "file": "src/app/shared/components/auth/sign-up/sign-up.component.ts",
            "type": "interface",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { BraveEmailValidator } from '@shared/validators/email.validator';\n\ninterface FormFields {\n  fullName: string;\n  username: string;\n  password: string;\n}\n\n@Component({\n  selector: 'brave-sign-up',\n  templateUrl: './sign-up.component.html',\n  styleUrls: ['./sign-up.component.css'],\n})\nexport class SignUpComponent {\n  signUpForm: FormGroup = {} as FormGroup;\n\n  constructor(private fb: FormBuilder) {\n    this.signUpForm = this.fb.group({\n      fullName: ['', [Validators.required]],\n      username: ['', [Validators.required, BraveEmailValidator]],\n      password: ['', [Validators.required, Validators.minLength(8)]],\n    });\n  }\n\n  get validForm() {\n    return this.signUpForm.valid;\n  }\n  get signUpValues() {\n    return this.signUpForm.value;\n  }\n\n  async signUpUser(formData: FormFields) {\n    if (!this.validForm) {\n      return;\n    }\n\n    const { username, password, fullName } = this.signUpValues;\n\n    // Auth.signUp({\n    //   username,\n    //   password,\n    //   attributes: {\n    //     email: username,\n    //     'custom:fullName': fullName,\n    //   },\n    // })\n    //   .then((_) => {\n    //     // fire fb pixel\n    //     // this.facebookService.fireCompleteRegistration(0.0, 'USD');\n    //     // this.googleService.fireSignUpEvent();\n    //     sessionStorage.setItem('userEmail', username);\n    //     const unconfirmedUserState = {\n    //       userFirstName: 'Guest',\n    //       userAttributes: {\n    //         'custom:firstName': 'Guest',\n    //         'custom:lastName': '',\n    //         'custom:legalFullName': '',\n    //         'custom:dob': '',\n    //         'custom:address': '',\n    //         email: username,\n    //         email_verified: false,\n    //         sub: '',\n    //       },\n    //       isSignedIn: true,\n    //       isAdmin: false,\n    //     };\n    //     this.accountMgmtService.updateUser(unconfirmedUserState); // signed up not confirmed...manually update state.\n    //     this.accountMgmtService.isWaiting$.next(false);\n    //     this.router.navigate(['/userportal/stepone']);\n    //   })\n    //   .catch((err) => {\n    //     this.error = true;\n    //     this.errorMessage = err.message;\n    //     this.accountMgmtService.isWaiting$.next(false);\n    //   });\n  }\n}\n",
            "properties": [
                {
                    "name": "fullName",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "password",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "username",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "IBaseModalRegularConfig",
            "id": "interface-IBaseModalRegularConfig-4e75336fda9cfe7684da063f9c81fbe5",
            "file": "src/app/shared/components/modals/base-modal-regular/base-modal-regular.component.ts",
            "type": "interface",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\nexport interface IBaseModalRegularConfig {\n  openButtonText: string;\n  title: string;\n  body: string;\n  actionButtonOneText: string;\n  actionButtonTwoText: string;\n}\n\n@Component({\n  selector: 'brave-base-modal-regular',\n  templateUrl: './base-modal-regular.component.html',\n})\nexport class BaseModalRegularComponent implements OnInit {\n  @Input() config: IBaseModalRegularConfig = {\n    openButtonText: 'Open',\n    title: 'Message Title',\n    body: 'Message Text',\n    actionButtonOneText: 'Cancel',\n    actionButtonTwoText: 'Continue',\n  };\n  @Output() actionOne: EventEmitter<any> = new EventEmitter();\n  @Output() actionTwo: EventEmitter<any> = new EventEmitter();\n\n  public showModal = false;\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  toggleModal() {\n    this.showModal = !this.showModal;\n  }\n}\n",
            "properties": [
                {
                    "name": "actionButtonOneText",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "actionButtonTwoText",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "body",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "openButtonText",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "title",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "IBaseModalSmallConfig",
            "id": "interface-IBaseModalSmallConfig-c0c60cde89791bd56210ebe83604fd32",
            "file": "src/app/shared/components/modals/base-modal-small/base-modal-small.component.ts",
            "type": "interface",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\nexport interface IBaseModalSmallConfig {\n  openButtonText: string;\n  title: string;\n  body: string;\n  actionButtonOneText: string;\n  actionButtonTwoText: string;\n}\n\n@Component({\n  selector: 'brave-base-modal-small',\n  templateUrl: './base-modal-small.component.html',\n})\nexport class BaseModalSmallComponent implements OnInit {\n  @Input() config: IBaseModalSmallConfig = {\n    openButtonText: 'Open',\n    title: 'Message Title',\n    body: 'Message Text',\n    actionButtonOneText: 'Cancel',\n    actionButtonTwoText: 'Continue',\n  };\n  @Output() actionOne: EventEmitter<any> = new EventEmitter();\n  @Output() actionTwo: EventEmitter<any> = new EventEmitter();\n\n  public showModal = false;\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  toggleModal() {\n    this.showModal = !this.showModal;\n  }\n}\n",
            "properties": [
                {
                    "name": "actionButtonOneText",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "actionButtonTwoText",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "body",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "openButtonText",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "title",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "IBorrower",
            "id": "interface-IBorrower-5f973f44a1fbc4d9c4ddeb3bf119021c",
            "file": "src/app/shared/interfaces/merge-report.interface.ts",
            "type": "interface",
            "sourceCode": "import {\n  ISource,\n  ICreditScoreFactor,\n  ICreditScoreAttributes,\n} from '@shared/interfaces/common-tu.interface';\n\nexport interface IMergeReport {\n  TrueLinkCreditReportType: ITrueLinkCreditReportType;\n}\nexport interface ITrueLinkCreditReportType {\n  SB168Frozen?: string;\n  Borrower?: IBorrower;\n  TradeLinePartition?: ITradeLinePartition[] | ITradeLinePartition;\n  InquiryPartition?: IInquiryPartition;\n  Message?:\n    | { code?: string; type?: string }[]\n    | { code?: string; type?: string };\n  Summary?: ISummary;\n  Sources?: { Source?: ISource };\n  SafetyCheckPassed?: boolean | string;\n}\nexport interface IBorrower {\n  BorrowerAddress?: {\n    CreditAddress?: string;\n    Dwelling?: string;\n    Origin?: string;\n    Ownership?: string;\n    Source?: ISource;\n  };\n  Birth?: {\n    BirthDate?: string;\n    Source?: ISource;\n  };\n  CreditScore?: {\n    CreditScoreFactor?: ICreditScoreFactor[];\n    CreditScoreMode?: string;\n    NoScoreReason?: string;\n    Source?: ISource;\n  };\n  SocialPartition?: {\n    Social?: {\n      SocialSecurityNumber?: String;\n      Source?: ISource;\n    };\n  };\n}\nexport interface ITradeLinePartition {\n  accountTypeDescription?: string;\n  accountTypeSymbol?: string;\n  accountTypeAbbreviation?: string;\n  Tradeline?: ITradeline;\n}\nexport interface ITradeline {\n  subscriberCode?: string;\n  highBalance?: number | string;\n  dateVerified?: string;\n  dateReported?: string;\n  dateOpened?: string;\n  accountNumber?: string;\n  dateAccountStatus?: string;\n  currentBalance?: number | string;\n  creditorName?: string;\n  position?: number | string;\n  bureau?: string;\n  AccountCondition?: ICreditScoreAttributes;\n  AccountDesignator?: ICreditScoreAttributes;\n  DisputeFlag?: ICreditScoreAttributes;\n  IndustryCode?: ICreditScoreAttributes;\n  OpenClosed?: ICreditScoreAttributes;\n  PayStatus?: ICreditScoreAttributes;\n  VerificationIndicator?: ICreditScoreAttributes;\n  Remark?: ITradelineRemark;\n  GrantedTrade: any;\n  CollectionTrade?: ITradelineCollection;\n  Source?: ISource;\n}\nexport interface ITradelineRemark {\n  customRemark?: string;\n  RemarkCode?: ICreditScoreAttributes;\n}\nexport interface IGrantedTrade {\n  monthsReviewed: number | string;\n  monthlyPayment: number | string;\n  late90Count: number | string;\n  late60Count: number | string;\n  late30Count: number | string;\n  dateLastPayment: string;\n  termMonths: number | string;\n  collateral: string;\n  amountPastDue: number | string;\n  worstPatStatusCount: number | string;\n  AccountType: ICreditScoreAttributes;\n  CreditType: ICreditScoreAttributes;\n  PaymentFrequency: ICreditScoreAttributes;\n  TermType: ICreditScoreAttributes;\n  WorstPayStatus: ICreditScoreAttributes;\n  PayStatusHistory: IPayStatusHistory;\n  CreditLimit: number | string;\n}\nexport interface IPayStatusHistory {\n  status: string;\n  startDate: string;\n  MonthlyPayStatus: IMonthyPayStatusItem[];\n}\nexport interface IMonthyPayStatusItem {\n  date: string;\n  status: string;\n}\nexport interface ITradelineCollection {\n  originalCreditor?: string;\n  creditType?: ICreditScoreAttributes;\n}\nexport interface IInquiryPartition {\n  Inquiry?: {\n    inquiryDate?: string;\n    subscriberName?: string;\n    subscriberNumber?: number | string;\n    bureau?: string;\n    inquiryType?: string;\n    IndustryCode?: string;\n    Source?: ISource;\n  };\n}\nexport interface ISummary {\n  TradelineSummary?: {\n    TransUnion?: string;\n  };\n  InquirySummary?: {\n    TransUnion?: string;\n  };\n  PublicRecordSummary?: {\n    TransUnion?: string;\n  };\n  Sources?: {\n    Source?: {\n      Bureau?: string;\n      InquiryDate?: string;\n      OriginalData?: string;\n    };\n  };\n  SafetyCheckPassed?: string;\n}\nexport interface IUnparsedCreditReport {\n  '#text': string;\n  type: string;\n}\n",
            "properties": [
                {
                    "name": "Birth",
                    "type": "literal type",
                    "optional": true,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "BorrowerAddress",
                    "type": "literal type",
                    "optional": true,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "CreditScore",
                    "type": "literal type",
                    "optional": true,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "SocialPartition",
                    "type": "literal type",
                    "optional": true,
                    "description": "",
                    "line": 40
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "ICollectionsTradelineDetails",
            "id": "interface-ICollectionsTradelineDetails-2736bcc9788643dbf4a420f037284b5b",
            "file": "src/app/shared/components/tradelines/tradeline-details/tradeline-details.component.ts",
            "type": "interface",
            "sourceCode": "import { Component, OnInit, Input } from '@angular/core';\n\nexport interface IRevolvingTradelineDetails {\n  dateOpened?: string;\n  accountDesignator?: string;\n  late30Count?: number | string;\n  late60Count?: number | string;\n  late90Count?: number | string;\n  amountPastDue?: number | string;\n  disputeFlag?: string;\n}\n\nexport interface IInstallmentTradelineDetails {\n  dateOpened?: string;\n  accountDesignator?: string;\n  termMonths?: number | string;\n  late30Count?: number | string;\n  late60Count?: number | string;\n  late90Count?: number | string;\n  amountPastDue?: number | string;\n  disputeFlag?: string;\n}\n\nexport interface ICollectionsTradelineDetails {\n  originalCreditor?: string;\n  creditType?: string;\n  dateOpened?: string;\n  disputeFlag?: string;\n}\n\nexport interface ITradelineDetailsConfig {\n  originalCreditor?: string | undefined;\n  creditType?: string | undefined;\n  dateOpened?: string | undefined;\n  accountDesignator?: string | undefined;\n  termMonths?: number | string | undefined;\n  late30Count?: number | string | undefined;\n  late60Count?: number | string | undefined;\n  late90Count?: number | string | undefined;\n  amountPastDue?: number | string | undefined;\n  disputeFlag?: string | undefined;\n  payments?: any | undefined;\n}\n\n@Component({\n  selector: 'brave-tradeline-details',\n  templateUrl: './tradeline-details.component.html',\n})\nexport class TradelineDetailsComponent implements OnInit {\n  @Input() config: ITradelineDetailsConfig = {} as ITradelineDetailsConfig;\n  @Input() payments: any;\n  @Input() remarks: string = '';\n  @Input() address: string = '';\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n",
            "properties": [
                {
                    "name": "creditType",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "dateOpened",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "disputeFlag",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "originalCreditor",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 25
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "ICreditReportCardGroup",
            "id": "interface-ICreditReportCardGroup-5f42e22a6b01e2448b89d863b4ed31d9",
            "file": "src/app/views/credit-report/credit-report-pure/credit-report-pure.component.ts",
            "type": "interface",
            "sourceCode": "import { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\nimport { ICreditReportCardInputs } from '@shared/components/cards/credit-report-card/credit-report-card.component';\nimport { CreditReportGroups } from '@shared/data/credit-report';\nimport { PreferencesStateModel } from '@store/preferences';\n\nexport interface ICreditReportCardGroup {\n  title: string;\n  group: CreditReportGroups;\n  cards: ICreditReportCardInputs[];\n}\n\n@Component({\n  selector: 'brave-credit-report-pure',\n  templateUrl: './credit-report-pure.component.html',\n  styleUrls: ['./credit-report-pure.component.css'],\n})\nexport class CreditReportPureComponent implements OnInit {\n  @Input() creditReports: ICreditReportCardGroup[] = [];\n  @Input() preferences: PreferencesStateModel = {} as PreferencesStateModel;\n  @Output() hide: EventEmitter<ICreditReportCardGroup> = new EventEmitter();\n\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n",
            "properties": [
                {
                    "name": "cards",
                    "type": "ICreditReportCardInputs[]",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "group",
                    "type": "CreditReportGroups",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "title",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "ICreditReportCardInputs",
            "id": "interface-ICreditReportCardInputs-b4a73992f1a1ecf9e82374971eabcfd0",
            "file": "src/app/shared/components/cards/credit-report-card/credit-report-card.component.ts",
            "type": "interface",
            "sourceCode": "import { Component, OnInit, Input } from '@angular/core';\n\nexport interface ICreditReportCardInputs {\n  type: string;\n  creditorName: string;\n  isOpen: boolean;\n  firstFieldName: string;\n  firstFieldValue: string | number;\n  secondFieldName: string;\n  secondFieldValue: string | number;\n  thirdFieldName: string;\n  thirdFieldValue: string | number;\n  status: string;\n}\n\n@Component({\n  selector: 'brave-credit-report-card',\n  templateUrl: './credit-report-card.component.html',\n  styleUrls: ['./credit-report-card.component.css'],\n})\nexport class CreditReportCardComponent implements OnInit {\n  @Input() creditorName: string = '';\n  @Input() isOpen: boolean = false;\n  @Input() firstFieldName: string = '';\n  @Input() firstFieldValue: string = '';\n  @Input() secondFieldName: string = '';\n  @Input() secondFieldValue: string = '';\n  @Input() thirdFieldName: string = '';\n  @Input() thirdFieldValue: string = '';\n  @Input() status: string = '';\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n",
            "properties": [
                {
                    "name": "creditorName",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "firstFieldName",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "firstFieldValue",
                    "type": "string | number",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "isOpen",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "secondFieldName",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "secondFieldValue",
                    "type": "string | number",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "status",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "thirdFieldName",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "thirdFieldValue",
                    "type": "string | number",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "type",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "ICreditScoreAttributes",
            "id": "interface-ICreditScoreAttributes-d2fa7b3be41a874e8ffeb52775c65f7d",
            "file": "src/app/shared/interfaces/common-tu.interface.ts",
            "type": "interface",
            "sourceCode": "export interface ICreditScoreFactor {\n  bureauCode?: number;\n  FactorType?: string;\n  Factor?: ICreditScoreAttributes;\n  FactorText?: string[];\n}\n\nexport interface ICreditScoreAttributes {\n  abbreviation?: string;\n  description?: string;\n  symbol?: number | string;\n  rank?: number | string;\n}\n\nexport interface ISource {\n  BorrowerKey?: string;\n  Bureau?: ICreditScoreAttributes;\n  InquiryDate?: string;\n  Reference?: string;\n}\n",
            "properties": [
                {
                    "name": "abbreviation",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "description",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "rank",
                    "type": "number | string",
                    "optional": true,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "symbol",
                    "type": "number | string",
                    "optional": true,
                    "description": "",
                    "line": 11
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "ICreditScoreFactor",
            "id": "interface-ICreditScoreFactor-d2fa7b3be41a874e8ffeb52775c65f7d",
            "file": "src/app/shared/interfaces/common-tu.interface.ts",
            "type": "interface",
            "sourceCode": "export interface ICreditScoreFactor {\n  bureauCode?: number;\n  FactorType?: string;\n  Factor?: ICreditScoreAttributes;\n  FactorText?: string[];\n}\n\nexport interface ICreditScoreAttributes {\n  abbreviation?: string;\n  description?: string;\n  symbol?: number | string;\n  rank?: number | string;\n}\n\nexport interface ISource {\n  BorrowerKey?: string;\n  Bureau?: ICreditScoreAttributes;\n  InquiryDate?: string;\n  Reference?: string;\n}\n",
            "properties": [
                {
                    "name": "bureauCode",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "Factor",
                    "type": "ICreditScoreAttributes",
                    "optional": true,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "FactorText",
                    "type": "string[]",
                    "optional": true,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "FactorType",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "ICreditScoreType",
            "id": "interface-ICreditScoreType-c5656b5d1d6008aeeeff9beef0867890",
            "file": "src/app/shared/interfaces/vantage-score.interface.ts",
            "type": "interface",
            "sourceCode": "import {\n  ICreditScoreFactor,\n  ICreditScoreAttributes,\n  ISource,\n} from '@shared/interfaces/common-tu.interface';\n\nexport interface IVantageScore {\n  CreditScoreType: ICreditScoreType;\n}\n\nexport interface ICreditScoreType {\n  riskScore?: number;\n  scoreName?: string;\n  populationRank?: number;\n  CreditScoreFactor?: ICreditScoreFactor[];\n  CreditScoreModel?: ICreditScoreAttributes;\n  NoScoreReason?: ICreditScoreAttributes;\n  Source?: ISource;\n}\n",
            "properties": [
                {
                    "name": "CreditScoreFactor",
                    "type": "ICreditScoreFactor[]",
                    "optional": true,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "CreditScoreModel",
                    "type": "ICreditScoreAttributes",
                    "optional": true,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "NoScoreReason",
                    "type": "ICreditScoreAttributes",
                    "optional": true,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "populationRank",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "riskScore",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "scoreName",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "Source",
                    "type": "ISource",
                    "optional": true,
                    "description": "",
                    "line": 18
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "IEnroll",
            "id": "interface-IEnroll-85a98e23332b906ecf5b64bc5b14d942",
            "file": "src/app/shared/interfaces/enroll.interface.ts",
            "type": "interface",
            "sourceCode": "export interface IEnroll {\n  request: {\n    AccountCode: string;\n    AccountName: string;\n    AdditionalInputs?: {\n      Data: {\n        Name: string;\n        Value: string;\n      };\n    };\n    RequestKey: string;\n    ClientKey: string;\n    Customer: {\n      CurrentAddress: {\n        AddressLine1: string;\n        AddressLine2?: string;\n        City: string;\n        State: string;\n        Zipcode: string;\n      };\n      PreviousAddress?: {\n        AddressLine1?: string;\n        AddressLine2?: string;\n        City?: string;\n        State?: string;\n        Zipcode?: string;\n      };\n      DateOfBirth: string;\n      FullName: {\n        FirstName: string;\n        LastName: string;\n        MiddleName?: string;\n        Prefix?: string;\n        Suffix?: string;\n      };\n      PhoneNumber?: string;\n      Ssn: string;\n    };\n    Email?: string;\n    Language?: string;\n    ServiceBundleCode: string;\n    TrustSessionId?: string;\n  };\n}\n\nexport interface IEnrollMsg {\n  AccountCode?: string;\n  AccountName?: string;\n  AdditionalInputs?: {\n    Data: {\n      Name: string;\n      Value: string;\n    };\n  };\n  RequestKey: string;\n  ClientKey: string;\n  Customer: {\n    CurrentAddress: {\n      AddressLine1: string;\n      AddressLine2?: string;\n      City: string;\n      State: string;\n      Zipcode: string;\n    };\n    PreviousAddress?: {\n      AddressLine1?: string;\n      AddressLine2?: string;\n      City?: string;\n      State?: string;\n      Zipcode?: string;\n    };\n    DateOfBirth: string;\n    FullName: {\n      FirstName: string;\n      LastName: string;\n      MiddleName?: string;\n      Prefix?: string;\n      Suffix?: string;\n    };\n    PhoneNumber?: string;\n    Ssn: string;\n  };\n  Email?: string;\n  Language?: string;\n  ServiceBundleCode: string;\n  TrustSessionId?: string;\n}\n\nexport interface IEnrollResponse {\n  EnrollResult: IEnrollResult;\n}\n\nexport interface IEnrollResult {\n  AccountName: string;\n  ErrorResponse: string;\n  RequestKey: string;\n  ResponseType: string;\n  ClientKey: string;\n  EnrollmentKey: string;\n  ServiceBundleFulfillmentKey: string;\n  ServiceProductFulfillments: {\n    ServiceProductResponse:\n      | IEnrollServiceProductResponse[]\n      | IEnrollServiceProductResponse;\n  };\n}\n\nexport interface IEnrollServiceProductResponse {\n  Bureau: string;\n  ErrorResponse: string;\n  ServiceBundleResponse: {\n    ServiceBundleCode: string;\n    ServiceBundleFulfillmentKey: string;\n    ServiceBundleFulfillmentStatus: string;\n  };\n  ServiceProduct: string;\n  ServiceProductFulfillmentKey: string;\n  ServiceProductObject: string;\n  ServiceProductTypeId: string;\n  ServiceProductValue: string;\n  Status: string;\n}\n",
            "properties": [
                {
                    "name": "request",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "IEnrollMsg",
            "id": "interface-IEnrollMsg-85a98e23332b906ecf5b64bc5b14d942",
            "file": "src/app/shared/interfaces/enroll.interface.ts",
            "type": "interface",
            "sourceCode": "export interface IEnroll {\n  request: {\n    AccountCode: string;\n    AccountName: string;\n    AdditionalInputs?: {\n      Data: {\n        Name: string;\n        Value: string;\n      };\n    };\n    RequestKey: string;\n    ClientKey: string;\n    Customer: {\n      CurrentAddress: {\n        AddressLine1: string;\n        AddressLine2?: string;\n        City: string;\n        State: string;\n        Zipcode: string;\n      };\n      PreviousAddress?: {\n        AddressLine1?: string;\n        AddressLine2?: string;\n        City?: string;\n        State?: string;\n        Zipcode?: string;\n      };\n      DateOfBirth: string;\n      FullName: {\n        FirstName: string;\n        LastName: string;\n        MiddleName?: string;\n        Prefix?: string;\n        Suffix?: string;\n      };\n      PhoneNumber?: string;\n      Ssn: string;\n    };\n    Email?: string;\n    Language?: string;\n    ServiceBundleCode: string;\n    TrustSessionId?: string;\n  };\n}\n\nexport interface IEnrollMsg {\n  AccountCode?: string;\n  AccountName?: string;\n  AdditionalInputs?: {\n    Data: {\n      Name: string;\n      Value: string;\n    };\n  };\n  RequestKey: string;\n  ClientKey: string;\n  Customer: {\n    CurrentAddress: {\n      AddressLine1: string;\n      AddressLine2?: string;\n      City: string;\n      State: string;\n      Zipcode: string;\n    };\n    PreviousAddress?: {\n      AddressLine1?: string;\n      AddressLine2?: string;\n      City?: string;\n      State?: string;\n      Zipcode?: string;\n    };\n    DateOfBirth: string;\n    FullName: {\n      FirstName: string;\n      LastName: string;\n      MiddleName?: string;\n      Prefix?: string;\n      Suffix?: string;\n    };\n    PhoneNumber?: string;\n    Ssn: string;\n  };\n  Email?: string;\n  Language?: string;\n  ServiceBundleCode: string;\n  TrustSessionId?: string;\n}\n\nexport interface IEnrollResponse {\n  EnrollResult: IEnrollResult;\n}\n\nexport interface IEnrollResult {\n  AccountName: string;\n  ErrorResponse: string;\n  RequestKey: string;\n  ResponseType: string;\n  ClientKey: string;\n  EnrollmentKey: string;\n  ServiceBundleFulfillmentKey: string;\n  ServiceProductFulfillments: {\n    ServiceProductResponse:\n      | IEnrollServiceProductResponse[]\n      | IEnrollServiceProductResponse;\n  };\n}\n\nexport interface IEnrollServiceProductResponse {\n  Bureau: string;\n  ErrorResponse: string;\n  ServiceBundleResponse: {\n    ServiceBundleCode: string;\n    ServiceBundleFulfillmentKey: string;\n    ServiceBundleFulfillmentStatus: string;\n  };\n  ServiceProduct: string;\n  ServiceProductFulfillmentKey: string;\n  ServiceProductObject: string;\n  ServiceProductTypeId: string;\n  ServiceProductValue: string;\n  Status: string;\n}\n",
            "properties": [
                {
                    "name": "AccountCode",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 47
                },
                {
                    "name": "AccountName",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 48
                },
                {
                    "name": "AdditionalInputs",
                    "type": "literal type",
                    "optional": true,
                    "description": "",
                    "line": 49
                },
                {
                    "name": "ClientKey",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 56
                },
                {
                    "name": "Customer",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 57
                },
                {
                    "name": "Email",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 83
                },
                {
                    "name": "Language",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 84
                },
                {
                    "name": "RequestKey",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 55
                },
                {
                    "name": "ServiceBundleCode",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 85
                },
                {
                    "name": "TrustSessionId",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 86
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "IEnrollRequest",
            "id": "interface-IEnrollRequest-50623bb78b65ff97c7b8311097b9e791",
            "file": "src/app/shared/interfaces/enroll-rquest.interface.ts",
            "type": "interface",
            "sourceCode": "export interface IEnrollRequest {\n  ClientKey: string;\n  Customer: {\n    CurrentAddress: {\n      AddressLine1: string;\n      AddressLine2?: string;\n      City: string;\n      State: string;\n      Zipcode: string;\n    };\n    DateOfBirth: string;\n    FullName: {\n      FirstName: string;\n      LastName: string;\n      MiddleName?: string;\n      Prefix?: string;\n      Suffix?: string;\n    };\n    Ssn: string;\n  };\n  Language?: string;\n  ServiceBundleCode: string;\n  TrustSessionid?: string;\n}\n",
            "properties": [
                {
                    "name": "ClientKey",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "Customer",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "Language",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "ServiceBundleCode",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "TrustSessionid",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 23
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "IEnrollResponse",
            "id": "interface-IEnrollResponse-85a98e23332b906ecf5b64bc5b14d942",
            "file": "src/app/shared/interfaces/enroll.interface.ts",
            "type": "interface",
            "sourceCode": "export interface IEnroll {\n  request: {\n    AccountCode: string;\n    AccountName: string;\n    AdditionalInputs?: {\n      Data: {\n        Name: string;\n        Value: string;\n      };\n    };\n    RequestKey: string;\n    ClientKey: string;\n    Customer: {\n      CurrentAddress: {\n        AddressLine1: string;\n        AddressLine2?: string;\n        City: string;\n        State: string;\n        Zipcode: string;\n      };\n      PreviousAddress?: {\n        AddressLine1?: string;\n        AddressLine2?: string;\n        City?: string;\n        State?: string;\n        Zipcode?: string;\n      };\n      DateOfBirth: string;\n      FullName: {\n        FirstName: string;\n        LastName: string;\n        MiddleName?: string;\n        Prefix?: string;\n        Suffix?: string;\n      };\n      PhoneNumber?: string;\n      Ssn: string;\n    };\n    Email?: string;\n    Language?: string;\n    ServiceBundleCode: string;\n    TrustSessionId?: string;\n  };\n}\n\nexport interface IEnrollMsg {\n  AccountCode?: string;\n  AccountName?: string;\n  AdditionalInputs?: {\n    Data: {\n      Name: string;\n      Value: string;\n    };\n  };\n  RequestKey: string;\n  ClientKey: string;\n  Customer: {\n    CurrentAddress: {\n      AddressLine1: string;\n      AddressLine2?: string;\n      City: string;\n      State: string;\n      Zipcode: string;\n    };\n    PreviousAddress?: {\n      AddressLine1?: string;\n      AddressLine2?: string;\n      City?: string;\n      State?: string;\n      Zipcode?: string;\n    };\n    DateOfBirth: string;\n    FullName: {\n      FirstName: string;\n      LastName: string;\n      MiddleName?: string;\n      Prefix?: string;\n      Suffix?: string;\n    };\n    PhoneNumber?: string;\n    Ssn: string;\n  };\n  Email?: string;\n  Language?: string;\n  ServiceBundleCode: string;\n  TrustSessionId?: string;\n}\n\nexport interface IEnrollResponse {\n  EnrollResult: IEnrollResult;\n}\n\nexport interface IEnrollResult {\n  AccountName: string;\n  ErrorResponse: string;\n  RequestKey: string;\n  ResponseType: string;\n  ClientKey: string;\n  EnrollmentKey: string;\n  ServiceBundleFulfillmentKey: string;\n  ServiceProductFulfillments: {\n    ServiceProductResponse:\n      | IEnrollServiceProductResponse[]\n      | IEnrollServiceProductResponse;\n  };\n}\n\nexport interface IEnrollServiceProductResponse {\n  Bureau: string;\n  ErrorResponse: string;\n  ServiceBundleResponse: {\n    ServiceBundleCode: string;\n    ServiceBundleFulfillmentKey: string;\n    ServiceBundleFulfillmentStatus: string;\n  };\n  ServiceProduct: string;\n  ServiceProductFulfillmentKey: string;\n  ServiceProductObject: string;\n  ServiceProductTypeId: string;\n  ServiceProductValue: string;\n  Status: string;\n}\n",
            "properties": [
                {
                    "name": "EnrollResult",
                    "type": "IEnrollResult",
                    "optional": false,
                    "description": "",
                    "line": 90
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "IEnrollResult",
            "id": "interface-IEnrollResult-85a98e23332b906ecf5b64bc5b14d942",
            "file": "src/app/shared/interfaces/enroll.interface.ts",
            "type": "interface",
            "sourceCode": "export interface IEnroll {\n  request: {\n    AccountCode: string;\n    AccountName: string;\n    AdditionalInputs?: {\n      Data: {\n        Name: string;\n        Value: string;\n      };\n    };\n    RequestKey: string;\n    ClientKey: string;\n    Customer: {\n      CurrentAddress: {\n        AddressLine1: string;\n        AddressLine2?: string;\n        City: string;\n        State: string;\n        Zipcode: string;\n      };\n      PreviousAddress?: {\n        AddressLine1?: string;\n        AddressLine2?: string;\n        City?: string;\n        State?: string;\n        Zipcode?: string;\n      };\n      DateOfBirth: string;\n      FullName: {\n        FirstName: string;\n        LastName: string;\n        MiddleName?: string;\n        Prefix?: string;\n        Suffix?: string;\n      };\n      PhoneNumber?: string;\n      Ssn: string;\n    };\n    Email?: string;\n    Language?: string;\n    ServiceBundleCode: string;\n    TrustSessionId?: string;\n  };\n}\n\nexport interface IEnrollMsg {\n  AccountCode?: string;\n  AccountName?: string;\n  AdditionalInputs?: {\n    Data: {\n      Name: string;\n      Value: string;\n    };\n  };\n  RequestKey: string;\n  ClientKey: string;\n  Customer: {\n    CurrentAddress: {\n      AddressLine1: string;\n      AddressLine2?: string;\n      City: string;\n      State: string;\n      Zipcode: string;\n    };\n    PreviousAddress?: {\n      AddressLine1?: string;\n      AddressLine2?: string;\n      City?: string;\n      State?: string;\n      Zipcode?: string;\n    };\n    DateOfBirth: string;\n    FullName: {\n      FirstName: string;\n      LastName: string;\n      MiddleName?: string;\n      Prefix?: string;\n      Suffix?: string;\n    };\n    PhoneNumber?: string;\n    Ssn: string;\n  };\n  Email?: string;\n  Language?: string;\n  ServiceBundleCode: string;\n  TrustSessionId?: string;\n}\n\nexport interface IEnrollResponse {\n  EnrollResult: IEnrollResult;\n}\n\nexport interface IEnrollResult {\n  AccountName: string;\n  ErrorResponse: string;\n  RequestKey: string;\n  ResponseType: string;\n  ClientKey: string;\n  EnrollmentKey: string;\n  ServiceBundleFulfillmentKey: string;\n  ServiceProductFulfillments: {\n    ServiceProductResponse:\n      | IEnrollServiceProductResponse[]\n      | IEnrollServiceProductResponse;\n  };\n}\n\nexport interface IEnrollServiceProductResponse {\n  Bureau: string;\n  ErrorResponse: string;\n  ServiceBundleResponse: {\n    ServiceBundleCode: string;\n    ServiceBundleFulfillmentKey: string;\n    ServiceBundleFulfillmentStatus: string;\n  };\n  ServiceProduct: string;\n  ServiceProductFulfillmentKey: string;\n  ServiceProductObject: string;\n  ServiceProductTypeId: string;\n  ServiceProductValue: string;\n  Status: string;\n}\n",
            "properties": [
                {
                    "name": "AccountName",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 94
                },
                {
                    "name": "ClientKey",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 98
                },
                {
                    "name": "EnrollmentKey",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 99
                },
                {
                    "name": "ErrorResponse",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 95
                },
                {
                    "name": "RequestKey",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 96
                },
                {
                    "name": "ResponseType",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 97
                },
                {
                    "name": "ServiceBundleFulfillmentKey",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 100
                },
                {
                    "name": "ServiceProductFulfillments",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 101
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "IEnrollServiceProductResponse",
            "id": "interface-IEnrollServiceProductResponse-85a98e23332b906ecf5b64bc5b14d942",
            "file": "src/app/shared/interfaces/enroll.interface.ts",
            "type": "interface",
            "sourceCode": "export interface IEnroll {\n  request: {\n    AccountCode: string;\n    AccountName: string;\n    AdditionalInputs?: {\n      Data: {\n        Name: string;\n        Value: string;\n      };\n    };\n    RequestKey: string;\n    ClientKey: string;\n    Customer: {\n      CurrentAddress: {\n        AddressLine1: string;\n        AddressLine2?: string;\n        City: string;\n        State: string;\n        Zipcode: string;\n      };\n      PreviousAddress?: {\n        AddressLine1?: string;\n        AddressLine2?: string;\n        City?: string;\n        State?: string;\n        Zipcode?: string;\n      };\n      DateOfBirth: string;\n      FullName: {\n        FirstName: string;\n        LastName: string;\n        MiddleName?: string;\n        Prefix?: string;\n        Suffix?: string;\n      };\n      PhoneNumber?: string;\n      Ssn: string;\n    };\n    Email?: string;\n    Language?: string;\n    ServiceBundleCode: string;\n    TrustSessionId?: string;\n  };\n}\n\nexport interface IEnrollMsg {\n  AccountCode?: string;\n  AccountName?: string;\n  AdditionalInputs?: {\n    Data: {\n      Name: string;\n      Value: string;\n    };\n  };\n  RequestKey: string;\n  ClientKey: string;\n  Customer: {\n    CurrentAddress: {\n      AddressLine1: string;\n      AddressLine2?: string;\n      City: string;\n      State: string;\n      Zipcode: string;\n    };\n    PreviousAddress?: {\n      AddressLine1?: string;\n      AddressLine2?: string;\n      City?: string;\n      State?: string;\n      Zipcode?: string;\n    };\n    DateOfBirth: string;\n    FullName: {\n      FirstName: string;\n      LastName: string;\n      MiddleName?: string;\n      Prefix?: string;\n      Suffix?: string;\n    };\n    PhoneNumber?: string;\n    Ssn: string;\n  };\n  Email?: string;\n  Language?: string;\n  ServiceBundleCode: string;\n  TrustSessionId?: string;\n}\n\nexport interface IEnrollResponse {\n  EnrollResult: IEnrollResult;\n}\n\nexport interface IEnrollResult {\n  AccountName: string;\n  ErrorResponse: string;\n  RequestKey: string;\n  ResponseType: string;\n  ClientKey: string;\n  EnrollmentKey: string;\n  ServiceBundleFulfillmentKey: string;\n  ServiceProductFulfillments: {\n    ServiceProductResponse:\n      | IEnrollServiceProductResponse[]\n      | IEnrollServiceProductResponse;\n  };\n}\n\nexport interface IEnrollServiceProductResponse {\n  Bureau: string;\n  ErrorResponse: string;\n  ServiceBundleResponse: {\n    ServiceBundleCode: string;\n    ServiceBundleFulfillmentKey: string;\n    ServiceBundleFulfillmentStatus: string;\n  };\n  ServiceProduct: string;\n  ServiceProductFulfillmentKey: string;\n  ServiceProductObject: string;\n  ServiceProductTypeId: string;\n  ServiceProductValue: string;\n  Status: string;\n}\n",
            "properties": [
                {
                    "name": "Bureau",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 109
                },
                {
                    "name": "ErrorResponse",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 110
                },
                {
                    "name": "ServiceBundleResponse",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 111
                },
                {
                    "name": "ServiceProduct",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 116
                },
                {
                    "name": "ServiceProductFulfillmentKey",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 117
                },
                {
                    "name": "ServiceProductObject",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 118
                },
                {
                    "name": "ServiceProductTypeId",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 119
                },
                {
                    "name": "ServiceProductValue",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 120
                },
                {
                    "name": "Status",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 121
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "IFilledChecktextProgressbarConfig",
            "id": "interface-IFilledChecktextProgressbarConfig-1e639b0664c76125e87f65fa04a97b7b",
            "file": "src/app/shared/components/progressbars/filled-checktext-progressbar/filled-checktext-progressbar.component.ts",
            "type": "interface",
            "sourceCode": "import { Component, Input, OnChanges, OnInit } from '@angular/core';\n\nexport interface IProgressStep {\n  id: number;\n  active: boolean;\n  complete: boolean;\n  name: string;\n}\nexport interface IFilledChecktextProgressbarConfig {\n  size: string;\n}\n\n@Component({\n  selector: 'brave-filled-checktext-progressbar',\n  templateUrl: './filled-checktext-progressbar.component.html',\n})\nexport class FilledChecktextProgressbarComponent {\n  @Input() config: IFilledChecktextProgressbarConfig = { size: 'base' };\n  @Input() steps: IProgressStep[] = [];\n  @Input() activatedStep: number = -1;\n  @Input() completedStep: number = -1;\n\n  constructor() {}\n}\n",
            "properties": [
                {
                    "name": "size",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "IFilledClosingAlertConfig",
            "id": "interface-IFilledClosingAlertConfig-9c4cd41b4d47d2e182eda26dd493b74c",
            "file": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.component.ts",
            "type": "interface",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\nexport interface IFilledClosingAlertConfig {\n  size: string;\n  backgroundColor: string;\n  color: string;\n  alertTitle: string;\n  alertBody: string;\n}\n\n@Component({\n  selector: 'brave-filled-closing-alert',\n  templateUrl: './filled-closing-alert.component.html',\n})\nexport class FilledClosingAlertComponent implements OnInit {\n  @Input() config: IFilledClosingAlertConfig = {\n    size: 'base',\n    backgroundColor: 'bg-indigo-800',\n    color: 'text-white',\n    alertTitle: 'Alert!',\n    alertBody: 'Something went wrong. Please try again.',\n  };\n  constructor() {}\n  public showAlert: boolean = false;\n  ngOnInit(): void {}\n}\n",
            "properties": [
                {
                    "name": "alertBody",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "alertTitle",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "backgroundColor",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "color",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "size",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "IFilledOnlytextBadgeConfig",
            "id": "interface-IFilledOnlytextBadgeConfig-dc05e6e4c81b5bb0d226982afe75d12d",
            "file": "src/app/shared/components/badges/filled-onlytext-badge/filled-onlytext-badge.component.ts",
            "type": "interface",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\nexport interface IFilledOnlytextBadgeConfig {\n  size: string;\n  backgroundColor: string;\n  color: string;\n}\n\n@Component({\n  selector: 'brave-filled-onlytext-badge',\n  templateUrl: './filled-onlytext-badge.component.html',\n})\nexport class FilledOnlytextBadgeComponent {\n  @Input() config: IFilledOnlytextBadgeConfig = {\n    size: 'base',\n    backgroundColor: 'bg-indigo-200',\n    color: 'text-indigo-800',\n  };\n\n  constructor() {}\n}\n",
            "properties": [
                {
                    "name": "backgroundColor",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "color",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "size",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "IFilledOnlyTextButtonConfig",
            "id": "interface-IFilledOnlyTextButtonConfig-b83344225e4d837e9e4fbd0772c1675f",
            "file": "src/app/shared/components/buttons/filled-onlytext-button/filled-onlytext-button.component.ts",
            "type": "interface",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\nexport interface IFilledOnlyTextButtonConfig {\n  buttonSize: string;\n  backgroundColor: string;\n  activeColor: string;\n  color: string;\n}\n\n@Component({\n  selector: 'brave-filled-onlytext-button',\n  templateUrl: './filled-onlytext-button.component.html',\n})\nexport class FilledOnlytextButtonComponent {\n  /**\n   * @param config Input objctfor button customization\n   * @param config.buttonSize 'sm', 'base', 'lg'\n   * @param config.backgroundColor Any global color \"e.g. bg-indigo-800\"\n   * @param config.activeColor Any global color \"e.g. bg-indigo-900\"\n   * @param config.color Any global color\n   */\n  @Input() config: IFilledOnlyTextButtonConfig = {\n    buttonSize: 'base',\n    backgroundColor: 'bg-indigo-800',\n    activeColor: 'bg-indigo-900',\n    color: 'text-white',\n  };\n\n  @Input() disabled: boolean = false;\n\n  constructor() {}\n}\n",
            "properties": [
                {
                    "name": "activeColor",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "backgroundColor",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "buttonSize",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "color",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "IGetAuthenticationQuestionsMsg",
            "id": "interface-IGetAuthenticationQuestionsMsg-cf758b0c66839ad21b94f8d3442fa7f9",
            "file": "src/app/shared/models/get-authorization-questions.ts",
            "type": "interface",
            "sourceCode": "export interface IGetAuthenticationQuestionsMsg {\n  AdditionalInputs?: {\n    Data: {\n      Name: string;\n      Value: string;\n    };\n  };\n  RequestKey: string;\n  ClientKey: string;\n  Customer: {\n    CurrentAddress: {\n      AddressLine1: string;\n      AddressLine2?: string;\n      City: string;\n      State: string;\n      Zipcode: string;\n    };\n    PreviousAddress: {\n      AddressLine1?: string;\n      AddressLine2?: string;\n      City?: string;\n      State?: string;\n      Zipcode?: string;\n    };\n    DateOfBirth: string;\n    FullName: {\n      FirstName: string;\n      LastName: string;\n      MiddleName?: string;\n      Prefix?: string;\n      Suffix?: string;\n    };\n    PhoneNumber?: string;\n    Ssn: string;\n  };\n  Email?: string;\n  Language?: string;\n  ServiceBundleCode: string;\n  TrustSessionId?: string;\n}\n\nexport interface IGetAuthenticationQuestionsResponseSuccess {\n  's:Envelope': {\n    _attributes: {\n      'xmlns:s': string;\n    };\n    's:Body': {\n      GetAuthenticationQuestionsResponse: {\n        _attributes: {\n          xmlns: string;\n        };\n        GetAuthenticationQuestionsResult: {\n          _attributes: {\n            'xmlns:a': string;\n            'xmlns:i': string;\n          };\n          'a:AccountName': {\n            _text: string;\n          };\n          'a:ErrorResponse': {\n            _attributes: {\n              'i:nil': string;\n            };\n          };\n          'a:RequestKey': {\n            _text: string;\n          };\n          'a:ResponseType': {\n            _text: string;\n          };\n          'a:ClientKey': {\n            _text: string;\n          };\n          'a:Questions': {\n            _text: string;\n          };\n          'a:ServiceBundleFulfillmentKey': {\n            _text: string;\n          };\n        };\n      };\n    };\n  };\n}\n",
            "properties": [
                {
                    "name": "AdditionalInputs",
                    "type": "literal type",
                    "optional": true,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "ClientKey",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "Customer",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "Email",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 36
                },
                {
                    "name": "Language",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "RequestKey",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "ServiceBundleCode",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "TrustSessionId",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 39
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "IGetAuthenticationQuestionsResponseSuccess",
            "id": "interface-IGetAuthenticationQuestionsResponseSuccess-cf758b0c66839ad21b94f8d3442fa7f9",
            "file": "src/app/shared/models/get-authorization-questions.ts",
            "type": "interface",
            "sourceCode": "export interface IGetAuthenticationQuestionsMsg {\n  AdditionalInputs?: {\n    Data: {\n      Name: string;\n      Value: string;\n    };\n  };\n  RequestKey: string;\n  ClientKey: string;\n  Customer: {\n    CurrentAddress: {\n      AddressLine1: string;\n      AddressLine2?: string;\n      City: string;\n      State: string;\n      Zipcode: string;\n    };\n    PreviousAddress: {\n      AddressLine1?: string;\n      AddressLine2?: string;\n      City?: string;\n      State?: string;\n      Zipcode?: string;\n    };\n    DateOfBirth: string;\n    FullName: {\n      FirstName: string;\n      LastName: string;\n      MiddleName?: string;\n      Prefix?: string;\n      Suffix?: string;\n    };\n    PhoneNumber?: string;\n    Ssn: string;\n  };\n  Email?: string;\n  Language?: string;\n  ServiceBundleCode: string;\n  TrustSessionId?: string;\n}\n\nexport interface IGetAuthenticationQuestionsResponseSuccess {\n  's:Envelope': {\n    _attributes: {\n      'xmlns:s': string;\n    };\n    's:Body': {\n      GetAuthenticationQuestionsResponse: {\n        _attributes: {\n          xmlns: string;\n        };\n        GetAuthenticationQuestionsResult: {\n          _attributes: {\n            'xmlns:a': string;\n            'xmlns:i': string;\n          };\n          'a:AccountName': {\n            _text: string;\n          };\n          'a:ErrorResponse': {\n            _attributes: {\n              'i:nil': string;\n            };\n          };\n          'a:RequestKey': {\n            _text: string;\n          };\n          'a:ResponseType': {\n            _text: string;\n          };\n          'a:ClientKey': {\n            _text: string;\n          };\n          'a:Questions': {\n            _text: string;\n          };\n          'a:ServiceBundleFulfillmentKey': {\n            _text: string;\n          };\n        };\n      };\n    };\n  };\n}\n",
            "properties": [
                {
                    "name": "s:Envelope",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 43
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "IGrantedTrade",
            "id": "interface-IGrantedTrade-5f973f44a1fbc4d9c4ddeb3bf119021c",
            "file": "src/app/shared/interfaces/merge-report.interface.ts",
            "type": "interface",
            "sourceCode": "import {\n  ISource,\n  ICreditScoreFactor,\n  ICreditScoreAttributes,\n} from '@shared/interfaces/common-tu.interface';\n\nexport interface IMergeReport {\n  TrueLinkCreditReportType: ITrueLinkCreditReportType;\n}\nexport interface ITrueLinkCreditReportType {\n  SB168Frozen?: string;\n  Borrower?: IBorrower;\n  TradeLinePartition?: ITradeLinePartition[] | ITradeLinePartition;\n  InquiryPartition?: IInquiryPartition;\n  Message?:\n    | { code?: string; type?: string }[]\n    | { code?: string; type?: string };\n  Summary?: ISummary;\n  Sources?: { Source?: ISource };\n  SafetyCheckPassed?: boolean | string;\n}\nexport interface IBorrower {\n  BorrowerAddress?: {\n    CreditAddress?: string;\n    Dwelling?: string;\n    Origin?: string;\n    Ownership?: string;\n    Source?: ISource;\n  };\n  Birth?: {\n    BirthDate?: string;\n    Source?: ISource;\n  };\n  CreditScore?: {\n    CreditScoreFactor?: ICreditScoreFactor[];\n    CreditScoreMode?: string;\n    NoScoreReason?: string;\n    Source?: ISource;\n  };\n  SocialPartition?: {\n    Social?: {\n      SocialSecurityNumber?: String;\n      Source?: ISource;\n    };\n  };\n}\nexport interface ITradeLinePartition {\n  accountTypeDescription?: string;\n  accountTypeSymbol?: string;\n  accountTypeAbbreviation?: string;\n  Tradeline?: ITradeline;\n}\nexport interface ITradeline {\n  subscriberCode?: string;\n  highBalance?: number | string;\n  dateVerified?: string;\n  dateReported?: string;\n  dateOpened?: string;\n  accountNumber?: string;\n  dateAccountStatus?: string;\n  currentBalance?: number | string;\n  creditorName?: string;\n  position?: number | string;\n  bureau?: string;\n  AccountCondition?: ICreditScoreAttributes;\n  AccountDesignator?: ICreditScoreAttributes;\n  DisputeFlag?: ICreditScoreAttributes;\n  IndustryCode?: ICreditScoreAttributes;\n  OpenClosed?: ICreditScoreAttributes;\n  PayStatus?: ICreditScoreAttributes;\n  VerificationIndicator?: ICreditScoreAttributes;\n  Remark?: ITradelineRemark;\n  GrantedTrade: any;\n  CollectionTrade?: ITradelineCollection;\n  Source?: ISource;\n}\nexport interface ITradelineRemark {\n  customRemark?: string;\n  RemarkCode?: ICreditScoreAttributes;\n}\nexport interface IGrantedTrade {\n  monthsReviewed: number | string;\n  monthlyPayment: number | string;\n  late90Count: number | string;\n  late60Count: number | string;\n  late30Count: number | string;\n  dateLastPayment: string;\n  termMonths: number | string;\n  collateral: string;\n  amountPastDue: number | string;\n  worstPatStatusCount: number | string;\n  AccountType: ICreditScoreAttributes;\n  CreditType: ICreditScoreAttributes;\n  PaymentFrequency: ICreditScoreAttributes;\n  TermType: ICreditScoreAttributes;\n  WorstPayStatus: ICreditScoreAttributes;\n  PayStatusHistory: IPayStatusHistory;\n  CreditLimit: number | string;\n}\nexport interface IPayStatusHistory {\n  status: string;\n  startDate: string;\n  MonthlyPayStatus: IMonthyPayStatusItem[];\n}\nexport interface IMonthyPayStatusItem {\n  date: string;\n  status: string;\n}\nexport interface ITradelineCollection {\n  originalCreditor?: string;\n  creditType?: ICreditScoreAttributes;\n}\nexport interface IInquiryPartition {\n  Inquiry?: {\n    inquiryDate?: string;\n    subscriberName?: string;\n    subscriberNumber?: number | string;\n    bureau?: string;\n    inquiryType?: string;\n    IndustryCode?: string;\n    Source?: ISource;\n  };\n}\nexport interface ISummary {\n  TradelineSummary?: {\n    TransUnion?: string;\n  };\n  InquirySummary?: {\n    TransUnion?: string;\n  };\n  PublicRecordSummary?: {\n    TransUnion?: string;\n  };\n  Sources?: {\n    Source?: {\n      Bureau?: string;\n      InquiryDate?: string;\n      OriginalData?: string;\n    };\n  };\n  SafetyCheckPassed?: string;\n}\nexport interface IUnparsedCreditReport {\n  '#text': string;\n  type: string;\n}\n",
            "properties": [
                {
                    "name": "AccountType",
                    "type": "ICreditScoreAttributes",
                    "optional": false,
                    "description": "",
                    "line": 92
                },
                {
                    "name": "amountPastDue",
                    "type": "number | string",
                    "optional": false,
                    "description": "",
                    "line": 90
                },
                {
                    "name": "collateral",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 89
                },
                {
                    "name": "CreditLimit",
                    "type": "number | string",
                    "optional": false,
                    "description": "",
                    "line": 98
                },
                {
                    "name": "CreditType",
                    "type": "ICreditScoreAttributes",
                    "optional": false,
                    "description": "",
                    "line": 93
                },
                {
                    "name": "dateLastPayment",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 87
                },
                {
                    "name": "late30Count",
                    "type": "number | string",
                    "optional": false,
                    "description": "",
                    "line": 86
                },
                {
                    "name": "late60Count",
                    "type": "number | string",
                    "optional": false,
                    "description": "",
                    "line": 85
                },
                {
                    "name": "late90Count",
                    "type": "number | string",
                    "optional": false,
                    "description": "",
                    "line": 84
                },
                {
                    "name": "monthlyPayment",
                    "type": "number | string",
                    "optional": false,
                    "description": "",
                    "line": 83
                },
                {
                    "name": "monthsReviewed",
                    "type": "number | string",
                    "optional": false,
                    "description": "",
                    "line": 82
                },
                {
                    "name": "PaymentFrequency",
                    "type": "ICreditScoreAttributes",
                    "optional": false,
                    "description": "",
                    "line": 94
                },
                {
                    "name": "PayStatusHistory",
                    "type": "IPayStatusHistory",
                    "optional": false,
                    "description": "",
                    "line": 97
                },
                {
                    "name": "termMonths",
                    "type": "number | string",
                    "optional": false,
                    "description": "",
                    "line": 88
                },
                {
                    "name": "TermType",
                    "type": "ICreditScoreAttributes",
                    "optional": false,
                    "description": "",
                    "line": 95
                },
                {
                    "name": "worstPatStatusCount",
                    "type": "number | string",
                    "optional": false,
                    "description": "",
                    "line": 91
                },
                {
                    "name": "WorstPayStatus",
                    "type": "ICreditScoreAttributes",
                    "optional": false,
                    "description": "",
                    "line": 96
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "IIndicativeEnrichmentMsg",
            "id": "interface-IIndicativeEnrichmentMsg-f2c87b12c67bd9179d4b75293134278b",
            "file": "src/app/shared/models/indicative-enrichment.ts",
            "type": "interface",
            "sourceCode": "export interface IIndicativeEnrichmentMsg {\n  AdditionalInputs: {\n    Data: {\n      Name: string;\n      Value: string;\n    };\n  };\n  RequestKey: string;\n  ClientKey: string;\n  Customer: {\n    CurrentAddress: {\n      AddressLine1: string;\n      AddressLine2?: string;\n      City: string;\n      State: string;\n      Zipcode: string;\n    };\n    PreviousAddress: {\n      AddressLine1?: string;\n      AddressLine2?: string;\n      City?: string;\n      State?: string;\n      Zipcode?: string;\n    };\n    DateOfBirth: string;\n    FullName: {\n      FirstName: string;\n      LastName: string;\n    };\n    Ssn: string;\n  };\n  ServiceBundleCode: string;\n}\n\nexport interface IIndicativeEnrichmentResponseSuccess {\n  's:Envelope': {\n    _attributes: {\n      'xmlns:s': string;\n    };\n    's:Body': {\n      IndicativeEnrichmentResponse: {\n        _attributes: {\n          xmlns: string;\n        };\n        IndicativeEnrichmentResult: {\n          _attributes: {\n            'xmlns:a': string;\n            'xmlns:i': string;\n          };\n          'a:AccountName': {\n            _text: string;\n          };\n          'a:ErrorResponse': {\n            _attributes: {\n              'i:nil': string;\n            };\n          };\n          'a:RequestKey': {\n            _text: string;\n          };\n          'a:ResponseType': {\n            _text: string;\n          };\n          'a:ClientKey': {\n            _text: string;\n          };\n          'a:Customer': {\n            _text: string;\n          };\n          'a:SSN': {\n            _text: string;\n          };\n        };\n      };\n    };\n  };\n}\n",
            "properties": [
                {
                    "name": "AdditionalInputs",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "ClientKey",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "Customer",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "RequestKey",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "ServiceBundleCode",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 32
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "IIndicativeEnrichmentResponseSuccess",
            "id": "interface-IIndicativeEnrichmentResponseSuccess-f2c87b12c67bd9179d4b75293134278b",
            "file": "src/app/shared/models/indicative-enrichment.ts",
            "type": "interface",
            "sourceCode": "export interface IIndicativeEnrichmentMsg {\n  AdditionalInputs: {\n    Data: {\n      Name: string;\n      Value: string;\n    };\n  };\n  RequestKey: string;\n  ClientKey: string;\n  Customer: {\n    CurrentAddress: {\n      AddressLine1: string;\n      AddressLine2?: string;\n      City: string;\n      State: string;\n      Zipcode: string;\n    };\n    PreviousAddress: {\n      AddressLine1?: string;\n      AddressLine2?: string;\n      City?: string;\n      State?: string;\n      Zipcode?: string;\n    };\n    DateOfBirth: string;\n    FullName: {\n      FirstName: string;\n      LastName: string;\n    };\n    Ssn: string;\n  };\n  ServiceBundleCode: string;\n}\n\nexport interface IIndicativeEnrichmentResponseSuccess {\n  's:Envelope': {\n    _attributes: {\n      'xmlns:s': string;\n    };\n    's:Body': {\n      IndicativeEnrichmentResponse: {\n        _attributes: {\n          xmlns: string;\n        };\n        IndicativeEnrichmentResult: {\n          _attributes: {\n            'xmlns:a': string;\n            'xmlns:i': string;\n          };\n          'a:AccountName': {\n            _text: string;\n          };\n          'a:ErrorResponse': {\n            _attributes: {\n              'i:nil': string;\n            };\n          };\n          'a:RequestKey': {\n            _text: string;\n          };\n          'a:ResponseType': {\n            _text: string;\n          };\n          'a:ClientKey': {\n            _text: string;\n          };\n          'a:Customer': {\n            _text: string;\n          };\n          'a:SSN': {\n            _text: string;\n          };\n        };\n      };\n    };\n  };\n}\n",
            "properties": [
                {
                    "name": "s:Envelope",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 36
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "IInquiryPartition",
            "id": "interface-IInquiryPartition-5f973f44a1fbc4d9c4ddeb3bf119021c",
            "file": "src/app/shared/interfaces/merge-report.interface.ts",
            "type": "interface",
            "sourceCode": "import {\n  ISource,\n  ICreditScoreFactor,\n  ICreditScoreAttributes,\n} from '@shared/interfaces/common-tu.interface';\n\nexport interface IMergeReport {\n  TrueLinkCreditReportType: ITrueLinkCreditReportType;\n}\nexport interface ITrueLinkCreditReportType {\n  SB168Frozen?: string;\n  Borrower?: IBorrower;\n  TradeLinePartition?: ITradeLinePartition[] | ITradeLinePartition;\n  InquiryPartition?: IInquiryPartition;\n  Message?:\n    | { code?: string; type?: string }[]\n    | { code?: string; type?: string };\n  Summary?: ISummary;\n  Sources?: { Source?: ISource };\n  SafetyCheckPassed?: boolean | string;\n}\nexport interface IBorrower {\n  BorrowerAddress?: {\n    CreditAddress?: string;\n    Dwelling?: string;\n    Origin?: string;\n    Ownership?: string;\n    Source?: ISource;\n  };\n  Birth?: {\n    BirthDate?: string;\n    Source?: ISource;\n  };\n  CreditScore?: {\n    CreditScoreFactor?: ICreditScoreFactor[];\n    CreditScoreMode?: string;\n    NoScoreReason?: string;\n    Source?: ISource;\n  };\n  SocialPartition?: {\n    Social?: {\n      SocialSecurityNumber?: String;\n      Source?: ISource;\n    };\n  };\n}\nexport interface ITradeLinePartition {\n  accountTypeDescription?: string;\n  accountTypeSymbol?: string;\n  accountTypeAbbreviation?: string;\n  Tradeline?: ITradeline;\n}\nexport interface ITradeline {\n  subscriberCode?: string;\n  highBalance?: number | string;\n  dateVerified?: string;\n  dateReported?: string;\n  dateOpened?: string;\n  accountNumber?: string;\n  dateAccountStatus?: string;\n  currentBalance?: number | string;\n  creditorName?: string;\n  position?: number | string;\n  bureau?: string;\n  AccountCondition?: ICreditScoreAttributes;\n  AccountDesignator?: ICreditScoreAttributes;\n  DisputeFlag?: ICreditScoreAttributes;\n  IndustryCode?: ICreditScoreAttributes;\n  OpenClosed?: ICreditScoreAttributes;\n  PayStatus?: ICreditScoreAttributes;\n  VerificationIndicator?: ICreditScoreAttributes;\n  Remark?: ITradelineRemark;\n  GrantedTrade: any;\n  CollectionTrade?: ITradelineCollection;\n  Source?: ISource;\n}\nexport interface ITradelineRemark {\n  customRemark?: string;\n  RemarkCode?: ICreditScoreAttributes;\n}\nexport interface IGrantedTrade {\n  monthsReviewed: number | string;\n  monthlyPayment: number | string;\n  late90Count: number | string;\n  late60Count: number | string;\n  late30Count: number | string;\n  dateLastPayment: string;\n  termMonths: number | string;\n  collateral: string;\n  amountPastDue: number | string;\n  worstPatStatusCount: number | string;\n  AccountType: ICreditScoreAttributes;\n  CreditType: ICreditScoreAttributes;\n  PaymentFrequency: ICreditScoreAttributes;\n  TermType: ICreditScoreAttributes;\n  WorstPayStatus: ICreditScoreAttributes;\n  PayStatusHistory: IPayStatusHistory;\n  CreditLimit: number | string;\n}\nexport interface IPayStatusHistory {\n  status: string;\n  startDate: string;\n  MonthlyPayStatus: IMonthyPayStatusItem[];\n}\nexport interface IMonthyPayStatusItem {\n  date: string;\n  status: string;\n}\nexport interface ITradelineCollection {\n  originalCreditor?: string;\n  creditType?: ICreditScoreAttributes;\n}\nexport interface IInquiryPartition {\n  Inquiry?: {\n    inquiryDate?: string;\n    subscriberName?: string;\n    subscriberNumber?: number | string;\n    bureau?: string;\n    inquiryType?: string;\n    IndustryCode?: string;\n    Source?: ISource;\n  };\n}\nexport interface ISummary {\n  TradelineSummary?: {\n    TransUnion?: string;\n  };\n  InquirySummary?: {\n    TransUnion?: string;\n  };\n  PublicRecordSummary?: {\n    TransUnion?: string;\n  };\n  Sources?: {\n    Source?: {\n      Bureau?: string;\n      InquiryDate?: string;\n      OriginalData?: string;\n    };\n  };\n  SafetyCheckPassed?: string;\n}\nexport interface IUnparsedCreditReport {\n  '#text': string;\n  type: string;\n}\n",
            "properties": [
                {
                    "name": "Inquiry",
                    "type": "literal type",
                    "optional": true,
                    "description": "",
                    "line": 114
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "IInstallmentTradelineDetails",
            "id": "interface-IInstallmentTradelineDetails-2736bcc9788643dbf4a420f037284b5b",
            "file": "src/app/shared/components/tradelines/tradeline-details/tradeline-details.component.ts",
            "type": "interface",
            "sourceCode": "import { Component, OnInit, Input } from '@angular/core';\n\nexport interface IRevolvingTradelineDetails {\n  dateOpened?: string;\n  accountDesignator?: string;\n  late30Count?: number | string;\n  late60Count?: number | string;\n  late90Count?: number | string;\n  amountPastDue?: number | string;\n  disputeFlag?: string;\n}\n\nexport interface IInstallmentTradelineDetails {\n  dateOpened?: string;\n  accountDesignator?: string;\n  termMonths?: number | string;\n  late30Count?: number | string;\n  late60Count?: number | string;\n  late90Count?: number | string;\n  amountPastDue?: number | string;\n  disputeFlag?: string;\n}\n\nexport interface ICollectionsTradelineDetails {\n  originalCreditor?: string;\n  creditType?: string;\n  dateOpened?: string;\n  disputeFlag?: string;\n}\n\nexport interface ITradelineDetailsConfig {\n  originalCreditor?: string | undefined;\n  creditType?: string | undefined;\n  dateOpened?: string | undefined;\n  accountDesignator?: string | undefined;\n  termMonths?: number | string | undefined;\n  late30Count?: number | string | undefined;\n  late60Count?: number | string | undefined;\n  late90Count?: number | string | undefined;\n  amountPastDue?: number | string | undefined;\n  disputeFlag?: string | undefined;\n  payments?: any | undefined;\n}\n\n@Component({\n  selector: 'brave-tradeline-details',\n  templateUrl: './tradeline-details.component.html',\n})\nexport class TradelineDetailsComponent implements OnInit {\n  @Input() config: ITradelineDetailsConfig = {} as ITradelineDetailsConfig;\n  @Input() payments: any;\n  @Input() remarks: string = '';\n  @Input() address: string = '';\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n",
            "properties": [
                {
                    "name": "accountDesignator",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "amountPastDue",
                    "type": "number | string",
                    "optional": true,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "dateOpened",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "disputeFlag",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "late30Count",
                    "type": "number | string",
                    "optional": true,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "late60Count",
                    "type": "number | string",
                    "optional": true,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "late90Count",
                    "type": "number | string",
                    "optional": true,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "termMonths",
                    "type": "number | string",
                    "optional": true,
                    "description": "",
                    "line": 16
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "IKbaMultipleChoiceConfig",
            "id": "interface-IKbaMultipleChoiceConfig-9c937b810359db9306e5238849f67634",
            "file": "src/app/shared/components/inputs/kba-multiplechoice-input/kba-multiplechoice-input.component.ts",
            "type": "interface",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport {\n  ITransunionKBAAnswer,\n  ITransunionKBAQuestion,\n} from '@shared/interfaces/tu-kba-questions.interface';\n\nexport interface IKbaMultipleChoiceConfig {\n  size: string;\n  label: string;\n  type: string;\n  placeholder: string;\n  autocomplete: string;\n  value?: string;\n}\n\n@Component({\n  selector: 'brave-kba-multiplechoice-input',\n  templateUrl: './kba-multiplechoice-input.component.html',\n})\nexport class KbaMultiplechoiceInputComponent implements OnInit {\n  private _required: boolean = false;\n  private _asteriskOverride: boolean = false;\n  private _question: ITransunionKBAQuestion | undefined;\n\n  /**\n   * @param Config Object to pass in component params\n   * @param config.size 'sm', 'base', 'lg'\n   * @param config.label Label text (default: 'Input label')\n   * @param config.placeholder Placeholder text (default: 'Input text')\n   * @param config.autocomplete Any HTML Input autocomplete value\n   * @param config.value (optional) Pre-load the input with a value\n   */\n  @Input() config: IKbaMultipleChoiceConfig = {\n    size: 'base',\n    label: 'Input label',\n    type: 'text',\n    placeholder: 'Input text',\n    autocomplete: 'off',\n    value: '',\n  };\n\n  /**\n   * @input Flag to make the input field required for form to be valid\n   */\n  @Input()\n  get required() {\n    return this._required;\n  }\n  set required(value: any) {\n    this._required = !!value;\n  }\n\n  /**\n   * @input Flag to override the display of an asterisk but still make it required\n   */\n  @Input()\n  get asteriskOverride() {\n    return this._asteriskOverride;\n  }\n  set asteriskOverride(value: any) {\n    this._asteriskOverride = !!value;\n  }\n\n  /**\n   * {@input (ITransunionKBAQuestion) Individual question\n   */\n  @Input()\n  get question() {\n    return this._question;\n  }\n  set question(value: ITransunionKBAQuestion | undefined) {\n    this._question = value;\n  }\n\n  get choices() {\n    const choices:\n      | ITransunionKBAAnswer\n      | ITransunionKBAAnswer[]\n      | undefined = this._question?.AnswerChoice;\n    if (!choices) {\n      return [];\n    }\n    return choices instanceof Array ? choices : [choices];\n  }\n\n  @Output() valueChanged: EventEmitter<any> = new EventEmitter();\n  @Output()\n  onComponentReady: EventEmitter<FormGroup> = new EventEmitter<FormGroup>();\n\n  public componentFormGroup: FormGroup = new FormBuilder().group({\n    input: [''],\n  });\n  public locked: boolean = false;\n  public hidden: boolean = false;\n\n  constructor(private fb: FormBuilder) {}\n\n  ngOnInit(): void {\n    const validators = [];\n    if (this.required) {\n      validators.push(Validators.required);\n    }\n    this.componentFormGroup = this.fb.group({\n      input: [this.config.value, validators],\n    });\n    this.componentFormGroup.controls.input.valueChanges.subscribe((value) =>\n      this.valueChanged.emit(value)\n    );\n    this.onComponentReady.emit(this.componentFormGroup);\n  }\n}\n",
            "properties": [
                {
                    "name": "autocomplete",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "label",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "placeholder",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "size",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "type",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "value",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 14
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "ILinksOnlyTextButtonConfig",
            "id": "interface-ILinksOnlyTextButtonConfig-3f13da1dcb0790cb76c693f0e7585b81",
            "file": "src/app/shared/components/buttons/links-onlytext-button/links-onlytext-button.component.ts",
            "type": "interface",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\nexport interface ILinksOnlyTextButtonConfig {\n  buttonSize: string;\n  color: string;\n}\n\n@Component({\n  selector: 'brave-links-onlytext-button',\n  templateUrl: './links-onlytext-button.component.html',\n})\nexport class LinksOnlytextButtonComponent {\n  /**\n   * @param config Input objctfor button customization\n   * @param config.buttonSize 'sm', 'base', 'lg'\n   * @param config.color Any global color\n   */\n  @Input() config: ILinksOnlyTextButtonConfig = {\n    buttonSize: 'base',\n    color: 'text-indigo-800',\n  };\n\n  constructor() {}\n}\n",
            "properties": [
                {
                    "name": "buttonSize",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "color",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "IMenuDropdown",
            "id": "interface-IMenuDropdown-e5e1cbc1f941d50ca014cf1b1ff21fd0",
            "file": "src/app/shared/components/dropdowns/popdowns/menu-dropdown/menu-dropdown.component.ts",
            "type": "interface",
            "sourceCode": "import { Component, ElementRef, Input, OnInit, ViewChild } from '@angular/core';\nimport { createPopper } from '@popperjs/core';\n\nexport interface ISubmenuItem {\n  submenu: string;\n  route: string;\n  group?: string;\n  break?: boolean;\n}\nexport interface IMenuDropdown {\n  menu: string;\n  submenus?: ISubmenuItem[];\n}\n\n@Component({\n  selector: 'brave-menu-dropdown',\n  templateUrl: './menu-dropdown.component.html',\n})\nexport class MenuDropdownComponent implements OnInit {\n  @Input() config: IMenuDropdown = {\n    menu: 'Menu',\n    submenus: [\n      { submenu: 'Sub 1', route: '/submenu1', group: 'Group 1' },\n      { submenu: 'Sub 2', route: '/submenu2' },\n      { submenu: 'Sub 3', route: '/submenu3' },\n      { submenu: 'Sub 4', route: '/submenu4' },\n      { submenu: 'Sub 5', route: '/submenu5', break: true },\n      { submenu: 'Sub 6', route: '/submenu6', group: 'Group 2' },\n      { submenu: 'Sub 7', route: '/submenu7' },\n      { submenu: 'Sub 8', route: '/submenu8', break: true },\n      { submenu: 'Sub 9', route: '/submenu9', group: 'Group 3' },\n      { submenu: 'Sub 10', route: '/submenu10' },\n    ],\n  };\n  dropdownPopoverShow = false;\n  @ViewChild('btnDropdownRef', { static: false }) btnDropdownRef:\n    | ElementRef\n    | undefined;\n  @ViewChild('popoverDropdownRef', { static: false })\n  popoverDropdownRef: ElementRef | undefined;\n  ngOnInit() {}\n  toggleDropdown(event: { preventDefault: () => void }) {\n    event.preventDefault();\n    if (this.dropdownPopoverShow) {\n      this.dropdownPopoverShow = false;\n    } else {\n      this.dropdownPopoverShow = true;\n      this.createPoppper();\n    }\n  }\n  createPoppper() {\n    createPopper(\n      this.btnDropdownRef?.nativeElement,\n      this.popoverDropdownRef?.nativeElement,\n      {\n        placement: 'bottom-start',\n      }\n    );\n  }\n}\n",
            "properties": [
                {
                    "name": "menu",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "submenus",
                    "type": "ISubmenuItem[]",
                    "optional": true,
                    "description": "",
                    "line": 12
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "IMergeReport",
            "id": "interface-IMergeReport-5f973f44a1fbc4d9c4ddeb3bf119021c",
            "file": "src/app/shared/interfaces/merge-report.interface.ts",
            "type": "interface",
            "sourceCode": "import {\n  ISource,\n  ICreditScoreFactor,\n  ICreditScoreAttributes,\n} from '@shared/interfaces/common-tu.interface';\n\nexport interface IMergeReport {\n  TrueLinkCreditReportType: ITrueLinkCreditReportType;\n}\nexport interface ITrueLinkCreditReportType {\n  SB168Frozen?: string;\n  Borrower?: IBorrower;\n  TradeLinePartition?: ITradeLinePartition[] | ITradeLinePartition;\n  InquiryPartition?: IInquiryPartition;\n  Message?:\n    | { code?: string; type?: string }[]\n    | { code?: string; type?: string };\n  Summary?: ISummary;\n  Sources?: { Source?: ISource };\n  SafetyCheckPassed?: boolean | string;\n}\nexport interface IBorrower {\n  BorrowerAddress?: {\n    CreditAddress?: string;\n    Dwelling?: string;\n    Origin?: string;\n    Ownership?: string;\n    Source?: ISource;\n  };\n  Birth?: {\n    BirthDate?: string;\n    Source?: ISource;\n  };\n  CreditScore?: {\n    CreditScoreFactor?: ICreditScoreFactor[];\n    CreditScoreMode?: string;\n    NoScoreReason?: string;\n    Source?: ISource;\n  };\n  SocialPartition?: {\n    Social?: {\n      SocialSecurityNumber?: String;\n      Source?: ISource;\n    };\n  };\n}\nexport interface ITradeLinePartition {\n  accountTypeDescription?: string;\n  accountTypeSymbol?: string;\n  accountTypeAbbreviation?: string;\n  Tradeline?: ITradeline;\n}\nexport interface ITradeline {\n  subscriberCode?: string;\n  highBalance?: number | string;\n  dateVerified?: string;\n  dateReported?: string;\n  dateOpened?: string;\n  accountNumber?: string;\n  dateAccountStatus?: string;\n  currentBalance?: number | string;\n  creditorName?: string;\n  position?: number | string;\n  bureau?: string;\n  AccountCondition?: ICreditScoreAttributes;\n  AccountDesignator?: ICreditScoreAttributes;\n  DisputeFlag?: ICreditScoreAttributes;\n  IndustryCode?: ICreditScoreAttributes;\n  OpenClosed?: ICreditScoreAttributes;\n  PayStatus?: ICreditScoreAttributes;\n  VerificationIndicator?: ICreditScoreAttributes;\n  Remark?: ITradelineRemark;\n  GrantedTrade: any;\n  CollectionTrade?: ITradelineCollection;\n  Source?: ISource;\n}\nexport interface ITradelineRemark {\n  customRemark?: string;\n  RemarkCode?: ICreditScoreAttributes;\n}\nexport interface IGrantedTrade {\n  monthsReviewed: number | string;\n  monthlyPayment: number | string;\n  late90Count: number | string;\n  late60Count: number | string;\n  late30Count: number | string;\n  dateLastPayment: string;\n  termMonths: number | string;\n  collateral: string;\n  amountPastDue: number | string;\n  worstPatStatusCount: number | string;\n  AccountType: ICreditScoreAttributes;\n  CreditType: ICreditScoreAttributes;\n  PaymentFrequency: ICreditScoreAttributes;\n  TermType: ICreditScoreAttributes;\n  WorstPayStatus: ICreditScoreAttributes;\n  PayStatusHistory: IPayStatusHistory;\n  CreditLimit: number | string;\n}\nexport interface IPayStatusHistory {\n  status: string;\n  startDate: string;\n  MonthlyPayStatus: IMonthyPayStatusItem[];\n}\nexport interface IMonthyPayStatusItem {\n  date: string;\n  status: string;\n}\nexport interface ITradelineCollection {\n  originalCreditor?: string;\n  creditType?: ICreditScoreAttributes;\n}\nexport interface IInquiryPartition {\n  Inquiry?: {\n    inquiryDate?: string;\n    subscriberName?: string;\n    subscriberNumber?: number | string;\n    bureau?: string;\n    inquiryType?: string;\n    IndustryCode?: string;\n    Source?: ISource;\n  };\n}\nexport interface ISummary {\n  TradelineSummary?: {\n    TransUnion?: string;\n  };\n  InquirySummary?: {\n    TransUnion?: string;\n  };\n  PublicRecordSummary?: {\n    TransUnion?: string;\n  };\n  Sources?: {\n    Source?: {\n      Bureau?: string;\n      InquiryDate?: string;\n      OriginalData?: string;\n    };\n  };\n  SafetyCheckPassed?: string;\n}\nexport interface IUnparsedCreditReport {\n  '#text': string;\n  type: string;\n}\n",
            "properties": [
                {
                    "name": "TrueLinkCreditReportType",
                    "type": "ITrueLinkCreditReportType",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "IMonthyPayStatusItem",
            "id": "interface-IMonthyPayStatusItem-5f973f44a1fbc4d9c4ddeb3bf119021c",
            "file": "src/app/shared/interfaces/merge-report.interface.ts",
            "type": "interface",
            "sourceCode": "import {\n  ISource,\n  ICreditScoreFactor,\n  ICreditScoreAttributes,\n} from '@shared/interfaces/common-tu.interface';\n\nexport interface IMergeReport {\n  TrueLinkCreditReportType: ITrueLinkCreditReportType;\n}\nexport interface ITrueLinkCreditReportType {\n  SB168Frozen?: string;\n  Borrower?: IBorrower;\n  TradeLinePartition?: ITradeLinePartition[] | ITradeLinePartition;\n  InquiryPartition?: IInquiryPartition;\n  Message?:\n    | { code?: string; type?: string }[]\n    | { code?: string; type?: string };\n  Summary?: ISummary;\n  Sources?: { Source?: ISource };\n  SafetyCheckPassed?: boolean | string;\n}\nexport interface IBorrower {\n  BorrowerAddress?: {\n    CreditAddress?: string;\n    Dwelling?: string;\n    Origin?: string;\n    Ownership?: string;\n    Source?: ISource;\n  };\n  Birth?: {\n    BirthDate?: string;\n    Source?: ISource;\n  };\n  CreditScore?: {\n    CreditScoreFactor?: ICreditScoreFactor[];\n    CreditScoreMode?: string;\n    NoScoreReason?: string;\n    Source?: ISource;\n  };\n  SocialPartition?: {\n    Social?: {\n      SocialSecurityNumber?: String;\n      Source?: ISource;\n    };\n  };\n}\nexport interface ITradeLinePartition {\n  accountTypeDescription?: string;\n  accountTypeSymbol?: string;\n  accountTypeAbbreviation?: string;\n  Tradeline?: ITradeline;\n}\nexport interface ITradeline {\n  subscriberCode?: string;\n  highBalance?: number | string;\n  dateVerified?: string;\n  dateReported?: string;\n  dateOpened?: string;\n  accountNumber?: string;\n  dateAccountStatus?: string;\n  currentBalance?: number | string;\n  creditorName?: string;\n  position?: number | string;\n  bureau?: string;\n  AccountCondition?: ICreditScoreAttributes;\n  AccountDesignator?: ICreditScoreAttributes;\n  DisputeFlag?: ICreditScoreAttributes;\n  IndustryCode?: ICreditScoreAttributes;\n  OpenClosed?: ICreditScoreAttributes;\n  PayStatus?: ICreditScoreAttributes;\n  VerificationIndicator?: ICreditScoreAttributes;\n  Remark?: ITradelineRemark;\n  GrantedTrade: any;\n  CollectionTrade?: ITradelineCollection;\n  Source?: ISource;\n}\nexport interface ITradelineRemark {\n  customRemark?: string;\n  RemarkCode?: ICreditScoreAttributes;\n}\nexport interface IGrantedTrade {\n  monthsReviewed: number | string;\n  monthlyPayment: number | string;\n  late90Count: number | string;\n  late60Count: number | string;\n  late30Count: number | string;\n  dateLastPayment: string;\n  termMonths: number | string;\n  collateral: string;\n  amountPastDue: number | string;\n  worstPatStatusCount: number | string;\n  AccountType: ICreditScoreAttributes;\n  CreditType: ICreditScoreAttributes;\n  PaymentFrequency: ICreditScoreAttributes;\n  TermType: ICreditScoreAttributes;\n  WorstPayStatus: ICreditScoreAttributes;\n  PayStatusHistory: IPayStatusHistory;\n  CreditLimit: number | string;\n}\nexport interface IPayStatusHistory {\n  status: string;\n  startDate: string;\n  MonthlyPayStatus: IMonthyPayStatusItem[];\n}\nexport interface IMonthyPayStatusItem {\n  date: string;\n  status: string;\n}\nexport interface ITradelineCollection {\n  originalCreditor?: string;\n  creditType?: ICreditScoreAttributes;\n}\nexport interface IInquiryPartition {\n  Inquiry?: {\n    inquiryDate?: string;\n    subscriberName?: string;\n    subscriberNumber?: number | string;\n    bureau?: string;\n    inquiryType?: string;\n    IndustryCode?: string;\n    Source?: ISource;\n  };\n}\nexport interface ISummary {\n  TradelineSummary?: {\n    TransUnion?: string;\n  };\n  InquirySummary?: {\n    TransUnion?: string;\n  };\n  PublicRecordSummary?: {\n    TransUnion?: string;\n  };\n  Sources?: {\n    Source?: {\n      Bureau?: string;\n      InquiryDate?: string;\n      OriginalData?: string;\n    };\n  };\n  SafetyCheckPassed?: string;\n}\nexport interface IUnparsedCreditReport {\n  '#text': string;\n  type: string;\n}\n",
            "properties": [
                {
                    "name": "date",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 106
                },
                {
                    "name": "status",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 107
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "INegativeAccountCardInputs",
            "id": "interface-INegativeAccountCardInputs-f476ca60d289204878f78e7afe644b8e",
            "file": "src/app/shared/components/cards/negative-account-card/negative-account-card.component.ts",
            "type": "interface",
            "sourceCode": "import { Component, Input, ViewChild } from '@angular/core';\nimport { ViewdetailButtonComponent } from '@shared/components/buttons/viewdetail-button/viewdetail-button.component';\nimport { BehaviorSubject } from 'rxjs';\n\nexport interface INegativeAccountCardInputs {\n  creditorName?: string;\n  lastReported?: string;\n  accountTypeDescription?: string;\n  accountTypeDescriptionValue?: string;\n  originalCreditor?: string;\n  originalCreditorValue?: string;\n  disputeFlag?: string;\n  disputeFlagValue?: string;\n  accountDetail?: {\n    accountNumber?: string;\n    typeOfCollection?: string;\n    amountPastDue?: number | string;\n    dateOpened?: string;\n    dateLastPayment?: string;\n    remarks?: string;\n  };\n}\n\n@Component({\n  selector: 'brave-negative-account-card',\n  templateUrl: './negative-account-card.component.html',\n  styleUrls: ['./negative-account-card.component.css'],\n})\nexport class NegativeAccountCardComponent {\n  private $isIgnored = new BehaviorSubject(false);\n  isIgnored = this.$isIgnored.asObservable();\n  private $isClosed = new BehaviorSubject(false);\n  isClosed = this.$isClosed.asObservable();\n  @Input() creditorName: string = '';\n  @Input() lastReported: string = '';\n  @Input() originalCreditor: string = '';\n  @Input() originalCreditorValue: string = '';\n  @Input() accountTypeDescription: string = '';\n  @Input() accountTypeDescriptionValue: string = '';\n  @Input() disputeFlag: string = '';\n  @Input() disputeFlagValue: string = '';\n\n  // Detail Information\n  @Input() accountNumber = '';\n  @Input() typeOfCollection = '';\n  @Input() amountPastDue: string | number = 0;\n  @Input() dateOpened = '20/02/2021';\n  @Input() dateLastPayment = '20/02/2021';\n  @Input() remarks = '';\n  @ViewChild(ViewdetailButtonComponent)\n  viewDetail: ViewdetailButtonComponent | undefined;\n\n  constructor() {}\n\n  ignore() {\n    this.$isIgnored.next(true);\n  }\n\n  undoIgnore() {\n    this.$isIgnored.next(false);\n    this.viewDetail?.open$.next(true);\n  }\n\n  close() {\n    this.$isClosed.next(true);\n  }\n}\n",
            "properties": [
                {
                    "name": "accountDetail",
                    "type": "literal type",
                    "optional": true,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "accountTypeDescription",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "accountTypeDescriptionValue",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "creditorName",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "disputeFlag",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "disputeFlagValue",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "lastReported",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "originalCreditor",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "originalCreditorValue",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 11
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "IOutlineInputeConfig",
            "id": "interface-IOutlineInputeConfig-f0893c1220987925c0c530d02e57ee89",
            "file": "src/app/shared/components/inputs/outline-input/outline-input.component.ts",
            "type": "interface",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\nexport interface IOutlineInputeConfig {\n  size: string;\n  label: string;\n  type: string;\n  placeholder: string;\n  autocomplete: string;\n  value?: string;\n}\n\n@Component({\n  selector: 'brave-outline-input',\n  templateUrl: './outline-input.component.html',\n})\nexport class OutlineInputComponent implements OnInit {\n  private _required: boolean = false;\n  private _asteriskOverride: boolean = false;\n\n  /**\n   * @param Config Object to pass in component params\n   * @param config.size 'sm', 'base', 'lg'\n   * @param config.label Label text (default: 'Input label')\n   * @param config.placeholder Placeholder text (default: 'Input text')\n   * @param config.autocomplete Any HTML Input autocomplete value\n   * @param config.value (optional) Pre-load the input with a value\n   */\n  @Input() config: IOutlineInputeConfig = {\n    size: 'base',\n    label: 'Input label',\n    type: 'text',\n    placeholder: 'Input text',\n    autocomplete: 'off',\n    value: '',\n  };\n\n  /**\n   * @input Flag to make the input field required for form to be valid\n   */\n  @Input()\n  get required() {\n    return this._required;\n  }\n  set required(value: any) {\n    this._required = !!value;\n  }\n\n  /**\n   * @input Flag to override the display of an asterisk but still make it required\n   */\n  @Input()\n  get asteriskOverride() {\n    return this._asteriskOverride;\n  }\n  set asteriskOverride(value: any) {\n    this._asteriskOverride = !!value;\n  }\n\n  @Output() valueChanged: EventEmitter<any> = new EventEmitter();\n  @Output()\n  onComponentReady: EventEmitter<FormGroup> = new EventEmitter<FormGroup>();\n\n  public componentFormGroup: FormGroup = new FormBuilder().group({\n    input: [''],\n  });\n  public locked: boolean = false;\n  public hidden: boolean = false;\n\n  constructor(private fb: FormBuilder) {}\n\n  ngOnInit(): void {\n    const validators = [];\n    if (this.required) {\n      validators.push(Validators.required);\n    }\n    this.componentFormGroup = this.fb.group({\n      input: [this.config.value, validators],\n    });\n    this.componentFormGroup.controls.input.valueChanges.subscribe((value) =>\n      this.valueChanged.emit(value)\n    );\n    this.onComponentReady.emit(this.componentFormGroup);\n  }\n}\n",
            "properties": [
                {
                    "name": "autocomplete",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "label",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "placeholder",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "size",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "type",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "value",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 10
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "IOutlineOnlyTextButtonConfig",
            "id": "interface-IOutlineOnlyTextButtonConfig-ce3e923fcba436e191c4ced8b5615edb",
            "file": "src/app/shared/components/buttons/outline-onlytext-button/outline-onlytext-button.component.ts",
            "type": "interface",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\nexport interface IOutlineOnlyTextButtonConfig {\n  buttonSize: string;\n  borderColor: string;\n  activeColor: string;\n  hoverColor: string;\n  color: string;\n}\n\n@Component({\n  selector: 'brave-outline-onlytext-button',\n  templateUrl: './outline-onlytext-button.component.html',\n})\nexport class OutlineOnlytextButtonComponent {\n  /**\n   * @param config Input object for button customization\n   * @param config.buttonSize 'sm', 'base', 'lg'\n   * @param config.borderColor Any global color \"e.g. border-indigo-800\"\n   * @param config.activeColor Any global color \"e.g. bg-indigo-900\"\n   * @param config.hoverColor Any global color \"e.g. bg-indigo-800\"\n   * @param config.color Any global color \"e.g. text-indigo-900\"\n   */\n  @Input() config: IOutlineOnlyTextButtonConfig = {\n    buttonSize: 'base',\n    borderColor: 'border-indigo-800',\n    activeColor: 'bg-indigo-900',\n    hoverColor: 'bg-indigo-800',\n    color: 'text-indigo-800',\n  };\n\n  constructor() {}\n}\n",
            "properties": [
                {
                    "name": "activeColor",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "borderColor",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "buttonSize",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "color",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "hoverColor",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "IOutlineOnlyTextItem",
            "id": "interface-IOutlineOnlyTextItem-6b5257d3bff0f580ecb6a326a9cb481f",
            "file": "src/app/shared/components/dropdowns/selects/outline-onlytext-select/outline-onlytext-select.component.ts",
            "type": "interface",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\nexport interface IOutlineOnlyTextItem {\n  value: string;\n}\n\n@Component({\n  selector: 'brave-outline-onlytext-select',\n  templateUrl: './outline-onlytext-select.component.html',\n})\nexport class OutlineOnlytextSelectComponent implements OnInit {\n  @Input() items: IOutlineOnlyTextItem[] = [];\n\n  public selected: IOutlineOnlyTextItem | undefined;\n  public isOpen: boolean = false;\n\n  constructor() {}\n\n  ngOnInit(): void {\n    // this.selected = this.items[0]; // default to first one\n  }\n}\n",
            "properties": [
                {
                    "name": "value",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "IOutlineSelectInputConfig",
            "id": "interface-IOutlineSelectInputConfig-88e5000bfa0da78c9538b913ace1641d",
            "file": "src/app/shared/components/inputs/outline-select-input/outline-select-input.component.ts",
            "type": "interface",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\nexport interface IOutlineSelectInputConfig {\n  size: string;\n  label: string;\n  autocomplete: string;\n  options: string[];\n}\n\n@Component({\n  selector: 'brave-outline-select-input',\n  templateUrl: './outline-select-input.component.html',\n})\nexport class OutlineSelectInputComponent implements OnInit {\n  private _required: boolean = false;\n  private _asteriskOverride: boolean = false;\n  public selected: string | undefined;\n  public isOpen: boolean = false;\n\n  /**\n   * @param Config Object to pass in component params\n   * @param config.size 'sm', 'base', 'lg'\n   * @param config.label Label text (default: 'Input label')\n   * @param config.options select options to choose from\n   */\n  @Input() config: IOutlineSelectInputConfig = {\n    size: 'base',\n    label: 'Input label',\n    autocomplete: 'off',\n    options: ['one', 'two', 'three'],\n  };\n\n  /**\n   * @input Flag to make the input field required for form to be valid\n   */\n  @Input()\n  get required() {\n    return this._required;\n  }\n  set required(value: any) {\n    this._required = !!value;\n  }\n\n  /**\n   * @input Flag to override the display of an asterisk but still make it required\n   */\n  @Input()\n  get asteriskOverride() {\n    return this._asteriskOverride;\n  }\n  set asteriskOverride(value: any) {\n    this._asteriskOverride = !!value;\n  }\n\n  @Output() valueChanged: EventEmitter<any> = new EventEmitter();\n  @Output()\n  onComponentReady: EventEmitter<FormGroup> = new EventEmitter<FormGroup>();\n\n  public componentFormGroup: FormGroup = new FormBuilder().group({\n    input: [''],\n  });\n  public locked: boolean = false;\n  public hidden: boolean = false;\n\n  constructor(private fb: FormBuilder) {}\n\n  ngOnInit(): void {\n    const validators = [];\n    if (this.required) {\n      validators.push(Validators.required);\n    }\n    this.componentFormGroup = this.fb.group({\n      input: [this.config.label, validators], // default to first item in array\n    });\n    this.componentFormGroup.controls.input.valueChanges.subscribe((value) => {\n      this.valueChanged.emit(value);\n    });\n    this.onComponentReady.emit(this.componentFormGroup);\n  }\n\n  /**\n   * Toggles open and close select options\n   * @param e MouseEvent to stop propagation.\n   */\n  toggleOpen(e: MouseEvent): void {\n    e.stopPropagation();\n    this.isOpen = !this.isOpen;\n  }\n\n  /**\n   * Updates the form with the selected option value\n   * @param idx index of the select option clicked on\n   */\n  updateForm(idx: number): void {\n    this.componentFormGroup.setValue({ input: this.config.options[idx] });\n  }\n}\n",
            "properties": [
                {
                    "name": "autocomplete",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "label",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "options",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "size",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "IPayStatusHistory",
            "id": "interface-IPayStatusHistory-5f973f44a1fbc4d9c4ddeb3bf119021c",
            "file": "src/app/shared/interfaces/merge-report.interface.ts",
            "type": "interface",
            "sourceCode": "import {\n  ISource,\n  ICreditScoreFactor,\n  ICreditScoreAttributes,\n} from '@shared/interfaces/common-tu.interface';\n\nexport interface IMergeReport {\n  TrueLinkCreditReportType: ITrueLinkCreditReportType;\n}\nexport interface ITrueLinkCreditReportType {\n  SB168Frozen?: string;\n  Borrower?: IBorrower;\n  TradeLinePartition?: ITradeLinePartition[] | ITradeLinePartition;\n  InquiryPartition?: IInquiryPartition;\n  Message?:\n    | { code?: string; type?: string }[]\n    | { code?: string; type?: string };\n  Summary?: ISummary;\n  Sources?: { Source?: ISource };\n  SafetyCheckPassed?: boolean | string;\n}\nexport interface IBorrower {\n  BorrowerAddress?: {\n    CreditAddress?: string;\n    Dwelling?: string;\n    Origin?: string;\n    Ownership?: string;\n    Source?: ISource;\n  };\n  Birth?: {\n    BirthDate?: string;\n    Source?: ISource;\n  };\n  CreditScore?: {\n    CreditScoreFactor?: ICreditScoreFactor[];\n    CreditScoreMode?: string;\n    NoScoreReason?: string;\n    Source?: ISource;\n  };\n  SocialPartition?: {\n    Social?: {\n      SocialSecurityNumber?: String;\n      Source?: ISource;\n    };\n  };\n}\nexport interface ITradeLinePartition {\n  accountTypeDescription?: string;\n  accountTypeSymbol?: string;\n  accountTypeAbbreviation?: string;\n  Tradeline?: ITradeline;\n}\nexport interface ITradeline {\n  subscriberCode?: string;\n  highBalance?: number | string;\n  dateVerified?: string;\n  dateReported?: string;\n  dateOpened?: string;\n  accountNumber?: string;\n  dateAccountStatus?: string;\n  currentBalance?: number | string;\n  creditorName?: string;\n  position?: number | string;\n  bureau?: string;\n  AccountCondition?: ICreditScoreAttributes;\n  AccountDesignator?: ICreditScoreAttributes;\n  DisputeFlag?: ICreditScoreAttributes;\n  IndustryCode?: ICreditScoreAttributes;\n  OpenClosed?: ICreditScoreAttributes;\n  PayStatus?: ICreditScoreAttributes;\n  VerificationIndicator?: ICreditScoreAttributes;\n  Remark?: ITradelineRemark;\n  GrantedTrade: any;\n  CollectionTrade?: ITradelineCollection;\n  Source?: ISource;\n}\nexport interface ITradelineRemark {\n  customRemark?: string;\n  RemarkCode?: ICreditScoreAttributes;\n}\nexport interface IGrantedTrade {\n  monthsReviewed: number | string;\n  monthlyPayment: number | string;\n  late90Count: number | string;\n  late60Count: number | string;\n  late30Count: number | string;\n  dateLastPayment: string;\n  termMonths: number | string;\n  collateral: string;\n  amountPastDue: number | string;\n  worstPatStatusCount: number | string;\n  AccountType: ICreditScoreAttributes;\n  CreditType: ICreditScoreAttributes;\n  PaymentFrequency: ICreditScoreAttributes;\n  TermType: ICreditScoreAttributes;\n  WorstPayStatus: ICreditScoreAttributes;\n  PayStatusHistory: IPayStatusHistory;\n  CreditLimit: number | string;\n}\nexport interface IPayStatusHistory {\n  status: string;\n  startDate: string;\n  MonthlyPayStatus: IMonthyPayStatusItem[];\n}\nexport interface IMonthyPayStatusItem {\n  date: string;\n  status: string;\n}\nexport interface ITradelineCollection {\n  originalCreditor?: string;\n  creditType?: ICreditScoreAttributes;\n}\nexport interface IInquiryPartition {\n  Inquiry?: {\n    inquiryDate?: string;\n    subscriberName?: string;\n    subscriberNumber?: number | string;\n    bureau?: string;\n    inquiryType?: string;\n    IndustryCode?: string;\n    Source?: ISource;\n  };\n}\nexport interface ISummary {\n  TradelineSummary?: {\n    TransUnion?: string;\n  };\n  InquirySummary?: {\n    TransUnion?: string;\n  };\n  PublicRecordSummary?: {\n    TransUnion?: string;\n  };\n  Sources?: {\n    Source?: {\n      Bureau?: string;\n      InquiryDate?: string;\n      OriginalData?: string;\n    };\n  };\n  SafetyCheckPassed?: string;\n}\nexport interface IUnparsedCreditReport {\n  '#text': string;\n  type: string;\n}\n",
            "properties": [
                {
                    "name": "MonthlyPayStatus",
                    "type": "IMonthyPayStatusItem[]",
                    "optional": false,
                    "description": "",
                    "line": 103
                },
                {
                    "name": "startDate",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 102
                },
                {
                    "name": "status",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 101
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "IProgressStep",
            "id": "interface-IProgressStep-1e639b0664c76125e87f65fa04a97b7b",
            "file": "src/app/shared/components/progressbars/filled-checktext-progressbar/filled-checktext-progressbar.component.ts",
            "type": "interface",
            "sourceCode": "import { Component, Input, OnChanges, OnInit } from '@angular/core';\n\nexport interface IProgressStep {\n  id: number;\n  active: boolean;\n  complete: boolean;\n  name: string;\n}\nexport interface IFilledChecktextProgressbarConfig {\n  size: string;\n}\n\n@Component({\n  selector: 'brave-filled-checktext-progressbar',\n  templateUrl: './filled-checktext-progressbar.component.html',\n})\nexport class FilledChecktextProgressbarComponent {\n  @Input() config: IFilledChecktextProgressbarConfig = { size: 'base' };\n  @Input() steps: IProgressStep[] = [];\n  @Input() activatedStep: number = -1;\n  @Input() completedStep: number = -1;\n\n  constructor() {}\n}\n",
            "properties": [
                {
                    "name": "active",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "complete",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "id",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "name",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "IRevolvingTradelineDetails",
            "id": "interface-IRevolvingTradelineDetails-2736bcc9788643dbf4a420f037284b5b",
            "file": "src/app/shared/components/tradelines/tradeline-details/tradeline-details.component.ts",
            "type": "interface",
            "sourceCode": "import { Component, OnInit, Input } from '@angular/core';\n\nexport interface IRevolvingTradelineDetails {\n  dateOpened?: string;\n  accountDesignator?: string;\n  late30Count?: number | string;\n  late60Count?: number | string;\n  late90Count?: number | string;\n  amountPastDue?: number | string;\n  disputeFlag?: string;\n}\n\nexport interface IInstallmentTradelineDetails {\n  dateOpened?: string;\n  accountDesignator?: string;\n  termMonths?: number | string;\n  late30Count?: number | string;\n  late60Count?: number | string;\n  late90Count?: number | string;\n  amountPastDue?: number | string;\n  disputeFlag?: string;\n}\n\nexport interface ICollectionsTradelineDetails {\n  originalCreditor?: string;\n  creditType?: string;\n  dateOpened?: string;\n  disputeFlag?: string;\n}\n\nexport interface ITradelineDetailsConfig {\n  originalCreditor?: string | undefined;\n  creditType?: string | undefined;\n  dateOpened?: string | undefined;\n  accountDesignator?: string | undefined;\n  termMonths?: number | string | undefined;\n  late30Count?: number | string | undefined;\n  late60Count?: number | string | undefined;\n  late90Count?: number | string | undefined;\n  amountPastDue?: number | string | undefined;\n  disputeFlag?: string | undefined;\n  payments?: any | undefined;\n}\n\n@Component({\n  selector: 'brave-tradeline-details',\n  templateUrl: './tradeline-details.component.html',\n})\nexport class TradelineDetailsComponent implements OnInit {\n  @Input() config: ITradelineDetailsConfig = {} as ITradelineDetailsConfig;\n  @Input() payments: any;\n  @Input() remarks: string = '';\n  @Input() address: string = '';\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n",
            "properties": [
                {
                    "name": "accountDesignator",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "amountPastDue",
                    "type": "number | string",
                    "optional": true,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "dateOpened",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "disputeFlag",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "late30Count",
                    "type": "number | string",
                    "optional": true,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "late60Count",
                    "type": "number | string",
                    "optional": true,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "late90Count",
                    "type": "number | string",
                    "optional": true,
                    "description": "",
                    "line": 8
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "ISource",
            "id": "interface-ISource-d2fa7b3be41a874e8ffeb52775c65f7d",
            "file": "src/app/shared/interfaces/common-tu.interface.ts",
            "type": "interface",
            "sourceCode": "export interface ICreditScoreFactor {\n  bureauCode?: number;\n  FactorType?: string;\n  Factor?: ICreditScoreAttributes;\n  FactorText?: string[];\n}\n\nexport interface ICreditScoreAttributes {\n  abbreviation?: string;\n  description?: string;\n  symbol?: number | string;\n  rank?: number | string;\n}\n\nexport interface ISource {\n  BorrowerKey?: string;\n  Bureau?: ICreditScoreAttributes;\n  InquiryDate?: string;\n  Reference?: string;\n}\n",
            "properties": [
                {
                    "name": "BorrowerKey",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "Bureau",
                    "type": "ICreditScoreAttributes",
                    "optional": true,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "InquiryDate",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "Reference",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 19
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "ISubmenuItem",
            "id": "interface-ISubmenuItem-e5e1cbc1f941d50ca014cf1b1ff21fd0",
            "file": "src/app/shared/components/dropdowns/popdowns/menu-dropdown/menu-dropdown.component.ts",
            "type": "interface",
            "sourceCode": "import { Component, ElementRef, Input, OnInit, ViewChild } from '@angular/core';\nimport { createPopper } from '@popperjs/core';\n\nexport interface ISubmenuItem {\n  submenu: string;\n  route: string;\n  group?: string;\n  break?: boolean;\n}\nexport interface IMenuDropdown {\n  menu: string;\n  submenus?: ISubmenuItem[];\n}\n\n@Component({\n  selector: 'brave-menu-dropdown',\n  templateUrl: './menu-dropdown.component.html',\n})\nexport class MenuDropdownComponent implements OnInit {\n  @Input() config: IMenuDropdown = {\n    menu: 'Menu',\n    submenus: [\n      { submenu: 'Sub 1', route: '/submenu1', group: 'Group 1' },\n      { submenu: 'Sub 2', route: '/submenu2' },\n      { submenu: 'Sub 3', route: '/submenu3' },\n      { submenu: 'Sub 4', route: '/submenu4' },\n      { submenu: 'Sub 5', route: '/submenu5', break: true },\n      { submenu: 'Sub 6', route: '/submenu6', group: 'Group 2' },\n      { submenu: 'Sub 7', route: '/submenu7' },\n      { submenu: 'Sub 8', route: '/submenu8', break: true },\n      { submenu: 'Sub 9', route: '/submenu9', group: 'Group 3' },\n      { submenu: 'Sub 10', route: '/submenu10' },\n    ],\n  };\n  dropdownPopoverShow = false;\n  @ViewChild('btnDropdownRef', { static: false }) btnDropdownRef:\n    | ElementRef\n    | undefined;\n  @ViewChild('popoverDropdownRef', { static: false })\n  popoverDropdownRef: ElementRef | undefined;\n  ngOnInit() {}\n  toggleDropdown(event: { preventDefault: () => void }) {\n    event.preventDefault();\n    if (this.dropdownPopoverShow) {\n      this.dropdownPopoverShow = false;\n    } else {\n      this.dropdownPopoverShow = true;\n      this.createPoppper();\n    }\n  }\n  createPoppper() {\n    createPopper(\n      this.btnDropdownRef?.nativeElement,\n      this.popoverDropdownRef?.nativeElement,\n      {\n        placement: 'bottom-start',\n      }\n    );\n  }\n}\n",
            "properties": [
                {
                    "name": "break",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "group",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "route",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "submenu",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "ISummary",
            "id": "interface-ISummary-5f973f44a1fbc4d9c4ddeb3bf119021c",
            "file": "src/app/shared/interfaces/merge-report.interface.ts",
            "type": "interface",
            "sourceCode": "import {\n  ISource,\n  ICreditScoreFactor,\n  ICreditScoreAttributes,\n} from '@shared/interfaces/common-tu.interface';\n\nexport interface IMergeReport {\n  TrueLinkCreditReportType: ITrueLinkCreditReportType;\n}\nexport interface ITrueLinkCreditReportType {\n  SB168Frozen?: string;\n  Borrower?: IBorrower;\n  TradeLinePartition?: ITradeLinePartition[] | ITradeLinePartition;\n  InquiryPartition?: IInquiryPartition;\n  Message?:\n    | { code?: string; type?: string }[]\n    | { code?: string; type?: string };\n  Summary?: ISummary;\n  Sources?: { Source?: ISource };\n  SafetyCheckPassed?: boolean | string;\n}\nexport interface IBorrower {\n  BorrowerAddress?: {\n    CreditAddress?: string;\n    Dwelling?: string;\n    Origin?: string;\n    Ownership?: string;\n    Source?: ISource;\n  };\n  Birth?: {\n    BirthDate?: string;\n    Source?: ISource;\n  };\n  CreditScore?: {\n    CreditScoreFactor?: ICreditScoreFactor[];\n    CreditScoreMode?: string;\n    NoScoreReason?: string;\n    Source?: ISource;\n  };\n  SocialPartition?: {\n    Social?: {\n      SocialSecurityNumber?: String;\n      Source?: ISource;\n    };\n  };\n}\nexport interface ITradeLinePartition {\n  accountTypeDescription?: string;\n  accountTypeSymbol?: string;\n  accountTypeAbbreviation?: string;\n  Tradeline?: ITradeline;\n}\nexport interface ITradeline {\n  subscriberCode?: string;\n  highBalance?: number | string;\n  dateVerified?: string;\n  dateReported?: string;\n  dateOpened?: string;\n  accountNumber?: string;\n  dateAccountStatus?: string;\n  currentBalance?: number | string;\n  creditorName?: string;\n  position?: number | string;\n  bureau?: string;\n  AccountCondition?: ICreditScoreAttributes;\n  AccountDesignator?: ICreditScoreAttributes;\n  DisputeFlag?: ICreditScoreAttributes;\n  IndustryCode?: ICreditScoreAttributes;\n  OpenClosed?: ICreditScoreAttributes;\n  PayStatus?: ICreditScoreAttributes;\n  VerificationIndicator?: ICreditScoreAttributes;\n  Remark?: ITradelineRemark;\n  GrantedTrade: any;\n  CollectionTrade?: ITradelineCollection;\n  Source?: ISource;\n}\nexport interface ITradelineRemark {\n  customRemark?: string;\n  RemarkCode?: ICreditScoreAttributes;\n}\nexport interface IGrantedTrade {\n  monthsReviewed: number | string;\n  monthlyPayment: number | string;\n  late90Count: number | string;\n  late60Count: number | string;\n  late30Count: number | string;\n  dateLastPayment: string;\n  termMonths: number | string;\n  collateral: string;\n  amountPastDue: number | string;\n  worstPatStatusCount: number | string;\n  AccountType: ICreditScoreAttributes;\n  CreditType: ICreditScoreAttributes;\n  PaymentFrequency: ICreditScoreAttributes;\n  TermType: ICreditScoreAttributes;\n  WorstPayStatus: ICreditScoreAttributes;\n  PayStatusHistory: IPayStatusHistory;\n  CreditLimit: number | string;\n}\nexport interface IPayStatusHistory {\n  status: string;\n  startDate: string;\n  MonthlyPayStatus: IMonthyPayStatusItem[];\n}\nexport interface IMonthyPayStatusItem {\n  date: string;\n  status: string;\n}\nexport interface ITradelineCollection {\n  originalCreditor?: string;\n  creditType?: ICreditScoreAttributes;\n}\nexport interface IInquiryPartition {\n  Inquiry?: {\n    inquiryDate?: string;\n    subscriberName?: string;\n    subscriberNumber?: number | string;\n    bureau?: string;\n    inquiryType?: string;\n    IndustryCode?: string;\n    Source?: ISource;\n  };\n}\nexport interface ISummary {\n  TradelineSummary?: {\n    TransUnion?: string;\n  };\n  InquirySummary?: {\n    TransUnion?: string;\n  };\n  PublicRecordSummary?: {\n    TransUnion?: string;\n  };\n  Sources?: {\n    Source?: {\n      Bureau?: string;\n      InquiryDate?: string;\n      OriginalData?: string;\n    };\n  };\n  SafetyCheckPassed?: string;\n}\nexport interface IUnparsedCreditReport {\n  '#text': string;\n  type: string;\n}\n",
            "properties": [
                {
                    "name": "InquirySummary",
                    "type": "literal type",
                    "optional": true,
                    "description": "",
                    "line": 128
                },
                {
                    "name": "PublicRecordSummary",
                    "type": "literal type",
                    "optional": true,
                    "description": "",
                    "line": 131
                },
                {
                    "name": "SafetyCheckPassed",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 141
                },
                {
                    "name": "Sources",
                    "type": "literal type",
                    "optional": true,
                    "description": "",
                    "line": 134
                },
                {
                    "name": "TradelineSummary",
                    "type": "literal type",
                    "optional": true,
                    "description": "",
                    "line": 125
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "ITradeline",
            "id": "interface-ITradeline-5f973f44a1fbc4d9c4ddeb3bf119021c",
            "file": "src/app/shared/interfaces/merge-report.interface.ts",
            "type": "interface",
            "sourceCode": "import {\n  ISource,\n  ICreditScoreFactor,\n  ICreditScoreAttributes,\n} from '@shared/interfaces/common-tu.interface';\n\nexport interface IMergeReport {\n  TrueLinkCreditReportType: ITrueLinkCreditReportType;\n}\nexport interface ITrueLinkCreditReportType {\n  SB168Frozen?: string;\n  Borrower?: IBorrower;\n  TradeLinePartition?: ITradeLinePartition[] | ITradeLinePartition;\n  InquiryPartition?: IInquiryPartition;\n  Message?:\n    | { code?: string; type?: string }[]\n    | { code?: string; type?: string };\n  Summary?: ISummary;\n  Sources?: { Source?: ISource };\n  SafetyCheckPassed?: boolean | string;\n}\nexport interface IBorrower {\n  BorrowerAddress?: {\n    CreditAddress?: string;\n    Dwelling?: string;\n    Origin?: string;\n    Ownership?: string;\n    Source?: ISource;\n  };\n  Birth?: {\n    BirthDate?: string;\n    Source?: ISource;\n  };\n  CreditScore?: {\n    CreditScoreFactor?: ICreditScoreFactor[];\n    CreditScoreMode?: string;\n    NoScoreReason?: string;\n    Source?: ISource;\n  };\n  SocialPartition?: {\n    Social?: {\n      SocialSecurityNumber?: String;\n      Source?: ISource;\n    };\n  };\n}\nexport interface ITradeLinePartition {\n  accountTypeDescription?: string;\n  accountTypeSymbol?: string;\n  accountTypeAbbreviation?: string;\n  Tradeline?: ITradeline;\n}\nexport interface ITradeline {\n  subscriberCode?: string;\n  highBalance?: number | string;\n  dateVerified?: string;\n  dateReported?: string;\n  dateOpened?: string;\n  accountNumber?: string;\n  dateAccountStatus?: string;\n  currentBalance?: number | string;\n  creditorName?: string;\n  position?: number | string;\n  bureau?: string;\n  AccountCondition?: ICreditScoreAttributes;\n  AccountDesignator?: ICreditScoreAttributes;\n  DisputeFlag?: ICreditScoreAttributes;\n  IndustryCode?: ICreditScoreAttributes;\n  OpenClosed?: ICreditScoreAttributes;\n  PayStatus?: ICreditScoreAttributes;\n  VerificationIndicator?: ICreditScoreAttributes;\n  Remark?: ITradelineRemark;\n  GrantedTrade: any;\n  CollectionTrade?: ITradelineCollection;\n  Source?: ISource;\n}\nexport interface ITradelineRemark {\n  customRemark?: string;\n  RemarkCode?: ICreditScoreAttributes;\n}\nexport interface IGrantedTrade {\n  monthsReviewed: number | string;\n  monthlyPayment: number | string;\n  late90Count: number | string;\n  late60Count: number | string;\n  late30Count: number | string;\n  dateLastPayment: string;\n  termMonths: number | string;\n  collateral: string;\n  amountPastDue: number | string;\n  worstPatStatusCount: number | string;\n  AccountType: ICreditScoreAttributes;\n  CreditType: ICreditScoreAttributes;\n  PaymentFrequency: ICreditScoreAttributes;\n  TermType: ICreditScoreAttributes;\n  WorstPayStatus: ICreditScoreAttributes;\n  PayStatusHistory: IPayStatusHistory;\n  CreditLimit: number | string;\n}\nexport interface IPayStatusHistory {\n  status: string;\n  startDate: string;\n  MonthlyPayStatus: IMonthyPayStatusItem[];\n}\nexport interface IMonthyPayStatusItem {\n  date: string;\n  status: string;\n}\nexport interface ITradelineCollection {\n  originalCreditor?: string;\n  creditType?: ICreditScoreAttributes;\n}\nexport interface IInquiryPartition {\n  Inquiry?: {\n    inquiryDate?: string;\n    subscriberName?: string;\n    subscriberNumber?: number | string;\n    bureau?: string;\n    inquiryType?: string;\n    IndustryCode?: string;\n    Source?: ISource;\n  };\n}\nexport interface ISummary {\n  TradelineSummary?: {\n    TransUnion?: string;\n  };\n  InquirySummary?: {\n    TransUnion?: string;\n  };\n  PublicRecordSummary?: {\n    TransUnion?: string;\n  };\n  Sources?: {\n    Source?: {\n      Bureau?: string;\n      InquiryDate?: string;\n      OriginalData?: string;\n    };\n  };\n  SafetyCheckPassed?: string;\n}\nexport interface IUnparsedCreditReport {\n  '#text': string;\n  type: string;\n}\n",
            "properties": [
                {
                    "name": "AccountCondition",
                    "type": "ICreditScoreAttributes",
                    "optional": true,
                    "description": "",
                    "line": 65
                },
                {
                    "name": "AccountDesignator",
                    "type": "ICreditScoreAttributes",
                    "optional": true,
                    "description": "",
                    "line": 66
                },
                {
                    "name": "accountNumber",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 59
                },
                {
                    "name": "bureau",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 64
                },
                {
                    "name": "CollectionTrade",
                    "type": "ITradelineCollection",
                    "optional": true,
                    "description": "",
                    "line": 74
                },
                {
                    "name": "creditorName",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 62
                },
                {
                    "name": "currentBalance",
                    "type": "number | string",
                    "optional": true,
                    "description": "",
                    "line": 61
                },
                {
                    "name": "dateAccountStatus",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 60
                },
                {
                    "name": "dateOpened",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 58
                },
                {
                    "name": "dateReported",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 57
                },
                {
                    "name": "dateVerified",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 56
                },
                {
                    "name": "DisputeFlag",
                    "type": "ICreditScoreAttributes",
                    "optional": true,
                    "description": "",
                    "line": 67
                },
                {
                    "name": "GrantedTrade",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 73
                },
                {
                    "name": "highBalance",
                    "type": "number | string",
                    "optional": true,
                    "description": "",
                    "line": 55
                },
                {
                    "name": "IndustryCode",
                    "type": "ICreditScoreAttributes",
                    "optional": true,
                    "description": "",
                    "line": 68
                },
                {
                    "name": "OpenClosed",
                    "type": "ICreditScoreAttributes",
                    "optional": true,
                    "description": "",
                    "line": 69
                },
                {
                    "name": "PayStatus",
                    "type": "ICreditScoreAttributes",
                    "optional": true,
                    "description": "",
                    "line": 70
                },
                {
                    "name": "position",
                    "type": "number | string",
                    "optional": true,
                    "description": "",
                    "line": 63
                },
                {
                    "name": "Remark",
                    "type": "ITradelineRemark",
                    "optional": true,
                    "description": "",
                    "line": 72
                },
                {
                    "name": "Source",
                    "type": "ISource",
                    "optional": true,
                    "description": "",
                    "line": 75
                },
                {
                    "name": "subscriberCode",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 54
                },
                {
                    "name": "VerificationIndicator",
                    "type": "ICreditScoreAttributes",
                    "optional": true,
                    "description": "",
                    "line": 71
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "ITradelineCollection",
            "id": "interface-ITradelineCollection-5f973f44a1fbc4d9c4ddeb3bf119021c",
            "file": "src/app/shared/interfaces/merge-report.interface.ts",
            "type": "interface",
            "sourceCode": "import {\n  ISource,\n  ICreditScoreFactor,\n  ICreditScoreAttributes,\n} from '@shared/interfaces/common-tu.interface';\n\nexport interface IMergeReport {\n  TrueLinkCreditReportType: ITrueLinkCreditReportType;\n}\nexport interface ITrueLinkCreditReportType {\n  SB168Frozen?: string;\n  Borrower?: IBorrower;\n  TradeLinePartition?: ITradeLinePartition[] | ITradeLinePartition;\n  InquiryPartition?: IInquiryPartition;\n  Message?:\n    | { code?: string; type?: string }[]\n    | { code?: string; type?: string };\n  Summary?: ISummary;\n  Sources?: { Source?: ISource };\n  SafetyCheckPassed?: boolean | string;\n}\nexport interface IBorrower {\n  BorrowerAddress?: {\n    CreditAddress?: string;\n    Dwelling?: string;\n    Origin?: string;\n    Ownership?: string;\n    Source?: ISource;\n  };\n  Birth?: {\n    BirthDate?: string;\n    Source?: ISource;\n  };\n  CreditScore?: {\n    CreditScoreFactor?: ICreditScoreFactor[];\n    CreditScoreMode?: string;\n    NoScoreReason?: string;\n    Source?: ISource;\n  };\n  SocialPartition?: {\n    Social?: {\n      SocialSecurityNumber?: String;\n      Source?: ISource;\n    };\n  };\n}\nexport interface ITradeLinePartition {\n  accountTypeDescription?: string;\n  accountTypeSymbol?: string;\n  accountTypeAbbreviation?: string;\n  Tradeline?: ITradeline;\n}\nexport interface ITradeline {\n  subscriberCode?: string;\n  highBalance?: number | string;\n  dateVerified?: string;\n  dateReported?: string;\n  dateOpened?: string;\n  accountNumber?: string;\n  dateAccountStatus?: string;\n  currentBalance?: number | string;\n  creditorName?: string;\n  position?: number | string;\n  bureau?: string;\n  AccountCondition?: ICreditScoreAttributes;\n  AccountDesignator?: ICreditScoreAttributes;\n  DisputeFlag?: ICreditScoreAttributes;\n  IndustryCode?: ICreditScoreAttributes;\n  OpenClosed?: ICreditScoreAttributes;\n  PayStatus?: ICreditScoreAttributes;\n  VerificationIndicator?: ICreditScoreAttributes;\n  Remark?: ITradelineRemark;\n  GrantedTrade: any;\n  CollectionTrade?: ITradelineCollection;\n  Source?: ISource;\n}\nexport interface ITradelineRemark {\n  customRemark?: string;\n  RemarkCode?: ICreditScoreAttributes;\n}\nexport interface IGrantedTrade {\n  monthsReviewed: number | string;\n  monthlyPayment: number | string;\n  late90Count: number | string;\n  late60Count: number | string;\n  late30Count: number | string;\n  dateLastPayment: string;\n  termMonths: number | string;\n  collateral: string;\n  amountPastDue: number | string;\n  worstPatStatusCount: number | string;\n  AccountType: ICreditScoreAttributes;\n  CreditType: ICreditScoreAttributes;\n  PaymentFrequency: ICreditScoreAttributes;\n  TermType: ICreditScoreAttributes;\n  WorstPayStatus: ICreditScoreAttributes;\n  PayStatusHistory: IPayStatusHistory;\n  CreditLimit: number | string;\n}\nexport interface IPayStatusHistory {\n  status: string;\n  startDate: string;\n  MonthlyPayStatus: IMonthyPayStatusItem[];\n}\nexport interface IMonthyPayStatusItem {\n  date: string;\n  status: string;\n}\nexport interface ITradelineCollection {\n  originalCreditor?: string;\n  creditType?: ICreditScoreAttributes;\n}\nexport interface IInquiryPartition {\n  Inquiry?: {\n    inquiryDate?: string;\n    subscriberName?: string;\n    subscriberNumber?: number | string;\n    bureau?: string;\n    inquiryType?: string;\n    IndustryCode?: string;\n    Source?: ISource;\n  };\n}\nexport interface ISummary {\n  TradelineSummary?: {\n    TransUnion?: string;\n  };\n  InquirySummary?: {\n    TransUnion?: string;\n  };\n  PublicRecordSummary?: {\n    TransUnion?: string;\n  };\n  Sources?: {\n    Source?: {\n      Bureau?: string;\n      InquiryDate?: string;\n      OriginalData?: string;\n    };\n  };\n  SafetyCheckPassed?: string;\n}\nexport interface IUnparsedCreditReport {\n  '#text': string;\n  type: string;\n}\n",
            "properties": [
                {
                    "name": "creditType",
                    "type": "ICreditScoreAttributes",
                    "optional": true,
                    "description": "",
                    "line": 111
                },
                {
                    "name": "originalCreditor",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 110
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "ITradelineDetailsConfig",
            "id": "interface-ITradelineDetailsConfig-2736bcc9788643dbf4a420f037284b5b",
            "file": "src/app/shared/components/tradelines/tradeline-details/tradeline-details.component.ts",
            "type": "interface",
            "sourceCode": "import { Component, OnInit, Input } from '@angular/core';\n\nexport interface IRevolvingTradelineDetails {\n  dateOpened?: string;\n  accountDesignator?: string;\n  late30Count?: number | string;\n  late60Count?: number | string;\n  late90Count?: number | string;\n  amountPastDue?: number | string;\n  disputeFlag?: string;\n}\n\nexport interface IInstallmentTradelineDetails {\n  dateOpened?: string;\n  accountDesignator?: string;\n  termMonths?: number | string;\n  late30Count?: number | string;\n  late60Count?: number | string;\n  late90Count?: number | string;\n  amountPastDue?: number | string;\n  disputeFlag?: string;\n}\n\nexport interface ICollectionsTradelineDetails {\n  originalCreditor?: string;\n  creditType?: string;\n  dateOpened?: string;\n  disputeFlag?: string;\n}\n\nexport interface ITradelineDetailsConfig {\n  originalCreditor?: string | undefined;\n  creditType?: string | undefined;\n  dateOpened?: string | undefined;\n  accountDesignator?: string | undefined;\n  termMonths?: number | string | undefined;\n  late30Count?: number | string | undefined;\n  late60Count?: number | string | undefined;\n  late90Count?: number | string | undefined;\n  amountPastDue?: number | string | undefined;\n  disputeFlag?: string | undefined;\n  payments?: any | undefined;\n}\n\n@Component({\n  selector: 'brave-tradeline-details',\n  templateUrl: './tradeline-details.component.html',\n})\nexport class TradelineDetailsComponent implements OnInit {\n  @Input() config: ITradelineDetailsConfig = {} as ITradelineDetailsConfig;\n  @Input() payments: any;\n  @Input() remarks: string = '';\n  @Input() address: string = '';\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n",
            "properties": [
                {
                    "name": "accountDesignator",
                    "type": "string | undefined",
                    "optional": true,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "amountPastDue",
                    "type": "number | string | undefined",
                    "optional": true,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "creditType",
                    "type": "string | undefined",
                    "optional": true,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "dateOpened",
                    "type": "string | undefined",
                    "optional": true,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "disputeFlag",
                    "type": "string | undefined",
                    "optional": true,
                    "description": "",
                    "line": 41
                },
                {
                    "name": "late30Count",
                    "type": "number | string | undefined",
                    "optional": true,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "late60Count",
                    "type": "number | string | undefined",
                    "optional": true,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "late90Count",
                    "type": "number | string | undefined",
                    "optional": true,
                    "description": "",
                    "line": 39
                },
                {
                    "name": "originalCreditor",
                    "type": "string | undefined",
                    "optional": true,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "payments",
                    "type": "any | undefined",
                    "optional": true,
                    "description": "",
                    "line": 42
                },
                {
                    "name": "termMonths",
                    "type": "number | string | undefined",
                    "optional": true,
                    "description": "",
                    "line": 36
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "ITradeLinePartition",
            "id": "interface-ITradeLinePartition-5f973f44a1fbc4d9c4ddeb3bf119021c",
            "file": "src/app/shared/interfaces/merge-report.interface.ts",
            "type": "interface",
            "sourceCode": "import {\n  ISource,\n  ICreditScoreFactor,\n  ICreditScoreAttributes,\n} from '@shared/interfaces/common-tu.interface';\n\nexport interface IMergeReport {\n  TrueLinkCreditReportType: ITrueLinkCreditReportType;\n}\nexport interface ITrueLinkCreditReportType {\n  SB168Frozen?: string;\n  Borrower?: IBorrower;\n  TradeLinePartition?: ITradeLinePartition[] | ITradeLinePartition;\n  InquiryPartition?: IInquiryPartition;\n  Message?:\n    | { code?: string; type?: string }[]\n    | { code?: string; type?: string };\n  Summary?: ISummary;\n  Sources?: { Source?: ISource };\n  SafetyCheckPassed?: boolean | string;\n}\nexport interface IBorrower {\n  BorrowerAddress?: {\n    CreditAddress?: string;\n    Dwelling?: string;\n    Origin?: string;\n    Ownership?: string;\n    Source?: ISource;\n  };\n  Birth?: {\n    BirthDate?: string;\n    Source?: ISource;\n  };\n  CreditScore?: {\n    CreditScoreFactor?: ICreditScoreFactor[];\n    CreditScoreMode?: string;\n    NoScoreReason?: string;\n    Source?: ISource;\n  };\n  SocialPartition?: {\n    Social?: {\n      SocialSecurityNumber?: String;\n      Source?: ISource;\n    };\n  };\n}\nexport interface ITradeLinePartition {\n  accountTypeDescription?: string;\n  accountTypeSymbol?: string;\n  accountTypeAbbreviation?: string;\n  Tradeline?: ITradeline;\n}\nexport interface ITradeline {\n  subscriberCode?: string;\n  highBalance?: number | string;\n  dateVerified?: string;\n  dateReported?: string;\n  dateOpened?: string;\n  accountNumber?: string;\n  dateAccountStatus?: string;\n  currentBalance?: number | string;\n  creditorName?: string;\n  position?: number | string;\n  bureau?: string;\n  AccountCondition?: ICreditScoreAttributes;\n  AccountDesignator?: ICreditScoreAttributes;\n  DisputeFlag?: ICreditScoreAttributes;\n  IndustryCode?: ICreditScoreAttributes;\n  OpenClosed?: ICreditScoreAttributes;\n  PayStatus?: ICreditScoreAttributes;\n  VerificationIndicator?: ICreditScoreAttributes;\n  Remark?: ITradelineRemark;\n  GrantedTrade: any;\n  CollectionTrade?: ITradelineCollection;\n  Source?: ISource;\n}\nexport interface ITradelineRemark {\n  customRemark?: string;\n  RemarkCode?: ICreditScoreAttributes;\n}\nexport interface IGrantedTrade {\n  monthsReviewed: number | string;\n  monthlyPayment: number | string;\n  late90Count: number | string;\n  late60Count: number | string;\n  late30Count: number | string;\n  dateLastPayment: string;\n  termMonths: number | string;\n  collateral: string;\n  amountPastDue: number | string;\n  worstPatStatusCount: number | string;\n  AccountType: ICreditScoreAttributes;\n  CreditType: ICreditScoreAttributes;\n  PaymentFrequency: ICreditScoreAttributes;\n  TermType: ICreditScoreAttributes;\n  WorstPayStatus: ICreditScoreAttributes;\n  PayStatusHistory: IPayStatusHistory;\n  CreditLimit: number | string;\n}\nexport interface IPayStatusHistory {\n  status: string;\n  startDate: string;\n  MonthlyPayStatus: IMonthyPayStatusItem[];\n}\nexport interface IMonthyPayStatusItem {\n  date: string;\n  status: string;\n}\nexport interface ITradelineCollection {\n  originalCreditor?: string;\n  creditType?: ICreditScoreAttributes;\n}\nexport interface IInquiryPartition {\n  Inquiry?: {\n    inquiryDate?: string;\n    subscriberName?: string;\n    subscriberNumber?: number | string;\n    bureau?: string;\n    inquiryType?: string;\n    IndustryCode?: string;\n    Source?: ISource;\n  };\n}\nexport interface ISummary {\n  TradelineSummary?: {\n    TransUnion?: string;\n  };\n  InquirySummary?: {\n    TransUnion?: string;\n  };\n  PublicRecordSummary?: {\n    TransUnion?: string;\n  };\n  Sources?: {\n    Source?: {\n      Bureau?: string;\n      InquiryDate?: string;\n      OriginalData?: string;\n    };\n  };\n  SafetyCheckPassed?: string;\n}\nexport interface IUnparsedCreditReport {\n  '#text': string;\n  type: string;\n}\n",
            "properties": [
                {
                    "name": "accountTypeAbbreviation",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 50
                },
                {
                    "name": "accountTypeDescription",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 48
                },
                {
                    "name": "accountTypeSymbol",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 49
                },
                {
                    "name": "Tradeline",
                    "type": "ITradeline",
                    "optional": true,
                    "description": "",
                    "line": 51
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "ITradelineRemark",
            "id": "interface-ITradelineRemark-5f973f44a1fbc4d9c4ddeb3bf119021c",
            "file": "src/app/shared/interfaces/merge-report.interface.ts",
            "type": "interface",
            "sourceCode": "import {\n  ISource,\n  ICreditScoreFactor,\n  ICreditScoreAttributes,\n} from '@shared/interfaces/common-tu.interface';\n\nexport interface IMergeReport {\n  TrueLinkCreditReportType: ITrueLinkCreditReportType;\n}\nexport interface ITrueLinkCreditReportType {\n  SB168Frozen?: string;\n  Borrower?: IBorrower;\n  TradeLinePartition?: ITradeLinePartition[] | ITradeLinePartition;\n  InquiryPartition?: IInquiryPartition;\n  Message?:\n    | { code?: string; type?: string }[]\n    | { code?: string; type?: string };\n  Summary?: ISummary;\n  Sources?: { Source?: ISource };\n  SafetyCheckPassed?: boolean | string;\n}\nexport interface IBorrower {\n  BorrowerAddress?: {\n    CreditAddress?: string;\n    Dwelling?: string;\n    Origin?: string;\n    Ownership?: string;\n    Source?: ISource;\n  };\n  Birth?: {\n    BirthDate?: string;\n    Source?: ISource;\n  };\n  CreditScore?: {\n    CreditScoreFactor?: ICreditScoreFactor[];\n    CreditScoreMode?: string;\n    NoScoreReason?: string;\n    Source?: ISource;\n  };\n  SocialPartition?: {\n    Social?: {\n      SocialSecurityNumber?: String;\n      Source?: ISource;\n    };\n  };\n}\nexport interface ITradeLinePartition {\n  accountTypeDescription?: string;\n  accountTypeSymbol?: string;\n  accountTypeAbbreviation?: string;\n  Tradeline?: ITradeline;\n}\nexport interface ITradeline {\n  subscriberCode?: string;\n  highBalance?: number | string;\n  dateVerified?: string;\n  dateReported?: string;\n  dateOpened?: string;\n  accountNumber?: string;\n  dateAccountStatus?: string;\n  currentBalance?: number | string;\n  creditorName?: string;\n  position?: number | string;\n  bureau?: string;\n  AccountCondition?: ICreditScoreAttributes;\n  AccountDesignator?: ICreditScoreAttributes;\n  DisputeFlag?: ICreditScoreAttributes;\n  IndustryCode?: ICreditScoreAttributes;\n  OpenClosed?: ICreditScoreAttributes;\n  PayStatus?: ICreditScoreAttributes;\n  VerificationIndicator?: ICreditScoreAttributes;\n  Remark?: ITradelineRemark;\n  GrantedTrade: any;\n  CollectionTrade?: ITradelineCollection;\n  Source?: ISource;\n}\nexport interface ITradelineRemark {\n  customRemark?: string;\n  RemarkCode?: ICreditScoreAttributes;\n}\nexport interface IGrantedTrade {\n  monthsReviewed: number | string;\n  monthlyPayment: number | string;\n  late90Count: number | string;\n  late60Count: number | string;\n  late30Count: number | string;\n  dateLastPayment: string;\n  termMonths: number | string;\n  collateral: string;\n  amountPastDue: number | string;\n  worstPatStatusCount: number | string;\n  AccountType: ICreditScoreAttributes;\n  CreditType: ICreditScoreAttributes;\n  PaymentFrequency: ICreditScoreAttributes;\n  TermType: ICreditScoreAttributes;\n  WorstPayStatus: ICreditScoreAttributes;\n  PayStatusHistory: IPayStatusHistory;\n  CreditLimit: number | string;\n}\nexport interface IPayStatusHistory {\n  status: string;\n  startDate: string;\n  MonthlyPayStatus: IMonthyPayStatusItem[];\n}\nexport interface IMonthyPayStatusItem {\n  date: string;\n  status: string;\n}\nexport interface ITradelineCollection {\n  originalCreditor?: string;\n  creditType?: ICreditScoreAttributes;\n}\nexport interface IInquiryPartition {\n  Inquiry?: {\n    inquiryDate?: string;\n    subscriberName?: string;\n    subscriberNumber?: number | string;\n    bureau?: string;\n    inquiryType?: string;\n    IndustryCode?: string;\n    Source?: ISource;\n  };\n}\nexport interface ISummary {\n  TradelineSummary?: {\n    TransUnion?: string;\n  };\n  InquirySummary?: {\n    TransUnion?: string;\n  };\n  PublicRecordSummary?: {\n    TransUnion?: string;\n  };\n  Sources?: {\n    Source?: {\n      Bureau?: string;\n      InquiryDate?: string;\n      OriginalData?: string;\n    };\n  };\n  SafetyCheckPassed?: string;\n}\nexport interface IUnparsedCreditReport {\n  '#text': string;\n  type: string;\n}\n",
            "properties": [
                {
                    "name": "customRemark",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 78
                },
                {
                    "name": "RemarkCode",
                    "type": "ICreditScoreAttributes",
                    "optional": true,
                    "description": "",
                    "line": 79
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "ITransunionBAAnsweredQuestion",
            "id": "interface-ITransunionBAAnsweredQuestion-bf17b39c55fdc2a73c6c75be0f7eb82f",
            "file": "src/app/shared/interfaces/tu-kba-questions.interface.ts",
            "type": "interface",
            "sourceCode": "export interface ITransunionKBAQuestions {\n  ChallengeConfigurationType: {\n    RulesApp: string;\n    CorrectAnswersNeeded: string;\n    AnswerAttemptsAllowed: string;\n    MultiChoiceQuestion: ITransunionKBAQuestion[] | ITransunionKBAQuestion;\n    ApplicantChallengeId: string;\n    ApplicantId: string;\n  };\n}\n\nexport interface ITransunionKBAQuestion {\n  QuestionType: string;\n  SequenceNumber: string;\n  LastChanceQuestion: string;\n  FakeQuestion: string;\n  FullQuestionText: string;\n  KeyQuestionText: {\n    PromptDate: string;\n  };\n  AnswerChoice: ITransunionKBAAnswer[] | ITransunionKBAAnswer;\n  Key: string;\n  QuestionId: string;\n}\n\nexport interface ITransunionKBAAnswer {\n  SequenceNumber: string;\n  IsCorrectAnswer: string;\n  AnswerChoiceText: string;\n  Key: string;\n  AnswerChoiceId: string;\n}\n\nexport interface ITransunionBAAnsweredQuestion {\n  VerifyChallengeAnswersRequestMultiChoiceQuestion: {\n    QuestionId: number;\n    SelectedAnswerChoice: {\n      AnswerChoiceId: string;\n    };\n    AnswerChoiceText: string;\n    IsCorrectAnswer?: boolean;\n    Key: string;\n  };\n}\n\nexport interface ITransunionKBAChallengeAnswer {\n  VerifyChallengeAnswersResponseSuccess: {\n    AnswerVerificationStatus: string;\n    ApplicantChallengeId: string;\n    ChallengeConfiguration: {\n      RulesApp: string;\n      CorrectAnswersNeeded: string;\n      AnswerAttemptsAllowed: string;\n      MultiChoiceQuestion: ITransunionKBAQuestion[] | ITransunionKBAQuestion;\n      ApplicantChallengeId: string;\n      ApplicantId: string;\n    };\n  };\n}\n",
            "properties": [
                {
                    "name": "VerifyChallengeAnswersRequestMultiChoiceQuestion",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 35
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "ITransunionKBAAnswer",
            "id": "interface-ITransunionKBAAnswer-bf17b39c55fdc2a73c6c75be0f7eb82f",
            "file": "src/app/shared/interfaces/tu-kba-questions.interface.ts",
            "type": "interface",
            "sourceCode": "export interface ITransunionKBAQuestions {\n  ChallengeConfigurationType: {\n    RulesApp: string;\n    CorrectAnswersNeeded: string;\n    AnswerAttemptsAllowed: string;\n    MultiChoiceQuestion: ITransunionKBAQuestion[] | ITransunionKBAQuestion;\n    ApplicantChallengeId: string;\n    ApplicantId: string;\n  };\n}\n\nexport interface ITransunionKBAQuestion {\n  QuestionType: string;\n  SequenceNumber: string;\n  LastChanceQuestion: string;\n  FakeQuestion: string;\n  FullQuestionText: string;\n  KeyQuestionText: {\n    PromptDate: string;\n  };\n  AnswerChoice: ITransunionKBAAnswer[] | ITransunionKBAAnswer;\n  Key: string;\n  QuestionId: string;\n}\n\nexport interface ITransunionKBAAnswer {\n  SequenceNumber: string;\n  IsCorrectAnswer: string;\n  AnswerChoiceText: string;\n  Key: string;\n  AnswerChoiceId: string;\n}\n\nexport interface ITransunionBAAnsweredQuestion {\n  VerifyChallengeAnswersRequestMultiChoiceQuestion: {\n    QuestionId: number;\n    SelectedAnswerChoice: {\n      AnswerChoiceId: string;\n    };\n    AnswerChoiceText: string;\n    IsCorrectAnswer?: boolean;\n    Key: string;\n  };\n}\n\nexport interface ITransunionKBAChallengeAnswer {\n  VerifyChallengeAnswersResponseSuccess: {\n    AnswerVerificationStatus: string;\n    ApplicantChallengeId: string;\n    ChallengeConfiguration: {\n      RulesApp: string;\n      CorrectAnswersNeeded: string;\n      AnswerAttemptsAllowed: string;\n      MultiChoiceQuestion: ITransunionKBAQuestion[] | ITransunionKBAQuestion;\n      ApplicantChallengeId: string;\n      ApplicantId: string;\n    };\n  };\n}\n",
            "properties": [
                {
                    "name": "AnswerChoiceId",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "AnswerChoiceText",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "IsCorrectAnswer",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "Key",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "SequenceNumber",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 27
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "ITransunionKBAChallengeAnswer",
            "id": "interface-ITransunionKBAChallengeAnswer-bf17b39c55fdc2a73c6c75be0f7eb82f",
            "file": "src/app/shared/interfaces/tu-kba-questions.interface.ts",
            "type": "interface",
            "sourceCode": "export interface ITransunionKBAQuestions {\n  ChallengeConfigurationType: {\n    RulesApp: string;\n    CorrectAnswersNeeded: string;\n    AnswerAttemptsAllowed: string;\n    MultiChoiceQuestion: ITransunionKBAQuestion[] | ITransunionKBAQuestion;\n    ApplicantChallengeId: string;\n    ApplicantId: string;\n  };\n}\n\nexport interface ITransunionKBAQuestion {\n  QuestionType: string;\n  SequenceNumber: string;\n  LastChanceQuestion: string;\n  FakeQuestion: string;\n  FullQuestionText: string;\n  KeyQuestionText: {\n    PromptDate: string;\n  };\n  AnswerChoice: ITransunionKBAAnswer[] | ITransunionKBAAnswer;\n  Key: string;\n  QuestionId: string;\n}\n\nexport interface ITransunionKBAAnswer {\n  SequenceNumber: string;\n  IsCorrectAnswer: string;\n  AnswerChoiceText: string;\n  Key: string;\n  AnswerChoiceId: string;\n}\n\nexport interface ITransunionBAAnsweredQuestion {\n  VerifyChallengeAnswersRequestMultiChoiceQuestion: {\n    QuestionId: number;\n    SelectedAnswerChoice: {\n      AnswerChoiceId: string;\n    };\n    AnswerChoiceText: string;\n    IsCorrectAnswer?: boolean;\n    Key: string;\n  };\n}\n\nexport interface ITransunionKBAChallengeAnswer {\n  VerifyChallengeAnswersResponseSuccess: {\n    AnswerVerificationStatus: string;\n    ApplicantChallengeId: string;\n    ChallengeConfiguration: {\n      RulesApp: string;\n      CorrectAnswersNeeded: string;\n      AnswerAttemptsAllowed: string;\n      MultiChoiceQuestion: ITransunionKBAQuestion[] | ITransunionKBAQuestion;\n      ApplicantChallengeId: string;\n      ApplicantId: string;\n    };\n  };\n}\n",
            "properties": [
                {
                    "name": "VerifyChallengeAnswersResponseSuccess",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 47
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "ITransunionKBAQuestion",
            "id": "interface-ITransunionKBAQuestion-bf17b39c55fdc2a73c6c75be0f7eb82f",
            "file": "src/app/shared/interfaces/tu-kba-questions.interface.ts",
            "type": "interface",
            "sourceCode": "export interface ITransunionKBAQuestions {\n  ChallengeConfigurationType: {\n    RulesApp: string;\n    CorrectAnswersNeeded: string;\n    AnswerAttemptsAllowed: string;\n    MultiChoiceQuestion: ITransunionKBAQuestion[] | ITransunionKBAQuestion;\n    ApplicantChallengeId: string;\n    ApplicantId: string;\n  };\n}\n\nexport interface ITransunionKBAQuestion {\n  QuestionType: string;\n  SequenceNumber: string;\n  LastChanceQuestion: string;\n  FakeQuestion: string;\n  FullQuestionText: string;\n  KeyQuestionText: {\n    PromptDate: string;\n  };\n  AnswerChoice: ITransunionKBAAnswer[] | ITransunionKBAAnswer;\n  Key: string;\n  QuestionId: string;\n}\n\nexport interface ITransunionKBAAnswer {\n  SequenceNumber: string;\n  IsCorrectAnswer: string;\n  AnswerChoiceText: string;\n  Key: string;\n  AnswerChoiceId: string;\n}\n\nexport interface ITransunionBAAnsweredQuestion {\n  VerifyChallengeAnswersRequestMultiChoiceQuestion: {\n    QuestionId: number;\n    SelectedAnswerChoice: {\n      AnswerChoiceId: string;\n    };\n    AnswerChoiceText: string;\n    IsCorrectAnswer?: boolean;\n    Key: string;\n  };\n}\n\nexport interface ITransunionKBAChallengeAnswer {\n  VerifyChallengeAnswersResponseSuccess: {\n    AnswerVerificationStatus: string;\n    ApplicantChallengeId: string;\n    ChallengeConfiguration: {\n      RulesApp: string;\n      CorrectAnswersNeeded: string;\n      AnswerAttemptsAllowed: string;\n      MultiChoiceQuestion: ITransunionKBAQuestion[] | ITransunionKBAQuestion;\n      ApplicantChallengeId: string;\n      ApplicantId: string;\n    };\n  };\n}\n",
            "properties": [
                {
                    "name": "AnswerChoice",
                    "type": "ITransunionKBAAnswer[] | ITransunionKBAAnswer",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "FakeQuestion",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "FullQuestionText",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "Key",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "KeyQuestionText",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "LastChanceQuestion",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "QuestionId",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "QuestionType",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "SequenceNumber",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "ITransunionKBAQuestions",
            "id": "interface-ITransunionKBAQuestions-bf17b39c55fdc2a73c6c75be0f7eb82f",
            "file": "src/app/shared/interfaces/tu-kba-questions.interface.ts",
            "type": "interface",
            "sourceCode": "export interface ITransunionKBAQuestions {\n  ChallengeConfigurationType: {\n    RulesApp: string;\n    CorrectAnswersNeeded: string;\n    AnswerAttemptsAllowed: string;\n    MultiChoiceQuestion: ITransunionKBAQuestion[] | ITransunionKBAQuestion;\n    ApplicantChallengeId: string;\n    ApplicantId: string;\n  };\n}\n\nexport interface ITransunionKBAQuestion {\n  QuestionType: string;\n  SequenceNumber: string;\n  LastChanceQuestion: string;\n  FakeQuestion: string;\n  FullQuestionText: string;\n  KeyQuestionText: {\n    PromptDate: string;\n  };\n  AnswerChoice: ITransunionKBAAnswer[] | ITransunionKBAAnswer;\n  Key: string;\n  QuestionId: string;\n}\n\nexport interface ITransunionKBAAnswer {\n  SequenceNumber: string;\n  IsCorrectAnswer: string;\n  AnswerChoiceText: string;\n  Key: string;\n  AnswerChoiceId: string;\n}\n\nexport interface ITransunionBAAnsweredQuestion {\n  VerifyChallengeAnswersRequestMultiChoiceQuestion: {\n    QuestionId: number;\n    SelectedAnswerChoice: {\n      AnswerChoiceId: string;\n    };\n    AnswerChoiceText: string;\n    IsCorrectAnswer?: boolean;\n    Key: string;\n  };\n}\n\nexport interface ITransunionKBAChallengeAnswer {\n  VerifyChallengeAnswersResponseSuccess: {\n    AnswerVerificationStatus: string;\n    ApplicantChallengeId: string;\n    ChallengeConfiguration: {\n      RulesApp: string;\n      CorrectAnswersNeeded: string;\n      AnswerAttemptsAllowed: string;\n      MultiChoiceQuestion: ITransunionKBAQuestion[] | ITransunionKBAQuestion;\n      ApplicantChallengeId: string;\n      ApplicantId: string;\n    };\n  };\n}\n",
            "properties": [
                {
                    "name": "ChallengeConfigurationType",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "ITrueLinkCreditReportType",
            "id": "interface-ITrueLinkCreditReportType-5f973f44a1fbc4d9c4ddeb3bf119021c",
            "file": "src/app/shared/interfaces/merge-report.interface.ts",
            "type": "interface",
            "sourceCode": "import {\n  ISource,\n  ICreditScoreFactor,\n  ICreditScoreAttributes,\n} from '@shared/interfaces/common-tu.interface';\n\nexport interface IMergeReport {\n  TrueLinkCreditReportType: ITrueLinkCreditReportType;\n}\nexport interface ITrueLinkCreditReportType {\n  SB168Frozen?: string;\n  Borrower?: IBorrower;\n  TradeLinePartition?: ITradeLinePartition[] | ITradeLinePartition;\n  InquiryPartition?: IInquiryPartition;\n  Message?:\n    | { code?: string; type?: string }[]\n    | { code?: string; type?: string };\n  Summary?: ISummary;\n  Sources?: { Source?: ISource };\n  SafetyCheckPassed?: boolean | string;\n}\nexport interface IBorrower {\n  BorrowerAddress?: {\n    CreditAddress?: string;\n    Dwelling?: string;\n    Origin?: string;\n    Ownership?: string;\n    Source?: ISource;\n  };\n  Birth?: {\n    BirthDate?: string;\n    Source?: ISource;\n  };\n  CreditScore?: {\n    CreditScoreFactor?: ICreditScoreFactor[];\n    CreditScoreMode?: string;\n    NoScoreReason?: string;\n    Source?: ISource;\n  };\n  SocialPartition?: {\n    Social?: {\n      SocialSecurityNumber?: String;\n      Source?: ISource;\n    };\n  };\n}\nexport interface ITradeLinePartition {\n  accountTypeDescription?: string;\n  accountTypeSymbol?: string;\n  accountTypeAbbreviation?: string;\n  Tradeline?: ITradeline;\n}\nexport interface ITradeline {\n  subscriberCode?: string;\n  highBalance?: number | string;\n  dateVerified?: string;\n  dateReported?: string;\n  dateOpened?: string;\n  accountNumber?: string;\n  dateAccountStatus?: string;\n  currentBalance?: number | string;\n  creditorName?: string;\n  position?: number | string;\n  bureau?: string;\n  AccountCondition?: ICreditScoreAttributes;\n  AccountDesignator?: ICreditScoreAttributes;\n  DisputeFlag?: ICreditScoreAttributes;\n  IndustryCode?: ICreditScoreAttributes;\n  OpenClosed?: ICreditScoreAttributes;\n  PayStatus?: ICreditScoreAttributes;\n  VerificationIndicator?: ICreditScoreAttributes;\n  Remark?: ITradelineRemark;\n  GrantedTrade: any;\n  CollectionTrade?: ITradelineCollection;\n  Source?: ISource;\n}\nexport interface ITradelineRemark {\n  customRemark?: string;\n  RemarkCode?: ICreditScoreAttributes;\n}\nexport interface IGrantedTrade {\n  monthsReviewed: number | string;\n  monthlyPayment: number | string;\n  late90Count: number | string;\n  late60Count: number | string;\n  late30Count: number | string;\n  dateLastPayment: string;\n  termMonths: number | string;\n  collateral: string;\n  amountPastDue: number | string;\n  worstPatStatusCount: number | string;\n  AccountType: ICreditScoreAttributes;\n  CreditType: ICreditScoreAttributes;\n  PaymentFrequency: ICreditScoreAttributes;\n  TermType: ICreditScoreAttributes;\n  WorstPayStatus: ICreditScoreAttributes;\n  PayStatusHistory: IPayStatusHistory;\n  CreditLimit: number | string;\n}\nexport interface IPayStatusHistory {\n  status: string;\n  startDate: string;\n  MonthlyPayStatus: IMonthyPayStatusItem[];\n}\nexport interface IMonthyPayStatusItem {\n  date: string;\n  status: string;\n}\nexport interface ITradelineCollection {\n  originalCreditor?: string;\n  creditType?: ICreditScoreAttributes;\n}\nexport interface IInquiryPartition {\n  Inquiry?: {\n    inquiryDate?: string;\n    subscriberName?: string;\n    subscriberNumber?: number | string;\n    bureau?: string;\n    inquiryType?: string;\n    IndustryCode?: string;\n    Source?: ISource;\n  };\n}\nexport interface ISummary {\n  TradelineSummary?: {\n    TransUnion?: string;\n  };\n  InquirySummary?: {\n    TransUnion?: string;\n  };\n  PublicRecordSummary?: {\n    TransUnion?: string;\n  };\n  Sources?: {\n    Source?: {\n      Bureau?: string;\n      InquiryDate?: string;\n      OriginalData?: string;\n    };\n  };\n  SafetyCheckPassed?: string;\n}\nexport interface IUnparsedCreditReport {\n  '#text': string;\n  type: string;\n}\n",
            "properties": [
                {
                    "name": "Borrower",
                    "type": "IBorrower",
                    "optional": true,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "InquiryPartition",
                    "type": "IInquiryPartition",
                    "optional": true,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "Message",
                    "type": "literal type[] | literal type",
                    "optional": true,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "SafetyCheckPassed",
                    "type": "boolean | string",
                    "optional": true,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "SB168Frozen",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "Sources",
                    "type": "literal type",
                    "optional": true,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "Summary",
                    "type": "ISummary",
                    "optional": true,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "TradeLinePartition",
                    "type": "ITradeLinePartition[] | ITradeLinePartition",
                    "optional": true,
                    "description": "",
                    "line": 13
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "IUnparsedCreditReport",
            "id": "interface-IUnparsedCreditReport-5f973f44a1fbc4d9c4ddeb3bf119021c",
            "file": "src/app/shared/interfaces/merge-report.interface.ts",
            "type": "interface",
            "sourceCode": "import {\n  ISource,\n  ICreditScoreFactor,\n  ICreditScoreAttributes,\n} from '@shared/interfaces/common-tu.interface';\n\nexport interface IMergeReport {\n  TrueLinkCreditReportType: ITrueLinkCreditReportType;\n}\nexport interface ITrueLinkCreditReportType {\n  SB168Frozen?: string;\n  Borrower?: IBorrower;\n  TradeLinePartition?: ITradeLinePartition[] | ITradeLinePartition;\n  InquiryPartition?: IInquiryPartition;\n  Message?:\n    | { code?: string; type?: string }[]\n    | { code?: string; type?: string };\n  Summary?: ISummary;\n  Sources?: { Source?: ISource };\n  SafetyCheckPassed?: boolean | string;\n}\nexport interface IBorrower {\n  BorrowerAddress?: {\n    CreditAddress?: string;\n    Dwelling?: string;\n    Origin?: string;\n    Ownership?: string;\n    Source?: ISource;\n  };\n  Birth?: {\n    BirthDate?: string;\n    Source?: ISource;\n  };\n  CreditScore?: {\n    CreditScoreFactor?: ICreditScoreFactor[];\n    CreditScoreMode?: string;\n    NoScoreReason?: string;\n    Source?: ISource;\n  };\n  SocialPartition?: {\n    Social?: {\n      SocialSecurityNumber?: String;\n      Source?: ISource;\n    };\n  };\n}\nexport interface ITradeLinePartition {\n  accountTypeDescription?: string;\n  accountTypeSymbol?: string;\n  accountTypeAbbreviation?: string;\n  Tradeline?: ITradeline;\n}\nexport interface ITradeline {\n  subscriberCode?: string;\n  highBalance?: number | string;\n  dateVerified?: string;\n  dateReported?: string;\n  dateOpened?: string;\n  accountNumber?: string;\n  dateAccountStatus?: string;\n  currentBalance?: number | string;\n  creditorName?: string;\n  position?: number | string;\n  bureau?: string;\n  AccountCondition?: ICreditScoreAttributes;\n  AccountDesignator?: ICreditScoreAttributes;\n  DisputeFlag?: ICreditScoreAttributes;\n  IndustryCode?: ICreditScoreAttributes;\n  OpenClosed?: ICreditScoreAttributes;\n  PayStatus?: ICreditScoreAttributes;\n  VerificationIndicator?: ICreditScoreAttributes;\n  Remark?: ITradelineRemark;\n  GrantedTrade: any;\n  CollectionTrade?: ITradelineCollection;\n  Source?: ISource;\n}\nexport interface ITradelineRemark {\n  customRemark?: string;\n  RemarkCode?: ICreditScoreAttributes;\n}\nexport interface IGrantedTrade {\n  monthsReviewed: number | string;\n  monthlyPayment: number | string;\n  late90Count: number | string;\n  late60Count: number | string;\n  late30Count: number | string;\n  dateLastPayment: string;\n  termMonths: number | string;\n  collateral: string;\n  amountPastDue: number | string;\n  worstPatStatusCount: number | string;\n  AccountType: ICreditScoreAttributes;\n  CreditType: ICreditScoreAttributes;\n  PaymentFrequency: ICreditScoreAttributes;\n  TermType: ICreditScoreAttributes;\n  WorstPayStatus: ICreditScoreAttributes;\n  PayStatusHistory: IPayStatusHistory;\n  CreditLimit: number | string;\n}\nexport interface IPayStatusHistory {\n  status: string;\n  startDate: string;\n  MonthlyPayStatus: IMonthyPayStatusItem[];\n}\nexport interface IMonthyPayStatusItem {\n  date: string;\n  status: string;\n}\nexport interface ITradelineCollection {\n  originalCreditor?: string;\n  creditType?: ICreditScoreAttributes;\n}\nexport interface IInquiryPartition {\n  Inquiry?: {\n    inquiryDate?: string;\n    subscriberName?: string;\n    subscriberNumber?: number | string;\n    bureau?: string;\n    inquiryType?: string;\n    IndustryCode?: string;\n    Source?: ISource;\n  };\n}\nexport interface ISummary {\n  TradelineSummary?: {\n    TransUnion?: string;\n  };\n  InquirySummary?: {\n    TransUnion?: string;\n  };\n  PublicRecordSummary?: {\n    TransUnion?: string;\n  };\n  Sources?: {\n    Source?: {\n      Bureau?: string;\n      InquiryDate?: string;\n      OriginalData?: string;\n    };\n  };\n  SafetyCheckPassed?: string;\n}\nexport interface IUnparsedCreditReport {\n  '#text': string;\n  type: string;\n}\n",
            "properties": [
                {
                    "name": "#text",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 144
                },
                {
                    "name": "type",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 145
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "IVantageScore",
            "id": "interface-IVantageScore-c5656b5d1d6008aeeeff9beef0867890",
            "file": "src/app/shared/interfaces/vantage-score.interface.ts",
            "type": "interface",
            "sourceCode": "import {\n  ICreditScoreFactor,\n  ICreditScoreAttributes,\n  ISource,\n} from '@shared/interfaces/common-tu.interface';\n\nexport interface IVantageScore {\n  CreditScoreType: ICreditScoreType;\n}\n\nexport interface ICreditScoreType {\n  riskScore?: number;\n  scoreName?: string;\n  populationRank?: number;\n  CreditScoreFactor?: ICreditScoreFactor[];\n  CreditScoreModel?: ICreditScoreAttributes;\n  NoScoreReason?: ICreditScoreAttributes;\n  Source?: ISource;\n}\n",
            "properties": [
                {
                    "name": "CreditScoreType",
                    "type": "ICreditScoreType",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "IVerifyAuthenticationAnswer",
            "id": "interface-IVerifyAuthenticationAnswer-af6842154423809dd57c522cbf39f967",
            "file": "src/app/shared/interfaces/verify-authentication-answers.interface.ts",
            "type": "interface",
            "sourceCode": "export interface IVerifyAuthenticationAnswersArray {\n  ArrayOfVerifyChallengeAnswersRequestMultiChoiceQuestion: IVerifyAuthenticationAnswer[];\n}\n\nexport interface IVerifyAuthenticationAnswer {\n  VerifyChallengeAnswersRequestMultiChoiceQuestion: {\n    QuestionId: string;\n    SelectedAnswerChoice: {\n      AnswerChoiceId: string;\n      UserInputAnswer?: string;\n    };\n  };\n}\n",
            "properties": [
                {
                    "name": "VerifyChallengeAnswersRequestMultiChoiceQuestion",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "IVerifyAuthenticationAnswersArray",
            "id": "interface-IVerifyAuthenticationAnswersArray-af6842154423809dd57c522cbf39f967",
            "file": "src/app/shared/interfaces/verify-authentication-answers.interface.ts",
            "type": "interface",
            "sourceCode": "export interface IVerifyAuthenticationAnswersArray {\n  ArrayOfVerifyChallengeAnswersRequestMultiChoiceQuestion: IVerifyAuthenticationAnswer[];\n}\n\nexport interface IVerifyAuthenticationAnswer {\n  VerifyChallengeAnswersRequestMultiChoiceQuestion: {\n    QuestionId: string;\n    SelectedAnswerChoice: {\n      AnswerChoiceId: string;\n      UserInputAnswer?: string;\n    };\n  };\n}\n",
            "properties": [
                {
                    "name": "ArrayOfVerifyChallengeAnswersRequestMultiChoiceQuestion",
                    "type": "IVerifyAuthenticationAnswer[]",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "IVerifyAuthenticationQuestions",
            "id": "interface-IVerifyAuthenticationQuestions-a2b1afe28f64603b96577fb54f76f35d",
            "file": "src/app/shared/interfaces/verify-authentication-questions.interface.ts",
            "type": "interface",
            "sourceCode": "import { IVerifyAuthenticationAnswer } from '@shared/interfaces/verify-authentication-answers.interface';\n\nexport interface IVerifyAuthenticationQuestions {\n  request: {\n    AccountCode: string;\n    AccountName: string;\n    AdditionalInputs?: {\n      Data: {\n        Name: string;\n        Value: string;\n      };\n    };\n    RequestKey: string;\n    ClientKey: string;\n    Answers: IVerifyAuthenticationAnswer[];\n    ServiceBundleFulfillmentKey: string;\n    TrustSessionId?: string;\n  };\n}\n\nexport interface IVerifyAuthenticationQuestionsMsg {\n  AdditionalInputs?: {\n    Data: {\n      Name: string;\n      Value: string;\n    };\n  };\n  RequestKey: string;\n  ClientKey: string;\n  Answers: IVerifyAuthenticationAnswer[];\n  ServiceBundleFulfillmentKey: string;\n  TrustSessionId?: string;\n}\n",
            "properties": [
                {
                    "name": "request",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "IVerifyAuthenticationQuestionsMsg",
            "id": "interface-IVerifyAuthenticationQuestionsMsg-a2b1afe28f64603b96577fb54f76f35d",
            "file": "src/app/shared/interfaces/verify-authentication-questions.interface.ts",
            "type": "interface",
            "sourceCode": "import { IVerifyAuthenticationAnswer } from '@shared/interfaces/verify-authentication-answers.interface';\n\nexport interface IVerifyAuthenticationQuestions {\n  request: {\n    AccountCode: string;\n    AccountName: string;\n    AdditionalInputs?: {\n      Data: {\n        Name: string;\n        Value: string;\n      };\n    };\n    RequestKey: string;\n    ClientKey: string;\n    Answers: IVerifyAuthenticationAnswer[];\n    ServiceBundleFulfillmentKey: string;\n    TrustSessionId?: string;\n  };\n}\n\nexport interface IVerifyAuthenticationQuestionsMsg {\n  AdditionalInputs?: {\n    Data: {\n      Name: string;\n      Value: string;\n    };\n  };\n  RequestKey: string;\n  ClientKey: string;\n  Answers: IVerifyAuthenticationAnswer[];\n  ServiceBundleFulfillmentKey: string;\n  TrustSessionId?: string;\n}\n",
            "properties": [
                {
                    "name": "AdditionalInputs",
                    "type": "literal type",
                    "optional": true,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "Answers",
                    "type": "IVerifyAuthenticationAnswer[]",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "ClientKey",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "RequestKey",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "ServiceBundleFulfillmentKey",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "TrustSessionId",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 32
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "IVerifyAuthenticationResponseSuccess",
            "id": "interface-IVerifyAuthenticationResponseSuccess-0ac2b7e5fcd34f53fa7a9123a1c6fe4a",
            "file": "src/app/shared/interfaces/verify-authentication-response.interface.ts",
            "type": "interface",
            "sourceCode": "export interface IVerifyAuthenticationResponseSuccess {\n  VerifyAuthenticationQuestions: {\n    's:Envelope': {\n      's:Body': {\n        VerifyAuthenticationQuestionsResponse: {\n          VerifyAuthenticationQuestionsResult: {\n            'a:AccountName': string;\n            'a:ErrorResponse': string;\n            'a:RequestKey': string;\n            'a:ResponseType': string;\n            'a:ClientKey': string;\n            'a:AuthenticationDetails': string;\n            'a:AuthenticationStatus': string;\n          };\n        };\n      };\n    };\n  };\n}\n",
            "properties": [
                {
                    "name": "VerifyAuthenticationQuestions",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "NewUser",
            "id": "interface-NewUser-9a4ef84fc2aeee4b5ae523b5c4d39843",
            "file": "src/app/shared/services/auth/auth.service.ts",
            "type": "interface",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport Auth, { CognitoHostedUIIdentityProvider } from '@aws-amplify/auth';\nimport { Hub, ICredentials } from '@aws-amplify/core';\nimport { Subject, Observable, Subscription } from 'rxjs';\nimport {\n  CognitoUser,\n  CognitoUserSession,\n  ISignUpResult,\n} from 'amazon-cognito-identity-js';\nimport { SyncService } from '@shared/services/sync/sync.service';\nimport { Store } from '@ngxs/store';\nimport { Router } from '@angular/router';\n\nexport interface NewUser {\n  username: string;\n  password: string;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  public static SIGN_IN = 'signIn';\n  public static SIGN_OUT = 'signOut';\n  public static FACEBOOK = CognitoHostedUIIdentityProvider.Facebook;\n  public static GOOGLE = CognitoHostedUIIdentityProvider.Google;\n\n  constructor(private sync: SyncService, private router: Router) {\n    Hub.listen('auth', async (data) => {\n      const { channel, payload } = data;\n      switch (payload.event) {\n        case 'signIn':\n          console.log('in signin');\n          const creds: ICredentials = await this.getCurrentUserCredentials();\n          console.log('current credentials', creds);\n          if (creds) await this.sync.hallmonitor(creds);\n          break;\n        case 'signOut':\n          // handle sign out\n          break;\n        default:\n          // do something by default\n          break;\n      }\n    });\n\n    Auth.currentAuthenticatedUser()\n      .then(async (user) => {\n        console.log('authenticated user');\n        const creds: ICredentials = await this.getCurrentUserCredentials();\n        if (creds) await this.sync.hallmonitor(creds);\n      })\n      .catch(() => console.log('Not signed in'));\n  }\n\n  /**\n   * This method is designed to help reload the user if the ID ever goes null\n   * will perform the following:\n   *  1. Get current credentials (if the token is still valid)\n   *  2. If no token available, and on a different page...go back to login\n   *  3. If on sign in or sign up...do nothing\n   * @returns\n   */\n  async reloadCredentials(): Promise<void> {\n    const creds = await this.getCurrentUserCredentials();\n    if (creds) {\n      await this.sync.hallmonitor(creds);\n    } else {\n      switch (this.router.url) {\n        case '/auth/signin':\n          break;\n        case '/auth/signup':\n          break;\n        case '/signin':\n          break;\n        case '/signin':\n          break;\n        default:\n          this.router.navigate(['/auth/signin']);\n          break;\n      }\n    }\n  }\n\n  /**\n   * Cognito sign up method\n   * @param {NewUser} user\n   * @returns\n   */\n  signUp(user: NewUser): Promise<ISignUpResult> {\n    return Auth.signUp({\n      username: user.username,\n      password: user.password,\n      attributes: {\n        email: user.username,\n      },\n    });\n  }\n\n  /**\n   * Cognito sign in method\n   * @param {string} username\n   * @param {string} password\n   * @returns\n   */\n  signIn(username: string, password: string): Promise<CognitoUser | any> {\n    return new Promise((resolve, reject) => {\n      Auth.signIn(username, password)\n        .then((user: CognitoUser | any) => {\n          resolve(user);\n        })\n        .catch((error: any) => reject(error));\n    });\n  }\n\n  /**\n   * Simple sign out method\n   * @returns\n   */\n  signOut(): Promise<any> {\n    return Auth.signOut();\n  }\n\n  /**\n   * Social signin (supports facebook and google)\n   * @param {CognitoHostedUIIdentityProvider} provider\n   * @returns\n   */\n  socialSignIn(\n    provider: CognitoHostedUIIdentityProvider\n  ): Promise<ICredentials> {\n    return Auth.federatedSignIn({\n      provider: provider,\n    });\n  }\n\n  /**\n   *\n   * @param {string} email\n   * @returns\n   */\n  resendSignUp(email: string): Promise<string> | undefined {\n    return email ? Auth.resendSignUp(email) : undefined;\n  }\n\n  /**\n   *\n   * @param email\n   * @param code\n   * @param pw\n   * @returns\n   */\n  forgotPasswordSubmit(\n    email: string,\n    code: string,\n    pw: string\n  ): Promise<void> | undefined {\n    return email\n      ? Auth.forgotPasswordSubmit(email.toLowerCase(), code, pw)\n      : undefined;\n  }\n\n  /**\n   * Get authenticated credentials of current user.\n   * @return - A promise resolves to be current user's credentials\n   */\n  getCurrentUserCredentials(): Promise<ICredentials> {\n    return Auth.currentUserCredentials();\n  }\n\n  /**\n   * Get current authenticated user\n   * @return - A promise resolves to current authenticated CognitoUser if success\n   */\n  getCurrentAuthenticatedUser(): Promise<CognitoUser> {\n    return Auth.currentAuthenticatedUser();\n  }\n\n  /**\n   *\n   * @returns\n   */\n  refreshSession(): Promise<CognitoUserSession> {\n    return Auth.currentSession();\n  }\n\n  /**\n   *\n   */\n  async getAuthTokens(): Promise<string> {\n    try {\n      const user: CognitoUser = await Auth.currentAuthenticatedUser();\n      let session = user.getSignInUserSession();\n      return session ? session.getIdToken().getJwtToken() : '';\n    } catch (err) {\n      return '';\n    }\n  }\n\n  /**\n   *\n   */\n  async getAuthCredentials(): Promise<ICredentials | null> {\n    try {\n      const creds: ICredentials = await Auth.currentUserCredentials();\n      return creds;\n    } catch (err) {\n      return null;\n    }\n  }\n}\n",
            "properties": [
                {
                    "name": "password",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "username",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "OnboardingStep",
            "id": "interface-OnboardingStep-70b440fbfdfa5d3052dbafe93bf63d15",
            "file": "src/app/store/onboarding/onboarding.model.ts",
            "type": "interface",
            "sourceCode": "import { IProgressStep } from '@shared/components/progressbars/filled-checktext-progressbar/filled-checktext-progressbar.component';\nimport { OnboardingInput } from '@shared/services/aws/api.service';\n\nexport interface OnboardingStep extends IProgressStep {}\ntype typename = 'Onboarding';\nexport class OnboardingStateModel implements OnboardingInput {\n  lastActive: number = -1;\n  lastComplete: number = -1;\n  started?: boolean | null | undefined;\n}\n",
            "properties": [],
            "indexSignatures": [],
            "methods": [],
            "extends": "IProgressStep"
        },
        {
            "name": "SubscriptionResponse",
            "id": "interface-SubscriptionResponse-12785e555ad5153d939f1b6496900e11",
            "file": "src/app/shared/services/aws/api.service.ts",
            "type": "interface",
            "sourceCode": "import { Injectable } from \"@angular/core\";\nimport API, { graphqlOperation, GraphQLResult } from \"@aws-amplify/api-graphql\";\nimport { Observable } from \"zen-observable-ts\";\n\nexport interface SubscriptionResponse<T> {\n  value: GraphQLResult<T>;\n}\n\nexport type CreateAppDataInput = {\n  id?: string | null;\n  user: UserInput;\n  agencies: AgenciesInput;\n  preferences: PreferencesInput;\n};\n\nexport type UserInput = {\n  id: string;\n  userAttributes?: UserAttributesInput | null;\n  onboarding?: OnboardingInput | null;\n};\n\nexport type UserAttributesInput = {\n  name?: NameInput | null;\n  address?: AddressInput | null;\n  phone?: PhoneInput | null;\n  dob?: DobInput | null;\n  ssn?: SsnInput | null;\n};\n\nexport type NameInput = {\n  first: string;\n  middle?: string | null;\n  last: string;\n};\n\nexport type AddressInput = {\n  addressOne: string;\n  addressTwo?: string | null;\n  city: string;\n  state: string;\n  zip: string;\n};\n\nexport type PhoneInput = {\n  primary: string;\n};\n\nexport type DobInput = {\n  year: string;\n  month: string;\n  day: string;\n};\n\nexport type SsnInput = {\n  lastfour: string;\n  full?: string | null;\n};\n\nexport type OnboardingInput = {\n  lastActive: number;\n  lastComplete: number;\n  started?: boolean | null;\n};\n\nexport type AgenciesInput = {\n  transunion?: TransunionInput | null;\n  equifax?: EquifaxInput | null;\n  experian?: ExperianInput | null;\n};\n\nexport type TransunionInput = {\n  authenticated?: boolean | null;\n  indicativeEnrichmentSuccess?: boolean | null;\n  getAuthenticationQuestionsSuccess?: boolean | null;\n  serviceBundleFulfillmentKey?: string | null;\n  currentRawQuestions?: string | null;\n  currentRawAuthDetails?: string | null;\n  enrollmentKey?: string | null;\n  enrollReport?: TUEnrollResponseInput | null;\n  enrollMergeReport?: TUEnrollResponseInput | null;\n  enrollVantageScore?: TUEnrollResponseInput | null;\n  hidePositiveCreditCardAccounts?: boolean | null;\n  hidePositiveCollectionAccounts?: boolean | null;\n  hidePositiveInstallmentAccounts?: boolean | null;\n  hidePositiveMortgageAccounts?: boolean | null;\n};\n\nexport type TUEnrollResponseInput = {\n  bureau?: string | null;\n  errorResponse?: string | null;\n  serviceProduct?: string | null;\n  serviceProductFullfillmentKey?: string | null;\n  serviceProductObject?: string | null;\n  serviceProductTypeId?: string | null;\n  serviceProductValue?: string | null;\n  status?: string | null;\n};\n\nexport type EquifaxInput = {\n  authenticated?: boolean | null;\n};\n\nexport type ExperianInput = {\n  authenticated?: boolean | null;\n};\n\nexport type PreferencesInput = {\n  showAllAccounts?: ShowAccountsPreferenceInput | null;\n};\n\nexport type ShowAccountsPreferenceInput = {\n  creditCards?: boolean | null;\n  collectionsAccounts?: boolean | null;\n  installmentLoans?: boolean | null;\n  mortgages?: boolean | null;\n};\n\nexport type ModelAppDataConditionInput = {\n  and?: Array<ModelAppDataConditionInput | null> | null;\n  or?: Array<ModelAppDataConditionInput | null> | null;\n  not?: ModelAppDataConditionInput | null;\n};\n\nexport type AppData = {\n  __typename: \"AppData\";\n  id?: string;\n  user?: User;\n  agencies?: Agencies;\n  preferences?: Preferences;\n  createdAt?: string;\n  updatedAt?: string;\n  owner?: string | null;\n};\n\nexport type User = {\n  __typename: \"User\";\n  id?: string;\n  userAttributes?: UserAttributes;\n  onboarding?: Onboarding;\n};\n\nexport type UserAttributes = {\n  __typename: \"UserAttributes\";\n  name?: Name;\n  address?: Address;\n  phone?: Phone;\n  dob?: Dob;\n  ssn?: Ssn;\n};\n\nexport type Name = {\n  __typename: \"Name\";\n  first?: string;\n  middle?: string | null;\n  last?: string;\n};\n\nexport type Address = {\n  __typename: \"Address\";\n  addressOne?: string;\n  addressTwo?: string | null;\n  city?: string;\n  state?: string;\n  zip?: string;\n};\n\nexport type Phone = {\n  __typename: \"Phone\";\n  primary?: string;\n};\n\nexport type Dob = {\n  __typename: \"Dob\";\n  year?: string;\n  month?: string;\n  day?: string;\n};\n\nexport type Ssn = {\n  __typename: \"Ssn\";\n  lastfour?: string;\n  full?: string | null;\n};\n\nexport type Onboarding = {\n  __typename: \"Onboarding\";\n  lastActive?: number;\n  lastComplete?: number;\n  started?: boolean | null;\n};\n\nexport type Agencies = {\n  __typename: \"Agencies\";\n  transunion?: Transunion;\n  equifax?: Equifax;\n  experian?: Experian;\n};\n\nexport type Transunion = {\n  __typename: \"Transunion\";\n  authenticated?: boolean | null;\n  indicativeEnrichmentSuccess?: boolean | null;\n  getAuthenticationQuestionsSuccess?: boolean | null;\n  serviceBundleFulfillmentKey?: string | null;\n  currentRawQuestions?: string | null;\n  currentRawAuthDetails?: string | null;\n  enrollmentKey?: string | null;\n  enrollReport?: TUEnrollResponse;\n  enrollMergeReport?: TUEnrollResponse;\n  enrollVantageScore?: TUEnrollResponse;\n  hidePositiveCreditCardAccounts?: boolean | null;\n  hidePositiveCollectionAccounts?: boolean | null;\n  hidePositiveInstallmentAccounts?: boolean | null;\n  hidePositiveMortgageAccounts?: boolean | null;\n};\n\nexport type TUEnrollResponse = {\n  __typename: \"TUEnrollResponse\";\n  bureau?: string | null;\n  errorResponse?: string | null;\n  serviceProduct?: string | null;\n  serviceProductFullfillmentKey?: string | null;\n  serviceProductObject?: string | null;\n  serviceProductTypeId?: string | null;\n  serviceProductValue?: string | null;\n  status?: string | null;\n};\n\nexport type Equifax = {\n  __typename: \"Equifax\";\n  authenticated?: boolean | null;\n};\n\nexport type Experian = {\n  __typename: \"Experian\";\n  authenticated?: boolean | null;\n};\n\nexport type Preferences = {\n  __typename: \"Preferences\";\n  showAllAccounts?: ShowAccountsPreference;\n};\n\nexport type ShowAccountsPreference = {\n  __typename: \"ShowAccountsPreference\";\n  creditCards?: boolean | null;\n  collectionsAccounts?: boolean | null;\n  installmentLoans?: boolean | null;\n  mortgages?: boolean | null;\n};\n\nexport type UpdateAppDataInput = {\n  id: string;\n  user?: UserInput | null;\n  agencies?: AgenciesInput | null;\n  preferences?: PreferencesInput | null;\n};\n\nexport type DeleteAppDataInput = {\n  id: string;\n};\n\nexport type ModelAppDataFilterInput = {\n  id?: ModelIDInput | null;\n  and?: Array<ModelAppDataFilterInput | null> | null;\n  or?: Array<ModelAppDataFilterInput | null> | null;\n  not?: ModelAppDataFilterInput | null;\n};\n\nexport type ModelIDInput = {\n  ne?: string | null;\n  eq?: string | null;\n  le?: string | null;\n  lt?: string | null;\n  ge?: string | null;\n  gt?: string | null;\n  contains?: string | null;\n  notContains?: string | null;\n  between?: Array<string | null> | null;\n  beginsWith?: string | null;\n  attributeExists?: boolean | null;\n  attributeType?: ModelAttributeTypes | null;\n  size?: ModelSizeInput | null;\n};\n\nexport enum ModelAttributeTypes {\n  binary = \"binary\",\n  binarySet = \"binarySet\",\n  bool = \"bool\",\n  list = \"list\",\n  map = \"map\",\n  number = \"number\",\n  numberSet = \"numberSet\",\n  string = \"string\",\n  stringSet = \"stringSet\",\n  _null = \"_null\"\n}\n\nexport type ModelSizeInput = {\n  ne?: number | null;\n  eq?: number | null;\n  le?: number | null;\n  lt?: number | null;\n  ge?: number | null;\n  gt?: number | null;\n  between?: Array<number | null> | null;\n};\n\nexport type ModelAppDataConnection = {\n  __typename: \"ModelAppDataConnection\";\n  items?: Array<AppData | null> | null;\n  nextToken?: string | null;\n};\n\nexport type CreateAppDataMutation = {\n  __typename: \"AppData\";\n  id: string;\n  user: {\n    __typename: \"User\";\n    id: string;\n    userAttributes?: {\n      __typename: \"UserAttributes\";\n      name?: {\n        __typename: \"Name\";\n        first: string;\n        middle?: string | null;\n        last: string;\n      } | null;\n      address?: {\n        __typename: \"Address\";\n        addressOne: string;\n        addressTwo?: string | null;\n        city: string;\n        state: string;\n        zip: string;\n      } | null;\n      phone?: {\n        __typename: \"Phone\";\n        primary: string;\n      } | null;\n      dob?: {\n        __typename: \"Dob\";\n        year: string;\n        month: string;\n        day: string;\n      } | null;\n      ssn?: {\n        __typename: \"Ssn\";\n        lastfour: string;\n        full?: string | null;\n      } | null;\n    } | null;\n    onboarding?: {\n      __typename: \"Onboarding\";\n      lastActive: number;\n      lastComplete: number;\n      started?: boolean | null;\n    } | null;\n  };\n  agencies: {\n    __typename: \"Agencies\";\n    transunion?: {\n      __typename: \"Transunion\";\n      authenticated?: boolean | null;\n      indicativeEnrichmentSuccess?: boolean | null;\n      getAuthenticationQuestionsSuccess?: boolean | null;\n      serviceBundleFulfillmentKey?: string | null;\n      currentRawQuestions?: string | null;\n      currentRawAuthDetails?: string | null;\n      enrollmentKey?: string | null;\n      enrollReport?: {\n        __typename: \"TUEnrollResponse\";\n        bureau?: string | null;\n        errorResponse?: string | null;\n        serviceProduct?: string | null;\n        serviceProductFullfillmentKey?: string | null;\n        serviceProductObject?: string | null;\n        serviceProductTypeId?: string | null;\n        serviceProductValue?: string | null;\n        status?: string | null;\n      } | null;\n      enrollMergeReport?: {\n        __typename: \"TUEnrollResponse\";\n        bureau?: string | null;\n        errorResponse?: string | null;\n        serviceProduct?: string | null;\n        serviceProductFullfillmentKey?: string | null;\n        serviceProductObject?: string | null;\n        serviceProductTypeId?: string | null;\n        serviceProductValue?: string | null;\n        status?: string | null;\n      } | null;\n      enrollVantageScore?: {\n        __typename: \"TUEnrollResponse\";\n        bureau?: string | null;\n        errorResponse?: string | null;\n        serviceProduct?: string | null;\n        serviceProductFullfillmentKey?: string | null;\n        serviceProductObject?: string | null;\n        serviceProductTypeId?: string | null;\n        serviceProductValue?: string | null;\n        status?: string | null;\n      } | null;\n      hidePositiveCreditCardAccounts?: boolean | null;\n      hidePositiveCollectionAccounts?: boolean | null;\n      hidePositiveInstallmentAccounts?: boolean | null;\n      hidePositiveMortgageAccounts?: boolean | null;\n    } | null;\n    equifax?: {\n      __typename: \"Equifax\";\n      authenticated?: boolean | null;\n    } | null;\n    experian?: {\n      __typename: \"Experian\";\n      authenticated?: boolean | null;\n    } | null;\n  };\n  preferences: {\n    __typename: \"Preferences\";\n    showAllAccounts?: {\n      __typename: \"ShowAccountsPreference\";\n      creditCards?: boolean | null;\n      collectionsAccounts?: boolean | null;\n      installmentLoans?: boolean | null;\n      mortgages?: boolean | null;\n    } | null;\n  };\n  createdAt: string;\n  updatedAt: string;\n  owner?: string | null;\n};\n\nexport type UpdateAppDataMutation = {\n  __typename: \"AppData\";\n  id: string;\n  user: {\n    __typename: \"User\";\n    id: string;\n    userAttributes?: {\n      __typename: \"UserAttributes\";\n      name?: {\n        __typename: \"Name\";\n        first: string;\n        middle?: string | null;\n        last: string;\n      } | null;\n      address?: {\n        __typename: \"Address\";\n        addressOne: string;\n        addressTwo?: string | null;\n        city: string;\n        state: string;\n        zip: string;\n      } | null;\n      phone?: {\n        __typename: \"Phone\";\n        primary: string;\n      } | null;\n      dob?: {\n        __typename: \"Dob\";\n        year: string;\n        month: string;\n        day: string;\n      } | null;\n      ssn?: {\n        __typename: \"Ssn\";\n        lastfour: string;\n        full?: string | null;\n      } | null;\n    } | null;\n    onboarding?: {\n      __typename: \"Onboarding\";\n      lastActive: number;\n      lastComplete: number;\n      started?: boolean | null;\n    } | null;\n  };\n  agencies: {\n    __typename: \"Agencies\";\n    transunion?: {\n      __typename: \"Transunion\";\n      authenticated?: boolean | null;\n      indicativeEnrichmentSuccess?: boolean | null;\n      getAuthenticationQuestionsSuccess?: boolean | null;\n      serviceBundleFulfillmentKey?: string | null;\n      currentRawQuestions?: string | null;\n      currentRawAuthDetails?: string | null;\n      enrollmentKey?: string | null;\n      enrollReport?: {\n        __typename: \"TUEnrollResponse\";\n        bureau?: string | null;\n        errorResponse?: string | null;\n        serviceProduct?: string | null;\n        serviceProductFullfillmentKey?: string | null;\n        serviceProductObject?: string | null;\n        serviceProductTypeId?: string | null;\n        serviceProductValue?: string | null;\n        status?: string | null;\n      } | null;\n      enrollMergeReport?: {\n        __typename: \"TUEnrollResponse\";\n        bureau?: string | null;\n        errorResponse?: string | null;\n        serviceProduct?: string | null;\n        serviceProductFullfillmentKey?: string | null;\n        serviceProductObject?: string | null;\n        serviceProductTypeId?: string | null;\n        serviceProductValue?: string | null;\n        status?: string | null;\n      } | null;\n      enrollVantageScore?: {\n        __typename: \"TUEnrollResponse\";\n        bureau?: string | null;\n        errorResponse?: string | null;\n        serviceProduct?: string | null;\n        serviceProductFullfillmentKey?: string | null;\n        serviceProductObject?: string | null;\n        serviceProductTypeId?: string | null;\n        serviceProductValue?: string | null;\n        status?: string | null;\n      } | null;\n      hidePositiveCreditCardAccounts?: boolean | null;\n      hidePositiveCollectionAccounts?: boolean | null;\n      hidePositiveInstallmentAccounts?: boolean | null;\n      hidePositiveMortgageAccounts?: boolean | null;\n    } | null;\n    equifax?: {\n      __typename: \"Equifax\";\n      authenticated?: boolean | null;\n    } | null;\n    experian?: {\n      __typename: \"Experian\";\n      authenticated?: boolean | null;\n    } | null;\n  };\n  preferences: {\n    __typename: \"Preferences\";\n    showAllAccounts?: {\n      __typename: \"ShowAccountsPreference\";\n      creditCards?: boolean | null;\n      collectionsAccounts?: boolean | null;\n      installmentLoans?: boolean | null;\n      mortgages?: boolean | null;\n    } | null;\n  };\n  createdAt: string;\n  updatedAt: string;\n  owner?: string | null;\n};\n\nexport type DeleteAppDataMutation = {\n  __typename: \"AppData\";\n  id: string;\n  user: {\n    __typename: \"User\";\n    id: string;\n    userAttributes?: {\n      __typename: \"UserAttributes\";\n      name?: {\n        __typename: \"Name\";\n        first: string;\n        middle?: string | null;\n        last: string;\n      } | null;\n      address?: {\n        __typename: \"Address\";\n        addressOne: string;\n        addressTwo?: string | null;\n        city: string;\n        state: string;\n        zip: string;\n      } | null;\n      phone?: {\n        __typename: \"Phone\";\n        primary: string;\n      } | null;\n      dob?: {\n        __typename: \"Dob\";\n        year: string;\n        month: string;\n        day: string;\n      } | null;\n      ssn?: {\n        __typename: \"Ssn\";\n        lastfour: string;\n        full?: string | null;\n      } | null;\n    } | null;\n    onboarding?: {\n      __typename: \"Onboarding\";\n      lastActive: number;\n      lastComplete: number;\n      started?: boolean | null;\n    } | null;\n  };\n  agencies: {\n    __typename: \"Agencies\";\n    transunion?: {\n      __typename: \"Transunion\";\n      authenticated?: boolean | null;\n      indicativeEnrichmentSuccess?: boolean | null;\n      getAuthenticationQuestionsSuccess?: boolean | null;\n      serviceBundleFulfillmentKey?: string | null;\n      currentRawQuestions?: string | null;\n      currentRawAuthDetails?: string | null;\n      enrollmentKey?: string | null;\n      enrollReport?: {\n        __typename: \"TUEnrollResponse\";\n        bureau?: string | null;\n        errorResponse?: string | null;\n        serviceProduct?: string | null;\n        serviceProductFullfillmentKey?: string | null;\n        serviceProductObject?: string | null;\n        serviceProductTypeId?: string | null;\n        serviceProductValue?: string | null;\n        status?: string | null;\n      } | null;\n      enrollMergeReport?: {\n        __typename: \"TUEnrollResponse\";\n        bureau?: string | null;\n        errorResponse?: string | null;\n        serviceProduct?: string | null;\n        serviceProductFullfillmentKey?: string | null;\n        serviceProductObject?: string | null;\n        serviceProductTypeId?: string | null;\n        serviceProductValue?: string | null;\n        status?: string | null;\n      } | null;\n      enrollVantageScore?: {\n        __typename: \"TUEnrollResponse\";\n        bureau?: string | null;\n        errorResponse?: string | null;\n        serviceProduct?: string | null;\n        serviceProductFullfillmentKey?: string | null;\n        serviceProductObject?: string | null;\n        serviceProductTypeId?: string | null;\n        serviceProductValue?: string | null;\n        status?: string | null;\n      } | null;\n      hidePositiveCreditCardAccounts?: boolean | null;\n      hidePositiveCollectionAccounts?: boolean | null;\n      hidePositiveInstallmentAccounts?: boolean | null;\n      hidePositiveMortgageAccounts?: boolean | null;\n    } | null;\n    equifax?: {\n      __typename: \"Equifax\";\n      authenticated?: boolean | null;\n    } | null;\n    experian?: {\n      __typename: \"Experian\";\n      authenticated?: boolean | null;\n    } | null;\n  };\n  preferences: {\n    __typename: \"Preferences\";\n    showAllAccounts?: {\n      __typename: \"ShowAccountsPreference\";\n      creditCards?: boolean | null;\n      collectionsAccounts?: boolean | null;\n      installmentLoans?: boolean | null;\n      mortgages?: boolean | null;\n    } | null;\n  };\n  createdAt: string;\n  updatedAt: string;\n  owner?: string | null;\n};\n\nexport type GetAppDataQuery = {\n  __typename: \"AppData\";\n  id: string;\n  user: {\n    __typename: \"User\";\n    id: string;\n    userAttributes?: {\n      __typename: \"UserAttributes\";\n      name?: {\n        __typename: \"Name\";\n        first: string;\n        middle?: string | null;\n        last: string;\n      } | null;\n      address?: {\n        __typename: \"Address\";\n        addressOne: string;\n        addressTwo?: string | null;\n        city: string;\n        state: string;\n        zip: string;\n      } | null;\n      phone?: {\n        __typename: \"Phone\";\n        primary: string;\n      } | null;\n      dob?: {\n        __typename: \"Dob\";\n        year: string;\n        month: string;\n        day: string;\n      } | null;\n      ssn?: {\n        __typename: \"Ssn\";\n        lastfour: string;\n        full?: string | null;\n      } | null;\n    } | null;\n    onboarding?: {\n      __typename: \"Onboarding\";\n      lastActive: number;\n      lastComplete: number;\n      started?: boolean | null;\n    } | null;\n  };\n  agencies: {\n    __typename: \"Agencies\";\n    transunion?: {\n      __typename: \"Transunion\";\n      authenticated?: boolean | null;\n      indicativeEnrichmentSuccess?: boolean | null;\n      getAuthenticationQuestionsSuccess?: boolean | null;\n      serviceBundleFulfillmentKey?: string | null;\n      currentRawQuestions?: string | null;\n      currentRawAuthDetails?: string | null;\n      enrollmentKey?: string | null;\n      enrollReport?: {\n        __typename: \"TUEnrollResponse\";\n        bureau?: string | null;\n        errorResponse?: string | null;\n        serviceProduct?: string | null;\n        serviceProductFullfillmentKey?: string | null;\n        serviceProductObject?: string | null;\n        serviceProductTypeId?: string | null;\n        serviceProductValue?: string | null;\n        status?: string | null;\n      } | null;\n      enrollMergeReport?: {\n        __typename: \"TUEnrollResponse\";\n        bureau?: string | null;\n        errorResponse?: string | null;\n        serviceProduct?: string | null;\n        serviceProductFullfillmentKey?: string | null;\n        serviceProductObject?: string | null;\n        serviceProductTypeId?: string | null;\n        serviceProductValue?: string | null;\n        status?: string | null;\n      } | null;\n      enrollVantageScore?: {\n        __typename: \"TUEnrollResponse\";\n        bureau?: string | null;\n        errorResponse?: string | null;\n        serviceProduct?: string | null;\n        serviceProductFullfillmentKey?: string | null;\n        serviceProductObject?: string | null;\n        serviceProductTypeId?: string | null;\n        serviceProductValue?: string | null;\n        status?: string | null;\n      } | null;\n      hidePositiveCreditCardAccounts?: boolean | null;\n      hidePositiveCollectionAccounts?: boolean | null;\n      hidePositiveInstallmentAccounts?: boolean | null;\n      hidePositiveMortgageAccounts?: boolean | null;\n    } | null;\n    equifax?: {\n      __typename: \"Equifax\";\n      authenticated?: boolean | null;\n    } | null;\n    experian?: {\n      __typename: \"Experian\";\n      authenticated?: boolean | null;\n    } | null;\n  };\n  preferences: {\n    __typename: \"Preferences\";\n    showAllAccounts?: {\n      __typename: \"ShowAccountsPreference\";\n      creditCards?: boolean | null;\n      collectionsAccounts?: boolean | null;\n      installmentLoans?: boolean | null;\n      mortgages?: boolean | null;\n    } | null;\n  };\n  createdAt: string;\n  updatedAt: string;\n  owner?: string | null;\n};\n\nexport type ListAppDatasQuery = {\n  __typename: \"ModelAppDataConnection\";\n  items?: Array<{\n    __typename: \"AppData\";\n    id: string;\n    user: {\n      __typename: \"User\";\n      id: string;\n      userAttributes?: {\n        __typename: \"UserAttributes\";\n        name?: {\n          __typename: \"Name\";\n          first: string;\n          middle?: string | null;\n          last: string;\n        } | null;\n        address?: {\n          __typename: \"Address\";\n          addressOne: string;\n          addressTwo?: string | null;\n          city: string;\n          state: string;\n          zip: string;\n        } | null;\n        phone?: {\n          __typename: \"Phone\";\n          primary: string;\n        } | null;\n        dob?: {\n          __typename: \"Dob\";\n          year: string;\n          month: string;\n          day: string;\n        } | null;\n        ssn?: {\n          __typename: \"Ssn\";\n          lastfour: string;\n          full?: string | null;\n        } | null;\n      } | null;\n      onboarding?: {\n        __typename: \"Onboarding\";\n        lastActive: number;\n        lastComplete: number;\n        started?: boolean | null;\n      } | null;\n    };\n    agencies: {\n      __typename: \"Agencies\";\n      transunion?: {\n        __typename: \"Transunion\";\n        authenticated?: boolean | null;\n        indicativeEnrichmentSuccess?: boolean | null;\n        getAuthenticationQuestionsSuccess?: boolean | null;\n        serviceBundleFulfillmentKey?: string | null;\n        currentRawQuestions?: string | null;\n        currentRawAuthDetails?: string | null;\n        enrollmentKey?: string | null;\n        enrollReport?: {\n          __typename: \"TUEnrollResponse\";\n          bureau?: string | null;\n          errorResponse?: string | null;\n          serviceProduct?: string | null;\n          serviceProductFullfillmentKey?: string | null;\n          serviceProductObject?: string | null;\n          serviceProductTypeId?: string | null;\n          serviceProductValue?: string | null;\n          status?: string | null;\n        } | null;\n        enrollMergeReport?: {\n          __typename: \"TUEnrollResponse\";\n          bureau?: string | null;\n          errorResponse?: string | null;\n          serviceProduct?: string | null;\n          serviceProductFullfillmentKey?: string | null;\n          serviceProductObject?: string | null;\n          serviceProductTypeId?: string | null;\n          serviceProductValue?: string | null;\n          status?: string | null;\n        } | null;\n        enrollVantageScore?: {\n          __typename: \"TUEnrollResponse\";\n          bureau?: string | null;\n          errorResponse?: string | null;\n          serviceProduct?: string | null;\n          serviceProductFullfillmentKey?: string | null;\n          serviceProductObject?: string | null;\n          serviceProductTypeId?: string | null;\n          serviceProductValue?: string | null;\n          status?: string | null;\n        } | null;\n        hidePositiveCreditCardAccounts?: boolean | null;\n        hidePositiveCollectionAccounts?: boolean | null;\n        hidePositiveInstallmentAccounts?: boolean | null;\n        hidePositiveMortgageAccounts?: boolean | null;\n      } | null;\n      equifax?: {\n        __typename: \"Equifax\";\n        authenticated?: boolean | null;\n      } | null;\n      experian?: {\n        __typename: \"Experian\";\n        authenticated?: boolean | null;\n      } | null;\n    };\n    preferences: {\n      __typename: \"Preferences\";\n      showAllAccounts?: {\n        __typename: \"ShowAccountsPreference\";\n        creditCards?: boolean | null;\n        collectionsAccounts?: boolean | null;\n        installmentLoans?: boolean | null;\n        mortgages?: boolean | null;\n      } | null;\n    };\n    createdAt: string;\n    updatedAt: string;\n    owner?: string | null;\n  } | null> | null;\n  nextToken?: string | null;\n};\n\nexport type OnCreateAppDataSubscription = {\n  __typename: \"AppData\";\n  id: string;\n  user: {\n    __typename: \"User\";\n    id: string;\n    userAttributes?: {\n      __typename: \"UserAttributes\";\n      name?: {\n        __typename: \"Name\";\n        first: string;\n        middle?: string | null;\n        last: string;\n      } | null;\n      address?: {\n        __typename: \"Address\";\n        addressOne: string;\n        addressTwo?: string | null;\n        city: string;\n        state: string;\n        zip: string;\n      } | null;\n      phone?: {\n        __typename: \"Phone\";\n        primary: string;\n      } | null;\n      dob?: {\n        __typename: \"Dob\";\n        year: string;\n        month: string;\n        day: string;\n      } | null;\n      ssn?: {\n        __typename: \"Ssn\";\n        lastfour: string;\n        full?: string | null;\n      } | null;\n    } | null;\n    onboarding?: {\n      __typename: \"Onboarding\";\n      lastActive: number;\n      lastComplete: number;\n      started?: boolean | null;\n    } | null;\n  };\n  agencies: {\n    __typename: \"Agencies\";\n    transunion?: {\n      __typename: \"Transunion\";\n      authenticated?: boolean | null;\n      indicativeEnrichmentSuccess?: boolean | null;\n      getAuthenticationQuestionsSuccess?: boolean | null;\n      serviceBundleFulfillmentKey?: string | null;\n      currentRawQuestions?: string | null;\n      currentRawAuthDetails?: string | null;\n      enrollmentKey?: string | null;\n      enrollReport?: {\n        __typename: \"TUEnrollResponse\";\n        bureau?: string | null;\n        errorResponse?: string | null;\n        serviceProduct?: string | null;\n        serviceProductFullfillmentKey?: string | null;\n        serviceProductObject?: string | null;\n        serviceProductTypeId?: string | null;\n        serviceProductValue?: string | null;\n        status?: string | null;\n      } | null;\n      enrollMergeReport?: {\n        __typename: \"TUEnrollResponse\";\n        bureau?: string | null;\n        errorResponse?: string | null;\n        serviceProduct?: string | null;\n        serviceProductFullfillmentKey?: string | null;\n        serviceProductObject?: string | null;\n        serviceProductTypeId?: string | null;\n        serviceProductValue?: string | null;\n        status?: string | null;\n      } | null;\n      enrollVantageScore?: {\n        __typename: \"TUEnrollResponse\";\n        bureau?: string | null;\n        errorResponse?: string | null;\n        serviceProduct?: string | null;\n        serviceProductFullfillmentKey?: string | null;\n        serviceProductObject?: string | null;\n        serviceProductTypeId?: string | null;\n        serviceProductValue?: string | null;\n        status?: string | null;\n      } | null;\n      hidePositiveCreditCardAccounts?: boolean | null;\n      hidePositiveCollectionAccounts?: boolean | null;\n      hidePositiveInstallmentAccounts?: boolean | null;\n      hidePositiveMortgageAccounts?: boolean | null;\n    } | null;\n    equifax?: {\n      __typename: \"Equifax\";\n      authenticated?: boolean | null;\n    } | null;\n    experian?: {\n      __typename: \"Experian\";\n      authenticated?: boolean | null;\n    } | null;\n  };\n  preferences: {\n    __typename: \"Preferences\";\n    showAllAccounts?: {\n      __typename: \"ShowAccountsPreference\";\n      creditCards?: boolean | null;\n      collectionsAccounts?: boolean | null;\n      installmentLoans?: boolean | null;\n      mortgages?: boolean | null;\n    } | null;\n  };\n  createdAt: string;\n  updatedAt: string;\n  owner?: string | null;\n};\n\nexport type OnUpdateAppDataSubscription = {\n  __typename: \"AppData\";\n  id: string;\n  user: {\n    __typename: \"User\";\n    id: string;\n    userAttributes?: {\n      __typename: \"UserAttributes\";\n      name?: {\n        __typename: \"Name\";\n        first: string;\n        middle?: string | null;\n        last: string;\n      } | null;\n      address?: {\n        __typename: \"Address\";\n        addressOne: string;\n        addressTwo?: string | null;\n        city: string;\n        state: string;\n        zip: string;\n      } | null;\n      phone?: {\n        __typename: \"Phone\";\n        primary: string;\n      } | null;\n      dob?: {\n        __typename: \"Dob\";\n        year: string;\n        month: string;\n        day: string;\n      } | null;\n      ssn?: {\n        __typename: \"Ssn\";\n        lastfour: string;\n        full?: string | null;\n      } | null;\n    } | null;\n    onboarding?: {\n      __typename: \"Onboarding\";\n      lastActive: number;\n      lastComplete: number;\n      started?: boolean | null;\n    } | null;\n  };\n  agencies: {\n    __typename: \"Agencies\";\n    transunion?: {\n      __typename: \"Transunion\";\n      authenticated?: boolean | null;\n      indicativeEnrichmentSuccess?: boolean | null;\n      getAuthenticationQuestionsSuccess?: boolean | null;\n      serviceBundleFulfillmentKey?: string | null;\n      currentRawQuestions?: string | null;\n      currentRawAuthDetails?: string | null;\n      enrollmentKey?: string | null;\n      enrollReport?: {\n        __typename: \"TUEnrollResponse\";\n        bureau?: string | null;\n        errorResponse?: string | null;\n        serviceProduct?: string | null;\n        serviceProductFullfillmentKey?: string | null;\n        serviceProductObject?: string | null;\n        serviceProductTypeId?: string | null;\n        serviceProductValue?: string | null;\n        status?: string | null;\n      } | null;\n      enrollMergeReport?: {\n        __typename: \"TUEnrollResponse\";\n        bureau?: string | null;\n        errorResponse?: string | null;\n        serviceProduct?: string | null;\n        serviceProductFullfillmentKey?: string | null;\n        serviceProductObject?: string | null;\n        serviceProductTypeId?: string | null;\n        serviceProductValue?: string | null;\n        status?: string | null;\n      } | null;\n      enrollVantageScore?: {\n        __typename: \"TUEnrollResponse\";\n        bureau?: string | null;\n        errorResponse?: string | null;\n        serviceProduct?: string | null;\n        serviceProductFullfillmentKey?: string | null;\n        serviceProductObject?: string | null;\n        serviceProductTypeId?: string | null;\n        serviceProductValue?: string | null;\n        status?: string | null;\n      } | null;\n      hidePositiveCreditCardAccounts?: boolean | null;\n      hidePositiveCollectionAccounts?: boolean | null;\n      hidePositiveInstallmentAccounts?: boolean | null;\n      hidePositiveMortgageAccounts?: boolean | null;\n    } | null;\n    equifax?: {\n      __typename: \"Equifax\";\n      authenticated?: boolean | null;\n    } | null;\n    experian?: {\n      __typename: \"Experian\";\n      authenticated?: boolean | null;\n    } | null;\n  };\n  preferences: {\n    __typename: \"Preferences\";\n    showAllAccounts?: {\n      __typename: \"ShowAccountsPreference\";\n      creditCards?: boolean | null;\n      collectionsAccounts?: boolean | null;\n      installmentLoans?: boolean | null;\n      mortgages?: boolean | null;\n    } | null;\n  };\n  createdAt: string;\n  updatedAt: string;\n  owner?: string | null;\n};\n\nexport type OnDeleteAppDataSubscription = {\n  __typename: \"AppData\";\n  id: string;\n  user: {\n    __typename: \"User\";\n    id: string;\n    userAttributes?: {\n      __typename: \"UserAttributes\";\n      name?: {\n        __typename: \"Name\";\n        first: string;\n        middle?: string | null;\n        last: string;\n      } | null;\n      address?: {\n        __typename: \"Address\";\n        addressOne: string;\n        addressTwo?: string | null;\n        city: string;\n        state: string;\n        zip: string;\n      } | null;\n      phone?: {\n        __typename: \"Phone\";\n        primary: string;\n      } | null;\n      dob?: {\n        __typename: \"Dob\";\n        year: string;\n        month: string;\n        day: string;\n      } | null;\n      ssn?: {\n        __typename: \"Ssn\";\n        lastfour: string;\n        full?: string | null;\n      } | null;\n    } | null;\n    onboarding?: {\n      __typename: \"Onboarding\";\n      lastActive: number;\n      lastComplete: number;\n      started?: boolean | null;\n    } | null;\n  };\n  agencies: {\n    __typename: \"Agencies\";\n    transunion?: {\n      __typename: \"Transunion\";\n      authenticated?: boolean | null;\n      indicativeEnrichmentSuccess?: boolean | null;\n      getAuthenticationQuestionsSuccess?: boolean | null;\n      serviceBundleFulfillmentKey?: string | null;\n      currentRawQuestions?: string | null;\n      currentRawAuthDetails?: string | null;\n      enrollmentKey?: string | null;\n      enrollReport?: {\n        __typename: \"TUEnrollResponse\";\n        bureau?: string | null;\n        errorResponse?: string | null;\n        serviceProduct?: string | null;\n        serviceProductFullfillmentKey?: string | null;\n        serviceProductObject?: string | null;\n        serviceProductTypeId?: string | null;\n        serviceProductValue?: string | null;\n        status?: string | null;\n      } | null;\n      enrollMergeReport?: {\n        __typename: \"TUEnrollResponse\";\n        bureau?: string | null;\n        errorResponse?: string | null;\n        serviceProduct?: string | null;\n        serviceProductFullfillmentKey?: string | null;\n        serviceProductObject?: string | null;\n        serviceProductTypeId?: string | null;\n        serviceProductValue?: string | null;\n        status?: string | null;\n      } | null;\n      enrollVantageScore?: {\n        __typename: \"TUEnrollResponse\";\n        bureau?: string | null;\n        errorResponse?: string | null;\n        serviceProduct?: string | null;\n        serviceProductFullfillmentKey?: string | null;\n        serviceProductObject?: string | null;\n        serviceProductTypeId?: string | null;\n        serviceProductValue?: string | null;\n        status?: string | null;\n      } | null;\n      hidePositiveCreditCardAccounts?: boolean | null;\n      hidePositiveCollectionAccounts?: boolean | null;\n      hidePositiveInstallmentAccounts?: boolean | null;\n      hidePositiveMortgageAccounts?: boolean | null;\n    } | null;\n    equifax?: {\n      __typename: \"Equifax\";\n      authenticated?: boolean | null;\n    } | null;\n    experian?: {\n      __typename: \"Experian\";\n      authenticated?: boolean | null;\n    } | null;\n  };\n  preferences: {\n    __typename: \"Preferences\";\n    showAllAccounts?: {\n      __typename: \"ShowAccountsPreference\";\n      creditCards?: boolean | null;\n      collectionsAccounts?: boolean | null;\n      installmentLoans?: boolean | null;\n      mortgages?: boolean | null;\n    } | null;\n  };\n  createdAt: string;\n  updatedAt: string;\n  owner?: string | null;\n};\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class APIService {\n  async CreateAppData(\n    input: CreateAppDataInput,\n    condition?: ModelAppDataConditionInput\n  ): Promise<CreateAppDataMutation> {\n    const statement = `mutation CreateAppData($input: CreateAppDataInput!, $condition: ModelAppDataConditionInput) {\n        createAppData(input: $input, condition: $condition) {\n          __typename\n          id\n          user {\n            __typename\n            id\n            userAttributes {\n              __typename\n              name {\n                __typename\n                first\n                middle\n                last\n              }\n              address {\n                __typename\n                addressOne\n                addressTwo\n                city\n                state\n                zip\n              }\n              phone {\n                __typename\n                primary\n              }\n              dob {\n                __typename\n                year\n                month\n                day\n              }\n              ssn {\n                __typename\n                lastfour\n                full\n              }\n            }\n            onboarding {\n              __typename\n              lastActive\n              lastComplete\n              started\n            }\n          }\n          agencies {\n            __typename\n            transunion {\n              __typename\n              authenticated\n              indicativeEnrichmentSuccess\n              getAuthenticationQuestionsSuccess\n              serviceBundleFulfillmentKey\n              currentRawQuestions\n              currentRawAuthDetails\n              enrollmentKey\n              enrollReport {\n                __typename\n                bureau\n                errorResponse\n                serviceProduct\n                serviceProductFullfillmentKey\n                serviceProductObject\n                serviceProductTypeId\n                serviceProductValue\n                status\n              }\n              enrollMergeReport {\n                __typename\n                bureau\n                errorResponse\n                serviceProduct\n                serviceProductFullfillmentKey\n                serviceProductObject\n                serviceProductTypeId\n                serviceProductValue\n                status\n              }\n              enrollVantageScore {\n                __typename\n                bureau\n                errorResponse\n                serviceProduct\n                serviceProductFullfillmentKey\n                serviceProductObject\n                serviceProductTypeId\n                serviceProductValue\n                status\n              }\n              hidePositiveCreditCardAccounts\n              hidePositiveCollectionAccounts\n              hidePositiveInstallmentAccounts\n              hidePositiveMortgageAccounts\n            }\n            equifax {\n              __typename\n              authenticated\n            }\n            experian {\n              __typename\n              authenticated\n            }\n          }\n          preferences {\n            __typename\n            showAllAccounts {\n              __typename\n              creditCards\n              collectionsAccounts\n              installmentLoans\n              mortgages\n            }\n          }\n          createdAt\n          updatedAt\n          owner\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      input\n    };\n    if (condition) {\n      gqlAPIServiceArguments.condition = condition;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return <CreateAppDataMutation>response.data.createAppData;\n  }\n  async UpdateAppData(\n    input: UpdateAppDataInput,\n    condition?: ModelAppDataConditionInput\n  ): Promise<UpdateAppDataMutation> {\n    const statement = `mutation UpdateAppData($input: UpdateAppDataInput!, $condition: ModelAppDataConditionInput) {\n        updateAppData(input: $input, condition: $condition) {\n          __typename\n          id\n          user {\n            __typename\n            id\n            userAttributes {\n              __typename\n              name {\n                __typename\n                first\n                middle\n                last\n              }\n              address {\n                __typename\n                addressOne\n                addressTwo\n                city\n                state\n                zip\n              }\n              phone {\n                __typename\n                primary\n              }\n              dob {\n                __typename\n                year\n                month\n                day\n              }\n              ssn {\n                __typename\n                lastfour\n                full\n              }\n            }\n            onboarding {\n              __typename\n              lastActive\n              lastComplete\n              started\n            }\n          }\n          agencies {\n            __typename\n            transunion {\n              __typename\n              authenticated\n              indicativeEnrichmentSuccess\n              getAuthenticationQuestionsSuccess\n              serviceBundleFulfillmentKey\n              currentRawQuestions\n              currentRawAuthDetails\n              enrollmentKey\n              enrollReport {\n                __typename\n                bureau\n                errorResponse\n                serviceProduct\n                serviceProductFullfillmentKey\n                serviceProductObject\n                serviceProductTypeId\n                serviceProductValue\n                status\n              }\n              enrollMergeReport {\n                __typename\n                bureau\n                errorResponse\n                serviceProduct\n                serviceProductFullfillmentKey\n                serviceProductObject\n                serviceProductTypeId\n                serviceProductValue\n                status\n              }\n              enrollVantageScore {\n                __typename\n                bureau\n                errorResponse\n                serviceProduct\n                serviceProductFullfillmentKey\n                serviceProductObject\n                serviceProductTypeId\n                serviceProductValue\n                status\n              }\n              hidePositiveCreditCardAccounts\n              hidePositiveCollectionAccounts\n              hidePositiveInstallmentAccounts\n              hidePositiveMortgageAccounts\n            }\n            equifax {\n              __typename\n              authenticated\n            }\n            experian {\n              __typename\n              authenticated\n            }\n          }\n          preferences {\n            __typename\n            showAllAccounts {\n              __typename\n              creditCards\n              collectionsAccounts\n              installmentLoans\n              mortgages\n            }\n          }\n          createdAt\n          updatedAt\n          owner\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      input\n    };\n    if (condition) {\n      gqlAPIServiceArguments.condition = condition;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return <UpdateAppDataMutation>response.data.updateAppData;\n  }\n  async DeleteAppData(\n    input: DeleteAppDataInput,\n    condition?: ModelAppDataConditionInput\n  ): Promise<DeleteAppDataMutation> {\n    const statement = `mutation DeleteAppData($input: DeleteAppDataInput!, $condition: ModelAppDataConditionInput) {\n        deleteAppData(input: $input, condition: $condition) {\n          __typename\n          id\n          user {\n            __typename\n            id\n            userAttributes {\n              __typename\n              name {\n                __typename\n                first\n                middle\n                last\n              }\n              address {\n                __typename\n                addressOne\n                addressTwo\n                city\n                state\n                zip\n              }\n              phone {\n                __typename\n                primary\n              }\n              dob {\n                __typename\n                year\n                month\n                day\n              }\n              ssn {\n                __typename\n                lastfour\n                full\n              }\n            }\n            onboarding {\n              __typename\n              lastActive\n              lastComplete\n              started\n            }\n          }\n          agencies {\n            __typename\n            transunion {\n              __typename\n              authenticated\n              indicativeEnrichmentSuccess\n              getAuthenticationQuestionsSuccess\n              serviceBundleFulfillmentKey\n              currentRawQuestions\n              currentRawAuthDetails\n              enrollmentKey\n              enrollReport {\n                __typename\n                bureau\n                errorResponse\n                serviceProduct\n                serviceProductFullfillmentKey\n                serviceProductObject\n                serviceProductTypeId\n                serviceProductValue\n                status\n              }\n              enrollMergeReport {\n                __typename\n                bureau\n                errorResponse\n                serviceProduct\n                serviceProductFullfillmentKey\n                serviceProductObject\n                serviceProductTypeId\n                serviceProductValue\n                status\n              }\n              enrollVantageScore {\n                __typename\n                bureau\n                errorResponse\n                serviceProduct\n                serviceProductFullfillmentKey\n                serviceProductObject\n                serviceProductTypeId\n                serviceProductValue\n                status\n              }\n              hidePositiveCreditCardAccounts\n              hidePositiveCollectionAccounts\n              hidePositiveInstallmentAccounts\n              hidePositiveMortgageAccounts\n            }\n            equifax {\n              __typename\n              authenticated\n            }\n            experian {\n              __typename\n              authenticated\n            }\n          }\n          preferences {\n            __typename\n            showAllAccounts {\n              __typename\n              creditCards\n              collectionsAccounts\n              installmentLoans\n              mortgages\n            }\n          }\n          createdAt\n          updatedAt\n          owner\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      input\n    };\n    if (condition) {\n      gqlAPIServiceArguments.condition = condition;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return <DeleteAppDataMutation>response.data.deleteAppData;\n  }\n  async Transunion(action: string, message: string): Promise<string | null> {\n    const statement = `query Transunion($action: String!, $message: String!) {\n        transunion(action: $action, message: $message)\n      }`;\n    const gqlAPIServiceArguments: any = {\n      action,\n      message\n    };\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return <string | null>response.data.transunion;\n  }\n  async GetAppData(id: string): Promise<GetAppDataQuery> {\n    const statement = `query GetAppData($id: ID!) {\n        getAppData(id: $id) {\n          __typename\n          id\n          user {\n            __typename\n            id\n            userAttributes {\n              __typename\n              name {\n                __typename\n                first\n                middle\n                last\n              }\n              address {\n                __typename\n                addressOne\n                addressTwo\n                city\n                state\n                zip\n              }\n              phone {\n                __typename\n                primary\n              }\n              dob {\n                __typename\n                year\n                month\n                day\n              }\n              ssn {\n                __typename\n                lastfour\n                full\n              }\n            }\n            onboarding {\n              __typename\n              lastActive\n              lastComplete\n              started\n            }\n          }\n          agencies {\n            __typename\n            transunion {\n              __typename\n              authenticated\n              indicativeEnrichmentSuccess\n              getAuthenticationQuestionsSuccess\n              serviceBundleFulfillmentKey\n              currentRawQuestions\n              currentRawAuthDetails\n              enrollmentKey\n              enrollReport {\n                __typename\n                bureau\n                errorResponse\n                serviceProduct\n                serviceProductFullfillmentKey\n                serviceProductObject\n                serviceProductTypeId\n                serviceProductValue\n                status\n              }\n              enrollMergeReport {\n                __typename\n                bureau\n                errorResponse\n                serviceProduct\n                serviceProductFullfillmentKey\n                serviceProductObject\n                serviceProductTypeId\n                serviceProductValue\n                status\n              }\n              enrollVantageScore {\n                __typename\n                bureau\n                errorResponse\n                serviceProduct\n                serviceProductFullfillmentKey\n                serviceProductObject\n                serviceProductTypeId\n                serviceProductValue\n                status\n              }\n              hidePositiveCreditCardAccounts\n              hidePositiveCollectionAccounts\n              hidePositiveInstallmentAccounts\n              hidePositiveMortgageAccounts\n            }\n            equifax {\n              __typename\n              authenticated\n            }\n            experian {\n              __typename\n              authenticated\n            }\n          }\n          preferences {\n            __typename\n            showAllAccounts {\n              __typename\n              creditCards\n              collectionsAccounts\n              installmentLoans\n              mortgages\n            }\n          }\n          createdAt\n          updatedAt\n          owner\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      id\n    };\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return <GetAppDataQuery>response.data.getAppData;\n  }\n  async ListAppDatas(\n    filter?: ModelAppDataFilterInput,\n    limit?: number,\n    nextToken?: string\n  ): Promise<ListAppDatasQuery> {\n    const statement = `query ListAppDatas($filter: ModelAppDataFilterInput, $limit: Int, $nextToken: String) {\n        listAppDatas(filter: $filter, limit: $limit, nextToken: $nextToken) {\n          __typename\n          items {\n            __typename\n            id\n            user {\n              __typename\n              id\n              userAttributes {\n                __typename\n                name {\n                  __typename\n                  first\n                  middle\n                  last\n                }\n                address {\n                  __typename\n                  addressOne\n                  addressTwo\n                  city\n                  state\n                  zip\n                }\n                phone {\n                  __typename\n                  primary\n                }\n                dob {\n                  __typename\n                  year\n                  month\n                  day\n                }\n                ssn {\n                  __typename\n                  lastfour\n                  full\n                }\n              }\n              onboarding {\n                __typename\n                lastActive\n                lastComplete\n                started\n              }\n            }\n            agencies {\n              __typename\n              transunion {\n                __typename\n                authenticated\n                indicativeEnrichmentSuccess\n                getAuthenticationQuestionsSuccess\n                serviceBundleFulfillmentKey\n                currentRawQuestions\n                currentRawAuthDetails\n                enrollmentKey\n                enrollReport {\n                  __typename\n                  bureau\n                  errorResponse\n                  serviceProduct\n                  serviceProductFullfillmentKey\n                  serviceProductObject\n                  serviceProductTypeId\n                  serviceProductValue\n                  status\n                }\n                enrollMergeReport {\n                  __typename\n                  bureau\n                  errorResponse\n                  serviceProduct\n                  serviceProductFullfillmentKey\n                  serviceProductObject\n                  serviceProductTypeId\n                  serviceProductValue\n                  status\n                }\n                enrollVantageScore {\n                  __typename\n                  bureau\n                  errorResponse\n                  serviceProduct\n                  serviceProductFullfillmentKey\n                  serviceProductObject\n                  serviceProductTypeId\n                  serviceProductValue\n                  status\n                }\n                hidePositiveCreditCardAccounts\n                hidePositiveCollectionAccounts\n                hidePositiveInstallmentAccounts\n                hidePositiveMortgageAccounts\n              }\n              equifax {\n                __typename\n                authenticated\n              }\n              experian {\n                __typename\n                authenticated\n              }\n            }\n            preferences {\n              __typename\n              showAllAccounts {\n                __typename\n                creditCards\n                collectionsAccounts\n                installmentLoans\n                mortgages\n              }\n            }\n            createdAt\n            updatedAt\n            owner\n          }\n          nextToken\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {};\n    if (filter) {\n      gqlAPIServiceArguments.filter = filter;\n    }\n    if (limit) {\n      gqlAPIServiceArguments.limit = limit;\n    }\n    if (nextToken) {\n      gqlAPIServiceArguments.nextToken = nextToken;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return <ListAppDatasQuery>response.data.listAppDatas;\n  }\n  OnCreateAppDataListener(\n    owner?: string\n  ): Observable<SubscriptionResponse<OnCreateAppDataSubscription>> {\n    const statement = `subscription OnCreateAppData($owner: String) {\n        onCreateAppData(owner: $owner) {\n          __typename\n          id\n          user {\n            __typename\n            id\n            userAttributes {\n              __typename\n              name {\n                __typename\n                first\n                middle\n                last\n              }\n              address {\n                __typename\n                addressOne\n                addressTwo\n                city\n                state\n                zip\n              }\n              phone {\n                __typename\n                primary\n              }\n              dob {\n                __typename\n                year\n                month\n                day\n              }\n              ssn {\n                __typename\n                lastfour\n                full\n              }\n            }\n            onboarding {\n              __typename\n              lastActive\n              lastComplete\n              started\n            }\n          }\n          agencies {\n            __typename\n            transunion {\n              __typename\n              authenticated\n              indicativeEnrichmentSuccess\n              getAuthenticationQuestionsSuccess\n              serviceBundleFulfillmentKey\n              currentRawQuestions\n              currentRawAuthDetails\n              enrollmentKey\n              enrollReport {\n                __typename\n                bureau\n                errorResponse\n                serviceProduct\n                serviceProductFullfillmentKey\n                serviceProductObject\n                serviceProductTypeId\n                serviceProductValue\n                status\n              }\n              enrollMergeReport {\n                __typename\n                bureau\n                errorResponse\n                serviceProduct\n                serviceProductFullfillmentKey\n                serviceProductObject\n                serviceProductTypeId\n                serviceProductValue\n                status\n              }\n              enrollVantageScore {\n                __typename\n                bureau\n                errorResponse\n                serviceProduct\n                serviceProductFullfillmentKey\n                serviceProductObject\n                serviceProductTypeId\n                serviceProductValue\n                status\n              }\n              hidePositiveCreditCardAccounts\n              hidePositiveCollectionAccounts\n              hidePositiveInstallmentAccounts\n              hidePositiveMortgageAccounts\n            }\n            equifax {\n              __typename\n              authenticated\n            }\n            experian {\n              __typename\n              authenticated\n            }\n          }\n          preferences {\n            __typename\n            showAllAccounts {\n              __typename\n              creditCards\n              collectionsAccounts\n              installmentLoans\n              mortgages\n            }\n          }\n          createdAt\n          updatedAt\n          owner\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {};\n    if (owner) {\n      gqlAPIServiceArguments.owner = owner;\n    }\n    return API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    ) as Observable<SubscriptionResponse<OnCreateAppDataSubscription>>;\n  }\n\n  OnUpdateAppDataListener(\n    owner?: string\n  ): Observable<SubscriptionResponse<OnUpdateAppDataSubscription>> {\n    const statement = `subscription OnUpdateAppData($owner: String) {\n        onUpdateAppData(owner: $owner) {\n          __typename\n          id\n          user {\n            __typename\n            id\n            userAttributes {\n              __typename\n              name {\n                __typename\n                first\n                middle\n                last\n              }\n              address {\n                __typename\n                addressOne\n                addressTwo\n                city\n                state\n                zip\n              }\n              phone {\n                __typename\n                primary\n              }\n              dob {\n                __typename\n                year\n                month\n                day\n              }\n              ssn {\n                __typename\n                lastfour\n                full\n              }\n            }\n            onboarding {\n              __typename\n              lastActive\n              lastComplete\n              started\n            }\n          }\n          agencies {\n            __typename\n            transunion {\n              __typename\n              authenticated\n              indicativeEnrichmentSuccess\n              getAuthenticationQuestionsSuccess\n              serviceBundleFulfillmentKey\n              currentRawQuestions\n              currentRawAuthDetails\n              enrollmentKey\n              enrollReport {\n                __typename\n                bureau\n                errorResponse\n                serviceProduct\n                serviceProductFullfillmentKey\n                serviceProductObject\n                serviceProductTypeId\n                serviceProductValue\n                status\n              }\n              enrollMergeReport {\n                __typename\n                bureau\n                errorResponse\n                serviceProduct\n                serviceProductFullfillmentKey\n                serviceProductObject\n                serviceProductTypeId\n                serviceProductValue\n                status\n              }\n              enrollVantageScore {\n                __typename\n                bureau\n                errorResponse\n                serviceProduct\n                serviceProductFullfillmentKey\n                serviceProductObject\n                serviceProductTypeId\n                serviceProductValue\n                status\n              }\n              hidePositiveCreditCardAccounts\n              hidePositiveCollectionAccounts\n              hidePositiveInstallmentAccounts\n              hidePositiveMortgageAccounts\n            }\n            equifax {\n              __typename\n              authenticated\n            }\n            experian {\n              __typename\n              authenticated\n            }\n          }\n          preferences {\n            __typename\n            showAllAccounts {\n              __typename\n              creditCards\n              collectionsAccounts\n              installmentLoans\n              mortgages\n            }\n          }\n          createdAt\n          updatedAt\n          owner\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {};\n    if (owner) {\n      gqlAPIServiceArguments.owner = owner;\n    }\n    return API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    ) as Observable<SubscriptionResponse<OnUpdateAppDataSubscription>>;\n  }\n\n  OnDeleteAppDataListener(\n    owner?: string\n  ): Observable<SubscriptionResponse<OnDeleteAppDataSubscription>> {\n    const statement = `subscription OnDeleteAppData($owner: String) {\n        onDeleteAppData(owner: $owner) {\n          __typename\n          id\n          user {\n            __typename\n            id\n            userAttributes {\n              __typename\n              name {\n                __typename\n                first\n                middle\n                last\n              }\n              address {\n                __typename\n                addressOne\n                addressTwo\n                city\n                state\n                zip\n              }\n              phone {\n                __typename\n                primary\n              }\n              dob {\n                __typename\n                year\n                month\n                day\n              }\n              ssn {\n                __typename\n                lastfour\n                full\n              }\n            }\n            onboarding {\n              __typename\n              lastActive\n              lastComplete\n              started\n            }\n          }\n          agencies {\n            __typename\n            transunion {\n              __typename\n              authenticated\n              indicativeEnrichmentSuccess\n              getAuthenticationQuestionsSuccess\n              serviceBundleFulfillmentKey\n              currentRawQuestions\n              currentRawAuthDetails\n              enrollmentKey\n              enrollReport {\n                __typename\n                bureau\n                errorResponse\n                serviceProduct\n                serviceProductFullfillmentKey\n                serviceProductObject\n                serviceProductTypeId\n                serviceProductValue\n                status\n              }\n              enrollMergeReport {\n                __typename\n                bureau\n                errorResponse\n                serviceProduct\n                serviceProductFullfillmentKey\n                serviceProductObject\n                serviceProductTypeId\n                serviceProductValue\n                status\n              }\n              enrollVantageScore {\n                __typename\n                bureau\n                errorResponse\n                serviceProduct\n                serviceProductFullfillmentKey\n                serviceProductObject\n                serviceProductTypeId\n                serviceProductValue\n                status\n              }\n              hidePositiveCreditCardAccounts\n              hidePositiveCollectionAccounts\n              hidePositiveInstallmentAccounts\n              hidePositiveMortgageAccounts\n            }\n            equifax {\n              __typename\n              authenticated\n            }\n            experian {\n              __typename\n              authenticated\n            }\n          }\n          preferences {\n            __typename\n            showAllAccounts {\n              __typename\n              creditCards\n              collectionsAccounts\n              installmentLoans\n              mortgages\n            }\n          }\n          createdAt\n          updatedAt\n          owner\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {};\n    if (owner) {\n      gqlAPIServiceArguments.owner = owner;\n    }\n    return API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    ) as Observable<SubscriptionResponse<OnDeleteAppDataSubscription>>;\n  }\n}\n",
            "properties": [
                {
                    "name": "value",
                    "type": "GraphQLResult<T>",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        }
    ],
    "injectables": [
        {
            "name": "AgenciesState",
            "id": "injectable-AgenciesState-e26fe4eb959fe68239b9ace2c0c4bfa0",
            "file": "src/app/store/agencies/agencies.state.ts",
            "properties": [],
            "methods": [
                {
                    "name": "addAgencies",
                    "args": [
                        {
                            "name": "ctx",
                            "type": "StateContext<AgenciesStateModel>"
                        },
                        {
                            "type": "AgenciesActions.Add"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "decorators": [
                        {
                            "name": "Action",
                            "stringifiedArguments": "AgenciesActions.Add"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "ctx",
                            "type": "StateContext<AgenciesStateModel>",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "type": "AgenciesActions.Add",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "deleteUser",
                    "args": [
                        {
                            "name": "ctx",
                            "type": "StateContext<AgenciesStateModel>"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35,
                    "decorators": [
                        {
                            "name": "Action",
                            "stringifiedArguments": "AgenciesActions.Delete"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "ctx",
                            "type": "StateContext<AgenciesStateModel>",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateAgencies",
                    "args": [
                        {
                            "name": "ctx",
                            "type": "StateContext<AgenciesStateModel>"
                        },
                        {
                            "type": "AgenciesActions.Edit"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "decorators": [
                        {
                            "name": "Action",
                            "stringifiedArguments": "AgenciesActions.Edit"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "ctx",
                            "type": "StateContext<AgenciesStateModel>",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "type": "AgenciesActions.Edit",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateTransunionAuthDetails",
                    "args": [
                        {
                            "name": "ctx",
                            "type": "StateContext<AgenciesStateModel>"
                        },
                        {
                            "type": "AgenciesActions.EditTransunionAuthDetails"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 58,
                    "decorators": [
                        {
                            "name": "Action",
                            "stringifiedArguments": "AgenciesActions.EditTransunionAuthDetails"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "ctx",
                            "type": "StateContext<AgenciesStateModel>",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "type": "AgenciesActions.EditTransunionAuthDetails",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateTransunionQuestions",
                    "args": [
                        {
                            "name": "ctx",
                            "type": "StateContext<AgenciesStateModel>"
                        },
                        {
                            "type": "AgenciesActions.EditTransunionQuestions"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 43,
                    "decorators": [
                        {
                            "name": "Action",
                            "stringifiedArguments": "AgenciesActions.EditTransunionQuestions"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "ctx",
                            "type": "StateContext<AgenciesStateModel>",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "type": "AgenciesActions.EditTransunionQuestions",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "description": "",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { State, Action, StateContext } from '@ngxs/store';\nimport { AgenciesStateModel } from '@store/agencies/agencies.model';\nimport * as AgenciesActions from '@store/agencies/agencies.actions';\n\n@State<AgenciesStateModel>({\n  name: 'agencies',\n  defaults: {},\n})\n@Injectable()\nexport class AgenciesState {\n  constructor() {}\n\n  @Action(AgenciesActions.Add)\n  addAgencies(\n    ctx: StateContext<AgenciesStateModel>,\n    { payload }: AgenciesActions.Add\n  ) {\n    ctx.patchState({\n      ...payload,\n    });\n  }\n\n  @Action(AgenciesActions.Edit)\n  updateAgencies(\n    ctx: StateContext<AgenciesStateModel>,\n    { payload }: AgenciesActions.Edit\n  ) {\n    ctx.patchState({\n      ...payload,\n    });\n  }\n\n  @Action(AgenciesActions.Delete)\n  deleteUser(ctx: StateContext<AgenciesStateModel>) {\n    const payload = new AgenciesStateModel();\n    ctx.patchState({\n      ...payload,\n    });\n  }\n\n  @Action(AgenciesActions.EditTransunionQuestions)\n  updateTransunionQuestions(\n    ctx: StateContext<AgenciesStateModel>,\n    { payload }: AgenciesActions.EditTransunionQuestions\n  ) {\n    const state = ctx.getState();\n    ctx.patchState({\n      ...state,\n      transunion: {\n        ...state.transunion,\n        ...payload,\n      },\n    });\n  }\n\n  @Action(AgenciesActions.EditTransunionAuthDetails)\n  updateTransunionAuthDetails(\n    ctx: StateContext<AgenciesStateModel>,\n    { payload }: AgenciesActions.EditTransunionAuthDetails\n  ) {\n    const state = ctx.getState();\n    ctx.patchState({\n      ...state,\n      transunion: {\n        ...state.transunion,\n        ...payload,\n      },\n    });\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 11
            },
            "type": "injectable"
        },
        {
            "name": "APIService",
            "id": "injectable-APIService-12785e555ad5153d939f1b6496900e11",
            "file": "src/app/shared/services/aws/api.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "CreateAppData",
                    "args": [
                        {
                            "name": "input",
                            "type": "CreateAppDataInput"
                        },
                        {
                            "name": "condition",
                            "type": "ModelAppDataConditionInput",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<CreateAppDataMutation>",
                    "typeParameters": [],
                    "line": 1270,
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "input",
                            "type": "CreateAppDataInput",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "condition",
                            "type": "ModelAppDataConditionInput",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "DeleteAppData",
                    "args": [
                        {
                            "name": "input",
                            "type": "DeleteAppDataInput"
                        },
                        {
                            "name": "condition",
                            "type": "ModelAppDataConditionInput",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<DeleteAppDataMutation>",
                    "typeParameters": [],
                    "line": 1538,
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "input",
                            "type": "DeleteAppDataInput",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "condition",
                            "type": "ModelAppDataConditionInput",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "GetAppData",
                    "args": [
                        {
                            "name": "id",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<GetAppDataQuery>",
                    "typeParameters": [],
                    "line": 1685,
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ListAppDatas",
                    "args": [
                        {
                            "name": "filter",
                            "type": "ModelAppDataFilterInput",
                            "optional": true
                        },
                        {
                            "name": "limit",
                            "type": "number",
                            "optional": true
                        },
                        {
                            "name": "nextToken",
                            "type": "string",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<ListAppDatasQuery>",
                    "typeParameters": [],
                    "line": 1813,
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "filter",
                            "type": "ModelAppDataFilterInput",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "limit",
                            "type": "number",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "nextToken",
                            "type": "string",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "OnCreateAppDataListener",
                    "args": [
                        {
                            "name": "owner",
                            "type": "string",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<SubscriptionResponse<OnCreateAppDataSubscription>>",
                    "typeParameters": [],
                    "line": 1956,
                    "jsdoctags": [
                        {
                            "name": "owner",
                            "type": "string",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "OnDeleteAppDataListener",
                    "args": [
                        {
                            "name": "owner",
                            "type": "string",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<SubscriptionResponse<OnDeleteAppDataSubscription>>",
                    "typeParameters": [],
                    "line": 2218,
                    "jsdoctags": [
                        {
                            "name": "owner",
                            "type": "string",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "OnUpdateAppDataListener",
                    "args": [
                        {
                            "name": "owner",
                            "type": "string",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<SubscriptionResponse<OnUpdateAppDataSubscription>>",
                    "typeParameters": [],
                    "line": 2087,
                    "jsdoctags": [
                        {
                            "name": "owner",
                            "type": "string",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "Transunion",
                    "args": [
                        {
                            "name": "action",
                            "type": "string"
                        },
                        {
                            "name": "message",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<string | null>",
                    "typeParameters": [],
                    "line": 1672,
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "action",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "message",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "UpdateAppData",
                    "args": [
                        {
                            "name": "input",
                            "type": "UpdateAppDataInput"
                        },
                        {
                            "name": "condition",
                            "type": "ModelAppDataConditionInput",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<UpdateAppDataMutation>",
                    "typeParameters": [],
                    "line": 1404,
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "input",
                            "type": "UpdateAppDataInput",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "condition",
                            "type": "ModelAppDataConditionInput",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "description": "",
            "sourceCode": "import { Injectable } from \"@angular/core\";\nimport API, { graphqlOperation, GraphQLResult } from \"@aws-amplify/api-graphql\";\nimport { Observable } from \"zen-observable-ts\";\n\nexport interface SubscriptionResponse<T> {\n  value: GraphQLResult<T>;\n}\n\nexport type CreateAppDataInput = {\n  id?: string | null;\n  user: UserInput;\n  agencies: AgenciesInput;\n  preferences: PreferencesInput;\n};\n\nexport type UserInput = {\n  id: string;\n  userAttributes?: UserAttributesInput | null;\n  onboarding?: OnboardingInput | null;\n};\n\nexport type UserAttributesInput = {\n  name?: NameInput | null;\n  address?: AddressInput | null;\n  phone?: PhoneInput | null;\n  dob?: DobInput | null;\n  ssn?: SsnInput | null;\n};\n\nexport type NameInput = {\n  first: string;\n  middle?: string | null;\n  last: string;\n};\n\nexport type AddressInput = {\n  addressOne: string;\n  addressTwo?: string | null;\n  city: string;\n  state: string;\n  zip: string;\n};\n\nexport type PhoneInput = {\n  primary: string;\n};\n\nexport type DobInput = {\n  year: string;\n  month: string;\n  day: string;\n};\n\nexport type SsnInput = {\n  lastfour: string;\n  full?: string | null;\n};\n\nexport type OnboardingInput = {\n  lastActive: number;\n  lastComplete: number;\n  started?: boolean | null;\n};\n\nexport type AgenciesInput = {\n  transunion?: TransunionInput | null;\n  equifax?: EquifaxInput | null;\n  experian?: ExperianInput | null;\n};\n\nexport type TransunionInput = {\n  authenticated?: boolean | null;\n  indicativeEnrichmentSuccess?: boolean | null;\n  getAuthenticationQuestionsSuccess?: boolean | null;\n  serviceBundleFulfillmentKey?: string | null;\n  currentRawQuestions?: string | null;\n  currentRawAuthDetails?: string | null;\n  enrollmentKey?: string | null;\n  enrollReport?: TUEnrollResponseInput | null;\n  enrollMergeReport?: TUEnrollResponseInput | null;\n  enrollVantageScore?: TUEnrollResponseInput | null;\n  hidePositiveCreditCardAccounts?: boolean | null;\n  hidePositiveCollectionAccounts?: boolean | null;\n  hidePositiveInstallmentAccounts?: boolean | null;\n  hidePositiveMortgageAccounts?: boolean | null;\n};\n\nexport type TUEnrollResponseInput = {\n  bureau?: string | null;\n  errorResponse?: string | null;\n  serviceProduct?: string | null;\n  serviceProductFullfillmentKey?: string | null;\n  serviceProductObject?: string | null;\n  serviceProductTypeId?: string | null;\n  serviceProductValue?: string | null;\n  status?: string | null;\n};\n\nexport type EquifaxInput = {\n  authenticated?: boolean | null;\n};\n\nexport type ExperianInput = {\n  authenticated?: boolean | null;\n};\n\nexport type PreferencesInput = {\n  showAllAccounts?: ShowAccountsPreferenceInput | null;\n};\n\nexport type ShowAccountsPreferenceInput = {\n  creditCards?: boolean | null;\n  collectionsAccounts?: boolean | null;\n  installmentLoans?: boolean | null;\n  mortgages?: boolean | null;\n};\n\nexport type ModelAppDataConditionInput = {\n  and?: Array<ModelAppDataConditionInput | null> | null;\n  or?: Array<ModelAppDataConditionInput | null> | null;\n  not?: ModelAppDataConditionInput | null;\n};\n\nexport type AppData = {\n  __typename: \"AppData\";\n  id?: string;\n  user?: User;\n  agencies?: Agencies;\n  preferences?: Preferences;\n  createdAt?: string;\n  updatedAt?: string;\n  owner?: string | null;\n};\n\nexport type User = {\n  __typename: \"User\";\n  id?: string;\n  userAttributes?: UserAttributes;\n  onboarding?: Onboarding;\n};\n\nexport type UserAttributes = {\n  __typename: \"UserAttributes\";\n  name?: Name;\n  address?: Address;\n  phone?: Phone;\n  dob?: Dob;\n  ssn?: Ssn;\n};\n\nexport type Name = {\n  __typename: \"Name\";\n  first?: string;\n  middle?: string | null;\n  last?: string;\n};\n\nexport type Address = {\n  __typename: \"Address\";\n  addressOne?: string;\n  addressTwo?: string | null;\n  city?: string;\n  state?: string;\n  zip?: string;\n};\n\nexport type Phone = {\n  __typename: \"Phone\";\n  primary?: string;\n};\n\nexport type Dob = {\n  __typename: \"Dob\";\n  year?: string;\n  month?: string;\n  day?: string;\n};\n\nexport type Ssn = {\n  __typename: \"Ssn\";\n  lastfour?: string;\n  full?: string | null;\n};\n\nexport type Onboarding = {\n  __typename: \"Onboarding\";\n  lastActive?: number;\n  lastComplete?: number;\n  started?: boolean | null;\n};\n\nexport type Agencies = {\n  __typename: \"Agencies\";\n  transunion?: Transunion;\n  equifax?: Equifax;\n  experian?: Experian;\n};\n\nexport type Transunion = {\n  __typename: \"Transunion\";\n  authenticated?: boolean | null;\n  indicativeEnrichmentSuccess?: boolean | null;\n  getAuthenticationQuestionsSuccess?: boolean | null;\n  serviceBundleFulfillmentKey?: string | null;\n  currentRawQuestions?: string | null;\n  currentRawAuthDetails?: string | null;\n  enrollmentKey?: string | null;\n  enrollReport?: TUEnrollResponse;\n  enrollMergeReport?: TUEnrollResponse;\n  enrollVantageScore?: TUEnrollResponse;\n  hidePositiveCreditCardAccounts?: boolean | null;\n  hidePositiveCollectionAccounts?: boolean | null;\n  hidePositiveInstallmentAccounts?: boolean | null;\n  hidePositiveMortgageAccounts?: boolean | null;\n};\n\nexport type TUEnrollResponse = {\n  __typename: \"TUEnrollResponse\";\n  bureau?: string | null;\n  errorResponse?: string | null;\n  serviceProduct?: string | null;\n  serviceProductFullfillmentKey?: string | null;\n  serviceProductObject?: string | null;\n  serviceProductTypeId?: string | null;\n  serviceProductValue?: string | null;\n  status?: string | null;\n};\n\nexport type Equifax = {\n  __typename: \"Equifax\";\n  authenticated?: boolean | null;\n};\n\nexport type Experian = {\n  __typename: \"Experian\";\n  authenticated?: boolean | null;\n};\n\nexport type Preferences = {\n  __typename: \"Preferences\";\n  showAllAccounts?: ShowAccountsPreference;\n};\n\nexport type ShowAccountsPreference = {\n  __typename: \"ShowAccountsPreference\";\n  creditCards?: boolean | null;\n  collectionsAccounts?: boolean | null;\n  installmentLoans?: boolean | null;\n  mortgages?: boolean | null;\n};\n\nexport type UpdateAppDataInput = {\n  id: string;\n  user?: UserInput | null;\n  agencies?: AgenciesInput | null;\n  preferences?: PreferencesInput | null;\n};\n\nexport type DeleteAppDataInput = {\n  id: string;\n};\n\nexport type ModelAppDataFilterInput = {\n  id?: ModelIDInput | null;\n  and?: Array<ModelAppDataFilterInput | null> | null;\n  or?: Array<ModelAppDataFilterInput | null> | null;\n  not?: ModelAppDataFilterInput | null;\n};\n\nexport type ModelIDInput = {\n  ne?: string | null;\n  eq?: string | null;\n  le?: string | null;\n  lt?: string | null;\n  ge?: string | null;\n  gt?: string | null;\n  contains?: string | null;\n  notContains?: string | null;\n  between?: Array<string | null> | null;\n  beginsWith?: string | null;\n  attributeExists?: boolean | null;\n  attributeType?: ModelAttributeTypes | null;\n  size?: ModelSizeInput | null;\n};\n\nexport enum ModelAttributeTypes {\n  binary = \"binary\",\n  binarySet = \"binarySet\",\n  bool = \"bool\",\n  list = \"list\",\n  map = \"map\",\n  number = \"number\",\n  numberSet = \"numberSet\",\n  string = \"string\",\n  stringSet = \"stringSet\",\n  _null = \"_null\"\n}\n\nexport type ModelSizeInput = {\n  ne?: number | null;\n  eq?: number | null;\n  le?: number | null;\n  lt?: number | null;\n  ge?: number | null;\n  gt?: number | null;\n  between?: Array<number | null> | null;\n};\n\nexport type ModelAppDataConnection = {\n  __typename: \"ModelAppDataConnection\";\n  items?: Array<AppData | null> | null;\n  nextToken?: string | null;\n};\n\nexport type CreateAppDataMutation = {\n  __typename: \"AppData\";\n  id: string;\n  user: {\n    __typename: \"User\";\n    id: string;\n    userAttributes?: {\n      __typename: \"UserAttributes\";\n      name?: {\n        __typename: \"Name\";\n        first: string;\n        middle?: string | null;\n        last: string;\n      } | null;\n      address?: {\n        __typename: \"Address\";\n        addressOne: string;\n        addressTwo?: string | null;\n        city: string;\n        state: string;\n        zip: string;\n      } | null;\n      phone?: {\n        __typename: \"Phone\";\n        primary: string;\n      } | null;\n      dob?: {\n        __typename: \"Dob\";\n        year: string;\n        month: string;\n        day: string;\n      } | null;\n      ssn?: {\n        __typename: \"Ssn\";\n        lastfour: string;\n        full?: string | null;\n      } | null;\n    } | null;\n    onboarding?: {\n      __typename: \"Onboarding\";\n      lastActive: number;\n      lastComplete: number;\n      started?: boolean | null;\n    } | null;\n  };\n  agencies: {\n    __typename: \"Agencies\";\n    transunion?: {\n      __typename: \"Transunion\";\n      authenticated?: boolean | null;\n      indicativeEnrichmentSuccess?: boolean | null;\n      getAuthenticationQuestionsSuccess?: boolean | null;\n      serviceBundleFulfillmentKey?: string | null;\n      currentRawQuestions?: string | null;\n      currentRawAuthDetails?: string | null;\n      enrollmentKey?: string | null;\n      enrollReport?: {\n        __typename: \"TUEnrollResponse\";\n        bureau?: string | null;\n        errorResponse?: string | null;\n        serviceProduct?: string | null;\n        serviceProductFullfillmentKey?: string | null;\n        serviceProductObject?: string | null;\n        serviceProductTypeId?: string | null;\n        serviceProductValue?: string | null;\n        status?: string | null;\n      } | null;\n      enrollMergeReport?: {\n        __typename: \"TUEnrollResponse\";\n        bureau?: string | null;\n        errorResponse?: string | null;\n        serviceProduct?: string | null;\n        serviceProductFullfillmentKey?: string | null;\n        serviceProductObject?: string | null;\n        serviceProductTypeId?: string | null;\n        serviceProductValue?: string | null;\n        status?: string | null;\n      } | null;\n      enrollVantageScore?: {\n        __typename: \"TUEnrollResponse\";\n        bureau?: string | null;\n        errorResponse?: string | null;\n        serviceProduct?: string | null;\n        serviceProductFullfillmentKey?: string | null;\n        serviceProductObject?: string | null;\n        serviceProductTypeId?: string | null;\n        serviceProductValue?: string | null;\n        status?: string | null;\n      } | null;\n      hidePositiveCreditCardAccounts?: boolean | null;\n      hidePositiveCollectionAccounts?: boolean | null;\n      hidePositiveInstallmentAccounts?: boolean | null;\n      hidePositiveMortgageAccounts?: boolean | null;\n    } | null;\n    equifax?: {\n      __typename: \"Equifax\";\n      authenticated?: boolean | null;\n    } | null;\n    experian?: {\n      __typename: \"Experian\";\n      authenticated?: boolean | null;\n    } | null;\n  };\n  preferences: {\n    __typename: \"Preferences\";\n    showAllAccounts?: {\n      __typename: \"ShowAccountsPreference\";\n      creditCards?: boolean | null;\n      collectionsAccounts?: boolean | null;\n      installmentLoans?: boolean | null;\n      mortgages?: boolean | null;\n    } | null;\n  };\n  createdAt: string;\n  updatedAt: string;\n  owner?: string | null;\n};\n\nexport type UpdateAppDataMutation = {\n  __typename: \"AppData\";\n  id: string;\n  user: {\n    __typename: \"User\";\n    id: string;\n    userAttributes?: {\n      __typename: \"UserAttributes\";\n      name?: {\n        __typename: \"Name\";\n        first: string;\n        middle?: string | null;\n        last: string;\n      } | null;\n      address?: {\n        __typename: \"Address\";\n        addressOne: string;\n        addressTwo?: string | null;\n        city: string;\n        state: string;\n        zip: string;\n      } | null;\n      phone?: {\n        __typename: \"Phone\";\n        primary: string;\n      } | null;\n      dob?: {\n        __typename: \"Dob\";\n        year: string;\n        month: string;\n        day: string;\n      } | null;\n      ssn?: {\n        __typename: \"Ssn\";\n        lastfour: string;\n        full?: string | null;\n      } | null;\n    } | null;\n    onboarding?: {\n      __typename: \"Onboarding\";\n      lastActive: number;\n      lastComplete: number;\n      started?: boolean | null;\n    } | null;\n  };\n  agencies: {\n    __typename: \"Agencies\";\n    transunion?: {\n      __typename: \"Transunion\";\n      authenticated?: boolean | null;\n      indicativeEnrichmentSuccess?: boolean | null;\n      getAuthenticationQuestionsSuccess?: boolean | null;\n      serviceBundleFulfillmentKey?: string | null;\n      currentRawQuestions?: string | null;\n      currentRawAuthDetails?: string | null;\n      enrollmentKey?: string | null;\n      enrollReport?: {\n        __typename: \"TUEnrollResponse\";\n        bureau?: string | null;\n        errorResponse?: string | null;\n        serviceProduct?: string | null;\n        serviceProductFullfillmentKey?: string | null;\n        serviceProductObject?: string | null;\n        serviceProductTypeId?: string | null;\n        serviceProductValue?: string | null;\n        status?: string | null;\n      } | null;\n      enrollMergeReport?: {\n        __typename: \"TUEnrollResponse\";\n        bureau?: string | null;\n        errorResponse?: string | null;\n        serviceProduct?: string | null;\n        serviceProductFullfillmentKey?: string | null;\n        serviceProductObject?: string | null;\n        serviceProductTypeId?: string | null;\n        serviceProductValue?: string | null;\n        status?: string | null;\n      } | null;\n      enrollVantageScore?: {\n        __typename: \"TUEnrollResponse\";\n        bureau?: string | null;\n        errorResponse?: string | null;\n        serviceProduct?: string | null;\n        serviceProductFullfillmentKey?: string | null;\n        serviceProductObject?: string | null;\n        serviceProductTypeId?: string | null;\n        serviceProductValue?: string | null;\n        status?: string | null;\n      } | null;\n      hidePositiveCreditCardAccounts?: boolean | null;\n      hidePositiveCollectionAccounts?: boolean | null;\n      hidePositiveInstallmentAccounts?: boolean | null;\n      hidePositiveMortgageAccounts?: boolean | null;\n    } | null;\n    equifax?: {\n      __typename: \"Equifax\";\n      authenticated?: boolean | null;\n    } | null;\n    experian?: {\n      __typename: \"Experian\";\n      authenticated?: boolean | null;\n    } | null;\n  };\n  preferences: {\n    __typename: \"Preferences\";\n    showAllAccounts?: {\n      __typename: \"ShowAccountsPreference\";\n      creditCards?: boolean | null;\n      collectionsAccounts?: boolean | null;\n      installmentLoans?: boolean | null;\n      mortgages?: boolean | null;\n    } | null;\n  };\n  createdAt: string;\n  updatedAt: string;\n  owner?: string | null;\n};\n\nexport type DeleteAppDataMutation = {\n  __typename: \"AppData\";\n  id: string;\n  user: {\n    __typename: \"User\";\n    id: string;\n    userAttributes?: {\n      __typename: \"UserAttributes\";\n      name?: {\n        __typename: \"Name\";\n        first: string;\n        middle?: string | null;\n        last: string;\n      } | null;\n      address?: {\n        __typename: \"Address\";\n        addressOne: string;\n        addressTwo?: string | null;\n        city: string;\n        state: string;\n        zip: string;\n      } | null;\n      phone?: {\n        __typename: \"Phone\";\n        primary: string;\n      } | null;\n      dob?: {\n        __typename: \"Dob\";\n        year: string;\n        month: string;\n        day: string;\n      } | null;\n      ssn?: {\n        __typename: \"Ssn\";\n        lastfour: string;\n        full?: string | null;\n      } | null;\n    } | null;\n    onboarding?: {\n      __typename: \"Onboarding\";\n      lastActive: number;\n      lastComplete: number;\n      started?: boolean | null;\n    } | null;\n  };\n  agencies: {\n    __typename: \"Agencies\";\n    transunion?: {\n      __typename: \"Transunion\";\n      authenticated?: boolean | null;\n      indicativeEnrichmentSuccess?: boolean | null;\n      getAuthenticationQuestionsSuccess?: boolean | null;\n      serviceBundleFulfillmentKey?: string | null;\n      currentRawQuestions?: string | null;\n      currentRawAuthDetails?: string | null;\n      enrollmentKey?: string | null;\n      enrollReport?: {\n        __typename: \"TUEnrollResponse\";\n        bureau?: string | null;\n        errorResponse?: string | null;\n        serviceProduct?: string | null;\n        serviceProductFullfillmentKey?: string | null;\n        serviceProductObject?: string | null;\n        serviceProductTypeId?: string | null;\n        serviceProductValue?: string | null;\n        status?: string | null;\n      } | null;\n      enrollMergeReport?: {\n        __typename: \"TUEnrollResponse\";\n        bureau?: string | null;\n        errorResponse?: string | null;\n        serviceProduct?: string | null;\n        serviceProductFullfillmentKey?: string | null;\n        serviceProductObject?: string | null;\n        serviceProductTypeId?: string | null;\n        serviceProductValue?: string | null;\n        status?: string | null;\n      } | null;\n      enrollVantageScore?: {\n        __typename: \"TUEnrollResponse\";\n        bureau?: string | null;\n        errorResponse?: string | null;\n        serviceProduct?: string | null;\n        serviceProductFullfillmentKey?: string | null;\n        serviceProductObject?: string | null;\n        serviceProductTypeId?: string | null;\n        serviceProductValue?: string | null;\n        status?: string | null;\n      } | null;\n      hidePositiveCreditCardAccounts?: boolean | null;\n      hidePositiveCollectionAccounts?: boolean | null;\n      hidePositiveInstallmentAccounts?: boolean | null;\n      hidePositiveMortgageAccounts?: boolean | null;\n    } | null;\n    equifax?: {\n      __typename: \"Equifax\";\n      authenticated?: boolean | null;\n    } | null;\n    experian?: {\n      __typename: \"Experian\";\n      authenticated?: boolean | null;\n    } | null;\n  };\n  preferences: {\n    __typename: \"Preferences\";\n    showAllAccounts?: {\n      __typename: \"ShowAccountsPreference\";\n      creditCards?: boolean | null;\n      collectionsAccounts?: boolean | null;\n      installmentLoans?: boolean | null;\n      mortgages?: boolean | null;\n    } | null;\n  };\n  createdAt: string;\n  updatedAt: string;\n  owner?: string | null;\n};\n\nexport type GetAppDataQuery = {\n  __typename: \"AppData\";\n  id: string;\n  user: {\n    __typename: \"User\";\n    id: string;\n    userAttributes?: {\n      __typename: \"UserAttributes\";\n      name?: {\n        __typename: \"Name\";\n        first: string;\n        middle?: string | null;\n        last: string;\n      } | null;\n      address?: {\n        __typename: \"Address\";\n        addressOne: string;\n        addressTwo?: string | null;\n        city: string;\n        state: string;\n        zip: string;\n      } | null;\n      phone?: {\n        __typename: \"Phone\";\n        primary: string;\n      } | null;\n      dob?: {\n        __typename: \"Dob\";\n        year: string;\n        month: string;\n        day: string;\n      } | null;\n      ssn?: {\n        __typename: \"Ssn\";\n        lastfour: string;\n        full?: string | null;\n      } | null;\n    } | null;\n    onboarding?: {\n      __typename: \"Onboarding\";\n      lastActive: number;\n      lastComplete: number;\n      started?: boolean | null;\n    } | null;\n  };\n  agencies: {\n    __typename: \"Agencies\";\n    transunion?: {\n      __typename: \"Transunion\";\n      authenticated?: boolean | null;\n      indicativeEnrichmentSuccess?: boolean | null;\n      getAuthenticationQuestionsSuccess?: boolean | null;\n      serviceBundleFulfillmentKey?: string | null;\n      currentRawQuestions?: string | null;\n      currentRawAuthDetails?: string | null;\n      enrollmentKey?: string | null;\n      enrollReport?: {\n        __typename: \"TUEnrollResponse\";\n        bureau?: string | null;\n        errorResponse?: string | null;\n        serviceProduct?: string | null;\n        serviceProductFullfillmentKey?: string | null;\n        serviceProductObject?: string | null;\n        serviceProductTypeId?: string | null;\n        serviceProductValue?: string | null;\n        status?: string | null;\n      } | null;\n      enrollMergeReport?: {\n        __typename: \"TUEnrollResponse\";\n        bureau?: string | null;\n        errorResponse?: string | null;\n        serviceProduct?: string | null;\n        serviceProductFullfillmentKey?: string | null;\n        serviceProductObject?: string | null;\n        serviceProductTypeId?: string | null;\n        serviceProductValue?: string | null;\n        status?: string | null;\n      } | null;\n      enrollVantageScore?: {\n        __typename: \"TUEnrollResponse\";\n        bureau?: string | null;\n        errorResponse?: string | null;\n        serviceProduct?: string | null;\n        serviceProductFullfillmentKey?: string | null;\n        serviceProductObject?: string | null;\n        serviceProductTypeId?: string | null;\n        serviceProductValue?: string | null;\n        status?: string | null;\n      } | null;\n      hidePositiveCreditCardAccounts?: boolean | null;\n      hidePositiveCollectionAccounts?: boolean | null;\n      hidePositiveInstallmentAccounts?: boolean | null;\n      hidePositiveMortgageAccounts?: boolean | null;\n    } | null;\n    equifax?: {\n      __typename: \"Equifax\";\n      authenticated?: boolean | null;\n    } | null;\n    experian?: {\n      __typename: \"Experian\";\n      authenticated?: boolean | null;\n    } | null;\n  };\n  preferences: {\n    __typename: \"Preferences\";\n    showAllAccounts?: {\n      __typename: \"ShowAccountsPreference\";\n      creditCards?: boolean | null;\n      collectionsAccounts?: boolean | null;\n      installmentLoans?: boolean | null;\n      mortgages?: boolean | null;\n    } | null;\n  };\n  createdAt: string;\n  updatedAt: string;\n  owner?: string | null;\n};\n\nexport type ListAppDatasQuery = {\n  __typename: \"ModelAppDataConnection\";\n  items?: Array<{\n    __typename: \"AppData\";\n    id: string;\n    user: {\n      __typename: \"User\";\n      id: string;\n      userAttributes?: {\n        __typename: \"UserAttributes\";\n        name?: {\n          __typename: \"Name\";\n          first: string;\n          middle?: string | null;\n          last: string;\n        } | null;\n        address?: {\n          __typename: \"Address\";\n          addressOne: string;\n          addressTwo?: string | null;\n          city: string;\n          state: string;\n          zip: string;\n        } | null;\n        phone?: {\n          __typename: \"Phone\";\n          primary: string;\n        } | null;\n        dob?: {\n          __typename: \"Dob\";\n          year: string;\n          month: string;\n          day: string;\n        } | null;\n        ssn?: {\n          __typename: \"Ssn\";\n          lastfour: string;\n          full?: string | null;\n        } | null;\n      } | null;\n      onboarding?: {\n        __typename: \"Onboarding\";\n        lastActive: number;\n        lastComplete: number;\n        started?: boolean | null;\n      } | null;\n    };\n    agencies: {\n      __typename: \"Agencies\";\n      transunion?: {\n        __typename: \"Transunion\";\n        authenticated?: boolean | null;\n        indicativeEnrichmentSuccess?: boolean | null;\n        getAuthenticationQuestionsSuccess?: boolean | null;\n        serviceBundleFulfillmentKey?: string | null;\n        currentRawQuestions?: string | null;\n        currentRawAuthDetails?: string | null;\n        enrollmentKey?: string | null;\n        enrollReport?: {\n          __typename: \"TUEnrollResponse\";\n          bureau?: string | null;\n          errorResponse?: string | null;\n          serviceProduct?: string | null;\n          serviceProductFullfillmentKey?: string | null;\n          serviceProductObject?: string | null;\n          serviceProductTypeId?: string | null;\n          serviceProductValue?: string | null;\n          status?: string | null;\n        } | null;\n        enrollMergeReport?: {\n          __typename: \"TUEnrollResponse\";\n          bureau?: string | null;\n          errorResponse?: string | null;\n          serviceProduct?: string | null;\n          serviceProductFullfillmentKey?: string | null;\n          serviceProductObject?: string | null;\n          serviceProductTypeId?: string | null;\n          serviceProductValue?: string | null;\n          status?: string | null;\n        } | null;\n        enrollVantageScore?: {\n          __typename: \"TUEnrollResponse\";\n          bureau?: string | null;\n          errorResponse?: string | null;\n          serviceProduct?: string | null;\n          serviceProductFullfillmentKey?: string | null;\n          serviceProductObject?: string | null;\n          serviceProductTypeId?: string | null;\n          serviceProductValue?: string | null;\n          status?: string | null;\n        } | null;\n        hidePositiveCreditCardAccounts?: boolean | null;\n        hidePositiveCollectionAccounts?: boolean | null;\n        hidePositiveInstallmentAccounts?: boolean | null;\n        hidePositiveMortgageAccounts?: boolean | null;\n      } | null;\n      equifax?: {\n        __typename: \"Equifax\";\n        authenticated?: boolean | null;\n      } | null;\n      experian?: {\n        __typename: \"Experian\";\n        authenticated?: boolean | null;\n      } | null;\n    };\n    preferences: {\n      __typename: \"Preferences\";\n      showAllAccounts?: {\n        __typename: \"ShowAccountsPreference\";\n        creditCards?: boolean | null;\n        collectionsAccounts?: boolean | null;\n        installmentLoans?: boolean | null;\n        mortgages?: boolean | null;\n      } | null;\n    };\n    createdAt: string;\n    updatedAt: string;\n    owner?: string | null;\n  } | null> | null;\n  nextToken?: string | null;\n};\n\nexport type OnCreateAppDataSubscription = {\n  __typename: \"AppData\";\n  id: string;\n  user: {\n    __typename: \"User\";\n    id: string;\n    userAttributes?: {\n      __typename: \"UserAttributes\";\n      name?: {\n        __typename: \"Name\";\n        first: string;\n        middle?: string | null;\n        last: string;\n      } | null;\n      address?: {\n        __typename: \"Address\";\n        addressOne: string;\n        addressTwo?: string | null;\n        city: string;\n        state: string;\n        zip: string;\n      } | null;\n      phone?: {\n        __typename: \"Phone\";\n        primary: string;\n      } | null;\n      dob?: {\n        __typename: \"Dob\";\n        year: string;\n        month: string;\n        day: string;\n      } | null;\n      ssn?: {\n        __typename: \"Ssn\";\n        lastfour: string;\n        full?: string | null;\n      } | null;\n    } | null;\n    onboarding?: {\n      __typename: \"Onboarding\";\n      lastActive: number;\n      lastComplete: number;\n      started?: boolean | null;\n    } | null;\n  };\n  agencies: {\n    __typename: \"Agencies\";\n    transunion?: {\n      __typename: \"Transunion\";\n      authenticated?: boolean | null;\n      indicativeEnrichmentSuccess?: boolean | null;\n      getAuthenticationQuestionsSuccess?: boolean | null;\n      serviceBundleFulfillmentKey?: string | null;\n      currentRawQuestions?: string | null;\n      currentRawAuthDetails?: string | null;\n      enrollmentKey?: string | null;\n      enrollReport?: {\n        __typename: \"TUEnrollResponse\";\n        bureau?: string | null;\n        errorResponse?: string | null;\n        serviceProduct?: string | null;\n        serviceProductFullfillmentKey?: string | null;\n        serviceProductObject?: string | null;\n        serviceProductTypeId?: string | null;\n        serviceProductValue?: string | null;\n        status?: string | null;\n      } | null;\n      enrollMergeReport?: {\n        __typename: \"TUEnrollResponse\";\n        bureau?: string | null;\n        errorResponse?: string | null;\n        serviceProduct?: string | null;\n        serviceProductFullfillmentKey?: string | null;\n        serviceProductObject?: string | null;\n        serviceProductTypeId?: string | null;\n        serviceProductValue?: string | null;\n        status?: string | null;\n      } | null;\n      enrollVantageScore?: {\n        __typename: \"TUEnrollResponse\";\n        bureau?: string | null;\n        errorResponse?: string | null;\n        serviceProduct?: string | null;\n        serviceProductFullfillmentKey?: string | null;\n        serviceProductObject?: string | null;\n        serviceProductTypeId?: string | null;\n        serviceProductValue?: string | null;\n        status?: string | null;\n      } | null;\n      hidePositiveCreditCardAccounts?: boolean | null;\n      hidePositiveCollectionAccounts?: boolean | null;\n      hidePositiveInstallmentAccounts?: boolean | null;\n      hidePositiveMortgageAccounts?: boolean | null;\n    } | null;\n    equifax?: {\n      __typename: \"Equifax\";\n      authenticated?: boolean | null;\n    } | null;\n    experian?: {\n      __typename: \"Experian\";\n      authenticated?: boolean | null;\n    } | null;\n  };\n  preferences: {\n    __typename: \"Preferences\";\n    showAllAccounts?: {\n      __typename: \"ShowAccountsPreference\";\n      creditCards?: boolean | null;\n      collectionsAccounts?: boolean | null;\n      installmentLoans?: boolean | null;\n      mortgages?: boolean | null;\n    } | null;\n  };\n  createdAt: string;\n  updatedAt: string;\n  owner?: string | null;\n};\n\nexport type OnUpdateAppDataSubscription = {\n  __typename: \"AppData\";\n  id: string;\n  user: {\n    __typename: \"User\";\n    id: string;\n    userAttributes?: {\n      __typename: \"UserAttributes\";\n      name?: {\n        __typename: \"Name\";\n        first: string;\n        middle?: string | null;\n        last: string;\n      } | null;\n      address?: {\n        __typename: \"Address\";\n        addressOne: string;\n        addressTwo?: string | null;\n        city: string;\n        state: string;\n        zip: string;\n      } | null;\n      phone?: {\n        __typename: \"Phone\";\n        primary: string;\n      } | null;\n      dob?: {\n        __typename: \"Dob\";\n        year: string;\n        month: string;\n        day: string;\n      } | null;\n      ssn?: {\n        __typename: \"Ssn\";\n        lastfour: string;\n        full?: string | null;\n      } | null;\n    } | null;\n    onboarding?: {\n      __typename: \"Onboarding\";\n      lastActive: number;\n      lastComplete: number;\n      started?: boolean | null;\n    } | null;\n  };\n  agencies: {\n    __typename: \"Agencies\";\n    transunion?: {\n      __typename: \"Transunion\";\n      authenticated?: boolean | null;\n      indicativeEnrichmentSuccess?: boolean | null;\n      getAuthenticationQuestionsSuccess?: boolean | null;\n      serviceBundleFulfillmentKey?: string | null;\n      currentRawQuestions?: string | null;\n      currentRawAuthDetails?: string | null;\n      enrollmentKey?: string | null;\n      enrollReport?: {\n        __typename: \"TUEnrollResponse\";\n        bureau?: string | null;\n        errorResponse?: string | null;\n        serviceProduct?: string | null;\n        serviceProductFullfillmentKey?: string | null;\n        serviceProductObject?: string | null;\n        serviceProductTypeId?: string | null;\n        serviceProductValue?: string | null;\n        status?: string | null;\n      } | null;\n      enrollMergeReport?: {\n        __typename: \"TUEnrollResponse\";\n        bureau?: string | null;\n        errorResponse?: string | null;\n        serviceProduct?: string | null;\n        serviceProductFullfillmentKey?: string | null;\n        serviceProductObject?: string | null;\n        serviceProductTypeId?: string | null;\n        serviceProductValue?: string | null;\n        status?: string | null;\n      } | null;\n      enrollVantageScore?: {\n        __typename: \"TUEnrollResponse\";\n        bureau?: string | null;\n        errorResponse?: string | null;\n        serviceProduct?: string | null;\n        serviceProductFullfillmentKey?: string | null;\n        serviceProductObject?: string | null;\n        serviceProductTypeId?: string | null;\n        serviceProductValue?: string | null;\n        status?: string | null;\n      } | null;\n      hidePositiveCreditCardAccounts?: boolean | null;\n      hidePositiveCollectionAccounts?: boolean | null;\n      hidePositiveInstallmentAccounts?: boolean | null;\n      hidePositiveMortgageAccounts?: boolean | null;\n    } | null;\n    equifax?: {\n      __typename: \"Equifax\";\n      authenticated?: boolean | null;\n    } | null;\n    experian?: {\n      __typename: \"Experian\";\n      authenticated?: boolean | null;\n    } | null;\n  };\n  preferences: {\n    __typename: \"Preferences\";\n    showAllAccounts?: {\n      __typename: \"ShowAccountsPreference\";\n      creditCards?: boolean | null;\n      collectionsAccounts?: boolean | null;\n      installmentLoans?: boolean | null;\n      mortgages?: boolean | null;\n    } | null;\n  };\n  createdAt: string;\n  updatedAt: string;\n  owner?: string | null;\n};\n\nexport type OnDeleteAppDataSubscription = {\n  __typename: \"AppData\";\n  id: string;\n  user: {\n    __typename: \"User\";\n    id: string;\n    userAttributes?: {\n      __typename: \"UserAttributes\";\n      name?: {\n        __typename: \"Name\";\n        first: string;\n        middle?: string | null;\n        last: string;\n      } | null;\n      address?: {\n        __typename: \"Address\";\n        addressOne: string;\n        addressTwo?: string | null;\n        city: string;\n        state: string;\n        zip: string;\n      } | null;\n      phone?: {\n        __typename: \"Phone\";\n        primary: string;\n      } | null;\n      dob?: {\n        __typename: \"Dob\";\n        year: string;\n        month: string;\n        day: string;\n      } | null;\n      ssn?: {\n        __typename: \"Ssn\";\n        lastfour: string;\n        full?: string | null;\n      } | null;\n    } | null;\n    onboarding?: {\n      __typename: \"Onboarding\";\n      lastActive: number;\n      lastComplete: number;\n      started?: boolean | null;\n    } | null;\n  };\n  agencies: {\n    __typename: \"Agencies\";\n    transunion?: {\n      __typename: \"Transunion\";\n      authenticated?: boolean | null;\n      indicativeEnrichmentSuccess?: boolean | null;\n      getAuthenticationQuestionsSuccess?: boolean | null;\n      serviceBundleFulfillmentKey?: string | null;\n      currentRawQuestions?: string | null;\n      currentRawAuthDetails?: string | null;\n      enrollmentKey?: string | null;\n      enrollReport?: {\n        __typename: \"TUEnrollResponse\";\n        bureau?: string | null;\n        errorResponse?: string | null;\n        serviceProduct?: string | null;\n        serviceProductFullfillmentKey?: string | null;\n        serviceProductObject?: string | null;\n        serviceProductTypeId?: string | null;\n        serviceProductValue?: string | null;\n        status?: string | null;\n      } | null;\n      enrollMergeReport?: {\n        __typename: \"TUEnrollResponse\";\n        bureau?: string | null;\n        errorResponse?: string | null;\n        serviceProduct?: string | null;\n        serviceProductFullfillmentKey?: string | null;\n        serviceProductObject?: string | null;\n        serviceProductTypeId?: string | null;\n        serviceProductValue?: string | null;\n        status?: string | null;\n      } | null;\n      enrollVantageScore?: {\n        __typename: \"TUEnrollResponse\";\n        bureau?: string | null;\n        errorResponse?: string | null;\n        serviceProduct?: string | null;\n        serviceProductFullfillmentKey?: string | null;\n        serviceProductObject?: string | null;\n        serviceProductTypeId?: string | null;\n        serviceProductValue?: string | null;\n        status?: string | null;\n      } | null;\n      hidePositiveCreditCardAccounts?: boolean | null;\n      hidePositiveCollectionAccounts?: boolean | null;\n      hidePositiveInstallmentAccounts?: boolean | null;\n      hidePositiveMortgageAccounts?: boolean | null;\n    } | null;\n    equifax?: {\n      __typename: \"Equifax\";\n      authenticated?: boolean | null;\n    } | null;\n    experian?: {\n      __typename: \"Experian\";\n      authenticated?: boolean | null;\n    } | null;\n  };\n  preferences: {\n    __typename: \"Preferences\";\n    showAllAccounts?: {\n      __typename: \"ShowAccountsPreference\";\n      creditCards?: boolean | null;\n      collectionsAccounts?: boolean | null;\n      installmentLoans?: boolean | null;\n      mortgages?: boolean | null;\n    } | null;\n  };\n  createdAt: string;\n  updatedAt: string;\n  owner?: string | null;\n};\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class APIService {\n  async CreateAppData(\n    input: CreateAppDataInput,\n    condition?: ModelAppDataConditionInput\n  ): Promise<CreateAppDataMutation> {\n    const statement = `mutation CreateAppData($input: CreateAppDataInput!, $condition: ModelAppDataConditionInput) {\n        createAppData(input: $input, condition: $condition) {\n          __typename\n          id\n          user {\n            __typename\n            id\n            userAttributes {\n              __typename\n              name {\n                __typename\n                first\n                middle\n                last\n              }\n              address {\n                __typename\n                addressOne\n                addressTwo\n                city\n                state\n                zip\n              }\n              phone {\n                __typename\n                primary\n              }\n              dob {\n                __typename\n                year\n                month\n                day\n              }\n              ssn {\n                __typename\n                lastfour\n                full\n              }\n            }\n            onboarding {\n              __typename\n              lastActive\n              lastComplete\n              started\n            }\n          }\n          agencies {\n            __typename\n            transunion {\n              __typename\n              authenticated\n              indicativeEnrichmentSuccess\n              getAuthenticationQuestionsSuccess\n              serviceBundleFulfillmentKey\n              currentRawQuestions\n              currentRawAuthDetails\n              enrollmentKey\n              enrollReport {\n                __typename\n                bureau\n                errorResponse\n                serviceProduct\n                serviceProductFullfillmentKey\n                serviceProductObject\n                serviceProductTypeId\n                serviceProductValue\n                status\n              }\n              enrollMergeReport {\n                __typename\n                bureau\n                errorResponse\n                serviceProduct\n                serviceProductFullfillmentKey\n                serviceProductObject\n                serviceProductTypeId\n                serviceProductValue\n                status\n              }\n              enrollVantageScore {\n                __typename\n                bureau\n                errorResponse\n                serviceProduct\n                serviceProductFullfillmentKey\n                serviceProductObject\n                serviceProductTypeId\n                serviceProductValue\n                status\n              }\n              hidePositiveCreditCardAccounts\n              hidePositiveCollectionAccounts\n              hidePositiveInstallmentAccounts\n              hidePositiveMortgageAccounts\n            }\n            equifax {\n              __typename\n              authenticated\n            }\n            experian {\n              __typename\n              authenticated\n            }\n          }\n          preferences {\n            __typename\n            showAllAccounts {\n              __typename\n              creditCards\n              collectionsAccounts\n              installmentLoans\n              mortgages\n            }\n          }\n          createdAt\n          updatedAt\n          owner\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      input\n    };\n    if (condition) {\n      gqlAPIServiceArguments.condition = condition;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return <CreateAppDataMutation>response.data.createAppData;\n  }\n  async UpdateAppData(\n    input: UpdateAppDataInput,\n    condition?: ModelAppDataConditionInput\n  ): Promise<UpdateAppDataMutation> {\n    const statement = `mutation UpdateAppData($input: UpdateAppDataInput!, $condition: ModelAppDataConditionInput) {\n        updateAppData(input: $input, condition: $condition) {\n          __typename\n          id\n          user {\n            __typename\n            id\n            userAttributes {\n              __typename\n              name {\n                __typename\n                first\n                middle\n                last\n              }\n              address {\n                __typename\n                addressOne\n                addressTwo\n                city\n                state\n                zip\n              }\n              phone {\n                __typename\n                primary\n              }\n              dob {\n                __typename\n                year\n                month\n                day\n              }\n              ssn {\n                __typename\n                lastfour\n                full\n              }\n            }\n            onboarding {\n              __typename\n              lastActive\n              lastComplete\n              started\n            }\n          }\n          agencies {\n            __typename\n            transunion {\n              __typename\n              authenticated\n              indicativeEnrichmentSuccess\n              getAuthenticationQuestionsSuccess\n              serviceBundleFulfillmentKey\n              currentRawQuestions\n              currentRawAuthDetails\n              enrollmentKey\n              enrollReport {\n                __typename\n                bureau\n                errorResponse\n                serviceProduct\n                serviceProductFullfillmentKey\n                serviceProductObject\n                serviceProductTypeId\n                serviceProductValue\n                status\n              }\n              enrollMergeReport {\n                __typename\n                bureau\n                errorResponse\n                serviceProduct\n                serviceProductFullfillmentKey\n                serviceProductObject\n                serviceProductTypeId\n                serviceProductValue\n                status\n              }\n              enrollVantageScore {\n                __typename\n                bureau\n                errorResponse\n                serviceProduct\n                serviceProductFullfillmentKey\n                serviceProductObject\n                serviceProductTypeId\n                serviceProductValue\n                status\n              }\n              hidePositiveCreditCardAccounts\n              hidePositiveCollectionAccounts\n              hidePositiveInstallmentAccounts\n              hidePositiveMortgageAccounts\n            }\n            equifax {\n              __typename\n              authenticated\n            }\n            experian {\n              __typename\n              authenticated\n            }\n          }\n          preferences {\n            __typename\n            showAllAccounts {\n              __typename\n              creditCards\n              collectionsAccounts\n              installmentLoans\n              mortgages\n            }\n          }\n          createdAt\n          updatedAt\n          owner\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      input\n    };\n    if (condition) {\n      gqlAPIServiceArguments.condition = condition;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return <UpdateAppDataMutation>response.data.updateAppData;\n  }\n  async DeleteAppData(\n    input: DeleteAppDataInput,\n    condition?: ModelAppDataConditionInput\n  ): Promise<DeleteAppDataMutation> {\n    const statement = `mutation DeleteAppData($input: DeleteAppDataInput!, $condition: ModelAppDataConditionInput) {\n        deleteAppData(input: $input, condition: $condition) {\n          __typename\n          id\n          user {\n            __typename\n            id\n            userAttributes {\n              __typename\n              name {\n                __typename\n                first\n                middle\n                last\n              }\n              address {\n                __typename\n                addressOne\n                addressTwo\n                city\n                state\n                zip\n              }\n              phone {\n                __typename\n                primary\n              }\n              dob {\n                __typename\n                year\n                month\n                day\n              }\n              ssn {\n                __typename\n                lastfour\n                full\n              }\n            }\n            onboarding {\n              __typename\n              lastActive\n              lastComplete\n              started\n            }\n          }\n          agencies {\n            __typename\n            transunion {\n              __typename\n              authenticated\n              indicativeEnrichmentSuccess\n              getAuthenticationQuestionsSuccess\n              serviceBundleFulfillmentKey\n              currentRawQuestions\n              currentRawAuthDetails\n              enrollmentKey\n              enrollReport {\n                __typename\n                bureau\n                errorResponse\n                serviceProduct\n                serviceProductFullfillmentKey\n                serviceProductObject\n                serviceProductTypeId\n                serviceProductValue\n                status\n              }\n              enrollMergeReport {\n                __typename\n                bureau\n                errorResponse\n                serviceProduct\n                serviceProductFullfillmentKey\n                serviceProductObject\n                serviceProductTypeId\n                serviceProductValue\n                status\n              }\n              enrollVantageScore {\n                __typename\n                bureau\n                errorResponse\n                serviceProduct\n                serviceProductFullfillmentKey\n                serviceProductObject\n                serviceProductTypeId\n                serviceProductValue\n                status\n              }\n              hidePositiveCreditCardAccounts\n              hidePositiveCollectionAccounts\n              hidePositiveInstallmentAccounts\n              hidePositiveMortgageAccounts\n            }\n            equifax {\n              __typename\n              authenticated\n            }\n            experian {\n              __typename\n              authenticated\n            }\n          }\n          preferences {\n            __typename\n            showAllAccounts {\n              __typename\n              creditCards\n              collectionsAccounts\n              installmentLoans\n              mortgages\n            }\n          }\n          createdAt\n          updatedAt\n          owner\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      input\n    };\n    if (condition) {\n      gqlAPIServiceArguments.condition = condition;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return <DeleteAppDataMutation>response.data.deleteAppData;\n  }\n  async Transunion(action: string, message: string): Promise<string | null> {\n    const statement = `query Transunion($action: String!, $message: String!) {\n        transunion(action: $action, message: $message)\n      }`;\n    const gqlAPIServiceArguments: any = {\n      action,\n      message\n    };\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return <string | null>response.data.transunion;\n  }\n  async GetAppData(id: string): Promise<GetAppDataQuery> {\n    const statement = `query GetAppData($id: ID!) {\n        getAppData(id: $id) {\n          __typename\n          id\n          user {\n            __typename\n            id\n            userAttributes {\n              __typename\n              name {\n                __typename\n                first\n                middle\n                last\n              }\n              address {\n                __typename\n                addressOne\n                addressTwo\n                city\n                state\n                zip\n              }\n              phone {\n                __typename\n                primary\n              }\n              dob {\n                __typename\n                year\n                month\n                day\n              }\n              ssn {\n                __typename\n                lastfour\n                full\n              }\n            }\n            onboarding {\n              __typename\n              lastActive\n              lastComplete\n              started\n            }\n          }\n          agencies {\n            __typename\n            transunion {\n              __typename\n              authenticated\n              indicativeEnrichmentSuccess\n              getAuthenticationQuestionsSuccess\n              serviceBundleFulfillmentKey\n              currentRawQuestions\n              currentRawAuthDetails\n              enrollmentKey\n              enrollReport {\n                __typename\n                bureau\n                errorResponse\n                serviceProduct\n                serviceProductFullfillmentKey\n                serviceProductObject\n                serviceProductTypeId\n                serviceProductValue\n                status\n              }\n              enrollMergeReport {\n                __typename\n                bureau\n                errorResponse\n                serviceProduct\n                serviceProductFullfillmentKey\n                serviceProductObject\n                serviceProductTypeId\n                serviceProductValue\n                status\n              }\n              enrollVantageScore {\n                __typename\n                bureau\n                errorResponse\n                serviceProduct\n                serviceProductFullfillmentKey\n                serviceProductObject\n                serviceProductTypeId\n                serviceProductValue\n                status\n              }\n              hidePositiveCreditCardAccounts\n              hidePositiveCollectionAccounts\n              hidePositiveInstallmentAccounts\n              hidePositiveMortgageAccounts\n            }\n            equifax {\n              __typename\n              authenticated\n            }\n            experian {\n              __typename\n              authenticated\n            }\n          }\n          preferences {\n            __typename\n            showAllAccounts {\n              __typename\n              creditCards\n              collectionsAccounts\n              installmentLoans\n              mortgages\n            }\n          }\n          createdAt\n          updatedAt\n          owner\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      id\n    };\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return <GetAppDataQuery>response.data.getAppData;\n  }\n  async ListAppDatas(\n    filter?: ModelAppDataFilterInput,\n    limit?: number,\n    nextToken?: string\n  ): Promise<ListAppDatasQuery> {\n    const statement = `query ListAppDatas($filter: ModelAppDataFilterInput, $limit: Int, $nextToken: String) {\n        listAppDatas(filter: $filter, limit: $limit, nextToken: $nextToken) {\n          __typename\n          items {\n            __typename\n            id\n            user {\n              __typename\n              id\n              userAttributes {\n                __typename\n                name {\n                  __typename\n                  first\n                  middle\n                  last\n                }\n                address {\n                  __typename\n                  addressOne\n                  addressTwo\n                  city\n                  state\n                  zip\n                }\n                phone {\n                  __typename\n                  primary\n                }\n                dob {\n                  __typename\n                  year\n                  month\n                  day\n                }\n                ssn {\n                  __typename\n                  lastfour\n                  full\n                }\n              }\n              onboarding {\n                __typename\n                lastActive\n                lastComplete\n                started\n              }\n            }\n            agencies {\n              __typename\n              transunion {\n                __typename\n                authenticated\n                indicativeEnrichmentSuccess\n                getAuthenticationQuestionsSuccess\n                serviceBundleFulfillmentKey\n                currentRawQuestions\n                currentRawAuthDetails\n                enrollmentKey\n                enrollReport {\n                  __typename\n                  bureau\n                  errorResponse\n                  serviceProduct\n                  serviceProductFullfillmentKey\n                  serviceProductObject\n                  serviceProductTypeId\n                  serviceProductValue\n                  status\n                }\n                enrollMergeReport {\n                  __typename\n                  bureau\n                  errorResponse\n                  serviceProduct\n                  serviceProductFullfillmentKey\n                  serviceProductObject\n                  serviceProductTypeId\n                  serviceProductValue\n                  status\n                }\n                enrollVantageScore {\n                  __typename\n                  bureau\n                  errorResponse\n                  serviceProduct\n                  serviceProductFullfillmentKey\n                  serviceProductObject\n                  serviceProductTypeId\n                  serviceProductValue\n                  status\n                }\n                hidePositiveCreditCardAccounts\n                hidePositiveCollectionAccounts\n                hidePositiveInstallmentAccounts\n                hidePositiveMortgageAccounts\n              }\n              equifax {\n                __typename\n                authenticated\n              }\n              experian {\n                __typename\n                authenticated\n              }\n            }\n            preferences {\n              __typename\n              showAllAccounts {\n                __typename\n                creditCards\n                collectionsAccounts\n                installmentLoans\n                mortgages\n              }\n            }\n            createdAt\n            updatedAt\n            owner\n          }\n          nextToken\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {};\n    if (filter) {\n      gqlAPIServiceArguments.filter = filter;\n    }\n    if (limit) {\n      gqlAPIServiceArguments.limit = limit;\n    }\n    if (nextToken) {\n      gqlAPIServiceArguments.nextToken = nextToken;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return <ListAppDatasQuery>response.data.listAppDatas;\n  }\n  OnCreateAppDataListener(\n    owner?: string\n  ): Observable<SubscriptionResponse<OnCreateAppDataSubscription>> {\n    const statement = `subscription OnCreateAppData($owner: String) {\n        onCreateAppData(owner: $owner) {\n          __typename\n          id\n          user {\n            __typename\n            id\n            userAttributes {\n              __typename\n              name {\n                __typename\n                first\n                middle\n                last\n              }\n              address {\n                __typename\n                addressOne\n                addressTwo\n                city\n                state\n                zip\n              }\n              phone {\n                __typename\n                primary\n              }\n              dob {\n                __typename\n                year\n                month\n                day\n              }\n              ssn {\n                __typename\n                lastfour\n                full\n              }\n            }\n            onboarding {\n              __typename\n              lastActive\n              lastComplete\n              started\n            }\n          }\n          agencies {\n            __typename\n            transunion {\n              __typename\n              authenticated\n              indicativeEnrichmentSuccess\n              getAuthenticationQuestionsSuccess\n              serviceBundleFulfillmentKey\n              currentRawQuestions\n              currentRawAuthDetails\n              enrollmentKey\n              enrollReport {\n                __typename\n                bureau\n                errorResponse\n                serviceProduct\n                serviceProductFullfillmentKey\n                serviceProductObject\n                serviceProductTypeId\n                serviceProductValue\n                status\n              }\n              enrollMergeReport {\n                __typename\n                bureau\n                errorResponse\n                serviceProduct\n                serviceProductFullfillmentKey\n                serviceProductObject\n                serviceProductTypeId\n                serviceProductValue\n                status\n              }\n              enrollVantageScore {\n                __typename\n                bureau\n                errorResponse\n                serviceProduct\n                serviceProductFullfillmentKey\n                serviceProductObject\n                serviceProductTypeId\n                serviceProductValue\n                status\n              }\n              hidePositiveCreditCardAccounts\n              hidePositiveCollectionAccounts\n              hidePositiveInstallmentAccounts\n              hidePositiveMortgageAccounts\n            }\n            equifax {\n              __typename\n              authenticated\n            }\n            experian {\n              __typename\n              authenticated\n            }\n          }\n          preferences {\n            __typename\n            showAllAccounts {\n              __typename\n              creditCards\n              collectionsAccounts\n              installmentLoans\n              mortgages\n            }\n          }\n          createdAt\n          updatedAt\n          owner\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {};\n    if (owner) {\n      gqlAPIServiceArguments.owner = owner;\n    }\n    return API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    ) as Observable<SubscriptionResponse<OnCreateAppDataSubscription>>;\n  }\n\n  OnUpdateAppDataListener(\n    owner?: string\n  ): Observable<SubscriptionResponse<OnUpdateAppDataSubscription>> {\n    const statement = `subscription OnUpdateAppData($owner: String) {\n        onUpdateAppData(owner: $owner) {\n          __typename\n          id\n          user {\n            __typename\n            id\n            userAttributes {\n              __typename\n              name {\n                __typename\n                first\n                middle\n                last\n              }\n              address {\n                __typename\n                addressOne\n                addressTwo\n                city\n                state\n                zip\n              }\n              phone {\n                __typename\n                primary\n              }\n              dob {\n                __typename\n                year\n                month\n                day\n              }\n              ssn {\n                __typename\n                lastfour\n                full\n              }\n            }\n            onboarding {\n              __typename\n              lastActive\n              lastComplete\n              started\n            }\n          }\n          agencies {\n            __typename\n            transunion {\n              __typename\n              authenticated\n              indicativeEnrichmentSuccess\n              getAuthenticationQuestionsSuccess\n              serviceBundleFulfillmentKey\n              currentRawQuestions\n              currentRawAuthDetails\n              enrollmentKey\n              enrollReport {\n                __typename\n                bureau\n                errorResponse\n                serviceProduct\n                serviceProductFullfillmentKey\n                serviceProductObject\n                serviceProductTypeId\n                serviceProductValue\n                status\n              }\n              enrollMergeReport {\n                __typename\n                bureau\n                errorResponse\n                serviceProduct\n                serviceProductFullfillmentKey\n                serviceProductObject\n                serviceProductTypeId\n                serviceProductValue\n                status\n              }\n              enrollVantageScore {\n                __typename\n                bureau\n                errorResponse\n                serviceProduct\n                serviceProductFullfillmentKey\n                serviceProductObject\n                serviceProductTypeId\n                serviceProductValue\n                status\n              }\n              hidePositiveCreditCardAccounts\n              hidePositiveCollectionAccounts\n              hidePositiveInstallmentAccounts\n              hidePositiveMortgageAccounts\n            }\n            equifax {\n              __typename\n              authenticated\n            }\n            experian {\n              __typename\n              authenticated\n            }\n          }\n          preferences {\n            __typename\n            showAllAccounts {\n              __typename\n              creditCards\n              collectionsAccounts\n              installmentLoans\n              mortgages\n            }\n          }\n          createdAt\n          updatedAt\n          owner\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {};\n    if (owner) {\n      gqlAPIServiceArguments.owner = owner;\n    }\n    return API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    ) as Observable<SubscriptionResponse<OnUpdateAppDataSubscription>>;\n  }\n\n  OnDeleteAppDataListener(\n    owner?: string\n  ): Observable<SubscriptionResponse<OnDeleteAppDataSubscription>> {\n    const statement = `subscription OnDeleteAppData($owner: String) {\n        onDeleteAppData(owner: $owner) {\n          __typename\n          id\n          user {\n            __typename\n            id\n            userAttributes {\n              __typename\n              name {\n                __typename\n                first\n                middle\n                last\n              }\n              address {\n                __typename\n                addressOne\n                addressTwo\n                city\n                state\n                zip\n              }\n              phone {\n                __typename\n                primary\n              }\n              dob {\n                __typename\n                year\n                month\n                day\n              }\n              ssn {\n                __typename\n                lastfour\n                full\n              }\n            }\n            onboarding {\n              __typename\n              lastActive\n              lastComplete\n              started\n            }\n          }\n          agencies {\n            __typename\n            transunion {\n              __typename\n              authenticated\n              indicativeEnrichmentSuccess\n              getAuthenticationQuestionsSuccess\n              serviceBundleFulfillmentKey\n              currentRawQuestions\n              currentRawAuthDetails\n              enrollmentKey\n              enrollReport {\n                __typename\n                bureau\n                errorResponse\n                serviceProduct\n                serviceProductFullfillmentKey\n                serviceProductObject\n                serviceProductTypeId\n                serviceProductValue\n                status\n              }\n              enrollMergeReport {\n                __typename\n                bureau\n                errorResponse\n                serviceProduct\n                serviceProductFullfillmentKey\n                serviceProductObject\n                serviceProductTypeId\n                serviceProductValue\n                status\n              }\n              enrollVantageScore {\n                __typename\n                bureau\n                errorResponse\n                serviceProduct\n                serviceProductFullfillmentKey\n                serviceProductObject\n                serviceProductTypeId\n                serviceProductValue\n                status\n              }\n              hidePositiveCreditCardAccounts\n              hidePositiveCollectionAccounts\n              hidePositiveInstallmentAccounts\n              hidePositiveMortgageAccounts\n            }\n            equifax {\n              __typename\n              authenticated\n            }\n            experian {\n              __typename\n              authenticated\n            }\n          }\n          preferences {\n            __typename\n            showAllAccounts {\n              __typename\n              creditCards\n              collectionsAccounts\n              installmentLoans\n              mortgages\n            }\n          }\n          createdAt\n          updatedAt\n          owner\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {};\n    if (owner) {\n      gqlAPIServiceArguments.owner = owner;\n    }\n    return API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    ) as Observable<SubscriptionResponse<OnDeleteAppDataSubscription>>;\n  }\n}\n",
            "type": "injectable"
        },
        {
            "name": "AppDataState",
            "id": "injectable-AppDataState-910f38867fd434b7cd0e0916a9ffe1dc",
            "file": "src/app/store/app-data/app-data.state.ts",
            "properties": [],
            "methods": [
                {
                    "name": "addAppData",
                    "args": [
                        {
                            "name": "ctx",
                            "type": "StateContext<AppDataStateModel>"
                        },
                        {
                            "type": "AppDataActions.Add"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "decorators": [
                        {
                            "name": "Action",
                            "stringifiedArguments": "AppDataActions.Add"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "ctx",
                            "type": "StateContext<AppDataStateModel>",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "type": "AppDataActions.Add",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "deleteAppData",
                    "args": [
                        {
                            "name": "ctx",
                            "type": "StateContext<AppDataStateModel>"
                        },
                        {
                            "type": "AppDataActions.Delete"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 41,
                    "decorators": [
                        {
                            "name": "Action",
                            "stringifiedArguments": "AppDataActions.Delete"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "ctx",
                            "type": "StateContext<AppDataStateModel>",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "type": "AppDataActions.Delete",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateAppData",
                    "args": [
                        {
                            "name": "ctx",
                            "type": "StateContext<AppDataStateModel>"
                        },
                        {
                            "type": "AppDataActions.Edit"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "decorators": [
                        {
                            "name": "Action",
                            "stringifiedArguments": "AppDataActions.Edit"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "ctx",
                            "type": "StateContext<AppDataStateModel>",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "type": "AppDataActions.Edit",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "description": "",
            "sourceCode": "import { State, Action, StateContext } from '@ngxs/store';\nimport * as AppDataActions from './app-data.actions';\nimport { Injectable } from '@angular/core';\nimport { AppDataStateModel } from '@store/app-data/app-data.model';\nimport { UserState } from '@store/user';\nimport { AgenciesState } from '@store/agencies';\nimport { PreferencesState } from '@store/preferences';\n\n@State<AppDataStateModel>({\n  name: 'appData',\n  defaults: {\n    id: '',\n  },\n  children: [UserState, AgenciesState, PreferencesState],\n})\n@Injectable()\nexport class AppDataState {\n  constructor() {}\n\n  @Action(AppDataActions.Add)\n  addAppData(\n    ctx: StateContext<AppDataStateModel>,\n    { payload }: AppDataActions.Add\n  ): void {\n    ctx.patchState({\n      ...payload,\n    });\n  }\n\n  @Action(AppDataActions.Edit)\n  updateAppData(\n    ctx: StateContext<AppDataStateModel>,\n    { payload }: AppDataActions.Edit\n  ): void {\n    ctx.patchState({\n      ...payload,\n    });\n  }\n\n  @Action(AppDataActions.Delete)\n  deleteAppData(\n    ctx: StateContext<AppDataStateModel>,\n    {}: AppDataActions.Delete\n  ): void {\n    const state = ctx.getState();\n    const payload = new AppDataStateModel();\n    ctx.setState({\n      ...state,\n      ...payload,\n    });\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 17
            },
            "type": "injectable"
        },
        {
            "name": "AuthService",
            "id": "injectable-AuthService-9a4ef84fc2aeee4b5ae523b5c4d39843",
            "file": "src/app/shared/services/auth/auth.service.ts",
            "properties": [
                {
                    "name": "FACEBOOK",
                    "defaultValue": "CognitoHostedUIIdentityProvider.Facebook",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        115
                    ]
                },
                {
                    "name": "GOOGLE",
                    "defaultValue": "CognitoHostedUIIdentityProvider.Google",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        115
                    ]
                },
                {
                    "name": "SIGN_IN",
                    "defaultValue": "'signIn'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        115
                    ]
                },
                {
                    "name": "SIGN_OUT",
                    "defaultValue": "'signOut'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        115
                    ]
                }
            ],
            "methods": [
                {
                    "name": "forgotPasswordSubmit",
                    "args": [
                        {
                            "name": "email",
                            "type": "string"
                        },
                        {
                            "name": "code",
                            "type": "string"
                        },
                        {
                            "name": "pw",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise | undefined",
                    "typeParameters": [],
                    "line": 153,
                    "description": "",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 3853,
                                "end": 3858,
                                "flags": 0,
                                "escapedText": "email"
                            },
                            "type": "string",
                            "tagName": {
                                "pos": 3847,
                                "end": 3852,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": ""
                        },
                        {
                            "name": {
                                "pos": 3871,
                                "end": 3875,
                                "flags": 0,
                                "escapedText": "code"
                            },
                            "type": "string",
                            "tagName": {
                                "pos": 3865,
                                "end": 3870,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": ""
                        },
                        {
                            "name": {
                                "pos": 3888,
                                "end": 3890,
                                "flags": 0,
                                "escapedText": "pw"
                            },
                            "type": "string",
                            "tagName": {
                                "pos": 3882,
                                "end": 3887,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": ""
                        },
                        {
                            "tagName": {
                                "pos": 3897,
                                "end": 3904,
                                "flags": 0,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ]
                },
                {
                    "name": "getAuthCredentials",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<ICredentials | null>",
                    "typeParameters": [],
                    "line": 203,
                    "description": "",
                    "modifierKind": [
                        120
                    ]
                },
                {
                    "name": "getAuthTokens",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<string>",
                    "typeParameters": [],
                    "line": 190,
                    "description": "",
                    "modifierKind": [
                        120
                    ]
                },
                {
                    "name": "getCurrentAuthenticatedUser",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<CognitoUser>",
                    "typeParameters": [],
                    "line": 175,
                    "description": "<p>Get current authenticated user</p>\n",
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 4407,
                                "end": 4413,
                                "flags": 0,
                                "escapedText": "return"
                            },
                            "comment": "<ul>\n<li>A promise resolves to current authenticated CognitoUser if success</li>\n</ul>\n"
                        }
                    ]
                },
                {
                    "name": "getCurrentUserCredentials",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<ICredentials>",
                    "typeParameters": [],
                    "line": 167,
                    "description": "<p>Get authenticated credentials of current user.</p>\n",
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 4190,
                                "end": 4196,
                                "flags": 0,
                                "escapedText": "return"
                            },
                            "comment": "<ul>\n<li>A promise resolves to be current user&#39;s credentials</li>\n</ul>\n"
                        }
                    ]
                },
                {
                    "name": "refreshSession",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<CognitoUserSession>",
                    "typeParameters": [],
                    "line": 183,
                    "description": "",
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 4611,
                                "end": 4618,
                                "flags": 0,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ]
                },
                {
                    "name": "reloadCredentials",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<void>",
                    "typeParameters": [],
                    "line": 64,
                    "description": "<p>This method is designed to help reload the user if the ID ever goes null\nwill perform the following:</p>\n<ol>\n<li>Get current credentials (if the token is still valid)</li>\n<li>If no token available, and on a different page...go back to login</li>\n<li>If on sign in or sign up...do nothing</li>\n</ol>\n",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 2037,
                                "end": 2044,
                                "flags": 0,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ]
                },
                {
                    "name": "resendSignUp",
                    "args": [
                        {
                            "name": "email",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise | undefined",
                    "typeParameters": [],
                    "line": 142,
                    "description": "",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 3681,
                                "end": 3686,
                                "flags": 0,
                                "escapedText": "email"
                            },
                            "type": "string",
                            "tagName": {
                                "pos": 3666,
                                "end": 3671,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": "",
                            "typeExpression": {
                                "pos": 3672,
                                "end": 3680,
                                "flags": 0,
                                "kind": 277,
                                "type": {
                                    "pos": 3673,
                                    "end": 3679,
                                    "flags": 2097152,
                                    "kind": 137
                                }
                            }
                        },
                        {
                            "tagName": {
                                "pos": 3693,
                                "end": 3700,
                                "flags": 0,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ]
                },
                {
                    "name": "signIn",
                    "args": [
                        {
                            "name": "username",
                            "type": "string"
                        },
                        {
                            "name": "password",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<CognitoUser | any>",
                    "typeParameters": [],
                    "line": 106,
                    "description": "<p>Cognito sign in method</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 2881,
                                "end": 2889,
                                "flags": 0,
                                "escapedText": "username"
                            },
                            "type": "string",
                            "tagName": {
                                "pos": 2866,
                                "end": 2871,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": "",
                            "typeExpression": {
                                "pos": 2872,
                                "end": 2880,
                                "flags": 0,
                                "kind": 277,
                                "type": {
                                    "pos": 2873,
                                    "end": 2879,
                                    "flags": 2097152,
                                    "kind": 137
                                }
                            }
                        },
                        {
                            "name": {
                                "pos": 2911,
                                "end": 2919,
                                "flags": 0,
                                "escapedText": "password"
                            },
                            "type": "string",
                            "tagName": {
                                "pos": 2896,
                                "end": 2901,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": "",
                            "typeExpression": {
                                "pos": 2902,
                                "end": 2910,
                                "flags": 0,
                                "kind": 277,
                                "type": {
                                    "pos": 2903,
                                    "end": 2909,
                                    "flags": 2097152,
                                    "kind": 137
                                }
                            }
                        },
                        {
                            "tagName": {
                                "pos": 2926,
                                "end": 2933,
                                "flags": 0,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ]
                },
                {
                    "name": "signOut",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<any>",
                    "typeParameters": [],
                    "line": 120,
                    "description": "<p>Simple sign out method</p>\n",
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 3280,
                                "end": 3287,
                                "flags": 0,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ]
                },
                {
                    "name": "signUp",
                    "args": [
                        {
                            "name": "user",
                            "type": "NewUser"
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<ISignUpResult>",
                    "typeParameters": [],
                    "line": 90,
                    "description": "<p>Cognito sign up method</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 2592,
                                "end": 2596,
                                "flags": 0,
                                "escapedText": "user"
                            },
                            "type": "NewUser",
                            "tagName": {
                                "pos": 2576,
                                "end": 2581,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": "",
                            "typeExpression": {
                                "pos": 2582,
                                "end": 2591,
                                "flags": 0,
                                "kind": 277,
                                "type": {
                                    "pos": 2583,
                                    "end": 2590,
                                    "flags": 2097152,
                                    "kind": 161,
                                    "typeName": {
                                        "pos": 2583,
                                        "end": 2590,
                                        "flags": 2097152,
                                        "escapedText": "NewUser"
                                    }
                                }
                            }
                        },
                        {
                            "tagName": {
                                "pos": 2603,
                                "end": 2610,
                                "flags": 0,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ]
                },
                {
                    "name": "socialSignIn",
                    "args": [
                        {
                            "name": "provider",
                            "type": "CognitoHostedUIIdentityProvider"
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<ICredentials>",
                    "typeParameters": [],
                    "line": 129,
                    "description": "<p>Social signin (supports facebook and google)</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 3456,
                                "end": 3464,
                                "flags": 0,
                                "escapedText": "provider"
                            },
                            "type": "CognitoHostedUIIdentityProvider",
                            "tagName": {
                                "pos": 3416,
                                "end": 3421,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": "",
                            "typeExpression": {
                                "pos": 3422,
                                "end": 3455,
                                "flags": 0,
                                "kind": 277,
                                "type": {
                                    "pos": 3423,
                                    "end": 3454,
                                    "flags": 2097152,
                                    "kind": 161,
                                    "typeName": {
                                        "pos": 3423,
                                        "end": 3454,
                                        "flags": 2097152,
                                        "escapedText": "CognitoHostedUIIdentityProvider"
                                    }
                                }
                            }
                        },
                        {
                            "tagName": {
                                "pos": 3471,
                                "end": 3478,
                                "flags": 0,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ]
                }
            ],
            "description": "",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport Auth, { CognitoHostedUIIdentityProvider } from '@aws-amplify/auth';\nimport { Hub, ICredentials } from '@aws-amplify/core';\nimport { Subject, Observable, Subscription } from 'rxjs';\nimport {\n  CognitoUser,\n  CognitoUserSession,\n  ISignUpResult,\n} from 'amazon-cognito-identity-js';\nimport { SyncService } from '@shared/services/sync/sync.service';\nimport { Store } from '@ngxs/store';\nimport { Router } from '@angular/router';\n\nexport interface NewUser {\n  username: string;\n  password: string;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  public static SIGN_IN = 'signIn';\n  public static SIGN_OUT = 'signOut';\n  public static FACEBOOK = CognitoHostedUIIdentityProvider.Facebook;\n  public static GOOGLE = CognitoHostedUIIdentityProvider.Google;\n\n  constructor(private sync: SyncService, private router: Router) {\n    Hub.listen('auth', async (data) => {\n      const { channel, payload } = data;\n      switch (payload.event) {\n        case 'signIn':\n          console.log('in signin');\n          const creds: ICredentials = await this.getCurrentUserCredentials();\n          console.log('current credentials', creds);\n          if (creds) await this.sync.hallmonitor(creds);\n          break;\n        case 'signOut':\n          // handle sign out\n          break;\n        default:\n          // do something by default\n          break;\n      }\n    });\n\n    Auth.currentAuthenticatedUser()\n      .then(async (user) => {\n        console.log('authenticated user');\n        const creds: ICredentials = await this.getCurrentUserCredentials();\n        if (creds) await this.sync.hallmonitor(creds);\n      })\n      .catch(() => console.log('Not signed in'));\n  }\n\n  /**\n   * This method is designed to help reload the user if the ID ever goes null\n   * will perform the following:\n   *  1. Get current credentials (if the token is still valid)\n   *  2. If no token available, and on a different page...go back to login\n   *  3. If on sign in or sign up...do nothing\n   * @returns\n   */\n  async reloadCredentials(): Promise<void> {\n    const creds = await this.getCurrentUserCredentials();\n    if (creds) {\n      await this.sync.hallmonitor(creds);\n    } else {\n      switch (this.router.url) {\n        case '/auth/signin':\n          break;\n        case '/auth/signup':\n          break;\n        case '/signin':\n          break;\n        case '/signin':\n          break;\n        default:\n          this.router.navigate(['/auth/signin']);\n          break;\n      }\n    }\n  }\n\n  /**\n   * Cognito sign up method\n   * @param {NewUser} user\n   * @returns\n   */\n  signUp(user: NewUser): Promise<ISignUpResult> {\n    return Auth.signUp({\n      username: user.username,\n      password: user.password,\n      attributes: {\n        email: user.username,\n      },\n    });\n  }\n\n  /**\n   * Cognito sign in method\n   * @param {string} username\n   * @param {string} password\n   * @returns\n   */\n  signIn(username: string, password: string): Promise<CognitoUser | any> {\n    return new Promise((resolve, reject) => {\n      Auth.signIn(username, password)\n        .then((user: CognitoUser | any) => {\n          resolve(user);\n        })\n        .catch((error: any) => reject(error));\n    });\n  }\n\n  /**\n   * Simple sign out method\n   * @returns\n   */\n  signOut(): Promise<any> {\n    return Auth.signOut();\n  }\n\n  /**\n   * Social signin (supports facebook and google)\n   * @param {CognitoHostedUIIdentityProvider} provider\n   * @returns\n   */\n  socialSignIn(\n    provider: CognitoHostedUIIdentityProvider\n  ): Promise<ICredentials> {\n    return Auth.federatedSignIn({\n      provider: provider,\n    });\n  }\n\n  /**\n   *\n   * @param {string} email\n   * @returns\n   */\n  resendSignUp(email: string): Promise<string> | undefined {\n    return email ? Auth.resendSignUp(email) : undefined;\n  }\n\n  /**\n   *\n   * @param email\n   * @param code\n   * @param pw\n   * @returns\n   */\n  forgotPasswordSubmit(\n    email: string,\n    code: string,\n    pw: string\n  ): Promise<void> | undefined {\n    return email\n      ? Auth.forgotPasswordSubmit(email.toLowerCase(), code, pw)\n      : undefined;\n  }\n\n  /**\n   * Get authenticated credentials of current user.\n   * @return - A promise resolves to be current user's credentials\n   */\n  getCurrentUserCredentials(): Promise<ICredentials> {\n    return Auth.currentUserCredentials();\n  }\n\n  /**\n   * Get current authenticated user\n   * @return - A promise resolves to current authenticated CognitoUser if success\n   */\n  getCurrentAuthenticatedUser(): Promise<CognitoUser> {\n    return Auth.currentAuthenticatedUser();\n  }\n\n  /**\n   *\n   * @returns\n   */\n  refreshSession(): Promise<CognitoUserSession> {\n    return Auth.currentSession();\n  }\n\n  /**\n   *\n   */\n  async getAuthTokens(): Promise<string> {\n    try {\n      const user: CognitoUser = await Auth.currentAuthenticatedUser();\n      let session = user.getSignInUserSession();\n      return session ? session.getIdToken().getJwtToken() : '';\n    } catch (err) {\n      return '';\n    }\n  }\n\n  /**\n   *\n   */\n  async getAuthCredentials(): Promise<ICredentials | null> {\n    try {\n      const creds: ICredentials = await Auth.currentUserCredentials();\n      return creds;\n    } catch (err) {\n      return null;\n    }\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "sync",
                        "type": "SyncService"
                    },
                    {
                        "name": "router",
                        "type": "Router"
                    }
                ],
                "line": 26,
                "jsdoctags": [
                    {
                        "name": "sync",
                        "type": "SyncService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "CreditreportService",
            "id": "injectable-CreditreportService-82866b5cba7583970a0bf89e8da743ab",
            "file": "src/app/shared/services/creditreport/creditreport.service.ts",
            "properties": [
                {
                    "name": "agencies$",
                    "type": "Observable<AgenciesStateModel>",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "decorators": [
                        {
                            "name": "Select",
                            "stringifiedArguments": "AgenciesState"
                        }
                    ]
                },
                {
                    "name": "agenciesSub$",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "preferences$",
                    "type": "Observable<PreferencesStateModel>",
                    "optional": false,
                    "description": "",
                    "line": 39,
                    "decorators": [
                        {
                            "name": "Select",
                            "stringifiedArguments": "PreferencesState"
                        }
                    ]
                },
                {
                    "name": "preferencesSub$",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "tuAgency",
                    "defaultValue": "{} as TransunionInput",
                    "type": "TransunionInput",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "tuAgency$",
                    "defaultValue": "new Subject()",
                    "type": "Subject<TransunionInput>",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "tuPreferences",
                    "defaultValue": "{} as PreferencesStateModel",
                    "type": "PreferencesStateModel",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "tuPreferences$",
                    "defaultValue": "new Subject()",
                    "type": "Subject<PreferencesStateModel>",
                    "optional": false,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "tuReport",
                    "defaultValue": "{} as IMergeReport",
                    "type": "IMergeReport",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "tuReport$",
                    "defaultValue": "new Subject()",
                    "type": "Subject<IMergeReport>",
                    "optional": false,
                    "description": "",
                    "line": 30
                }
            ],
            "methods": [
                {
                    "name": "getBorrower",
                    "args": [],
                    "optional": false,
                    "returnType": "IBorrower",
                    "typeParameters": [],
                    "line": 125,
                    "description": "<p>Returns the borrower from the current TU report</p>\n"
                },
                {
                    "name": "getTradeLinePartitions",
                    "args": [],
                    "optional": false,
                    "returnType": "ITradeLinePartition[]",
                    "typeParameters": [],
                    "line": 114,
                    "description": "<p>Returns the tradeline partitions from the current TU report</p>\n",
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 3642,
                                "end": 3649,
                                "flags": 0,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ]
                },
                {
                    "name": "getTransunion",
                    "args": [
                        {
                            "name": "agencies",
                            "type": "AgenciesStateModel"
                        }
                    ],
                    "optional": false,
                    "returnType": "TransunionInput",
                    "typeParameters": [],
                    "line": 72,
                    "description": "<p>Return the TU data from provided agency state model</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 2325,
                                "end": 2333,
                                "flags": 0,
                                "escapedText": "agencies"
                            },
                            "type": "AgenciesStateModel",
                            "tagName": {
                                "pos": 2298,
                                "end": 2303,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": "",
                            "typeExpression": {
                                "pos": 2304,
                                "end": 2324,
                                "flags": 0,
                                "kind": 277,
                                "type": {
                                    "pos": 2305,
                                    "end": 2323,
                                    "flags": 2097152,
                                    "kind": 161,
                                    "typeName": {
                                        "pos": 2305,
                                        "end": 2323,
                                        "flags": 2097152,
                                        "escapedText": "AgenciesStateModel"
                                    }
                                }
                            }
                        },
                        {
                            "tagName": {
                                "pos": 2340,
                                "end": 2347,
                                "flags": 0,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ]
                },
                {
                    "name": "getUnparsedCreditReport",
                    "args": [
                        {
                            "name": "agencies",
                            "type": "AgenciesStateModel"
                        }
                    ],
                    "optional": false,
                    "returnType": "IUnparsedCreditReport",
                    "typeParameters": [],
                    "line": 83,
                    "description": "<p>Takes the agency state model and returns the unparsed TU credit report</p>\n<ul>\n<li>TUCredit report agency stored as AWS JSON string in DB</li>\n</ul>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 2695,
                                "end": 2703,
                                "flags": 0,
                                "escapedText": "agencies"
                            },
                            "type": "AgenciesStateModel",
                            "tagName": {
                                "pos": 2668,
                                "end": 2673,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": "",
                            "typeExpression": {
                                "pos": 2674,
                                "end": 2694,
                                "flags": 0,
                                "kind": 277,
                                "type": {
                                    "pos": 2675,
                                    "end": 2693,
                                    "flags": 2097152,
                                    "kind": 161,
                                    "typeName": {
                                        "pos": 2675,
                                        "end": 2693,
                                        "flags": 2097152,
                                        "escapedText": "AgenciesStateModel"
                                    }
                                }
                            }
                        },
                        {
                            "tagName": {
                                "pos": 2710,
                                "end": 2717,
                                "flags": 0,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 62
                },
                {
                    "name": "parseCreditReport",
                    "args": [
                        {
                            "name": "xml",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "IMergeReport",
                    "typeParameters": [],
                    "line": 101,
                    "description": "<p>Parses the xml string into a JSON object of the IMergeReport form</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 3289,
                                "end": 3292,
                                "flags": 0,
                                "escapedText": "xml"
                            },
                            "type": "string",
                            "tagName": {
                                "pos": 3274,
                                "end": 3279,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": "",
                            "typeExpression": {
                                "pos": 3280,
                                "end": 3288,
                                "flags": 0,
                                "kind": 277,
                                "type": {
                                    "pos": 3281,
                                    "end": 3287,
                                    "flags": 2097152,
                                    "kind": 137
                                }
                            }
                        },
                        {
                            "tagName": {
                                "pos": 3299,
                                "end": 3306,
                                "flags": 0,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ]
                }
            ],
            "description": "<p>Service to parse and pull information from credit reports</p>\n",
            "sourceCode": "import { Injectable, OnDestroy } from '@angular/core';\nimport { Select, Store } from '@ngxs/store';\nimport {\n  IBorrower,\n  IMergeReport,\n  ITradeLinePartition,\n  IUnparsedCreditReport,\n} from '@shared/interfaces/merge-report.interface';\nimport { AgenciesState, AgenciesStateModel } from '@store/agencies';\nimport { Observable, Subject, Subscription } from 'rxjs';\nimport * as parser from 'fast-xml-parser';\nimport { TransunionInput } from '@shared/services/aws/api.service';\nimport { PreferencesState, PreferencesStateModel } from '@store/preferences';\n\nconst parserOptions = {\n  attributeNamePrefix: '',\n  ignoreAttributes: false,\n  ignoreNameSpace: true,\n  parseAttributeValue: true,\n};\n\n/**\n * Service to parse and pull information from credit reports\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class CreditreportService implements OnDestroy {\n  tuReport: IMergeReport = {} as IMergeReport;\n  tuReport$: Subject<IMergeReport> = new Subject();\n  tuAgency: TransunionInput = {} as TransunionInput;\n  tuAgency$: Subject<TransunionInput> = new Subject();\n  tuPreferences: PreferencesStateModel = {} as PreferencesStateModel;\n  tuPreferences$: Subject<PreferencesStateModel> = new Subject();\n\n  @Select(AgenciesState) agencies$!: Observable<AgenciesStateModel>;\n  agenciesSub$: Subscription;\n\n  @Select(PreferencesState) preferences$!: Observable<PreferencesStateModel>;\n  preferencesSub$: Subscription;\n\n  constructor() {\n    this.agenciesSub$ = this.agencies$\n      .pipe()\n      .subscribe((agencies: AgenciesStateModel) => {\n        const tu = this.getTransunion(agencies);\n        this.tuAgency$.next(tu);\n        this.tuAgency = tu;\n        const unparsed = this.getUnparsedCreditReport(agencies);\n        const parsedReport = this.parseCreditReport(unparsed['#text']);\n        this.tuReport$.next(parsedReport);\n        this.tuReport = parsedReport;\n      });\n    this.preferencesSub$ = this.preferences$\n      .pipe()\n      .subscribe((pref: PreferencesStateModel) => {\n        this.tuPreferences$.next(pref);\n        this.tuPreferences = pref;\n      });\n  }\n\n  ngOnDestroy(): void {\n    if (this.agenciesSub$) this.agenciesSub$.unsubscribe();\n    if (this.preferencesSub$) this.preferencesSub$.unsubscribe();\n  }\n\n  /**\n   * Return the TU data from provided agency state model\n   * @param {AgenciesStateModel} agencies\n   * @returns\n   */\n  getTransunion(agencies: AgenciesStateModel): TransunionInput {\n    if (!agencies.transunion) return {} as TransunionInput;\n    return agencies.transunion;\n  }\n\n  /**\n   * Takes the agency state model and returns the unparsed TU credit report\n   *   - TUCredit report agency stored as AWS JSON string in DB\n   * @param {AgenciesStateModel} agencies\n   * @returns\n   */\n  getUnparsedCreditReport(agencies: AgenciesStateModel): IUnparsedCreditReport {\n    if (!agencies) return JSON.parse('{\"#text\":\"\"}');\n    const serviceProductString =\n      agencies.transunion?.enrollMergeReport?.serviceProductObject ||\n      '{\"#text\":\"\"}';\n    const serviceProductObject: IUnparsedCreditReport = JSON.parse(\n      serviceProductString\n    );\n    return serviceProductObject\n      ? serviceProductObject\n      : ({} as IUnparsedCreditReport);\n  }\n\n  /**\n   * Parses the xml string into a JSON object of the IMergeReport form\n   * @param {string} xml\n   * @returns\n   */\n  parseCreditReport(xml: string): IMergeReport {\n    const clean = xml\n      .replace(/&lt;/g, '<')\n      .replace(/&gt;/g, '>')\n      .replace(/&#xD;/g, '');\n    const report: IMergeReport = parser.parse(clean, parserOptions);\n    return report;\n  }\n\n  /**\n   * Returns the tradeline partitions from the current TU report\n   * @returns\n   */\n  getTradeLinePartitions(): ITradeLinePartition[] {\n    if (!this.tuReport) return [{} as ITradeLinePartition];\n    const partitions = this.tuReport?.TrueLinkCreditReportType\n      ?.TradeLinePartition;\n    if (!partitions) return [{} as ITradeLinePartition];\n    return partitions instanceof Array ? partitions : [partitions];\n  }\n\n  /**\n   * Returns the borrower from the current TU report\n   */\n  getBorrower(): IBorrower {\n    if (!this.tuReport) return {} as IBorrower;\n    const borrower = this.tuReport?.TrueLinkCreditReportType?.Borrower;\n    return borrower ? borrower : ({} as IBorrower);\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 40
            },
            "type": "injectable"
        },
        {
            "name": "DashboardService",
            "id": "injectable-DashboardService-96098ecc1b0945ae51567a6fb14a9b87",
            "file": "src/app/shared/services/dashboard/dashboard.service.ts",
            "properties": [],
            "methods": [],
            "description": "",
            "sourceCode": "import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class DashboardService {\n  constructor() {}\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 4
            },
            "type": "injectable"
        },
        {
            "name": "GuestService",
            "id": "injectable-GuestService-bfe3b24945b16f7668b9a4c58bb261bb",
            "file": "src/app/shared/services/auth/guest.service.ts",
            "properties": [
                {
                    "name": "guestState",
                    "defaultValue": "new Subject<ICredentials | any>()",
                    "type": "Subject<ICredentials | any>",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "guestState$",
                    "defaultValue": "this.guestState.asObservable()",
                    "type": "Observable<ICredentials | any>",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methods": [
                {
                    "name": "initGuestState",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<void>",
                    "typeParameters": [],
                    "line": 17,
                    "modifierKind": [
                        120
                    ]
                },
                {
                    "name": "refreshGuestState",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<void>",
                    "typeParameters": [],
                    "line": 21,
                    "modifierKind": [
                        120
                    ]
                }
            ],
            "description": "",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { ICredentials } from '@aws-amplify/core';\nimport { Auth } from 'aws-amplify';\nimport { Subject, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class GuestService {\n  private guestState: Subject<ICredentials | any> = new Subject<ICredentials | any>();\n  guestState$: Observable<ICredentials | any> = this.guestState.asObservable();\n\n  constructor() {\n    this.initGuestState();\n  }\n\n  async initGuestState(): Promise<void> {\n    await this.refreshGuestState();\n  }\n\n  async refreshGuestState(): Promise<void> {\n    try {\n      const guest = await Auth.currentCredentials();\n      this.guestState.next(guest);\n    } catch (err) {\n      this.guestState.next(null);\n    }\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 11
            },
            "type": "injectable"
        },
        {
            "name": "IamService",
            "id": "injectable-IamService-98612c6fd11523dcd716dc3faf062b6e",
            "file": "src/app/shared/services/auth/iam.service.ts",
            "properties": [],
            "methods": [],
            "description": "",
            "sourceCode": "import { Injectable } from '@angular/core';\n// import Auth from '@aws-amplify/auth';\n// import { ISigV4Config, SigV4 } from '@shared/models/signatureV4.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class IamService {\n  constructor() {}\n\n  // signRequest(\n  //   endpoint: string,\n  //   method: string,\n  //   body: any,\n  //   queryParams: any\n  // ): Promise<any> {\n  //   return Auth.currentCredentials()\n  //     .then((credentials) => {\n  //       let cred = Auth.essentialCredentials(credentials);\n  //       return Promise.resolve(cred);\n  //     })\n  //     .then((essentialCredentials) => {\n  //       let config: ISigV4Config = {\n  //         accessKey: essentialCredentials.accessKeyId,\n  //         secretKey: essentialCredentials.secretAccessKey,\n  //         sessionToken: essentialCredentials.sessionToken,\n  //         serviceName: 'execute-api',\n  //         defaultAcceptType: 'application/json',\n  //         defaultContentType: 'application/json',\n  //         region: 'us-east-2',\n  //         endpoint: endpoint,\n  //       };\n\n  //       let request = {\n  //         method,\n  //         path: '',\n  //         headers: {},\n  //         queryParams,\n  //         body,\n  //       };\n\n  //       let signedRequest = new SigV4(config).signRequest(request);\n\n  //       return Promise.resolve(signedRequest);\n  //     });\n  // }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "type": "injectable"
        },
        {
            "name": "KycService",
            "id": "injectable-KycService-63f80bce24ff7e9ef7495b844a3820ce",
            "file": "src/app/shared/services/kyc/kyc.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "activateStep",
                    "args": [
                        {
                            "name": "step",
                            "type": "number"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 63,
                    "description": "<p>Takes a progress step ID and sets the status to true\nThen updates the state</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 2171,
                                "end": 2175,
                                "flags": 0,
                                "escapedText": "step"
                            },
                            "type": "number",
                            "tagName": {
                                "pos": 2156,
                                "end": 2161,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": "<p>the progress step ID</p>\n",
                            "typeExpression": {
                                "pos": 2162,
                                "end": 2170,
                                "flags": 0,
                                "kind": 277,
                                "type": {
                                    "pos": 2163,
                                    "end": 2169,
                                    "flags": 2097152,
                                    "kind": 134
                                }
                            }
                        }
                    ]
                },
                {
                    "name": "completeStep",
                    "args": [
                        {
                            "name": "step",
                            "type": "number"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 101,
                    "description": "<p>Takes a progress step ID and sets the complete status to true\nThen updates the state</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 3369,
                                "end": 3373,
                                "flags": 0,
                                "escapedText": "step"
                            },
                            "type": "number",
                            "tagName": {
                                "pos": 3354,
                                "end": 3359,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": "<p>the progress step ID</p>\n",
                            "typeExpression": {
                                "pos": 3360,
                                "end": 3368,
                                "flags": 0,
                                "kind": 277,
                                "type": {
                                    "pos": 3361,
                                    "end": 3367,
                                    "flags": 2097152,
                                    "kind": 134
                                }
                            }
                        }
                    ]
                },
                {
                    "name": "getGetAuthenticationQuestionsResults",
                    "args": [
                        {
                            "name": "data",
                            "type": "UpdateAppDataInput"
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<KYCResponse | string>",
                    "typeParameters": [],
                    "line": 351,
                    "description": "<p>Method to send and process the authentication questions request and response</p>\n<ul>\n<li>Does not verify the accuracy of the methods...see (sendVerifyAuthenticationQuestions)</li>\n</ul>\n",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 11193,
                                "end": 11197,
                                "flags": 0,
                                "escapedText": "data"
                            },
                            "type": "UpdateAppDataInput",
                            "tagName": {
                                "pos": 11166,
                                "end": 11171,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": "",
                            "typeExpression": {
                                "pos": 11172,
                                "end": 11192,
                                "flags": 0,
                                "kind": 277,
                                "type": {
                                    "pos": 11173,
                                    "end": 11191,
                                    "flags": 2097152,
                                    "kind": 161,
                                    "typeName": {
                                        "pos": 11173,
                                        "end": 11191,
                                        "flags": 2097152,
                                        "escapedText": "UpdateAppDataInput"
                                    }
                                }
                            }
                        },
                        {
                            "tagName": {
                                "pos": 11204,
                                "end": 11211,
                                "flags": 0,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ]
                },
                {
                    "name": "getIndicativeEnrichmentResults",
                    "args": [
                        {
                            "name": "data",
                            "type": "UpdateAppDataInput"
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<KYCResponse | string>",
                    "typeParameters": [],
                    "line": 262,
                    "description": "<p>Method to send and process the indicative enrichment request and response.</p>\n",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 8339,
                                "end": 8343,
                                "flags": 0,
                                "escapedText": "data"
                            },
                            "type": "UpdateAppDataInput",
                            "tagName": {
                                "pos": 8312,
                                "end": 8317,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": "",
                            "typeExpression": {
                                "pos": 8318,
                                "end": 8338,
                                "flags": 0,
                                "kind": 277,
                                "type": {
                                    "pos": 8319,
                                    "end": 8337,
                                    "flags": 2097152,
                                    "kind": 161,
                                    "typeName": {
                                        "pos": 8319,
                                        "end": 8337,
                                        "flags": 2097152,
                                        "escapedText": "UpdateAppDataInput"
                                    }
                                }
                            }
                        },
                        {
                            "tagName": {
                                "pos": 8350,
                                "end": 8357,
                                "flags": 0,
                                "escapedText": "returns"
                            },
                            "comment": "<p>Full ssn or a failure (TODO: handle failures)</p>\n"
                        }
                    ]
                },
                {
                    "name": "getOTPQuestion",
                    "args": [
                        {
                            "name": "questions",
                            "type": "ITransunionKBAQuestions"
                        }
                    ],
                    "optional": false,
                    "returnType": "ITransunionKBAQuestion | undefined",
                    "typeParameters": [],
                    "line": 525,
                    "description": "<p>Runs a series of tests to see if the question is a OTP</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 17111,
                                "end": 17120,
                                "flags": 0,
                                "escapedText": "questions"
                            },
                            "type": "ITransunionKBAQuestions",
                            "tagName": {
                                "pos": 17079,
                                "end": 17084,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": "",
                            "typeExpression": {
                                "pos": 17085,
                                "end": 17110,
                                "flags": 0,
                                "kind": 277,
                                "type": {
                                    "pos": 17086,
                                    "end": 17109,
                                    "flags": 2097152,
                                    "kind": 161,
                                    "typeName": {
                                        "pos": 17086,
                                        "end": 17109,
                                        "flags": 2097152,
                                        "escapedText": "ITransunionKBAQuestions"
                                    }
                                }
                            }
                        },
                        {
                            "tagName": {
                                "pos": 17127,
                                "end": 17134,
                                "flags": 0,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ]
                },
                {
                    "name": "getOTPSendTextAnswer",
                    "args": [
                        {
                            "name": "question",
                            "type": "ITransunionKBAQuestion"
                        }
                    ],
                    "optional": false,
                    "returnType": "IVerifyAuthenticationAnswer",
                    "typeParameters": [],
                    "line": 546,
                    "description": "<p>Runs a series of test to find the &#39;Send text message&#39; answer for OTP</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 17900,
                                "end": 17908,
                                "flags": 0,
                                "escapedText": "question"
                            },
                            "type": "ITransunionKBAQuestion",
                            "tagName": {
                                "pos": 17869,
                                "end": 17874,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": "",
                            "typeExpression": {
                                "pos": 17875,
                                "end": 17899,
                                "flags": 0,
                                "kind": 277,
                                "type": {
                                    "pos": 17876,
                                    "end": 17898,
                                    "flags": 2097152,
                                    "kind": 161,
                                    "typeName": {
                                        "pos": 17876,
                                        "end": 17898,
                                        "flags": 2097152,
                                        "escapedText": "ITransunionKBAQuestion"
                                    }
                                }
                            }
                        },
                        {
                            "tagName": {
                                "pos": 17915,
                                "end": 17922,
                                "flags": 0,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ]
                },
                {
                    "name": "getPassCodeAnswer",
                    "args": [
                        {
                            "name": "question",
                            "type": "ITransunionKBAQuestion"
                        },
                        {
                            "name": "input",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "IVerifyAuthenticationAnswer",
                    "typeParameters": [],
                    "line": 593,
                    "description": "<p>Runs a series of test to find the &#39;Send text message&#39; answer for OTP</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 19396,
                                "end": 19404,
                                "flags": 0,
                                "escapedText": "question"
                            },
                            "type": "ITransunionKBAQuestion",
                            "tagName": {
                                "pos": 19365,
                                "end": 19370,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": "",
                            "typeExpression": {
                                "pos": 19371,
                                "end": 19395,
                                "flags": 0,
                                "kind": 277,
                                "type": {
                                    "pos": 19372,
                                    "end": 19394,
                                    "flags": 2097152,
                                    "kind": 161,
                                    "typeName": {
                                        "pos": 19372,
                                        "end": 19394,
                                        "flags": 2097152,
                                        "escapedText": "ITransunionKBAQuestion"
                                    }
                                }
                            }
                        },
                        {
                            "name": "input",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "tagName": {
                                "pos": 19411,
                                "end": 19418,
                                "flags": 0,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ]
                },
                {
                    "name": "getPassCodeQuestion",
                    "args": [
                        {
                            "name": "questions",
                            "type": "ITransunionKBAQuestions"
                        }
                    ],
                    "optional": false,
                    "returnType": "ITransunionKBAQuestion | undefined",
                    "typeParameters": [],
                    "line": 574,
                    "description": "<p>Runs a series of tests to see if the question is for the passcode</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 18696,
                                "end": 18705,
                                "flags": 0,
                                "escapedText": "questions"
                            },
                            "type": "ITransunionKBAQuestions",
                            "tagName": {
                                "pos": 18664,
                                "end": 18669,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": "",
                            "typeExpression": {
                                "pos": 18670,
                                "end": 18695,
                                "flags": 0,
                                "kind": 277,
                                "type": {
                                    "pos": 18671,
                                    "end": 18694,
                                    "flags": 2097152,
                                    "kind": 161,
                                    "typeName": {
                                        "pos": 18671,
                                        "end": 18694,
                                        "flags": 2097152,
                                        "escapedText": "ITransunionKBAQuestions"
                                    }
                                }
                            }
                        },
                        {
                            "tagName": {
                                "pos": 18712,
                                "end": 18719,
                                "flags": 0,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ]
                },
                {
                    "name": "inactivateStep",
                    "args": [
                        {
                            "name": "step",
                            "type": "number"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 82,
                    "description": "<p>Takes a progress step ID and sets the status to false\nThen updates the state</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 2765,
                                "end": 2769,
                                "flags": 0,
                                "escapedText": "step"
                            },
                            "type": "number",
                            "tagName": {
                                "pos": 2750,
                                "end": 2755,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": "<p>the progress step ID</p>\n",
                            "typeExpression": {
                                "pos": 2756,
                                "end": 2764,
                                "flags": 0,
                                "kind": 277,
                                "type": {
                                    "pos": 2757,
                                    "end": 2763,
                                    "flags": 2097152,
                                    "kind": 134
                                }
                            }
                        }
                    ]
                },
                {
                    "name": "incompleteStep",
                    "args": [
                        {
                            "name": "step",
                            "type": "number"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 120,
                    "description": "<p>Takes a progress step ID and sets the complete status to false\nThen updates the state</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 3974,
                                "end": 3978,
                                "flags": 0,
                                "escapedText": "step"
                            },
                            "type": "number",
                            "tagName": {
                                "pos": 3959,
                                "end": 3964,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": "<p>the progress step ID</p>\n",
                            "typeExpression": {
                                "pos": 3965,
                                "end": 3973,
                                "flags": 0,
                                "kind": 277,
                                "type": {
                                    "pos": 3966,
                                    "end": 3972,
                                    "flags": 2097152,
                                    "kind": 134
                                }
                            }
                        }
                    ]
                },
                {
                    "name": "parseCurrentRawAuthDetails",
                    "args": [
                        {
                            "name": "xml",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "ITransunionKBAChallengeAnswer",
                    "typeParameters": [],
                    "line": 476,
                    "description": "<p>This parses the xml string and returns it as the TU question format</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 15416,
                                "end": 15419,
                                "flags": 0,
                                "escapedText": "xml"
                            },
                            "type": "string",
                            "tagName": {
                                "pos": 15401,
                                "end": 15406,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": "<p>xml string in the TU question schema</p>\n",
                            "typeExpression": {
                                "pos": 15407,
                                "end": 15415,
                                "flags": 0,
                                "kind": 277,
                                "type": {
                                    "pos": 15408,
                                    "end": 15414,
                                    "flags": 2097152,
                                    "kind": 137
                                }
                            }
                        },
                        {
                            "tagName": {
                                "pos": 15463,
                                "end": 15470,
                                "flags": 0,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ]
                },
                {
                    "name": "parseCurrentRawQuestions",
                    "args": [
                        {
                            "name": "xml",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "ITransunionKBAQuestions",
                    "typeParameters": [],
                    "line": 382,
                    "description": "<p>This parses the xml string and returns it as the TU question format</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 12322,
                                "end": 12325,
                                "flags": 0,
                                "escapedText": "xml"
                            },
                            "type": "string",
                            "tagName": {
                                "pos": 12307,
                                "end": 12312,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": "<p>xml string in the TU question schema</p>\n",
                            "typeExpression": {
                                "pos": 12313,
                                "end": 12321,
                                "flags": 0,
                                "kind": 277,
                                "type": {
                                    "pos": 12314,
                                    "end": 12320,
                                    "flags": 2097152,
                                    "kind": 137
                                }
                            }
                        },
                        {
                            "tagName": {
                                "pos": 12369,
                                "end": 12376,
                                "flags": 0,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ]
                },
                {
                    "name": "processGetAutthenticationQuestionsResponse",
                    "args": [
                        {
                            "name": "resp",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<IGetAuthenticationQuestionsResponseSuccess | undefined>",
                    "typeParameters": [],
                    "line": 314,
                    "description": "<p>Process and clean the indicative enrichment response back from Transunion</p>\n",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 9877,
                                "end": 9881,
                                "flags": 0,
                                "escapedText": "resp"
                            },
                            "type": "string",
                            "tagName": {
                                "pos": 9862,
                                "end": 9867,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": "<p>this is the JSON string back from the Transunion service</p>\n",
                            "typeExpression": {
                                "pos": 9868,
                                "end": 9876,
                                "flags": 0,
                                "kind": 277,
                                "type": {
                                    "pos": 9869,
                                    "end": 9875,
                                    "flags": 2097152,
                                    "kind": 137
                                }
                            }
                        },
                        {
                            "tagName": {
                                "pos": 9945,
                                "end": 9952,
                                "flags": 0,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ]
                },
                {
                    "name": "processIndicativeEnrichmentResponse",
                    "args": [
                        {
                            "name": "resp",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<IIndicativeEnrichmentResponseSuccess | undefined>",
                    "typeParameters": [],
                    "line": 234,
                    "description": "<p>Process and clean the indicative enrichment response back from Transunion</p>\n",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 7455,
                                "end": 7459,
                                "flags": 0,
                                "escapedText": "resp"
                            },
                            "type": "string",
                            "tagName": {
                                "pos": 7440,
                                "end": 7445,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": "<p>this is the JSON string back from the Transunion service</p>\n",
                            "typeExpression": {
                                "pos": 7446,
                                "end": 7454,
                                "flags": 0,
                                "kind": 277,
                                "type": {
                                    "pos": 7447,
                                    "end": 7453,
                                    "flags": 2097152,
                                    "kind": 137
                                }
                            }
                        },
                        {
                            "tagName": {
                                "pos": 7523,
                                "end": 7530,
                                "flags": 0,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ]
                },
                {
                    "name": "sendEnrollRequest",
                    "args": [
                        {
                            "name": "data",
                            "type": "UpdateAppDataInput | AppDataStateModel"
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<string | undefined>",
                    "typeParameters": [],
                    "line": 649,
                    "description": "<p>Send the verified user to transunion to enroll them and receive their report</p>\n",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 21051,
                                "end": 21055,
                                "flags": 0,
                                "escapedText": "data"
                            },
                            "type": "UpdateAppDataInput | AppDataStateModel",
                            "tagName": {
                                "pos": 21024,
                                "end": 21029,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": "<p>AppData state</p>\n",
                            "typeExpression": {
                                "pos": 21030,
                                "end": 21050,
                                "flags": 0,
                                "kind": 277,
                                "type": {
                                    "pos": 21031,
                                    "end": 21049,
                                    "flags": 2097152,
                                    "kind": 161,
                                    "typeName": {
                                        "pos": 21031,
                                        "end": 21049,
                                        "flags": 2097152,
                                        "escapedText": "UpdateAppDataInput"
                                    }
                                }
                            }
                        },
                        {
                            "tagName": {
                                "pos": 21076,
                                "end": 21083,
                                "flags": 0,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ]
                },
                {
                    "name": "sendGetAuthenticationQuestions",
                    "args": [
                        {
                            "name": "data",
                            "type": "UpdateAppDataInput | AppDataStateModel"
                        },
                        {
                            "name": "ssn",
                            "type": "string",
                            "defaultValue": "''"
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<any | undefined>",
                    "typeParameters": [],
                    "line": 288,
                    "description": "<p>Send the full ssn to the Transunion backend and await the KBA questions</p>\n<ul>\n<li>questions can be actual questions or a passcode for the phone</li>\n</ul>\n",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 9214,
                                "end": 9218,
                                "flags": 0,
                                "escapedText": "data"
                            },
                            "type": "UpdateAppDataInput | AppDataStateModel",
                            "tagName": {
                                "pos": 9187,
                                "end": 9192,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": "<p>AppData state</p>\n",
                            "typeExpression": {
                                "pos": 9193,
                                "end": 9213,
                                "flags": 0,
                                "kind": 277,
                                "type": {
                                    "pos": 9194,
                                    "end": 9212,
                                    "flags": 2097152,
                                    "kind": 161,
                                    "typeName": {
                                        "pos": 9194,
                                        "end": 9212,
                                        "flags": 2097152,
                                        "escapedText": "UpdateAppDataInput"
                                    }
                                }
                            }
                        },
                        {
                            "name": "ssn",
                            "type": "string",
                            "defaultValue": "''",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "tagName": {
                                "pos": 9239,
                                "end": 9246,
                                "flags": 0,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ]
                },
                {
                    "name": "sendIndicativeEnrichment",
                    "args": [
                        {
                            "name": "data",
                            "type": "UpdateAppDataInput | AppDataStateModel"
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<any | undefined>",
                    "typeParameters": [],
                    "line": 213,
                    "description": "<p>Send the indicative enrichment message to the Transunion backend and await a response</p>\n",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 6883,
                                "end": 6887,
                                "flags": 0,
                                "escapedText": "data"
                            },
                            "type": "UpdateAppDataInput | AppDataStateModel",
                            "tagName": {
                                "pos": 6856,
                                "end": 6861,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": "<p>AppData state</p>\n",
                            "typeExpression": {
                                "pos": 6862,
                                "end": 6882,
                                "flags": 0,
                                "kind": 277,
                                "type": {
                                    "pos": 6863,
                                    "end": 6881,
                                    "flags": 2097152,
                                    "kind": 161,
                                    "typeName": {
                                        "pos": 6863,
                                        "end": 6881,
                                        "flags": 2097152,
                                        "escapedText": "UpdateAppDataInput"
                                    }
                                }
                            }
                        },
                        {
                            "tagName": {
                                "pos": 6908,
                                "end": 6915,
                                "flags": 0,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ]
                },
                {
                    "name": "sendVerifyAuthenticationQuestions",
                    "args": [
                        {
                            "name": "data",
                            "type": "UpdateAppDataInput | AppDataStateModel"
                        },
                        {
                            "name": "answers",
                            "type": "IVerifyAuthenticationAnswer[]"
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<string | undefined>",
                    "typeParameters": [],
                    "line": 623,
                    "description": "<p>Send the full ssn to the Transunion backend and await the KBA questions</p>\n<ul>\n<li>questions can be actual questions or a passcode for the phone</li>\n</ul>\n",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 20324,
                                "end": 20328,
                                "flags": 0,
                                "escapedText": "data"
                            },
                            "type": "UpdateAppDataInput | AppDataStateModel",
                            "tagName": {
                                "pos": 20297,
                                "end": 20302,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": "<p>AppData state</p>\n",
                            "typeExpression": {
                                "pos": 20303,
                                "end": 20323,
                                "flags": 0,
                                "kind": 277,
                                "type": {
                                    "pos": 20304,
                                    "end": 20322,
                                    "flags": 2097152,
                                    "kind": 161,
                                    "typeName": {
                                        "pos": 20304,
                                        "end": 20322,
                                        "flags": 2097152,
                                        "escapedText": "UpdateAppDataInput"
                                    }
                                }
                            }
                        },
                        {
                            "name": "answers",
                            "type": "IVerifyAuthenticationAnswer[]",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "tagName": {
                                "pos": 20349,
                                "end": 20356,
                                "flags": 0,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ]
                },
                {
                    "name": "updateAgencies",
                    "args": [
                        {
                            "name": "agencies",
                            "type": "AgenciesStateModel | undefined"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 430,
                    "description": "",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 13910,
                                "end": 13918,
                                "flags": 0,
                                "escapedText": "agencies"
                            },
                            "type": "AgenciesStateModel | undefined",
                            "tagName": {
                                "pos": 13904,
                                "end": 13909,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": ""
                        }
                    ]
                },
                {
                    "name": "updateAgenciesAsync",
                    "args": [
                        {
                            "name": "agencies",
                            "type": "AgenciesStateModel | null | undefined"
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<UpdateAppDataInput | null | undefined>",
                    "typeParameters": [],
                    "line": 450,
                    "description": "<p>(Promise) Takes the string of KBA questions returned by the agency service and stores them in state</p>\n<ul>\n<li>Does not store in the database as there is no need to.</li>\n</ul>\n",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "agencies",
                            "type": "AgenciesStateModel | null | undefined",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateCurrentRawAuthDetails",
                    "args": [
                        {
                            "name": "questions",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 490,
                    "description": "<p>Takes the string of KBA questions returned by the agency service and stores them in state</p>\n<ul>\n<li>Does not store in the database as there is no need to.</li>\n</ul>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 15949,
                                "end": 15958,
                                "flags": 0,
                                "escapedText": "questions"
                            },
                            "type": "string",
                            "tagName": {
                                "pos": 15934,
                                "end": 15939,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": "<p>the string of xml questions returned by Transunion or other agency</p>\n",
                            "typeExpression": {
                                "pos": 15940,
                                "end": 15948,
                                "flags": 0,
                                "kind": 277,
                                "type": {
                                    "pos": 15941,
                                    "end": 15947,
                                    "flags": 2097152,
                                    "kind": 137
                                }
                            }
                        }
                    ]
                },
                {
                    "name": "updateCurrentRawAuthDetailsAsync",
                    "args": [
                        {
                            "name": "questions",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<UpdateAppDataInput>",
                    "typeParameters": [],
                    "line": 503,
                    "description": "<p>(Promise) Takes the string of KBA questions returned by the agency service and stores them in state</p>\n<ul>\n<li>Does not store in the database as there is no need to.</li>\n</ul>\n",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 16427,
                                "end": 16436,
                                "flags": 0,
                                "escapedText": "questions"
                            },
                            "type": "string",
                            "tagName": {
                                "pos": 16412,
                                "end": 16417,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": "<p>the string of xml questions returned by Transunion or other agency</p>\n",
                            "typeExpression": {
                                "pos": 16418,
                                "end": 16426,
                                "flags": 0,
                                "kind": 277,
                                "type": {
                                    "pos": 16419,
                                    "end": 16425,
                                    "flags": 2097152,
                                    "kind": 137
                                }
                            }
                        }
                    ]
                },
                {
                    "name": "updateCurrentRawQuestions",
                    "args": [
                        {
                            "name": "questions",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 396,
                    "description": "<p>Takes the string of KBA questions returned by the agency service and stores them in state</p>\n<ul>\n<li>Does not store in the database as there is no need to.</li>\n</ul>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 12841,
                                "end": 12850,
                                "flags": 0,
                                "escapedText": "questions"
                            },
                            "type": "string",
                            "tagName": {
                                "pos": 12826,
                                "end": 12831,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": "<p>the string of xml questions returned by Transunion or other agency</p>\n",
                            "typeExpression": {
                                "pos": 12832,
                                "end": 12840,
                                "flags": 0,
                                "kind": 277,
                                "type": {
                                    "pos": 12833,
                                    "end": 12839,
                                    "flags": 2097152,
                                    "kind": 137
                                }
                            }
                        }
                    ]
                },
                {
                    "name": "updateCurrentRawQuestionsAsync",
                    "args": [
                        {
                            "name": "questions",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<UpdateAppDataInput>",
                    "typeParameters": [],
                    "line": 409,
                    "description": "<p>(Promise) Takes the string of KBA questions returned by the agency service and stores them in state</p>\n<ul>\n<li>Does not store in the database as there is no need to.</li>\n</ul>\n",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 13313,
                                "end": 13322,
                                "flags": 0,
                                "escapedText": "questions"
                            },
                            "type": "string",
                            "tagName": {
                                "pos": 13298,
                                "end": 13303,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": "<p>the string of xml questions returned by Transunion or other agency</p>\n",
                            "typeExpression": {
                                "pos": 13304,
                                "end": 13312,
                                "flags": 0,
                                "kind": 277,
                                "type": {
                                    "pos": 13305,
                                    "end": 13311,
                                    "flags": 2097152,
                                    "kind": 137
                                }
                            }
                        }
                    ]
                },
                {
                    "name": "updateStep",
                    "args": [
                        {
                            "name": "lastActive",
                            "type": "number"
                        },
                        {
                            "name": "lastComplete",
                            "type": "number"
                        },
                        {
                            "name": "started",
                            "type": "boolean",
                            "defaultValue": "true"
                        }
                    ],
                    "optional": false,
                    "returnType": "OnboardingStateModel | undefined | void",
                    "typeParameters": [],
                    "line": 139,
                    "description": "<p>Process and clean the indicative enrichment response back from Transunion</p>\n",
                    "jsdoctags": [
                        {
                            "name": "lastActive",
                            "type": "number",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "lastComplete",
                            "type": "number",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "started",
                            "type": "boolean",
                            "defaultValue": "true",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "tagName": {
                                "pos": 4632,
                                "end": 4639,
                                "flags": 0,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ]
                },
                {
                    "name": "updateTransunionIndicativeEnrichment",
                    "args": [
                        {
                            "name": "agency",
                            "type": "AgenciesInput"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 194,
                    "description": "<p>Takes the agency status and updates the state with them</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 6259,
                                "end": 6265,
                                "flags": 0,
                                "escapedText": "agency"
                            },
                            "type": "AgenciesInput",
                            "tagName": {
                                "pos": 6237,
                                "end": 6242,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": "<p>the new agency input data to write to db and state</p>\n",
                            "typeExpression": {
                                "pos": 6243,
                                "end": 6258,
                                "flags": 0,
                                "kind": 277,
                                "type": {
                                    "pos": 6244,
                                    "end": 6257,
                                    "flags": 2097152,
                                    "kind": 161,
                                    "typeName": {
                                        "pos": 6244,
                                        "end": 6257,
                                        "flags": 2097152,
                                        "escapedText": "AgenciesInput"
                                    }
                                }
                            }
                        }
                    ]
                },
                {
                    "name": "updateUserAttributes",
                    "args": [
                        {
                            "name": "attrs",
                            "type": "UserAttributesInput"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 152,
                    "description": "<p>Takes the attributes and updates the state with them</p>\n",
                    "jsdoctags": [
                        {
                            "name": "attrs",
                            "type": "UserAttributesInput",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateUserAttributesAsync",
                    "args": [
                        {
                            "name": "attrs",
                            "type": "UserAttributesInput"
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<UpdateAppDataInput>",
                    "typeParameters": [],
                    "line": 170,
                    "description": "<p>Takes the attributes and updates the state with them</p>\n",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "attrs",
                            "type": "UserAttributesInput",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "description": "",
            "sourceCode": "import { Injectable, OnDestroy } from '@angular/core';\nimport { Store } from '@ngxs/store';\nimport { OnboardingStateModel } from '@store/onboarding';\nimport * as parser from 'fast-xml-parser';\nimport * as OnboardingActions from '@store/onboarding/onboarding.actions';\nimport * as UserActions from '@store/user/user.actions';\nimport * as AgenciesActions from '@store/agencies/agencies.actions';\nimport {\n  AgenciesInput,\n  APIService,\n  UpdateAppDataInput,\n  UserAttributesInput,\n} from '@shared/services/aws/api.service';\nimport { AppDataStateModel } from '@store/app-data';\nimport { AuthService } from '@shared/services/auth/auth.service';\nimport { IGetAuthenticationQuestionsResponseSuccess } from '@shared/models/get-authorization-questions';\nimport { IIndicativeEnrichmentResponseSuccess } from '@shared/models/indicative-enrichment';\nimport { TransunionService } from '@shared/services/transunion/transunion.service';\nimport { IVerifyAuthenticationAnswer } from '@shared/interfaces/verify-authentication-answers.interface';\nimport {\n  ITransunionKBAChallengeAnswer,\n  ITransunionKBAQuestion,\n  ITransunionKBAQuestions,\n} from '@shared/interfaces/tu-kba-questions.interface';\nimport { returnNestedObject } from '@shared/utils/utils';\nimport { AgenciesStateModel } from '@store/agencies';\n\nexport enum KYCResponse {\n  Failed = 'failed',\n  Success = 'success',\n}\n\nexport enum OTPQuestion {\n  FullText = 'Please select your preferred method of Authentication?(Standard text message and voice rates apply)*</FullQuestionText',\n  PartialOne = 'preferred method of Authentication',\n  PartialTwo = 'Standard text message and voice rates apply',\n}\n\nexport enum OTPReponse {\n  FullText = 'Deliver passcode via Text Message',\n  PartialOne = 'via Text Message',\n}\n\nexport enum PassCodeQuestion {\n  FullText = 'Enter the passcode you received',\n  PartialOne = 'passcode',\n}\n\n@Injectable()\nexport class KycService {\n  constructor(\n    private api: APIService,\n    private store: Store,\n    private auth: AuthService,\n    private transunion: TransunionService\n  ) {}\n\n  /**\n   * Takes a progress step ID and sets the status to true\n   * Then updates the state\n   * @param {number} step the progress step ID\n   */\n  activateStep(step: number): void {\n    this.store\n      .dispatch(new OnboardingActions.UpdateLastActive(step))\n      .subscribe((state: { appData: AppDataStateModel }) => {\n        const input = { ...state.appData } as UpdateAppDataInput;\n        if (!input.id) {\n          this.auth.reloadCredentials();\n          return;\n        } else {\n          this.api.UpdateAppData(input); // the listener will update the state.\n        }\n      });\n  }\n\n  /**\n   * Takes a progress step ID and sets the status to false\n   * Then updates the state\n   * @param {number} step the progress step ID\n   */\n  inactivateStep(step: number): void {\n    this.store\n      .dispatch(new OnboardingActions.UpdateLastActive(step))\n      .subscribe((state: { appData: AppDataStateModel }) => {\n        const input = { ...state.appData } as UpdateAppDataInput;\n        if (!input.id) {\n          this.auth.reloadCredentials();\n          return;\n        } else {\n          this.api.UpdateAppData(input); // the listener will update the state.\n        }\n      });\n  }\n\n  /**\n   * Takes a progress step ID and sets the complete status to true\n   * Then updates the state\n   * @param {number} step the progress step ID\n   */\n  completeStep(step: number): void {\n    this.store\n      .dispatch(new OnboardingActions.UpdateLastComplete(step))\n      .subscribe((state: { appData: AppDataStateModel }) => {\n        const input = { ...state.appData } as UpdateAppDataInput;\n        if (!input.id) {\n          this.auth.reloadCredentials();\n          return;\n        } else {\n          this.api.UpdateAppData(input); // the listener will update the state.\n        }\n      });\n  }\n\n  /**\n   * Takes a progress step ID and sets the complete status to false\n   * Then updates the state\n   * @param {number} step the progress step ID\n   */\n  incompleteStep(step: number): void {\n    this.store\n      .dispatch(new OnboardingActions.UpdateLastComplete(step))\n      .subscribe((state: { appData: AppDataStateModel }) => {\n        const input = { ...state.appData } as UpdateAppDataInput;\n        if (!input.id) {\n          this.auth.reloadCredentials();\n          return;\n        } else {\n          this.api.UpdateAppData(input); // the listener will update the state.\n        }\n      });\n  }\n\n  /**\n   * Process and clean the indicative enrichment response back from Transunion\n   * @param {string} resp this is the JSON string back from the Transunion service\n   * @returns\n   */\n  updateStep(\n    lastActive: number,\n    lastComplete: number,\n    started: boolean = true\n  ): OnboardingStateModel | undefined | void {\n    const state = this.store.snapshot();\n    return { ...state.user?.onboarding, lastActive, lastComplete, started };\n  }\n\n  /**\n   * Takes the attributes and updates the state with them\n   * @param {UserAttributesInput} attributes\n   */\n  updateUserAttributes(attrs: UserAttributesInput): void {\n    this.store\n      .dispatch(new UserActions.UpdateAttributes(attrs))\n      .subscribe((state: { appData: AppDataStateModel }) => {\n        const input = { ...state.appData } as UpdateAppDataInput;\n        if (!input.id) {\n          this.auth.reloadCredentials();\n          return;\n        } else {\n          this.api.UpdateAppData(input);\n        }\n      });\n  }\n\n  /**\n   * Takes the attributes and updates the state with them\n   * @param {UserAttributesInput} attributes\n   */\n  async updateUserAttributesAsync(\n    attrs: UserAttributesInput\n  ): Promise<UpdateAppDataInput> {\n    return await new Promise((resolve, reject) => {\n      this.store\n        .dispatch(new UserActions.UpdateAttributes(attrs))\n        .subscribe((state: { appData: AppDataStateModel }) => {\n          const input = { ...state.appData } as UpdateAppDataInput;\n          if (!input.id) {\n            this.auth.reloadCredentials();\n            reject();\n            return;\n          } else {\n            this.api.UpdateAppData(input);\n            resolve(input);\n          }\n        });\n    });\n  }\n\n  /**\n   * Takes the agency status and updates the state with them\n   * @param {AgenciesInput} agency the new agency input data to write to db and state\n   */\n  updateTransunionIndicativeEnrichment(agency: AgenciesInput): void {\n    this.store\n      .dispatch(new AgenciesActions.Edit(agency))\n      .subscribe((state: { appData: AppDataStateModel }) => {\n        const input = { ...state.appData } as UpdateAppDataInput;\n        if (!input.id) {\n          this.auth.reloadCredentials();\n          return;\n        } else {\n          this.api.UpdateAppData(input);\n        }\n      });\n  }\n\n  /**\n   * Send the indicative enrichment message to the Transunion backend and await a response\n   * @param {UpdateAppDataInput} data AppData state\n   * @returns\n   */\n  async sendIndicativeEnrichment(\n    data: UpdateAppDataInput | AppDataStateModel\n  ): Promise<any | undefined> {\n    try {\n      const msg = this.transunion.createIndicativeEnrichmentPayload(data);\n      const res = await this.api.Transunion(\n        'IndicativeEnrichment',\n        JSON.stringify(msg)\n      );\n      return res ? res : undefined;\n    } catch (err) {\n      console.log('err ', err);\n      return;\n    }\n  }\n\n  /**\n   * Process and clean the indicative enrichment response back from Transunion\n   * @param {string} resp this is the JSON string back from the Transunion service\n   * @returns\n   */\n  async processIndicativeEnrichmentResponse(\n    resp: string\n  ): Promise<IIndicativeEnrichmentResponseSuccess | undefined> {\n    const enrichment: IIndicativeEnrichmentResponseSuccess = JSON.parse(\n      JSON.parse(resp)['IndicativeEnrichmentResults']\n    );\n    const responseType = returnNestedObject(enrichment, 'a:ResponseType')[\n      '_text'\n    ];\n    if (responseType === 'Success') {\n      // update indicative enrichment as success\n      await this.updateTransunionIndicativeEnrichment({\n        transunion: {\n          authenticated: false,\n          indicativeEnrichmentSuccess: true,\n        },\n      });\n      return enrichment;\n    } else {\n      return;\n    }\n  }\n\n  /**\n   * Method to send and process the indicative enrichment request and response.\n   * @param {UpdateAppDataInput} data\n   * @returns Full ssn or a failure (TODO: handle failures)\n   */\n  async getIndicativeEnrichmentResults(\n    data: UpdateAppDataInput\n  ): Promise<KYCResponse | string> {\n    let enrichmentResponse;\n    let enrichment;\n\n    try {\n      enrichmentResponse = await this.sendIndicativeEnrichment(data);\n      if (!enrichmentResponse) return KYCResponse.Failed;\n      enrichment = await this.processIndicativeEnrichmentResponse(\n        enrichmentResponse\n      );\n      if (!enrichment) return KYCResponse.Failed;\n      const ssn = returnNestedObject(enrichment, 'a:SSN')['_text'];\n      return ssn ? ssn : KYCResponse.Failed;\n    } catch {\n      return KYCResponse.Failed;\n    }\n  }\n\n  /**\n   * Send the full ssn to the Transunion backend and await the KBA questions\n   *   - questions can be actual questions or a passcode for the phone\n   * @param {UpdateAppDataInput} data AppData state\n   * @returns\n   */\n  async sendGetAuthenticationQuestions(\n    data: UpdateAppDataInput | AppDataStateModel,\n    ssn: string = ''\n  ): Promise<any | undefined> {\n    if (!ssn) return;\n    try {\n      const msg = this.transunion.createGetAuthenticationQuestionsPayload(\n        data,\n        ssn\n      );\n      const res = await this.api.Transunion(\n        'GetAuthenticationQuestions',\n        JSON.stringify(msg)\n      );\n      return res ? res : undefined;\n    } catch (err) {\n      console.log('err ', err);\n      return;\n    }\n  }\n\n  /**\n   * Process and clean the indicative enrichment response back from Transunion\n   * @param {string} resp this is the JSON string back from the Transunion service\n   * @returns\n   */\n  async processGetAutthenticationQuestionsResponse(\n    resp: string\n  ): Promise<IGetAuthenticationQuestionsResponseSuccess | undefined> {\n    const questions: IGetAuthenticationQuestionsResponseSuccess = JSON.parse(\n      JSON.parse(resp)['GetAuthenticationQuestions']\n    );\n    const responseType = returnNestedObject(questions, 'a:ResponseType')[\n      '_text'\n    ];\n    if (responseType === 'Success') {\n      const fulfillmentKey = returnNestedObject(\n        questions,\n        'a:ServiceBundleFulfillmentKey'\n      )['_text'];\n      console.log('fulfillmentkey', fulfillmentKey);\n      // update indicative enrichment as success\n      await this.updateTransunionIndicativeEnrichment({\n        transunion: {\n          authenticated: false,\n          indicativeEnrichmentSuccess: true,\n          getAuthenticationQuestionsSuccess: true,\n          serviceBundleFulfillmentKey: fulfillmentKey,\n        },\n      });\n      // now do the authentication\n      return questions;\n    } else {\n      return;\n    }\n  }\n\n  /**\n   * Method to send and process the authentication questions request and response\n   *   - Does not verify the accuracy of the methods...see (sendVerifyAuthenticationQuestions)\n   * @param {UpdateAppDataInput} data\n   * @returns\n   */\n  async getGetAuthenticationQuestionsResults(\n    data: UpdateAppDataInput\n  ): Promise<KYCResponse | string> {\n    let questionResponse;\n    let questions;\n    const ssn = data.user?.userAttributes?.ssn?.full;\n    if (!ssn) return KYCResponse.Failed;\n    // GetAuthorizationQuestions response from TU service\n    try {\n      questionResponse = await this.sendGetAuthenticationQuestions(data, ssn);\n      if (!questionResponse) return KYCResponse.Failed;\n      questions = await this.processGetAutthenticationQuestionsResponse(\n        questionResponse\n      );\n      if (!questions) return KYCResponse.Failed;\n      // Sucess...parse questions and pass to question component\n      const questionXml = returnNestedObject(questions, 'a:Questions');\n      const xmlText = questionXml ? questionXml['_text'] : null;\n      if (!xmlText) return KYCResponse.Failed;\n      await this.updateCurrentRawQuestionsAsync(xmlText || '');\n      return xmlText;\n    } catch {\n      return KYCResponse.Failed;\n    }\n  }\n\n  /**\n   * This parses the xml string and returns it as the TU question format\n   * @param {string} xml xml string in the TU question schema\n   * @returns\n   */\n  parseCurrentRawQuestions(xml: string): ITransunionKBAQuestions {\n    const clean = xml\n      .replace(/&lt;/g, '<')\n      .replace(/&gt;/g, '>')\n      .replace(/&#xD;/g, '');\n    const questions: ITransunionKBAQuestions = parser.parse(clean);\n    return questions;\n  }\n\n  /**\n   * Takes the string of KBA questions returned by the agency service and stores them in state\n   *   - Does not store in the database as there is no need to.\n   * @param {string} questions the string of xml questions returned by Transunion or other agency\n   */\n  updateCurrentRawQuestions(questions: string): void {\n    this.store.dispatch(\n      new AgenciesActions.EditTransunionQuestions({\n        currentRawQuestions: questions,\n      })\n    );\n  }\n\n  /**\n   * (Promise) Takes the string of KBA questions returned by the agency service and stores them in state\n   *   - Does not store in the database as there is no need to.\n   * @param {string} questions the string of xml questions returned by Transunion or other agency\n   */\n  async updateCurrentRawQuestionsAsync(\n    questions: string\n  ): Promise<UpdateAppDataInput> {\n    return await new Promise((resolve, reject) => {\n      this.store\n        .dispatch(\n          new AgenciesActions.EditTransunionQuestions({\n            currentRawQuestions: questions,\n          })\n        )\n        .subscribe((state: { appData: AppDataStateModel }) => {\n          const input = { ...state.appData } as UpdateAppDataInput;\n          resolve(input);\n        });\n    });\n  }\n\n  /**\n   *\n   * @param agencies\n   */\n  updateAgencies(agencies: AgenciesStateModel | undefined): void {\n    if (!agencies) return;\n    this.store\n      .dispatch(new AgenciesActions.Edit(agencies))\n      .subscribe((state: { appData: AppDataStateModel }) => {\n        const input = { ...state.appData } as UpdateAppDataInput;\n        if (!input.id) {\n          this.auth.reloadCredentials();\n          return;\n        } else {\n          this.api.UpdateAppData(input);\n        }\n      });\n  }\n\n  /**\n   * (Promise) Takes the string of KBA questions returned by the agency service and stores them in state\n   *   - Does not store in the database as there is no need to.\n   * @param {string} questions the string of xml questions returned by Transunion or other agency\n   */\n  async updateAgenciesAsync(\n    agencies: AgenciesStateModel | null | undefined\n  ): Promise<UpdateAppDataInput | null | undefined> {\n    if (!agencies) return;\n    return await new Promise((resolve, reject) => {\n      this.store\n        .dispatch(new AgenciesActions.Edit(agencies))\n        .subscribe((state: { appData: AppDataStateModel }) => {\n          const input = { ...state.appData } as UpdateAppDataInput;\n          if (!input.id) {\n            this.auth.reloadCredentials();\n            reject();\n            return;\n          } else {\n            this.api.UpdateAppData(input);\n            resolve(input);\n          }\n        });\n    });\n  }\n\n  /**\n   * This parses the xml string and returns it as the TU question format\n   * @param {string} xml xml string in the TU question schema\n   * @returns\n   */\n  parseCurrentRawAuthDetails(xml: string): ITransunionKBAChallengeAnswer {\n    const clean = xml\n      .replace(/&lt;/g, '<')\n      .replace(/&gt;/g, '>')\n      .replace(/&#xD;/g, '');\n    const questions: ITransunionKBAChallengeAnswer = parser.parse(clean);\n    return questions;\n  }\n\n  /**\n   * Takes the string of KBA questions returned by the agency service and stores them in state\n   *   - Does not store in the database as there is no need to.\n   * @param {string} questions the string of xml questions returned by Transunion or other agency\n   */\n  updateCurrentRawAuthDetails(questions: string): void {\n    this.store.dispatch(\n      new AgenciesActions.EditTransunionAuthDetails({\n        currentRawAuthDetails: questions,\n      })\n    );\n  }\n\n  /**\n   * (Promise) Takes the string of KBA questions returned by the agency service and stores them in state\n   *   - Does not store in the database as there is no need to.\n   * @param {string} questions the string of xml questions returned by Transunion or other agency\n   */\n  async updateCurrentRawAuthDetailsAsync(\n    questions: string\n  ): Promise<UpdateAppDataInput> {\n    return await new Promise((resolve, reject) => {\n      this.store\n        .dispatch(\n          new AgenciesActions.EditTransunionAuthDetails({\n            currentRawAuthDetails: questions,\n          })\n        )\n        .subscribe((state: { appData: AppDataStateModel }) => {\n          const input = { ...state.appData } as UpdateAppDataInput;\n          resolve(input);\n        });\n    });\n  }\n\n  /**\n   * Runs a series of tests to see if the question is a OTP\n   * @param {ITransunionKBAQuestions} questions\n   * @returns\n   */\n  getOTPQuestion(\n    questions: ITransunionKBAQuestions\n  ): ITransunionKBAQuestion | undefined {\n    const series: ITransunionKBAQuestion[] | ITransunionKBAQuestion =\n      questions?.ChallengeConfigurationType?.MultiChoiceQuestion instanceof\n      Array\n        ? questions?.ChallengeConfigurationType?.MultiChoiceQuestion\n        : new Array(questions?.ChallengeConfigurationType?.MultiChoiceQuestion);\n    return series.find(\n      (q) =>\n        q.FullQuestionText === OTPQuestion.FullText ||\n        q.FullQuestionText.indexOf(OTPQuestion.PartialOne) >= 0 ||\n        q.FullQuestionText.indexOf(OTPQuestion.PartialTwo) >= 0\n    );\n  }\n\n  /**\n   * Runs a series of test to find the 'Send text message' answer for OTP\n   * @param {ITransunionKBAQuestion} question\n   * @returns\n   */\n  getOTPSendTextAnswer(\n    question: ITransunionKBAQuestion\n  ): IVerifyAuthenticationAnswer {\n    const answerChoice =\n      question?.AnswerChoice instanceof Array\n        ? question?.AnswerChoice\n        : new Array(question?.AnswerChoice);\n\n    let answer = answerChoice.find(\n      (c) =>\n        c.AnswerChoiceText === OTPReponse.FullText ||\n        c.AnswerChoiceText.indexOf(OTPReponse.PartialOne) >= 0\n    );\n    return {\n      VerifyChallengeAnswersRequestMultiChoiceQuestion: {\n        QuestionId: question?.QuestionId,\n        SelectedAnswerChoice: {\n          AnswerChoiceId: answer?.AnswerChoiceId || '',\n        },\n      },\n    };\n  }\n\n  /**\n   * Runs a series of tests to see if the question is for the passcode\n   * @param {ITransunionKBAQuestions} questions\n   * @returns\n   */\n  getPassCodeQuestion(\n    questions: ITransunionKBAQuestions\n  ): ITransunionKBAQuestion | undefined {\n    const series: ITransunionKBAQuestion[] =\n      questions.ChallengeConfigurationType.MultiChoiceQuestion instanceof Array\n        ? questions.ChallengeConfigurationType.MultiChoiceQuestion\n        : new Array(questions.ChallengeConfigurationType.MultiChoiceQuestion);\n    return series.find(\n      (q) =>\n        q.FullQuestionText === PassCodeQuestion.FullText ||\n        q.FullQuestionText.indexOf(PassCodeQuestion.PartialOne) >= 0\n    );\n  }\n\n  /**\n   * Runs a series of test to find the 'Send text message' answer for OTP\n   * @param {ITransunionKBAQuestion} question\n   * @returns\n   */\n  getPassCodeAnswer(\n    question: ITransunionKBAQuestion,\n    input: string\n  ): IVerifyAuthenticationAnswer {\n    const answerChoice =\n      question.AnswerChoice instanceof Array\n        ? question.AnswerChoice\n        : new Array(question.AnswerChoice);\n    const answer = answerChoice.find(\n      (c) =>\n        c.AnswerChoiceText === PassCodeQuestion.FullText ||\n        c.AnswerChoiceText.indexOf(PassCodeQuestion.PartialOne) >= 0\n    );\n    return {\n      VerifyChallengeAnswersRequestMultiChoiceQuestion: {\n        QuestionId: question?.QuestionId,\n        SelectedAnswerChoice: {\n          AnswerChoiceId: answer?.AnswerChoiceId || '',\n          UserInputAnswer: input,\n        },\n      },\n    };\n  }\n\n  /**\n   * Send the full ssn to the Transunion backend and await the KBA questions\n   *   - questions can be actual questions or a passcode for the phone\n   * @param {UpdateAppDataInput} data AppData state\n   * @returns\n   */\n  async sendVerifyAuthenticationQuestions(\n    data: UpdateAppDataInput | AppDataStateModel,\n    answers: IVerifyAuthenticationAnswer[]\n  ): Promise<string | undefined> {\n    if (!answers.length) return;\n    try {\n      const msg = this.transunion.createVerifyAuthenticationQuestionsPayload(\n        data,\n        answers\n      );\n      const res = await this.api.Transunion(\n        'VerifyAuthenticationQuestions',\n        JSON.stringify(msg)\n      );\n      return res ? res : undefined;\n    } catch (err) {\n      console.log('err ', err);\n      return;\n    }\n  }\n\n  /**\n   * Send the verified user to transunion to enroll them and receive their report\n   * @param {UpdateAppDataInput} data AppData state\n   * @returns\n   */\n  async sendEnrollRequest(\n    data: UpdateAppDataInput | AppDataStateModel\n  ): Promise<string | undefined> {\n    try {\n      const msg = this.transunion.createEnrollPayload(data);\n      const res = await this.api.Transunion('Enroll', JSON.stringify(msg));\n      return res ? res : undefined;\n    } catch (err) {\n      console.log('err ', err);\n      return;\n    }\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "api",
                        "type": "APIService"
                    },
                    {
                        "name": "store",
                        "type": "Store"
                    },
                    {
                        "name": "auth",
                        "type": "AuthService"
                    },
                    {
                        "name": "transunion",
                        "type": "TransunionService"
                    }
                ],
                "line": 50,
                "jsdoctags": [
                    {
                        "name": "api",
                        "type": "APIService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "store",
                        "type": "Store",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "auth",
                        "type": "AuthService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "transunion",
                        "type": "TransunionService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "OnboardingService",
            "id": "injectable-OnboardingService-ea3d60789ea8ff2e8dd6b50ea2f2cdad",
            "file": "src/app/layouts/onboarding/onboarding.service.ts",
            "properties": [
                {
                    "name": "onboarding",
                    "defaultValue": "{} as OnboardingStateModel",
                    "type": "OnboardingStateModel",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "onboarding$",
                    "defaultValue": "this.store.select(\n    OnboardingSelectors.getOnboarding\n  )",
                    "type": "Observable<OnboardingStateModel>",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "onboardingSub$",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        112
                    ]
                }
            ],
            "methods": [
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26
                }
            ],
            "description": "",
            "sourceCode": "import { Injectable, OnDestroy } from '@angular/core';\nimport { Store } from '@ngxs/store';\nimport { Observable, Subscription } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport { OnboardingStateModel } from '@store/onboarding';\nimport { OnboardingSelectors } from '@store/onboarding/onboarding.selectors';\n\n@Injectable()\nexport class OnboardingService implements OnDestroy {\n  private onboarding: OnboardingStateModel = {} as OnboardingStateModel;\n  private onboarding$: Observable<OnboardingStateModel> = this.store.select(\n    OnboardingSelectors.getOnboarding\n  );\n  private onboardingSub$: Subscription;\n\n  constructor(private store: Store) {\n    this.onboardingSub$ = this.onboarding$\n      .pipe(\n        filter((onboarding: OnboardingStateModel) => onboarding !== undefined)\n      )\n      .subscribe((onboarding: OnboardingStateModel) => {\n        this.onboarding = onboarding;\n      });\n  }\n\n  ngOnDestroy(): void {\n    if (this.onboardingSub$) this.onboardingSub$.unsubscribe();\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store"
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "OnboardingState",
            "id": "injectable-OnboardingState-252eefafd37b799c05572c2c685228d3",
            "file": "src/app/store/onboarding/onboarding.state.ts",
            "properties": [],
            "methods": [
                {
                    "name": "addOnboarding",
                    "args": [
                        {
                            "name": "ctx",
                            "type": "StateContext<OnboardingStateModel>"
                        },
                        {
                            "type": "OnboardingActions.Add"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "decorators": [
                        {
                            "name": "Action",
                            "stringifiedArguments": "OnboardingActions.Add"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "ctx",
                            "type": "StateContext<OnboardingStateModel>",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "type": "OnboardingActions.Add",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "deleteOnboarding",
                    "args": [
                        {
                            "name": "ctx",
                            "type": "StateContext<OnboardingStateModel>"
                        },
                        {
                            "type": "OnboardingActions.Delete"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "decorators": [
                        {
                            "name": "Action",
                            "stringifiedArguments": "OnboardingActions.Delete"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "ctx",
                            "type": "StateContext<OnboardingStateModel>",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "type": "OnboardingActions.Delete",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateLastActive",
                    "args": [
                        {
                            "name": "ctx",
                            "type": "StateContext<OnboardingStateModel>"
                        },
                        {
                            "type": "OnboardingActions.UpdateLastActive"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 50,
                    "decorators": [
                        {
                            "name": "Action",
                            "stringifiedArguments": "OnboardingActions.UpdateLastActive"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "ctx",
                            "type": "StateContext<OnboardingStateModel>",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "type": "OnboardingActions.UpdateLastActive",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateLastComplete",
                    "args": [
                        {
                            "name": "ctx",
                            "type": "StateContext<OnboardingStateModel>"
                        },
                        {
                            "type": "OnboardingActions.UpdateLastComplete"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 60,
                    "decorators": [
                        {
                            "name": "Action",
                            "stringifiedArguments": "OnboardingActions.UpdateLastComplete"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "ctx",
                            "type": "StateContext<OnboardingStateModel>",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "type": "OnboardingActions.UpdateLastComplete",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateOnboaring",
                    "args": [
                        {
                            "name": "ctx",
                            "type": "StateContext<OnboardingStateModel>"
                        },
                        {
                            "type": "OnboardingActions.Edit"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "decorators": [
                        {
                            "name": "Action",
                            "stringifiedArguments": "OnboardingActions.Edit"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "ctx",
                            "type": "StateContext<OnboardingStateModel>",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "type": "OnboardingActions.Edit",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "description": "",
            "sourceCode": "import { State, Action, StateContext } from '@ngxs/store';\nimport { Injectable } from '@angular/core';\nimport * as OnboardingActions from './onboarding.actions';\nimport { OnboardingStateModel } from '@store/onboarding/onboarding.model';\n\n@State<OnboardingStateModel>({\n  name: 'onboarding',\n  defaults: {\n    lastActive: -1,\n    lastComplete: -1,\n    started: false,\n  },\n})\n@Injectable()\nexport class OnboardingState {\n  constructor() {}\n\n  @Action(OnboardingActions.Add)\n  addOnboarding(\n    ctx: StateContext<OnboardingStateModel>,\n    { payload }: OnboardingActions.Add\n  ): void {\n    ctx.patchState({\n      ...payload,\n    });\n  }\n\n  @Action(OnboardingActions.Edit)\n  updateOnboaring(\n    ctx: StateContext<OnboardingStateModel>,\n    { payload }: OnboardingActions.Edit\n  ): void {\n    ctx.patchState({\n      ...payload,\n    });\n  }\n\n  @Action(OnboardingActions.Delete)\n  deleteOnboarding(\n    ctx: StateContext<OnboardingStateModel>,\n    {}: OnboardingActions.Delete\n  ): void {\n    const payload = new OnboardingStateModel();\n    ctx.patchState({\n      ...payload,\n    });\n  }\n\n  @Action(OnboardingActions.UpdateLastActive)\n  updateLastActive(\n    ctx: StateContext<OnboardingStateModel>,\n    { payload }: OnboardingActions.UpdateLastActive\n  ): void {\n    ctx.patchState({\n      lastActive: payload,\n    });\n  }\n\n  @Action(OnboardingActions.UpdateLastComplete)\n  updateLastComplete(\n    ctx: StateContext<OnboardingStateModel>,\n    { payload }: OnboardingActions.UpdateLastComplete\n  ): void {\n    ctx.patchState({\n      lastComplete: payload,\n    });\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 15
            },
            "type": "injectable"
        },
        {
            "name": "PreferencesState",
            "id": "injectable-PreferencesState-eaca467c0411a50cc5dbbe8b42d6b993",
            "file": "src/app/store/preferences/preferences.state.ts",
            "properties": [],
            "methods": [
                {
                    "name": "addUser",
                    "args": [
                        {
                            "name": "ctx",
                            "type": "StateContext<PreferencesStateModel>"
                        },
                        {
                            "type": "PreferencesActions.Add"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "decorators": [
                        {
                            "name": "Action",
                            "stringifiedArguments": "PreferencesActions.Add"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "ctx",
                            "type": "StateContext<PreferencesStateModel>",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "type": "PreferencesActions.Add",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "deleteUser",
                    "args": [
                        {
                            "name": "ctx",
                            "type": "StateContext<PreferencesStateModel>"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 44,
                    "decorators": [
                        {
                            "name": "Action",
                            "stringifiedArguments": "PreferencesActions.Delete"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "ctx",
                            "type": "StateContext<PreferencesStateModel>",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateUser",
                    "args": [
                        {
                            "name": "ctx",
                            "type": "StateContext<PreferencesStateModel>"
                        },
                        {
                            "type": "PreferencesActions.Edit"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "decorators": [
                        {
                            "name": "Action",
                            "stringifiedArguments": "PreferencesActions.Edit"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "ctx",
                            "type": "StateContext<PreferencesStateModel>",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "type": "PreferencesActions.Edit",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "description": "",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { State, Action, StateContext } from '@ngxs/store';\nimport * as PreferencesActions from './preferences.actions';\nimport { PreferencesStateModel } from '@store/preferences/preferences.model';\nimport { CreditReportGroups } from '@shared/data/credit-report';\n\n@State<PreferencesStateModel>({\n  name: 'preferences',\n  defaults: {\n    showAllAccounts: {\n      [CreditReportGroups.CreditCards]: true,\n      [CreditReportGroups.CollectionsAccounts]: true,\n      [CreditReportGroups.InstallmentLoans]: true,\n      [CreditReportGroups.Mortgages]: true,\n    },\n  },\n})\n@Injectable()\nexport class PreferencesState {\n  constructor() {}\n\n  @Action(PreferencesActions.Add)\n  addUser(\n    ctx: StateContext<PreferencesStateModel>,\n    { payload }: PreferencesActions.Add\n  ) {\n    const state = ctx.getState();\n    ctx.patchState({\n      ...payload,\n    });\n  }\n\n  @Action(PreferencesActions.Edit)\n  updateUser(\n    ctx: StateContext<PreferencesStateModel>,\n    { payload }: PreferencesActions.Edit\n  ) {\n    ctx.patchState({\n      ...payload,\n    });\n  }\n\n  @Action(PreferencesActions.Delete)\n  deleteUser(ctx: StateContext<PreferencesStateModel>) {\n    const payload = new PreferencesStateModel();\n    ctx.patchState({\n      ...payload,\n    });\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 19
            },
            "type": "injectable"
        },
        {
            "name": "SyncService",
            "id": "injectable-SyncService-3fbe1c6654ff917e5c4356c70f7d5db1",
            "file": "src/app/shared/services/sync/sync.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "cleanBackendData",
                    "args": [
                        {
                            "name": "data",
                            "type": "GetAppDataQuery"
                        }
                    ],
                    "optional": false,
                    "returnType": "AppDataStateModel",
                    "typeParameters": [],
                    "line": 177,
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "GetAppDataQuery",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "hallmonitor",
                    "args": [
                        {
                            "name": "creds",
                            "type": "ICredentials"
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<void>",
                    "typeParameters": [],
                    "line": 59,
                    "description": "<p>Hall monitor. Checks the user and tells them where to go when they come back\n   to the app for the first and subsequent times.\n   Called when:\n    1. User signs in\n    2. User refreshes (and auth service reinitiates via Auth.currentCredentials())</p>\n",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "creds",
                            "type": "ICredentials",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "tagName": {
                                "pos": 2077,
                                "end": 2084,
                                "flags": 0,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ]
                },
                {
                    "name": "initAppData",
                    "args": [
                        {
                            "name": "creds",
                            "type": "ICredentials"
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<CreateAppDataMutation | undefined>",
                    "typeParameters": [],
                    "line": 82,
                    "description": "<p>Seed the database with the basic credentials when the user signs up</p>\n",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 2932,
                                "end": 2937,
                                "flags": 0,
                                "escapedText": "creds"
                            },
                            "type": "ICredentials",
                            "tagName": {
                                "pos": 2911,
                                "end": 2916,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": "",
                            "typeExpression": {
                                "pos": 2917,
                                "end": 2931,
                                "flags": 0,
                                "kind": 277,
                                "type": {
                                    "pos": 2918,
                                    "end": 2930,
                                    "flags": 2097152,
                                    "kind": 161,
                                    "typeName": {
                                        "pos": 2918,
                                        "end": 2930,
                                        "flags": 2097152,
                                        "escapedText": "ICredentials"
                                    }
                                }
                            }
                        }
                    ]
                },
                {
                    "name": "routeUser",
                    "args": [
                        {
                            "name": "lastComplete",
                            "type": "number"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 126,
                    "description": "<p>Takes the last completed step by the user and routes them to\n   where they left off if they haven&#39;t finishd onboarding</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 4159,
                                "end": 4171,
                                "flags": 0,
                                "escapedText": "lastComplete"
                            },
                            "type": "number",
                            "tagName": {
                                "pos": 4144,
                                "end": 4149,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": "",
                            "typeExpression": {
                                "pos": 4150,
                                "end": 4158,
                                "flags": 0,
                                "kind": 277,
                                "type": {
                                    "pos": 4151,
                                    "end": 4157,
                                    "flags": 2097152,
                                    "kind": 134
                                }
                            }
                        }
                    ]
                },
                {
                    "name": "syncDBDownToState",
                    "args": [
                        {
                            "name": "id",
                            "type": "string"
                        },
                        {
                            "name": "payload",
                            "type": "AppDataStateModel",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<AppDataStateModel>",
                    "typeParameters": [],
                    "line": 153,
                    "description": "<p>Update the state with updated db data</p>\n<ul>\n<li>will use the provided state or if none provided,\nwill select the state from the DB</li>\n</ul>\n",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 4839,
                                "end": 4841,
                                "flags": 0,
                                "escapedText": "id"
                            },
                            "type": "string",
                            "tagName": {
                                "pos": 4824,
                                "end": 4829,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": "<p>user id</p>\n",
                            "typeExpression": {
                                "pos": 4830,
                                "end": 4838,
                                "flags": 0,
                                "kind": 277,
                                "type": {
                                    "pos": 4831,
                                    "end": 4837,
                                    "flags": 2097152,
                                    "kind": 137
                                }
                            }
                        },
                        {
                            "name": {
                                "pos": 4882,
                                "end": 4889,
                                "flags": 0,
                                "escapedText": "payload"
                            },
                            "type": "AppDataStateModel",
                            "optional": true,
                            "tagName": {
                                "pos": 4856,
                                "end": 4861,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": "<p>(optional)</p>\n",
                            "typeExpression": {
                                "pos": 4862,
                                "end": 4881,
                                "flags": 0,
                                "kind": 277,
                                "type": {
                                    "pos": 4863,
                                    "end": 4880,
                                    "flags": 2097152,
                                    "kind": 161,
                                    "typeName": {
                                        "pos": 4863,
                                        "end": 4880,
                                        "flags": 2097152,
                                        "escapedText": "AppDataStateModel"
                                    }
                                }
                            }
                        }
                    ]
                }
            ],
            "description": "",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { ICredentials } from '@aws-amplify/core';\nimport { Store } from '@ngxs/store';\nimport {\n  APIService,\n  CreateAppDataInput,\n  CreateAppDataMutation,\n  GetAppDataQuery,\n  UpdateAppDataInput,\n} from '@shared/services/aws/api.service';\nimport * as AppDataActions from '@store/app-data/app-data.actions';\nimport { AppDataSelectors, AppDataStateModel } from '@store/app-data';\nimport { deleteKeyNestedObject } from '@shared/utils/utils';\nimport { rejects } from 'assert';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SyncService {\n  // apiCreateListener$: ZenObservable.Subscription;\n  // apiUpdateListener$: ZenObservable.Subscription;\n  // apiDeleteListener$: ZenObservable.Subscription;\n  constructor(\n    private api: APIService,\n    private store: Store,\n    private router: Router\n  ) {\n    // this.apiCreateListener$ = this.api.OnCreateAppDataListener.subscribe(\n    //   (resp: any) => {\n    //     // bad data type defined for response...see this issue: https://github.com/aws-amplify/amplify-cli/issues/5284\n    //     // const data: any = resp.value?.data?.onCreateAppData;\n    //     // console.log('on create listener', data);\n    //   }\n    // );\n    // this.apiUpdateListener$ = this.api.OnUpdateAppDataListener.subscribe(\n    //   (resp: any) => {\n    //     // update state\n    //     // const data: any = resp.value?.data?.onUpdateAppData;\n    //     // console.log('on update listener', data);\n    //   }\n    // );\n    // this.apiDeleteListener$ = this.api.OnDeleteAppDataListener.subscribe(\n    //   (resp: any) => {\n    //     // const data: any = resp.value?.data?.onDeleteAppData;\n    //     // console.log('on create listener', data);\n    //   }\n    // );\n  }\n\n  /**\n   * Hall monitor. Checks the user and tells them where to go when they come back\n   *   to the app for the first and subsequent times.\n   *   Called when:\n   *    1. User signs in\n   *    2. User refreshes (and auth service reinitiates via Auth.currentCredentials())\n   * @returns\n   */\n  async hallmonitor(creds: ICredentials): Promise<void> {\n    console.log('calling hallmonitor');\n    const { identityId: id } = creds;\n    console.log('id', id);\n    const data = await this.api.GetAppData(id); // check database for data\n    if (!data) {\n      // new user...seed database...and send them to onboarding\n      await this.initAppData({ identityId: id } as ICredentials);\n      this.routeUser(-1);\n    } else {\n      // existing user...check where last left off\n      this.syncDBDownToState(id).then((state: AppDataStateModel) => {\n        console.log('synching database to state', state);\n        const lastComplete = state.user?.onboarding?.lastComplete || -1;\n        this.routeUser(lastComplete);\n      });\n    }\n  }\n\n  /**\n   * Seed the database with the basic credentials when the user signs up\n   * @param {ICredentials} creds\n   */\n  async initAppData(\n    creds: ICredentials\n  ): Promise<CreateAppDataMutation | undefined> {\n    try {\n      const input: CreateAppDataInput = {\n        id: creds.identityId,\n        user: {\n          id: creds.identityId,\n          onboarding: {\n            lastActive: 0,\n            lastComplete: -1,\n            started: true,\n          },\n        },\n        agencies: {\n          transunion: { authenticated: false },\n          experian: { authenticated: false },\n          equifax: { authenticated: false },\n        },\n        preferences: {\n          showAllAccounts: {\n            creditCards: false,\n            collectionsAccounts: false,\n            installmentLoans: false,\n            mortgages: false,\n          },\n        },\n      };\n      console.log('input', input);\n      const data = await this.api.CreateAppData(input);\n      const clean = this.cleanBackendData(data);\n      await this.store.dispatch(new AppDataActions.Add(clean));\n      return data;\n    } catch (err) {\n      console.log('initApp error', err);\n      return;\n    }\n  }\n\n  /**\n   * Takes the last completed step by the user and routes them to\n   *   where they left off if they haven't finishd onboarding\n   * @param {number} lastComplete\n   */\n  routeUser(lastComplete: number): void {\n    switch (lastComplete) {\n      case -1:\n        this.router.navigate(['/onboarding/name']);\n        break;\n      case 0:\n        this.router.navigate(['/onboarding/address']);\n        break;\n      case 1:\n        this.router.navigate(['/onboarding/identity']);\n        break;\n      case 2:\n        this.router.navigate(['/onboarding/verify']);\n        break;\n      default:\n        // nothing to do, stay on same route\n        break;\n    }\n  }\n\n  /**\n   * Update the state with updated db data\n   *   - will use the provided state or if none provided,\n   *     will select the state from the DB\n   * @param {string} id user id\n   * @param {AppDataStateModel} payload (optional)\n   */\n  async syncDBDownToState(\n    id: string,\n    payload?: AppDataStateModel\n  ): Promise<AppDataStateModel> {\n    console.log('payload in sync db', payload);\n    if (payload) {\n      console.log('editing state with provided payload');\n      this.store.dispatch(new AppDataActions.Edit(payload));\n      return payload;\n    }\n    // no payload need to get the id\n    try {\n      const raw = await this.api.GetAppData(id);\n      const data = this.cleanBackendData(raw);\n      return new Promise((resolve, reject) => {\n        this.store.dispatch(new AppDataActions.Edit(data)).subscribe((_) => {\n          resolve(data);\n        });\n      });\n    } catch (err) {\n      throw 'Error syncing db to state';\n    }\n  }\n\n  cleanBackendData(data: GetAppDataQuery): AppDataStateModel {\n    let clean = deleteKeyNestedObject(data, '__typename');\n    delete clean.createdAt; // this is a graphql managed field\n    delete clean.updatedAt; // this is a graphql managed field\n    delete clean.owner; // this is a graphql managed field\n    return clean;\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "api",
                        "type": "APIService"
                    },
                    {
                        "name": "store",
                        "type": "Store"
                    },
                    {
                        "name": "router",
                        "type": "Router"
                    }
                ],
                "line": 20,
                "jsdoctags": [
                    {
                        "name": "api",
                        "type": "APIService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "store",
                        "type": "Store",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "TransunionService",
            "id": "injectable-TransunionService-158b91d67448f9d28c0e7f786b5b5ef3",
            "file": "src/app/shared/services/transunion/transunion.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "createEnrollPayload",
                    "args": [
                        {
                            "name": "data",
                            "type": "UpdateAppDataInput | AppDataStateModel"
                        }
                    ],
                    "optional": false,
                    "returnType": "IEnrollRequest | undefined",
                    "typeParameters": [],
                    "line": 154,
                    "description": "<p>Genarates the message payload for TU service</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 4826,
                                "end": 4830,
                                "flags": 0,
                                "escapedText": "data"
                            },
                            "type": "UpdateAppDataInput | AppDataStateModel",
                            "tagName": {
                                "pos": 4778,
                                "end": 4783,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": "",
                            "typeExpression": {
                                "pos": 4784,
                                "end": 4825,
                                "flags": 0,
                                "kind": 277,
                                "type": {
                                    "pos": 4785,
                                    "end": 4824,
                                    "flags": 2097152,
                                    "kind": 168,
                                    "types": [
                                        {
                                            "pos": 4785,
                                            "end": 4804,
                                            "flags": 2097152,
                                            "kind": 161,
                                            "typeName": {
                                                "pos": 4785,
                                                "end": 4804,
                                                "flags": 2097152,
                                                "escapedText": "UpdateAppDataInput"
                                            }
                                        },
                                        {
                                            "pos": 4806,
                                            "end": 4824,
                                            "flags": 2097152,
                                            "kind": 161,
                                            "typeName": {
                                                "pos": 4806,
                                                "end": 4824,
                                                "flags": 2097152,
                                                "escapedText": "AppDataStateModel"
                                            }
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "tagName": {
                                "pos": 4837,
                                "end": 4844,
                                "flags": 0,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ]
                },
                {
                    "name": "createGetAuthenticationQuestionsPayload",
                    "args": [
                        {
                            "name": "data",
                            "type": "UpdateAppDataInput | AppDataStateModel"
                        },
                        {
                            "name": "ssn",
                            "type": "string",
                            "defaultValue": "''"
                        }
                    ],
                    "optional": false,
                    "returnType": "IGetAuthenticationQuestionsMsg | undefined",
                    "typeParameters": [],
                    "line": 74,
                    "description": "<p>Generates the message payload for TU services</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 2418,
                                "end": 2422,
                                "flags": 0,
                                "escapedText": "data"
                            },
                            "type": "UpdateAppDataInput | AppDataStateModel",
                            "tagName": {
                                "pos": 2371,
                                "end": 2376,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": "",
                            "typeExpression": {
                                "pos": 2377,
                                "end": 2417,
                                "flags": 0,
                                "kind": 277,
                                "type": {
                                    "pos": 2378,
                                    "end": 2416,
                                    "flags": 2097152,
                                    "kind": 168,
                                    "types": [
                                        {
                                            "pos": 2378,
                                            "end": 2396,
                                            "flags": 2097152,
                                            "kind": 161,
                                            "typeName": {
                                                "pos": 2378,
                                                "end": 2396,
                                                "flags": 2097152,
                                                "escapedText": "UpdateAppDataInput"
                                            }
                                        },
                                        {
                                            "pos": 2398,
                                            "end": 2416,
                                            "flags": 2097152,
                                            "kind": 161,
                                            "typeName": {
                                                "pos": 2398,
                                                "end": 2416,
                                                "flags": 2097152,
                                                "escapedText": "AppDataStateModel"
                                            }
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "name": {
                                "pos": 2444,
                                "end": 2447,
                                "flags": 0,
                                "escapedText": "ssn"
                            },
                            "type": "string",
                            "defaultValue": "''",
                            "tagName": {
                                "pos": 2429,
                                "end": 2434,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": "",
                            "typeExpression": {
                                "pos": 2435,
                                "end": 2443,
                                "flags": 0,
                                "kind": 277,
                                "type": {
                                    "pos": 2436,
                                    "end": 2442,
                                    "flags": 2097152,
                                    "kind": 137
                                }
                            }
                        },
                        {
                            "tagName": {
                                "pos": 2454,
                                "end": 2461,
                                "flags": 0,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ]
                },
                {
                    "name": "createIndicativeEnrichmentPayload",
                    "args": [
                        {
                            "name": "data",
                            "type": "UpdateAppDataInput | AppDataStateModel"
                        }
                    ],
                    "optional": false,
                    "returnType": "IIndicativeEnrichmentMsg | undefined",
                    "typeParameters": [],
                    "line": 21,
                    "description": "<p>Generates the message payload for TU services</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 852,
                                "end": 856,
                                "flags": 0,
                                "escapedText": "data"
                            },
                            "type": "UpdateAppDataInput | AppDataStateModel",
                            "tagName": {
                                "pos": 805,
                                "end": 810,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": "",
                            "typeExpression": {
                                "pos": 811,
                                "end": 851,
                                "flags": 0,
                                "kind": 277,
                                "type": {
                                    "pos": 812,
                                    "end": 850,
                                    "flags": 2097152,
                                    "kind": 168,
                                    "types": [
                                        {
                                            "pos": 812,
                                            "end": 830,
                                            "flags": 2097152,
                                            "kind": 161,
                                            "typeName": {
                                                "pos": 812,
                                                "end": 830,
                                                "flags": 2097152,
                                                "escapedText": "UpdateAppDataInput"
                                            }
                                        },
                                        {
                                            "pos": 832,
                                            "end": 850,
                                            "flags": 2097152,
                                            "kind": 161,
                                            "typeName": {
                                                "pos": 832,
                                                "end": 850,
                                                "flags": 2097152,
                                                "escapedText": "AppDataStateModel"
                                            }
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "tagName": {
                                "pos": 863,
                                "end": 870,
                                "flags": 0,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ]
                },
                {
                    "name": "createVerifyAuthenticationQuestionsPayload",
                    "args": [
                        {
                            "name": "data",
                            "type": "UpdateAppDataInput | AppDataStateModel"
                        },
                        {
                            "name": "answers",
                            "type": "IVerifyAuthenticationAnswer[]"
                        }
                    ],
                    "optional": false,
                    "returnType": "IVerifyAuthenticationQuestionsMsg | undefined",
                    "typeParameters": [],
                    "line": 127,
                    "description": "<p>Generates the message payload for TU services</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 4013,
                                "end": 4017,
                                "flags": 0,
                                "escapedText": "data"
                            },
                            "type": "UpdateAppDataInput | AppDataStateModel",
                            "tagName": {
                                "pos": 3966,
                                "end": 3971,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": "",
                            "typeExpression": {
                                "pos": 3972,
                                "end": 4012,
                                "flags": 0,
                                "kind": 277,
                                "type": {
                                    "pos": 3973,
                                    "end": 4011,
                                    "flags": 2097152,
                                    "kind": 168,
                                    "types": [
                                        {
                                            "pos": 3973,
                                            "end": 3991,
                                            "flags": 2097152,
                                            "kind": 161,
                                            "typeName": {
                                                "pos": 3973,
                                                "end": 3991,
                                                "flags": 2097152,
                                                "escapedText": "UpdateAppDataInput"
                                            }
                                        },
                                        {
                                            "pos": 3993,
                                            "end": 4011,
                                            "flags": 2097152,
                                            "kind": 161,
                                            "typeName": {
                                                "pos": 3993,
                                                "end": 4011,
                                                "flags": 2097152,
                                                "escapedText": "AppDataStateModel"
                                            }
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "name": {
                                "pos": 4062,
                                "end": 4069,
                                "flags": 0,
                                "escapedText": "answers"
                            },
                            "type": "IVerifyAuthenticationAnswer[]",
                            "tagName": {
                                "pos": 4024,
                                "end": 4029,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": "",
                            "typeExpression": {
                                "pos": 4030,
                                "end": 4061,
                                "flags": 0,
                                "kind": 277,
                                "type": {
                                    "pos": 4031,
                                    "end": 4060,
                                    "flags": 2097152,
                                    "kind": 166,
                                    "elementType": {
                                        "pos": 4031,
                                        "end": 4058,
                                        "flags": 2097152,
                                        "kind": 161,
                                        "typeName": {
                                            "pos": 4031,
                                            "end": 4058,
                                            "flags": 2097152,
                                            "escapedText": "IVerifyAuthenticationAnswer"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            "tagName": {
                                "pos": 4076,
                                "end": 4083,
                                "flags": 0,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ]
                }
            ],
            "description": "",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { IEnrollRequest } from '@shared/interfaces/enroll-rquest.interface';\nimport { IVerifyAuthenticationAnswer } from '@shared/interfaces/verify-authentication-answers.interface';\nimport { IVerifyAuthenticationQuestionsMsg } from '@shared/interfaces/verify-authentication-questions.interface';\nimport { IGetAuthenticationQuestionsMsg } from '@shared/models/get-authorization-questions';\nimport { IIndicativeEnrichmentMsg } from '@shared/models/indicative-enrichment';\nimport { SsnInput, UpdateAppDataInput } from '@shared/services/aws/api.service';\nimport { AppDataStateModel } from '@store/app-data';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TransunionService {\n  constructor() {}\n\n  /**\n   * Generates the message payload for TU services\n   * @param {UpdateAppDataInput | AppDataStateModel} data\n   * @returns\n   */\n  createIndicativeEnrichmentPayload(\n    data: UpdateAppDataInput | AppDataStateModel\n  ): IIndicativeEnrichmentMsg | undefined {\n    const id = data.id?.split(':').pop();\n    const attrs = data.user?.userAttributes;\n    const dob = attrs?.dob;\n\n    if (!attrs || !id || !dob) {\n      console.log(`no attrs, id, or dob: attrs=${attrs}; id=${id}; dob=${dob}`);\n      return;\n    }\n\n    return {\n      AdditionalInputs: {\n        Data: {\n          Name: 'CreditReportVersion',\n          Value: '1',\n        },\n      },\n      RequestKey: '',\n      ClientKey: id,\n      Customer: {\n        CurrentAddress: {\n          AddressLine1: attrs.address?.addressOne || '',\n          AddressLine2: attrs.address?.addressTwo || '',\n          City: attrs.address?.city || '',\n          State: attrs.address?.state || '',\n          Zipcode: attrs.address?.zip || '',\n        },\n        PreviousAddress: {},\n        DateOfBirth:\n          `${attrs.dob?.year}-${\n            monthMap[dob.month.toLowerCase()]\n          }-${`0${dob.day}`.slice(-2)}` || '',\n        FullName: {\n          FirstName: attrs.name?.first || '',\n          LastName: attrs.name?.last || '',\n          MiddleName: attrs.name?.middle || '',\n          Prefix: null,\n          Suffix: null,\n        },\n        Ssn: `000000000${attrs.ssn?.lastfour}`.slice(-9) || '',\n      },\n      ServiceBundleCode: 'CC2BraveCreditIndicativeEnrichment',\n    } as IIndicativeEnrichmentMsg;\n  }\n\n  /**\n   * Generates the message payload for TU services\n   * @param {UpdateAppDataInput | AppDataStateModel} data\n   * @param {string} ssn\n   * @returns\n   */\n  createGetAuthenticationQuestionsPayload(\n    data: UpdateAppDataInput | AppDataStateModel,\n    ssn: string = ''\n  ): IGetAuthenticationQuestionsMsg | undefined {\n    const id = data.id?.split(':')?.pop();\n    const attrs = data.user?.userAttributes;\n    const dob = attrs?.dob;\n\n    if (!attrs || !id || !dob) {\n      console.log(`no attrs, id, or dob: attrs=${attrs}; id=${id}; dob=${dob}`);\n      return;\n    }\n\n    return {\n      AdditionalInputs: {\n        Data: {\n          Name: 'CreditReportVersion',\n          Value: '1',\n        },\n      },\n      RequestKey: '',\n      ClientKey: id,\n      Customer: {\n        CurrentAddress: {\n          AddressLine1: attrs.address?.addressOne || '',\n          AddressLine2: attrs.address?.addressTwo || '',\n          City: attrs.address?.city || '',\n          State: attrs.address?.state || '',\n          Zipcode: attrs.address?.zip || '',\n        },\n        PreviousAddress: {},\n        DateOfBirth:\n          `${attrs.dob?.year}-${\n            monthMap[dob?.month?.toLowerCase() || '']\n          }-${`0${dob.day}`.slice(-2)}` || '',\n        FullName: {\n          FirstName: attrs.name?.first || '',\n          LastName: attrs.name?.last || '',\n          MiddleName: attrs.name?.middle || '',\n        },\n        PhoneNumber: attrs.phone?.primary || '',\n        Ssn: ssn || '',\n      },\n      ServiceBundleCode: 'CC2BraveCreditAuthentication',\n    } as IGetAuthenticationQuestionsMsg;\n  }\n\n  /**\n   * Generates the message payload for TU services\n   * @param {UpdateAppDataInput | AppDataStateModel} data\n   * @param {IVerifyAuthenticationAnswer[]} answers\n   * @returns\n   */\n  createVerifyAuthenticationQuestionsPayload(\n    data: UpdateAppDataInput | AppDataStateModel,\n    answers: IVerifyAuthenticationAnswer[]\n  ): IVerifyAuthenticationQuestionsMsg | undefined {\n    const id = data.id?.split(':')?.pop();\n\n    if (!id || !answers.length) {\n      console.log(\n        `no id or answers provided: id=${id}; answers=${answers.length}`\n      );\n      return;\n    }\n\n    return {\n      RequestKey: '',\n      ClientKey: id,\n      Answers: answers,\n      ServiceBundleFulfillmentKey:\n        data.agencies?.transunion?.serviceBundleFulfillmentKey || '',\n    } as IVerifyAuthenticationQuestionsMsg;\n  }\n\n  /**\n   * Genarates the message payload for TU service\n   * @param { UpdateAppDataInput | AppDataStateModel} data\n   * @returns\n   */\n  createEnrollPayload(\n    data: UpdateAppDataInput | AppDataStateModel\n  ): IEnrollRequest | undefined {\n    const id = data.id?.split(':')?.pop();\n    const attrs = data.user?.userAttributes;\n    const dob = attrs?.dob;\n\n    if (!id || !attrs || !dob) {\n      console.log(\n        `no id, attributes, or dob provided: id=${id},  attrs=${attrs}, dob=${dob}`\n      );\n      return;\n    }\n\n    return {\n      ClientKey: id,\n      Customer: {\n        CurrentAddress: {\n          AddressLine1: attrs.address?.addressOne || '',\n          AddressLine2: attrs.address?.addressTwo || '',\n          City: attrs.address?.city || '',\n          State: attrs.address?.state || '',\n          Zipcode: attrs.address?.zip || '',\n        },\n        DateOfBirth:\n          `${attrs.dob?.year}-${\n            monthMap[dob?.month?.toLowerCase() || '']\n          }-${`0${dob.day}`.slice(-2)}` || '',\n        FullName: {\n          FirstName: attrs.name?.first || '',\n          LastName: attrs.name?.last || '',\n          MiddleName: attrs.name?.middle || '',\n        },\n        Ssn: attrs.ssn?.full || '',\n      },\n      ServiceBundleCode: 'CC2BraveCreditTUReportV3Score',\n    } as IEnrollRequest;\n  }\n}\n\nconst monthMap: Record<string, any> = {\n  jan: '01',\n  feb: '02',\n  mar: '03',\n  apr: '04',\n  may: '05',\n  jun: '06',\n  jul: '07',\n  aug: '08',\n  sep: '09',\n  oct: '10',\n  nov: '11',\n  dec: '12',\n};\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 13
            },
            "type": "injectable"
        },
        {
            "name": "UserState",
            "id": "injectable-UserState-09538d2dad6a526d8c2d9c0f049dfd74",
            "file": "src/app/store/user/user.state.ts",
            "properties": [],
            "methods": [
                {
                    "name": "addUser",
                    "args": [
                        {
                            "name": "ctx",
                            "type": "StateContext<UserStateModel>"
                        },
                        {
                            "type": "UserActions.Add"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "decorators": [
                        {
                            "name": "Action",
                            "stringifiedArguments": "UserActions.Add"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "ctx",
                            "type": "StateContext<UserStateModel>",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "type": "UserActions.Add",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "deleteUser",
                    "args": [
                        {
                            "name": "ctx",
                            "type": "StateContext<UserStateModel>"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "decorators": [
                        {
                            "name": "Action",
                            "stringifiedArguments": "UserActions.Delete"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "ctx",
                            "type": "StateContext<UserStateModel>",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateAttributes",
                    "args": [
                        {
                            "name": "ctx",
                            "type": "StateContext<UserStateModel>"
                        },
                        {
                            "type": "UserActions.UpdateAttributes"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 42,
                    "decorators": [
                        {
                            "name": "Action",
                            "stringifiedArguments": "UserActions.UpdateAttributes"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "ctx",
                            "type": "StateContext<UserStateModel>",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "type": "UserActions.UpdateAttributes",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateUser",
                    "args": [
                        {
                            "name": "ctx",
                            "type": "StateContext<UserStateModel>"
                        },
                        {
                            "type": "UserActions.Edit"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "decorators": [
                        {
                            "name": "Action",
                            "stringifiedArguments": "UserActions.Edit"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "ctx",
                            "type": "StateContext<UserStateModel>",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "type": "UserActions.Edit",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "description": "",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { State, Action, StateContext } from '@ngxs/store';\nimport * as UserActions from './user.actions';\nimport { UserStateModel } from '@store/user/user.model';\nimport { OnboardingState } from '@store/onboarding';\n\n@State<UserStateModel>({\n  name: 'user',\n  defaults: {\n    id: '',\n  },\n  children: [OnboardingState],\n})\n@Injectable()\nexport class UserState {\n  constructor() {}\n\n  @Action(UserActions.Add)\n  addUser(ctx: StateContext<UserStateModel>, { payload }: UserActions.Add) {\n    const state = ctx.getState();\n    ctx.patchState({\n      ...payload,\n    });\n  }\n\n  @Action(UserActions.Edit)\n  updateUser(ctx: StateContext<UserStateModel>, { payload }: UserActions.Edit) {\n    ctx.patchState({\n      ...payload,\n    });\n  }\n\n  @Action(UserActions.Delete)\n  deleteUser(ctx: StateContext<UserStateModel>) {\n    const payload = new UserStateModel();\n    ctx.patchState({\n      ...payload,\n    });\n  }\n\n  @Action(UserActions.UpdateAttributes)\n  updateAttributes(\n    ctx: StateContext<UserStateModel>,\n    { payload }: UserActions.UpdateAttributes\n  ): void {\n    const state = ctx.getState();\n    ctx.patchState({\n      userAttributes: {\n        ...state.userAttributes,\n        ...payload,\n      },\n    });\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 15
            },
            "type": "injectable"
        }
    ],
    "classes": [
        {
            "name": "Add",
            "id": "class-Add-252149e837afe3e84b9eaa5b7f3a06ae",
            "file": "src/app/store/agencies/agencies.actions.ts",
            "type": "class",
            "sourceCode": "import { AgenciesStateModel } from '@store/agencies';\n\nexport class Add {\n  static readonly type = '[Agencies] Add';\n  constructor(public payload: AgenciesStateModel) {}\n}\n\nexport class Edit {\n  static readonly type = '[Agencies] Edit';\n  constructor(\n    public payload: AgenciesStateModel | Partial<AgenciesStateModel>\n  ) {}\n}\n\nexport class Delete {\n  static readonly type = '[Agencies] Delete';\n  constructor() {}\n}\n\nexport class EditTransunionQuestions {\n  static readonly type = '[Agencies] EditTransunionQuestions';\n  constructor(public payload: { currentRawQuestions: string }) {}\n}\n\nexport class EditTransunionAuthDetails {\n  static readonly type = '[Agencies] EditTransunionAuthDetails';\n  constructor(public payload: { currentRawAuthDetails: string }) {}\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "payload",
                        "type": "AgenciesStateModel"
                    }
                ],
                "line": 4,
                "jsdoctags": [
                    {
                        "name": "payload",
                        "type": "AgenciesStateModel",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "payload",
                    "type": "AgenciesStateModel",
                    "optional": false,
                    "description": "",
                    "line": 5,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "type",
                    "defaultValue": "'[Agencies] Add'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4,
                    "modifierKind": [
                        115,
                        132
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "Add",
            "id": "class-Add-1edc300a9f216b0d10eb50c51640290e-1",
            "file": "src/app/store/app-data/app-data.actions.ts",
            "type": "class",
            "sourceCode": "import { AppDataStateModel } from '@store/app-data/app-data.model';\n\nexport class Fetch {\n  static readonly type = '[AppData] Fetch';\n  constructor() {}\n}\n\nexport class Add {\n  static readonly type = '[AppData] Add';\n  constructor(public payload: AppDataStateModel) {}\n}\n\nexport class Edit {\n  static readonly type = '[AppData] Edit';\n  constructor(public payload: AppDataStateModel) {}\n}\n\nexport class Delete {\n  static readonly type = '[AppData] Delete';\n  constructor() {}\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "payload",
                        "type": "AppDataStateModel"
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "payload",
                        "type": "AppDataStateModel",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "payload",
                    "type": "AppDataStateModel",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "type",
                    "defaultValue": "'[AppData] Add'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        115,
                        132
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "Add-1"
        },
        {
            "name": "Add",
            "id": "class-Add-d646ed2ff7178c40d66a420585673988-2",
            "file": "src/app/store/onboarding/onboarding.actions.ts",
            "type": "class",
            "sourceCode": "import { OnboardingStateModel } from '@store/onboarding';\n\nexport class Add {\n  static readonly type = '[Onboarding] Add';\n  constructor(public payload: OnboardingStateModel) {}\n}\n\nexport class Edit {\n  static readonly type = '[Onboarding] Edit';\n  constructor(public payload: OnboardingStateModel) {}\n}\n\nexport class Delete {\n  static readonly type = '[Onboarding] Delete';\n  constructor() {}\n}\n\nexport class UpdateLastActive {\n  static readonly type = '[Onboarding] UpdateLastActive';\n  constructor(public payload: number) {}\n}\n\nexport class UpdateLastComplete {\n  static readonly type = '[Onboarding] UpdateLastComplete';\n  constructor(public payload: number) {}\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "payload",
                        "type": "OnboardingStateModel"
                    }
                ],
                "line": 4,
                "jsdoctags": [
                    {
                        "name": "payload",
                        "type": "OnboardingStateModel",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "payload",
                    "type": "OnboardingStateModel",
                    "optional": false,
                    "description": "",
                    "line": 5,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "type",
                    "defaultValue": "'[Onboarding] Add'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4,
                    "modifierKind": [
                        115,
                        132
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "isDuplicate": true,
            "duplicateId": 2,
            "duplicateName": "Add-2"
        },
        {
            "name": "Add",
            "id": "class-Add-7386898f0e8a48227d95cc7cbdb565d2-3",
            "file": "src/app/store/preferences/preferences.actions.ts",
            "type": "class",
            "sourceCode": "import { PreferencesStateModel } from '@store/preferences/preferences.model';\n\nexport class Add {\n  static readonly type = '[Preferences] Add';\n  constructor(public payload: PreferencesStateModel) {}\n}\n\nexport class Edit {\n  static readonly type = '[Preferences] Edit';\n  constructor(\n    public payload: PreferencesStateModel | Partial<PreferencesStateModel>\n  ) {}\n}\n\nexport class Delete {\n  static readonly type = '[Preferences] Delete';\n  constructor() {}\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "payload",
                        "type": "PreferencesStateModel"
                    }
                ],
                "line": 4,
                "jsdoctags": [
                    {
                        "name": "payload",
                        "type": "PreferencesStateModel",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "payload",
                    "type": "PreferencesStateModel",
                    "optional": false,
                    "description": "",
                    "line": 5,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "type",
                    "defaultValue": "'[Preferences] Add'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4,
                    "modifierKind": [
                        115,
                        132
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "isDuplicate": true,
            "duplicateId": 3,
            "duplicateName": "Add-3"
        },
        {
            "name": "Add",
            "id": "class-Add-9bac12d32d1effb057ce16af1f3528b4-4",
            "file": "src/app/store/user/user.actions.ts",
            "type": "class",
            "sourceCode": "import { UserAttributesInput } from '@shared/services/aws/api.service';\nimport { UserStateModel } from '@store/user/user.model';\n\nexport class Add {\n  static readonly type = '[User] Add';\n  constructor(public payload: UserStateModel) {}\n}\n\nexport class Edit {\n  static readonly type = '[User] Edit';\n  constructor(public payload: UserStateModel | Partial<UserStateModel>) {}\n}\n\nexport class Delete {\n  static readonly type = '[User] Delete';\n  constructor() {}\n}\n\nexport class UpdateAttributes {\n  static readonly type = '[UserAttributes] Edit';\n  constructor(public payload: UserAttributesInput) {}\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "payload",
                        "type": "UserStateModel"
                    }
                ],
                "line": 5,
                "jsdoctags": [
                    {
                        "name": "payload",
                        "type": "UserStateModel",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "payload",
                    "type": "UserStateModel",
                    "optional": false,
                    "description": "",
                    "line": 6,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "type",
                    "defaultValue": "'[User] Add'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5,
                    "modifierKind": [
                        115,
                        132
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "isDuplicate": true,
            "duplicateId": 4,
            "duplicateName": "Add-4"
        },
        {
            "name": "AgenciesSelectors",
            "id": "class-AgenciesSelectors-32a1d6481f8a8f510a82b1a1fb62a4dc",
            "file": "src/app/store/agencies/agencies.selectors.ts",
            "type": "class",
            "sourceCode": "import { Selector } from '@ngxs/store';\nimport { AgenciesStateModel } from '@store/agencies/agencies.model';\n\nexport class AgenciesSelectors {\n  @Selector([AgenciesStateModel])\n  static getAgencies(state: AgenciesStateModel): AgenciesStateModel {\n    return state;\n  }\n\n  @Selector([AgenciesStateModel])\n  static getTransunionRawQuestions(state: AgenciesStateModel): string {\n    return state.transunion?.currentRawQuestions || '';\n  }\n\n  @Selector([AgenciesStateModel])\n  static getTransunionRawAuthDetails(state: AgenciesStateModel): string {\n    return state.transunion?.currentRawAuthDetails || '';\n  }\n}\n",
            "properties": [],
            "methods": [
                {
                    "name": "getAgencies",
                    "args": [
                        {
                            "name": "state",
                            "type": "AgenciesStateModel"
                        }
                    ],
                    "optional": false,
                    "returnType": "AgenciesStateModel",
                    "typeParameters": [],
                    "line": 6,
                    "decorators": [
                        {
                            "name": "Selector",
                            "stringifiedArguments": "undefined"
                        }
                    ],
                    "modifierKind": [
                        115
                    ],
                    "jsdoctags": [
                        {
                            "name": "state",
                            "type": "AgenciesStateModel",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getTransunionRawAuthDetails",
                    "args": [
                        {
                            "name": "state",
                            "type": "AgenciesStateModel"
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 16,
                    "decorators": [
                        {
                            "name": "Selector",
                            "stringifiedArguments": "undefined"
                        }
                    ],
                    "modifierKind": [
                        115
                    ],
                    "jsdoctags": [
                        {
                            "name": "state",
                            "type": "AgenciesStateModel",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getTransunionRawQuestions",
                    "args": [
                        {
                            "name": "state",
                            "type": "AgenciesStateModel"
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 11,
                    "decorators": [
                        {
                            "name": "Selector",
                            "stringifiedArguments": "undefined"
                        }
                    ],
                    "modifierKind": [
                        115
                    ],
                    "jsdoctags": [
                        {
                            "name": "state",
                            "type": "AgenciesStateModel",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "AgenciesStateModel",
            "id": "class-AgenciesStateModel-3ece8601b95bee9de01b2afd6bac5893",
            "file": "src/app/store/agencies/agencies.model.ts",
            "type": "class",
            "sourceCode": "import {\n  AgenciesInput,\n  EquifaxInput,\n  ExperianInput,\n  TransunionInput,\n} from '@shared/services/aws/api.service';\n\nexport class AgenciesStateModel implements AgenciesInput {\n  transunion?: TransunionInput | null | undefined;\n  equifax?: EquifaxInput | null | undefined;\n  experian?: ExperianInput | null | undefined;\n}\n",
            "properties": [
                {
                    "name": "equifax",
                    "type": "EquifaxInput | null | undefined",
                    "optional": true,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "experian",
                    "type": "ExperianInput | null | undefined",
                    "optional": true,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "transunion",
                    "type": "TransunionInput | null | undefined",
                    "optional": true,
                    "description": "",
                    "line": 9
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "implements": [
                "AgenciesInput"
            ]
        },
        {
            "name": "AppDataSelectors",
            "id": "class-AppDataSelectors-926d0d1ce7935836baf3dedf1f030446",
            "file": "src/app/store/app-data/app-data.selectors.ts",
            "type": "class",
            "sourceCode": "import { Selector } from '@ngxs/store';\nimport { AppDataStateModel } from '@store/app-data/app-data.model';\nimport { AppDataState } from '@store/app-data/app-data.state';\n\nexport class AppDataSelectors {\n  @Selector([AppDataState])\n  static getAppData(state: AppDataStateModel): AppDataStateModel {\n    return state;\n  }\n}\n",
            "properties": [],
            "methods": [
                {
                    "name": "getAppData",
                    "args": [
                        {
                            "name": "state",
                            "type": "AppDataStateModel"
                        }
                    ],
                    "optional": false,
                    "returnType": "AppDataStateModel",
                    "typeParameters": [],
                    "line": 7,
                    "decorators": [
                        {
                            "name": "Selector",
                            "stringifiedArguments": "undefined"
                        }
                    ],
                    "modifierKind": [
                        115
                    ],
                    "jsdoctags": [
                        {
                            "name": "state",
                            "type": "AppDataStateModel",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "AppDataStateModel",
            "id": "class-AppDataStateModel-0da05c8d1407966a490b7e213f03ccf9",
            "file": "src/app/store/app-data/app-data.model.ts",
            "type": "class",
            "sourceCode": "import {\n  AgenciesInput,\n  UpdateAppDataInput,\n  UserInput,\n} from '@shared/services/aws/api.service';\n\ntype typename = 'AppData';\n\nexport class AppDataStateModel implements UpdateAppDataInput {\n  id: string = 'AppData';\n  user?: UserInput | null | undefined;\n  agencies?: AgenciesInput | null | undefined;\n}\n",
            "properties": [
                {
                    "name": "agencies",
                    "type": "AgenciesInput | null | undefined",
                    "optional": true,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "id",
                    "defaultValue": "'AppData'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "user",
                    "type": "UserInput | null | undefined",
                    "optional": true,
                    "description": "",
                    "line": 11
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "implements": [
                "UpdateAppDataInput"
            ]
        },
        {
            "name": "Delete",
            "id": "class-Delete-252149e837afe3e84b9eaa5b7f3a06ae",
            "file": "src/app/store/agencies/agencies.actions.ts",
            "type": "class",
            "sourceCode": "import { AgenciesStateModel } from '@store/agencies';\n\nexport class Add {\n  static readonly type = '[Agencies] Add';\n  constructor(public payload: AgenciesStateModel) {}\n}\n\nexport class Edit {\n  static readonly type = '[Agencies] Edit';\n  constructor(\n    public payload: AgenciesStateModel | Partial<AgenciesStateModel>\n  ) {}\n}\n\nexport class Delete {\n  static readonly type = '[Agencies] Delete';\n  constructor() {}\n}\n\nexport class EditTransunionQuestions {\n  static readonly type = '[Agencies] EditTransunionQuestions';\n  constructor(public payload: { currentRawQuestions: string }) {}\n}\n\nexport class EditTransunionAuthDetails {\n  static readonly type = '[Agencies] EditTransunionAuthDetails';\n  constructor(public payload: { currentRawAuthDetails: string }) {}\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 16
            },
            "properties": [
                {
                    "name": "type",
                    "defaultValue": "'[Agencies] Delete'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        115,
                        132
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "Delete",
            "id": "class-Delete-1edc300a9f216b0d10eb50c51640290e-1",
            "file": "src/app/store/app-data/app-data.actions.ts",
            "type": "class",
            "sourceCode": "import { AppDataStateModel } from '@store/app-data/app-data.model';\n\nexport class Fetch {\n  static readonly type = '[AppData] Fetch';\n  constructor() {}\n}\n\nexport class Add {\n  static readonly type = '[AppData] Add';\n  constructor(public payload: AppDataStateModel) {}\n}\n\nexport class Edit {\n  static readonly type = '[AppData] Edit';\n  constructor(public payload: AppDataStateModel) {}\n}\n\nexport class Delete {\n  static readonly type = '[AppData] Delete';\n  constructor() {}\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 19
            },
            "properties": [
                {
                    "name": "type",
                    "defaultValue": "'[AppData] Delete'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        115,
                        132
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "Delete-1"
        },
        {
            "name": "Delete",
            "id": "class-Delete-d646ed2ff7178c40d66a420585673988-2",
            "file": "src/app/store/onboarding/onboarding.actions.ts",
            "type": "class",
            "sourceCode": "import { OnboardingStateModel } from '@store/onboarding';\n\nexport class Add {\n  static readonly type = '[Onboarding] Add';\n  constructor(public payload: OnboardingStateModel) {}\n}\n\nexport class Edit {\n  static readonly type = '[Onboarding] Edit';\n  constructor(public payload: OnboardingStateModel) {}\n}\n\nexport class Delete {\n  static readonly type = '[Onboarding] Delete';\n  constructor() {}\n}\n\nexport class UpdateLastActive {\n  static readonly type = '[Onboarding] UpdateLastActive';\n  constructor(public payload: number) {}\n}\n\nexport class UpdateLastComplete {\n  static readonly type = '[Onboarding] UpdateLastComplete';\n  constructor(public payload: number) {}\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 14
            },
            "properties": [
                {
                    "name": "type",
                    "defaultValue": "'[Onboarding] Delete'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        115,
                        132
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "isDuplicate": true,
            "duplicateId": 2,
            "duplicateName": "Delete-2"
        },
        {
            "name": "Delete",
            "id": "class-Delete-7386898f0e8a48227d95cc7cbdb565d2-3",
            "file": "src/app/store/preferences/preferences.actions.ts",
            "type": "class",
            "sourceCode": "import { PreferencesStateModel } from '@store/preferences/preferences.model';\n\nexport class Add {\n  static readonly type = '[Preferences] Add';\n  constructor(public payload: PreferencesStateModel) {}\n}\n\nexport class Edit {\n  static readonly type = '[Preferences] Edit';\n  constructor(\n    public payload: PreferencesStateModel | Partial<PreferencesStateModel>\n  ) {}\n}\n\nexport class Delete {\n  static readonly type = '[Preferences] Delete';\n  constructor() {}\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 16
            },
            "properties": [
                {
                    "name": "type",
                    "defaultValue": "'[Preferences] Delete'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        115,
                        132
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "isDuplicate": true,
            "duplicateId": 3,
            "duplicateName": "Delete-3"
        },
        {
            "name": "Delete",
            "id": "class-Delete-9bac12d32d1effb057ce16af1f3528b4-4",
            "file": "src/app/store/user/user.actions.ts",
            "type": "class",
            "sourceCode": "import { UserAttributesInput } from '@shared/services/aws/api.service';\nimport { UserStateModel } from '@store/user/user.model';\n\nexport class Add {\n  static readonly type = '[User] Add';\n  constructor(public payload: UserStateModel) {}\n}\n\nexport class Edit {\n  static readonly type = '[User] Edit';\n  constructor(public payload: UserStateModel | Partial<UserStateModel>) {}\n}\n\nexport class Delete {\n  static readonly type = '[User] Delete';\n  constructor() {}\n}\n\nexport class UpdateAttributes {\n  static readonly type = '[UserAttributes] Edit';\n  constructor(public payload: UserAttributesInput) {}\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 15
            },
            "properties": [
                {
                    "name": "type",
                    "defaultValue": "'[User] Delete'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        115,
                        132
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "isDuplicate": true,
            "duplicateId": 4,
            "duplicateName": "Delete-4"
        },
        {
            "name": "DOMHelper",
            "id": "class-DOMHelper-8d3fde6414c1453c64e0619242f6ba77",
            "file": "src/app/testing/dom-helper.ts",
            "type": "class",
            "sourceCode": "import { DebugElement } from '@angular/core';\nimport { ComponentFixture } from '@angular/core/testing';\nimport { By } from '@angular/platform-browser';\n\nexport class DOMHelper<T> {\n  private fixture: ComponentFixture<T>;\n  constructor(fixture: ComponentFixture<T>) {\n    this.fixture = fixture;\n  }\n\n  singleText(tagName: string): string | undefined {\n    const el = this.fixture.debugElement.query(By.css(tagName));\n    return el ? el.nativeElement.textContent : undefined;\n  }\n\n  querySelector(query: string): string | undefined {\n    const el = this.fixture.nativeElement;\n    return el ? el.querySelector(query).textContent : undefined;\n  }\n\n  count(tagName: string): number {\n    const elements = this.fixture.debugElement.queryAll(By.css(tagName));\n    return elements.length;\n  }\n\n  countText(tagName: string, text: string): number {\n    const elements = this.fixture.debugElement.queryAll(By.css(tagName));\n    return elements.filter(\n      (element) => element.nativeElement.textContent === text\n    ).length;\n  }\n\n  hasAttr(tagName: string, attrName: string): boolean {\n    const el = this.fixture.debugElement.query(By.css(tagName));\n    return el.nativeElement.hasAttribute(attrName);\n  }\n\n  hasAttrValue(tagName: string, attrName: string, value: string): boolean {\n    const el = this.fixture.debugElement.query(By.css(tagName));\n    if (!el.attributes[attrName]) {\n      return false;\n    }\n    return el.attributes[attrName] === value;\n  }\n\n  hasPropValue(tagName: string, attrName: string, value: any): boolean {\n    const el = this.fixture.debugElement.query(By.css(tagName));\n    if (!el.properties[attrName]) {\n      return false;\n    }\n    return el.properties[attrName] === value;\n  }\n\n  clickButton(buttonText: string): void {\n    this.findAll('button').forEach((button) => {\n      const buttonElement: HTMLButtonElement = button.nativeElement;\n      if (buttonElement.textContent === buttonText) {\n        buttonElement.click();\n      }\n    });\n  }\n\n  findAll(tagName: string): DebugElement[] {\n    return this.fixture.debugElement.queryAll(By.css(tagName));\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "fixture",
                        "type": "ComponentFixture<T>"
                    }
                ],
                "line": 6,
                "jsdoctags": [
                    {
                        "name": "fixture",
                        "type": "ComponentFixture<T>",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "fixture",
                    "type": "ComponentFixture<T>",
                    "optional": false,
                    "description": "",
                    "line": 6,
                    "modifierKind": [
                        112
                    ]
                }
            ],
            "methods": [
                {
                    "name": "clickButton",
                    "args": [
                        {
                            "name": "buttonText",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "jsdoctags": [
                        {
                            "name": "buttonText",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "count",
                    "args": [
                        {
                            "name": "tagName",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 21,
                    "jsdoctags": [
                        {
                            "name": "tagName",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "countText",
                    "args": [
                        {
                            "name": "tagName",
                            "type": "string"
                        },
                        {
                            "name": "text",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 26,
                    "jsdoctags": [
                        {
                            "name": "tagName",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "text",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "findAll",
                    "args": [
                        {
                            "name": "tagName",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "DebugElement[]",
                    "typeParameters": [],
                    "line": 63,
                    "jsdoctags": [
                        {
                            "name": "tagName",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "hasAttr",
                    "args": [
                        {
                            "name": "tagName",
                            "type": "string"
                        },
                        {
                            "name": "attrName",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 33,
                    "jsdoctags": [
                        {
                            "name": "tagName",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "attrName",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "hasAttrValue",
                    "args": [
                        {
                            "name": "tagName",
                            "type": "string"
                        },
                        {
                            "name": "attrName",
                            "type": "string"
                        },
                        {
                            "name": "value",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 38,
                    "jsdoctags": [
                        {
                            "name": "tagName",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "attrName",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "value",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "hasPropValue",
                    "args": [
                        {
                            "name": "tagName",
                            "type": "string"
                        },
                        {
                            "name": "attrName",
                            "type": "string"
                        },
                        {
                            "name": "value",
                            "type": "any"
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 46,
                    "jsdoctags": [
                        {
                            "name": "tagName",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "attrName",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "value",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "querySelector",
                    "args": [
                        {
                            "name": "query",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "string | undefined",
                    "typeParameters": [],
                    "line": 16,
                    "jsdoctags": [
                        {
                            "name": "query",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "singleText",
                    "args": [
                        {
                            "name": "tagName",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "string | undefined",
                    "typeParameters": [],
                    "line": 11,
                    "jsdoctags": [
                        {
                            "name": "tagName",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "Edit",
            "id": "class-Edit-252149e837afe3e84b9eaa5b7f3a06ae",
            "file": "src/app/store/agencies/agencies.actions.ts",
            "type": "class",
            "sourceCode": "import { AgenciesStateModel } from '@store/agencies';\n\nexport class Add {\n  static readonly type = '[Agencies] Add';\n  constructor(public payload: AgenciesStateModel) {}\n}\n\nexport class Edit {\n  static readonly type = '[Agencies] Edit';\n  constructor(\n    public payload: AgenciesStateModel | Partial<AgenciesStateModel>\n  ) {}\n}\n\nexport class Delete {\n  static readonly type = '[Agencies] Delete';\n  constructor() {}\n}\n\nexport class EditTransunionQuestions {\n  static readonly type = '[Agencies] EditTransunionQuestions';\n  constructor(public payload: { currentRawQuestions: string }) {}\n}\n\nexport class EditTransunionAuthDetails {\n  static readonly type = '[Agencies] EditTransunionAuthDetails';\n  constructor(public payload: { currentRawAuthDetails: string }) {}\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "payload",
                        "type": "AgenciesStateModel | Partial<AgenciesStateModel>"
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "payload",
                        "type": "AgenciesStateModel | Partial<AgenciesStateModel>",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "payload",
                    "type": "AgenciesStateModel | Partial<AgenciesStateModel>",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "type",
                    "defaultValue": "'[Agencies] Edit'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        115,
                        132
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "Edit",
            "id": "class-Edit-1edc300a9f216b0d10eb50c51640290e-1",
            "file": "src/app/store/app-data/app-data.actions.ts",
            "type": "class",
            "sourceCode": "import { AppDataStateModel } from '@store/app-data/app-data.model';\n\nexport class Fetch {\n  static readonly type = '[AppData] Fetch';\n  constructor() {}\n}\n\nexport class Add {\n  static readonly type = '[AppData] Add';\n  constructor(public payload: AppDataStateModel) {}\n}\n\nexport class Edit {\n  static readonly type = '[AppData] Edit';\n  constructor(public payload: AppDataStateModel) {}\n}\n\nexport class Delete {\n  static readonly type = '[AppData] Delete';\n  constructor() {}\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "payload",
                        "type": "AppDataStateModel"
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "payload",
                        "type": "AppDataStateModel",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "payload",
                    "type": "AppDataStateModel",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "type",
                    "defaultValue": "'[AppData] Edit'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        115,
                        132
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "Edit-1"
        },
        {
            "name": "Edit",
            "id": "class-Edit-d646ed2ff7178c40d66a420585673988-2",
            "file": "src/app/store/onboarding/onboarding.actions.ts",
            "type": "class",
            "sourceCode": "import { OnboardingStateModel } from '@store/onboarding';\n\nexport class Add {\n  static readonly type = '[Onboarding] Add';\n  constructor(public payload: OnboardingStateModel) {}\n}\n\nexport class Edit {\n  static readonly type = '[Onboarding] Edit';\n  constructor(public payload: OnboardingStateModel) {}\n}\n\nexport class Delete {\n  static readonly type = '[Onboarding] Delete';\n  constructor() {}\n}\n\nexport class UpdateLastActive {\n  static readonly type = '[Onboarding] UpdateLastActive';\n  constructor(public payload: number) {}\n}\n\nexport class UpdateLastComplete {\n  static readonly type = '[Onboarding] UpdateLastComplete';\n  constructor(public payload: number) {}\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "payload",
                        "type": "OnboardingStateModel"
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "payload",
                        "type": "OnboardingStateModel",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "payload",
                    "type": "OnboardingStateModel",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "type",
                    "defaultValue": "'[Onboarding] Edit'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        115,
                        132
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "isDuplicate": true,
            "duplicateId": 2,
            "duplicateName": "Edit-2"
        },
        {
            "name": "Edit",
            "id": "class-Edit-7386898f0e8a48227d95cc7cbdb565d2-3",
            "file": "src/app/store/preferences/preferences.actions.ts",
            "type": "class",
            "sourceCode": "import { PreferencesStateModel } from '@store/preferences/preferences.model';\n\nexport class Add {\n  static readonly type = '[Preferences] Add';\n  constructor(public payload: PreferencesStateModel) {}\n}\n\nexport class Edit {\n  static readonly type = '[Preferences] Edit';\n  constructor(\n    public payload: PreferencesStateModel | Partial<PreferencesStateModel>\n  ) {}\n}\n\nexport class Delete {\n  static readonly type = '[Preferences] Delete';\n  constructor() {}\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "payload",
                        "type": "PreferencesStateModel | Partial<PreferencesStateModel>"
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "payload",
                        "type": "PreferencesStateModel | Partial<PreferencesStateModel>",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "payload",
                    "type": "PreferencesStateModel | Partial<PreferencesStateModel>",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "type",
                    "defaultValue": "'[Preferences] Edit'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        115,
                        132
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "isDuplicate": true,
            "duplicateId": 3,
            "duplicateName": "Edit-3"
        },
        {
            "name": "Edit",
            "id": "class-Edit-9bac12d32d1effb057ce16af1f3528b4-4",
            "file": "src/app/store/user/user.actions.ts",
            "type": "class",
            "sourceCode": "import { UserAttributesInput } from '@shared/services/aws/api.service';\nimport { UserStateModel } from '@store/user/user.model';\n\nexport class Add {\n  static readonly type = '[User] Add';\n  constructor(public payload: UserStateModel) {}\n}\n\nexport class Edit {\n  static readonly type = '[User] Edit';\n  constructor(public payload: UserStateModel | Partial<UserStateModel>) {}\n}\n\nexport class Delete {\n  static readonly type = '[User] Delete';\n  constructor() {}\n}\n\nexport class UpdateAttributes {\n  static readonly type = '[UserAttributes] Edit';\n  constructor(public payload: UserAttributesInput) {}\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "payload",
                        "type": "UserStateModel | Partial<UserStateModel>"
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "payload",
                        "type": "UserStateModel | Partial<UserStateModel>",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "payload",
                    "type": "UserStateModel | Partial<UserStateModel>",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "type",
                    "defaultValue": "'[User] Edit'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        115,
                        132
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "isDuplicate": true,
            "duplicateId": 4,
            "duplicateName": "Edit-4"
        },
        {
            "name": "EditTransunionAuthDetails",
            "id": "class-EditTransunionAuthDetails-252149e837afe3e84b9eaa5b7f3a06ae",
            "file": "src/app/store/agencies/agencies.actions.ts",
            "type": "class",
            "sourceCode": "import { AgenciesStateModel } from '@store/agencies';\n\nexport class Add {\n  static readonly type = '[Agencies] Add';\n  constructor(public payload: AgenciesStateModel) {}\n}\n\nexport class Edit {\n  static readonly type = '[Agencies] Edit';\n  constructor(\n    public payload: AgenciesStateModel | Partial<AgenciesStateModel>\n  ) {}\n}\n\nexport class Delete {\n  static readonly type = '[Agencies] Delete';\n  constructor() {}\n}\n\nexport class EditTransunionQuestions {\n  static readonly type = '[Agencies] EditTransunionQuestions';\n  constructor(public payload: { currentRawQuestions: string }) {}\n}\n\nexport class EditTransunionAuthDetails {\n  static readonly type = '[Agencies] EditTransunionAuthDetails';\n  constructor(public payload: { currentRawAuthDetails: string }) {}\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "payload",
                        "type": "literal type"
                    }
                ],
                "line": 26,
                "jsdoctags": [
                    {
                        "name": "payload",
                        "type": "literal type",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "payload",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "type",
                    "defaultValue": "'[Agencies] EditTransunionAuthDetails'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        115,
                        132
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "EditTransunionQuestions",
            "id": "class-EditTransunionQuestions-252149e837afe3e84b9eaa5b7f3a06ae",
            "file": "src/app/store/agencies/agencies.actions.ts",
            "type": "class",
            "sourceCode": "import { AgenciesStateModel } from '@store/agencies';\n\nexport class Add {\n  static readonly type = '[Agencies] Add';\n  constructor(public payload: AgenciesStateModel) {}\n}\n\nexport class Edit {\n  static readonly type = '[Agencies] Edit';\n  constructor(\n    public payload: AgenciesStateModel | Partial<AgenciesStateModel>\n  ) {}\n}\n\nexport class Delete {\n  static readonly type = '[Agencies] Delete';\n  constructor() {}\n}\n\nexport class EditTransunionQuestions {\n  static readonly type = '[Agencies] EditTransunionQuestions';\n  constructor(public payload: { currentRawQuestions: string }) {}\n}\n\nexport class EditTransunionAuthDetails {\n  static readonly type = '[Agencies] EditTransunionAuthDetails';\n  constructor(public payload: { currentRawAuthDetails: string }) {}\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "payload",
                        "type": "literal type"
                    }
                ],
                "line": 21,
                "jsdoctags": [
                    {
                        "name": "payload",
                        "type": "literal type",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "payload",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "type",
                    "defaultValue": "'[Agencies] EditTransunionQuestions'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        115,
                        132
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "Fetch",
            "id": "class-Fetch-1edc300a9f216b0d10eb50c51640290e",
            "file": "src/app/store/app-data/app-data.actions.ts",
            "type": "class",
            "sourceCode": "import { AppDataStateModel } from '@store/app-data/app-data.model';\n\nexport class Fetch {\n  static readonly type = '[AppData] Fetch';\n  constructor() {}\n}\n\nexport class Add {\n  static readonly type = '[AppData] Add';\n  constructor(public payload: AppDataStateModel) {}\n}\n\nexport class Edit {\n  static readonly type = '[AppData] Edit';\n  constructor(public payload: AppDataStateModel) {}\n}\n\nexport class Delete {\n  static readonly type = '[AppData] Delete';\n  constructor() {}\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 4
            },
            "properties": [
                {
                    "name": "type",
                    "defaultValue": "'[AppData] Fetch'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4,
                    "modifierKind": [
                        115,
                        132
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "Helper",
            "id": "class-Helper-c630ccc7b4c274d453c3be9899447c74",
            "file": "src/app/testing/test-helper.ts",
            "type": "class",
            "sourceCode": "export class Helper<T> {\n  private component: T;\n\n  constructor(component: T) {\n    this.component = component;\n  }\n\n  hasProperty(component: T, prop: string): boolean {\n    return Object.keys(component).filter((key) => key === prop).length > 0;\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "component",
                        "type": "T"
                    }
                ],
                "line": 2,
                "jsdoctags": [
                    {
                        "name": "component",
                        "type": "T",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "component",
                    "type": "T",
                    "optional": false,
                    "description": "",
                    "line": 2,
                    "modifierKind": [
                        112
                    ]
                }
            ],
            "methods": [
                {
                    "name": "hasProperty",
                    "args": [
                        {
                            "name": "component",
                            "type": "T"
                        },
                        {
                            "name": "prop",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 8,
                    "jsdoctags": [
                        {
                            "name": "component",
                            "type": "T",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "prop",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "OnboardingSelectors",
            "id": "class-OnboardingSelectors-c551eae651305d8eb31d8c2ddbb895e2",
            "file": "src/app/store/onboarding/onboarding.selectors.ts",
            "type": "class",
            "sourceCode": "import { Selector } from '@ngxs/store';\nimport { OnboardingStateModel } from '@store/onboarding/onboarding.model';\nimport { OnboardingState } from '@store/onboarding/onboarding.state';\n\nexport class OnboardingSelectors {\n  @Selector([OnboardingState])\n  static getOnboarding(state: OnboardingStateModel): OnboardingStateModel {\n    return state;\n  }\n}\n",
            "properties": [],
            "methods": [
                {
                    "name": "getOnboarding",
                    "args": [
                        {
                            "name": "state",
                            "type": "OnboardingStateModel"
                        }
                    ],
                    "optional": false,
                    "returnType": "OnboardingStateModel",
                    "typeParameters": [],
                    "line": 7,
                    "decorators": [
                        {
                            "name": "Selector",
                            "stringifiedArguments": "undefined"
                        }
                    ],
                    "modifierKind": [
                        115
                    ],
                    "jsdoctags": [
                        {
                            "name": "state",
                            "type": "OnboardingStateModel",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "OnboardingStateModel",
            "id": "class-OnboardingStateModel-70b440fbfdfa5d3052dbafe93bf63d15",
            "file": "src/app/store/onboarding/onboarding.model.ts",
            "type": "class",
            "sourceCode": "import { IProgressStep } from '@shared/components/progressbars/filled-checktext-progressbar/filled-checktext-progressbar.component';\nimport { OnboardingInput } from '@shared/services/aws/api.service';\n\nexport interface OnboardingStep extends IProgressStep {}\ntype typename = 'Onboarding';\nexport class OnboardingStateModel implements OnboardingInput {\n  lastActive: number = -1;\n  lastComplete: number = -1;\n  started?: boolean | null | undefined;\n}\n",
            "properties": [
                {
                    "name": "lastActive",
                    "defaultValue": "-1",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "lastComplete",
                    "defaultValue": "-1",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "started",
                    "type": "boolean | null | undefined",
                    "optional": true,
                    "description": "",
                    "line": 9
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "implements": [
                "OnboardingInput"
            ]
        },
        {
            "name": "PreferencesSelectors",
            "id": "class-PreferencesSelectors-b0266d342a1336b9b67c27cade8c5ba2",
            "file": "src/app/store/preferences/preferences.selectors.ts",
            "type": "class",
            "sourceCode": "import { Selector } from '@ngxs/store';\nimport { PreferencesStateModel } from '@store/preferences/preferences.model';\nimport { PreferencesState } from '@store/preferences/preferences.state';\n\nexport class PreferencesSelectors {\n  @Selector([PreferencesState])\n  static getPreferences(state: PreferencesStateModel): PreferencesStateModel {\n    return state;\n  }\n}\n",
            "properties": [],
            "methods": [
                {
                    "name": "getPreferences",
                    "args": [
                        {
                            "name": "state",
                            "type": "PreferencesStateModel"
                        }
                    ],
                    "optional": false,
                    "returnType": "PreferencesStateModel",
                    "typeParameters": [],
                    "line": 7,
                    "decorators": [
                        {
                            "name": "Selector",
                            "stringifiedArguments": "undefined"
                        }
                    ],
                    "modifierKind": [
                        115
                    ],
                    "jsdoctags": [
                        {
                            "name": "state",
                            "type": "PreferencesStateModel",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "PreferencesStateModel",
            "id": "class-PreferencesStateModel-da919f58d413b3fc8202a19b9ca61d5c",
            "file": "src/app/store/preferences/preferences.model.ts",
            "type": "class",
            "sourceCode": "import { CreditReportGroups } from '@shared/data/credit-report';\n\nexport class PreferencesStateModel {\n  showAllAccounts!: {\n    [CreditReportGroups.CreditCards]: boolean | undefined;\n    [CreditReportGroups.CollectionsAccounts]: boolean | undefined;\n    [CreditReportGroups.InstallmentLoans]: boolean | undefined;\n    [CreditReportGroups.Mortgages]: boolean | undefined;\n  };\n}\n",
            "properties": [
                {
                    "name": "showAllAccounts",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "UpdateAttributes",
            "id": "class-UpdateAttributes-9bac12d32d1effb057ce16af1f3528b4",
            "file": "src/app/store/user/user.actions.ts",
            "type": "class",
            "sourceCode": "import { UserAttributesInput } from '@shared/services/aws/api.service';\nimport { UserStateModel } from '@store/user/user.model';\n\nexport class Add {\n  static readonly type = '[User] Add';\n  constructor(public payload: UserStateModel) {}\n}\n\nexport class Edit {\n  static readonly type = '[User] Edit';\n  constructor(public payload: UserStateModel | Partial<UserStateModel>) {}\n}\n\nexport class Delete {\n  static readonly type = '[User] Delete';\n  constructor() {}\n}\n\nexport class UpdateAttributes {\n  static readonly type = '[UserAttributes] Edit';\n  constructor(public payload: UserAttributesInput) {}\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "payload",
                        "type": "UserAttributesInput"
                    }
                ],
                "line": 20,
                "jsdoctags": [
                    {
                        "name": "payload",
                        "type": "UserAttributesInput",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "payload",
                    "type": "UserAttributesInput",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "type",
                    "defaultValue": "'[UserAttributes] Edit'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        115,
                        132
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "UpdateLastActive",
            "id": "class-UpdateLastActive-d646ed2ff7178c40d66a420585673988",
            "file": "src/app/store/onboarding/onboarding.actions.ts",
            "type": "class",
            "sourceCode": "import { OnboardingStateModel } from '@store/onboarding';\n\nexport class Add {\n  static readonly type = '[Onboarding] Add';\n  constructor(public payload: OnboardingStateModel) {}\n}\n\nexport class Edit {\n  static readonly type = '[Onboarding] Edit';\n  constructor(public payload: OnboardingStateModel) {}\n}\n\nexport class Delete {\n  static readonly type = '[Onboarding] Delete';\n  constructor() {}\n}\n\nexport class UpdateLastActive {\n  static readonly type = '[Onboarding] UpdateLastActive';\n  constructor(public payload: number) {}\n}\n\nexport class UpdateLastComplete {\n  static readonly type = '[Onboarding] UpdateLastComplete';\n  constructor(public payload: number) {}\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "payload",
                        "type": "number"
                    }
                ],
                "line": 19,
                "jsdoctags": [
                    {
                        "name": "payload",
                        "type": "number",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "payload",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "type",
                    "defaultValue": "'[Onboarding] UpdateLastActive'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        115,
                        132
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "UpdateLastComplete",
            "id": "class-UpdateLastComplete-d646ed2ff7178c40d66a420585673988",
            "file": "src/app/store/onboarding/onboarding.actions.ts",
            "type": "class",
            "sourceCode": "import { OnboardingStateModel } from '@store/onboarding';\n\nexport class Add {\n  static readonly type = '[Onboarding] Add';\n  constructor(public payload: OnboardingStateModel) {}\n}\n\nexport class Edit {\n  static readonly type = '[Onboarding] Edit';\n  constructor(public payload: OnboardingStateModel) {}\n}\n\nexport class Delete {\n  static readonly type = '[Onboarding] Delete';\n  constructor() {}\n}\n\nexport class UpdateLastActive {\n  static readonly type = '[Onboarding] UpdateLastActive';\n  constructor(public payload: number) {}\n}\n\nexport class UpdateLastComplete {\n  static readonly type = '[Onboarding] UpdateLastComplete';\n  constructor(public payload: number) {}\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "payload",
                        "type": "number"
                    }
                ],
                "line": 24,
                "jsdoctags": [
                    {
                        "name": "payload",
                        "type": "number",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "payload",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "type",
                    "defaultValue": "'[Onboarding] UpdateLastComplete'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        115,
                        132
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "UserSelectors",
            "id": "class-UserSelectors-aced208ddddec58cf3a411d405a9717c",
            "file": "src/app/store/user/user.selectors.ts",
            "type": "class",
            "sourceCode": "import { Selector } from '@ngxs/store';\nimport { UserStateModel } from '@store/user/user.model';\nimport { UserState } from '@store/user/user.state';\n\nexport class UserSelectors {\n  @Selector([UserState])\n  static getUser(state: UserStateModel): UserStateModel {\n    return state;\n  }\n\n  @Selector([UserState])\n  static getUserId(state: UserStateModel): string | undefined {\n    return state.id;\n  }\n}\n",
            "properties": [],
            "methods": [
                {
                    "name": "getUser",
                    "args": [
                        {
                            "name": "state",
                            "type": "UserStateModel"
                        }
                    ],
                    "optional": false,
                    "returnType": "UserStateModel",
                    "typeParameters": [],
                    "line": 7,
                    "decorators": [
                        {
                            "name": "Selector",
                            "stringifiedArguments": "undefined"
                        }
                    ],
                    "modifierKind": [
                        115
                    ],
                    "jsdoctags": [
                        {
                            "name": "state",
                            "type": "UserStateModel",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getUserId",
                    "args": [
                        {
                            "name": "state",
                            "type": "UserStateModel"
                        }
                    ],
                    "optional": false,
                    "returnType": "string | undefined",
                    "typeParameters": [],
                    "line": 12,
                    "decorators": [
                        {
                            "name": "Selector",
                            "stringifiedArguments": "undefined"
                        }
                    ],
                    "modifierKind": [
                        115
                    ],
                    "jsdoctags": [
                        {
                            "name": "state",
                            "type": "UserStateModel",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "UserStateModel",
            "id": "class-UserStateModel-134184ad5a4cbda5b2e2e6a7ce727ea0",
            "file": "src/app/store/user/user.model.ts",
            "type": "class",
            "sourceCode": "import {\n  UserInput,\n  OnboardingInput,\n  UserAttributesInput,\n} from '@shared/services/aws/api.service';\n\ntype typename = 'User';\n\nexport class UserStateModel implements UserInput {\n  id!: string;\n  userAttributes?: UserAttributesInput | null | undefined;\n  onboarding?: OnboardingInput | null | undefined;\n}\n",
            "properties": [
                {
                    "name": "id",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "onboarding",
                    "type": "OnboardingInput | null | undefined",
                    "optional": true,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "userAttributes",
                    "type": "UserAttributesInput | null | undefined",
                    "optional": true,
                    "description": "",
                    "line": 11
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "implements": [
                "UserInput"
            ]
        }
    ],
    "directives": [
        {
            "name": "HiddenAsteriskInputDirective",
            "id": "directive-HiddenAsteriskInputDirective-25a497edf43bc977758696dde930dfc2",
            "file": "src/app/shared/components/inputs/hidden-asterisk-input/hidden-asterisk-input.directive.ts",
            "type": "directive",
            "description": "",
            "sourceCode": "import {\n  AfterViewInit,\n  Directive,\n  ElementRef,\n  HostListener,\n  Input,\n  Renderer2,\n} from '@angular/core';\n\n@Directive({\n  selector: '[braveHiddenAsteriskInput]',\n})\nexport class HiddenAsteriskInputDirective {\n  private _host: HTMLInputElement | undefined;\n  private _mask: HTMLDivElement | undefined;\n\n  get host() {\n    return this._host;\n  }\n  set host(value: HTMLInputElement | undefined) {\n    this._host = value;\n  }\n\n  get mask() {\n    return this._mask;\n  }\n  set mask(value: HTMLDivElement | undefined) {\n    this._mask = value;\n  }\n\n  constructor(el: ElementRef, private renderer: Renderer2) {\n    this.host = el.nativeElement;\n  }\n\n  @HostListener('focus') onFocus() {\n    if (this.mask && this.host) {\n      this.removeMaskElement(this.host);\n    }\n  }\n\n  @HostListener('click') onClick() {\n    if (this.mask && this.host) {\n      this.removeMaskElement(this.host);\n    }\n  }\n\n  @HostListener('blur') onBlur() {\n    if (this.host?.value?.length) this.appendMaskElement(this.host);\n  }\n\n  ngAfterViewInit() {\n    /** create the wrapping div and assign relative */\n    const div = this.renderer.createElement('div');\n    this.renderer.setStyle(div, 'position', 'relative');\n    /** wrap the host in the div */\n    const el = this.host;\n    const parent = el?.parentNode;\n    this.renderer.insertBefore(parent, div, el);\n    /** insert the element into the div */\n    this.renderer.appendChild(div, el);\n  }\n\n  //TODO refactor to iterate over styles and classes to add\n  /**\n   * Appends the new mask element (asterisk) to the input to hide it\n   * @param el\n   */\n  appendMaskElement(el: HTMLInputElement) {\n    /** set the input value color to transparent */\n    this.renderer.setStyle(el, 'opacity', '0');\n    /** create the elements to attach */\n    let div = this.renderer.createElement('div');\n    let div2 = this.renderer.createElement('div');\n    let p = this.renderer.createElement('p');\n    let asterisk = this.renderer.createText('*');\n    /** set the style/classes of the elements */\n    this.renderer.setStyle(div, 'position', 'absolute');\n    this.renderer.setStyle(div, 'top', '0');\n    this.renderer.setStyle(div, 'left', '0');\n    this.renderer.setStyle(div, 'width', '100%');\n    this.renderer.setStyle(div, 'height', '100%');\n    this.renderer.setStyle(div, 'z-index', '2');\n    this.renderer.addClass(div, 'flex');\n    this.renderer.addClass(div, 'justify-center');\n    this.renderer.addClass(div, 'items-center');\n    /* use tailwind utility classes */\n    this.renderer.addClass(div2, 'flex');\n    this.renderer.addClass(div2, 'justify-center');\n    // this.renderer.addClass(div2, 'bg-coolGray-100');\n    this.renderer.addClass(div2, 'text-blueGray-600');\n    this.renderer.addClass(div2, 'text-3xl');\n    this.renderer.setStyle(div2, 'height', '100%');\n    /** attach the new elements to the DOM */\n    this.renderer.appendChild(p, asterisk);\n    this.renderer.appendChild(div2, p);\n    this.renderer.appendChild(div, div2);\n    el.insertAdjacentElement('afterend', div);\n    /** keep track of the mask element */\n    this.mask = div;\n    this.mask?.addEventListener('click', (event) => {\n      this.removeMaskElement(el);\n      el.focus();\n    });\n  }\n\n  removeMaskElement(el: HTMLInputElement) {\n    /** remove and rest the input element when the mask is clicked */\n    let parent: HTMLElement = this.renderer.parentNode(el);\n    let child: HTMLElement | null = parent.querySelector('div');\n    this.renderer.removeChild(parent, child);\n    this.renderer.setStyle(el, 'opacity', '1');\n    this.mask = undefined;\n  }\n}\n",
            "selector": "[braveHiddenAsteriskInput]",
            "providers": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "blur",
                    "args": [],
                    "argsDecorator": [],
                    "line": 47
                },
                {
                    "name": "click",
                    "args": [],
                    "argsDecorator": [],
                    "line": 41
                },
                {
                    "name": "focus",
                    "args": [],
                    "argsDecorator": [],
                    "line": 35
                }
            ],
            "propertiesClass": [
                {
                    "name": "_host",
                    "type": "HTMLInputElement | undefined",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "_mask",
                    "type": "HTMLDivElement | undefined",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        112
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "appendMaskElement",
                    "args": [
                        {
                            "name": "el",
                            "type": "HTMLInputElement"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 68,
                    "description": "<p>Appends the new mask element (asterisk) to the input to hide it</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1573,
                                "end": 1575,
                                "flags": 0,
                                "escapedText": "el"
                            },
                            "type": "HTMLInputElement",
                            "tagName": {
                                "pos": 1567,
                                "end": 1572,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": ""
                        }
                    ]
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 51
                },
                {
                    "name": "removeMaskElement",
                    "args": [
                        {
                            "name": "el",
                            "type": "HTMLInputElement"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 106,
                    "jsdoctags": [
                        {
                            "name": "el",
                            "type": "HTMLInputElement",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "el",
                        "type": "ElementRef"
                    },
                    {
                        "name": "renderer",
                        "type": "Renderer2"
                    }
                ],
                "line": 29,
                "jsdoctags": [
                    {
                        "name": "el",
                        "type": "ElementRef",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "host": {
                    "name": "host",
                    "setSignature": {
                        "name": "host",
                        "type": "void",
                        "args": [
                            {
                                "name": "value",
                                "type": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 20,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "host",
                        "type": "",
                        "returnType": "",
                        "line": 17
                    }
                },
                "mask": {
                    "name": "mask",
                    "setSignature": {
                        "name": "mask",
                        "type": "void",
                        "args": [
                            {
                                "name": "value",
                                "type": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 27,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "mask",
                        "type": "",
                        "returnType": "",
                        "line": 24
                    }
                }
            }
        },
        {
            "name": "OutlineTooltipDirective",
            "id": "directive-OutlineTooltipDirective-ff0602395fbce479ace6894c59e6300a",
            "file": "src/app/shared/components/tooltips/outline-tooltip/outline-tooltip.directive.ts",
            "type": "directive",
            "description": "",
            "sourceCode": "import { Directive, ElementRef, HostListener, Input } from '@angular/core';\nimport { createPopper, Placement } from '@popperjs/core';\n\n@Directive({\n  selector: '[braveOutlineTooltip]',\n})\nexport class OutlineTooltipDirective {\n  @Input() title: string = 'Message title';\n  @Input() body: string = 'Message body';\n  @Input() position: Placement = 'top';\n\n  private _host: HTMLElement | undefined;\n  private _tooltip: HTMLDivElement | undefined;\n  private popoverShow: boolean = false;\n\n  get host() {\n    return this._host;\n  }\n  set host(value: HTMLElement | undefined) {\n    this._host = value;\n  }\n\n  get tooltip() {\n    return this._tooltip;\n  }\n  set tooltip(value: HTMLDivElement | undefined) {\n    this._tooltip = value;\n  }\n\n  constructor(el: ElementRef) {\n    this.host = el.nativeElement;\n    this.tooltip = document.createElement('div');\n  }\n\n  @HostListener('mouseenter') onMouseEnter() {\n    this.toggleTooltip();\n  }\n\n  @HostListener('mouseleave') onMouseLeave() {\n    this.toggleTooltip();\n  }\n\n  ngAfterViewInit() {\n    if (this.tooltip) {\n      this.tooltip.innerHTML = `\n      <div class=\"bg-white border border-solid border-blueGray-300 m-4 block z-50 font-normal leading-normal max-w-xs text-left no-underline break-words rounded-lg\">\n        <div>\n          <p class=\"bg-white font-sans font-semibold text-sm text-coolGray-700 p-3 mb-0 border-b border-solid border-blueGray-300 rounded-t-lg\">\n            ${this.title}\n          </p>\n          <p class=\"font-sans text-sm text-coolGray-700 p-3 mb-4\">\n          ${this.body}\n          </p>\n        </div>\n      </div>\n      `;\n    }\n  }\n\n  toggleTooltip() {\n    if (this.popoverShow) {\n      this.popoverShow = false;\n      this.destroyPopper();\n    } else {\n      this.popoverShow = true;\n      this.createPoppper();\n    }\n  }\n  destroyPopper() {\n    this.tooltip?.parentNode?.removeChild(this.tooltip);\n  }\n  createPoppper() {\n    if (this.host && this.tooltip) {\n      createPopper(this.host, this.tooltip, {\n        placement: this.position,\n      });\n      this.host.parentNode?.insertBefore(this.tooltip, this.host.nextSibling);\n    }\n  }\n}\n",
            "selector": "[braveOutlineTooltip]",
            "providers": [],
            "inputsClass": [
                {
                    "name": "body",
                    "defaultValue": "'Message body'",
                    "line": 9,
                    "type": "string"
                },
                {
                    "name": "position",
                    "defaultValue": "'top'",
                    "line": 10,
                    "type": "Placement"
                },
                {
                    "name": "title",
                    "defaultValue": "'Message title'",
                    "line": 8,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "mouseenter",
                    "args": [],
                    "argsDecorator": [],
                    "line": 35
                },
                {
                    "name": "mouseleave",
                    "args": [],
                    "argsDecorator": [],
                    "line": 39
                }
            ],
            "propertiesClass": [
                {
                    "name": "_host",
                    "type": "HTMLElement | undefined",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "_tooltip",
                    "type": "HTMLDivElement | undefined",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "popoverShow",
                    "defaultValue": "false",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        112
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "createPoppper",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 72
                },
                {
                    "name": "destroyPopper",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 69
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 43
                },
                {
                    "name": "toggleTooltip",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 60
                }
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "el",
                        "type": "ElementRef"
                    }
                ],
                "line": 28,
                "jsdoctags": [
                    {
                        "name": "el",
                        "type": "ElementRef",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "host": {
                    "name": "host",
                    "setSignature": {
                        "name": "host",
                        "type": "void",
                        "args": [
                            {
                                "name": "value",
                                "type": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 19,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "host",
                        "type": "",
                        "returnType": "",
                        "line": 16
                    }
                },
                "tooltip": {
                    "name": "tooltip",
                    "setSignature": {
                        "name": "tooltip",
                        "type": "void",
                        "args": [
                            {
                                "name": "value",
                                "type": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 26,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "tooltip",
                        "type": "",
                        "returnType": "",
                        "line": 23
                    }
                }
            }
        }
    ],
    "components": [
        {
            "name": "AdminNavbarComponent",
            "id": "component-AdminNavbarComponent-7fecf8bd417842ebe060f9d40a0028d3",
            "file": "src/app/shared/components/navbars/admin-navbar/admin-navbar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-admin-navbar",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./admin-navbar.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 10
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'brave-admin-navbar',\n  templateUrl: './admin-navbar.component.html',\n})\nexport class AdminNavbarComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 7
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<!-- Navbar -->\n<nav\n  class=\"absolute top-0 left-0 w-full z-10 bg-transparent md:flex-row md:flex-nowrap md:justify-start flex items-center p-4\"\n>\n  <div\n    class=\"w-full mx-autp items-center flex justify-between md:flex-nowrap flex-wrap md:px-10 px-4\"\n  >\n    <!-- Brand -->\n    <a\n      class=\"text-white text-sm uppercase hidden lg:inline-block font-semibold\"\n      href=\"#pablo\"\n      >Dashboard</a\n    >\n    <!-- Form -->\n    <form\n      class=\"md:flex hidden flex-row flex-wrap items-center lg:ml-auto mr-3\"\n    >\n      <div class=\"relative flex w-full flex-wrap items-stretch\">\n        <span\n          class=\"z-10 h-full leading-snug font-normal absolute text-center text-blueGray-300 absolute bg-transparent rounded text-base items-center justify-center w-8 pl-3 py-3\"\n          ><i class=\"fas fa-search\"></i\n        ></span>\n        <input\n          type=\"text\"\n          placeholder=\"Search here...\"\n          class=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 relative bg-white bg-white rounded text-sm shadow outline-none focus:outline-none focus:ring w-full pl-10\"\n        />\n      </div>\n    </form>\n    <!-- User -->\n    <ul class=\"flex-col md:flex-row list-none items-center hidden md:flex\">\n      <brave-user-dropdown class=\"block\"></brave-user-dropdown>\n    </ul>\n  </div>\n</nav>\n"
        },
        {
            "name": "AppComponent",
            "id": "component-AppComponent-4fe657357e6cc32d9122b8259bd22664",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-root",
            "styleUrls": [
                "./app.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "'brave-app'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { AuthService } from '@shared/services/auth/auth.service';\nimport { SyncService } from '@shared/services/sync/sync.service';\n\n@Component({\n  selector: 'brave-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent {\n  title = 'brave-app';\n\n  // apiCreateListener$: ZenObservable.Subscription;\n  // apiUpdateListener$: ZenObservable.Subscription;\n  // apiDeleteListener$: ZenObservable.Subscription;\n\n  // inject app monitoring services\n  constructor(private auth: AuthService, private sync: SyncService) {}\n\n  // ngOnDestroy() {\n  //   if (this.apiCreateListener$) this.apiCreateListener$.unsubscribe();\n  //   if (this.apiUpdateListener$) this.apiUpdateListener$.unsubscribe();\n  //   if (this.apiDeleteListener$) this.apiDeleteListener$.unsubscribe();\n  // }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./app.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "auth",
                        "type": "AuthService"
                    },
                    {
                        "name": "sync",
                        "type": "SyncService"
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "auth",
                        "type": "AuthService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "sync",
                        "type": "SyncService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<router-outlet></router-outlet>\n"
        },
        {
            "name": "AuthenticationComponent",
            "id": "component-AuthenticationComponent-6044939ad2b3981bc8aa4ff01539e9be",
            "file": "src/app/layouts/authentication/authentication.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-authentication",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./authentication.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<void>",
                    "typeParameters": [],
                    "line": 11,
                    "modifierKind": [
                        120
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '@shared/services/auth/auth.service';\n\n@Component({\n  selector: 'brave-authentication',\n  templateUrl: './authentication.component.html',\n})\nexport class AuthenticationComponent implements OnInit {\n  constructor(private auth: AuthService) {}\n\n  async ngOnInit(): Promise<void> {\n    await this.auth.reloadCredentials();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "auth",
                        "type": "AuthService"
                    }
                ],
                "line": 8,
                "jsdoctags": [
                    {
                        "name": "auth",
                        "type": "AuthService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div>\n  <main>\n    <section\n      class=\"\n        relative\n        flex\n        justify-center\n        items-center\n        w-full\n        h-full\n        min-h-screen\n      \"\n    >\n      <router-outlet></router-outlet>\n    </section>\n  </main>\n</div>\n"
        },
        {
            "name": "AuthNavbarComponent",
            "id": "component-AuthNavbarComponent-fadaaff360d261c4e4e334547335cf9e",
            "file": "src/app/shared/components/navbars/auth-navbar/auth-navbar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-auth-navbar",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./auth-navbar.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "navbarOpen",
                    "defaultValue": "false",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12
                },
                {
                    "name": "setNavbarOpen",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'brave-auth-navbar',\n  templateUrl: './auth-navbar.component.html',\n})\nexport class AuthNavbarComponent implements OnInit {\n  navbarOpen = false;\n\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  setNavbarOpen() {\n    this.navbarOpen = !this.navbarOpen;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<nav\n  class=\"top-0 absolute z-50 w-full flex flex-wrap items-center justify-between px-2 py-3 navbar-expand-lg\"\n>\n  <div\n    class=\"container px-4 mx-auto flex flex-wrap items-center justify-between\"\n  >\n    <div\n      class=\"w-full relative flex justify-between lg:w-auto lg:static lg:block lg:justify-start\"\n    >\n      <a\n        [routerLink]=\"['/']\"\n        class=\"text-white text-sm font-bold leading-relaxed inline-block mr-4 py-2 whitespace-nowrap uppercase\"\n      >\n        Notus Angular\n      </a>\n      <button\n        class=\"cursor-pointer text-xl leading-none px-3 py-1 border border-solid border-transparent rounded bg-transparent block lg:hidden outline-none focus:outline-none\"\n        type=\"button\"\n        (click)=\"setNavbarOpen()\"\n      >\n        <i class=\"text-white fas fa-bars\"></i>\n      </button>\n    </div>\n    <div\n      class=\"lg:flex flex-grow items-center bg-white lg:bg-opacity-0 lg:shadow-none\"\n      [ngClass]=\"{ hidden: !navbarOpen, 'block rounded shadow-lg': navbarOpen }\"\n      id=\"example-navbar-warning\"\n    >\n      <ul class=\"flex flex-col lg:flex-row list-none mr-auto\">\n        <li class=\"flex items-center\">\n          <a\n            class=\"lg:text-white lg:hover:text-blueGray-200 text-blueGray-700 px-3 py-4 lg:py-2 flex items-center text-xs uppercase font-bold\"\n            href=\"https://www.creative-tim.com/learning-lab/tailwind/angular/overview/notus?ref=na-auth-navbar\"\n          >\n            <i\n              class=\"lg:text-blueGray-200 text-blueGray-400 far fa-file-alt text-lg leading-lg mr-2\"\n            ></i>\n            Docs\n          </a>\n        </li>\n      </ul>\n      <ul class=\"flex flex-col lg:flex-row list-none lg:ml-auto\">\n        <li class=\"flex items-center\">\n          <brave-pages-dropdown class=\"block\"></brave-pages-dropdown>\n        </li>\n        <li class=\"flex items-center\">\n          <a\n            class=\"lg:text-white lg:hover:text-blueGray-200 text-blueGray-700 px-3 py-4 lg:py-2 flex items-center text-xs uppercase font-bold\"\n            href=\"https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fdemos.creative-tim.com%2Fnotus-angular%2F\"\n            target=\"_blank\"\n          >\n            <i\n              class=\"lg:text-blueGray-200 text-blueGray-400 fab fa-facebook text-lg leading-lg\"\n            ></i>\n            <span class=\"lg:hidden inline-block ml-2\">Share</span>\n          </a>\n        </li>\n\n        <li class=\"flex items-center\">\n          <a\n            class=\"lg:text-white lg:hover:text-blueGray-200 text-blueGray-700 px-3 py-4 lg:py-2 flex items-center text-xs uppercase font-bold\"\n            href=\"https://twitter.com/intent/tweet?url=https%3A%2F%2Fdemos.creative-tim.com%2Fnotus-angular%2F&text=Start%20your%20development%20with%20a%20Free%20Tailwind%20CSS%20and%20Angular%20UI%20Kit%20and%20Admin.%20Let%20Notus%20Angular%20amaze%20you%20with%20its%20cool%20features%20and%20build%20tools%20and%20get%20your%20project%20to%20a%20whole%20new%20level.\"\n            target=\"_blank\"\n          >\n            <i\n              class=\"lg:text-blueGray-200 text-blueGray-400 fab fa-twitter text-lg leading-lg\"\n            ></i>\n            <span class=\"lg:hidden inline-block ml-2\">Tweet</span>\n          </a>\n        </li>\n\n        <li class=\"flex items-center\">\n          <a\n            class=\"lg:text-white lg:hover:text-blueGray-200 text-blueGray-700 px-3 py-4 lg:py-2 flex items-center text-xs uppercase font-bold\"\n            href=\"https://github.com/creativetimofficial/notus-angular?ref=na-auth-navbar\"\n            target=\"_blank\"\n          >\n            <i\n              class=\"lg:text-blueGray-200 text-blueGray-400 fab fa-github text-lg leading-lg\"\n            ></i>\n            <span class=\"lg:hidden inline-block ml-2\">Star</span>\n          </a>\n        </li>\n\n        <li class=\"flex items-center\">\n          <button\n            class=\"bg-white text-blueGray-700 active:bg-blueGray-50 text-xs font-bold uppercase px-4 py-2 rounded shadow hover:shadow-md outline-none focus:outline-none lg:mr-1 lg:mb-0 ml-3 mb-3 ease-linear transition-all duration-150\"\n            type=\"button\"\n          >\n            <i class=\"fas fa-arrow-alt-circle-down\"></i> Download\n          </button>\n        </li>\n      </ul>\n    </div>\n  </div>\n</nav>\n"
        },
        {
            "name": "BaseFormComponent",
            "id": "component-BaseFormComponent-9c1b0efc7093518fcb7acfd556a82530",
            "file": "src/app/shared/components/forms/base-form/base-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-base-form",
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "hideHint",
                    "defaultValue": "false",
                    "line": 16,
                    "type": "boolean"
                }
            ],
            "outputsClass": [
                {
                    "name": "onChanges",
                    "defaultValue": "new EventEmitter()",
                    "line": 9,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "onSubmit",
                    "defaultValue": "new EventEmitter()",
                    "line": 10,
                    "type": "EventEmitter<FormGroup>"
                },
                {
                    "name": "onSubmitError",
                    "defaultValue": "new EventEmitter()",
                    "line": 12,
                    "type": "EventEmitter<literal type>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "parentForm",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 18
                }
            ],
            "methodsClass": [
                {
                    "name": "addChild",
                    "args": [
                        {
                            "name": "childName",
                            "type": "string"
                        },
                        {
                            "name": "childGroup",
                            "type": "FormGroup"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "jsdoctags": [
                        {
                            "name": "childName",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "childGroup",
                            "type": "FormGroup",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "submitForm",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Inject, Input, Output } from '@angular/core';\nimport { AbstractControl, FormBuilder, FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'brave-base-form',\n  template: '',\n})\nexport class BaseFormComponent {\n  @Output() onChanges: EventEmitter<any> = new EventEmitter();\n  @Output() onSubmit: EventEmitter<FormGroup> = new EventEmitter();\n  @Output()\n  onSubmitError: EventEmitter<{\n    [key: string]: AbstractControl;\n  }> = new EventEmitter();\n\n  @Input() hideHint: boolean = false;\n\n  parentForm: FormGroup;\n  constructor(fb: FormBuilder, @Inject('name') private name: string) {\n    this.parentForm = fb.group({\n      name: [name],\n    }); // simple parent form with name of form\n  }\n\n  addChild(childName: string, childGroup: FormGroup) {\n    this.parentForm.addControl(childName, childGroup);\n  }\n\n  submitForm(): void {\n    this.parentForm.valid\n      ? this.onSubmit.emit(this.parentForm)\n      : this.onSubmitError.emit(this.parentForm.controls);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "fb",
                        "type": "FormBuilder"
                    },
                    {
                        "name": "name",
                        "type": "string"
                    }
                ],
                "line": 18,
                "jsdoctags": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "name",
                        "type": "string",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "BaseModalRegularComponent",
            "id": "component-BaseModalRegularComponent-4e75336fda9cfe7684da063f9c81fbe5",
            "file": "src/app/shared/components/modals/base-modal-regular/base-modal-regular.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-base-modal-regular",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./base-modal-regular.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "config",
                    "defaultValue": "{\n    openButtonText: 'Open',\n    title: 'Message Title',\n    body: 'Message Text',\n    actionButtonOneText: 'Cancel',\n    actionButtonTwoText: 'Continue',\n  }",
                    "line": 16,
                    "type": "IBaseModalRegularConfig"
                }
            ],
            "outputsClass": [
                {
                    "name": "actionOne",
                    "defaultValue": "new EventEmitter()",
                    "line": 23,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "actionTwo",
                    "defaultValue": "new EventEmitter()",
                    "line": 24,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "showModal",
                    "defaultValue": "false",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29
                },
                {
                    "name": "toggleModal",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\nexport interface IBaseModalRegularConfig {\n  openButtonText: string;\n  title: string;\n  body: string;\n  actionButtonOneText: string;\n  actionButtonTwoText: string;\n}\n\n@Component({\n  selector: 'brave-base-modal-regular',\n  templateUrl: './base-modal-regular.component.html',\n})\nexport class BaseModalRegularComponent implements OnInit {\n  @Input() config: IBaseModalRegularConfig = {\n    openButtonText: 'Open',\n    title: 'Message Title',\n    body: 'Message Text',\n    actionButtonOneText: 'Cancel',\n    actionButtonTwoText: 'Continue',\n  };\n  @Output() actionOne: EventEmitter<any> = new EventEmitter();\n  @Output() actionTwo: EventEmitter<any> = new EventEmitter();\n\n  public showModal = false;\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  toggleModal() {\n    this.showModal = !this.showModal;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 26
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<brave-filled-onlytext-button (click)=\"toggleModal()\">\n  {{ config.openButtonText }}\n</brave-filled-onlytext-button>\n<div\n  *ngIf=\"showModal\"\n  class=\"overflow-x-hidden overflow-y-auto fixed inset-0 z-50 outline-none focus:outline-none justify-center items-center flex\"\n>\n  <div class=\"relative w-auto my-6 mx-auto max-w-3xl\">\n    <!--content-->\n    <div\n      class=\"border-0 rounded-lg shadow-lg relative flex flex-col w-full bg-white outline-none focus:outline-none\"\n    >\n      <!--header-->\n      <div\n        class=\"flex items-center justify-between px-5 py-3 border-b border-solid border-blueGray-200 rounded-t\"\n      >\n        <p class=\"font-sans font-semibold text-base text-coolGray-700\">\n          {{ config.title }}\n        </p>\n        <button\n          class=\"p-1 ml-auto bg-transparent border-0 text-indigo-800 float-right text-3xl leading-none font-semibold outline-none focus:outline-none\"\n          (click)=\"toggleModal()\"\n        >\n          <span class=\"material-icons text-indigo-800\">close</span>\n        </button>\n      </div>\n      <!--body-->\n      <div class=\"relative p-5 flex-auto\">\n        <p class=\"my-4 font-sans text-sm text-coolGray-700\">\n          {{ config.body }}\n        </p>\n      </div>\n      <!--footer-->\n      <div class=\"flex items-center justify-end px-5 pt-5 pb-8 rounded-b\">\n        <brave-links-onlytext-button (click)=\"actionOne.emit($event)\">\n          {{ config.actionButtonOneText }}\n        </brave-links-onlytext-button>\n        <brave-filled-onlytext-button (click)=\"actionTwo.emit($event)\">{{\n          config.actionButtonTwoText\n        }}</brave-filled-onlytext-button>\n      </div>\n    </div>\n  </div>\n</div>\n<div *ngIf=\"showModal\" class=\"opacity-20 fixed inset-0 z-40 bg-black\"></div>\n"
        },
        {
            "name": "BaseModalSmallComponent",
            "id": "component-BaseModalSmallComponent-c0c60cde89791bd56210ebe83604fd32",
            "file": "src/app/shared/components/modals/base-modal-small/base-modal-small.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-base-modal-small",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./base-modal-small.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "config",
                    "defaultValue": "{\n    openButtonText: 'Open',\n    title: 'Message Title',\n    body: 'Message Text',\n    actionButtonOneText: 'Cancel',\n    actionButtonTwoText: 'Continue',\n  }",
                    "line": 16,
                    "type": "IBaseModalSmallConfig"
                }
            ],
            "outputsClass": [
                {
                    "name": "actionOne",
                    "defaultValue": "new EventEmitter()",
                    "line": 23,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "actionTwo",
                    "defaultValue": "new EventEmitter()",
                    "line": 24,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "showModal",
                    "defaultValue": "false",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29
                },
                {
                    "name": "toggleModal",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\nexport interface IBaseModalSmallConfig {\n  openButtonText: string;\n  title: string;\n  body: string;\n  actionButtonOneText: string;\n  actionButtonTwoText: string;\n}\n\n@Component({\n  selector: 'brave-base-modal-small',\n  templateUrl: './base-modal-small.component.html',\n})\nexport class BaseModalSmallComponent implements OnInit {\n  @Input() config: IBaseModalSmallConfig = {\n    openButtonText: 'Open',\n    title: 'Message Title',\n    body: 'Message Text',\n    actionButtonOneText: 'Cancel',\n    actionButtonTwoText: 'Continue',\n  };\n  @Output() actionOne: EventEmitter<any> = new EventEmitter();\n  @Output() actionTwo: EventEmitter<any> = new EventEmitter();\n\n  public showModal = false;\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  toggleModal() {\n    this.showModal = !this.showModal;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 26
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<brave-filled-onlytext-button (click)=\"toggleModal()\">\n  {{ config.openButtonText }}\n</brave-filled-onlytext-button>\n<div\n  *ngIf=\"showModal\"\n  class=\"overflow-x-hidden overflow-y-auto fixed inset-0 z-50 outline-none focus:outline-none justify-center items-center flex\"\n>\n  <div class=\"relative w-auto my-6 mx-auto max-w-sm\">\n    <!--content-->\n    <div\n      class=\"border-0 rounded-lg shadow-lg relative flex flex-col w-full bg-white outline-none focus:outline-none\"\n    >\n      <!--header-->\n      <div\n        class=\"flex items-center justify-between px-5 py-3 border-b border-solid border-blueGray-200 rounded-t\"\n      >\n        <p class=\"font-sans font-semibold text-base text-coolGray-700\">\n          {{ config.title }}\n        </p>\n        <button\n          class=\"p-1 ml-auto bg-transparent border-0 text-indigo-800 float-right text-3xl leading-none font-semibold outline-none focus:outline-none\"\n          (click)=\"toggleModal()\"\n        >\n          <span class=\"material-icons text-indigo-800\">close</span>\n        </button>\n      </div>\n      <!--body-->\n      <div class=\"relative p-5 flex-auto\">\n        <p class=\"my-4 font-sans text-sm text-coolGray-700\">\n          {{ config.body }}\n        </p>\n      </div>\n      <!--footer-->\n      <div class=\"flex items-center justify-end px-5 pt-5 pb-8 rounded-b\">\n        <brave-links-onlytext-button (click)=\"actionOne.emit($event)\">\n          {{ config.actionButtonOneText }}\n        </brave-links-onlytext-button>\n        <brave-filled-onlytext-button (click)=\"actionTwo.emit($event)\">{{\n          config.actionButtonTwoText\n        }}</brave-filled-onlytext-button>\n      </div>\n    </div>\n  </div>\n</div>\n<div *ngIf=\"showModal\" class=\"opacity-20 fixed inset-0 z-40 bg-black\"></div>\n"
        },
        {
            "name": "ComplianceComponent",
            "id": "component-ComplianceComponent-2ffa76b092b35abba1bd3e239db9082c",
            "file": "src/app/layouts/compliance/compliance.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-compliance",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./compliance.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 10
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'brave-compliance',\n  templateUrl: './compliance.component.html',\n})\nexport class ComplianceComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 7
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>compliance works!</p>\n"
        },
        {
            "name": "CompliancePrivacyComponent",
            "id": "component-CompliancePrivacyComponent-590b4b30b10c813e4eb1d5bc412421c8",
            "file": "src/app/views/compliance-privacy/compliance-privacy.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-compliance-privacy",
            "styleUrls": [
                "./compliance-privacy.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./compliance-privacy.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'brave-compliance-privacy',\n  templateUrl: './compliance-privacy.component.html',\n  styleUrls: ['./compliance-privacy.component.css']\n})\nexport class CompliancePrivacyComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./compliance-privacy.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>compliance-privacy works!</p>\n"
        },
        {
            "name": "ComplianceTosComponent",
            "id": "component-ComplianceTosComponent-a6fab3f60bb975e3821e564efa7e615f",
            "file": "src/app/views/compliance-tos/compliance-tos.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-compliance-tos",
            "styleUrls": [
                "./compliance-tos.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./compliance-tos.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'brave-compliance-tos',\n  templateUrl: './compliance-tos.component.html',\n  styleUrls: ['./compliance-tos.component.css']\n})\nexport class ComplianceTosComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./compliance-tos.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>compliance-tos works!</p>\n"
        },
        {
            "name": "CreditBuilderCardComponent",
            "id": "component-CreditBuilderCardComponent-9dfa0652fa520ce7646c8a6e6990b255",
            "file": "src/app/shared/components/cards/credit-builder-card/credit-builder-card.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-credit-builder-card",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./credit-builder-card.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 11
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'brave-credit-builder-card',\n  templateUrl: './credit-builder-card.component.html'\n})\nexport class CreditBuilderCardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 7
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"relative flex flex-col break-words w-full p-5 rounded-lg border border-blueGray-300\">\n\t<span class=\"font-semibold\"><p>Self - Credit Builder Account + Secured Visa® Credit Card</p></span>\n\t<ul class=\"list-disc\">\n\t\t<li class=\"text-sm ml-4\">Combined credit builder account and secured card products to help you build credit and save* money (minus interest and fees)</li>\n\t\t<li class=\"text-sm ml-4\">No credit check. No credit history required.</li>\n\t</ul>\n\t<img class=\"mt-2\" src=\"assets/img/credit-card.png\">\n</div>\n\n<div *ngIf=\"false\" class=\"list-disc\"></div>"
        },
        {
            "name": "CreditcardCardComponent",
            "id": "component-CreditcardCardComponent-fb5c21e4605f67ed1f503dfafca39be6",
            "file": "src/app/shared/components/cards/creditcard-card/creditcard-card.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-creditcard-card",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./creditcard-card.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "status",
                    "defaultValue": "'good'",
                    "line": 15,
                    "type": "Status"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "open$",
                    "defaultValue": "of(false)",
                    "type": "Observable<boolean> | undefined",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "viewDetail",
                    "type": "ViewdetailButtonComponent | undefined",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "ViewdetailButtonComponent"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { AfterViewInit, Component, ViewChild, Input } from '@angular/core';\nimport { ViewdetailButtonComponent } from '@shared/components/buttons/viewdetail-button/viewdetail-button.component';\nimport { Observable, of } from 'rxjs';\n\nexport type Status = 'excellent' | 'good' | 'okay' | 'poor';\n\n@Component({\n  selector: 'brave-creditcard-card',\n  templateUrl: './creditcard-card.component.html',\n})\nexport class CreditcardCardComponent implements AfterViewInit {\n  @ViewChild(ViewdetailButtonComponent)\n  viewDetail: ViewdetailButtonComponent | undefined;\n  open$: Observable<boolean> | undefined = of(false);\n  @Input() status: Status = 'good';\n\n  constructor() {}\n\n  ngAfterViewInit(): void {\n    this.open$ = this.viewDetail?.open$.asObservable();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 15
            },
            "implements": [
                "AfterViewInit"
            ],
            "templateData": "<div\n  class=\"relative flex flex-col break-words w-full py-5 rounded-lg border border-blueGray-300\"\n>\n  <div class=\"flex pr-5\">\n    <div class=\"px-4 w-13\">\n      <!-- left column  section 1 -->\n      <div\n        class=\"rounded-full border-none w-5 h-5\"\n        [ngClass]=\"status | accountStatus\"\n      ></div>\n    </div>\n    <div class=\"flex flex-col w-full\">\n      <!--  right column section 2 -->\n      <div class=\"flex flex-row justify-between p-0 -mt-1 mb-1\">\n        <!-- header  -->\n        <span><p class=\"brave-body1-semibold\">CITI</p></span>\n        <span\n          ><p class=\"brave-body1-semibold\"></p>\n          80%</span\n        >\n      </div>\n\n      <div class=\"flex flex-row\">\n        <!-- credit balance  -->\n        <span><p class=\"brave-body1\">Credit Balance:&nbsp;</p></span>\n        <span><p class=\"brave-body1\">$800</p></span>\n      </div>\n\n      <div class=\"flex flex-row\">\n        <!-- credit limit  -->\n        <span><p class=\"brave-body1\">Credit Limit:&nbsp;</p></span>\n        <span><p class=\"brave-body1\">$2000</p></span>\n      </div>\n\n      <div class=\"mt-1\">\n        <!-- buttons goes here -->\n        <brave-viewdetail-button>View Details</brave-viewdetail-button>\n      </div>\n    </div>\n  </div>\n\n  <div *ngIf=\"open$ | async as open\" class=\"flex flex-col w-full py-5 px-4\">\n    <div class=\"border-t border-blueGray-300\"></div>\n  </div>\n\n  <div *ngIf=\"open$ | async as open\" class=\"flex flex-row pr-5\">\n    <div class=\"px-4 w-13\">\n      <!-- left column  section 1 -->\n      <div class=\"w-5 h-5\"></div>\n    </div>\n    <div class=\"flex flex-col w-full pr-1\">\n      <!--  right column section 2 -->\n\n      <div class=\"flex flex-row justify-between\">\n        <!-- min payment  -->\n        <span><p class=\"brave-body1\">Minimum Payment:&nbsp;</p></span>\n        <span><p class=\"brave-body1\">$50</p></span>\n      </div>\n\n      <div class=\"flex flex-row justify-between\">\n        <!-- date opened TODO swith to pipe  -->\n        <span><p class=\"brave-body1\">Date Opened:&nbsp;</p></span>\n        <span><p class=\"brave-body1\">02/01/2020</p></span>\n      </div>\n\n      <div class=\"flex flex-row justify-between\">\n        <!-- account status  -->\n        <span><p class=\"brave-body1\">Account Status:&nbsp;</p></span>\n        <span><p class=\"brave-body1\">In good standing</p></span>\n      </div>\n\n      <div class=\"flex flex-row justify-between\">\n        <!-- ownership of account  -->\n        <span><p class=\"brave-body1\">Ownership of account:&nbsp;</p></span>\n        <span><p class=\"brave-body1\">Self</p></span>\n      </div>\n\n      <div class=\"flex flex-row justify-between\">\n        <!-- credit limit  -->\n        <span><p class=\"brave-body1\">Days 30/60/90 Late:&nbsp;</p></span>\n        <span><p class=\"brave-body1\">1/0/0</p></span>\n      </div>\n    </div>\n  </div>\n</div>\n"
        },
        {
            "name": "CreditReportCardComponent",
            "id": "component-CreditReportCardComponent-b4a73992f1a1ecf9e82374971eabcfd0",
            "file": "src/app/shared/components/cards/credit-report-card/credit-report-card.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-credit-report-card",
            "styleUrls": [
                "./credit-report-card.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./credit-report-card.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "creditorName",
                    "defaultValue": "''",
                    "line": 22,
                    "type": "string"
                },
                {
                    "name": "firstFieldName",
                    "defaultValue": "''",
                    "line": 24,
                    "type": "string"
                },
                {
                    "name": "firstFieldValue",
                    "defaultValue": "''",
                    "line": 25,
                    "type": "string"
                },
                {
                    "name": "isOpen",
                    "defaultValue": "false",
                    "line": 23,
                    "type": "boolean"
                },
                {
                    "name": "secondFieldName",
                    "defaultValue": "''",
                    "line": 26,
                    "type": "string"
                },
                {
                    "name": "secondFieldValue",
                    "defaultValue": "''",
                    "line": 27,
                    "type": "string"
                },
                {
                    "name": "status",
                    "defaultValue": "''",
                    "line": 30,
                    "type": "string"
                },
                {
                    "name": "thirdFieldName",
                    "defaultValue": "''",
                    "line": 28,
                    "type": "string"
                },
                {
                    "name": "thirdFieldValue",
                    "defaultValue": "''",
                    "line": 29,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit, Input } from '@angular/core';\n\nexport interface ICreditReportCardInputs {\n  type: string;\n  creditorName: string;\n  isOpen: boolean;\n  firstFieldName: string;\n  firstFieldValue: string | number;\n  secondFieldName: string;\n  secondFieldValue: string | number;\n  thirdFieldName: string;\n  thirdFieldValue: string | number;\n  status: string;\n}\n\n@Component({\n  selector: 'brave-credit-report-card',\n  templateUrl: './credit-report-card.component.html',\n  styleUrls: ['./credit-report-card.component.css'],\n})\nexport class CreditReportCardComponent implements OnInit {\n  @Input() creditorName: string = '';\n  @Input() isOpen: boolean = false;\n  @Input() firstFieldName: string = '';\n  @Input() firstFieldValue: string = '';\n  @Input() secondFieldName: string = '';\n  @Input() secondFieldValue: string = '';\n  @Input() thirdFieldName: string = '';\n  @Input() thirdFieldValue: string = '';\n  @Input() status: string = '';\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./credit-report-card.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 30
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"border-t border-blueGray-300 my-2\"></div>\n<div class=\"flex items-center\">\n  <div\n    class=\"ml-3 h-4 w-4 bg-blue-500 rounded-full border-none\"\n    [ngClass]=\"status | snapshotStatus: 'background'\"\n  ></div>\n  <span class=\"ml-3\"\n    >{{ creditorName }} ({{ isOpen ? \"Open\" : \"Closed\" }})</span\n  >\n</div>\n<div class=\"card pl-10 pr-3 mt-1\">\n  <div class=\"grid grid-cols-2 gap-4 mb-2\">\n    <span\n      ><p class=\"text-sm font-semibold\">{{ firstFieldName }}:</p></span\n    >\n    <span\n      ><p class=\"text-sm font-semibold text-right\">\n        {{ firstFieldValue }}\n      </p></span\n    >\n    <span\n      ><p class=\"text-xs text-dk-gray\">{{ secondFieldName }}</p></span\n    >\n    <span\n      ><p class=\"text-xs text-dk-gray text-opacity-50 text-right\">\n        {{ secondFieldValue }}\n      </p></span\n    >\n    <span\n      ><p class=\"text-xs text-dk-gray\">{{ thirdFieldName }}</p></span\n    >\n    <span\n      ><p class=\"text-xs text-dk-gray text-opacity-50 text-right\">\n        {{ thirdFieldValue }}\n      </p></span\n    >\n  </div>\n  <p class=\"text-sm mt-5 hover:cursor-pointer\">\n    View Details <span class=\"ml-2\">&#10095;</span>\n  </p>\n</div>\n<div class=\"border-t border-blueGray-300 my-2\"></div>\n"
        },
        {
            "name": "CreditReportComponent",
            "id": "component-CreditReportComponent-ff60cd52a3ffafcd67b84cff97ae7c82",
            "file": "src/app/views/credit-report/credit-report/credit-report.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-credit-report",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./credit-report.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "creditReport$",
                    "type": "Observable<IMergeReport>",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "preferences$",
                    "type": "Observable<PreferencesStateModel>",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26
                },
                {
                    "name": "onHide",
                    "args": [
                        {
                            "name": "report",
                            "type": "ICreditReportCardGroup"
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 32,
                    "description": "<p>Handle hide event emitter from pure...hides positive accounts</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1169,
                                "end": 1175,
                                "flags": 0,
                                "escapedText": "report"
                            },
                            "type": "ICreditReportCardGroup",
                            "tagName": {
                                "pos": 1138,
                                "end": 1143,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": "",
                            "typeExpression": {
                                "pos": 1144,
                                "end": 1168,
                                "flags": 0,
                                "kind": 277,
                                "type": {
                                    "pos": 1145,
                                    "end": 1167,
                                    "flags": 2097152,
                                    "kind": 161,
                                    "typeName": {
                                        "pos": 1145,
                                        "end": 1167,
                                        "flags": 2097152,
                                        "escapedText": "ICreditReportCardGroup"
                                    }
                                }
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit, Input } from '@angular/core';\nimport { Store } from '@ngxs/store';\nimport { IMergeReport } from '@shared/interfaces/merge-report.interface';\nimport { CreditreportService } from '@shared/services/creditreport/creditreport.service';\nimport { PreferencesStateModel } from '@store/preferences';\nimport * as PreferenceActions from '@store/preferences/preferences.actions';\nimport { ICreditReportCardGroup } from '@views/credit-report/credit-report-pure/credit-report-pure.component';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'brave-credit-report',\n  templateUrl: './credit-report.component.html',\n})\nexport class CreditReportComponent implements OnInit {\n  preferences$: Observable<PreferencesStateModel>;\n  creditReport$: Observable<IMergeReport>;\n\n  constructor(\n    private creditReportService: CreditreportService,\n    private store: Store\n  ) {\n    this.creditReport$ = this.creditReportService.tuReport$.pipe();\n    this.preferences$ = this.creditReportService.preferences$.pipe();\n  }\n\n  ngOnInit(): void {}\n\n  /**\n   * Handle hide event emitter from pure...hides positive accounts\n   * @param {ICreditReportCardGroup} report\n   */\n  onHide(report: ICreditReportCardGroup): any {\n    // I need to update the state\n    const prefs = this.creditReportService.tuPreferences;\n    const updated: PreferencesStateModel = {\n      ...prefs,\n      showAllAccounts: {\n        ...prefs.showAllAccounts,\n        [report.group]: false,\n      },\n    };\n    this.store.dispatch(new PreferenceActions.Edit(updated));\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "creditReportService",
                        "type": "CreditreportService"
                    },
                    {
                        "name": "store",
                        "type": "Store"
                    }
                ],
                "line": 16,
                "jsdoctags": [
                    {
                        "name": "creditReportService",
                        "type": "CreditreportService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "store",
                        "type": "Store",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div *ngIf=\"creditReport$ | async as creditReports\">\n  <div *ngIf=\"preferences$ | async as preferences\">\n    <brave-credit-report-pure\n      (hide)=\"onHide($event)\"\n      [preferences]=\"preferences\"\n      [creditReports]=\"creditReports | creditReport: preferences\"\n    ></brave-credit-report-pure>\n  </div>\n</div>\n"
        },
        {
            "name": "CreditReportGraphicComponent",
            "id": "component-CreditReportGraphicComponent-35efccad17c1b680a0aa5c6251066196",
            "file": "src/app/shared/components/graphics/credit-report-graphic/credit-report-graphic.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-credit-report-graphic",
            "styleUrls": [
                "./credit-report-graphic.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./credit-report-graphic.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "base",
                    "defaultValue": "0",
                    "line": 9,
                    "type": "number"
                },
                {
                    "name": "currentValue",
                    "defaultValue": "0",
                    "line": 11,
                    "type": "number"
                },
                {
                    "name": "limit",
                    "defaultValue": "0",
                    "line": 10,
                    "type": "number"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "percentage",
                    "defaultValue": "this.currentValue / this.limit",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'brave-credit-report-graphic',\n  templateUrl: './credit-report-graphic.component.html',\n  styleUrls: ['./credit-report-graphic.component.css']\n})\nexport class CreditReportGraphicComponent implements OnInit {\n  @Input() base: number = 0;\n  @Input() limit: number = 0;\n  @Input() currentValue: number = 0;\n  percentage = this.currentValue / this.limit;\n  \n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./credit-report-graphic.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 12
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"flex flex-col items-center bg-indigo-700 pt-3 pb-5 px-4\">\n  <p class=\"font-bold text-white\">Your Score</p>\n  <div class=\"font-bold text-white flex mt-3\">\n    <div class=\"mr-2 text-2xl -mt-2\">&#9650;</div><span>+5 points</span>\n  </div>\n  <p class=\"text-white text-xs text-opacity-50\">since last month</p>\n  <p class=\"text-5xl text-white font-bold\">{{ currentValue }}</p>\n  <p class=\"text-white font-extrabold\">{{ percentage | creditReportGraphic: 'status' }}}</p>\n  <div class=\"mt-2 h-4 w-full bg-gradient-to-r from-purple-400 via-pink-500 to-red-500\">\n    <div class=\"text-2xl text-white fixed {{ percentage | creditReportGraphic: 'css-class' }}\">&#9650;</div>\n  </div>\n  <div class=\"w-full flex justify-between mt-2\">\n    <div>\n      <p class=\"text-white text-xs font-bold\">{{ base }}</p>\n    </div>\n    <div>\n      <p class=\"text-white text-xs font-bold\">{{ limit }}</p>\n    </div>\n  </div>\n  <p class=\"mt-4 text-lg font-bold text-white text-center\">TransUnion<br>VantageScore 3.0</p>\n</div>\n"
        },
        {
            "name": "CreditReportPureComponent",
            "id": "component-CreditReportPureComponent-5f42e22a6b01e2448b89d863b4ed31d9",
            "file": "src/app/views/credit-report/credit-report-pure/credit-report-pure.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-credit-report-pure",
            "styleUrls": [
                "./credit-report-pure.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./credit-report-pure.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "creditReports",
                    "defaultValue": "[]",
                    "line": 18,
                    "type": "ICreditReportCardGroup[]"
                },
                {
                    "name": "preferences",
                    "defaultValue": "{} as PreferencesStateModel",
                    "line": 19,
                    "type": "PreferencesStateModel"
                }
            ],
            "outputsClass": [
                {
                    "name": "hide",
                    "defaultValue": "new EventEmitter()",
                    "line": 20,
                    "type": "EventEmitter<ICreditReportCardGroup>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\nimport { ICreditReportCardInputs } from '@shared/components/cards/credit-report-card/credit-report-card.component';\nimport { CreditReportGroups } from '@shared/data/credit-report';\nimport { PreferencesStateModel } from '@store/preferences';\n\nexport interface ICreditReportCardGroup {\n  title: string;\n  group: CreditReportGroups;\n  cards: ICreditReportCardInputs[];\n}\n\n@Component({\n  selector: 'brave-credit-report-pure',\n  templateUrl: './credit-report-pure.component.html',\n  styleUrls: ['./credit-report-pure.component.css'],\n})\nexport class CreditReportPureComponent implements OnInit {\n  @Input() creditReports: ICreditReportCardGroup[] = [];\n  @Input() preferences: PreferencesStateModel = {} as PreferencesStateModel;\n  @Output() hide: EventEmitter<ICreditReportCardGroup> = new EventEmitter();\n\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./credit-report-pure.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 20
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"container mx-auto max-w-xs h-full\">\n  <div class=\"p-4\">\n    <span class=\"text-lg\">Your TransUnion Credit Report</span>\n    <div class=\"w-full h-40 bg-gray-400 mt-4\">\n      <!-- Placeholder -->\n    </div>\n    <p class=\"text-xs mt-3 text-gray-600\">As of 03/17/2021</p>\n  </div>\n  <div class=\"p-4\" *ngFor=\"let report of creditReports\">\n    <h6 class=\"text-lg\">{{ report.title }}</h6>\n    <div *ngIf=\"preferences.showAllAccounts[report.group]\">\n      <input type=\"checkbox\" id=\"dont-show-hide\" (click)=\"hide.emit(report)\" />\n      <label for=\"dont-show-hide\" class=\"ml-2 mr-auto\"\n        >Only Show me delinquent accounts</label\n      >\n    </div>\n    <brave-credit-report-card\n      *ngFor=\"let card of report.cards\"\n      [creditorName]=\"card.creditorName\"\n      [isOpen]=\"card.isOpen\"\n      [firstFieldName]=\"card.firstFieldName\"\n      [firstFieldValue]=\"card.firstFieldValue.toString()\"\n      [secondFieldName]=\"card.secondFieldName\"\n      [secondFieldValue]=\"card.secondFieldValue.toString()\"\n      [thirdFieldName]=\"card.thirdFieldName\"\n      [thirdFieldValue]=\"card.thirdFieldValue.toString()\"\n    ></brave-credit-report-card>\n  </div>\n</div>\n"
        },
        {
            "name": "DashboardComponent",
            "id": "component-DashboardComponent-488e80cad316a972a4ea9fa05bd91e7d",
            "file": "src/app/layouts/dashboard/dashboard.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-dashboard",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./dashboard.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { CreditreportService } from '@shared/services/creditreport/creditreport.service';\nimport { DashboardService } from '@shared/services/dashboard/dashboard.service';\n\n@Component({\n  selector: 'brave-dashboard',\n  templateUrl: './dashboard.component.html',\n})\nexport class DashboardComponent implements OnInit {\n  constructor(\n    private dashboardService: DashboardService,\n    private creditReportService: CreditreportService\n  ) {}\n\n  ngOnInit(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "dashboardService",
                        "type": "DashboardService"
                    },
                    {
                        "name": "creditReportService",
                        "type": "CreditreportService"
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "dashboardService",
                        "type": "DashboardService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "creditReportService",
                        "type": "CreditreportService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div>\n  <main>\n    <section\n      class=\"relative flex flex-col justify-center items-center w-full h-full min-h-screen\"\n    >\n      <router-outlet></router-outlet>\n      <brave-navigation-tabs></brave-navigation-tabs>\n    </section>\n  </main>\n</div>\n"
        },
        {
            "name": "DashboardInitComponent",
            "id": "component-DashboardInitComponent-a58eeeda1cbab91c4533079ff4bae841",
            "file": "src/app/views/dashboard-init/dashboard-init.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-dashboard-init",
            "styleUrls": [
                "./dashboard-init.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./dashboard-init.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "critical",
                    "defaultValue": "'critical ' as SnapshotStatus",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "danger",
                    "defaultValue": "'danger ' as SnapshotStatus",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "defaultStrMessage",
                    "defaultValue": "'Welcome back!'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "hidden",
                    "defaultValue": "'hidden' as LabelOfSnapshot",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "initStrMessage",
                    "defaultValue": "'Welcome back, ' + this.name",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "lastUpdated",
                    "defaultValue": "'Today'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "name",
                    "defaultValue": "'Emily'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "new",
                    "defaultValue": "'new' as LabelOfSnapshot",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "safe",
                    "defaultValue": "'safe ' as SnapshotStatus",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "update",
                    "defaultValue": "'update' as LabelOfSnapshot",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { SnapshotStatus } from '@shared/components/cards/snapshot-display-card/snapshot-display-card.component';\nimport { LabelOfSnapshot } from '@shared/components/cards/snapshot-display-card/snapshot-label.pipe';\n\n@Component({\n  selector: 'brave-dashboard-init',\n  templateUrl: './dashboard-init.component.html',\n  styleUrls: ['./dashboard-init.component.css'],\n})\nexport class DashboardInitComponent implements OnInit {\n  name = 'Emily';\n  defaultStrMessage = 'Welcome back!';\n  initStrMessage = 'Welcome back, ' + this.name;\n  hidden = 'hidden' as LabelOfSnapshot;\n  update = 'update' as LabelOfSnapshot;\n  new = 'new' as LabelOfSnapshot;\n  critical = 'critical ' as SnapshotStatus;\n  safe = 'safe ' as SnapshotStatus;\n  danger = 'danger ' as SnapshotStatus;\n  lastUpdated = 'Today';\n\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./dashboard-init.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 20
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"container mx-auto max-w-xs h-full\">\n  <brave-admin-navbar></brave-admin-navbar>\n  <div style=\"margin-top: 3.5rem; padding-bottom: 4.5rem\">\n    <h2 class=\"mb-2 text-lg font-semibold\">{{ name === '' ? defaultStrMessage : initStrMessage }}</h2>\n    <div class=\"min-h-14 w-full bg-blueGray-200\" style=\"height: 250px\"></div>\n    <h2 class=\"mt-2 mb-1 text-lg font-semibold\">Your Credit Snapshot</h2>\n    <p class=\"text-xs mb-1\" *ngIf=\"lastUpdated !== undefined\">Last Updated {{ lastUpdated }}</p>\n    <brave-snapshot-display-card\n      tendency=\"up\"\n      label=\"hidden\"\n      status=\"critical\"\n      title=\"New Negative Accounts\"\n      typeOfSnapshot=\"time\"\n      value=\"5\"\n    ></brave-snapshot-display-card>\n    <brave-snapshot-display-card\n      tendency=\"down\"\n      label=\"update\"\n      status=\"safe\"\n      title=\"Age of Credit\"\n      typeOfSnapshot=\"time\"\n      value=\"3\"\n      typeOfDate=\"Years\"\n    ></brave-snapshot-display-card>\n    <brave-snapshot-display-card\n      tendency=\"down\"\n      label=\"update\"\n      status=\"danger\"\n      title=\"Credit Mix\"\n      typeOfSnapshot=\"tag\"\n      value=\"Not Bad\"\n      typeOfDate=\"Years\"\n    ></brave-snapshot-display-card>\n    <brave-snapshot-display-card\n      tendency=\"no-tendency\"\n      [label]=\"new\"\n      status=\"safe\"\n      title=\"Credit Card Utilization\"\n      typeOfSnapshot=\"percentage\"\n      value=\"40\"\n    ></brave-snapshot-display-card>\n    <brave-links-onlytext-button class=\"w-full\"\n      >View Full Credit Report</brave-links-onlytext-button\n    >\n    <h5 class=\"mb-2 font-semibold text-lg\">Take Control</h5>\n    <h6 class=\"mb-4 text-sm\">\n      Trusted, affordable products no matter your credit situation\n    </h6>\n    <brave-credit-builder-card class=\"mt-2\"></brave-credit-builder-card>\n  </div>\n  <brave-navigation-tabs></brave-navigation-tabs>\n</div>\n"
        },
        {
            "name": "DashboardNavbarComponent",
            "id": "component-DashboardNavbarComponent-0bd774f67b4e7891887b1608c514350a",
            "file": "src/app/shared/components/navbars/dashboard-navbar/dashboard-navbar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-dashboard-navbar",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./dashboard-navbar.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "menuOne",
                    "defaultValue": "{\n    menu: 'Discover',\n    submenus: [\n      { submenu: 'Sub 1', route: '/', group: 'Group 1' },\n      { submenu: 'Sub 2', route: '/' },\n      { submenu: 'Sub 3', route: '/' },\n      { submenu: 'Sub 4', route: '/' },\n      { submenu: 'Sub 5', route: '/', break: true },\n      { submenu: 'Sub 6', route: '/', group: 'Group 2' },\n      { submenu: 'Sub 7', route: '/' },\n      { submenu: 'Sub 8', route: '/', break: true },\n      { submenu: 'Sub 9', route: '/', group: 'Group 3' },\n      { submenu: 'Sub 10', route: '/' },\n    ],\n  }",
                    "type": "IMenuDropdown",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "menuThree",
                    "defaultValue": "{\n    menu: 'Settings',\n    submenus: [\n      { submenu: 'Sub 1', route: '/', group: 'Group 1' },\n      { submenu: 'Sub 2', route: '/' },\n      { submenu: 'Sub 3', route: '/' },\n      { submenu: 'Sub 4', route: '/' },\n      { submenu: 'Sub 5', route: '/', break: true },\n      { submenu: 'Sub 6', route: '/', group: 'Group 2' },\n      { submenu: 'Sub 7', route: '/' },\n      { submenu: 'Sub 8', route: '/', break: true },\n      { submenu: 'Sub 9', route: '/', group: 'Group 3' },\n      { submenu: 'Sub 10', route: '/' },\n    ],\n  }",
                    "type": "IMenuDropdown",
                    "optional": false,
                    "description": "",
                    "line": 42,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "menuTwo",
                    "defaultValue": "{\n    menu: 'Profile',\n    submenus: [\n      { submenu: 'Sub 1', route: '/', group: 'Group 1' },\n      { submenu: 'Sub 2', route: '/' },\n      { submenu: 'Sub 3', route: '/' },\n      { submenu: 'Sub 4', route: '/' },\n      { submenu: 'Sub 5', route: '/', break: true },\n      { submenu: 'Sub 6', route: '/', group: 'Group 2' },\n      { submenu: 'Sub 7', route: '/' },\n      { submenu: 'Sub 8', route: '/', break: true },\n      { submenu: 'Sub 9', route: '/', group: 'Group 3' },\n      { submenu: 'Sub 10', route: '/' },\n    ],\n  }",
                    "type": "IMenuDropdown",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "navbarOpen",
                    "defaultValue": "false",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 60
                },
                {
                    "name": "setNavbarOpen",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 62
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { IMenuDropdown } from '@shared/components/dropdowns/popdowns/menu-dropdown/menu-dropdown.component';\n\n@Component({\n  selector: 'brave-dashboard-navbar',\n  templateUrl: './dashboard-navbar.component.html',\n})\nexport class DashboardNavbarComponent implements OnInit {\n  public navbarOpen = false;\n  public menuOne: IMenuDropdown = {\n    menu: 'Discover',\n    submenus: [\n      { submenu: 'Sub 1', route: '/', group: 'Group 1' },\n      { submenu: 'Sub 2', route: '/' },\n      { submenu: 'Sub 3', route: '/' },\n      { submenu: 'Sub 4', route: '/' },\n      { submenu: 'Sub 5', route: '/', break: true },\n      { submenu: 'Sub 6', route: '/', group: 'Group 2' },\n      { submenu: 'Sub 7', route: '/' },\n      { submenu: 'Sub 8', route: '/', break: true },\n      { submenu: 'Sub 9', route: '/', group: 'Group 3' },\n      { submenu: 'Sub 10', route: '/' },\n    ],\n  };\n\n  public menuTwo: IMenuDropdown = {\n    menu: 'Profile',\n    submenus: [\n      { submenu: 'Sub 1', route: '/', group: 'Group 1' },\n      { submenu: 'Sub 2', route: '/' },\n      { submenu: 'Sub 3', route: '/' },\n      { submenu: 'Sub 4', route: '/' },\n      { submenu: 'Sub 5', route: '/', break: true },\n      { submenu: 'Sub 6', route: '/', group: 'Group 2' },\n      { submenu: 'Sub 7', route: '/' },\n      { submenu: 'Sub 8', route: '/', break: true },\n      { submenu: 'Sub 9', route: '/', group: 'Group 3' },\n      { submenu: 'Sub 10', route: '/' },\n    ],\n  };\n\n  public menuThree: IMenuDropdown = {\n    menu: 'Settings',\n    submenus: [\n      { submenu: 'Sub 1', route: '/', group: 'Group 1' },\n      { submenu: 'Sub 2', route: '/' },\n      { submenu: 'Sub 3', route: '/' },\n      { submenu: 'Sub 4', route: '/' },\n      { submenu: 'Sub 5', route: '/', break: true },\n      { submenu: 'Sub 6', route: '/', group: 'Group 2' },\n      { submenu: 'Sub 7', route: '/' },\n      { submenu: 'Sub 8', route: '/', break: true },\n      { submenu: 'Sub 9', route: '/', group: 'Group 3' },\n      { submenu: 'Sub 10', route: '/' },\n    ],\n  };\n\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  setNavbarOpen() {\n    this.navbarOpen = !this.navbarOpen;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 56
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<nav\n  class=\"top-0 fixed z-50 w-full flex flex-wrap items-center justify-between px-2 py-3 navbar-expand-lg bg-white shadow\"\n>\n  <div\n    class=\"container px-4 mx-auto flex flex-wrap items-center justify-between\"\n  >\n    <div\n      class=\"w-full relative flex justify-between lg:w-auto lg:static lg:block lg:justify-start\"\n    >\n      <a\n        [routerLink]=\"['/']\"\n        class=\"font-sans text-sm text-coolGray-700 leading-relaxed inline-block mr-4 py-2 whitespace-nowrap uppercase\"\n        href=\"#\"\n      >\n        Logo\n      </a>\n      <button\n        class=\"cursor-pointer text-xl leading-none px-3 py-1 border-none rounded bg-transparent block lg:hidden outline-none focus:outline-none\"\n        type=\"button\"\n        (click)=\"setNavbarOpen()\"\n      >\n        <span class=\"material-icons\">menu</span>\n      </button>\n    </div>\n    <div\n      class=\"lg:flex flex-grow items-center\"\n      [ngClass]=\"{ hidden: !navbarOpen, block: navbarOpen }\"\n      id=\"example-navbar-warning\"\n    >\n      <!-- left portion menu items -->\n      <ul class=\"flex flex-col lg:flex-row list-none mr-auto\">\n        <li class=\"flex items-center\">\n          <!-- additional left hand menu items go here -->\n        </li>\n      </ul>\n      <!-- right portion menu items -->\n      <ul class=\"flex flex-col lg:flex-row list-none lg:ml-auto\">\n        <li class=\"flex items-center\">\n          <brave-menu-dropdown\n            class=\"block\"\n            [config]=\"menuOne\"\n          ></brave-menu-dropdown>\n        </li>\n        <li class=\"flex items-center\">\n          <brave-menu-dropdown\n            class=\"block\"\n            [config]=\"menuTwo\"\n          ></brave-menu-dropdown>\n        </li>\n        <li class=\"flex items-center\">\n          <brave-menu-dropdown\n            class=\"block\"\n            [config]=\"menuThree\"\n          ></brave-menu-dropdown>\n        </li>\n\n        <li class=\"flex items-center\">\n          <brave-outline-onlytext-button\n            >Register</brave-outline-onlytext-button\n          >\n        </li>\n      </ul>\n    </div>\n  </div>\n</nav>\n"
        },
        {
            "name": "FacebookOnlytextsigninButtonComponent",
            "id": "component-FacebookOnlytextsigninButtonComponent-908526b3fed6e4acad61431af9cca421",
            "file": "src/app/shared/components/buttons/facebook-onlytextsignin-button/facebook-onlytextsignin-button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-facebook-onlytextsignin-button",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./facebook-onlytextsignin-button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 10
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'brave-facebook-onlytextsignin-button',\n  templateUrl: './facebook-onlytextsignin-button.component.html',\n})\nexport class FacebookOnlytextsigninButtonComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 7
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<button\n  class=\"\n    bg-white\n    active:bg-blueGray-50\n    text-blueGray-700\n    font-bold\n    h-12\n    w-full\n    px-4\n    py-2\n    rounded\n    outline-none\n    focus:outline-none\n    mr-2\n    mb-1\n    uppercase\n    shadow\n    hover:shadow-md\n    inline-flex\n    items-center\n    text-xs text-center\n    ease-linear\n    transition-all\n    duration-150\n  \"\n  type=\"button\"\n>\n  <span class=\"material-icons w-5 mr-1\">facebook</span>\n  Facebook\n</button>\n"
        },
        {
            "name": "FilledChecktextProgressbarComponent",
            "id": "component-FilledChecktextProgressbarComponent-1e639b0664c76125e87f65fa04a97b7b",
            "file": "src/app/shared/components/progressbars/filled-checktext-progressbar/filled-checktext-progressbar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-filled-checktext-progressbar",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./filled-checktext-progressbar.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "activatedStep",
                    "defaultValue": "-1",
                    "line": 20,
                    "type": "number"
                },
                {
                    "name": "completedStep",
                    "defaultValue": "-1",
                    "line": 21,
                    "type": "number"
                },
                {
                    "name": "config",
                    "defaultValue": "{ size: 'base' }",
                    "line": 18,
                    "type": "IFilledChecktextProgressbarConfig"
                },
                {
                    "name": "steps",
                    "defaultValue": "[]",
                    "line": 19,
                    "type": "IProgressStep[]"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnChanges, OnInit } from '@angular/core';\n\nexport interface IProgressStep {\n  id: number;\n  active: boolean;\n  complete: boolean;\n  name: string;\n}\nexport interface IFilledChecktextProgressbarConfig {\n  size: string;\n}\n\n@Component({\n  selector: 'brave-filled-checktext-progressbar',\n  templateUrl: './filled-checktext-progressbar.component.html',\n})\nexport class FilledChecktextProgressbarComponent {\n  @Input() config: IFilledChecktextProgressbarConfig = { size: 'base' };\n  @Input() steps: IProgressStep[] = [];\n  @Input() activatedStep: number = -1;\n  @Input() completedStep: number = -1;\n\n  constructor() {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 21
            },
            "templateData": "<div>\n  <div class=\"py-6\">\n    <div class=\"flex items-center\">\n      <ng-container\n        *ngFor=\"let step of steps; index as i; first as isFirst; last as isLast\"\n      >\n        <div\n          [ngClass]=\"{\n            rounded: isFirst,\n            'bg-lightBlue-100': i <= activatedStep,\n            'bg-coolGray-200': i > activatedStep\n          }\"\n          class=\"flex-auto h-2 w-1/5 rounded-r-none transition duration-500 ease-in-out\"\n        ></div>\n        <div class=\"flex items-center text-white relative\">\n          <div\n            [ngClass]=\"{\n              'bg-lightBlue-100': i <= activatedStep,\n              'bg-coolGray-200': i > activatedStep\n            }\"\n            class=\"flex justify-center items-center text-center rounded-full transition duration-500 ease-in-out h-8 w-8 -ml-0.5\"\n          >\n            <span\n              class=\"material-icons text-coolGray-700\"\n              *ngIf=\"i <= completedStep\"\n              >done</span\n            >\n          </div>\n          <div\n            [ngClass]=\"{\n              'text-coolGray-700': i <= completedStep,\n              'text-coolGray-200': i > completedStep\n            }\"\n            class=\"absolute top-0 -ml-12 text-center mt-9 w-32 font-sans text-xs\"\n          >\n            <!-- {{ config.steps.length }} -->\n            {{ step.name }}\n          </div>\n        </div>\n        <div\n          *ngIf=\"isLast\"\n          [ngClass]=\"{\n            'bg-lightBlue-100': i <= activatedStep,\n            'bg-coolGray-200': i > activatedStep\n          }\"\n          class=\"flex-auto h-2 w-1/5 rounded rounded-l-none transition duration-500 ease-in-out\"\n        ></div>\n      </ng-container>\n    </div>\n  </div>\n</div>\n"
        },
        {
            "name": "FilledClosingAlertComponent",
            "id": "component-FilledClosingAlertComponent-9c4cd41b4d47d2e182eda26dd493b74c",
            "file": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-filled-closing-alert",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./filled-closing-alert.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "config",
                    "defaultValue": "{\n    size: 'base',\n    backgroundColor: 'bg-indigo-800',\n    color: 'text-white',\n    alertTitle: 'Alert!',\n    alertBody: 'Something went wrong. Please try again.',\n  }",
                    "line": 16,
                    "type": "IFilledClosingAlertConfig"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "showAlert",
                    "defaultValue": "false",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\nexport interface IFilledClosingAlertConfig {\n  size: string;\n  backgroundColor: string;\n  color: string;\n  alertTitle: string;\n  alertBody: string;\n}\n\n@Component({\n  selector: 'brave-filled-closing-alert',\n  templateUrl: './filled-closing-alert.component.html',\n})\nexport class FilledClosingAlertComponent implements OnInit {\n  @Input() config: IFilledClosingAlertConfig = {\n    size: 'base',\n    backgroundColor: 'bg-indigo-800',\n    color: 'text-white',\n    alertTitle: 'Alert!',\n    alertBody: 'Something went wrong. Please try again.',\n  };\n  constructor() {}\n  public showAlert: boolean = false;\n  ngOnInit(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 22
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div\n  *ngIf=\"showAlert\"\n  [ngClass]=\"config | filledClosingAlert\"\n  class=\"font-sans text-sm text-white px-6 py-4 border-0 rounded relative mb-4\"\n>\n  <span class=\"font-sans text-sm text-white inline-block mr-5 align-middle\">\n    {{ config.alertTitle }}\n  </span>\n  <span class=\"inline-block align-left mr-8\">\n    {{ config.alertBody }}\n  </span>\n  <button\n    class=\"absolute bg-transparent text-2xl font-semibold leading-none right-0 top-0 mt-4 mr-4 outline-none focus:outline-none\"\n    (click)=\"showAlert = false\"\n  >\n    <span class=\"material-icons text-white\">close</span>\n  </button>\n</div>\n"
        },
        {
            "name": "FilledOnlytextBadgeComponent",
            "id": "component-FilledOnlytextBadgeComponent-dc05e6e4c81b5bb0d226982afe75d12d",
            "file": "src/app/shared/components/badges/filled-onlytext-badge/filled-onlytext-badge.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-filled-onlytext-badge",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./filled-onlytext-badge.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "config",
                    "defaultValue": "{\n    size: 'base',\n    backgroundColor: 'bg-indigo-200',\n    color: 'text-indigo-800',\n  }",
                    "line": 14,
                    "type": "IFilledOnlytextBadgeConfig"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\nexport interface IFilledOnlytextBadgeConfig {\n  size: string;\n  backgroundColor: string;\n  color: string;\n}\n\n@Component({\n  selector: 'brave-filled-onlytext-badge',\n  templateUrl: './filled-onlytext-badge.component.html',\n})\nexport class FilledOnlytextBadgeComponent {\n  @Input() config: IFilledOnlytextBadgeConfig = {\n    size: 'base',\n    backgroundColor: 'bg-indigo-200',\n    color: 'text-indigo-800',\n  };\n\n  constructor() {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 18
            },
            "templateData": "<span\n  [ngClass]=\"config | filledOnlytextBadge\"\n  class=\"font-semibold inline-block uppercase rounded uppercase last:mr-0 mr-1\"\n>\n  <ng-content></ng-content>\n</span>\n"
        },
        {
            "name": "FilledOnlytextButtonComponent",
            "id": "component-FilledOnlytextButtonComponent-b83344225e4d837e9e4fbd0772c1675f",
            "file": "src/app/shared/components/buttons/filled-onlytext-button/filled-onlytext-button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-filled-onlytext-button",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./filled-onlytext-button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "config",
                    "defaultValue": "{\n    buttonSize: 'base',\n    backgroundColor: 'bg-indigo-800',\n    activeColor: 'bg-indigo-900',\n    color: 'text-white',\n  }",
                    "line": 22,
                    "type": "IFilledOnlyTextButtonConfig"
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "line": 29,
                    "type": "boolean"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\nexport interface IFilledOnlyTextButtonConfig {\n  buttonSize: string;\n  backgroundColor: string;\n  activeColor: string;\n  color: string;\n}\n\n@Component({\n  selector: 'brave-filled-onlytext-button',\n  templateUrl: './filled-onlytext-button.component.html',\n})\nexport class FilledOnlytextButtonComponent {\n  /**\n   * @param config Input objctfor button customization\n   * @param config.buttonSize 'sm', 'base', 'lg'\n   * @param config.backgroundColor Any global color \"e.g. bg-indigo-800\"\n   * @param config.activeColor Any global color \"e.g. bg-indigo-900\"\n   * @param config.color Any global color\n   */\n  @Input() config: IFilledOnlyTextButtonConfig = {\n    buttonSize: 'base',\n    backgroundColor: 'bg-indigo-800',\n    activeColor: 'bg-indigo-900',\n    color: 'text-white',\n  };\n\n  @Input() disabled: boolean = false;\n\n  constructor() {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 29
            },
            "templateData": "<button\n  [disabled]=\"disabled\"\n  [ngClass]=\"config | filledOnlytextButton\"\n  class=\"\n    font-bold\n    rounded\n    shadow\n    outline-none\n    focus:outline-none\n    mr-1\n    mb-1\n    ease-linear\n    transition-all\n    duration-150\n  \"\n  type=\"button\">\n  <ng-content></ng-content>\n</button>\n"
        },
        {
            "name": "FilledOnlytextTabsComponent",
            "id": "component-FilledOnlytextTabsComponent-8fd8ed91eebb7583d11cb7625fe52326",
            "file": "src/app/shared/components/tabs/filled-onlytext-tabs/filled-onlytext-tabs.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-filled-onlytext-tabs",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./filled-onlytext-tabs.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "openTab",
                    "defaultValue": "1",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 11
                },
                {
                    "name": "toggleTabs",
                    "args": [
                        {
                            "name": "$tabNumber",
                            "type": "number"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13,
                    "jsdoctags": [
                        {
                            "name": "$tabNumber",
                            "type": "number",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'brave-filled-onlytext-tabs',\n  templateUrl: './filled-onlytext-tabs.component.html',\n})\nexport class FilledOnlytextTabsComponent implements OnInit {\n  openTab = 1;\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  toggleTabs($tabNumber: number) {\n    this.openTab = $tabNumber;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"flex flex-wrap\">\n  <div class=\"w-full\">\n\n    <ul class=\"flex mb-0 list-none flex-wrap pt-3 pb-4 flex-row\">\n      <li class=\"-mb-px mr-2 last:mr-0 flex-auto text-center\">\n        <a\n          class=\"font-sans text-sm px-5 py-3 rounded block leading-normal\"\n          (click)=\"toggleTabs(1)\"\n          [ngClass]=\"{\n            'bg-coolGray-200 text-coolGray-700': openTab !== 1,\n            'text-white font-bold bg-indigo-800 shadow-lg': openTab === 1\n          }\"\n        >\n          Tab 1\n        </a>\n      </li>\n      <li class=\"-mb-px mr-2 last:mr-0 flex-auto text-center\">\n        <a\n          class=\"font-sans text-sm px-5 py-3 rounded block leading-normal\"\n          (click)=\"toggleTabs(2)\"\n          [ngClass]=\"{\n            'bg-coolGray-200 text-coolGray-700': openTab !== 2,\n            'text-white font-bold bg-indigo-800 shadow-lg': openTab === 2\n          }\"\n        >\n          Tab 2\n        </a>\n      </li>\n      <li class=\"-mb-px mr-2 last:mr-0 flex-auto text-center\">\n        <a\n          class=\"font-sans text-sm px-5 py-3 rounded block leading-normal\"\n          (click)=\"toggleTabs(3)\"\n          [ngClass]=\"{\n            'bg-coolGray-200 text-coolGray-700': openTab !== 3,\n            'text-white font-bold bg-indigo-800 shadow-lg': openTab === 3\n          }\"\n        >\n          Tab 3\n        </a>\n      </li>\n    </ul>\n    <div\n      class=\"relative flex flex-col min-w-0 break-words bg-white w-full mb-6 rounded\"\n    >\n      <div class=\"px-4 py-5 flex-auto\">\n        <div class=\"tab-content tab-space\">\n          <div [ngClass]=\"{ hidden: openTab !== 1, block: openTab === 1 }\">\n            <p>\n              Hello World\n            </p>\n          </div>\n          <div [ngClass]=\"{ hidden: openTab !== 2, block: openTab === 2 }\">\n            <p>\n              ACDC FOR LIFE\n            </p>\n          </div>\n          <div [ngClass]=\"{ hidden: openTab !== 3, block: openTab === 3 }\">\n            <p>\n              Efficiently unleash cross-media information without cross-media\n              value. Quickly maximize timely deliverables for real-time schemas.\n              <br />\n              <br />\n              Dramatically maintain clicks-and-mortar solutions without\n              functional solutions.\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n"
        },
        {
            "name": "FooterAdminComponent",
            "id": "component-FooterAdminComponent-b27a2a39928a4539b832b42ffd1a96b1",
            "file": "src/app/shared/components/footers/footer-admin/footer-admin.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-footer-admin",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./footer-admin.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "date",
                    "defaultValue": "new Date().getFullYear()",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 11
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'brave-footer-admin',\n  templateUrl: './footer-admin.component.html',\n})\nexport class FooterAdminComponent implements OnInit {\n  date = new Date().getFullYear();\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<footer class=\"block py-4\">\n  <div class=\"container mx-auto px-4\">\n    <hr class=\"mb-4 border-b-1 border-blueGray-200\" />\n    <div class=\"flex flex-wrap items-center md:justify-between justify-center\">\n      <div class=\"w-full md:w-4/12 px-4\">\n        <div\n          class=\"text-sm text-blueGray-500 font-semibold py-1 text-center md:text-left\"\n        >\n          Copyright © {{ date }}\n          <a\n            href=\"https://www.creative-tim.com?ref=na-footer-admin\"\n            class=\"text-blueGray-500 hover:text-blueGray-700 text-sm font-semibold py-1\"\n          >\n            Creative Tim\n          </a>\n        </div>\n      </div>\n      <div class=\"w-full md:w-8/12 px-4\">\n        <ul class=\"flex flex-wrap list-none md:justify-end justify-center\">\n          <li>\n            <a\n              href=\"https://www.creative-tim.com?ref=na-footer-admin\"\n              class=\"text-blueGray-600 hover:text-blueGray-800 text-sm font-semibold block py-1 px-3\"\n            >\n              Creative Tim\n            </a>\n          </li>\n          <li>\n            <a\n              href=\"https://www.creative-tim.com/presentation?ref=na-footer-admin\"\n              class=\"text-blueGray-600 hover:text-blueGray-800 text-sm font-semibold block py-1 px-3\"\n            >\n              About Us\n            </a>\n          </li>\n          <li>\n            <a\n              href=\"http://blog.creative-tim.com?ref=na-footer-admin\"\n              class=\"text-blueGray-600 hover:text-blueGray-800 text-sm font-semibold block py-1 px-3\"\n            >\n              Blog\n            </a>\n          </li>\n          <li>\n            <a\n              href=\"https://github.com/creativetimofficial/notus-angular/blob/main/LICENSE.md?ref=creativetim\"\n              class=\"text-blueGray-600 hover:text-blueGray-800 text-sm font-semibold block py-1 px-3\"\n            >\n              MIT License\n            </a>\n          </li>\n        </ul>\n      </div>\n    </div>\n  </div>\n</footer>\n"
        },
        {
            "name": "FooterComponent",
            "id": "component-FooterComponent-fac5694ad0d6bd7c8dee05ae8ae6e2a7",
            "file": "src/app/shared/components/footers/footer/footer.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-footer",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./footer.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "date",
                    "defaultValue": "new Date().getFullYear()",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 11
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'brave-footer',\n  templateUrl: './footer.component.html',\n})\nexport class FooterComponent implements OnInit {\n  date = new Date().getFullYear();\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<footer class=\"relative bg-blueGray-200 pt-8 pb-6\">\n  <div\n    class=\"bottom-auto top-0 left-0 right-0 w-full absolute pointer-events-none overflow-hidden -mt-20 h-20\"\n    style=\"transform: translateZ(0)\"\n  >\n    <svg\n      class=\"absolute bottom-0 overflow-hidden\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      preserveAspectRatio=\"none\"\n      version=\"1.1\"\n      viewBox=\"0 0 2560 100\"\n      x=\"0\"\n      y=\"0\"\n    >\n      <polygon\n        class=\"text-blueGray-200 fill-current\"\n        points=\"2560 0 2560 100 0 100\"\n      ></polygon>\n    </svg>\n  </div>\n  <div class=\"container mx-auto px-4\">\n    <div class=\"flex flex-wrap text-center lg:text-left\">\n      <div class=\"w-full lg:w-6/12 px-4\">\n        <h4 class=\"text-3xl font-semibold\">Let's keep in touch!</h4>\n        <h5 class=\"text-lg mt-0 mb-2 text-blueGray-600\">\n          Find us on any of these platforms, we respond 1-2 business days.\n        </h5>\n        <div class=\"mt-6 lg:mb-0 mb-6\">\n          <button\n            class=\"bg-white text-lightBlue-400 shadow-lg font-normal h-10 w-10 items-center justify-center align-center rounded-full outline-none focus:outline-none mr-2\"\n            type=\"button\"\n          >\n            <i class=\"fab fa-twitter\"></i>\n          </button>\n          <button\n            class=\"bg-white text-lightBlue-600 shadow-lg font-normal h-10 w-10 items-center justify-center align-center rounded-full outline-none focus:outline-none mr-2\"\n            type=\"button\"\n          >\n            <i class=\"fab fa-facebook-square\"></i>\n          </button>\n          <button\n            class=\"bg-white text-pink-400 shadow-lg font-normal h-10 w-10 items-center justify-center align-center rounded-full outline-none focus:outline-none mr-2\"\n            type=\"button\"\n          >\n            <i class=\"fab fa-dribbble\"></i>\n          </button>\n          <button\n            class=\"bg-white text-blueGray-800 shadow-lg font-normal h-10 w-10 items-center justify-center align-center rounded-full outline-none focus:outline-none mr-2\"\n            type=\"button\"\n          >\n            <i class=\"fab fa-github\"></i>\n          </button>\n        </div>\n      </div>\n      <div class=\"w-full lg:w-6/12 px-4\">\n        <div class=\"flex flex-wrap items-top mb-6\">\n          <div class=\"w-full lg:w-4/12 px-4 ml-auto\">\n            <span\n              class=\"block uppercase text-blueGray-500 text-sm font-semibold mb-2\"\n            >\n              Useful Links\n            </span>\n            <ul class=\"list-unstyled\">\n              <li>\n                <a\n                  class=\"text-blueGray-600 hover:text-blueGray-800 font-semibold block pb-2 text-sm\"\n                  href=\"https://www.creative-tim.com/presentation?ref=na-footer\"\n                >\n                  About Us\n                </a>\n              </li>\n              <li>\n                <a\n                  class=\"text-blueGray-600 hover:text-blueGray-800 font-semibold block pb-2 text-sm\"\n                  href=\"https://blog.creative-tim.com?ref=na-footer\"\n                >\n                  Blog\n                </a>\n              </li>\n              <li>\n                <a\n                  class=\"text-blueGray-600 hover:text-blueGray-800 font-semibold block pb-2 text-sm\"\n                  href=\"https://www.github.com/creativetimofficial?ref=na-footer\"\n                >\n                  Github\n                </a>\n              </li>\n              <li>\n                <a\n                  class=\"text-blueGray-600 hover:text-blueGray-800 font-semibold block pb-2 text-sm\"\n                  href=\"https://www.creative-tim.com/bootstrap-themes/free?ref=na-footer\"\n                >\n                  Free Products\n                </a>\n              </li>\n            </ul>\n          </div>\n          <div class=\"w-full lg:w-4/12 px-4\">\n            <span\n              class=\"block uppercase text-blueGray-500 text-sm font-semibold mb-2\"\n            >\n              Other Resources\n            </span>\n            <ul class=\"list-unstyled\">\n              <li>\n                <a\n                  class=\"text-blueGray-600 hover:text-blueGray-800 font-semibold block pb-2 text-sm\"\n                  href=\"https://github.com/creativetimofficial/notus-angular/blob/main/LICENSE.md?ref=creativetim\"\n                >\n                  MIT License\n                </a>\n              </li>\n              <li>\n                <a\n                  class=\"text-blueGray-600 hover:text-blueGray-800 font-semibold block pb-2 text-sm\"\n                  href=\"https://creative-tim.com/terms?ref=na-footer\"\n                >\n                  Terms & Conditions\n                </a>\n              </li>\n              <li>\n                <a\n                  class=\"text-blueGray-600 hover:text-blueGray-800 font-semibold block pb-2 text-sm\"\n                  href=\"https://creative-tim.com/privacy?ref=na-footer\"\n                >\n                  Privacy Policy\n                </a>\n              </li>\n              <li>\n                <a\n                  class=\"text-blueGray-600 hover:text-blueGray-800 font-semibold block pb-2 text-sm\"\n                  href=\"https://creative-tim.com/contact-us?ref=na-footer\"\n                >\n                  Contact Us\n                </a>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n    <hr class=\"my-6 border-blueGray-300\" />\n    <div class=\"flex flex-wrap items-center md:justify-between justify-center\">\n      <div class=\"w-full md:w-4/12 px-4 mx-auto text-center\">\n        <div class=\"text-sm text-blueGray-500 font-semibold py-1\">\n          Copyright © {{ date }} Notus Angular by\n          <a\n            href=\"https://www.creative-tim.com?ref=na-footer\"\n            class=\"text-blueGray-500 hover:text-blueGray-800\"\n          >\n            Creative Tim\n          </a>\n          .\n        </div>\n      </div>\n    </div>\n  </div>\n</footer>\n"
        },
        {
            "name": "FooterSmallComponent",
            "id": "component-FooterSmallComponent-6502da62554dfc15c73ab4e08b8a3c61",
            "file": "src/app/shared/components/footers/footer-small/footer-small.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-footer-small",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./footer-small.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "absolute",
                    "line": 11,
                    "type": "boolean"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_absolute",
                    "defaultValue": "false",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "date",
                    "defaultValue": "new Date().getFullYear()",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'brave-footer-small',\n  templateUrl: './footer-small.component.html',\n})\nexport class FooterSmallComponent implements OnInit {\n  date = new Date().getFullYear();\n\n  @Input()\n  get absolute(): boolean {\n    return this._absolute;\n  }\n  set absolute(absolute: boolean) {\n    this._absolute = absolute === undefined ? false : absolute;\n  }\n  private _absolute = false;\n\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 17
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "absolute": {
                    "name": "absolute",
                    "setSignature": {
                        "name": "absolute",
                        "type": "void",
                        "args": [
                            {
                                "name": "absolute",
                                "type": "boolean"
                            }
                        ],
                        "returnType": "void",
                        "line": 14,
                        "jsdoctags": [
                            {
                                "name": "absolute",
                                "type": "boolean",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                }
            },
            "templateData": "<footer\n  class=\"pb-6\"\n  [ngClass]=\"absolute ? 'absolute w-full bottom-0 bg-blueGray-800' : 'relative'\"\n>\n  <div class=\"container mx-auto px-4\">\n    <hr class=\"mb-6 border-b-1 border-blueGray-600\" />\n    <div class=\"flex flex-wrap items-center md:justify-between justify-center\">\n      <div class=\"w-full md:w-4/12 px-4\">\n        <div\n          class=\"text-sm text-white font-semibold py-1 text-center md:text-left\"\n        >\n          Copyright © {{ date }}\n          <a\n            href=\"https://www.creative-tim.com?ref=na-footer-small\"\n            class=\"text-white hover:text-blueGray-300 text-sm font-semibold py-1\"\n          >\n            Creative Tim\n          </a>\n        </div>\n      </div>\n      <div class=\"w-full md:w-8/12 px-4\">\n        <ul class=\"flex flex-wrap list-none md:justify-end justify-center\">\n          <li>\n            <a\n              href=\"https://www.creative-tim.com?ref=na-footer-small\"\n              class=\"text-white hover:text-blueGray-300 text-sm font-semibold block py-1 px-3\"\n            >\n              Creative Tim\n            </a>\n          </li>\n          <li>\n            <a\n              href=\"https://www.creative-tim.com/presentation?ref=na-footer-small\"\n              class=\"text-white hover:text-blueGray-300 text-sm font-semibold block py-1 px-3\"\n            >\n              About Us\n            </a>\n          </li>\n          <li>\n            <a\n              href=\"http://blog.creative-tim.com?ref=na-footer-small\"\n              class=\"text-white hover:text-blueGray-300 text-sm font-semibold block py-1 px-3\"\n            >\n              Blog\n            </a>\n          </li>\n          <li>\n            <a\n              href=\"https://github.com/creativetimofficial/notus-angular/blob/main/LICENSE.md?ref=creativetim\"\n              class=\"text-white hover:text-blueGray-300 text-sm font-semibold block py-1 px-3\"\n            >\n              MIT License\n            </a>\n          </li>\n        </ul>\n      </div>\n    </div>\n  </div>\n</footer>\n"
        },
        {
            "name": "GoogleIconsigninButtonComponent",
            "id": "component-GoogleIconsigninButtonComponent-3e2c0e44920f8ac7c1d5bc91a5521279",
            "file": "src/app/shared/components/buttons/google-iconsignin-button/google-iconsignin-button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-google-iconsignin-button",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./google-iconsignin-button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 10
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'brave-google-iconsignin-button',\n  templateUrl: './google-iconsignin-button.component.html',\n})\nexport class GoogleIconsigninButtonComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 7
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<button\n  class=\"\n    bg-white\n    active:bg-blueGray-50\n    text-blueGray-700\n    h-12\n    w-full\n    px-4\n    py-2\n    rounded\n    outline-none\n    focus:outline-none\n    mr-1\n    mb-1\n    uppercase\n    shadow\n    hover:shadow-md\n    inline-flex\n    items-center\n    font-bold\n    text-xs text-center\n    ease-linear\n    transition-all\n    duration-150\n  \"\n  type=\"button\"\n>\n  <img alt=\"...\" class=\"w-5 mr-1\" src=\"assets/img/google.svg\" />\n  Google\n</button>\n"
        },
        {
            "name": "HiddenAsteriskInputComponent",
            "id": "component-HiddenAsteriskInputComponent-c8e36fb6928854f18e24988211168790",
            "file": "src/app/shared/components/inputs/hidden-asterisk-input/hidden-asterisk-input.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-hidden-asterisk-input",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./hidden-asterisk-input.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "index",
                    "defaultValue": "0",
                    "line": 25,
                    "type": "number"
                },
                {
                    "name": "size",
                    "defaultValue": "'text-sm'",
                    "line": 24,
                    "type": "string"
                },
                {
                    "name": "value",
                    "defaultValue": "''",
                    "line": 26,
                    "type": "string"
                }
            ],
            "outputsClass": [
                {
                    "name": "onComponentReady",
                    "defaultValue": "new EventEmitter<FormGroup>()",
                    "line": 31,
                    "type": "EventEmitter<FormGroup>"
                },
                {
                    "name": "onMoveNext",
                    "defaultValue": "new EventEmitter()",
                    "line": 29,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "valueChanged",
                    "defaultValue": "new EventEmitter()",
                    "line": 28,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "_masked",
                    "defaultValue": "false",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "componentFormGroup",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 34,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "formSub$",
                    "type": "Subscription | undefined",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "hiddenInput",
                    "type": "ElementRef | undefined",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'hiddenInput'"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "clearMe",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 74,
                    "description": "<p>Removes any value stored in the input element</p>\n"
                },
                {
                    "name": "focusMe",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 66,
                    "description": "<p>Sets the focus to the hiddien input native element</p>\n"
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 59
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>For use within hidden code form.\nOnly works in a form.</p>\n",
            "rawdescription": "For use within hidden code form.\nOnly works in a form.",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n  ViewChild,\n} from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Subscription } from 'rxjs';\n\n/**\n * For use within hidden code form.\n * Only works in a form.\n */\n@Component({\n  selector: 'brave-hidden-asterisk-input',\n  templateUrl: './hidden-asterisk-input.component.html',\n})\nexport class HiddenAsteriskInputComponent implements OnInit {\n  @ViewChild('hiddenInput') hiddenInput: ElementRef | undefined;\n\n  @Input() size: string = 'text-sm';\n  @Input() index: number = 0;\n  @Input() value: string = '';\n\n  @Output() valueChanged: EventEmitter<any> = new EventEmitter();\n  @Output() onMoveNext: EventEmitter<any> = new EventEmitter();\n  @Output()\n  onComponentReady: EventEmitter<FormGroup> = new EventEmitter<FormGroup>();\n\n  private _masked: boolean = false;\n  public componentFormGroup!: FormGroup;\n  public formSub$: Subscription | undefined;\n\n  get masked() {\n    return this._masked;\n  }\n  set masked(value: boolean) {\n    this._masked = value;\n  }\n\n  constructor(private fb: FormBuilder) {}\n\n  ngOnInit(): void {\n    this.componentFormGroup = this.fb.group({\n      input: [this.value, Validators.required],\n    });\n    this.formSub$ = this.componentFormGroup.controls.input.valueChanges.subscribe(\n      (value) => {\n        this.valueChanged.emit(value);\n        if (value?.length) this.onMoveNext.emit();\n      }\n    );\n    this.onComponentReady.emit(this.componentFormGroup);\n  }\n\n  ngOnDestroy() {\n    if (this.formSub$) this.formSub$.unsubscribe();\n  }\n\n  /**\n   * Sets the focus to the hiddien input native element\n   */\n  focusMe() {\n    const el: HTMLInputElement = this.hiddenInput?.nativeElement;\n    if (el) el.focus();\n  }\n\n  /**\n   * Removes any value stored in the input element\n   */\n  clearMe() {\n    const el: HTMLInputElement = this.hiddenInput?.nativeElement;\n    if (el) {\n      el.value = '';\n      el.click();\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "fb",
                        "type": "FormBuilder"
                    }
                ],
                "line": 42,
                "jsdoctags": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "masked": {
                    "name": "masked",
                    "setSignature": {
                        "name": "masked",
                        "type": "void",
                        "args": [
                            {
                                "name": "value",
                                "type": "boolean"
                            }
                        ],
                        "returnType": "void",
                        "line": 40,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "boolean",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "masked",
                        "type": "",
                        "returnType": "",
                        "line": 37
                    }
                }
            },
            "templateData": "<form [formGroup]=\"componentFormGroup\">\n  <span class=\"flex flex-shrink p-1\">\n    <input\n      #hiddenInput\n      [ngClass]=\"size\"\n      class=\"w-6 h-8 p-0 border-0 border-b-2 text-center text-sm text-blueGray-600 whitespace-nowrap bg-coolGray-100\"\n      braveHiddenAsteriskInput\n      formControlName=\"input\"\n      type=\"text\"\n      maxLength=\"1\"\n      autocorrect=\"off\"\n      autocapitalize=\"off\"\n      autocomplete=\"off\"\n      spellcheck=\"false\"\n    />\n  </span>\n</form>\n"
        },
        {
            "name": "IndexDropdownComponent",
            "id": "component-IndexDropdownComponent-0f2b26d0c0742e81a4c1a8aad536734d",
            "file": "src/app/shared/components/dropdowns/popdowns/index-dropdown/index-dropdown.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-index-dropdown",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./index-dropdown.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "btnDropdownRef",
                    "type": "ElementRef | undefined",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'btnDropdownRef', {static: false}"
                        }
                    ]
                },
                {
                    "name": "dropdownPopoverShow",
                    "defaultValue": "false",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "popoverDropdownRef",
                    "type": "ElementRef | undefined",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'popoverDropdownRef', {static: false}"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "createPoppper",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15
                },
                {
                    "name": "toggleDropdown",
                    "args": [
                        {
                            "name": "event",
                            "type": "literal type"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "literal type",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { createPopper } from '@popperjs/core';\n\n@Component({\n  selector: 'brave-index-dropdown',\n  templateUrl: './index-dropdown.component.html',\n})\nexport class IndexDropdownComponent implements OnInit {\n  dropdownPopoverShow = false;\n  @ViewChild('btnDropdownRef', { static: false }) btnDropdownRef:\n    | ElementRef\n    | undefined;\n  @ViewChild('popoverDropdownRef', { static: false })\n  popoverDropdownRef: ElementRef | undefined;\n  ngOnInit() {}\n\n  toggleDropdown(event: { preventDefault: () => void }) {\n    event.preventDefault();\n    if (this.dropdownPopoverShow) {\n      this.dropdownPopoverShow = false;\n    } else {\n      this.dropdownPopoverShow = true;\n      this.createPoppper();\n    }\n  }\n  createPoppper() {\n    createPopper(\n      this.btnDropdownRef?.nativeElement,\n      this.popoverDropdownRef?.nativeElement,\n      {\n        placement: 'bottom-start',\n      }\n    );\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<a\n  class=\"hover:text-blueGray-500 text-blueGray-700 px-3 py-2 flex items-center text-xs uppercase font-bold\"\n  href=\"#pablo\"\n  (click)=\"toggleDropdown($event)\"\n  #btnDropdownRef\n>\n  Demo Pages\n</a>\n<div\n  class=\"bg-white text-base z-50 float-left py-2 list-none text-left rounded shadow-lg min-w-48\"\n  [ngClass]=\"dropdownPopoverShow ? 'block' : 'hidden'\"\n  #popoverDropdownRef\n>\n  <span\n    class=\"text-sm pt-2 pb-0 px-4 font-bold block w-full whitespace-nowrap bg-transparent text-blueGray-400\"\n  >\n    Admin Layout\n  </span>\n  <a\n    [routerLink]=\"['/admin/dashboard']\"\n    class=\"text-sm py-2 px-4 font-normal block w-full whitespace-nowrap bg-transparent text-blueGray-700\"\n  >\n    Dashboard\n  </a>\n  <a\n    [routerLink]=\"['/admin/settings']\"\n    class=\"text-sm py-2 px-4 font-normal block w-full whitespace-nowrap bg-transparent text-blueGray-700\"\n  >\n    Settings\n  </a>\n  <a\n    [routerLink]=\"['/admin/tables']\"\n    class=\"text-sm py-2 px-4 font-normal block w-full whitespace-nowrap bg-transparent text-blueGray-700\"\n  >\n    Tables\n  </a>\n  <a\n    [routerLink]=\"['/admin/maps']\"\n    class=\"text-sm py-2 px-4 font-normal block w-full whitespace-nowrap bg-transparent text-blueGray-700\"\n  >\n    Maps\n  </a>\n  <div class=\"h-0 mx-4 my-2 border border-solid border-blueGray-100\"></div>\n  <span\n    class=\"text-sm pt-2 pb-0 px-4 font-bold block w-full whitespace-nowrap bg-transparent text-blueGray-400\"\n  >\n    Auth Layout\n  </span>\n  <a\n    [routerLink]=\"['/auth/login']\"\n    class=\"text-sm py-2 px-4 font-normal block w-full whitespace-nowrap bg-transparent text-blueGray-700\"\n  >\n    Login\n  </a>\n  <a\n    [routerLink]=\"['/auth/register']\"\n    class=\"text-sm py-2 px-4 font-normal block w-full whitespace-nowrap bg-transparent text-blueGray-700\"\n  >\n    Register\n  </a>\n  <div class=\"h-0 mx-4 my-2 border border-solid border-blueGray-100\"></div>\n  <span\n    class=\"text-sm pt-2 pb-0 px-4 font-bold block w-full whitespace-nowrap bg-transparent text-blueGray-400\"\n  >\n    No Layout\n  </span>\n  <a\n    [routerLink]=\"['/landing']\"\n    class=\"text-sm py-2 px-4 font-normal block w-full whitespace-nowrap bg-transparent text-blueGray-700\"\n  >\n    Landing\n  </a>\n  <a\n    [routerLink]=\"['/profile']\"\n    class=\"text-sm py-2 px-4 font-normal block w-full whitespace-nowrap bg-transparent text-blueGray-700\"\n  >\n    Profile\n  </a>\n</div>\n"
        },
        {
            "name": "IndexNavbarComponent",
            "id": "component-IndexNavbarComponent-e7df9fc518522d0246bea1148baa0754",
            "file": "src/app/shared/components/navbars/index-navbar/index-navbar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-index-navbar",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./index-navbar.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "navbarOpen",
                    "defaultValue": "false",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12
                },
                {
                    "name": "setNavbarOpen",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'brave-index-navbar',\n  templateUrl: './index-navbar.component.html',\n})\nexport class IndexNavbarComponent implements OnInit {\n  navbarOpen = false;\n\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  setNavbarOpen() {\n    this.navbarOpen = !this.navbarOpen;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<nav\n  class=\"top-0 fixed z-50 w-full flex flex-wrap items-center justify-between px-2 py-3 navbar-expand-lg bg-white shadow\"\n>\n  <div\n    class=\"container px-4 mx-auto flex flex-wrap items-center justify-between\"\n  >\n    <div\n      class=\"w-full relative flex justify-between lg:w-auto lg:static lg:block lg:justify-start\"\n    >\n      <a\n        [routerLink]=\"['/']\"\n        class=\"text-blueGray-700 text-sm font-bold leading-relaxed inline-block mr-4 py-2 whitespace-nowrap uppercase\"\n        href=\"#pablo\"\n      >\n        Notus Angular\n      </a>\n      <button\n        class=\"cursor-pointer text-xl leading-none px-3 py-1 border border-solid border-transparent rounded bg-transparent block lg:hidden outline-none focus:outline-none\"\n        type=\"button\"\n        (click)=\"setNavbarOpen()\"\n      >\n        <i class=\"fas fa-bars\"></i>\n      </button>\n    </div>\n    <div\n      class=\"lg:flex flex-grow items-center\"\n      [ngClass]=\"{ hidden: !navbarOpen, block: navbarOpen }\"\n      id=\"example-navbar-warning\"\n    >\n      <ul class=\"flex flex-col lg:flex-row list-none mr-auto\">\n        <li class=\"flex items-center\">\n          <a\n            class=\"hover:text-blueGray-500 text-blueGray-700 px-3 py-2 flex items-center text-xs uppercase font-bold\"\n            href=\"https://www.creative-tim.com/learning-lab/tailwind/angular/overview/notus?ref=na-index-navbar\"\n          >\n            <i\n              class=\"text-blueGray-400 far fa-file-alt text-lg leading-lg mr-2\"\n            ></i>\n            Docs\n          </a>\n        </li>\n      </ul>\n      <ul class=\"flex flex-col lg:flex-row list-none lg:ml-auto\">\n        <li class=\"flex items-center\">\n          <brave-index-dropdown class=\"block\"></brave-index-dropdown>\n        </li>\n        <li class=\"flex items-center\">\n          <a\n            class=\"hover:text-blueGray-500 text-blueGray-700 px-3 py-2 flex items-center text-xs uppercase font-bold\"\n            href=\"https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fdemos.creative-tim.com%2Fnotus-angular%2F\"\n            target=\"_blank\"\n          >\n            <i class=\"text-blueGray-400 fab fa-facebook text-lg leading-lg\"></i>\n            <span class=\"lg:hidden inline-block ml-2\">Share</span>\n          </a>\n        </li>\n\n        <li class=\"flex items-center\">\n          <a\n            class=\"hover:text-blueGray-500 text-blueGray-700 px-3 py-2 flex items-center text-xs uppercase font-bold\"\n            href=\"https://twitter.com/intent/tweet?url=https%3A%2F%2Fdemos.creative-tim.com%2Fnotus-angular%2F&text=Start%20your%20development%20with%20a%20Free%20Tailwind%20CSS%20and%20Angular%20UI%20Kit%20and%20Admin.%20Let%20Notus%20Angular%20amaze%20you%20with%20its%20cool%20features%20and%20build%20tools%20and%20get%20your%20project%20to%20a%20whole%20new%20level.\"\n            target=\"_blank\"\n          >\n            <i class=\"text-blueGray-400 fab fa-twitter text-lg leading-lg\"></i>\n            <span class=\"lg:hidden inline-block ml-2\">Tweet</span>\n          </a>\n        </li>\n\n        <li class=\"flex items-center\">\n          <a\n            class=\"hover:text-blueGray-500 text-blueGray-700 px-3 py-2 flex items-center text-xs uppercase font-bold\"\n            href=\"https://github.com/creativetimofficial/notus-angular?ref=na-index-navbar\"\n            target=\"_blank\"\n          >\n            <i class=\"text-blueGray-400 fab fa-github text-lg leading-lg\"></i>\n            <span class=\"lg:hidden inline-block ml-2\">Star</span>\n          </a>\n        </li>\n\n        <li class=\"flex items-center\">\n          <button\n            class=\"bg-red-600 text-white active:bg-red-700 text-xs font-bold uppercase px-4 py-2 rounded shadow hover:shadow-lg outline-none focus:outline-none lg:mr-1 lg:mb-0 ml-3 mb-3 ease-linear transition-all duration-150\"\n            type=\"button\"\n          >\n            <i class=\"fas fa-arrow-alt-circle-down\"></i> Download\n          </button>\n        </li>\n      </ul>\n    </div>\n  </div>\n</nav>\n"
        },
        {
            "name": "KbaMultiplechoiceInputComponent",
            "id": "component-KbaMultiplechoiceInputComponent-9c937b810359db9306e5238849f67634",
            "file": "src/app/shared/components/inputs/kba-multiplechoice-input/kba-multiplechoice-input.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-kba-multiplechoice-input",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./kba-multiplechoice-input.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "asteriskOverride",
                    "line": 58
                },
                {
                    "name": "config",
                    "defaultValue": "{\n    size: 'base',\n    label: 'Input label',\n    type: 'text',\n    placeholder: 'Input text',\n    autocomplete: 'off',\n    value: '',\n  }",
                    "line": 34,
                    "type": "IKbaMultipleChoiceConfig"
                },
                {
                    "name": "question",
                    "description": "<p>{@input (ITransunionKBAQuestion) Individual question</p>\n",
                    "line": 69
                },
                {
                    "name": "required",
                    "line": 47
                }
            ],
            "outputsClass": [
                {
                    "name": "onComponentReady",
                    "defaultValue": "new EventEmitter<FormGroup>()",
                    "line": 89,
                    "type": "EventEmitter<FormGroup>"
                },
                {
                    "name": "valueChanged",
                    "defaultValue": "new EventEmitter()",
                    "line": 87,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "_asteriskOverride",
                    "defaultValue": "false",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "_question",
                    "type": "ITransunionKBAQuestion | undefined",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "_required",
                    "defaultValue": "false",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "componentFormGroup",
                    "defaultValue": "new FormBuilder().group({\n    input: [''],\n  })",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 91,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "hidden",
                    "defaultValue": "false",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 95,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "locked",
                    "defaultValue": "false",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 94,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 99
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport {\n  ITransunionKBAAnswer,\n  ITransunionKBAQuestion,\n} from '@shared/interfaces/tu-kba-questions.interface';\n\nexport interface IKbaMultipleChoiceConfig {\n  size: string;\n  label: string;\n  type: string;\n  placeholder: string;\n  autocomplete: string;\n  value?: string;\n}\n\n@Component({\n  selector: 'brave-kba-multiplechoice-input',\n  templateUrl: './kba-multiplechoice-input.component.html',\n})\nexport class KbaMultiplechoiceInputComponent implements OnInit {\n  private _required: boolean = false;\n  private _asteriskOverride: boolean = false;\n  private _question: ITransunionKBAQuestion | undefined;\n\n  /**\n   * @param Config Object to pass in component params\n   * @param config.size 'sm', 'base', 'lg'\n   * @param config.label Label text (default: 'Input label')\n   * @param config.placeholder Placeholder text (default: 'Input text')\n   * @param config.autocomplete Any HTML Input autocomplete value\n   * @param config.value (optional) Pre-load the input with a value\n   */\n  @Input() config: IKbaMultipleChoiceConfig = {\n    size: 'base',\n    label: 'Input label',\n    type: 'text',\n    placeholder: 'Input text',\n    autocomplete: 'off',\n    value: '',\n  };\n\n  /**\n   * @input Flag to make the input field required for form to be valid\n   */\n  @Input()\n  get required() {\n    return this._required;\n  }\n  set required(value: any) {\n    this._required = !!value;\n  }\n\n  /**\n   * @input Flag to override the display of an asterisk but still make it required\n   */\n  @Input()\n  get asteriskOverride() {\n    return this._asteriskOverride;\n  }\n  set asteriskOverride(value: any) {\n    this._asteriskOverride = !!value;\n  }\n\n  /**\n   * {@input (ITransunionKBAQuestion) Individual question\n   */\n  @Input()\n  get question() {\n    return this._question;\n  }\n  set question(value: ITransunionKBAQuestion | undefined) {\n    this._question = value;\n  }\n\n  get choices() {\n    const choices:\n      | ITransunionKBAAnswer\n      | ITransunionKBAAnswer[]\n      | undefined = this._question?.AnswerChoice;\n    if (!choices) {\n      return [];\n    }\n    return choices instanceof Array ? choices : [choices];\n  }\n\n  @Output() valueChanged: EventEmitter<any> = new EventEmitter();\n  @Output()\n  onComponentReady: EventEmitter<FormGroup> = new EventEmitter<FormGroup>();\n\n  public componentFormGroup: FormGroup = new FormBuilder().group({\n    input: [''],\n  });\n  public locked: boolean = false;\n  public hidden: boolean = false;\n\n  constructor(private fb: FormBuilder) {}\n\n  ngOnInit(): void {\n    const validators = [];\n    if (this.required) {\n      validators.push(Validators.required);\n    }\n    this.componentFormGroup = this.fb.group({\n      input: [this.config.value, validators],\n    });\n    this.componentFormGroup.controls.input.valueChanges.subscribe((value) =>\n      this.valueChanged.emit(value)\n    );\n    this.onComponentReady.emit(this.componentFormGroup);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "fb",
                        "type": "FormBuilder"
                    }
                ],
                "line": 95,
                "jsdoctags": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "required": {
                    "name": "required",
                    "setSignature": {
                        "name": "required",
                        "type": "void",
                        "args": [
                            {
                                "name": "value",
                                "type": "any"
                            }
                        ],
                        "returnType": "void",
                        "line": 50,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "any",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "asteriskOverride": {
                    "name": "asteriskOverride",
                    "setSignature": {
                        "name": "asteriskOverride",
                        "type": "void",
                        "args": [
                            {
                                "name": "value",
                                "type": "any"
                            }
                        ],
                        "returnType": "void",
                        "line": 61,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "any",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "question": {
                    "name": "question",
                    "setSignature": {
                        "name": "question",
                        "type": "void",
                        "args": [
                            {
                                "name": "value",
                                "type": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 72,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "choices": {
                    "name": "choices",
                    "getSignature": {
                        "name": "choices",
                        "type": "",
                        "returnType": "",
                        "line": 76
                    }
                }
            },
            "templateData": "<form [formGroup]=\"componentFormGroup\">\n  <div class=\"mt-4\">\n    <div class=\"pl-1 mt-2\">\n      <p class=\"font-sans mb-4 font-semibold text-base text-coolGray-700\">\n        {{ question?.FullQuestionText }}\n      </p>\n      <fieldset>\n        <div *ngIf=\"question\">\n          <div *ngFor=\"let choice of choices; index as i\">\n            <label class=\"inline-flex items-center\">\n              <input\n                name=\"input\"\n                type=\"radio\"\n                formControlName=\"input\"\n                class=\"form-radio text-indigo-800 shadow-sm focus:border-indigo-300 focus:ring focus:ring-offset-0 focus:ring-indigo-200 focus:ring-opacity-50\"\n                [value]=\"{\n                  question: question,\n                  answer: choice\n                }\"\n              />\n              <span class=\"font-sans text-sm text-coolGray-700 ml-4\">{{\n                choice?.AnswerChoiceText\n              }}</span>\n            </label>\n          </div>\n        </div>\n      </fieldset>\n    </div>\n  </div>\n</form>\n"
        },
        {
            "name": "KbaquestionsFormComponent",
            "id": "component-KbaquestionsFormComponent-2aed6becf5bad74b1685c45d617ad17b",
            "file": "src/app/shared/components/forms/kbaquestions-form/kbaquestions-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{ provide: , useValue:  }"
                }
            ],
            "selector": "brave-kbaquestions-form",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./kbaquestions-form.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "kbas",
                    "defaultValue": "[]",
                    "line": 27,
                    "type": "ITransunionKBAQuestion[]"
                },
                {
                    "name": "hideHint",
                    "defaultValue": "false",
                    "line": 16,
                    "type": "boolean",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "clickAnswer",
                    "defaultValue": "new EventEmitter()",
                    "line": 29,
                    "type": "EventEmitter<ITransunionKBAQuestion>"
                },
                {
                    "name": "onChanges",
                    "defaultValue": "new EventEmitter()",
                    "line": 9,
                    "type": "EventEmitter<any>",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "onSubmit",
                    "defaultValue": "new EventEmitter()",
                    "line": 10,
                    "type": "EventEmitter<FormGroup>",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "onSubmitError",
                    "defaultValue": "new EventEmitter()",
                    "line": 12,
                    "type": "EventEmitter<literal type>",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "carouselXAxis",
                    "defaultValue": "0",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "itemWidth",
                    "defaultValue": "300",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "kbaConfig",
                    "defaultValue": "{\n    size: 'sm',\n    type: 'text',\n    label: '',\n    placeholder: '',\n    autocomplete: 'off',\n  }",
                    "type": "IKbaMultipleChoiceConfig",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "slider",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'slider'"
                        }
                    ]
                },
                {
                    "name": "sliderWidth",
                    "defaultValue": "1200",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "sliderWindow",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'sliderWindow'"
                        }
                    ]
                },
                {
                    "name": "tracker",
                    "defaultValue": "[0]",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "parentForm",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "formatChildName",
                    "args": [
                        {
                            "name": "childName",
                            "type": "string"
                        },
                        {
                            "name": "digit",
                            "type": "number"
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 53,
                    "jsdoctags": [
                        {
                            "name": "childName",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "digit",
                            "type": "number",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 48
                },
                {
                    "name": "scroll",
                    "args": [
                        {
                            "name": "value",
                            "type": "number"
                        },
                        {
                            "name": "min",
                            "type": "number"
                        },
                        {
                            "name": "max",
                            "type": "number"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 85,
                    "description": "<p>Method to scroll the carousel by a percentage value</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 2231,
                                "end": 2236,
                                "flags": 0,
                                "escapedText": "value"
                            },
                            "type": "number",
                            "tagName": {
                                "pos": 2225,
                                "end": 2230,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": "<p>percentage to move the carousel over by</p>\n"
                        },
                        {
                            "name": {
                                "pos": 2289,
                                "end": 2292,
                                "flags": 0,
                                "escapedText": "min"
                            },
                            "type": "number",
                            "tagName": {
                                "pos": 2283,
                                "end": 2288,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": "<p>the floor that the scroll should go to (i.e. 0)</p>\n"
                        },
                        {
                            "name": {
                                "pos": 2353,
                                "end": 2356,
                                "flags": 0,
                                "escapedText": "max"
                            },
                            "type": "number",
                            "tagName": {
                                "pos": 2347,
                                "end": 2352,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": "<p>the max translation the scrill should go to (e.g. -75...if 4 items)</p>\n"
                        }
                    ]
                },
                {
                    "name": "setSliderWidth",
                    "args": [
                        {
                            "name": "width",
                            "type": "number"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 74,
                    "description": "<p>Sets the slider width to hold all the items</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1955,
                                "end": 1960,
                                "flags": 0,
                                "escapedText": "width"
                            },
                            "type": "number",
                            "tagName": {
                                "pos": 1949,
                                "end": 1954,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": ""
                        }
                    ]
                },
                {
                    "name": "setSliderWindowWidth",
                    "args": [
                        {
                            "name": "width",
                            "type": "number"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 61,
                    "description": "<p>Sets the slider window width so only a portion is showing</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1655,
                                "end": 1660,
                                "flags": 0,
                                "escapedText": "width"
                            },
                            "type": "number",
                            "tagName": {
                                "pos": 1649,
                                "end": 1654,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": ""
                        }
                    ]
                },
                {
                    "name": "addChild",
                    "args": [
                        {
                            "name": "childName",
                            "type": "string"
                        },
                        {
                            "name": "childGroup",
                            "type": "FormGroup"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "jsdoctags": [
                        {
                            "name": "childName",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "childGroup",
                            "type": "FormGroup",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "submitForm",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  Output,\n  Renderer2,\n  ViewChild,\n} from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { BaseFormComponent } from '@shared/components/forms/base-form/base-form.component';\nimport { IKbaMultipleChoiceConfig } from '@shared/components/inputs/kba-multiplechoice-input/kba-multiplechoice-input.component';\nimport { ITransunionKBAQuestion } from '@shared/interfaces/tu-kba-questions.interface';\n\n@Component({\n  selector: 'brave-kbaquestions-form',\n  templateUrl: './kbaquestions-form.component.html',\n  providers: [{ provide: 'name', useValue: 'kba-form' }],\n})\nexport class KbaquestionsFormComponent\n  extends BaseFormComponent\n  implements AfterViewInit {\n  @ViewChild('slider') slider!: ElementRef;\n  @ViewChild('sliderWindow') sliderWindow!: ElementRef;\n\n  @Input() kbas: ITransunionKBAQuestion[] = [];\n  @Output()\n  clickAnswer: EventEmitter<ITransunionKBAQuestion> = new EventEmitter();\n\n  sliderWidth: number = 1200;\n  itemWidth: number = 300;\n  carouselXAxis: number = 0;\n  tracker: any[] = [0];\n\n  public kbaConfig: IKbaMultipleChoiceConfig = {\n    size: 'sm',\n    type: 'text',\n    label: '',\n    placeholder: '',\n    autocomplete: 'off',\n  };\n\n  constructor(fb: FormBuilder, private renderer: Renderer2) {\n    super(fb, 'kba-form');\n  }\n\n  ngAfterViewInit(): void {\n    this.setSliderWindowWidth(this.itemWidth);\n    this.setSliderWidth(this.sliderWidth);\n  }\n\n  formatChildName(childName: string, digit: number): string {\n    return `${childName}-${digit}`;\n  }\n\n  /**\n   * Sets the slider window width so only a portion is showing\n   * @param width\n   */\n  setSliderWindowWidth(width: number): void {\n    // TODO need to set floor to width of containing elements\n    this.renderer.setStyle(\n      this.sliderWindow.nativeElement,\n      'width',\n      `${width}px`\n    );\n  }\n\n  /**\n   * Sets the slider width to hold all the items\n   * @param width\n   */\n  setSliderWidth(width: number): void {\n    // TODO need to set floor to width of containing elements x 3\n    this.renderer.setStyle(this.slider.nativeElement, 'width', `${width}px`);\n  }\n\n  /**\n   * Method to scroll the carousel by a percentage value\n   * @param value percentage to move the carousel over by\n   * @param min the floor that the scroll should go to (i.e. 0)\n   * @param max the max translation the scrill should go to (e.g. -75...if 4 items)\n   */\n  scroll(value: number, min: number, max: number): void {\n    if (this.carouselXAxis + value > min || this.carouselXAxis + value < max) {\n      return;\n    }\n    // pop and push tracker to know which question we are on\n    if (value < 0) {\n      this.tracker = [...this.tracker, 0];\n    }\n    if (value > 0) {\n      this.tracker = [...this.tracker.slice(1)];\n    }\n\n    this.carouselXAxis += value;\n    this.renderer.setStyle(\n      this.slider.nativeElement,\n      'transform',\n      `translateX(${this.carouselXAxis}%)`\n    );\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "fb",
                        "type": "FormBuilder"
                    },
                    {
                        "name": "renderer",
                        "type": "Renderer2"
                    }
                ],
                "line": 42,
                "jsdoctags": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "BaseFormComponent",
            "implements": [
                "AfterViewInit"
            ],
            "templateData": "<!-- Display Container (not part of component) START -->\n<div class=\"window-wrapper flex justify-center items-center w-full\">\n  <!-- Carousel Body -->\n  <div #sliderWindow class=\"window justify-center overflow-hidden\">\n    <div #slider class=\"slider transition-all\">\n      <!-- put the questions here -->\n      <form [formGroup]=\"parentForm\">\n        <div class=\"items flex overflow-x-hidden\">\n          <div *ngFor=\"let question of kbas; index as i\">\n            <div class=\"item\" [ngStyle]=\"{ 'width.px': itemWidth }\">\n              <brave-kba-multiplechoice-input\n                (click)=\"clickAnswer.emit(question)\"\n                (onComponentReady)=\"\n                  addChild(formatChildName('question', i), $event)\n                \"\n                [required]=\"true\"\n                [question]=\"question\"\n              ></brave-kba-multiplechoice-input>\n            </div>\n          </div>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n<div class=\"flex justify-center\">\n  <!-- put the # / 4 here -->\n  <p class=\"text-center\">{{ tracker.length }} / {{ kbas?.length }}</p>\n</div>\n"
        },
        {
            "name": "KycAddressComponent",
            "id": "component-KycAddressComponent-00b1e87c9046f30a391e77aedbe2191e",
            "file": "src/app/views/kyc-address/kyc-address/kyc-address.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-kyc-address",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./kyc-address.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "backClick",
                    "defaultValue": "new EventEmitter()",
                    "line": 14,
                    "type": "EventEmitter<void>",
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                },
                {
                    "name": "formError",
                    "defaultValue": "new EventEmitter()",
                    "line": 17,
                    "type": "EventEmitter<literal type>",
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                },
                {
                    "name": "formSubmit",
                    "defaultValue": "new EventEmitter()",
                    "line": 15,
                    "type": "EventEmitter<FormGroup>",
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                },
                {
                    "name": "nextClick",
                    "defaultValue": "new EventEmitter()",
                    "line": 13,
                    "type": "EventEmitter<void>",
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "stepID",
                    "defaultValue": "1",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "goBack",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26
                },
                {
                    "name": "goToNext",
                    "args": [
                        {
                            "name": "form",
                            "type": "FormGroup"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "jsdoctags": [
                        {
                            "name": "form",
                            "type": "FormGroup",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleError",
                    "args": [
                        {
                            "name": "errors",
                            "type": "literal type"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45,
                    "jsdoctags": [
                        {
                            "name": "errors",
                            "type": "literal type",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22
                },
                {
                    "name": "flattenAttributes",
                    "args": [
                        {
                            "name": "formValues",
                            "type": "any"
                        },
                        {
                            "name": "mapObj",
                            "type": "Record<string | any>"
                        },
                        {
                            "name": "inputType",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "FlatForm",
                    "typeParameters": [],
                    "line": 31,
                    "jsdoctags": [
                        {
                            "name": "formValues",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "mapObj",
                            "type": "Record<string | any>",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "inputType",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                },
                {
                    "name": "formatAttributes",
                    "args": [
                        {
                            "name": "form",
                            "type": "FormGroup"
                        },
                        {
                            "name": "mapObj",
                            "type": "Record<string | any>"
                        },
                        {
                            "name": "inputType",
                            "type": "string",
                            "defaultValue": "'input'"
                        }
                    ],
                    "optional": false,
                    "returnType": "FlatForm",
                    "typeParameters": [],
                    "line": 23,
                    "jsdoctags": [
                        {
                            "name": "form",
                            "type": "FormGroup",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "mapObj",
                            "type": "Record<string | any>",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "inputType",
                            "type": "string",
                            "defaultValue": "'input'",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { KycService } from '@shared/services/kyc/kyc.service';\nimport { AbstractControl, FormGroup } from '@angular/forms';\nimport { KycBaseComponent } from '@views/kyc-base/kyc-base.component';\nimport { UserAttributesInput } from '@shared/services/aws/api.service';\n\n@Component({\n  selector: 'brave-kyc-address',\n  templateUrl: './kyc-address.component.html',\n})\nexport class KycAddressComponent extends KycBaseComponent implements OnInit {\n  stepID = 1;\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n    private kycService: KycService\n  ) {\n    super();\n  }\n\n  ngOnInit(): void {\n    this.kycService.activateStep(this.stepID);\n  }\n\n  goBack(): void {\n    this.kycService.inactivateStep(this.stepID);\n    this.router.navigate(['../name'], { relativeTo: this.route });\n  }\n\n  goToNext(form: FormGroup): void {\n    // need to add form validation before moving forward\n    if (form.valid) {\n      const attrs = {\n        address: {\n          ...this.formatAttributes(form, address),\n        },\n      } as UserAttributesInput;\n      this.kycService.updateUserAttributes(attrs);\n      this.kycService.completeStep(this.stepID);\n      this.router.navigate(['../identity'], { relativeTo: this.route });\n    }\n  }\n\n  handleError(errors: { [key: string]: AbstractControl }): void {\n    console.log('form errors', errors);\n  }\n}\n\nconst address: Record<string, any> = {\n  addressOne: true,\n  addressTwo: true,\n  city: true,\n  state: true,\n  zip: true,\n};\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router"
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute"
                    },
                    {
                        "name": "kycService",
                        "type": "KycService"
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "kycService",
                        "type": "KycService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "KycBaseComponent",
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"container mx-auto max-w-xs h-full\">\n  <brave-kyc-address-pure\n    (formSubmit)=\"goToNext($event)\"\n    (formError)=\"handleError($event)\"\n    (backClick)=\"goBack()\"\n  ></brave-kyc-address-pure>\n</div>\n"
        },
        {
            "name": "KycAddressPureComponent",
            "id": "component-KycAddressPureComponent-cd7f3bc0f32a90fd54571c288beeae95",
            "file": "src/app/views/kyc-address/kyc-address-pure/kyc-address-pure.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-kyc-address-pure",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./kyc-address-pure.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "backClick",
                    "defaultValue": "new EventEmitter()",
                    "line": 14,
                    "type": "EventEmitter<void>",
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                },
                {
                    "name": "formError",
                    "defaultValue": "new EventEmitter()",
                    "line": 17,
                    "type": "EventEmitter<literal type>",
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                },
                {
                    "name": "formSubmit",
                    "defaultValue": "new EventEmitter()",
                    "line": 15,
                    "type": "EventEmitter<FormGroup>",
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                },
                {
                    "name": "nextClick",
                    "defaultValue": "new EventEmitter()",
                    "line": 13,
                    "type": "EventEmitter<void>",
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "flattenAttributes",
                    "args": [
                        {
                            "name": "formValues",
                            "type": "any"
                        },
                        {
                            "name": "mapObj",
                            "type": "Record<string | any>"
                        },
                        {
                            "name": "inputType",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "FlatForm",
                    "typeParameters": [],
                    "line": 31,
                    "jsdoctags": [
                        {
                            "name": "formValues",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "mapObj",
                            "type": "Record<string | any>",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "inputType",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                },
                {
                    "name": "formatAttributes",
                    "args": [
                        {
                            "name": "form",
                            "type": "FormGroup"
                        },
                        {
                            "name": "mapObj",
                            "type": "Record<string | any>"
                        },
                        {
                            "name": "inputType",
                            "type": "string",
                            "defaultValue": "'input'"
                        }
                    ],
                    "optional": false,
                    "returnType": "FlatForm",
                    "typeParameters": [],
                    "line": 23,
                    "jsdoctags": [
                        {
                            "name": "form",
                            "type": "FormGroup",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "mapObj",
                            "type": "Record<string | any>",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "inputType",
                            "type": "string",
                            "defaultValue": "'input'",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { KycBaseComponent } from '@views/kyc-base/kyc-base.component';\n\n@Component({\n  selector: 'brave-kyc-address-pure',\n  templateUrl: './kyc-address-pure.component.html',\n})\nexport class KycAddressPureComponent extends KycBaseComponent {\n  constructor() {\n    super();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "extends": "KycBaseComponent",
            "templateData": "<div class=\"flex content-center items-center justify-center h-full\">\n  <div class=\"w-full max-w-xs\">\n    <div class=\"relative flex flex-col min-w-0 w-full mb-6 border-0\">\n      <!-- header -->\n      <div class=\"py-3\">\n        <h4 class=\"brave-h4 text-indigo-800\">Your Address</h4>\n      </div>\n\n      <!-- subheader -->\n      <div class=\"py-3\">\n        <div class=\"text-base\">\n          <p class=\"mb-6 text-blueGray-600\">\n            What is your most recent home address?\n          </p>\n        </div>\n      </div>\n\n      <!-- form -->\n      <div class=\"py-3 pt-0\">\n        <brave-outline-address-form\n          #form\n          (onSubmit)=\"formSubmit.emit($event)\"\n          (onSubmitError)=\"formError.emit($event)\"\n        ></brave-outline-address-form>\n      </div>\n\n      <div class=\"mt-5\">\n        <div class=\"flex justify-between items-center\">\n          <brave-links-onlytext-button\n            (click)=\"backClick.emit()\"\n            [config]=\"{ buttonSize: 'sm', color: 'text-blueGray-600' }\"\n          >\n            <span class=\"flex items-center\">\n              <span class=\"material-icons px-1\">arrow_back</span>&nbsp;Back\n            </span>\n          </brave-links-onlytext-button>\n          <brave-filled-onlytext-button (click)=\"form.submitForm()\"\n            ><span class=\"flex items-center\"\n              >Continue<span class=\"material-icons px-1\"\n                >arrow_forward</span\n              ></span\n            ></brave-filled-onlytext-button\n          >\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n"
        },
        {
            "name": "KycBaseComponent",
            "id": "component-KycBaseComponent-61e4e3fcc80ad00ec4cf1aa6bf80cc32",
            "file": "src/app/views/kyc-base/kyc-base.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-kyc-base",
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "backClick",
                    "defaultValue": "new EventEmitter()",
                    "line": 14,
                    "type": "EventEmitter<void>"
                },
                {
                    "name": "formError",
                    "defaultValue": "new EventEmitter()",
                    "line": 17,
                    "type": "EventEmitter<literal type>"
                },
                {
                    "name": "formSubmit",
                    "defaultValue": "new EventEmitter()",
                    "line": 15,
                    "type": "EventEmitter<FormGroup>"
                },
                {
                    "name": "nextClick",
                    "defaultValue": "new EventEmitter()",
                    "line": 13,
                    "type": "EventEmitter<void>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "flattenAttributes",
                    "args": [
                        {
                            "name": "formValues",
                            "type": "any"
                        },
                        {
                            "name": "mapObj",
                            "type": "Record<string | any>"
                        },
                        {
                            "name": "inputType",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "FlatForm",
                    "typeParameters": [],
                    "line": 31,
                    "jsdoctags": [
                        {
                            "name": "formValues",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "mapObj",
                            "type": "Record<string | any>",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "inputType",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "formatAttributes",
                    "args": [
                        {
                            "name": "form",
                            "type": "FormGroup"
                        },
                        {
                            "name": "mapObj",
                            "type": "Record<string | any>"
                        },
                        {
                            "name": "inputType",
                            "type": "string",
                            "defaultValue": "'input'"
                        }
                    ],
                    "optional": false,
                    "returnType": "FlatForm",
                    "typeParameters": [],
                    "line": 23,
                    "jsdoctags": [
                        {
                            "name": "form",
                            "type": "FormGroup",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "mapObj",
                            "type": "Record<string | any>",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "inputType",
                            "type": "string",
                            "defaultValue": "'input'",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Output } from '@angular/core';\nimport { AbstractControl, FormGroup } from '@angular/forms';\n\nexport interface FlatForm {\n  [key: string]: string;\n}\n\n@Component({\n  selector: 'brave-kyc-base',\n  template: '',\n})\nexport class KycBaseComponent {\n  @Output() nextClick: EventEmitter<void> = new EventEmitter();\n  @Output() backClick: EventEmitter<void> = new EventEmitter();\n  @Output() formSubmit: EventEmitter<FormGroup> = new EventEmitter();\n  @Output()\n  formError: EventEmitter<{\n    [key: string]: AbstractControl;\n  }> = new EventEmitter();\n\n  constructor() {}\n\n  formatAttributes(\n    form: FormGroup,\n    mapObj: Record<string, any>,\n    inputType: string = 'input'\n  ): FlatForm {\n    return this.flattenAttributes(form.value, mapObj, inputType);\n  }\n\n  flattenAttributes(\n    formValues: any,\n    mapObj: Record<string, any>,\n    inputType: string\n  ): FlatForm {\n    let values: FlatForm = {};\n    Object.keys(formValues).forEach((key) => {\n      if (mapObj[key]) {\n        values[key] = formValues[key][`${inputType}`];\n      }\n    });\n    return values;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 19
            }
        },
        {
            "name": "KycCongratulationsComponent",
            "id": "component-KycCongratulationsComponent-6a2b4f2b12aac6f6e94f99cae9c53091",
            "file": "src/app/views/kyc-congratulations/kyc-congratulations/kyc-congratulations.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-kyc-congratulations",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./kyc-congratulations.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "goToNext",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 11
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'brave-kyc-congratulations',\n  templateUrl: './kyc-congratulations.component.html',\n})\nexport class KycCongratulationsComponent implements OnInit {\n  constructor(private router: Router) {}\n\n  ngOnInit(): void {}\n\n  goToNext(): void {\n    this.router.navigate(['/dashboard']);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router"
                    }
                ],
                "line": 8,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"container mx-auto max-w-xs h-full\">\n  <brave-kyc-congratulations-pure\n    (nextClick)=\"goToNext()\"\n  ></brave-kyc-congratulations-pure>\n</div>\n"
        },
        {
            "name": "KycCongratulationsPureComponent",
            "id": "component-KycCongratulationsPureComponent-850e84cf89a88dd83f57eefeeb14749e",
            "file": "src/app/views/kyc-congratulations/kyc-congratulations-pure/kyc-congratulations-pure.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-kyc-congratulations-pure",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./kyc-congratulations-pure.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "backClick",
                    "defaultValue": "new EventEmitter()",
                    "line": 14,
                    "type": "EventEmitter<void>",
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                },
                {
                    "name": "formError",
                    "defaultValue": "new EventEmitter()",
                    "line": 17,
                    "type": "EventEmitter<literal type>",
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                },
                {
                    "name": "formSubmit",
                    "defaultValue": "new EventEmitter()",
                    "line": 15,
                    "type": "EventEmitter<FormGroup>",
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                },
                {
                    "name": "nextClick",
                    "defaultValue": "new EventEmitter()",
                    "line": 13,
                    "type": "EventEmitter<void>",
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "flattenAttributes",
                    "args": [
                        {
                            "name": "formValues",
                            "type": "any"
                        },
                        {
                            "name": "mapObj",
                            "type": "Record<string | any>"
                        },
                        {
                            "name": "inputType",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "FlatForm",
                    "typeParameters": [],
                    "line": 31,
                    "jsdoctags": [
                        {
                            "name": "formValues",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "mapObj",
                            "type": "Record<string | any>",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "inputType",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                },
                {
                    "name": "formatAttributes",
                    "args": [
                        {
                            "name": "form",
                            "type": "FormGroup"
                        },
                        {
                            "name": "mapObj",
                            "type": "Record<string | any>"
                        },
                        {
                            "name": "inputType",
                            "type": "string",
                            "defaultValue": "'input'"
                        }
                    ],
                    "optional": false,
                    "returnType": "FlatForm",
                    "typeParameters": [],
                    "line": 23,
                    "jsdoctags": [
                        {
                            "name": "form",
                            "type": "FormGroup",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "mapObj",
                            "type": "Record<string | any>",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "inputType",
                            "type": "string",
                            "defaultValue": "'input'",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { KycBaseComponent } from '@views/kyc-base/kyc-base.component';\n\n@Component({\n  selector: 'brave-kyc-congratulations-pure',\n  templateUrl: './kyc-congratulations-pure.component.html',\n})\nexport class KycCongratulationsPureComponent extends KycBaseComponent {\n  constructor() {\n    super();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "extends": "KycBaseComponent",
            "templateData": "<div class=\"flex content-center items-center justify-center h-full\">\n  <div class=\"w-full max-w-xs\">\n    <div class=\"relative flex flex-col min-w-0 w-full mb-6 border-0\">\n      <!-- image -->\n      <div class=\"flex justify-center mb-6\">\n        <img class=\"w-full\" src=\"assets/img/undraw_welcoming_xvuq.svg\" />\n      </div>\n\n      <!-- header -->\n      <div class=\"py-3\">\n        <h4 class=\"brave-h4\">Congratulations!</h4>\n      </div>\n\n      <!-- subheader -->\n      <div class=\"py-3\">\n        <div class=\"text-base\">\n          <p class=\"mb-6 text-blueGray-600\">You are verified.</p>\n        </div>\n      </div>\n\n      <!-- subheader -->\n      <div class=\"py-3\">\n        <div class=\"text-base\">\n          <p class=\"mb-6 text-blueGray-600\">\n            You are being redirected to the BraveCredit dashboard.\n          </p>\n        </div>\n      </div>\n\n      <div class=\"py-3 pt-0\">\n        <div class=\"-ml-3\">\n          <brave-links-onlytext-button\n            (click)=\"nextClick.emit()\"\n            [config]=\"{ buttonSize: 'sm', color: 'text-blueGray-600' }\"\n            ><span class=\"underline\"\n              >Not being redirected? Click here</span\n            ></brave-links-onlytext-button\n          >\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n"
        },
        {
            "name": "KycErrorComponent",
            "id": "component-KycErrorComponent-e66c8b12e52fb8da5dc0bcaf113e7763",
            "file": "src/app/views/kyc-error/kyc-error.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-kyc-error",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./kyc-error.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 10
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'brave-kyc-error',\n  templateUrl: './kyc-error.component.html',\n})\nexport class KycErrorComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 7
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>There was an error</p>\n"
        },
        {
            "name": "KycIdverificationComponent",
            "id": "component-KycIdverificationComponent-752453db0656295634d91e49af82b4e3",
            "file": "src/app/views/kyc-idverification/kyc-idverification/kyc-idverification.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-kyc-idverification",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./kyc-idverification.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "viewState",
                    "defaultValue": "'init'",
                    "line": 32,
                    "type": "KycIdverificationState"
                }
            ],
            "outputsClass": [
                {
                    "name": "backClick",
                    "defaultValue": "new EventEmitter()",
                    "line": 14,
                    "type": "EventEmitter<void>",
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                },
                {
                    "name": "formError",
                    "defaultValue": "new EventEmitter()",
                    "line": 17,
                    "type": "EventEmitter<literal type>",
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                },
                {
                    "name": "formSubmit",
                    "defaultValue": "new EventEmitter()",
                    "line": 15,
                    "type": "EventEmitter<FormGroup>",
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                },
                {
                    "name": "nextClick",
                    "defaultValue": "new EventEmitter()",
                    "line": 13,
                    "type": "EventEmitter<void>",
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "authChallenge",
                    "type": "ITransunionKBAQuestions | undefined",
                    "optional": false,
                    "description": "",
                    "line": 40,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "authQuestions",
                    "type": "ITransunionKBAChallengeAnswer | undefined",
                    "optional": false,
                    "description": "",
                    "line": 37,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "authResponse",
                    "type": "IVerifyAuthenticationResponseSuccess | undefined",
                    "optional": false,
                    "description": "",
                    "line": 42,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "authSuccessful",
                    "defaultValue": "false",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 43,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "authXML",
                    "type": "string | undefined",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "code",
                    "type": "string | undefined",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "enrollResult",
                    "type": "IEnrollResult | undefined",
                    "optional": false,
                    "description": "",
                    "line": 44,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "passcodeAnswer",
                    "type": "IVerifyAuthenticationAnswer | undefined",
                    "optional": false,
                    "description": "",
                    "line": 39,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "passcodeQuestion",
                    "type": "ITransunionKBAQuestion | undefined",
                    "optional": false,
                    "description": "",
                    "line": 38,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "state",
                    "type": "UpdateAppDataInput | undefined",
                    "optional": false,
                    "description": "",
                    "line": 34,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "stepID",
                    "defaultValue": "3",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "verifyResponse",
                    "type": "string | undefined",
                    "optional": false,
                    "description": "",
                    "line": 41,
                    "modifierKind": [
                        112
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "createChallengeConfig",
                    "args": [
                        {
                            "name": "questions",
                            "type": "ITransunionKBAChallengeAnswer | undefined"
                        }
                    ],
                    "optional": false,
                    "returnType": "KycIdverificationComponent",
                    "typeParameters": [],
                    "line": 141,
                    "jsdoctags": [
                        {
                            "name": "questions",
                            "type": "ITransunionKBAChallengeAnswer | undefined",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "enrichEnrollmentData",
                    "args": [
                        {
                            "name": "state",
                            "type": "UpdateAppDataInput | undefined"
                        },
                        {
                            "name": "enroll",
                            "type": "IEnrollResult"
                        }
                    ],
                    "optional": false,
                    "returnType": "AppDataStateModel | UpdateAppDataInput | undefined",
                    "typeParameters": [],
                    "line": 258,
                    "description": "<p>This method parses and enriches the state data</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 8622,
                                "end": 8627,
                                "flags": 0,
                                "escapedText": "state"
                            },
                            "type": "UpdateAppDataInput | undefined",
                            "tagName": {
                                "pos": 8575,
                                "end": 8580,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": "",
                            "typeExpression": {
                                "pos": 8581,
                                "end": 8621,
                                "flags": 0,
                                "kind": 277,
                                "type": {
                                    "pos": 8582,
                                    "end": 8620,
                                    "flags": 2097152,
                                    "kind": 168,
                                    "types": [
                                        {
                                            "pos": 8582,
                                            "end": 8599,
                                            "flags": 2097152,
                                            "kind": 161,
                                            "typeName": {
                                                "pos": 8582,
                                                "end": 8599,
                                                "flags": 2097152,
                                                "escapedText": "AppDataStateModel"
                                            }
                                        },
                                        {
                                            "pos": 8601,
                                            "end": 8620,
                                            "flags": 2097152,
                                            "kind": 161,
                                            "typeName": {
                                                "pos": 8601,
                                                "end": 8620,
                                                "flags": 2097152,
                                                "escapedText": "UpdateAppDataInput"
                                            }
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "name": {
                                "pos": 8658,
                                "end": 8664,
                                "flags": 0,
                                "escapedText": "enroll"
                            },
                            "type": "IEnrollResult",
                            "tagName": {
                                "pos": 8634,
                                "end": 8639,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": "",
                            "typeExpression": {
                                "pos": 8640,
                                "end": 8657,
                                "flags": 0,
                                "kind": 277,
                                "type": {
                                    "pos": 8641,
                                    "end": 8656,
                                    "flags": 2097152,
                                    "kind": 161,
                                    "typeName": {
                                        "pos": 8641,
                                        "end": 8656,
                                        "flags": 2097152,
                                        "escapedText": "IEnrollResponse"
                                    }
                                }
                            }
                        },
                        {
                            "tagName": {
                                "pos": 8671,
                                "end": 8678,
                                "flags": 0,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ]
                },
                {
                    "name": "getAuthDetails",
                    "args": [
                        {
                            "name": "state",
                            "type": "UpdateAppDataInput | AppDataStateModel | undefined"
                        }
                    ],
                    "optional": false,
                    "returnType": "KycIdverificationComponent",
                    "typeParameters": [],
                    "line": 122,
                    "description": "<p>Updates the authXML prop with the authentication questions back from TU</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 4312,
                                "end": 4317,
                                "flags": 0,
                                "escapedText": "state"
                            },
                            "type": "UpdateAppDataInput | AppDataStateModel | undefined",
                            "tagName": {
                                "pos": 4253,
                                "end": 4258,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": "",
                            "typeExpression": {
                                "pos": 4259,
                                "end": 4311,
                                "flags": 0,
                                "kind": 277,
                                "type": {
                                    "pos": 4260,
                                    "end": 4310,
                                    "flags": 2097152,
                                    "kind": 168,
                                    "types": [
                                        {
                                            "pos": 4260,
                                            "end": 4278,
                                            "flags": 2097152,
                                            "kind": 161,
                                            "typeName": {
                                                "pos": 4260,
                                                "end": 4278,
                                                "flags": 2097152,
                                                "escapedText": "UpdateAppDataInput"
                                            }
                                        },
                                        {
                                            "pos": 4280,
                                            "end": 4298,
                                            "flags": 2097152,
                                            "kind": 161,
                                            "typeName": {
                                                "pos": 4280,
                                                "end": 4298,
                                                "flags": 2097152,
                                                "escapedText": "AppDataStateModel"
                                            }
                                        },
                                        {
                                            "pos": 4300,
                                            "end": 4310,
                                            "flags": 2097152,
                                            "kind": 140
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "tagName": {
                                "pos": 4324,
                                "end": 4331,
                                "flags": 0,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ]
                },
                {
                    "name": "getPasscodeAnswer",
                    "args": [
                        {
                            "name": "passcodeQuestion",
                            "type": "ITransunionKBAQuestion | undefined"
                        },
                        {
                            "name": "code",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "KycIdverificationComponent",
                    "typeParameters": [],
                    "line": 173,
                    "description": "<p>Updates the otpAnswer prop with the OTP answer provided by TU</p>\n<ul>\n<li>Searches the answers returned for the specific OTP text (send text message)</li>\n</ul>\n",
                    "jsdoctags": [
                        {
                            "name": "passcodeQuestion",
                            "type": "ITransunionKBAQuestion | undefined",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "code",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "tagName": {
                                "pos": 5924,
                                "end": 5931,
                                "flags": 0,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ]
                },
                {
                    "name": "getPasscodeQuestion",
                    "args": [
                        {
                            "name": "questions",
                            "type": "ITransunionKBAQuestions | undefined"
                        }
                    ],
                    "optional": false,
                    "returnType": "KycIdverificationComponent",
                    "typeParameters": [],
                    "line": 159,
                    "description": "<p>Updates the otpQuestion prop with the OTP question provided by TU</p>\n<ul>\n<li>Searches the questions returned for specific OTP text</li>\n</ul>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 5430,
                                "end": 5439,
                                "flags": 0,
                                "escapedText": "questions"
                            },
                            "type": "ITransunionKBAQuestions | undefined",
                            "tagName": {
                                "pos": 5386,
                                "end": 5391,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": "",
                            "typeExpression": {
                                "pos": 5392,
                                "end": 5429,
                                "flags": 0,
                                "kind": 277,
                                "type": {
                                    "pos": 5393,
                                    "end": 5428,
                                    "flags": 2097152,
                                    "kind": 168,
                                    "types": [
                                        {
                                            "pos": 5393,
                                            "end": 5416,
                                            "flags": 2097152,
                                            "kind": 161,
                                            "typeName": {
                                                "pos": 5393,
                                                "end": 5416,
                                                "flags": 2097152,
                                                "escapedText": "ITransunionKBAQuestions"
                                            }
                                        },
                                        {
                                            "pos": 5418,
                                            "end": 5428,
                                            "flags": 2097152,
                                            "kind": 140
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "tagName": {
                                "pos": 5446,
                                "end": 5453,
                                "flags": 0,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ]
                },
                {
                    "name": "goBack",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 60
                },
                {
                    "name": "goToNext",
                    "args": [
                        {
                            "name": "form",
                            "type": "FormGroup"
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<void>",
                    "typeParameters": [],
                    "line": 65,
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "form",
                            "type": "FormGroup",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleError",
                    "args": [
                        {
                            "name": "errors",
                            "type": "literal type"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 113,
                    "jsdoctags": [
                        {
                            "name": "errors",
                            "type": "literal type",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "isVerificationSuccesful",
                    "args": [
                        {
                            "name": "resp",
                            "type": "IVerifyAuthenticationResponseSuccess | undefined"
                        }
                    ],
                    "optional": false,
                    "returnType": "KycIdverificationComponent",
                    "typeParameters": [],
                    "line": 224,
                    "description": "<p>Update the prop to indicate that verification was successful</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 7549,
                                "end": 7553,
                                "flags": 0,
                                "escapedText": "resp"
                            },
                            "type": "IVerifyAuthenticationResponseSuccess | undefined",
                            "tagName": {
                                "pos": 7492,
                                "end": 7497,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": "",
                            "typeExpression": {
                                "pos": 7498,
                                "end": 7548,
                                "flags": 0,
                                "kind": 277,
                                "type": {
                                    "pos": 7499,
                                    "end": 7547,
                                    "flags": 2097152,
                                    "kind": 168,
                                    "types": [
                                        {
                                            "pos": 7499,
                                            "end": 7535,
                                            "flags": 2097152,
                                            "kind": 161,
                                            "typeName": {
                                                "pos": 7499,
                                                "end": 7535,
                                                "flags": 2097152,
                                                "escapedText": "IVerifyAuthenticationResponseSuccess"
                                            }
                                        },
                                        {
                                            "pos": 7537,
                                            "end": 7547,
                                            "flags": 2097152,
                                            "kind": 140
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "tagName": {
                                "pos": 7560,
                                "end": 7567,
                                "flags": 0,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ]
                },
                {
                    "name": "parseAuthDetails",
                    "args": [
                        {
                            "name": "xml",
                            "type": "string | undefined"
                        }
                    ],
                    "optional": false,
                    "returnType": "KycIdverificationComponent",
                    "typeParameters": [],
                    "line": 135,
                    "description": "<p>Update the authQuestions prop with the parsed authXML prop</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 4675,
                                "end": 4678,
                                "flags": 0,
                                "escapedText": "xml"
                            },
                            "type": "string | undefined",
                            "tagName": {
                                "pos": 4648,
                                "end": 4653,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": "",
                            "typeExpression": {
                                "pos": 4654,
                                "end": 4674,
                                "flags": 0,
                                "kind": 277,
                                "type": {
                                    "pos": 4655,
                                    "end": 4673,
                                    "flags": 2097152,
                                    "kind": 168,
                                    "types": [
                                        {
                                            "pos": 4655,
                                            "end": 4661,
                                            "flags": 2097152,
                                            "kind": 137
                                        },
                                        {
                                            "pos": 4663,
                                            "end": 4673,
                                            "flags": 2097152,
                                            "kind": 140
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "tagName": {
                                "pos": 4685,
                                "end": 4692,
                                "flags": 0,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ]
                },
                {
                    "name": "parseVerifyResponse",
                    "args": [
                        {
                            "name": "verifyResp",
                            "type": "string | undefined"
                        }
                    ],
                    "optional": false,
                    "returnType": "KycIdverificationComponent",
                    "typeParameters": [],
                    "line": 190,
                    "description": "<p>Update the authResponse prop with the parsed verifyResp prop</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 6338,
                                "end": 6348,
                                "flags": 0,
                                "escapedText": "verifyResp"
                            },
                            "type": "string | undefined",
                            "tagName": {
                                "pos": 6311,
                                "end": 6316,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": "",
                            "typeExpression": {
                                "pos": 6317,
                                "end": 6337,
                                "flags": 0,
                                "kind": 277,
                                "type": {
                                    "pos": 6318,
                                    "end": 6336,
                                    "flags": 2097152,
                                    "kind": 168,
                                    "types": [
                                        {
                                            "pos": 6318,
                                            "end": 6324,
                                            "flags": 2097152,
                                            "kind": 137
                                        },
                                        {
                                            "pos": 6326,
                                            "end": 6336,
                                            "flags": 2097152,
                                            "kind": 140
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "tagName": {
                                "pos": 6355,
                                "end": 6362,
                                "flags": 0,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ]
                },
                {
                    "name": "resendCode",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 55
                },
                {
                    "name": "sendEnrollRequest",
                    "args": [
                        {
                            "name": "state",
                            "type": "UpdateAppDataInput | AppDataStateModel | undefined"
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<KycIdverificationComponent>",
                    "typeParameters": [],
                    "line": 238,
                    "description": "<p>Once the user is verified send the enroll request to return the users credit reports</p>\n",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 8010,
                                "end": 8015,
                                "flags": 0,
                                "escapedText": "state"
                            },
                            "type": "UpdateAppDataInput | AppDataStateModel | undefined",
                            "tagName": {
                                "pos": 7951,
                                "end": 7956,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": "",
                            "typeExpression": {
                                "pos": 7957,
                                "end": 8009,
                                "flags": 0,
                                "kind": 277,
                                "type": {
                                    "pos": 7958,
                                    "end": 8008,
                                    "flags": 2097152,
                                    "kind": 168,
                                    "types": [
                                        {
                                            "pos": 7958,
                                            "end": 7976,
                                            "flags": 2097152,
                                            "kind": 161,
                                            "typeName": {
                                                "pos": 7958,
                                                "end": 7976,
                                                "flags": 2097152,
                                                "escapedText": "UpdateAppDataInput"
                                            }
                                        },
                                        {
                                            "pos": 7978,
                                            "end": 7996,
                                            "flags": 2097152,
                                            "kind": 161,
                                            "typeName": {
                                                "pos": 7978,
                                                "end": 7996,
                                                "flags": 2097152,
                                                "escapedText": "AppDataStateModel"
                                            }
                                        },
                                        {
                                            "pos": 7998,
                                            "end": 8008,
                                            "flags": 2097152,
                                            "kind": 140
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "tagName": {
                                "pos": 8022,
                                "end": 8029,
                                "flags": 0,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ]
                },
                {
                    "name": "sendVerifyAuthQuestions",
                    "args": [
                        {
                            "name": "state",
                            "type": "UpdateAppDataInput | AppDataStateModel | undefined"
                        },
                        {
                            "name": "passcodeAnswer",
                            "type": "IVerifyAuthenticationAnswer | undefined"
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<KycIdverificationComponent>",
                    "typeParameters": [],
                    "line": 207,
                    "description": "<p>Updates the verifyResponse prop with the VerifyAuthenticationQuestions response from TU</p>\n<ul>\n<li>This is the response to our answer to send OTP (send text message)</li>\n<li>This response will contain an question (enter the passcode) embeded in CDATA</li>\n</ul>\n",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 6929,
                                "end": 6934,
                                "flags": 0,
                                "escapedText": "state"
                            },
                            "type": "UpdateAppDataInput | AppDataStateModel | undefined",
                            "tagName": {
                                "pos": 6870,
                                "end": 6875,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": "",
                            "typeExpression": {
                                "pos": 6876,
                                "end": 6928,
                                "flags": 0,
                                "kind": 277,
                                "type": {
                                    "pos": 6877,
                                    "end": 6927,
                                    "flags": 2097152,
                                    "kind": 168,
                                    "types": [
                                        {
                                            "pos": 6877,
                                            "end": 6895,
                                            "flags": 2097152,
                                            "kind": 161,
                                            "typeName": {
                                                "pos": 6877,
                                                "end": 6895,
                                                "flags": 2097152,
                                                "escapedText": "UpdateAppDataInput"
                                            }
                                        },
                                        {
                                            "pos": 6897,
                                            "end": 6915,
                                            "flags": 2097152,
                                            "kind": 161,
                                            "typeName": {
                                                "pos": 6897,
                                                "end": 6915,
                                                "flags": 2097152,
                                                "escapedText": "AppDataStateModel"
                                            }
                                        },
                                        {
                                            "pos": 6917,
                                            "end": 6927,
                                            "flags": 2097152,
                                            "kind": 140
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "name": "passcodeAnswer",
                            "type": "IVerifyAuthenticationAnswer | undefined",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "tagName": {
                                "pos": 7005,
                                "end": 7012,
                                "flags": 0,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ]
                },
                {
                    "name": "flattenAttributes",
                    "args": [
                        {
                            "name": "formValues",
                            "type": "any"
                        },
                        {
                            "name": "mapObj",
                            "type": "Record<string | any>"
                        },
                        {
                            "name": "inputType",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "FlatForm",
                    "typeParameters": [],
                    "line": 31,
                    "jsdoctags": [
                        {
                            "name": "formValues",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "mapObj",
                            "type": "Record<string | any>",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "inputType",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                },
                {
                    "name": "formatAttributes",
                    "args": [
                        {
                            "name": "form",
                            "type": "FormGroup"
                        },
                        {
                            "name": "mapObj",
                            "type": "Record<string | any>"
                        },
                        {
                            "name": "inputType",
                            "type": "string",
                            "defaultValue": "'input'"
                        }
                    ],
                    "optional": false,
                    "returnType": "FlatForm",
                    "typeParameters": [],
                    "line": 23,
                    "jsdoctags": [
                        {
                            "name": "form",
                            "type": "FormGroup",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "mapObj",
                            "type": "Record<string | any>",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "inputType",
                            "type": "string",
                            "defaultValue": "'input'",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { AfterViewInit, Component, Input, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { KycService } from '@shared/services/kyc/kyc.service';\nimport { KycBaseComponent } from '@views/kyc-base/kyc-base.component';\nimport { FormGroup, AbstractControl } from '@angular/forms';\nimport { Store } from '@ngxs/store';\nimport { IVerifyAuthenticationResponseSuccess } from '@shared/interfaces/verify-authentication-response.interface';\nimport {\n  TUEnrollResponseInput,\n  UpdateAppDataInput,\n} from '@shared/services/aws/api.service';\nimport { returnNestedObject } from '@shared/utils/utils';\nimport {\n  ITransunionKBAChallengeAnswer,\n  ITransunionKBAQuestion,\n  ITransunionKBAQuestions,\n} from '@shared/interfaces/tu-kba-questions.interface';\nimport { IVerifyAuthenticationAnswer } from '@shared/interfaces/verify-authentication-answers.interface';\nimport { AppDataStateModel } from '@store/app-data';\nimport {\n  IEnrollResult,\n  IEnrollServiceProductResponse,\n} from '@shared/interfaces/enroll.interface';\n\nexport type KycIdverificationState = 'init' | 'sent' | 'error';\n\n@Component({\n  selector: 'brave-kyc-idverification',\n  templateUrl: './kyc-idverification.component.html',\n})\nexport class KycIdverificationComponent extends KycBaseComponent {\n  @Input() viewState: KycIdverificationState = 'init';\n  stepID = 3;\n  private state: UpdateAppDataInput | undefined;\n  private code: string | undefined;\n  private authXML: string | undefined;\n  private authQuestions: ITransunionKBAChallengeAnswer | undefined;\n  private passcodeQuestion: ITransunionKBAQuestion | undefined;\n  private passcodeAnswer: IVerifyAuthenticationAnswer | undefined;\n  private authChallenge: ITransunionKBAQuestions | undefined;\n  private verifyResponse: string | undefined;\n  private authResponse: IVerifyAuthenticationResponseSuccess | undefined;\n  private authSuccessful: boolean = false;\n  private enrollResult: IEnrollResult | undefined;\n\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n    private store: Store,\n    private kycService: KycService\n  ) {\n    super();\n  }\n\n  resendCode(): void {\n    // TODO resubmit code to backend\n    this.viewState = 'sent';\n  }\n\n  goBack(): void {\n    this.kycService.inactivateStep(this.stepID);\n    this.router.navigate(['../verify'], { relativeTo: this.route });\n  }\n\n  async goToNext(form: FormGroup): Promise<void> {\n    if (form.valid) {\n      const { code } = this.formatAttributes(form, codeMap);\n      this.code = code;\n      const { appData } = this.store.snapshot();\n      this.state = appData;\n\n      try {\n        // authQuestions > authChallenge > passcodeQuestion\n        this.getAuthDetails(this.state)\n          .parseAuthDetails(this.authXML)\n          .createChallengeConfig(this.authQuestions)\n          .getPasscodeQuestion(this.authChallenge);\n\n        if (!this.passcodeQuestion) throw 'No passcode question found';\n\n        // passcodeAnswer > verifyResponse > authResponse\n        this.getPasscodeAnswer(this.passcodeQuestion, this.code);\n        (await this.sendVerifyAuthQuestions(this.state, this.passcodeAnswer))\n          .parseVerifyResponse(this.verifyResponse)\n          .isVerificationSuccesful(this.authResponse);\n\n        if (!this.authSuccessful) throw 'Authentication request failed';\n\n        // fetching reports\n        await this.sendEnrollRequest(this.state);\n\n        if (!this.enrollResult) throw 'Enroll request failed';\n        // need to add to state and then update the db\n        const enriched = this.enrichEnrollmentData(\n          this.state,\n          this.enrollResult\n        );\n\n        if (!enriched) throw 'Enrichment failed';\n\n        await this.kycService.updateAgenciesAsync(enriched.agencies);\n        this.kycService.completeStep(this.stepID);\n        this.router.navigate(['../congratulations'], {\n          relativeTo: this.route,\n        });\n      } catch (err) {\n        console.log('error ===> ', err);\n        this.router.navigate(['../error'], { relativeTo: this.route });\n      }\n    }\n  }\n\n  handleError(errors: { [key: string]: AbstractControl }): void {\n    console.log('form errors', errors);\n  }\n\n  /**\n   * Updates the authXML prop with the authentication questions back from TU\n   * @param {UpdateAppDataInput | AppDataStateModel | undefined} state\n   * @returns\n   */\n  getAuthDetails(\n    state: UpdateAppDataInput | AppDataStateModel | undefined\n  ): KycIdverificationComponent {\n    if (!state) return this;\n    this.authXML = returnNestedObject(state, 'currentRawQuestions');\n    return this;\n  }\n\n  /**\n   * Update the authQuestions prop with the parsed authXML prop\n   * @param {string | undefined} xml\n   * @returns\n   */\n  parseAuthDetails(xml: string | undefined): KycIdverificationComponent {\n    if (!xml) return this;\n    this.authQuestions = this.kycService.parseCurrentRawAuthDetails(xml);\n    return this;\n  }\n\n  createChallengeConfig(\n    questions: ITransunionKBAChallengeAnswer | undefined\n  ): KycIdverificationComponent {\n    if (!questions) return this;\n    const config = returnNestedObject(questions, 'ChallengeConfiguration');\n    this.authChallenge = {\n      ChallengeConfigurationType: {\n        ...config,\n      },\n    };\n    return this;\n  }\n  /**\n   * Updates the otpQuestion prop with the OTP question provided by TU\n   *   - Searches the questions returned for specific OTP text\n   * @param {ITransunionKBAQuestions | undefined} questions\n   * @returns\n   */\n  getPasscodeQuestion(\n    questions: ITransunionKBAQuestions | undefined\n  ): KycIdverificationComponent {\n    if (!questions) return this;\n    this.passcodeQuestion = this.kycService.getPassCodeQuestion(questions);\n    return this;\n  }\n\n  /**\n   * Updates the otpAnswer prop with the OTP answer provided by TU\n   *   - Searches the answers returned for the specific OTP text (send text message)\n   * @param {ITransunionKBAQuestion | undefined} otpQuestion\n   * @returns\n   */\n  getPasscodeAnswer(\n    passcodeQuestion: ITransunionKBAQuestion | undefined,\n    code: string\n  ): KycIdverificationComponent {\n    if (!passcodeQuestion) return this;\n    this.passcodeAnswer = this.kycService.getPassCodeAnswer(\n      passcodeQuestion,\n      code\n    );\n    return this;\n  }\n\n  /**\n   * Update the authResponse prop with the parsed verifyResp prop\n   * @param {string | undefined} verifyResp\n   * @returns\n   */\n  parseVerifyResponse(\n    verifyResp: string | undefined\n  ): KycIdverificationComponent {\n    this.authResponse = verifyResp\n      ? JSON.parse(verifyResp)\n      : ({} as IVerifyAuthenticationResponseSuccess);\n    return this;\n  }\n\n  /**\n   * Updates the verifyResponse prop with the VerifyAuthenticationQuestions response from TU\n   *   - This is the response to our answer to send OTP (send text message)\n   *   - This response will contain an question (enter the passcode) embeded in CDATA\n   * @param {UpdateAppDataInput | AppDataStateModel | undefined} state\n   * @param {IVerifyAuthenticationAnswer | undefined} otpAnswer\n   * @returns\n   */\n  async sendVerifyAuthQuestions(\n    state: UpdateAppDataInput | AppDataStateModel | undefined,\n    passcodeAnswer: IVerifyAuthenticationAnswer | undefined\n  ): Promise<KycIdverificationComponent> {\n    if (!passcodeAnswer || !state) return this;\n    this.verifyResponse = await this.kycService.sendVerifyAuthenticationQuestions(\n      state,\n      [passcodeAnswer]\n    );\n    return this;\n  }\n\n  /**\n   * Update the prop to indicate that verification was successful\n   * @param {IVerifyAuthenticationResponseSuccess | undefined} resp\n   * @returns\n   */\n  isVerificationSuccesful(\n    resp: IVerifyAuthenticationResponseSuccess | undefined\n  ): KycIdverificationComponent {\n    if (!resp) return this;\n    this.authSuccessful =\n      returnNestedObject(resp, 'a:ResponseType')?.toLowerCase() === 'success';\n    return this;\n  }\n\n  /**\n   * Once the user is verified send the enroll request to return the users credit reports\n   * @param {UpdateAppDataInput | AppDataStateModel | undefined} state\n   * @returns\n   */\n  async sendEnrollRequest(\n    state: UpdateAppDataInput | AppDataStateModel | undefined\n  ): Promise<KycIdverificationComponent> {\n    if (!state) return this;\n    const resp = await this.kycService.sendEnrollRequest(state);\n    const parsed = resp ? JSON.parse(resp) : undefined;\n    const enrollResult = returnNestedObject(\n      JSON.parse(parsed.Enroll),\n      'EnrollResult'\n    );\n    this.enrollResult = enrollResult ? enrollResult : undefined;\n    return this;\n  }\n\n  /**\n   * This method parses and enriches the state data\n   * @param {AppDataStateModel | UpdateAppDataInput} state\n   * @param {IEnrollResponse} enroll\n   * @returns\n   */\n  enrichEnrollmentData(\n    state: UpdateAppDataInput | undefined,\n    enroll: IEnrollResult\n  ): AppDataStateModel | UpdateAppDataInput | undefined {\n    if (!state) return;\n    let enrollReport;\n    let enrollMergeReport;\n    let enrollVantageScore;\n    console.log('enroll in enrich', enroll, state);\n    const enrollmentKey = returnNestedObject(enroll, 'EnrollmentKey');\n    const prodResponse = returnNestedObject(enroll, 'ServiceProductResponse');\n    if (!prodResponse) return;\n    if (prodResponse instanceof Array) {\n      enrollReport = prodResponse.find(\n        (item: IEnrollServiceProductResponse) => {\n          return item['ServiceProduct'] === 'TUCReport';\n        }\n      );\n      enrollMergeReport = prodResponse.find(\n        (item: IEnrollServiceProductResponse) => {\n          return item['ServiceProduct'] === 'MergeCreditReports';\n        }\n      );\n      enrollVantageScore = prodResponse.find(\n        (item: IEnrollServiceProductResponse) => {\n          return item['ServiceProduct'] === 'TUCVantageScore3';\n        }\n      );\n    } else {\n      switch (prodResponse['ServiceProduct']) {\n        case 'TUCReport':\n          enrollReport = prodResponse || null;\n          break;\n        case 'MergeCreditReports':\n          enrollMergeReport = prodResponse || null;\n          break;\n        case 'TUCVantageScore3':\n          enrollVantageScore = prodResponse || null;\n          break;\n        default:\n          break;\n      }\n    }\n    return {\n      ...state,\n      agencies: {\n        ...state.agencies,\n        transunion: {\n          ...state.agencies?.transunion,\n          enrollmentKey: enrollmentKey,\n          enrollReport: mapEnrollResponse(enrollReport),\n          enrollMergeReport: mapEnrollResponse(enrollMergeReport),\n          enrollVantageScore: mapEnrollResponse(enrollVantageScore),\n        },\n      },\n    };\n  }\n}\n\nconst codeMap: Record<string, any> = {\n  code: true,\n};\n\n// TODO use a pascal to camel converter\nconst mapEnrollResponse = (res: any): TUEnrollResponseInput => {\n  return {\n    bureau: res['Bureau'],\n    errorResponse: res['ErrorResponse'],\n    serviceProduct: res['ServiceProduct'],\n    serviceProductFullfillmentKey: res['ServiceProductFulfillmentKey'],\n    serviceProductObject: JSON.stringify(res['ServiceProductObject']),\n    serviceProductTypeId: res['ServiceProductTypeId'],\n    serviceProductValue: res['ServiceProductValue'],\n    status: res['Status'],\n  } as TUEnrollResponseInput;\n};\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router"
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute"
                    },
                    {
                        "name": "store",
                        "type": "Store"
                    },
                    {
                        "name": "kycService",
                        "type": "KycService"
                    }
                ],
                "line": 44,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "store",
                        "type": "Store",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "kycService",
                        "type": "KycService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "KycBaseComponent",
            "templateData": "<div class=\"container mx-auto max-w-xs h-full\">\n  <brave-kyc-idverification-pure\n    [state]=\"viewState\"\n    (formSubmit)=\"goToNext($event)\"\n    (formError)=\"handleError($event)\"\n    (backClick)=\"goBack()\"\n    (resendClick)=\"resendCode()\"\n  ></brave-kyc-idverification-pure>\n</div>\n"
        },
        {
            "name": "KycIdverificationPureComponent",
            "id": "component-KycIdverificationPureComponent-a4c7f0a47342ffeef7be93c3e6062bc1",
            "file": "src/app/views/kyc-idverification/kyc-idverification-pure/kyc-idverification-pure.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-kyc-idverification-pure",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./kyc-idverification-pure.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "state",
                    "defaultValue": "'init'",
                    "line": 10,
                    "type": "KycIdverificationState"
                }
            ],
            "outputsClass": [
                {
                    "name": "resendClick",
                    "defaultValue": "new EventEmitter()",
                    "line": 11,
                    "type": "EventEmitter<void>"
                },
                {
                    "name": "backClick",
                    "defaultValue": "new EventEmitter()",
                    "line": 14,
                    "type": "EventEmitter<void>",
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                },
                {
                    "name": "formError",
                    "defaultValue": "new EventEmitter()",
                    "line": 17,
                    "type": "EventEmitter<literal type>",
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                },
                {
                    "name": "formSubmit",
                    "defaultValue": "new EventEmitter()",
                    "line": 15,
                    "type": "EventEmitter<FormGroup>",
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                },
                {
                    "name": "nextClick",
                    "defaultValue": "new EventEmitter()",
                    "line": 13,
                    "type": "EventEmitter<void>",
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "flattenAttributes",
                    "args": [
                        {
                            "name": "formValues",
                            "type": "any"
                        },
                        {
                            "name": "mapObj",
                            "type": "Record<string | any>"
                        },
                        {
                            "name": "inputType",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "FlatForm",
                    "typeParameters": [],
                    "line": 31,
                    "jsdoctags": [
                        {
                            "name": "formValues",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "mapObj",
                            "type": "Record<string | any>",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "inputType",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                },
                {
                    "name": "formatAttributes",
                    "args": [
                        {
                            "name": "form",
                            "type": "FormGroup"
                        },
                        {
                            "name": "mapObj",
                            "type": "Record<string | any>"
                        },
                        {
                            "name": "inputType",
                            "type": "string",
                            "defaultValue": "'input'"
                        }
                    ],
                    "optional": false,
                    "returnType": "FlatForm",
                    "typeParameters": [],
                    "line": 23,
                    "jsdoctags": [
                        {
                            "name": "form",
                            "type": "FormGroup",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "mapObj",
                            "type": "Record<string | any>",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "inputType",
                            "type": "string",
                            "defaultValue": "'input'",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { KycBaseComponent } from '@views/kyc-base/kyc-base.component';\nimport { KycIdverificationState } from '@views/kyc-idverification/kyc-idverification/kyc-idverification.component';\n\n@Component({\n  selector: 'brave-kyc-idverification-pure',\n  templateUrl: './kyc-idverification-pure.component.html',\n})\nexport class KycIdverificationPureComponent extends KycBaseComponent {\n  @Input() state: KycIdverificationState = 'init';\n  @Output() resendClick: EventEmitter<void> = new EventEmitter();\n  constructor() {\n    super();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 11
            },
            "extends": "KycBaseComponent",
            "templateData": "<div class=\"flex content-center items-center justify-center h-full\">\n  <div class=\"w-full max-w-xs\">\n    <div class=\"relative flex flex-col min-w-0 w-full mb-6 border-0\">\n      <!-- header -->\n      <div class=\"py-3\">\n        <h4 class=\"brave-h4 text-indigo-800\">ID Verification</h4>\n      </div>\n\n      <!-- subheader -->\n      <div *ngIf=\"state === 'init'\" class=\"py-3\">\n        <div class=\"text-base\">\n          <p class=\"mb-6 text-blueGray-600\">\n            Please enter the 5-digit code you just received to the phone number\n            you provided in the box below.\n          </p>\n        </div>\n      </div>\n\n      <!-- subheader -->\n      <div *ngIf=\"state === 'sent'\" class=\"py-3\">\n        <div class=\"text-base\">\n          <p class=\"mb-6 text-blueGray-600\">\n            We have texted you a new code. Please enter the new code in the box\n            below.\n          </p>\n        </div>\n      </div>\n\n      <!-- subheader -->\n      <div *ngIf=\"state === 'error'\" class=\"py-3\">\n        <div class=\"text-base\">\n          <p class=\"mb-6 text-blueGray-600\">\n            The code you entered was incorrect, please try again.\n          </p>\n        </div>\n      </div>\n\n      <!-- subheader -->\n      <div class=\"py-3\">\n        <div class=\"text-sm\">\n          <p class=\"mb-6 text-blueGray-600\">Code will expire in 15 minutes.</p>\n        </div>\n      </div>\n\n      <!-- form -->\n      <div class=\"py-3 pt-0\">\n        <brave-outline-verificationcode-form\n          #form\n          (onSubmit)=\"formSubmit.emit($event)\"\n          (onSubmitError)=\"formError.emit($event)\"\n        ></brave-outline-verificationcode-form>\n      </div>\n\n      <div class=\"py-3 pt-0\">\n        <div class=\"-ml-3\">\n          <brave-links-onlytext-button\n            (click)=\"resendClick.emit()\"\n            [config]=\"{ buttonSize: 'sm', color: 'text-blueGray-600' }\"\n            ><span class=\"underline\"\n              >Resend code</span\n            ></brave-links-onlytext-button\n          >\n        </div>\n      </div>\n\n      <div class=\"mt-5\">\n        <div class=\"flex justify-between items-center\">\n          <brave-links-onlytext-button\n            (click)=\"backClick.emit()\"\n            [config]=\"{ buttonSize: 'sm', color: 'text-blueGray-600' }\"\n          >\n            <span class=\"flex items-center\">\n              <span class=\"material-icons px-1\">arrow_back</span>&nbsp;Back\n            </span>\n          </brave-links-onlytext-button>\n          <brave-filled-onlytext-button (click)=\"form.submitForm()\"\n            ><span class=\"flex items-center\"\n              >Continue<span class=\"material-icons px-1\"\n                >arrow_forward</span\n              ></span\n            ></brave-filled-onlytext-button\n          >\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n"
        },
        {
            "name": "KycKbaquestionsComponent",
            "id": "component-KycKbaquestionsComponent-6edeec40c12bda04c4092395f690ea0e",
            "file": "src/app/views/kyc-kbaquestions/kyc-kbaquestions/kyc-kbaquestions.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-kyc-kbaquestions",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./kyc-kbaquestions.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "agencies$",
                    "type": "Observable<AgenciesStateModel>",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "decorators": [
                        {
                            "name": "Select",
                            "stringifiedArguments": "AgenciesState"
                        }
                    ]
                },
                {
                    "name": "agenciesSub$",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "answeredQuestions",
                    "defaultValue": "[]",
                    "type": "(ITransunionKBAQuestion | ITransunionKBAAnswer | undefined)[]",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "kba",
                    "type": "KycKbaquestionsPureComponent | undefined",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "KycKbaquestionsPureComponent"
                        }
                    ]
                },
                {
                    "name": "numberOfQuestions",
                    "defaultValue": "0",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "questions",
                    "defaultValue": "[]",
                    "type": "(ITransunionKBAQuestion | ITransunionKBAAnswer | undefined)[]",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "stepID",
                    "defaultValue": "3",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 34
                }
            ],
            "methodsClass": [
                {
                    "name": "goBack",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 70,
                    "description": "<p>Moves the carousel back one to the previous question</p>\n<ul>\n<li>if no more previous questions, routes back to identity</li>\n</ul>\n"
                },
                {
                    "name": "goToNext",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 91,
                    "description": "<p>Moves the carousel over one to the next question</p>\n<ul>\n<li>if no more next questions, submits the form</li>\n</ul>\n"
                },
                {
                    "name": "handleError",
                    "args": [
                        {
                            "name": "errors",
                            "type": "literal type"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 161,
                    "jsdoctags": [
                        {
                            "name": "errors",
                            "type": "literal type",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleSubmit",
                    "args": [
                        {
                            "name": "form",
                            "type": "FormGroup"
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 109,
                    "description": "<p>This method takes the KBA answers, formats them to the Transunion request format (IVerifyAuthenticationAnswer)\n   and submits them to Transunion for verification.\n   Upon success, will be routed to congratulations screen</p>\n",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 3913,
                                "end": 3917,
                                "flags": 0,
                                "escapedText": "form"
                            },
                            "type": "FormGroup",
                            "tagName": {
                                "pos": 3907,
                                "end": 3912,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": "<p>the KBA answer form</p>\n"
                        }
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 62
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 58
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { KycService } from '@shared/services/kyc/kyc.service';\nimport { AbstractControl, FormGroup } from '@angular/forms';\nimport { Select, Store } from '@ngxs/store';\nimport { AgenciesState, AgenciesStateModel } from '@store/agencies';\nimport { Observable, Subscription } from 'rxjs';\nimport {\n  ITransunionKBAQuestion,\n  ITransunionKBAAnswer,\n  ITransunionKBAQuestions,\n} from '@shared/interfaces/tu-kba-questions.interface';\nimport { take } from 'rxjs/operators';\nimport { KycKbaquestionsPureComponent } from '@views/kyc-kbaquestions/kyc-kbaquestions-pure/kyc-kbaquestions-pure.component';\nimport { IVerifyAuthenticationAnswer } from '@shared/interfaces/verify-authentication-answers.interface';\nimport { IVerifyAuthenticationResponseSuccess } from '@shared/interfaces/verify-authentication-response.interface';\n\n@Component({\n  selector: 'brave-kyc-kbaquestions',\n  templateUrl: './kyc-kbaquestions.component.html',\n})\nexport class KycKbaquestionsComponent implements OnInit {\n  @ViewChild(KycKbaquestionsPureComponent) kba:\n    | KycKbaquestionsPureComponent\n    | undefined;\n\n  questions: (ITransunionKBAQuestion | ITransunionKBAAnswer | undefined)[] = []; // TODO replace with KBA question interface\n  answeredQuestions: (\n    | ITransunionKBAQuestion\n    | ITransunionKBAAnswer\n    | undefined\n  )[] = [];\n  numberOfQuestions: number = 0;\n  stepID = 3;\n\n  @Select(AgenciesState) agencies$!: Observable<AgenciesStateModel>;\n  agenciesSub$: Subscription;\n\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n    private kycService: KycService,\n    private store: Store\n  ) {\n    this.agenciesSub$ = this.agencies$\n      .pipe(take(1))\n      .subscribe((agencies: AgenciesStateModel) => {\n        if (!agencies.transunion?.currentRawQuestions) return;\n        const xml: ITransunionKBAQuestions = this.kycService.parseCurrentRawQuestions(\n          agencies.transunion?.currentRawQuestions\n        );\n        const questions = xml.ChallengeConfigurationType.MultiChoiceQuestion;\n        questions instanceof Array ? (this.questions = questions) : [questions];\n        this.numberOfQuestions = this.questions.length;\n      });\n  }\n\n  ngOnInit(): void {\n    this.kycService.activateStep(this.stepID);\n  }\n\n  ngOnDestroy(): void {\n    if (this.agenciesSub$) this.agenciesSub$.unsubscribe();\n  }\n\n  /**\n   * Moves the carousel back one to the previous question\n   *  - if no more previous questions, routes back to identity\n   */\n  goBack(): void {\n    if (this.answeredQuestions.length) {\n      const question = this.answeredQuestions.pop();\n      this.answeredQuestions = [...this.answeredQuestions];\n      this.questions = [question, ...this.questions];\n      const scroll = parseFloat(\n        ((1 / this.numberOfQuestions) * 100).toFixed(2)\n      );\n      const max = scroll - 100;\n      this.kba?.kba?.scroll(scroll, 0, max);\n    } else {\n      this.kycService.inactivateStep(this.stepID);\n      this.router.navigate(['../identity'], { relativeTo: this.route });\n      return;\n    }\n  }\n\n  /**\n   * Moves the carousel over one to the next question\n   *  - if no more next questions, submits the form\n   */\n  goToNext(): void {\n    this.answeredQuestions = [...this.answeredQuestions, this.questions[0]];\n    this.questions = [...this.questions.slice(1)];\n    const scroll = parseFloat(((-1 / this.numberOfQuestions) * 100).toFixed(2));\n    const max = scroll * -1 - 100;\n    if (this.questions.length) {\n      this.kba?.kba?.scroll(scroll, 0, max);\n    } else {\n      this.kba?.kba?.submitForm();\n    }\n  }\n\n  /**\n   * This method takes the KBA answers, formats them to the Transunion request format (IVerifyAuthenticationAnswer)\n   *   and submits them to Transunion for verification.\n   *   Upon success, will be routed to congratulations screen\n   * @param form the KBA answer form\n   */\n  async handleSubmit(form: FormGroup) {\n    const formValues = this.kba?.kba?.parentForm.value;\n    if (Object.keys(formValues).length)\n      this.router.navigate(['../error'], { relativeTo: this.route });\n\n    const answers: IVerifyAuthenticationAnswer[] = Object.keys(formValues)\n      .filter((key) => {\n        return (\n          formValues[key]?.input?.answer && formValues[key]?.input?.question\n        );\n      })\n      .map((key) => {\n        let answer: ITransunionKBAAnswer = formValues[key]?.input?.answer;\n        let question: ITransunionKBAQuestion = formValues[key]?.input?.question;\n        return {\n          VerifyChallengeAnswersRequestMultiChoiceQuestion: {\n            QuestionId: question?.QuestionId,\n            SelectedAnswerChoice: {\n              AnswerChoiceId: answer?.AnswerChoiceId,\n            },\n          },\n        };\n      });\n    const { appData: state } = this.store.snapshot();\n    try {\n      const authenticated = await this.kycService.sendVerifyAuthenticationQuestions(\n        state,\n        answers\n      );\n      const clean = authenticated\n        ? JSON.parse(authenticated)\n        : ({} as IVerifyAuthenticationResponseSuccess);\n      const body =\n        clean['VerifyAuthenticationQuestions']['s:Envelope']['s:Body'];\n      const success =\n        body['VerifyAuthenticationQuestionsResponse'][\n          'VerifyAuthenticationQuestionsResult'\n        ]['a:ResponseType'].toLowerCase() === 'success';\n      if (success) {\n        this.kycService.completeStep(this.stepID);\n        this.router.navigate(['../congratulations'], {\n          relativeTo: this.route,\n        });\n      } else {\n        this.router.navigate(['../error'], { relativeTo: this.route });\n      }\n    } catch (err) {\n      console.log('err ===> ', err);\n      this.router.navigate(['../error'], { relativeTo: this.route });\n    }\n  }\n\n  handleError(errors: { [key: string]: AbstractControl }): void {\n    console.log('form errors', errors);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router"
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute"
                    },
                    {
                        "name": "kycService",
                        "type": "KycService"
                    },
                    {
                        "name": "store",
                        "type": "Store"
                    }
                ],
                "line": 37,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "kycService",
                        "type": "KycService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "store",
                        "type": "Store",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"container mx-auto max-w-xs h-full\">\n  <div *ngIf=\"agencies$ | async as agencies\">\n    <brave-kyc-kbaquestions-pure\n      (formSubmit)=\"handleSubmit($event)\"\n      (formError)=\"handleError($event)\"\n      (nextClick)=\"goToNext()\"\n      (backClick)=\"goBack()\"\n      [kbas]=\"agencies.transunion?.currentRawQuestions | kycKbaquestions\"\n    ></brave-kyc-kbaquestions-pure>\n  </div>\n</div>\n"
        },
        {
            "name": "KycKbaquestionsPureComponent",
            "id": "component-KycKbaquestionsPureComponent-6b940686dbf8ee786eb4d9aeff4e85b2",
            "file": "src/app/views/kyc-kbaquestions/kyc-kbaquestions-pure/kyc-kbaquestions-pure.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-kyc-kbaquestions-pure",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./kyc-kbaquestions-pure.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "kbas",
                    "defaultValue": "[]",
                    "line": 20,
                    "type": "ITransunionKBAQuestion[]"
                }
            ],
            "outputsClass": [
                {
                    "name": "onClickAnswer",
                    "defaultValue": "new EventEmitter()",
                    "line": 22,
                    "type": "EventEmitter<ITransunionKBAQuestion>"
                },
                {
                    "name": "backClick",
                    "defaultValue": "new EventEmitter()",
                    "line": 14,
                    "type": "EventEmitter<void>",
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                },
                {
                    "name": "formError",
                    "defaultValue": "new EventEmitter()",
                    "line": 17,
                    "type": "EventEmitter<literal type>",
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                },
                {
                    "name": "formSubmit",
                    "defaultValue": "new EventEmitter()",
                    "line": 15,
                    "type": "EventEmitter<FormGroup>",
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                },
                {
                    "name": "nextClick",
                    "defaultValue": "new EventEmitter()",
                    "line": 13,
                    "type": "EventEmitter<void>",
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "kba",
                    "type": "KbaquestionsFormComponent | undefined",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "KbaquestionsFormComponent"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "flattenAttributes",
                    "args": [
                        {
                            "name": "formValues",
                            "type": "any"
                        },
                        {
                            "name": "mapObj",
                            "type": "Record<string | any>"
                        },
                        {
                            "name": "inputType",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "FlatForm",
                    "typeParameters": [],
                    "line": 31,
                    "jsdoctags": [
                        {
                            "name": "formValues",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "mapObj",
                            "type": "Record<string | any>",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "inputType",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                },
                {
                    "name": "formatAttributes",
                    "args": [
                        {
                            "name": "form",
                            "type": "FormGroup"
                        },
                        {
                            "name": "mapObj",
                            "type": "Record<string | any>"
                        },
                        {
                            "name": "inputType",
                            "type": "string",
                            "defaultValue": "'input'"
                        }
                    ],
                    "optional": false,
                    "returnType": "FlatForm",
                    "typeParameters": [],
                    "line": 23,
                    "jsdoctags": [
                        {
                            "name": "form",
                            "type": "FormGroup",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "mapObj",
                            "type": "Record<string | any>",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "inputType",
                            "type": "string",
                            "defaultValue": "'input'",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n  ViewChild,\n} from '@angular/core';\nimport { KbaquestionsFormComponent } from '@shared/components/forms/kbaquestions-form/kbaquestions-form.component';\nimport { ITransunionKBAQuestion } from '@shared/interfaces/tu-kba-questions.interface';\nimport { KycBaseComponent } from '@views/kyc-base/kyc-base.component';\n\n@Component({\n  selector: 'brave-kyc-kbaquestions-pure',\n  templateUrl: './kyc-kbaquestions-pure.component.html',\n})\nexport class KycKbaquestionsPureComponent extends KycBaseComponent {\n  @ViewChild(KbaquestionsFormComponent) kba:\n    | KbaquestionsFormComponent\n    | undefined;\n  @Input() kbas: ITransunionKBAQuestion[] = [];\n  @Output()\n  onClickAnswer: EventEmitter<ITransunionKBAQuestion> = new EventEmitter();\n\n  constructor() {\n    super();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 22
            },
            "extends": "KycBaseComponent",
            "templateData": "<div class=\"flex content-center items-center justify-center h-full\">\n  <div class=\"w-full max-w-xs\">\n    <div class=\"relative flex flex-col min-w-0 w-full mb-6 border-0\">\n      <!-- header -->\n      <div class=\"py-3\">\n        <h4 class=\"brave-h4 text-indigo-800\">Verify Your Identity</h4>\n      </div>\n\n      <!-- subheader -->\n      <div class=\"py-3\">\n        <div class=\"text-base\">\n          <p class=\"mb-6 text-blueGray-600\">\n            These questions are from the credit bureaus to verify your identiy.\n            Please answer them to the best of your knowledge\n          </p>\n        </div>\n      </div>\n\n      <!-- form -->\n      <div class=\"py-3 pt-0 h-1/3\">\n        <div class=\"flex justify-center items-center\">\n          <brave-kbaquestions-form\n            #form\n            (clickAnswer)=\"onClickAnswer.emit($event)\"\n            (onSubmit)=\"formSubmit.emit($event)\"\n            (onSubmitError)=\"formError.emit($event)\"\n            [kbas]=\"kbas\"\n          ></brave-kbaquestions-form>\n        </div>\n      </div>\n\n      <div class=\"mt-5\">\n        <div class=\"flex justify-between items-center\">\n          <brave-links-onlytext-button\n            (click)=\"backClick.emit()\"\n            [config]=\"{ buttonSize: 'sm', color: 'text-blueGray-600' }\"\n          >\n            <span class=\"flex items-center\">\n              <span class=\"material-icons px-1\">arrow_back</span>&nbsp;Back\n            </span>\n          </brave-links-onlytext-button>\n          <brave-filled-onlytext-button (click)=\"nextClick.emit()\"\n            ><span class=\"flex items-center\"\n              >Next<span class=\"material-icons px-1\">arrow_forward</span></span\n            ></brave-filled-onlytext-button\n          >\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n"
        },
        {
            "name": "KycPhonenumberComponent",
            "id": "component-KycPhonenumberComponent-ddb7ea871c05be15e4d4e9a443fd73fa",
            "file": "src/app/views/kyc-phonenumber/kyc-phonenumber/kyc-phonenumber.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-kyc-phonenumber",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./kyc-phonenumber.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "backClick",
                    "defaultValue": "new EventEmitter()",
                    "line": 14,
                    "type": "EventEmitter<void>",
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                },
                {
                    "name": "formError",
                    "defaultValue": "new EventEmitter()",
                    "line": 17,
                    "type": "EventEmitter<literal type>",
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                },
                {
                    "name": "formSubmit",
                    "defaultValue": "new EventEmitter()",
                    "line": 15,
                    "type": "EventEmitter<FormGroup>",
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                },
                {
                    "name": "nextClick",
                    "defaultValue": "new EventEmitter()",
                    "line": 13,
                    "type": "EventEmitter<void>",
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "authQuestions",
                    "type": "ITransunionKBAQuestions | undefined",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "authResponse",
                    "type": "IVerifyAuthenticationResponseSuccess | undefined",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "authSuccessful",
                    "defaultValue": "false",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "authXML",
                    "type": "string | undefined",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "codeQuestion",
                    "type": "string | undefined",
                    "optional": false,
                    "description": "",
                    "line": 34,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "otpAnswer",
                    "type": "IVerifyAuthenticationAnswer | undefined",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "otpQuestion",
                    "type": "ITransunionKBAQuestion | undefined",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "state",
                    "type": "UpdateAppDataInput | undefined",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "stepID",
                    "defaultValue": "3",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "verifyResponse",
                    "type": "string | undefined",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "modifierKind": [
                        112
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "getAuthQuestions",
                    "args": [
                        {
                            "name": "data",
                            "type": "UpdateAppDataInput | undefined"
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<KycPhonenumberComponent>",
                    "typeParameters": [],
                    "line": 129,
                    "description": "<p>Updates the authXML prop with the authentication questions back from TU</p>\n",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 4360,
                                "end": 4364,
                                "flags": 0,
                                "escapedText": "data"
                            },
                            "type": "UpdateAppDataInput | undefined",
                            "tagName": {
                                "pos": 4321,
                                "end": 4326,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": "",
                            "typeExpression": {
                                "pos": 4327,
                                "end": 4359,
                                "flags": 0,
                                "kind": 277,
                                "type": {
                                    "pos": 4328,
                                    "end": 4358,
                                    "flags": 2097152,
                                    "kind": 168,
                                    "types": [
                                        {
                                            "pos": 4328,
                                            "end": 4346,
                                            "flags": 2097152,
                                            "kind": 161,
                                            "typeName": {
                                                "pos": 4328,
                                                "end": 4346,
                                                "flags": 2097152,
                                                "escapedText": "UpdateAppDataInput"
                                            }
                                        },
                                        {
                                            "pos": 4348,
                                            "end": 4358,
                                            "flags": 2097152,
                                            "kind": 140
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "tagName": {
                                "pos": 4371,
                                "end": 4378,
                                "flags": 0,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ]
                },
                {
                    "name": "getCodeQuestion",
                    "args": [
                        {
                            "name": "authResponse",
                            "type": "IVerifyAuthenticationResponseSuccess | undefined"
                        }
                    ],
                    "optional": false,
                    "returnType": "KycPhonenumberComponent",
                    "typeParameters": [],
                    "line": 216,
                    "description": "<p>Update the codeQuestion prop with the nested object from the parsed authRespone</p>\n<ul>\n<li>This is the enter pass code question</li>\n</ul>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 7220,
                                "end": 7232,
                                "flags": 0,
                                "escapedText": "authResponse"
                            },
                            "type": "IVerifyAuthenticationResponseSuccess | undefined",
                            "tagName": {
                                "pos": 7163,
                                "end": 7168,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": "",
                            "typeExpression": {
                                "pos": 7169,
                                "end": 7219,
                                "flags": 0,
                                "kind": 277,
                                "type": {
                                    "pos": 7170,
                                    "end": 7218,
                                    "flags": 2097152,
                                    "kind": 168,
                                    "types": [
                                        {
                                            "pos": 7170,
                                            "end": 7206,
                                            "flags": 2097152,
                                            "kind": 161,
                                            "typeName": {
                                                "pos": 7170,
                                                "end": 7206,
                                                "flags": 2097152,
                                                "escapedText": "IVerifyAuthenticationResponseSuccess"
                                            }
                                        },
                                        {
                                            "pos": 7208,
                                            "end": 7218,
                                            "flags": 2097152,
                                            "kind": 140
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "tagName": {
                                "pos": 7239,
                                "end": 7246,
                                "flags": 0,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ]
                },
                {
                    "name": "getOTPAnswer",
                    "args": [
                        {
                            "name": "otpQuestion",
                            "type": "ITransunionKBAQuestion | undefined"
                        }
                    ],
                    "optional": false,
                    "returnType": "KycPhonenumberComponent",
                    "typeParameters": [],
                    "line": 170,
                    "description": "<p>Updates the otpAnswer prop with the OTP answer provided by TU</p>\n<ul>\n<li>Searches the answers returned for the specific OTP text (send text message)</li>\n</ul>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 5608,
                                "end": 5619,
                                "flags": 0,
                                "escapedText": "otpQuestion"
                            },
                            "type": "ITransunionKBAQuestion | undefined",
                            "tagName": {
                                "pos": 5565,
                                "end": 5570,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": "",
                            "typeExpression": {
                                "pos": 5571,
                                "end": 5607,
                                "flags": 0,
                                "kind": 277,
                                "type": {
                                    "pos": 5572,
                                    "end": 5606,
                                    "flags": 2097152,
                                    "kind": 168,
                                    "types": [
                                        {
                                            "pos": 5572,
                                            "end": 5594,
                                            "flags": 2097152,
                                            "kind": 161,
                                            "typeName": {
                                                "pos": 5572,
                                                "end": 5594,
                                                "flags": 2097152,
                                                "escapedText": "ITransunionKBAQuestion"
                                            }
                                        },
                                        {
                                            "pos": 5596,
                                            "end": 5606,
                                            "flags": 2097152,
                                            "kind": 140
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "tagName": {
                                "pos": 5626,
                                "end": 5633,
                                "flags": 0,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ]
                },
                {
                    "name": "getOTPQuestion",
                    "args": [
                        {
                            "name": "questions",
                            "type": "ITransunionKBAQuestions | undefined"
                        }
                    ],
                    "optional": false,
                    "returnType": "KycPhonenumberComponent",
                    "typeParameters": [],
                    "line": 156,
                    "description": "<p>Updates the otpQuestion prop with the OTP question provided by TU</p>\n<ul>\n<li>Searches the questions returned for specific OTP text</li>\n</ul>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 5150,
                                "end": 5159,
                                "flags": 0,
                                "escapedText": "questions"
                            },
                            "type": "ITransunionKBAQuestions | undefined",
                            "tagName": {
                                "pos": 5106,
                                "end": 5111,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": "",
                            "typeExpression": {
                                "pos": 5112,
                                "end": 5149,
                                "flags": 0,
                                "kind": 277,
                                "type": {
                                    "pos": 5113,
                                    "end": 5148,
                                    "flags": 2097152,
                                    "kind": 168,
                                    "types": [
                                        {
                                            "pos": 5113,
                                            "end": 5136,
                                            "flags": 2097152,
                                            "kind": 161,
                                            "typeName": {
                                                "pos": 5113,
                                                "end": 5136,
                                                "flags": 2097152,
                                                "escapedText": "ITransunionKBAQuestions"
                                            }
                                        },
                                        {
                                            "pos": 5138,
                                            "end": 5148,
                                            "flags": 2097152,
                                            "kind": 140
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "tagName": {
                                "pos": 5166,
                                "end": 5173,
                                "flags": 0,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ]
                },
                {
                    "name": "goBack",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 51
                },
                {
                    "name": "goToNext",
                    "args": [
                        {
                            "name": "form",
                            "type": "FormGroup"
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<void>",
                    "typeParameters": [],
                    "line": 56,
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "form",
                            "type": "FormGroup",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleError",
                    "args": [
                        {
                            "name": "errors",
                            "type": "literal type"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 107,
                    "jsdoctags": [
                        {
                            "name": "errors",
                            "type": "literal type",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "isVerificationSuccesful",
                    "args": [
                        {
                            "name": "resp",
                            "type": "IVerifyAuthenticationResponseSuccess | undefined"
                        }
                    ],
                    "optional": false,
                    "returnType": "KycPhonenumberComponent",
                    "typeParameters": [],
                    "line": 258,
                    "description": "<p>Update the prop to indicate that verification was successful</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 8412,
                                "end": 8416,
                                "flags": 0,
                                "escapedText": "resp"
                            },
                            "type": "IVerifyAuthenticationResponseSuccess | undefined",
                            "tagName": {
                                "pos": 8355,
                                "end": 8360,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": "",
                            "typeExpression": {
                                "pos": 8361,
                                "end": 8411,
                                "flags": 0,
                                "kind": 277,
                                "type": {
                                    "pos": 8362,
                                    "end": 8410,
                                    "flags": 2097152,
                                    "kind": 168,
                                    "types": [
                                        {
                                            "pos": 8362,
                                            "end": 8398,
                                            "flags": 2097152,
                                            "kind": 161,
                                            "typeName": {
                                                "pos": 8362,
                                                "end": 8398,
                                                "flags": 2097152,
                                                "escapedText": "IVerifyAuthenticationResponseSuccess"
                                            }
                                        },
                                        {
                                            "pos": 8400,
                                            "end": 8410,
                                            "flags": 2097152,
                                            "kind": 140
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "tagName": {
                                "pos": 8423,
                                "end": 8430,
                                "flags": 0,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 47
                },
                {
                    "name": "parseAuthQuestions",
                    "args": [
                        {
                            "name": "xml",
                            "type": "string | undefined"
                        }
                    ],
                    "optional": false,
                    "returnType": "KycPhonenumberComponent",
                    "typeParameters": [],
                    "line": 144,
                    "description": "<p>Update the authQuestions prop with the parsed authXML prop</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 4742,
                                "end": 4745,
                                "flags": 0,
                                "escapedText": "xml"
                            },
                            "type": "string | undefined",
                            "tagName": {
                                "pos": 4715,
                                "end": 4720,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": "",
                            "typeExpression": {
                                "pos": 4721,
                                "end": 4741,
                                "flags": 0,
                                "kind": 277,
                                "type": {
                                    "pos": 4722,
                                    "end": 4740,
                                    "flags": 2097152,
                                    "kind": 168,
                                    "types": [
                                        {
                                            "pos": 4722,
                                            "end": 4728,
                                            "flags": 2097152,
                                            "kind": 137
                                        },
                                        {
                                            "pos": 4730,
                                            "end": 4740,
                                            "flags": 2097152,
                                            "kind": 140
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "tagName": {
                                "pos": 4752,
                                "end": 4759,
                                "flags": 0,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ]
                },
                {
                    "name": "parseVerifyResponse",
                    "args": [
                        {
                            "name": "verifyResp",
                            "type": "string | undefined"
                        }
                    ],
                    "optional": false,
                    "returnType": "KycPhonenumberComponent",
                    "typeParameters": [],
                    "line": 203,
                    "description": "<p>Update the authResponse prop with the parsed verifyResp prop</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 6766,
                                "end": 6776,
                                "flags": 0,
                                "escapedText": "verifyResp"
                            },
                            "type": "string | undefined",
                            "tagName": {
                                "pos": 6739,
                                "end": 6744,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": "",
                            "typeExpression": {
                                "pos": 6745,
                                "end": 6765,
                                "flags": 0,
                                "kind": 277,
                                "type": {
                                    "pos": 6746,
                                    "end": 6764,
                                    "flags": 2097152,
                                    "kind": 168,
                                    "types": [
                                        {
                                            "pos": 6746,
                                            "end": 6752,
                                            "flags": 2097152,
                                            "kind": 137
                                        },
                                        {
                                            "pos": 6754,
                                            "end": 6764,
                                            "flags": 2097152,
                                            "kind": 140
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "tagName": {
                                "pos": 6783,
                                "end": 6790,
                                "flags": 0,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ]
                },
                {
                    "name": "sendVerifyAuthQuestions",
                    "args": [
                        {
                            "name": "state",
                            "type": "UpdateAppDataInput | AppDataStateModel | undefined"
                        },
                        {
                            "name": "otpAnswer",
                            "type": "IVerifyAuthenticationAnswer | undefined"
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<KycPhonenumberComponent>",
                    "typeParameters": [],
                    "line": 186,
                    "description": "<p>Updates the verifyResponse prop with the VerifyAuthenticationQuestions response from TU</p>\n<ul>\n<li>This is the response to our answer to send OTP (send text message)</li>\n<li>This response will contain an question (enter the passcode) embeded in CDATA</li>\n</ul>\n",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 6194,
                                "end": 6199,
                                "flags": 0,
                                "escapedText": "state"
                            },
                            "type": "UpdateAppDataInput | AppDataStateModel | undefined",
                            "tagName": {
                                "pos": 6135,
                                "end": 6140,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": "",
                            "typeExpression": {
                                "pos": 6141,
                                "end": 6193,
                                "flags": 0,
                                "kind": 277,
                                "type": {
                                    "pos": 6142,
                                    "end": 6192,
                                    "flags": 2097152,
                                    "kind": 168,
                                    "types": [
                                        {
                                            "pos": 6142,
                                            "end": 6160,
                                            "flags": 2097152,
                                            "kind": 161,
                                            "typeName": {
                                                "pos": 6142,
                                                "end": 6160,
                                                "flags": 2097152,
                                                "escapedText": "UpdateAppDataInput"
                                            }
                                        },
                                        {
                                            "pos": 6162,
                                            "end": 6180,
                                            "flags": 2097152,
                                            "kind": 161,
                                            "typeName": {
                                                "pos": 6162,
                                                "end": 6180,
                                                "flags": 2097152,
                                                "escapedText": "AppDataStateModel"
                                            }
                                        },
                                        {
                                            "pos": 6182,
                                            "end": 6192,
                                            "flags": 2097152,
                                            "kind": 140
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "name": {
                                "pos": 6254,
                                "end": 6263,
                                "flags": 0,
                                "escapedText": "otpAnswer"
                            },
                            "type": "IVerifyAuthenticationAnswer | undefined",
                            "tagName": {
                                "pos": 6206,
                                "end": 6211,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": "",
                            "typeExpression": {
                                "pos": 6212,
                                "end": 6253,
                                "flags": 0,
                                "kind": 277,
                                "type": {
                                    "pos": 6213,
                                    "end": 6252,
                                    "flags": 2097152,
                                    "kind": 168,
                                    "types": [
                                        {
                                            "pos": 6213,
                                            "end": 6240,
                                            "flags": 2097152,
                                            "kind": 161,
                                            "typeName": {
                                                "pos": 6213,
                                                "end": 6240,
                                                "flags": 2097152,
                                                "escapedText": "IVerifyAuthenticationAnswer"
                                            }
                                        },
                                        {
                                            "pos": 6242,
                                            "end": 6252,
                                            "flags": 2097152,
                                            "kind": 140
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "tagName": {
                                "pos": 6270,
                                "end": 6277,
                                "flags": 0,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ]
                },
                {
                    "name": "updateStateWithCodeQuestions",
                    "args": [
                        {
                            "name": "question",
                            "type": "string | undefined"
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<KycPhonenumberComponent>",
                    "typeParameters": [],
                    "line": 245,
                    "description": "<p>Update the state (currentRawQuestions) with the enter pass code question</p>\n",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 8015,
                                "end": 8023,
                                "flags": 0,
                                "escapedText": "question"
                            },
                            "type": "string | undefined",
                            "tagName": {
                                "pos": 7988,
                                "end": 7993,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": "",
                            "typeExpression": {
                                "pos": 7994,
                                "end": 8014,
                                "flags": 0,
                                "kind": 277,
                                "type": {
                                    "pos": 7995,
                                    "end": 8013,
                                    "flags": 2097152,
                                    "kind": 168,
                                    "types": [
                                        {
                                            "pos": 7995,
                                            "end": 8001,
                                            "flags": 2097152,
                                            "kind": 137
                                        },
                                        {
                                            "pos": 8003,
                                            "end": 8013,
                                            "flags": 2097152,
                                            "kind": 140
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "tagName": {
                                "pos": 8030,
                                "end": 8037,
                                "flags": 0,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ]
                },
                {
                    "name": "updateStateWithKBAQuestions",
                    "args": [
                        {
                            "name": "question",
                            "type": "string | undefined"
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<KycPhonenumberComponent>",
                    "typeParameters": [],
                    "line": 232,
                    "description": "<p>Update the state (currentRawQuestions) with the KBA questions</p>\n",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 7637,
                                "end": 7645,
                                "flags": 0,
                                "escapedText": "question"
                            },
                            "type": "string | undefined",
                            "tagName": {
                                "pos": 7610,
                                "end": 7615,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": "",
                            "typeExpression": {
                                "pos": 7616,
                                "end": 7636,
                                "flags": 0,
                                "kind": 277,
                                "type": {
                                    "pos": 7617,
                                    "end": 7635,
                                    "flags": 2097152,
                                    "kind": 168,
                                    "types": [
                                        {
                                            "pos": 7617,
                                            "end": 7623,
                                            "flags": 2097152,
                                            "kind": 137
                                        },
                                        {
                                            "pos": 7625,
                                            "end": 7635,
                                            "flags": 2097152,
                                            "kind": 140
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "tagName": {
                                "pos": 7652,
                                "end": 7659,
                                "flags": 0,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ]
                },
                {
                    "name": "updateUserAttributes",
                    "args": [
                        {
                            "name": "attrs",
                            "type": "UserAttributesInput | undefined"
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<KycPhonenumberComponent>",
                    "typeParameters": [],
                    "line": 116,
                    "description": "<p>Update the state prop with the current user attributes.</p>\n",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 3969,
                                "end": 3974,
                                "flags": 0,
                                "escapedText": "attrs"
                            },
                            "type": "UserAttributesInput | undefined",
                            "tagName": {
                                "pos": 3929,
                                "end": 3934,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": "",
                            "typeExpression": {
                                "pos": 3935,
                                "end": 3968,
                                "flags": 0,
                                "kind": 277,
                                "type": {
                                    "pos": 3936,
                                    "end": 3967,
                                    "flags": 2097152,
                                    "kind": 168,
                                    "types": [
                                        {
                                            "pos": 3936,
                                            "end": 3955,
                                            "flags": 2097152,
                                            "kind": 161,
                                            "typeName": {
                                                "pos": 3936,
                                                "end": 3955,
                                                "flags": 2097152,
                                                "escapedText": "UserAttributesInput"
                                            }
                                        },
                                        {
                                            "pos": 3957,
                                            "end": 3967,
                                            "flags": 2097152,
                                            "kind": 140
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "tagName": {
                                "pos": 3981,
                                "end": 3988,
                                "flags": 0,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ]
                },
                {
                    "name": "flattenAttributes",
                    "args": [
                        {
                            "name": "formValues",
                            "type": "any"
                        },
                        {
                            "name": "mapObj",
                            "type": "Record<string | any>"
                        },
                        {
                            "name": "inputType",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "FlatForm",
                    "typeParameters": [],
                    "line": 31,
                    "jsdoctags": [
                        {
                            "name": "formValues",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "mapObj",
                            "type": "Record<string | any>",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "inputType",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                },
                {
                    "name": "formatAttributes",
                    "args": [
                        {
                            "name": "form",
                            "type": "FormGroup"
                        },
                        {
                            "name": "mapObj",
                            "type": "Record<string | any>"
                        },
                        {
                            "name": "inputType",
                            "type": "string",
                            "defaultValue": "'input'"
                        }
                    ],
                    "optional": false,
                    "returnType": "FlatForm",
                    "typeParameters": [],
                    "line": 23,
                    "jsdoctags": [
                        {
                            "name": "form",
                            "type": "FormGroup",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "mapObj",
                            "type": "Record<string | any>",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "inputType",
                            "type": "string",
                            "defaultValue": "'input'",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { KycService } from '@shared/services/kyc/kyc.service';\nimport { AbstractControl, FormGroup } from '@angular/forms';\nimport { KycBaseComponent } from '@views/kyc-base/kyc-base.component';\nimport {\n  UpdateAppDataInput,\n  UserAttributesInput,\n} from '@shared/services/aws/api.service';\nimport { IVerifyAuthenticationResponseSuccess } from '@shared/interfaces/verify-authentication-response.interface';\nimport { returnNestedObject } from '@shared/utils/utils';\nimport {\n  ITransunionKBAQuestion,\n  ITransunionKBAQuestions,\n} from '@shared/interfaces/tu-kba-questions.interface';\nimport { IVerifyAuthenticationAnswer } from '@shared/interfaces/verify-authentication-answers.interface';\nimport { AppDataStateModel } from '@store/app-data';\nimport { Store } from '@ngxs/store';\n\n@Component({\n  selector: 'brave-kyc-phonenumber',\n  templateUrl: './kyc-phonenumber.component.html',\n})\nexport class KycPhonenumberComponent\n  extends KycBaseComponent\n  implements OnInit {\n  private stepID = 3;\n  private state: UpdateAppDataInput | undefined;\n  private authXML: string | undefined;\n  private authQuestions: ITransunionKBAQuestions | undefined;\n  private otpQuestion: ITransunionKBAQuestion | undefined;\n  private otpAnswer: IVerifyAuthenticationAnswer | undefined;\n  private verifyResponse: string | undefined;\n  private codeQuestion: string | undefined;\n  private authResponse: IVerifyAuthenticationResponseSuccess | undefined;\n  private authSuccessful: boolean = false;\n\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n    private store: Store,\n    private kycService: KycService\n  ) {\n    super();\n  }\n\n  ngOnInit(): void {\n    this.kycService.activateStep(this.stepID);\n  }\n\n  goBack(): void {\n    this.kycService.inactivateStep(this.stepID);\n    this.router.navigate(['../identity'], { relativeTo: this.route });\n  }\n\n  async goToNext(form: FormGroup): Promise<void> {\n    if (form.valid) {\n      const { phone } = this.formatAttributes(form, phoneMap);\n      const attrs = {\n        phone: {\n          primary: phone,\n        },\n      } as UserAttributesInput;\n\n      try {\n        await (async () => {\n          await this.updateUserAttributes(attrs);\n          await this.getAuthQuestions(this.state);\n          await this.updateStateWithKBAQuestions(this.authXML);\n          return this;\n        })\n          .bind(this)()\n          .then((_this) => {\n            _this\n              .parseAuthQuestions(this.authXML)\n              .getOTPQuestion(this.authQuestions);\n          });\n\n        if (!this.authQuestions) throw 'No authentication questions returned';\n\n        if (this.otpQuestion) {\n          this.state = this.store.snapshot()['appData']; // refresh state for new bundle key\n          this.getOTPAnswer(this.otpQuestion); // automatically select (send text for user)\n          (await this.sendVerifyAuthQuestions(this.state, this.otpAnswer))\n            .parseVerifyResponse(this.verifyResponse) // this contains the (enter code question)\n            .isVerificationSuccesful(this.authResponse);\n        } else {\n          this.router.navigate(['../kba'], { relativeTo: this.route });\n        }\n\n        if (this.authSuccessful) {\n          this.getCodeQuestion(this.authResponse);\n          await this.updateStateWithCodeQuestions(this.codeQuestion);\n          this.router.navigate(['../code'], {\n            relativeTo: this.route,\n          });\n        } else {\n          throw 'Authentication request failed';\n        }\n      } catch (err) {\n        console.log('error ===> ', err, this);\n        this.router.navigate(['../error'], { relativeTo: this.route });\n      }\n    }\n  }\n\n  handleError(errors: { [key: string]: AbstractControl }): void {\n    console.log('form errors', errors);\n  }\n\n  /**\n   * Update the state prop with the current user attributes.\n   * @param {UserAttributesInput | undefined} attrs\n   * @returns\n   */\n  async updateUserAttributes(\n    attrs: UserAttributesInput | undefined\n  ): Promise<KycPhonenumberComponent> {\n    if (!attrs) return this;\n    this.state = await this.kycService.updateUserAttributesAsync(attrs);\n    return this;\n  }\n\n  /**\n   * Updates the authXML prop with the authentication questions back from TU\n   * @param {UpdateAppDataInput | undefined} data\n   * @returns\n   */\n  async getAuthQuestions(\n    data: UpdateAppDataInput | undefined\n  ): Promise<KycPhonenumberComponent> {\n    if (!data) return this;\n    this.authXML = await this.kycService.getGetAuthenticationQuestionsResults(\n      data\n    );\n    return this;\n  }\n\n  /**\n   * Update the authQuestions prop with the parsed authXML prop\n   * @param {string | undefined} xml\n   * @returns\n   */\n  parseAuthQuestions(xml: string | undefined): KycPhonenumberComponent {\n    if (!xml) return this;\n    this.authQuestions = this.kycService.parseCurrentRawQuestions(xml);\n    return this;\n  }\n\n  /**\n   * Updates the otpQuestion prop with the OTP question provided by TU\n   *   - Searches the questions returned for specific OTP text\n   * @param {ITransunionKBAQuestions | undefined} questions\n   * @returns\n   */\n  getOTPQuestion(\n    questions: ITransunionKBAQuestions | undefined\n  ): KycPhonenumberComponent {\n    if (!questions) return this;\n    this.otpQuestion = this.kycService.getOTPQuestion(questions);\n    return this;\n  }\n\n  /**\n   * Updates the otpAnswer prop with the OTP answer provided by TU\n   *   - Searches the answers returned for the specific OTP text (send text message)\n   * @param {ITransunionKBAQuestion | undefined} otpQuestion\n   * @returns\n   */\n  getOTPAnswer(\n    otpQuestion: ITransunionKBAQuestion | undefined\n  ): KycPhonenumberComponent {\n    if (!otpQuestion) return this;\n    this.otpAnswer = this.kycService.getOTPSendTextAnswer(otpQuestion);\n    return this;\n  }\n\n  /**\n   * Updates the verifyResponse prop with the VerifyAuthenticationQuestions response from TU\n   *   - This is the response to our answer to send OTP (send text message)\n   *   - This response will contain an question (enter the passcode) embeded in CDATA\n   * @param {UpdateAppDataInput | AppDataStateModel | undefined} state\n   * @param {IVerifyAuthenticationAnswer | undefined} otpAnswer\n   * @returns\n   */\n  async sendVerifyAuthQuestions(\n    state: UpdateAppDataInput | AppDataStateModel | undefined,\n    otpAnswer: IVerifyAuthenticationAnswer | undefined\n  ): Promise<KycPhonenumberComponent> {\n    if (!otpAnswer || !state) return this;\n    this.verifyResponse = await this.kycService.sendVerifyAuthenticationQuestions(\n      state,\n      [otpAnswer]\n    );\n    return this;\n  }\n\n  /**\n   * Update the authResponse prop with the parsed verifyResp prop\n   * @param {string | undefined} verifyResp\n   * @returns\n   */\n  parseVerifyResponse(verifyResp: string | undefined): KycPhonenumberComponent {\n    this.authResponse = verifyResp\n      ? JSON.parse(verifyResp)\n      : ({} as IVerifyAuthenticationResponseSuccess);\n    return this;\n  }\n\n  /**\n   * Update the codeQuestion prop with the nested object from the parsed authRespone\n   *   - This is the enter pass code question\n   * @param {IVerifyAuthenticationResponseSuccess | undefined} authResponse\n   * @returns\n   */\n  getCodeQuestion(\n    authResponse: IVerifyAuthenticationResponseSuccess | undefined\n  ): KycPhonenumberComponent {\n    if (!authResponse) return this;\n    this.codeQuestion = returnNestedObject(\n      authResponse,\n      'a:AuthenticationDetails'\n    );\n    return this;\n  }\n\n  /**\n   * Update the state (currentRawQuestions) with the KBA questions\n   * @param {string | undefined} question\n   * @returns\n   */\n  async updateStateWithKBAQuestions(\n    question: string | undefined\n  ): Promise<KycPhonenumberComponent> {\n    if (!question) return this;\n    await this.kycService.updateCurrentRawQuestionsAsync(question);\n    return this;\n  }\n\n  /**\n   * Update the state (currentRawQuestions) with the enter pass code question\n   * @param {string | undefined} question\n   * @returns\n   */\n  async updateStateWithCodeQuestions(\n    question: string | undefined\n  ): Promise<KycPhonenumberComponent> {\n    if (!question) return this;\n    await this.kycService.updateCurrentRawQuestionsAsync(question);\n    return this;\n  }\n\n  /**\n   * Update the prop to indicate that verification was successful\n   * @param {IVerifyAuthenticationResponseSuccess | undefined} resp\n   * @returns\n   */\n  isVerificationSuccesful(\n    resp: IVerifyAuthenticationResponseSuccess | undefined\n  ): KycPhonenumberComponent {\n    if (!resp) return this;\n    this.authSuccessful =\n      returnNestedObject(resp, 'a:ResponseType').toLowerCase() === 'success';\n    return this;\n  }\n}\n\nconst phoneMap: Record<string, any> = {\n  phone: true,\n};\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router"
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute"
                    },
                    {
                        "name": "store",
                        "type": "Store"
                    },
                    {
                        "name": "kycService",
                        "type": "KycService"
                    }
                ],
                "line": 36,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "store",
                        "type": "Store",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "kycService",
                        "type": "KycService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "KycBaseComponent",
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"container mx-auto max-w-xs h-full\">\n  <brave-kyc-phonenumber-pure\n    (formSubmit)=\"goToNext($event)\"\n    (formError)=\"handleError($event)\"\n    (backClick)=\"goBack()\"\n  ></brave-kyc-phonenumber-pure>\n</div>\n"
        },
        {
            "name": "KycPhonenumberPureComponent",
            "id": "component-KycPhonenumberPureComponent-bb4cd830c5175dc4632f48c84a77eaa9",
            "file": "src/app/views/kyc-phonenumber/kyc-phonenumber-pure/kyc-phonenumber-pure.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-kyc-phonenumber-pure",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./kyc-phonenumber-pure.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "backClick",
                    "defaultValue": "new EventEmitter()",
                    "line": 14,
                    "type": "EventEmitter<void>",
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                },
                {
                    "name": "formError",
                    "defaultValue": "new EventEmitter()",
                    "line": 17,
                    "type": "EventEmitter<literal type>",
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                },
                {
                    "name": "formSubmit",
                    "defaultValue": "new EventEmitter()",
                    "line": 15,
                    "type": "EventEmitter<FormGroup>",
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                },
                {
                    "name": "nextClick",
                    "defaultValue": "new EventEmitter()",
                    "line": 13,
                    "type": "EventEmitter<void>",
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "flattenAttributes",
                    "args": [
                        {
                            "name": "formValues",
                            "type": "any"
                        },
                        {
                            "name": "mapObj",
                            "type": "Record<string | any>"
                        },
                        {
                            "name": "inputType",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "FlatForm",
                    "typeParameters": [],
                    "line": 31,
                    "jsdoctags": [
                        {
                            "name": "formValues",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "mapObj",
                            "type": "Record<string | any>",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "inputType",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                },
                {
                    "name": "formatAttributes",
                    "args": [
                        {
                            "name": "form",
                            "type": "FormGroup"
                        },
                        {
                            "name": "mapObj",
                            "type": "Record<string | any>"
                        },
                        {
                            "name": "inputType",
                            "type": "string",
                            "defaultValue": "'input'"
                        }
                    ],
                    "optional": false,
                    "returnType": "FlatForm",
                    "typeParameters": [],
                    "line": 23,
                    "jsdoctags": [
                        {
                            "name": "form",
                            "type": "FormGroup",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "mapObj",
                            "type": "Record<string | any>",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "inputType",
                            "type": "string",
                            "defaultValue": "'input'",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { KycBaseComponent } from '@views/kyc-base/kyc-base.component';\n\n@Component({\n  selector: 'brave-kyc-phonenumber-pure',\n  templateUrl: './kyc-phonenumber-pure.component.html',\n})\nexport class KycPhonenumberPureComponent extends KycBaseComponent {\n  constructor() {\n    super();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "extends": "KycBaseComponent",
            "templateData": "<div class=\"flex content-center items-center justify-center h-full\">\n  <div class=\"w-full max-w-xs\">\n    <div class=\"relative flex flex-col min-w-0 w-full mb-6 border-0\">\n      <!-- header -->\n      <div class=\"py-3\">\n        <h4 class=\"brave-h4 text-indigo-800\">Phone Number</h4>\n      </div>\n\n      <!-- subheader -->\n      <div class=\"py-3\">\n        <div class=\"text-base\">\n          <p class=\"mb-6 text-blueGray-600\">\n            To complete your authentication, we need to confirm your phone\n            number. We will text a 5-digit code to the number below.\n          </p>\n        </div>\n      </div>\n\n      <!-- subheader -->\n      <div class=\"py-3\">\n        <div class=\"text-sm\">\n          <p class=\"mb-6 text-blueGray-600\">\n            Standard data and messaging rates may apply.\n          </p>\n        </div>\n      </div>\n\n      <!-- form -->\n      <div class=\"py-3 pt-0\">\n        <brave-outline-phone-form\n          #form\n          (onSubmit)=\"formSubmit.emit($event)\"\n          (onSubmitError)=\"formError.emit($event)\"\n        ></brave-outline-phone-form>\n      </div>\n\n      <div class=\"mt-5\">\n        <div class=\"flex justify-between items-center\">\n          <brave-links-onlytext-button\n            (click)=\"backClick.emit()\"\n            [config]=\"{ buttonSize: 'sm', color: 'text-blueGray-600' }\"\n          >\n            <span class=\"flex items-center\">\n              <span class=\"material-icons px-1\">arrow_back</span>&nbsp;Back\n            </span>\n          </brave-links-onlytext-button>\n          <brave-filled-onlytext-button (click)=\"form.submitForm()\"\n            ><span class=\"flex items-center\"\n              >Continue<span class=\"material-icons px-1\"\n                >arrow_forward</span\n              ></span\n            ></brave-filled-onlytext-button\n          >\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n"
        },
        {
            "name": "KycSsnComponent",
            "id": "component-KycSsnComponent-c451300b5ef654a37b38485ddc69c6e2",
            "file": "src/app/views/kyc-ssn/kyc-ssn/kyc-ssn.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-kyc-ssn",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./kyc-ssn.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "backClick",
                    "defaultValue": "new EventEmitter()",
                    "line": 14,
                    "type": "EventEmitter<void>",
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                },
                {
                    "name": "formError",
                    "defaultValue": "new EventEmitter()",
                    "line": 17,
                    "type": "EventEmitter<literal type>",
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                },
                {
                    "name": "formSubmit",
                    "defaultValue": "new EventEmitter()",
                    "line": 15,
                    "type": "EventEmitter<FormGroup>",
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                },
                {
                    "name": "nextClick",
                    "defaultValue": "new EventEmitter()",
                    "line": 13,
                    "type": "EventEmitter<void>",
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "stepID",
                    "defaultValue": "2",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "goBack",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "description": "<p>Method to navigate back one step</p>\n"
                },
                {
                    "name": "goToNext",
                    "args": [
                        {
                            "name": "form",
                            "type": "FormGroup"
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<void>",
                    "typeParameters": [],
                    "line": 38,
                    "description": "<p>Method to take the form inputs and get the indicative enrichment response</p>\n",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1066,
                                "end": 1070,
                                "flags": 0,
                                "escapedText": "form"
                            },
                            "type": "FormGroup",
                            "tagName": {
                                "pos": 1060,
                                "end": 1065,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": ""
                        }
                    ]
                },
                {
                    "name": "handleError",
                    "args": [
                        {
                            "name": "errors",
                            "type": "literal type"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 71,
                    "description": "<p>Handle the form errors gracefully</p>\n",
                    "jsdoctags": [
                        {
                            "name": "errors",
                            "type": "literal type",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22
                },
                {
                    "name": "flattenAttributes",
                    "args": [
                        {
                            "name": "formValues",
                            "type": "any"
                        },
                        {
                            "name": "mapObj",
                            "type": "Record<string | any>"
                        },
                        {
                            "name": "inputType",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "FlatForm",
                    "typeParameters": [],
                    "line": 31,
                    "jsdoctags": [
                        {
                            "name": "formValues",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "mapObj",
                            "type": "Record<string | any>",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "inputType",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                },
                {
                    "name": "formatAttributes",
                    "args": [
                        {
                            "name": "form",
                            "type": "FormGroup"
                        },
                        {
                            "name": "mapObj",
                            "type": "Record<string | any>"
                        },
                        {
                            "name": "inputType",
                            "type": "string",
                            "defaultValue": "'input'"
                        }
                    ],
                    "optional": false,
                    "returnType": "FlatForm",
                    "typeParameters": [],
                    "line": 23,
                    "jsdoctags": [
                        {
                            "name": "form",
                            "type": "FormGroup",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "mapObj",
                            "type": "Record<string | any>",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "inputType",
                            "type": "string",
                            "defaultValue": "'input'",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { KYCResponse, KycService } from '@shared/services/kyc/kyc.service';\nimport { AbstractControl, FormGroup } from '@angular/forms';\nimport { KycBaseComponent } from '@views/kyc-base/kyc-base.component';\nimport { UserAttributesInput } from '@shared/services/aws/api.service';\n\n@Component({\n  selector: 'brave-kyc-ssn',\n  templateUrl: './kyc-ssn.component.html',\n})\nexport class KycSsnComponent extends KycBaseComponent implements OnInit {\n  stepID = 2;\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n    private kycService: KycService\n  ) {\n    super();\n  }\n\n  ngOnInit(): void {\n    this.kycService.activateStep(this.stepID);\n  }\n\n  /**\n   * Method to navigate back one step\n   */\n  goBack(): void {\n    this.kycService.inactivateStep(this.stepID);\n    this.router.navigate(['../address'], { relativeTo: this.route });\n  }\n\n  /**\n   * Method to take the form inputs and get the indicative enrichment response\n   * @param form\n   */\n  async goToNext(form: FormGroup): Promise<void> {\n    // ssn is a little different as each code is one input\n    if (form.valid) {\n      const temp = this.formatAttributes(form, ssnMap);\n      const lastFour = `${temp['input-0']}${temp['input-1']}${temp['input-2']}${temp['input-3']}`;\n      const attrs = {\n        ssn: {\n          lastfour: lastFour,\n        },\n      } as UserAttributesInput;\n      try {\n        const data = await this.kycService.updateUserAttributesAsync(attrs);\n        const full = await this.kycService.getIndicativeEnrichmentResults(data);\n        if (full === KYCResponse.Failed) {\n          this.router.navigate(['../identityfull'], { relativeTo: this.route });\n        } else {\n          const newAttrs = {\n            ssn: { ...attrs.ssn, full },\n          } as UserAttributesInput;\n          this.kycService.updateUserAttributesAsync(newAttrs);\n          this.kycService.completeStep(this.stepID);\n          this.router.navigate(['../verify'], { relativeTo: this.route });\n        }\n      } catch {\n        this.router.navigate(['../identityfull'], { relativeTo: this.route });\n      }\n    }\n  }\n\n  /**\n   * Handle the form errors gracefully\n   * @param { [key: string]: AbstractControl } errors\n   */\n  handleError(errors: { [key: string]: AbstractControl }): void {\n    console.log('form errors', errors);\n  }\n}\n\nconst ssnMap: Record<string, any> = {\n  'input-0': true,\n  'input-1': true,\n  'input-2': true,\n  'input-3': true,\n};\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router"
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute"
                    },
                    {
                        "name": "kycService",
                        "type": "KycService"
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "kycService",
                        "type": "KycService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "KycBaseComponent",
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"container mx-auto max-w-xs h-full\">\n  <brave-kyc-ssn-pure\n    (formSubmit)=\"goToNext($event)\"\n    (formError)=\"handleError($event)\"\n    (backClick)=\"goBack()\"\n  ></brave-kyc-ssn-pure>\n</div>\n"
        },
        {
            "name": "KycSsnFullComponent",
            "id": "component-KycSsnFullComponent-587139a8d374f10872b3417133e057ef",
            "file": "src/app/views/kyc-ssn-full/kyc-ssn-full/kyc-ssn-full.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-kyc-ssn-full",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./kyc-ssn-full.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "backClick",
                    "defaultValue": "new EventEmitter()",
                    "line": 14,
                    "type": "EventEmitter<void>",
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                },
                {
                    "name": "formError",
                    "defaultValue": "new EventEmitter()",
                    "line": 17,
                    "type": "EventEmitter<literal type>",
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                },
                {
                    "name": "formSubmit",
                    "defaultValue": "new EventEmitter()",
                    "line": 15,
                    "type": "EventEmitter<FormGroup>",
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                },
                {
                    "name": "nextClick",
                    "defaultValue": "new EventEmitter()",
                    "line": 13,
                    "type": "EventEmitter<void>",
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "stepID",
                    "defaultValue": "2",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [
                {
                    "name": "formatCode",
                    "args": [
                        {
                            "name": "values",
                            "type": "FlatForm"
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 50,
                    "jsdoctags": [
                        {
                            "name": "values",
                            "type": "FlatForm",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "goBack",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28
                },
                {
                    "name": "goToNext",
                    "args": [
                        {
                            "name": "form",
                            "type": "FormGroup"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "jsdoctags": [
                        {
                            "name": "form",
                            "type": "FormGroup",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleError",
                    "args": [
                        {
                            "name": "errors",
                            "type": "literal type"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 58,
                    "jsdoctags": [
                        {
                            "name": "errors",
                            "type": "literal type",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24
                },
                {
                    "name": "flattenAttributes",
                    "args": [
                        {
                            "name": "formValues",
                            "type": "any"
                        },
                        {
                            "name": "mapObj",
                            "type": "Record<string | any>"
                        },
                        {
                            "name": "inputType",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "FlatForm",
                    "typeParameters": [],
                    "line": 31,
                    "jsdoctags": [
                        {
                            "name": "formValues",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "mapObj",
                            "type": "Record<string | any>",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "inputType",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                },
                {
                    "name": "formatAttributes",
                    "args": [
                        {
                            "name": "form",
                            "type": "FormGroup"
                        },
                        {
                            "name": "mapObj",
                            "type": "Record<string | any>"
                        },
                        {
                            "name": "inputType",
                            "type": "string",
                            "defaultValue": "'input'"
                        }
                    ],
                    "optional": false,
                    "returnType": "FlatForm",
                    "typeParameters": [],
                    "line": 23,
                    "jsdoctags": [
                        {
                            "name": "form",
                            "type": "FormGroup",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "mapObj",
                            "type": "Record<string | any>",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "inputType",
                            "type": "string",
                            "defaultValue": "'input'",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { AfterViewInit, Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { KycService } from '@shared/services/kyc/kyc.service';\nimport { FlatForm, KycBaseComponent } from '@views/kyc-base/kyc-base.component';\nimport { AbstractControl, FormGroup } from '@angular/forms';\nimport { UserAttributesInput } from '@shared/services/aws/api.service';\nimport { SyncService } from '@shared/services/sync/sync.service';\n\n@Component({\n  selector: 'brave-kyc-ssn-full',\n  templateUrl: './kyc-ssn-full.component.html',\n})\nexport class KycSsnFullComponent extends KycBaseComponent implements OnInit {\n  stepID = 2;\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n    private kycService: KycService,\n    private syncService: SyncService\n  ) {\n    super();\n  }\n\n  ngOnInit(): void {\n    this.kycService.activateStep(this.stepID);\n  }\n\n  goBack(): void {\n    this.kycService.inactivateStep(this.stepID);\n    this.router.navigate(['../address'], { relativeTo: this.route });\n  }\n\n  goToNext(form: FormGroup): void {\n    // TODO !!!Important!!! consider how to handle full SSN. Don't want to keep in db\n    if (form.valid) {\n      const temp = this.formatAttributes(form, ssn);\n      const full = this.formatCode(temp);\n      const attrs = {\n        ssn: {\n          lastfour: `${temp['input-0']}${temp['input-1']}${temp['input-2']}${temp['input-3']}`,\n          full: full,\n        },\n      } as UserAttributesInput;\n      this.kycService.updateUserAttributes(attrs);\n      this.kycService.completeStep(this.stepID);\n      this.router.navigate(['../verify'], { relativeTo: this.route });\n    }\n  }\n\n  formatCode(values: FlatForm): string {\n    let str = '';\n    for (let i = 0; i < 9; i++) {\n      str += values[`input-${i}`];\n    }\n    return str;\n  }\n\n  handleError(errors: { [key: string]: AbstractControl }): void {\n    console.log('form errors', errors);\n  }\n}\n\nconst ssn: Record<string, any> = {\n  'input-0': true,\n  'input-1': true,\n  'input-2': true,\n  'input-3': true,\n  'input-4': true,\n  'input-5': true,\n  'input-6': true,\n  'input-7': true,\n  'input-8': true,\n};\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router"
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute"
                    },
                    {
                        "name": "kycService",
                        "type": "KycService"
                    },
                    {
                        "name": "syncService",
                        "type": "SyncService"
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "kycService",
                        "type": "KycService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "syncService",
                        "type": "SyncService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "KycBaseComponent",
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"container mx-auto max-w-xs h-full\">\n  <brave-kyc-ssn-full-pure\n    (formSubmit)=\"goToNext($event)\"\n    (formError)=\"handleError($event)\"\n    (backClick)=\"goBack()\"\n  ></brave-kyc-ssn-full-pure>\n</div>\n"
        },
        {
            "name": "KycSsnFullPureComponent",
            "id": "component-KycSsnFullPureComponent-61d1dc813126686e4a521ebe6ba96a22",
            "file": "src/app/views/kyc-ssn-full/kyc-ssn-full-pure/kyc-ssn-full-pure.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-kyc-ssn-full-pure",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./kyc-ssn-full-pure.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "backClick",
                    "defaultValue": "new EventEmitter()",
                    "line": 14,
                    "type": "EventEmitter<void>",
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                },
                {
                    "name": "formError",
                    "defaultValue": "new EventEmitter()",
                    "line": 17,
                    "type": "EventEmitter<literal type>",
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                },
                {
                    "name": "formSubmit",
                    "defaultValue": "new EventEmitter()",
                    "line": 15,
                    "type": "EventEmitter<FormGroup>",
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                },
                {
                    "name": "nextClick",
                    "defaultValue": "new EventEmitter()",
                    "line": 13,
                    "type": "EventEmitter<void>",
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "flattenAttributes",
                    "args": [
                        {
                            "name": "formValues",
                            "type": "any"
                        },
                        {
                            "name": "mapObj",
                            "type": "Record<string | any>"
                        },
                        {
                            "name": "inputType",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "FlatForm",
                    "typeParameters": [],
                    "line": 31,
                    "jsdoctags": [
                        {
                            "name": "formValues",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "mapObj",
                            "type": "Record<string | any>",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "inputType",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                },
                {
                    "name": "formatAttributes",
                    "args": [
                        {
                            "name": "form",
                            "type": "FormGroup"
                        },
                        {
                            "name": "mapObj",
                            "type": "Record<string | any>"
                        },
                        {
                            "name": "inputType",
                            "type": "string",
                            "defaultValue": "'input'"
                        }
                    ],
                    "optional": false,
                    "returnType": "FlatForm",
                    "typeParameters": [],
                    "line": 23,
                    "jsdoctags": [
                        {
                            "name": "form",
                            "type": "FormGroup",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "mapObj",
                            "type": "Record<string | any>",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "inputType",
                            "type": "string",
                            "defaultValue": "'input'",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { KycBaseComponent } from '@views/kyc-base/kyc-base.component';\n\n@Component({\n  selector: 'brave-kyc-ssn-full-pure',\n  templateUrl: './kyc-ssn-full-pure.component.html',\n})\nexport class KycSsnFullPureComponent extends KycBaseComponent {\n  constructor() {\n    super();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "extends": "KycBaseComponent",
            "templateData": "<div class=\"flex content-center items-center justify-center h-full\">\n  <div class=\"w-full max-w-xs\">\n    <div class=\"relative flex flex-col min-w-0 w-full mb-6 border-0\">\n      <!-- header -->\n      <div class=\"py-3\">\n        <h4 class=\"brave-h4 text-indigo-800\">Social Security</h4>\n      </div>\n\n      <!-- subheader -->\n      <div class=\"py-3\">\n        <div class=\"text-base\">\n          <p class=\"mb-6 text-blueGray-600\">\n            We weren’t able to verify your identiy with the last 4 digits of\n            your SSN. We will need to verify your full SSN.\n          </p>\n        </div>\n      </div>\n\n      <!-- items -->\n      <div class=\"py-3 pt-0\">\n        <div class=\"flex mb-6\">\n          <span class=\"material-icons justify-end ml-6 mr-2 text-blueGray-600\"\n            >lock_outline</span\n          >\n          <span class=\"text-base\">\n            <p class=\"text-blueGray-600\">\n              This will not impact your credit score\n            </p>\n          </span>\n        </div>\n        <div class=\"flex mb-6\">\n          <span class=\"material-icons justify-end ml-6 mr-2 text-blueGray-600\"\n            >lock_outline</span\n          >\n          <span class=\"text-base\">\n            <p class=\"text-blueGray-600\">\n              Your SSN will be encrypted and transmitted to us via a secure\n              connection\n            </p>\n          </span>\n        </div>\n      </div>\n\n      <!-- form -->\n      <div class=\"py-3 pt-0\">\n        <brave-ssn-full-form\n          #form\n          (onSubmit)=\"formSubmit.emit($event)\"\n          (onSubmitError)=\"formError.emit($event)\"\n        ></brave-ssn-full-form>\n      </div>\n\n      <div class=\"mt-5\">\n        <div class=\"flex justify-between items-center\">\n          <brave-links-onlytext-button\n            (click)=\"backClick.emit()\"\n            [config]=\"{ buttonSize: 'sm', color: 'text-blueGray-600' }\"\n          >\n            <span class=\"flex items-center\">\n              <span class=\"material-icons px-1\">arrow_back</span>&nbsp;Back\n            </span>\n          </brave-links-onlytext-button>\n          <brave-filled-onlytext-button (click)=\"form.submitForm()\"\n            ><span class=\"flex items-center\"\n              >Continue<span class=\"material-icons px-1\"\n                >arrow_forward</span\n              ></span\n            ></brave-filled-onlytext-button\n          >\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n"
        },
        {
            "name": "KycSsnPureComponent",
            "id": "component-KycSsnPureComponent-3c105d915c38ac70cc3622579eac401a",
            "file": "src/app/views/kyc-ssn/kyc-ssn-pure/kyc-ssn-pure.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-kyc-ssn-pure",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./kyc-ssn-pure.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "backClick",
                    "defaultValue": "new EventEmitter()",
                    "line": 14,
                    "type": "EventEmitter<void>",
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                },
                {
                    "name": "formError",
                    "defaultValue": "new EventEmitter()",
                    "line": 17,
                    "type": "EventEmitter<literal type>",
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                },
                {
                    "name": "formSubmit",
                    "defaultValue": "new EventEmitter()",
                    "line": 15,
                    "type": "EventEmitter<FormGroup>",
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                },
                {
                    "name": "nextClick",
                    "defaultValue": "new EventEmitter()",
                    "line": 13,
                    "type": "EventEmitter<void>",
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "flattenAttributes",
                    "args": [
                        {
                            "name": "formValues",
                            "type": "any"
                        },
                        {
                            "name": "mapObj",
                            "type": "Record<string | any>"
                        },
                        {
                            "name": "inputType",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "FlatForm",
                    "typeParameters": [],
                    "line": 31,
                    "jsdoctags": [
                        {
                            "name": "formValues",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "mapObj",
                            "type": "Record<string | any>",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "inputType",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                },
                {
                    "name": "formatAttributes",
                    "args": [
                        {
                            "name": "form",
                            "type": "FormGroup"
                        },
                        {
                            "name": "mapObj",
                            "type": "Record<string | any>"
                        },
                        {
                            "name": "inputType",
                            "type": "string",
                            "defaultValue": "'input'"
                        }
                    ],
                    "optional": false,
                    "returnType": "FlatForm",
                    "typeParameters": [],
                    "line": 23,
                    "jsdoctags": [
                        {
                            "name": "form",
                            "type": "FormGroup",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "mapObj",
                            "type": "Record<string | any>",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "inputType",
                            "type": "string",
                            "defaultValue": "'input'",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { KycBaseComponent } from '@views/kyc-base/kyc-base.component';\n\n@Component({\n  selector: 'brave-kyc-ssn-pure',\n  templateUrl: './kyc-ssn-pure.component.html',\n})\nexport class KycSsnPureComponent extends KycBaseComponent {\n  constructor() {\n    super();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "extends": "KycBaseComponent",
            "templateData": "<div class=\"flex content-center items-center justify-center h-full\">\n  <div class=\"w-full max-w-xs\">\n    <div class=\"relative flex flex-col min-w-0 w-full mb-6 border-0\">\n      <!-- header -->\n      <div class=\"py-3\">\n        <h4 class=\"brave-h4 text-indigo-800\">Social Security</h4>\n      </div>\n\n      <!-- subheader -->\n      <div class=\"py-3\">\n        <div class=\"text-base\">\n          <p class=\"mb-6 text-blueGray-600\">\n            We need the last 4 digits of your SSN to confirm your identity for\n            your credit report and score. This information will not be used for\n            anything else.\n          </p>\n        </div>\n      </div>\n\n      <!-- items -->\n      <div class=\"py-3 pt-0\">\n        <div class=\"flex mb-6\">\n          <span class=\"material-icons justify-end ml-6 mr-2 text-blueGray-600\"\n            >lock_outline</span\n          >\n          <span class=\"text-base\">\n            <p class=\"text-blueGray-600\">\n              This will not impact your credit score\n            </p>\n          </span>\n        </div>\n        <div class=\"flex mb-6\">\n          <span class=\"material-icons justify-end ml-6 mr-2 text-blueGray-600\"\n            >lock_outline</span\n          >\n          <span class=\"text-base\">\n            <p class=\"text-blueGray-600\">\n              Your SSN will be encrypted and transmitted to us via a secure\n              connection\n            </p>\n          </span>\n        </div>\n      </div>\n\n      <!-- form -->\n      <div class=\"py-3 pt-0\">\n        <brave-ssn-lastfour-form\n          #form\n          (onSubmit)=\"formSubmit.emit($event)\"\n          (onSubmitError)=\"formError.emit($event)\"\n        ></brave-ssn-lastfour-form>\n      </div>\n\n      <div class=\"mt-5\">\n        <div class=\"flex justify-between items-center\">\n          <brave-links-onlytext-button\n            (click)=\"backClick.emit()\"\n            [config]=\"{ buttonSize: 'sm', color: 'text-blueGray-600' }\"\n          >\n            <span class=\"flex items-center\">\n              <span class=\"material-icons px-1\">arrow_back</span>&nbsp;Back\n            </span>\n          </brave-links-onlytext-button>\n          <brave-filled-onlytext-button (click)=\"form.submitForm()\"\n            ><span class=\"flex items-center\"\n              >Continue<span class=\"material-icons px-1\"\n                >arrow_forward</span\n              ></span\n            ></brave-filled-onlytext-button\n          >\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n"
        },
        {
            "name": "KycWelcomebackComponent",
            "id": "component-KycWelcomebackComponent-86a6bbb992a61ca368e3b6fd083c06e6",
            "file": "src/app/views/kyc-welcomeback/kyc-welcomeback/kyc-welcomeback.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-kyc-welcomeback",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./kyc-welcomeback.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "goBack",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15
                },
                {
                    "name": "goToNext",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<void>",
                    "typeParameters": [],
                    "line": 13,
                    "modifierKind": [
                        120
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { ICredentials } from '@aws-amplify/core';\nimport { AuthService } from '@shared/services/auth/auth.service';\nimport { SyncService } from '@shared/services/sync/sync.service';\n\n@Component({\n  selector: 'brave-kyc-welcomeback',\n  templateUrl: './kyc-welcomeback.component.html',\n})\nexport class KycWelcomebackComponent implements OnInit {\n  constructor() {}\n\n  async ngOnInit(): Promise<void> {}\n\n  goBack(): void {\n    // need to add state to pick up where left off\n  }\n\n  goToNext(): void {\n    // need to add state to pick up where left off\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 10
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"container mx-auto max-w-xs h-full\">\n  <brave-kyc-welcomeback-pure\n    (nextClick)=\"goToNext()\"\n    (backClick)=\"goBack()\"\n  ></brave-kyc-welcomeback-pure>\n</div>\n"
        },
        {
            "name": "KycWelcomebackPureComponent",
            "id": "component-KycWelcomebackPureComponent-4b9dbeed8bab2a5e3e971030e6563f89",
            "file": "src/app/views/kyc-welcomeback/kyc-welcomeback-pure/kyc-welcomeback-pure.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-kyc-welcomeback-pure",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./kyc-welcomeback-pure.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "backClick",
                    "defaultValue": "new EventEmitter()",
                    "line": 14,
                    "type": "EventEmitter<void>",
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                },
                {
                    "name": "formError",
                    "defaultValue": "new EventEmitter()",
                    "line": 17,
                    "type": "EventEmitter<literal type>",
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                },
                {
                    "name": "formSubmit",
                    "defaultValue": "new EventEmitter()",
                    "line": 15,
                    "type": "EventEmitter<FormGroup>",
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                },
                {
                    "name": "nextClick",
                    "defaultValue": "new EventEmitter()",
                    "line": 13,
                    "type": "EventEmitter<void>",
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "flattenAttributes",
                    "args": [
                        {
                            "name": "formValues",
                            "type": "any"
                        },
                        {
                            "name": "mapObj",
                            "type": "Record<string | any>"
                        },
                        {
                            "name": "inputType",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "FlatForm",
                    "typeParameters": [],
                    "line": 31,
                    "jsdoctags": [
                        {
                            "name": "formValues",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "mapObj",
                            "type": "Record<string | any>",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "inputType",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                },
                {
                    "name": "formatAttributes",
                    "args": [
                        {
                            "name": "form",
                            "type": "FormGroup"
                        },
                        {
                            "name": "mapObj",
                            "type": "Record<string | any>"
                        },
                        {
                            "name": "inputType",
                            "type": "string",
                            "defaultValue": "'input'"
                        }
                    ],
                    "optional": false,
                    "returnType": "FlatForm",
                    "typeParameters": [],
                    "line": 23,
                    "jsdoctags": [
                        {
                            "name": "form",
                            "type": "FormGroup",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "mapObj",
                            "type": "Record<string | any>",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "inputType",
                            "type": "string",
                            "defaultValue": "'input'",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { KycBaseComponent } from '@views/kyc-base/kyc-base.component';\n\n@Component({\n  selector: 'brave-kyc-welcomeback-pure',\n  templateUrl: './kyc-welcomeback-pure.component.html',\n})\nexport class KycWelcomebackPureComponent extends KycBaseComponent {\n  constructor() {\n    super();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "extends": "KycBaseComponent",
            "templateData": "<div class=\"flex content-center items-center justify-center h-full\">\n  <div class=\"w-full max-w-xs\">\n    <div class=\"relative flex flex-col min-w-0 w-full mb-6 border-0\">\n      <!-- image -->\n      <div class=\"flex justify-center mb-6\">\n        <img class=\"w-full\" src=\"assets/img/undraw_welcoming_xvuq.svg\" />\n      </div>\n\n      <!-- header -->\n      <div class=\"py-3\">\n        <h4 class=\"brave-h4\">Welcome Back</h4>\n      </div>\n\n      <!-- subheader -->\n      <div class=\"py-3\">\n        <div class=\"text-base\">\n          <p class=\"mb-6 text-blueGray-600\">Let's start where you left off</p>\n        </div>\n      </div>\n\n      <div class=\"mt-5\">\n        <div class=\"flex justify-between items-center\">\n          <brave-links-onlytext-button\n            (click)=\"backClick.emit()\"\n            [config]=\"{ buttonSize: 'sm', color: 'text-blueGray-600' }\"\n          >\n            <span class=\"flex items-center\">\n              <span class=\"material-icons px-1\">arrow_back</span>&nbsp;Back\n            </span>\n          </brave-links-onlytext-button>\n          <brave-filled-onlytext-button (click)=\"nextClick.emit()\"\n            ><span class=\"flex items-center\"\n              >Continue<span class=\"material-icons px-1\"\n                >arrow_forward</span\n              ></span\n            ></brave-filled-onlytext-button\n          >\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n"
        },
        {
            "name": "KycWelcomeComponent",
            "id": "component-KycWelcomeComponent-88dd12de4882fcf3738f70a0c704fa5e",
            "file": "src/app/views/kyc-welcome/kyc-welcome/kyc-welcome.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-kyc-welcome",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./kyc-welcome.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "backClick",
                    "defaultValue": "new EventEmitter()",
                    "line": 14,
                    "type": "EventEmitter<void>",
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                },
                {
                    "name": "formError",
                    "defaultValue": "new EventEmitter()",
                    "line": 17,
                    "type": "EventEmitter<literal type>",
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                },
                {
                    "name": "formSubmit",
                    "defaultValue": "new EventEmitter()",
                    "line": 15,
                    "type": "EventEmitter<FormGroup>",
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                },
                {
                    "name": "nextClick",
                    "defaultValue": "new EventEmitter()",
                    "line": 13,
                    "type": "EventEmitter<void>",
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "stepID",
                    "defaultValue": "0",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 17
                }
            ],
            "methodsClass": [
                {
                    "name": "goToNext",
                    "args": [
                        {
                            "name": "form",
                            "type": "FormGroup"
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<void>",
                    "typeParameters": [],
                    "line": 30,
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "form",
                            "type": "FormGroup",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleError",
                    "args": [
                        {
                            "name": "errors",
                            "type": "literal type"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 47,
                    "jsdoctags": [
                        {
                            "name": "errors",
                            "type": "literal type",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26
                },
                {
                    "name": "flattenAttributes",
                    "args": [
                        {
                            "name": "formValues",
                            "type": "any"
                        },
                        {
                            "name": "mapObj",
                            "type": "Record<string | any>"
                        },
                        {
                            "name": "inputType",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "FlatForm",
                    "typeParameters": [],
                    "line": 31,
                    "jsdoctags": [
                        {
                            "name": "formValues",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "mapObj",
                            "type": "Record<string | any>",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "inputType",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                },
                {
                    "name": "formatAttributes",
                    "args": [
                        {
                            "name": "form",
                            "type": "FormGroup"
                        },
                        {
                            "name": "mapObj",
                            "type": "Record<string | any>"
                        },
                        {
                            "name": "inputType",
                            "type": "string",
                            "defaultValue": "'input'"
                        }
                    ],
                    "optional": false,
                    "returnType": "FlatForm",
                    "typeParameters": [],
                    "line": 23,
                    "jsdoctags": [
                        {
                            "name": "form",
                            "type": "FormGroup",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "mapObj",
                            "type": "Record<string | any>",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "inputType",
                            "type": "string",
                            "defaultValue": "'input'",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { AbstractControl, FormGroup } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { UserAttributesInput } from '@shared/services/aws/api.service';\nimport { KycService } from '@shared/services/kyc/kyc.service';\nimport { KycBaseComponent } from '@views/kyc-base/kyc-base.component';\n\ninterface FlatForm {\n  [key: string]: string;\n}\n\n@Component({\n  selector: 'brave-kyc-welcome',\n  templateUrl: './kyc-welcome.component.html',\n})\nexport class KycWelcomeComponent extends KycBaseComponent implements OnInit {\n  stepID = 0;\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n    private kycService: KycService\n  ) {\n    super();\n  }\n\n  ngOnInit(): void {\n    this.kycService.activateStep(this.stepID);\n  }\n\n  async goToNext(form: FormGroup): Promise<void> {\n    if (form.valid) {\n      // write to state...TODO write to DB\n      const attrs = {\n        name: {\n          ...this.formatAttributes(form, name),\n        },\n        dob: {\n          ...this.formatAttributes(form, dob),\n        },\n      } as UserAttributesInput;\n      await this.kycService.updateUserAttributesAsync(attrs);\n      this.kycService.completeStep(this.stepID);\n      this.router.navigate(['../address'], { relativeTo: this.route });\n    }\n  }\n\n  handleError(errors: { [key: string]: AbstractControl }): void {\n    console.log('form errors', errors);\n  }\n}\n\nconst name: Record<string, any> = {\n  first: true,\n  middle: true,\n  last: true,\n};\n\nconst dob: Record<string, any> = {\n  year: true,\n  month: true,\n  day: true,\n};\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router"
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute"
                    },
                    {
                        "name": "kycService",
                        "type": "KycService"
                    }
                ],
                "line": 17,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "kycService",
                        "type": "KycService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "KycBaseComponent",
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"container mx-auto max-w-xs h-full\">\n  <brave-kyc-welcome-pure\n    (formSubmit)=\"goToNext($event)\"\n    (formError)=\"handleError($event)\"\n  ></brave-kyc-welcome-pure>\n</div>\n"
        },
        {
            "name": "KycWelcomePureComponent",
            "id": "component-KycWelcomePureComponent-22334171d11a5367385d49629b8189a1",
            "file": "src/app/views/kyc-welcome/kyc-welcome-pure/kyc-welcome-pure.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-kyc-welcome-pure",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./kyc-welcome-pure.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "backClick",
                    "defaultValue": "new EventEmitter()",
                    "line": 14,
                    "type": "EventEmitter<void>",
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                },
                {
                    "name": "formError",
                    "defaultValue": "new EventEmitter()",
                    "line": 17,
                    "type": "EventEmitter<literal type>",
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                },
                {
                    "name": "formSubmit",
                    "defaultValue": "new EventEmitter()",
                    "line": 15,
                    "type": "EventEmitter<FormGroup>",
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                },
                {
                    "name": "nextClick",
                    "defaultValue": "new EventEmitter()",
                    "line": 13,
                    "type": "EventEmitter<void>",
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "flattenAttributes",
                    "args": [
                        {
                            "name": "formValues",
                            "type": "any"
                        },
                        {
                            "name": "mapObj",
                            "type": "Record<string | any>"
                        },
                        {
                            "name": "inputType",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "FlatForm",
                    "typeParameters": [],
                    "line": 31,
                    "jsdoctags": [
                        {
                            "name": "formValues",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "mapObj",
                            "type": "Record<string | any>",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "inputType",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                },
                {
                    "name": "formatAttributes",
                    "args": [
                        {
                            "name": "form",
                            "type": "FormGroup"
                        },
                        {
                            "name": "mapObj",
                            "type": "Record<string | any>"
                        },
                        {
                            "name": "inputType",
                            "type": "string",
                            "defaultValue": "'input'"
                        }
                    ],
                    "optional": false,
                    "returnType": "FlatForm",
                    "typeParameters": [],
                    "line": 23,
                    "jsdoctags": [
                        {
                            "name": "form",
                            "type": "FormGroup",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "mapObj",
                            "type": "Record<string | any>",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "inputType",
                            "type": "string",
                            "defaultValue": "'input'",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { KycBaseComponent } from '@views/kyc-base/kyc-base.component';\n\n@Component({\n  selector: 'brave-kyc-welcome-pure',\n  templateUrl: './kyc-welcome-pure.component.html',\n})\nexport class KycWelcomePureComponent extends KycBaseComponent {\n  constructor() {\n    super();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "extends": "KycBaseComponent",
            "templateData": "<div class=\"flex content-center items-center justify-center h-full\">\n  <div class=\"w-full max-w-xs\">\n    <div class=\"relative flex flex-col min-w-0 w-full mb-6 border-0\">\n      <!-- image -->\n      <div class=\"flex justify-center mb-6\">\n        <img class=\"w-full\" src=\"assets/img/undraw_welcoming_xvuq.svg\" />\n      </div>\n\n      <!-- header -->\n      <div class=\"py-3\">\n        <h4 class=\"brave-h4 text-indigo-800\">Welcome!</h4>\n      </div>\n\n      <!-- subheader -->\n      <div class=\"py-3\">\n        <div class=\"text-base\">\n          <p class=\"mb-6 text-blueGray-600\">Let's start with some basic info</p>\n        </div>\n      </div>\n\n      <!-- form -->\n      <div>\n        <brave-outline-namedob-form\n          #form\n          (onSubmit)=\"formSubmit.emit($event)\"\n          (onSubmitError)=\"formError.emit($event)\"\n          [hideHint]=\"true\"\n        ></brave-outline-namedob-form>\n      </div>\n\n      <!-- form -->\n      <!-- <div class=\"py-3 pt-0\">\n        <brave-dateofbirth-form\n          #form\n          (onChanges)\n          (onSubmit)=\"formSubmit.emit($event)\"\n          (onSubmitError)=\"formError.emit($event)\"\n        ></brave-dateofbirth-form>\n      </div> -->\n\n      <!-- can place error messages here maybe? -->\n\n      <div class=\"mt-5\">\n        <div class=\"flex justify-end items-center\">\n          <brave-filled-onlytext-button (click)=\"form.submitForm()\"\n            ><span class=\"flex items-center\"\n              >Continue<span class=\"material-icons px-1\"\n                >arrow_forward</span\n              ></span\n            ></brave-filled-onlytext-button\n          >\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n"
        },
        {
            "name": "LinksOnlytextButtonComponent",
            "id": "component-LinksOnlytextButtonComponent-3f13da1dcb0790cb76c693f0e7585b81",
            "file": "src/app/shared/components/buttons/links-onlytext-button/links-onlytext-button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-links-onlytext-button",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./links-onlytext-button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "config",
                    "defaultValue": "{\n    buttonSize: 'base',\n    color: 'text-indigo-800',\n  }",
                    "line": 18,
                    "type": "ILinksOnlyTextButtonConfig"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\nexport interface ILinksOnlyTextButtonConfig {\n  buttonSize: string;\n  color: string;\n}\n\n@Component({\n  selector: 'brave-links-onlytext-button',\n  templateUrl: './links-onlytext-button.component.html',\n})\nexport class LinksOnlytextButtonComponent {\n  /**\n   * @param config Input objctfor button customization\n   * @param config.buttonSize 'sm', 'base', 'lg'\n   * @param config.color Any global color\n   */\n  @Input() config: ILinksOnlyTextButtonConfig = {\n    buttonSize: 'base',\n    color: 'text-indigo-800',\n  };\n\n  constructor() {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 21
            },
            "templateData": "<button\n  [ngClass]=\"config | linksOnlytextButton\"\n  class=\"\n    background-transparent\n    font-bold\n    outline-none\n    focus:outline-none\n    mr-1\n    w-full\n    mb-1\n    ease-linear\n    transition-all\n    duration-150\n  \"\n  type=\"button\"\n>\n  <ng-content></ng-content>\n</button>\n"
        },
        {
            "name": "LoanCardComponent",
            "id": "component-LoanCardComponent-3427f6898deab058e95f2cc81f574f83",
            "file": "src/app/shared/components/cards/loan-card/loan-card.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-loan-card",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./loan-card.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "status",
                    "defaultValue": "'good'",
                    "line": 15,
                    "type": "Status"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "open$",
                    "defaultValue": "of(false)",
                    "type": "Observable<boolean> | undefined",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "viewDetail",
                    "type": "ViewdetailButtonComponent | undefined",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "ViewdetailButtonComponent"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, AfterViewInit, ViewChild, Input } from '@angular/core';\nimport { ViewdetailButtonComponent } from '@shared/components/buttons/viewdetail-button/viewdetail-button.component';\nimport { Observable, of } from 'rxjs';\n\nexport type Status = 'excellent' | 'good' | 'okay' | 'poor';\n\n@Component({\n  selector: 'brave-loan-card',\n  templateUrl: './loan-card.component.html',\n})\nexport class LoanCardComponent implements AfterViewInit {\n  @ViewChild(ViewdetailButtonComponent)\n  viewDetail: ViewdetailButtonComponent | undefined;\n  open$: Observable<boolean> | undefined = of(false);\n  @Input() status: Status = 'good';\n\n  constructor() {}\n\n  ngAfterViewInit(): void {\n    this.open$ = this.viewDetail?.open$.asObservable();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 15
            },
            "implements": [
                "AfterViewInit"
            ],
            "templateData": "<div\n  class=\"relative flex flex-col break-words w-full py-5 rounded-lg border border-blueGray-300\"\n>\n  <div class=\"flex pr-5\">\n    <div class=\"px-4 w-13\">\n      <!-- left column  section 1 -->\n      <div\n        class=\"rounded-full border-none w-5 h-5\"\n        [ngClass]=\"status | accountStatus\"\n      ></div>\n    </div>\n    <div class=\"flex flex-col w-full\">\n      <!--  right column section 2 -->\n      <div class=\"flex flex-row justify-between p-0 -mt-1 mb-1\">\n        <!-- header  -->\n        <span><p class=\"brave-body1-semibold\">CITI</p></span>\n        <span\n          ><p class=\"brave-body1-semibold\"></p>\n          80%</span\n        >\n      </div>\n\n      <div class=\"flex flex-row\">\n        <!-- credit balance  -->\n        <span><p class=\"brave-body1\">Current Balance:&nbsp;</p></span>\n        <span><p class=\"brave-body1\">$800</p></span>\n      </div>\n\n      <div class=\"flex flex-row\">\n        <!-- credit limit  -->\n        <span><p class=\"brave-body1\">Initial Loan Amount:&nbsp;</p></span>\n        <span><p class=\"brave-body1\">$2000</p></span>\n      </div>\n\n      <div class=\"mt-1\">\n        <!-- buttons goes here -->\n        <brave-viewdetail-button>View Details</brave-viewdetail-button>\n      </div>\n    </div>\n  </div>\n\n  <div *ngIf=\"open$ | async as open\" class=\"flex flex-col w-full py-5 px-4\">\n    <div class=\"border-t border-blueGray-300\"></div>\n  </div>\n\n  <div *ngIf=\"open$ | async as open\" class=\"flex flex-row pr-5\">\n    <div class=\"px-4 w-13\">\n      <!-- left column  section 1 -->\n      <div class=\"w-5 h-5\"></div>\n    </div>\n    <div class=\"flex flex-col w-full pr-1\">\n      <!--  right column section 2 -->\n\n      <div class=\"flex flex-row justify-between\">\n        <!-- min payment  -->\n        <span><p class=\"brave-body1\">Minimum Payment:&nbsp;</p></span>\n        <span><p class=\"brave-body1\">$50</p></span>\n      </div>\n\n      <div class=\"flex flex-row justify-between\">\n        <!-- date opened TODO swith to pipe  -->\n        <span><p class=\"brave-body1\">Date Opened:&nbsp;</p></span>\n        <span><p class=\"brave-body1\">02/01/2020</p></span>\n      </div>\n\n      <div class=\"flex flex-row justify-between\">\n        <!-- account status  -->\n        <span><p class=\"brave-body1\">Account Status:&nbsp;</p></span>\n        <span><p class=\"brave-body1\">In good standing</p></span>\n      </div>\n\n      <div class=\"flex flex-row justify-between\">\n        <!-- ownership of account  -->\n        <span><p class=\"brave-body1\">Ownership of account:&nbsp;</p></span>\n        <span><p class=\"brave-body1\">Self</p></span>\n      </div>\n\n      <div class=\"flex flex-row justify-between\">\n        <!-- credit limit  -->\n        <span><p class=\"brave-body1\">Days 30/60/90 Late:&nbsp;</p></span>\n        <span><p class=\"brave-body1\">1/0/0</p></span>\n      </div>\n    </div>\n  </div>\n</div>\n"
        },
        {
            "name": "MenuDropdownComponent",
            "id": "component-MenuDropdownComponent-e5e1cbc1f941d50ca014cf1b1ff21fd0",
            "file": "src/app/shared/components/dropdowns/popdowns/menu-dropdown/menu-dropdown.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-menu-dropdown",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./menu-dropdown.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "config",
                    "defaultValue": "{\n    menu: 'Menu',\n    submenus: [\n      { submenu: 'Sub 1', route: '/submenu1', group: 'Group 1' },\n      { submenu: 'Sub 2', route: '/submenu2' },\n      { submenu: 'Sub 3', route: '/submenu3' },\n      { submenu: 'Sub 4', route: '/submenu4' },\n      { submenu: 'Sub 5', route: '/submenu5', break: true },\n      { submenu: 'Sub 6', route: '/submenu6', group: 'Group 2' },\n      { submenu: 'Sub 7', route: '/submenu7' },\n      { submenu: 'Sub 8', route: '/submenu8', break: true },\n      { submenu: 'Sub 9', route: '/submenu9', group: 'Group 3' },\n      { submenu: 'Sub 10', route: '/submenu10' },\n    ],\n  }",
                    "line": 20,
                    "type": "IMenuDropdown"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "btnDropdownRef",
                    "type": "ElementRef | undefined",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'btnDropdownRef', {static: false}"
                        }
                    ]
                },
                {
                    "name": "dropdownPopoverShow",
                    "defaultValue": "false",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "popoverDropdownRef",
                    "type": "ElementRef | undefined",
                    "optional": false,
                    "description": "",
                    "line": 40,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'popoverDropdownRef', {static: false}"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "createPoppper",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 51
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 41
                },
                {
                    "name": "toggleDropdown",
                    "args": [
                        {
                            "name": "event",
                            "type": "literal type"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 42,
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "literal type",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, ElementRef, Input, OnInit, ViewChild } from '@angular/core';\nimport { createPopper } from '@popperjs/core';\n\nexport interface ISubmenuItem {\n  submenu: string;\n  route: string;\n  group?: string;\n  break?: boolean;\n}\nexport interface IMenuDropdown {\n  menu: string;\n  submenus?: ISubmenuItem[];\n}\n\n@Component({\n  selector: 'brave-menu-dropdown',\n  templateUrl: './menu-dropdown.component.html',\n})\nexport class MenuDropdownComponent implements OnInit {\n  @Input() config: IMenuDropdown = {\n    menu: 'Menu',\n    submenus: [\n      { submenu: 'Sub 1', route: '/submenu1', group: 'Group 1' },\n      { submenu: 'Sub 2', route: '/submenu2' },\n      { submenu: 'Sub 3', route: '/submenu3' },\n      { submenu: 'Sub 4', route: '/submenu4' },\n      { submenu: 'Sub 5', route: '/submenu5', break: true },\n      { submenu: 'Sub 6', route: '/submenu6', group: 'Group 2' },\n      { submenu: 'Sub 7', route: '/submenu7' },\n      { submenu: 'Sub 8', route: '/submenu8', break: true },\n      { submenu: 'Sub 9', route: '/submenu9', group: 'Group 3' },\n      { submenu: 'Sub 10', route: '/submenu10' },\n    ],\n  };\n  dropdownPopoverShow = false;\n  @ViewChild('btnDropdownRef', { static: false }) btnDropdownRef:\n    | ElementRef\n    | undefined;\n  @ViewChild('popoverDropdownRef', { static: false })\n  popoverDropdownRef: ElementRef | undefined;\n  ngOnInit() {}\n  toggleDropdown(event: { preventDefault: () => void }) {\n    event.preventDefault();\n    if (this.dropdownPopoverShow) {\n      this.dropdownPopoverShow = false;\n    } else {\n      this.dropdownPopoverShow = true;\n      this.createPoppper();\n    }\n  }\n  createPoppper() {\n    createPopper(\n      this.btnDropdownRef?.nativeElement,\n      this.popoverDropdownRef?.nativeElement,\n      {\n        placement: 'bottom-start',\n      }\n    );\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<a\n  class=\"font-sans text-sm uppercase hover:text-coolGray-500 text-coolGray-700 px-3 py-2 flex items-center\"\n  href=\"#\"\n  (click)=\"toggleDropdown($event)\"\n  #btnDropdownRef\n>\n  {{ config.menu }}\n</a>\n<div\n  class=\"bg-white text-base z-50 float-left py-2 list-none text-left rounded shadow-lg min-w-48\"\n  [ngClass]=\"dropdownPopoverShow ? 'block' : 'hidden'\"\n  #popoverDropdownRef\n>\n  <ng-container *ngFor=\"let submenu of config.submenus\">\n    <span\n      *ngIf=\"submenu.group\"\n      class=\"text-sm pt-2 pb-0 px-4 font-bold block w-full whitespace-nowrap bg-transparent text-blueGray-400\"\n    >\n      {{ submenu.group }}\n    </span>\n    <a\n      [routerLink]=\"[submenu.route]\"\n      class=\"text-sm py-2 px-4 font-normal block w-full whitespace-nowrap bg-transparent text-blueGray-700\"\n    >\n      {{ submenu.submenu }}\n    </a>\n    <div\n      *ngIf=\"submenu.break\"\n      class=\"h-0 mx-4 my-2 border border-solid border-blueGray-100\"\n    ></div>\n  </ng-container>\n</div>\n"
        },
        {
            "name": "NavigationTabsComponent",
            "id": "component-NavigationTabsComponent-d9ebdc089e2f62e682e68cf086b5d81f",
            "file": "src/app/shared/components/tabs/navigation-tabs/navigation-tabs.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-navigation-tabs",
            "styleUrls": [
                "./navigation-tabs.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./navigation-tabs.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "$currentTab",
                    "defaultValue": "new BehaviorSubject(1)",
                    "type": "BehaviorSubject<number>",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "currentTab",
                    "defaultValue": "this.$currentTab.asObservable()",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14
                },
                {
                    "name": "toggleTabs",
                    "args": [
                        {
                            "name": "tabNumber",
                            "type": "number"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "jsdoctags": [
                        {
                            "name": "tabNumber",
                            "type": "number",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Component({\n  selector: 'brave-navigation-tabs',\n  templateUrl: './navigation-tabs.component.html',\n  styleUrls: ['./navigation-tabs.component.css']\n})\nexport class NavigationTabsComponent implements OnInit {\n  private $currentTab: BehaviorSubject<number> = new BehaviorSubject(1);\n  currentTab = this.$currentTab.asObservable();\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  toggleTabs(tabNumber: number) {\n    this.$currentTab.next(tabNumber);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./navigation-tabs.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 11
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"flex flex-wrap\">\n  <div class=\"w-full bottom-0 left-0 upper-shadow bg-white\">\n    <ul class=\"flex mb-0 list-none flex-wrap pt-3 pb-4 flex-row\">\n      <li class=\"-mb-px mr-1 last:mr-0 flex-auto text-center\">\n        <a\n          class=\"text-coolGray-700 flex flex-col items-center font-sans text-sm px-2 py-1 rounded block leading-normal\"\n          (click)=\"toggleTabs(1)\">\n          <span class=\"material-icons\">home</span>\n          <span class=\"text-2.5\">Home</span>\n        </a>\n      </li>\n      <li class=\"-mb-px mr-1 last:mr-0 flex-auto text-center\">\n        <a\n          class=\"text-coolGray-700 flex flex-col items-center font-sans text-sm px-2 py-1 rounded block leading-normal\"\n          (click)=\"toggleTabs(2)\">\n\t        <span class=\"material-icons\">credit_card</span>\n\t        <span class=\"text-2.5\">Credit</span>\n        </a>\n      </li>\n      <li class=\"-mb-px mr-1 last:mr-0 flex-auto text-center\">\n        <a\n          class=\"text-coolGray-700 flex flex-col items-center font-sans text-sm px-2 py-1 rounded block leading-normal\"\n          (click)=\"toggleTabs(3)\">\n\t\t    \t<span class=\"material-icons\">store</span>\n\t\t    \t<span class=\"text-2.5\">Marketplace</span>\n        </a>\n      </li>\n      <li class=\"-mb-px mr-1 last:mr-0 flex-auto text-center\">\n        <a\n          class=\"text-coolGray-700 flex flex-col items-center font-sans text-sm px-2 py-1 rounded block leading-normal\"\n          (click)=\"toggleTabs(4)\">\n\t        <span class=\"material-icons\">account_box</span>\n\t        <span class=\"text-2.5\">Account</span>\n        </a>\n      </li>\n    </ul>\n  </div>\n</div>\n"
        },
        {
            "name": "NegativeAccountCardComponent",
            "id": "component-NegativeAccountCardComponent-f476ca60d289204878f78e7afe644b8e",
            "file": "src/app/shared/components/cards/negative-account-card/negative-account-card.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-negative-account-card",
            "styleUrls": [
                "./negative-account-card.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./negative-account-card.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "accountNumber",
                    "defaultValue": "''",
                    "line": 44
                },
                {
                    "name": "accountTypeDescription",
                    "defaultValue": "''",
                    "line": 38,
                    "type": "string"
                },
                {
                    "name": "accountTypeDescriptionValue",
                    "defaultValue": "''",
                    "line": 39,
                    "type": "string"
                },
                {
                    "name": "amountPastDue",
                    "defaultValue": "0",
                    "line": 46,
                    "type": "string | number"
                },
                {
                    "name": "creditorName",
                    "defaultValue": "''",
                    "line": 34,
                    "type": "string"
                },
                {
                    "name": "dateLastPayment",
                    "defaultValue": "'20/02/2021'",
                    "line": 48
                },
                {
                    "name": "dateOpened",
                    "defaultValue": "'20/02/2021'",
                    "line": 47
                },
                {
                    "name": "disputeFlag",
                    "defaultValue": "''",
                    "line": 40,
                    "type": "string"
                },
                {
                    "name": "disputeFlagValue",
                    "defaultValue": "''",
                    "line": 41,
                    "type": "string"
                },
                {
                    "name": "lastReported",
                    "defaultValue": "''",
                    "line": 35,
                    "type": "string"
                },
                {
                    "name": "originalCreditor",
                    "defaultValue": "''",
                    "line": 36,
                    "type": "string"
                },
                {
                    "name": "originalCreditorValue",
                    "defaultValue": "''",
                    "line": 37,
                    "type": "string"
                },
                {
                    "name": "remarks",
                    "defaultValue": "''",
                    "line": 49
                },
                {
                    "name": "typeOfCollection",
                    "defaultValue": "''",
                    "line": 45
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "$isClosed",
                    "defaultValue": "new BehaviorSubject(false)",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "$isIgnored",
                    "defaultValue": "new BehaviorSubject(false)",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "isClosed",
                    "defaultValue": "this.$isClosed.asObservable()",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "isIgnored",
                    "defaultValue": "this.$isIgnored.asObservable()",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "viewDetail",
                    "type": "ViewdetailButtonComponent | undefined",
                    "optional": false,
                    "description": "",
                    "line": 51,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "ViewdetailButtonComponent"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "close",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 64
                },
                {
                    "name": "ignore",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 55
                },
                {
                    "name": "undoIgnore",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 59
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, ViewChild } from '@angular/core';\nimport { ViewdetailButtonComponent } from '@shared/components/buttons/viewdetail-button/viewdetail-button.component';\nimport { BehaviorSubject } from 'rxjs';\n\nexport interface INegativeAccountCardInputs {\n  creditorName?: string;\n  lastReported?: string;\n  accountTypeDescription?: string;\n  accountTypeDescriptionValue?: string;\n  originalCreditor?: string;\n  originalCreditorValue?: string;\n  disputeFlag?: string;\n  disputeFlagValue?: string;\n  accountDetail?: {\n    accountNumber?: string;\n    typeOfCollection?: string;\n    amountPastDue?: number | string;\n    dateOpened?: string;\n    dateLastPayment?: string;\n    remarks?: string;\n  };\n}\n\n@Component({\n  selector: 'brave-negative-account-card',\n  templateUrl: './negative-account-card.component.html',\n  styleUrls: ['./negative-account-card.component.css'],\n})\nexport class NegativeAccountCardComponent {\n  private $isIgnored = new BehaviorSubject(false);\n  isIgnored = this.$isIgnored.asObservable();\n  private $isClosed = new BehaviorSubject(false);\n  isClosed = this.$isClosed.asObservable();\n  @Input() creditorName: string = '';\n  @Input() lastReported: string = '';\n  @Input() originalCreditor: string = '';\n  @Input() originalCreditorValue: string = '';\n  @Input() accountTypeDescription: string = '';\n  @Input() accountTypeDescriptionValue: string = '';\n  @Input() disputeFlag: string = '';\n  @Input() disputeFlagValue: string = '';\n\n  // Detail Information\n  @Input() accountNumber = '';\n  @Input() typeOfCollection = '';\n  @Input() amountPastDue: string | number = 0;\n  @Input() dateOpened = '20/02/2021';\n  @Input() dateLastPayment = '20/02/2021';\n  @Input() remarks = '';\n  @ViewChild(ViewdetailButtonComponent)\n  viewDetail: ViewdetailButtonComponent | undefined;\n\n  constructor() {}\n\n  ignore() {\n    this.$isIgnored.next(true);\n  }\n\n  undoIgnore() {\n    this.$isIgnored.next(false);\n    this.viewDetail?.open$.next(true);\n  }\n\n  close() {\n    this.$isClosed.next(true);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./negative-account-card.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 51
            },
            "templateData": "<div *ngIf=\"!(isClosed | async)\">\n  <div *ngIf=\"isIgnored | async\" class=\"bg-brave-lusitan-blue w-full p-3\">\n    <div class=\"w-100 flex justify-end\">\n      <span (click)=\"close()\">&#10005;</span>\n    </div>\n    <span class=\"text-center\"\n      ><p class=\"font-semibold\">We'll ignore this account for now</p></span\n    >\n    <span class=\"text-center\"\n      ><p>See your full report to review hidden items</p></span\n    >\n    <div class=\"mt-2 mx-auto w-full\">\n      <div class=\"flex items-center w-full\">\n        <input class=\"ml-auto\" type=\"checkbox\" id=\"dont-show-hide\" /><label\n          for=\"dont-show-hide\"\n          class=\"ml-2 mr-auto\"\n          >Don't show me this again</label\n        >\n      </div>\n      <brave-links-onlytext-button (click)=\"undoIgnore()\"\n        >Undo</brave-links-onlytext-button\n      >\n    </div>\n  </div>\n  <div *ngIf=\"!(isIgnored | async)\">\n    <div class=\"border-t border-blueGray-300 py-2\"></div>\n    <span\n      ><p class=\"text-sm font-semibold\">{{ creditorName }}</p></span\n    >\n    <div class=\"grid grid-cols-2 gap-4 mb-2\">\n      <span><p class=\"text-sm font-semibold\">Last Reported:</p></span>\n      <span\n        ><p class=\"text-sm font-semibold text-right\">\n          {{ lastReported }}\n        </p></span\n      >\n      <span\n        ><p class=\"text-xs text-dk-gray\">{{ accountTypeDescription }}</p></span\n      >\n      <span\n        ><p class=\"text-xs text-dk-gray text-opacity-50 text-right\">\n          {{ accountTypeDescriptionValue }}\n        </p></span\n      >\n      <span\n        ><p class=\"text-xs text-dk-gray\">{{ disputeFlag }}</p></span\n      >\n      <span\n        ><p class=\"text-xs text-dk-gray text-opacity-50 text-right\">\n          {{ disputeFlagValue }}\n        </p></span\n      >\n      <span\n        ><p class=\"text-xs text-dk-gray\">{{ originalCreditor }}</p></span\n      >\n      <span\n        ><p class=\"text-xs text-dk-gray text-opacity-50 text-right\">\n          {{ originalCreditorValue }}\n        </p></span\n      >\n    </div>\n    <div class=\"py-3\">\n      <brave-viewdetail-button #viewDetail class=\"w-100\" size=\"full\"\n        >View Detail</brave-viewdetail-button\n      >\n    </div>\n    <div *ngIf=\"viewDetail.open$ | async as open\" class=\"flex flex-col w-full\">\n      <div class=\"flex justify-between\">\n        <brave-filled-onlytext-button\n          buttonSize=\"sm\"\n          backgroundColor=\"bg-dk-gray\"\n          activeColor=\"bg-dk-gray\"\n          color=\"text-black\"\n          (click)=\"ignore()\"\n          >Ignore</brave-filled-onlytext-button\n        >\n        <brave-filled-onlytext-button\n          buttonSize=\"sm\"\n          backgroundColor=\"bg-indigo-800\"\n          activeColor=\"bg-indigo-800\"\n          color=\"text-white\"\n          >Dispute</brave-filled-onlytext-button\n        >\n      </div>\n      <span><p class=\"text-lg\">Account Details</p></span>\n      <div class=\"border-t border-blueGray-300\"></div>\n      <div class=\"grid grid-cols-2 gap-4 py-2\">\n        <span><p class=\"text-xs text-dk-gray\">Account Number</p></span>\n        <span\n          ><p class=\"text-xs text-dk-gray text-opacity-50 text-right\">\n            {{ accountNumber }}\n          </p></span\n        >\n      </div>\n      <div class=\"border-t border-blueGray-300\"></div>\n      <div class=\"grid grid-cols-2 gap-4 py-2\">\n        <span><p class=\"text-xs text-dk-gray\">Type</p></span>\n        <span class=\"text-right\"\n          ><p class=\"text-xs text-dk-gray text-opacity-50\">\n            {{ typeOfCollection }}\n          </p></span\n        >\n      </div>\n      <div class=\"border-t border-blueGray-300\"></div>\n      <div class=\"grid grid-cols-2 gap-4 py-2\">\n        <span><p class=\"text-xs text-dk-gray\">Amount Past Due</p></span>\n        <span class=\"text-right\"\n          ><p class=\"text-xs text-dk-gray text-opacity-50\">\n            {{ \"$\" + amountPastDue }}\n          </p></span\n        >\n      </div>\n      <div class=\"border-t border-blueGray-300\"></div>\n      <div class=\"grid grid-cols-2 gap-4 py-2\">\n        <span><p class=\"text-xs text-dk-gray\">Date Opened</p></span>\n        <span class=\"text-right\"\n          ><p class=\"text-xs text-dk-gray text-opacity-50\">\n            {{ dateOpened }}\n          </p></span\n        >\n      </div>\n      <div class=\"border-t border-blueGray-300\"></div>\n      <div class=\"grid grid-cols-2 gap-4 py-2\">\n        <span><p class=\"text-xs text-dk-gray\">Date of Last Payment</p></span>\n        <span class=\"text-right\"\n          ><p class=\"text-xs text-dk-gray text-opacity-50\">\n            {{ dateLastPayment }}\n          </p></span\n        >\n      </div>\n      <div class=\"border-t border-blueGray-300\"></div>\n      <div class=\"grid grid-cols-2 gap-4 py-2\">\n        <span><p class=\"text-xs text-dk-gray\">Remarks</p></span>\n        <span class=\"text-right\"\n          ><p class=\"text-xs text-dk-gray text-opacity-50\">\n            {{ remarks }}\n          </p></span\n        >\n      </div>\n    </div>\n  </div>\n</div>\n"
        },
        {
            "name": "NegativeAccountInitialComponent",
            "id": "component-NegativeAccountInitialComponent-9d1d6474593dcdf4f94a523c72082b40",
            "file": "src/app/views/negative-account/negative-account-initial/negative-account-initial.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-negative-account-initial",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./negative-account-initial.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "creditReport$",
                    "type": "Observable<IMergeReport>",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { IMergeReport } from '@shared/interfaces/merge-report.interface';\nimport { CreditreportService } from '@shared/services/creditreport/creditreport.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'brave-negative-account-initial',\n  templateUrl: './negative-account-initial.component.html',\n})\nexport class NegativeAccountInitialComponent implements OnInit {\n  creditReport$: Observable<IMergeReport>;\n\n  constructor(private creditReportService: CreditreportService) {\n    this.creditReport$ = this.creditReportService.tuReport$.asObservable();\n  }\n\n  ngOnInit(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "creditReportService",
                        "type": "CreditreportService"
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "creditReportService",
                        "type": "CreditreportService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"container mx-auto max-w-xs h-full\">\n  <div *ngIf=\"creditReport$ | async as report\">\n    <brave-negative-account-initial-pure\n      [cards]=\"report | negativeTradelines\"\n    ></brave-negative-account-initial-pure>\n  </div>\n</div>\n"
        },
        {
            "name": "NegativeAccountInitialPureComponent",
            "id": "component-NegativeAccountInitialPureComponent-acd49029768e895756990b04f7cbe118",
            "file": "src/app/views/negative-account/negative-account-initial-pure/negative-account-initial-pure.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-negative-account-initial-pure",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./negative-account-initial-pure.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "cards",
                    "line": 9,
                    "type": "INegativeAccountCardInputs[] | undefined"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\nimport { INegativeAccountCardInputs } from '@shared/components/cards/negative-account-card/negative-account-card.component';\n\n@Component({\n  selector: 'brave-negative-account-initial-pure',\n  templateUrl: './negative-account-initial-pure.component.html',\n})\nexport class NegativeAccountInitialPureComponent implements OnInit {\n  @Input() cards: INegativeAccountCardInputs[] | undefined;\n\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 9
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"container mx-auto max-w-xs h-full\">\n  <div class=\"mb-2\">\n    <h2 class=\"font-semibold text-lg\">New Negative Accounts</h2>\n    <span><p class=\"text-brave-critical text-xs\">High Score Impact</p></span>\n  </div>\n  <span\n    ><p class=\"text-sm mb-1\">\n      These are new negative accounts in the last 30 days that are in\n      collections, have been charged off, or have late payments.\n    </p></span\n  >\n  <span\n    ><p class=\"text-sm mb-1\">\n      Review the accounts for accuracy, and if you see an error, you can dispute\n      them.\n    </p></span\n  >\n  <div *ngFor=\"let card of cards\">\n    <brave-negative-account-card\n      [creditorName]=\"card.creditorName || ''\"\n      [lastReported]=\"card.lastReported || ''\"\n      [accountTypeDescription]=\"card.accountTypeDescription || ''\"\n      [accountTypeDescriptionValue]=\"card.accountTypeDescriptionValue || ''\"\n      [originalCreditor]=\"card.originalCreditor || ''\"\n      [originalCreditorValue]=\"card.originalCreditorValue || ''\"\n      [disputeFlag]=\"card.disputeFlag || ''\"\n      [disputeFlagValue]=\"card.disputeFlagValue || ''\"\n      [accountNumber]=\"card.accountDetail?.accountNumber || ''\"\n      [typeOfCollection]=\"card.accountDetail?.typeOfCollection || ''\"\n      [amountPastDue]=\"card.accountDetail?.amountPastDue || -1\"\n      [dateOpened]=\"card.accountDetail?.dateOpened || ''\"\n      [dateLastPayment]=\"card.accountDetail?.dateLastPayment || ''\"\n    ></brave-negative-account-card>\n  </div>\n</div>\n"
        },
        {
            "name": "NotificationDropdownComponent",
            "id": "component-NotificationDropdownComponent-5d98fa2f52a0d4d27b8f73f43ab08034",
            "file": "src/app/shared/components/dropdowns/popdowns/notification-dropdown/notification-dropdown.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-notification-dropdown",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./notification-dropdown.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "btnDropdownRef",
                    "type": "ElementRef | undefined",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'btnDropdownRef', {static: false}"
                        }
                    ]
                },
                {
                    "name": "dropdownPopoverShow",
                    "defaultValue": "false",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "popoverDropdownRef",
                    "type": "ElementRef | undefined",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'popoverDropdownRef', {static: false}"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15
                },
                {
                    "name": "toggleDropdown",
                    "args": [
                        {
                            "name": "event",
                            "type": "literal type"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "literal type",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, AfterViewInit, ViewChild, ElementRef } from '@angular/core';\nimport { createPopper } from '@popperjs/core';\n\n@Component({\n  selector: 'brave-notification-dropdown',\n  templateUrl: './notification-dropdown.component.html',\n})\nexport class NotificationDropdownComponent implements AfterViewInit {\n  dropdownPopoverShow = false;\n  @ViewChild('btnDropdownRef', { static: false }) btnDropdownRef:\n    | ElementRef\n    | undefined;\n  @ViewChild('popoverDropdownRef', { static: false })\n  popoverDropdownRef: ElementRef | undefined;\n  ngAfterViewInit() {\n    createPopper(\n      this.btnDropdownRef?.nativeElement,\n      this.popoverDropdownRef?.nativeElement,\n      {\n        placement: 'bottom-start',\n      }\n    );\n  }\n  toggleDropdown(event: { preventDefault: () => void }) {\n    event.preventDefault();\n    if (this.dropdownPopoverShow) {\n      this.dropdownPopoverShow = false;\n    } else {\n      this.dropdownPopoverShow = true;\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "implements": [
                "AfterViewInit"
            ],
            "templateData": "<a\n  class=\"text-blueGray-500 block py-1 px-3\"\n  href=\"#pablo\"\n  (click)=\"toggleDropdown($event)\"\n  #btnDropdownRef\n>\n  <i class=\"fas fa-bell\"></i>\n</a>\n<div class=\"min-w-48 z-50\" #popoverDropdownRef>\n  <div\n    class=\"bg-white text-base z-50 float-left py-2 list-none text-left rounded shadow-lg mt-1 min-w-48\"\n    [ngClass]=\"dropdownPopoverShow ? 'block' : 'hidden'\"\n  >\n    <a\n      href=\"#pablo\"\n      class=\"text-sm py-2 px-4 font-normal block w-full whitespace-nowrap bg-transparent text-blueGray-700\"\n    >\n      Action\n    </a>\n    <a\n      href=\"#pablo\"\n      class=\"text-sm py-2 px-4 font-normal block w-full whitespace-nowrap bg-transparent text-blueGray-700\"\n    >\n      Another action\n    </a>\n    <a\n      href=\"#pablo\"\n      class=\"text-sm py-2 px-4 font-normal block w-full whitespace-nowrap bg-transparent text-blueGray-700\"\n    >\n      Something else here\n    </a>\n    <div class=\"h-0 my-2 border border-solid border-blueGray-100\"></div>\n    <a\n      href=\"#pablo\"\n      class=\"text-sm py-2 px-4 font-normal block w-full whitespace-nowrap bg-transparent text-blueGray-700\"\n    >\n      Seprated link\n    </a>\n  </div>\n</div>\n"
        },
        {
            "name": "OnboardingComponent",
            "id": "component-OnboardingComponent-cb6d414c8e43951a54a29c288190a2ce",
            "file": "src/app/layouts/onboarding/onboarding.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-onboarding",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./onboarding.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "onboarding",
                    "defaultValue": "{} as OnboardingStateModel",
                    "type": "OnboardingStateModel",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "onboarding$",
                    "defaultValue": "this.store.select(\n    OnboardingSelectors.getOnboarding\n  )",
                    "type": "Observable<OnboardingStateModel>",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "onboardingSub$",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "progressBar",
                    "type": "FilledChecktextProgressbarComponent | undefined",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "FilledChecktextProgressbarComponent"
                        }
                    ]
                },
                {
                    "name": "progressConfig",
                    "defaultValue": "{\n    size: 'base',\n  }",
                    "type": "IFilledChecktextProgressbarConfig",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "steps",
                    "defaultValue": "[\n    { id: 0, active: false, complete: false, name: 'Name' },\n    { id: 1, active: false, complete: false, name: 'Address' },\n    { id: 2, active: false, complete: false, name: 'Identity' },\n    { id: 3, active: false, complete: false, name: 'Verify' },\n  ]",
                    "type": "OnboardingStep[]",
                    "optional": false,
                    "description": "",
                    "line": 29
                }
            ],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport {\n  FilledChecktextProgressbarComponent,\n  IFilledChecktextProgressbarConfig,\n} from '@shared/components/progressbars/filled-checktext-progressbar/filled-checktext-progressbar.component';\nimport { OnboardingStateModel, OnboardingStep } from '@store/onboarding';\nimport { OnboardingSelectors } from '@store/onboarding/onboarding.selectors';\nimport { Store } from '@ngxs/store';\nimport { filter } from 'rxjs/operators';\nimport { Observable, Subscription } from 'rxjs';\nimport { AuthService } from '@shared/services/auth/auth.service';\n\n@Component({\n  selector: 'brave-onboarding',\n  templateUrl: './onboarding.component.html',\n})\nexport class OnboardingComponent {\n  @ViewChild(FilledChecktextProgressbarComponent)\n  progressBar: FilledChecktextProgressbarComponent | undefined;\n  progressConfig: IFilledChecktextProgressbarConfig = {\n    size: 'base',\n  };\n\n  onboarding: OnboardingStateModel = {} as OnboardingStateModel;\n  onboarding$: Observable<OnboardingStateModel> = this.store.select(\n    OnboardingSelectors.getOnboarding\n  );\n  onboardingSub$: Subscription;\n  steps: OnboardingStep[] = [\n    { id: 0, active: false, complete: false, name: 'Name' },\n    { id: 1, active: false, complete: false, name: 'Address' },\n    { id: 2, active: false, complete: false, name: 'Identity' },\n    { id: 3, active: false, complete: false, name: 'Verify' },\n  ];\n\n  constructor(private auth: AuthService, private store: Store) {\n    this.onboardingSub$ = this.onboarding$\n      .pipe(\n        filter((onboarding: OnboardingStateModel) => onboarding !== undefined)\n      )\n      .subscribe((onboarding: OnboardingStateModel) => {\n        this.onboarding = onboarding;\n      });\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "auth",
                        "type": "AuthService"
                    },
                    {
                        "name": "store",
                        "type": "Store"
                    }
                ],
                "line": 34,
                "jsdoctags": [
                    {
                        "name": "auth",
                        "type": "AuthService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "store",
                        "type": "Store",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div>\n  <div\n    *ngIf=\"onboarding$ | async as data\"\n    class=\"container mx-auto max-w-xs h-full\"\n  >\n    <brave-filled-checktext-progressbar\n      [steps]=\"steps\"\n      [activatedStep]=\"data.lastActive\"\n      [completedStep]=\"data.lastComplete\"\n    ></brave-filled-checktext-progressbar>\n  </div>\n  <main>\n    <section class=\"relative w-full h-full min-h-screen\">\n      <router-outlet></router-outlet>\n    </section>\n  </main>\n</div>\n"
        },
        {
            "name": "OutlineAddressFormComponent",
            "id": "component-OutlineAddressFormComponent-1aea4b99d6d7989d25641601229caab3",
            "file": "src/app/shared/components/forms/outline-address-form/outline-address-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{ provide: , useValue:  }"
                }
            ],
            "selector": "brave-outline-address-form",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./outline-address-form.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "hideHint",
                    "defaultValue": "false",
                    "line": 16,
                    "type": "boolean",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "onChanges",
                    "defaultValue": "new EventEmitter()",
                    "line": 9,
                    "type": "EventEmitter<any>",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "onSubmit",
                    "defaultValue": "new EventEmitter()",
                    "line": 10,
                    "type": "EventEmitter<FormGroup>",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "onSubmitError",
                    "defaultValue": "new EventEmitter()",
                    "line": 12,
                    "type": "EventEmitter<literal type>",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "addressOneConfig",
                    "defaultValue": "{\n    size: 'sm',\n    type: 'text',\n    label: 'Street Address',\n    placeholder: 'Street Address',\n    autocomplete: 'address-line1',\n  }",
                    "type": "IOutlineInputeConfig",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "addressTwoConfig",
                    "defaultValue": "{\n    size: 'sm',\n    type: 'text',\n    label: '',\n    placeholder: 'Apt, Suite, Building, etc.',\n    autocomplete: 'address-line2',\n  }",
                    "type": "IOutlineInputeConfig",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "cityConfig",
                    "defaultValue": "{\n    size: 'sm',\n    type: 'text',\n    label: 'City',\n    placeholder: 'City',\n    autocomplete: 'address-level2',\n  }",
                    "type": "IOutlineInputeConfig",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "stateConfig",
                    "defaultValue": "{\n    size: 'sm',\n    label: 'State',\n    autocomplete: 'address-level3',\n    options: states,\n  }",
                    "type": "IOutlineSelectInputConfig",
                    "optional": false,
                    "description": "",
                    "line": 34,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "zipConfig",
                    "defaultValue": "{\n    size: 'sm',\n    type: 'text',\n    label: 'Zip',\n    placeholder: 'Zip',\n    autocomplete: 'postal-code',\n  }",
                    "type": "IOutlineInputeConfig",
                    "optional": false,
                    "description": "",
                    "line": 40,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "parentForm",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "addChild",
                    "args": [
                        {
                            "name": "childName",
                            "type": "string"
                        },
                        {
                            "name": "childGroup",
                            "type": "FormGroup"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "jsdoctags": [
                        {
                            "name": "childName",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "childGroup",
                            "type": "FormGroup",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "submitForm",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { BaseFormComponent } from '@shared/components/forms/base-form/base-form.component';\nimport { IOutlineInputeConfig } from '@shared/components/inputs/outline-input/outline-input.component';\nimport { IOutlineSelectInputConfig } from '@shared/components/inputs/outline-select-input/outline-select-input.component';\n\n@Component({\n  selector: 'brave-outline-address-form',\n  templateUrl: './outline-address-form.component.html',\n  providers: [{ provide: 'name', useValue: 'address-form' }],\n})\nexport class OutlineAddressFormComponent extends BaseFormComponent {\n  public addressOneConfig: IOutlineInputeConfig = {\n    size: 'sm',\n    type: 'text',\n    label: 'Street Address',\n    placeholder: 'Street Address',\n    autocomplete: 'address-line1',\n  };\n  public addressTwoConfig: IOutlineInputeConfig = {\n    size: 'sm',\n    type: 'text',\n    label: '',\n    placeholder: 'Apt, Suite, Building, etc.',\n    autocomplete: 'address-line2',\n  };\n  public cityConfig: IOutlineInputeConfig = {\n    size: 'sm',\n    type: 'text',\n    label: 'City',\n    placeholder: 'City',\n    autocomplete: 'address-level2',\n  };\n  public stateConfig: IOutlineSelectInputConfig = {\n    size: 'sm',\n    label: 'State',\n    autocomplete: 'address-level3',\n    options: states,\n  };\n  public zipConfig: IOutlineInputeConfig = {\n    size: 'sm',\n    type: 'text',\n    label: 'Zip',\n    placeholder: 'Zip',\n    autocomplete: 'postal-code',\n  };\n\n  constructor(fb: FormBuilder) {\n    super(fb, 'address-form');\n  }\n}\n\n// TODO ensure you have all states\nconst states = [\n  'AL',\n  'AK',\n  'AZ',\n  'AR',\n  'CA',\n  'CO',\n  'CT',\n  'DE',\n  'FL',\n  'GA',\n  'HI',\n  'ID',\n  'IL',\n  'IN',\n  'IA',\n  'KS',\n  'KY',\n  'LA',\n  'ME',\n  'MD',\n  'MA',\n  'MI',\n  'MN',\n  'MS',\n  'MO',\n  'MT',\n  'NE',\n  'NV',\n  'NH',\n  'NJ',\n  'NM',\n  'NY',\n  'NC',\n  'ND',\n  'OH',\n  'OK',\n  'OR',\n  'PA',\n  'RI',\n  'SC',\n  'SD',\n  'TN',\n  'TX',\n  'UT',\n  'VT',\n  'VA',\n  'WA',\n  'WV',\n  'WI',\n  'WY',\n];\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "fb",
                        "type": "FormBuilder"
                    }
                ],
                "line": 46,
                "jsdoctags": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "BaseFormComponent",
            "templateData": "<form [formGroup]=\"parentForm\">\n  <div class=\"grid grid-cols-3 gap-4\">\n    <div class=\"col-span-3\">\n      <brave-outline-input\n        [config]=\"addressOneConfig\"\n        (onComponentReady)=\"addChild('addressOne', $event)\"\n        [required]=\"true\"\n      >\n      </brave-outline-input>\n      <brave-outline-input\n        [config]=\"addressTwoConfig\"\n        (onComponentReady)=\"addChild('addressTwo', $event)\"\n        [required]=\"false\"\n      >\n      </brave-outline-input>\n    </div>\n    <div class=\"col-span-1\">\n      <brave-outline-input\n        [config]=\"cityConfig\"\n        (onComponentReady)=\"addChild('city', $event)\"\n        [required]=\"true\"\n      >\n      </brave-outline-input>\n      <div class=\"-mt-2\">\n        <div class=\"flex justify-start items-start text-xs text-blueGray-600\">\n          <span class=\"-mt-1\">&#42;</span>&nbsp;Required\n        </div>\n      </div>\n    </div>\n    <div class=\"col-span-1\">\n      <brave-outline-select-input\n        [config]=\"stateConfig\"\n        (onComponentReady)=\"addChild('state', $event)\"\n        [required]=\"true\"\n      >\n      </brave-outline-select-input>\n    </div>\n    <div class=\"col-span-1\">\n      <brave-outline-input\n        [config]=\"zipConfig\"\n        (onComponentReady)=\"addChild('zip', $event)\"\n        [required]=\"true\"\n      >\n      </brave-outline-input>\n    </div>\n  </div>\n</form>\n"
        },
        {
            "name": "OutlineInputComponent",
            "id": "component-OutlineInputComponent-f0893c1220987925c0c530d02e57ee89",
            "file": "src/app/shared/components/inputs/outline-input/outline-input.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-outline-input",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./outline-input.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "asteriskOverride",
                    "line": 53
                },
                {
                    "name": "config",
                    "defaultValue": "{\n    size: 'base',\n    label: 'Input label',\n    type: 'text',\n    placeholder: 'Input text',\n    autocomplete: 'off',\n    value: '',\n  }",
                    "line": 29,
                    "type": "IOutlineInputeConfig"
                },
                {
                    "name": "required",
                    "line": 42
                }
            ],
            "outputsClass": [
                {
                    "name": "onComponentReady",
                    "defaultValue": "new EventEmitter<FormGroup>()",
                    "line": 62,
                    "type": "EventEmitter<FormGroup>"
                },
                {
                    "name": "valueChanged",
                    "defaultValue": "new EventEmitter()",
                    "line": 60,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "_asteriskOverride",
                    "defaultValue": "false",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "_required",
                    "defaultValue": "false",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "componentFormGroup",
                    "defaultValue": "new FormBuilder().group({\n    input: [''],\n  })",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 64,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "hidden",
                    "defaultValue": "false",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 68,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "locked",
                    "defaultValue": "false",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 67,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 72
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\nexport interface IOutlineInputeConfig {\n  size: string;\n  label: string;\n  type: string;\n  placeholder: string;\n  autocomplete: string;\n  value?: string;\n}\n\n@Component({\n  selector: 'brave-outline-input',\n  templateUrl: './outline-input.component.html',\n})\nexport class OutlineInputComponent implements OnInit {\n  private _required: boolean = false;\n  private _asteriskOverride: boolean = false;\n\n  /**\n   * @param Config Object to pass in component params\n   * @param config.size 'sm', 'base', 'lg'\n   * @param config.label Label text (default: 'Input label')\n   * @param config.placeholder Placeholder text (default: 'Input text')\n   * @param config.autocomplete Any HTML Input autocomplete value\n   * @param config.value (optional) Pre-load the input with a value\n   */\n  @Input() config: IOutlineInputeConfig = {\n    size: 'base',\n    label: 'Input label',\n    type: 'text',\n    placeholder: 'Input text',\n    autocomplete: 'off',\n    value: '',\n  };\n\n  /**\n   * @input Flag to make the input field required for form to be valid\n   */\n  @Input()\n  get required() {\n    return this._required;\n  }\n  set required(value: any) {\n    this._required = !!value;\n  }\n\n  /**\n   * @input Flag to override the display of an asterisk but still make it required\n   */\n  @Input()\n  get asteriskOverride() {\n    return this._asteriskOverride;\n  }\n  set asteriskOverride(value: any) {\n    this._asteriskOverride = !!value;\n  }\n\n  @Output() valueChanged: EventEmitter<any> = new EventEmitter();\n  @Output()\n  onComponentReady: EventEmitter<FormGroup> = new EventEmitter<FormGroup>();\n\n  public componentFormGroup: FormGroup = new FormBuilder().group({\n    input: [''],\n  });\n  public locked: boolean = false;\n  public hidden: boolean = false;\n\n  constructor(private fb: FormBuilder) {}\n\n  ngOnInit(): void {\n    const validators = [];\n    if (this.required) {\n      validators.push(Validators.required);\n    }\n    this.componentFormGroup = this.fb.group({\n      input: [this.config.value, validators],\n    });\n    this.componentFormGroup.controls.input.valueChanges.subscribe((value) =>\n      this.valueChanged.emit(value)\n    );\n    this.onComponentReady.emit(this.componentFormGroup);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "fb",
                        "type": "FormBuilder"
                    }
                ],
                "line": 68,
                "jsdoctags": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "required": {
                    "name": "required",
                    "setSignature": {
                        "name": "required",
                        "type": "void",
                        "args": [
                            {
                                "name": "value",
                                "type": "any"
                            }
                        ],
                        "returnType": "void",
                        "line": 45,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "any",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "asteriskOverride": {
                    "name": "asteriskOverride",
                    "setSignature": {
                        "name": "asteriskOverride",
                        "type": "void",
                        "args": [
                            {
                                "name": "value",
                                "type": "any"
                            }
                        ],
                        "returnType": "void",
                        "line": 56,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "any",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                }
            },
            "templateData": "<form [formGroup]=\"componentFormGroup\">\n  <div class=\"mb-5 pt-0\">\n    <label\n      for=\"input_field\"\n      class=\"block mb-2.5 text-sm text-blueGray-600 whitespace-nowrap\"\n      >{{ config?.label\n      }}<span *ngIf=\"required && !asteriskOverride\" class=\"-mt-1\"\n        >&#42;</span\n      ></label\n    >\n    <input\n      name=\"input_field\"\n      [type]=\"config?.type || 'text'\"\n      formControlName=\"input\"\n      [placeholder]=\"config?.placeholder || ''\"\n      [autocomplete]=\"config?.autocomplete || 'off'\"\n      [ngClass]=\"config | outlineInput\"\n      class=\"\n        placeholder-blueGray-300\n        text-blueGray-600\n        relative\n        bg-white\n        rounded\n        border border-blueGray-300\n        outline-none\n        focus:ring-0 focus:ring-indigo-800\n        w-full\n      \"\n    />\n  </div>\n</form>\n"
        },
        {
            "name": "OutlineNamedobFormComponent",
            "id": "component-OutlineNamedobFormComponent-0100f67178bcbeceed8d864080ca68ff",
            "file": "src/app/shared/components/forms/outline-namedob-form/outline-namedob-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{ provide: , useValue:  }"
                }
            ],
            "selector": "brave-outline-namedob-form",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./outline-namedob-form.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "hideHint",
                    "defaultValue": "false",
                    "line": 16,
                    "type": "boolean",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "onChanges",
                    "defaultValue": "new EventEmitter()",
                    "line": 9,
                    "type": "EventEmitter<any>",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "onSubmit",
                    "defaultValue": "new EventEmitter()",
                    "line": 10,
                    "type": "EventEmitter<FormGroup>",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "onSubmitError",
                    "defaultValue": "new EventEmitter()",
                    "line": 12,
                    "type": "EventEmitter<literal type>",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "dayConfig",
                    "defaultValue": "{\n    size: 'sm',\n    label: 'Day',\n    autocomplete: 'off',\n    options: this.addDays(31),\n  }",
                    "type": "IOutlineSelectInputConfig",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "firstNameConfig",
                    "defaultValue": "{\n    size: 'sm',\n    label: 'First Name',\n    type: 'text',\n    placeholder: 'First Name',\n    autocomplete: 'give-name',\n  }",
                    "type": "IOutlineInputeConfig",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "lastNameConfig",
                    "defaultValue": "{\n    size: 'sm',\n    label: 'Last Name',\n    type: 'text',\n    placeholder: 'Last Name',\n    autocomplete: 'family-name',\n  }",
                    "type": "IOutlineInputeConfig",
                    "optional": false,
                    "description": "",
                    "line": 47
                },
                {
                    "name": "middleNameConfig",
                    "defaultValue": "{\n    size: 'sm',\n    label: 'Middle Name',\n    type: 'text',\n    placeholder: 'Middle',\n    autocomplete: 'additional-name',\n  }",
                    "type": "IOutlineInputeConfig",
                    "optional": false,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "monthConfig",
                    "defaultValue": "{\n    size: 'sm',\n    label: 'Month',\n    autocomplete: 'off',\n    options: months,\n  }",
                    "type": "IOutlineSelectInputConfig",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "yearConfig",
                    "defaultValue": "{\n    size: 'sm',\n    label: 'Year',\n    autocomplete: 'off',\n    options: this.addYears(new Date().getFullYear()),\n  }",
                    "type": "IOutlineSelectInputConfig",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "parentForm",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "addDays",
                    "args": [
                        {
                            "name": "x",
                            "type": "number"
                        }
                    ],
                    "optional": false,
                    "returnType": "string[]",
                    "typeParameters": [],
                    "line": 62,
                    "jsdoctags": [
                        {
                            "name": "x",
                            "type": "number",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "addYears",
                    "args": [
                        {
                            "name": "x",
                            "type": "number"
                        }
                    ],
                    "optional": false,
                    "returnType": "string[]",
                    "typeParameters": [],
                    "line": 70,
                    "jsdoctags": [
                        {
                            "name": "x",
                            "type": "number",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 60
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 59
                },
                {
                    "name": "addChild",
                    "args": [
                        {
                            "name": "childName",
                            "type": "string"
                        },
                        {
                            "name": "childGroup",
                            "type": "FormGroup"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "jsdoctags": [
                        {
                            "name": "childName",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "childGroup",
                            "type": "FormGroup",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "submitForm",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { BaseFormComponent } from '@shared/components/forms/base-form/base-form.component';\nimport { IOutlineInputeConfig } from '@shared/components/inputs/outline-input/outline-input.component';\nimport { IOutlineSelectInputConfig } from '@shared/components/inputs/outline-select-input/outline-select-input.component';\n\n@Component({\n  selector: 'brave-outline-namedob-form',\n  templateUrl: './outline-namedob-form.component.html',\n  providers: [{ provide: 'name', useValue: 'namedob-form' }],\n})\nexport class OutlineNamedobFormComponent\n  extends BaseFormComponent\n  implements OnInit {\n  monthConfig: IOutlineSelectInputConfig = {\n    size: 'sm',\n    label: 'Month',\n    autocomplete: 'off',\n    options: months,\n  };\n  dayConfig: IOutlineSelectInputConfig = {\n    size: 'sm',\n    label: 'Day',\n    autocomplete: 'off',\n    options: this.addDays(31),\n  };\n  yearConfig: IOutlineSelectInputConfig = {\n    size: 'sm',\n    label: 'Year',\n    autocomplete: 'off',\n    options: this.addYears(new Date().getFullYear()),\n  };\n  firstNameConfig: IOutlineInputeConfig = {\n    size: 'sm',\n    label: 'First Name',\n    type: 'text',\n    placeholder: 'First Name',\n    autocomplete: 'give-name',\n  };\n  middleNameConfig: IOutlineInputeConfig = {\n    size: 'sm',\n    label: 'Middle Name',\n    type: 'text',\n    placeholder: 'Middle',\n    autocomplete: 'additional-name',\n  };\n  lastNameConfig: IOutlineInputeConfig = {\n    size: 'sm',\n    label: 'Last Name',\n    type: 'text',\n    placeholder: 'Last Name',\n    autocomplete: 'family-name',\n  };\n\n  constructor(fb: FormBuilder) {\n    super(fb, 'namedob-form');\n  }\n\n  ngOnInit(): void {}\n  ngOnDestroy(): void {}\n\n  addDays(x: number): string[] {\n    let days: string[] = [];\n    for (let i = x; i > 0; i--) {\n      days = [i.toString(), ...days];\n    }\n    return days;\n  }\n\n  addYears(x: number): string[] {\n    let years: string[] = [];\n    for (let i = x; i > x - 100; i--) {\n      years = [...years, i.toString()];\n    }\n    return years;\n  }\n}\n\nconst months: string[] = [\n  'Jan',\n  'Feb',\n  'Mar',\n  'Apr',\n  'May',\n  'Jun',\n  'Jul',\n  'Aug',\n  'Sep',\n  'Oct',\n  'Nov',\n  'Dec',\n];\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "fb",
                        "type": "FormBuilder"
                    }
                ],
                "line": 53,
                "jsdoctags": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "BaseFormComponent",
            "implements": [
                "OnInit"
            ],
            "templateData": "<form [formGroup]=\"parentForm\" class=\"m-0 p-0\">\n  <div class=\"py-3\">\n    <h6 class=\"brave-h6\">Full Legal Name</h6>\n  </div>\n\n  <div class=\"py-3 pt-0\">\n    <div class=\"grid grid-cols-3 gap-4\">\n      <div class=\"col-span-2\">\n        <brave-outline-input\n          [config]=\"firstNameConfig\"\n          (onComponentReady)=\"addChild('first', $event)\"\n          [required]=\"true\"\n        >\n        </brave-outline-input>\n      </div>\n      <div>\n        <brave-outline-input\n          [config]=\"middleNameConfig\"\n          (onComponentReady)=\"addChild('middle', $event)\"\n          [required]=\"false\"\n        >\n        </brave-outline-input>\n      </div>\n      <div class=\"col-span-3\">\n        <div>\n          <brave-outline-input\n            [config]=\"lastNameConfig\"\n            (onComponentReady)=\"addChild('last', $event)\"\n            [required]=\"true\"\n          >\n          </brave-outline-input>\n          <div *ngIf=\"!hideHint\" class=\"-mt-2\">\n            <div\n              class=\"flex justify-start items-start text-xs text-blueGray-600\"\n            >\n              <span class=\"-mt-1\">&#42;</span>&nbsp;Required\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <!-- section 2 header -->\n  <div class=\"py-3\">\n    <h6 class=\"brave-h6\">Date of Birth<span class=\"-mt-1\">&#42;</span></h6>\n  </div>\n\n  <div class=\"py-3-pt-0\">\n    <div class=\"grid grid-cols-3 gap-2\">\n      <div>\n        <brave-outline-select-input\n          [config]=\"monthConfig\"\n          (onComponentReady)=\"addChild('month', $event)\"\n          [required]=\"true\"\n          [asteriskOverride]=\"true\"\n        >\n        </brave-outline-select-input>\n        <div class=\"-mt-2\">\n          <div class=\"flex justify-start items-start text-xs text-blueGray-600\">\n            <span class=\"-mt-1\">&#42;</span>&nbsp;Required\n          </div>\n        </div>\n      </div>\n      <div>\n        <brave-outline-select-input\n          [config]=\"dayConfig\"\n          (onComponentReady)=\"addChild('day', $event)\"\n          [required]=\"true\"\n          [asteriskOverride]=\"true\"\n        >\n        </brave-outline-select-input>\n      </div>\n      <div>\n        <div>\n          <brave-outline-select-input\n            [config]=\"yearConfig\"\n            (onComponentReady)=\"addChild('year', $event)\"\n            [required]=\"true\"\n            [asteriskOverride]=\"true\"\n          >\n          </brave-outline-select-input>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n"
        },
        {
            "name": "OutlineNameFormComponent",
            "id": "component-OutlineNameFormComponent-a01489bd64aa691eb41ae37df4329d9a",
            "file": "src/app/shared/components/forms/outline-name-form/outline-name-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{ provide: , useValue:  }"
                }
            ],
            "selector": "brave-outline-name-form",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./outline-name-form.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "hideHint",
                    "defaultValue": "false",
                    "line": 16,
                    "type": "boolean",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "onChanges",
                    "defaultValue": "new EventEmitter()",
                    "line": 9,
                    "type": "EventEmitter<any>",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "onSubmit",
                    "defaultValue": "new EventEmitter()",
                    "line": 10,
                    "type": "EventEmitter<FormGroup>",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "onSubmitError",
                    "defaultValue": "new EventEmitter()",
                    "line": 12,
                    "type": "EventEmitter<literal type>",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "firstNameConfig",
                    "defaultValue": "{\n    size: 'sm',\n    label: 'First Name',\n    type: 'text',\n    placeholder: 'First Name',\n    autocomplete: 'give-name',\n  }",
                    "type": "IOutlineInputeConfig",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "lastNameConfig",
                    "defaultValue": "{\n    size: 'sm',\n    label: 'Last Name',\n    type: 'text',\n    placeholder: 'Last Name',\n    autocomplete: 'family-name',\n  }",
                    "type": "IOutlineInputeConfig",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "middleNameConfig",
                    "defaultValue": "{\n    size: 'sm',\n    label: 'Middle Name',\n    type: 'text',\n    placeholder: 'Middle',\n    autocomplete: 'additional-name',\n  }",
                    "type": "IOutlineInputeConfig",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "parentForm",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "addChild",
                    "args": [
                        {
                            "name": "childName",
                            "type": "string"
                        },
                        {
                            "name": "childGroup",
                            "type": "FormGroup"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "jsdoctags": [
                        {
                            "name": "childName",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "childGroup",
                            "type": "FormGroup",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "submitForm",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { BaseFormComponent } from '@shared/components/forms/base-form/base-form.component';\nimport { IOutlineInputeConfig } from '@shared/components/inputs/outline-input/outline-input.component';\n\n@Component({\n  selector: 'brave-outline-name-form',\n  templateUrl: './outline-name-form.component.html',\n  providers: [{ provide: 'name', useValue: 'address-form' }],\n})\nexport class OutlineNameFormComponent extends BaseFormComponent {\n  firstNameConfig: IOutlineInputeConfig = {\n    size: 'sm',\n    label: 'First Name',\n    type: 'text',\n    placeholder: 'First Name',\n    autocomplete: 'give-name',\n  };\n  middleNameConfig: IOutlineInputeConfig = {\n    size: 'sm',\n    label: 'Middle Name',\n    type: 'text',\n    placeholder: 'Middle',\n    autocomplete: 'additional-name',\n  };\n  lastNameConfig: IOutlineInputeConfig = {\n    size: 'sm',\n    label: 'Last Name',\n    type: 'text',\n    placeholder: 'Last Name',\n    autocomplete: 'family-name',\n  };\n\n  constructor(fb: FormBuilder) {\n    super(fb, 'name-form');\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "fb",
                        "type": "FormBuilder"
                    }
                ],
                "line": 32,
                "jsdoctags": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "BaseFormComponent",
            "templateData": "<form [formGroup]=\"parentForm\">\n  <div class=\"grid grid-cols-3 gap-4\">\n    <div class=\"col-span-2\">\n      <brave-outline-input\n        [config]=\"firstNameConfig\"\n        (onComponentReady)=\"addChild('first', $event)\"\n        [required]=\"true\"\n      >\n      </brave-outline-input>\n    </div>\n    <div>\n      <brave-outline-input\n        [config]=\"middleNameConfig\"\n        (onComponentReady)=\"addChild('middle', $event)\"\n        [required]=\"false\"\n      >\n      </brave-outline-input>\n    </div>\n    <div class=\"col-span-3\">\n      <div>\n        <brave-outline-input\n          [config]=\"lastNameConfig\"\n          (onComponentReady)=\"addChild('last', $event)\"\n          [required]=\"true\"\n        >\n        </brave-outline-input>\n        <div *ngIf=\"!hideHint\" class=\"-mt-2\">\n          <div class=\"flex justify-start items-start text-xs text-blueGray-600\">\n            <span class=\"-mt-1\">&#42;</span>&nbsp;Required\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n"
        },
        {
            "name": "OutlineOnecolumnFormComponent",
            "id": "component-OutlineOnecolumnFormComponent-95705504e0cb29060be6b9a507923a51",
            "file": "src/app/shared/components/forms/outline-onecolumn-form/outline-onecolumn-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-outline-onecolumn-form",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./outline-onecolumn-form.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "childFieldConfig",
                    "defaultValue": "{\n    size: 'sm',\n    label: 'Input Label',\n    type: 'text',\n    placeholder: 'Input text',\n    autocomplete: 'off',\n  }",
                    "type": "IOutlineInputeConfig",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "parentForm",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methodsClass": [
                {
                    "name": "addChild",
                    "args": [
                        {
                            "name": "childName",
                            "type": "string"
                        },
                        {
                            "name": "childGroup",
                            "type": "FormGroup"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "jsdoctags": [
                        {
                            "name": "childName",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "childGroup",
                            "type": "FormGroup",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder } from '@angular/forms';\nimport { IOutlineInputeConfig } from '@shared/components/inputs/outline-input/outline-input.component';\n\n@Component({\n  selector: 'brave-outline-onecolumn-form',\n  templateUrl: './outline-onecolumn-form.component.html',\n})\nexport class OutlineOnecolumnFormComponent implements OnInit {\n  parentForm: FormGroup;\n  childFieldConfig: IOutlineInputeConfig = {\n    size: 'sm',\n    label: 'Input Label',\n    type: 'text',\n    placeholder: 'Input text',\n    autocomplete: 'off',\n  };\n\n  constructor(private fb: FormBuilder) {\n    this.parentForm = fb.group({\n      name: ['outline-onecolumn-form'],\n    }); // simple parent form with name of form\n  }\n\n  ngOnInit(): void {}\n\n  addChild(childName: string, childGroup: FormGroup) {\n    this.parentForm.addControl(childName, childGroup);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "fb",
                        "type": "FormBuilder"
                    }
                ],
                "line": 17,
                "jsdoctags": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<form [formGroup]=\"parentForm\">\n  <brave-outline-input\n    [config]=\"childFieldConfig\"\n    (onComponentReady)=\"addChild('inputGroup', $event)\"\n    required=\"true\"\n  >\n  </brave-outline-input>\n  <brave-outline-input\n    [config]=\"childFieldConfig\"\n    (onComponentReady)=\"addChild('inputGroup', $event)\"\n    required=\"true\"\n  >\n  </brave-outline-input>\n  <brave-outline-input\n    [config]=\"childFieldConfig\"\n    (onComponentReady)=\"addChild('inputGroup', $event)\"\n    required=\"true\"\n  >\n  </brave-outline-input>\n  <div>\n    <div class=\"flex justify-end items-end\">\n      <brave-links-onlytext-button>Cancel</brave-links-onlytext-button>\n      <brave-filled-onlytext-button>Continue</brave-filled-onlytext-button>\n    </div>\n  </div>\n</form>\n"
        },
        {
            "name": "OutlineOnlytextButtonComponent",
            "id": "component-OutlineOnlytextButtonComponent-ce3e923fcba436e191c4ced8b5615edb",
            "file": "src/app/shared/components/buttons/outline-onlytext-button/outline-onlytext-button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-outline-onlytext-button",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./outline-onlytext-button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "config",
                    "defaultValue": "{\n    buttonSize: 'base',\n    borderColor: 'border-indigo-800',\n    activeColor: 'bg-indigo-900',\n    hoverColor: 'bg-indigo-800',\n    color: 'text-indigo-800',\n  }",
                    "line": 24,
                    "type": "IOutlineOnlyTextButtonConfig"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\nexport interface IOutlineOnlyTextButtonConfig {\n  buttonSize: string;\n  borderColor: string;\n  activeColor: string;\n  hoverColor: string;\n  color: string;\n}\n\n@Component({\n  selector: 'brave-outline-onlytext-button',\n  templateUrl: './outline-onlytext-button.component.html',\n})\nexport class OutlineOnlytextButtonComponent {\n  /**\n   * @param config Input object for button customization\n   * @param config.buttonSize 'sm', 'base', 'lg'\n   * @param config.borderColor Any global color \"e.g. border-indigo-800\"\n   * @param config.activeColor Any global color \"e.g. bg-indigo-900\"\n   * @param config.hoverColor Any global color \"e.g. bg-indigo-800\"\n   * @param config.color Any global color \"e.g. text-indigo-900\"\n   */\n  @Input() config: IOutlineOnlyTextButtonConfig = {\n    buttonSize: 'base',\n    borderColor: 'border-indigo-800',\n    activeColor: 'bg-indigo-900',\n    hoverColor: 'bg-indigo-800',\n    color: 'text-indigo-800',\n  };\n\n  constructor() {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 30
            },
            "templateData": "<button\n  [ngClass]=\"config | outlineOnlytextButton\"\n  class=\"\n    bg-transparent\n    border border-solid\n    font-bold\n    rounded\n    outline-none\n    focus:outline-none\n    mr-1\n    mb-1\n    ease-linear\n    transition-all\n    duration-150\n  \"\n  type=\"button\"\n>\n  <ng-content></ng-content>\n</button>\n"
        },
        {
            "name": "OutlineOnlytextSelectComponent",
            "id": "component-OutlineOnlytextSelectComponent-6b5257d3bff0f580ecb6a326a9cb481f",
            "file": "src/app/shared/components/dropdowns/selects/outline-onlytext-select/outline-onlytext-select.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-outline-onlytext-select",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./outline-onlytext-select.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "items",
                    "defaultValue": "[]",
                    "line": 12,
                    "type": "IOutlineOnlyTextItem[]"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "isOpen",
                    "defaultValue": "false",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "selected",
                    "type": "IOutlineOnlyTextItem | undefined",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\nexport interface IOutlineOnlyTextItem {\n  value: string;\n}\n\n@Component({\n  selector: 'brave-outline-onlytext-select',\n  templateUrl: './outline-onlytext-select.component.html',\n})\nexport class OutlineOnlytextSelectComponent implements OnInit {\n  @Input() items: IOutlineOnlyTextItem[] = [];\n\n  public selected: IOutlineOnlyTextItem | undefined;\n  public isOpen: boolean = false;\n\n  constructor() {}\n\n  ngOnInit(): void {\n    // this.selected = this.items[0]; // default to first one\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 15
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<button\n  type=\"button\"\n  class=\"relative w-full bg-white border border-gray-300 rounded-md shadow-sm pl-3 pr-10 py-2 text-left cursor-default focus:outline-none focus:ring-1 focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n  aria-haspopup=\"listbox\"\n  aria-expanded=\"true\"\n  aria-labelledby=\"listbox-label\"\n  (click)=\"isOpen = !isOpen\"\n>\n  <span class=\"flex items-center\">\n    <span class=\"ml-3 block truncate\">\n      {{ selected?.value || \"Select item\" }}\n    </span>\n  </span>\n  <span\n    class=\"ml-3 absolute inset-y-0 right-0 flex items-center pr-2 pointer-events-none\"\n  >\n    <svg\n      class=\"h-5 w-5 text-gray-400\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 20 20\"\n      fill=\"currentColor\"\n      aria-hidden=\"true\"\n    >\n      <path\n        fill-rule=\"evenodd\"\n        d=\"M10 3a1 1 0 01.707.293l3 3a1 1 0 01-1.414 1.414L10 5.414 7.707 7.707a1 1 0 01-1.414-1.414l3-3A1 1 0 0110 3zm-3.707 9.293a1 1 0 011.414 0L10 14.586l2.293-2.293a1 1 0 011.414 1.414l-3 3a1 1 0 01-1.414 0l-3-3a1 1 0 010-1.414z\"\n        clip-rule=\"evenodd\"\n      />\n    </svg>\n  </span>\n</button>\n<ul\n  *ngIf=\"isOpen\"\n  class=\"absolute z-10 mt-1 w-full bg-white shadow-lg max-h-56 rounded-md py-1 text-base ring-1 ring-black ring-opacity-5 overflow-auto focus:outline-none sm:text-sm\"\n  tabindex=\"-1\"\n  role=\"listbox\"\n  aria-labelledby=\"listbox-label\"\n  aria-activedescendant=\"listbox-option-3\"\n>\n  <li\n    *ngFor=\"let item of items; index as i\"\n    (click)=\"isOpen = !isOpen; selected = items[i]\"\n    class=\"text-gray-900 cursor-default select-none relative py-2 pl-3 pr-9\"\n    id=\"listbox-option-0\"\n    role=\"option\"\n  >\n    <div class=\"flex items-center\">\n      <span class=\"font-normal ml-3 block truncate\"> {{ item.value }}</span>\n    </div>\n    <span\n      class=\"text-indigo-600 absolute inset-y-0 right-0 flex items-center pr-4\"\n    ></span>\n  </li>\n</ul>\n"
        },
        {
            "name": "OutlinePhoneFormComponent",
            "id": "component-OutlinePhoneFormComponent-bde71c3961e7345088ef1113666cfce7",
            "file": "src/app/shared/components/forms/outline-phone-form/outline-phone-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{ provide: , useValue:  }"
                }
            ],
            "selector": "brave-outline-phone-form",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./outline-phone-form.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "hideHint",
                    "defaultValue": "false",
                    "line": 16,
                    "type": "boolean",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "onChanges",
                    "defaultValue": "new EventEmitter()",
                    "line": 9,
                    "type": "EventEmitter<any>",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "onSubmit",
                    "defaultValue": "new EventEmitter()",
                    "line": 10,
                    "type": "EventEmitter<FormGroup>",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "onSubmitError",
                    "defaultValue": "new EventEmitter()",
                    "line": 12,
                    "type": "EventEmitter<literal type>",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "phoneConfig",
                    "defaultValue": "{\n    size: 'sm',\n    type: 'text',\n    label: 'Phone Number',\n    placeholder: 'Phone Number',\n    autocomplete: 'phone',\n  }",
                    "type": "IOutlineInputeConfig",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "parentForm",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "addChild",
                    "args": [
                        {
                            "name": "childName",
                            "type": "string"
                        },
                        {
                            "name": "childGroup",
                            "type": "FormGroup"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "jsdoctags": [
                        {
                            "name": "childName",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "childGroup",
                            "type": "FormGroup",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "submitForm",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { BaseFormComponent } from '@shared/components/forms/base-form/base-form.component';\nimport { IOutlineInputeConfig } from '@shared/components/inputs/outline-input/outline-input.component';\n\n@Component({\n  selector: 'brave-outline-phone-form',\n  templateUrl: './outline-phone-form.component.html',\n  providers: [{ provide: 'name', useValue: 'phone-form' }],\n})\nexport class OutlinePhoneFormComponent extends BaseFormComponent {\n  public phoneConfig: IOutlineInputeConfig = {\n    size: 'sm',\n    type: 'text',\n    label: 'Phone Number',\n    placeholder: 'Phone Number',\n    autocomplete: 'phone',\n  };\n\n  constructor(fb: FormBuilder) {\n    super(fb, 'phone-form');\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "fb",
                        "type": "FormBuilder"
                    }
                ],
                "line": 18,
                "jsdoctags": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "BaseFormComponent",
            "templateData": "<form [formGroup]=\"parentForm\">\n  <div class=\"grid grid-cols-3 gap-4\">\n    <div class=\"col-span-3\">\n      <brave-outline-input\n        [config]=\"phoneConfig\"\n        (onComponentReady)=\"addChild('phone', $event)\"\n        [required]=\"true\"\n      >\n      </brave-outline-input>\n      <div *ngIf=\"!hideHint\" class=\"-mt-2\">\n        <div class=\"flex justify-start items-start text-xs text-blueGray-600\">\n          <span class=\"-mt-1\">&#42;</span>&nbsp;Required\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n"
        },
        {
            "name": "OutlinePrevnextPaginationComponent",
            "id": "component-OutlinePrevnextPaginationComponent-5fff78be9900c89fdbb1c4c1df85504f",
            "file": "src/app/shared/components/paginations/outline-prevnext-pagination/outline-prevnext-pagination.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-outline-prevnext-pagination",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./outline-prevnext-pagination.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 10
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'brave-outline-prevnext-pagination',\n  templateUrl: './outline-prevnext-pagination.component.html',\n})\nexport class OutlinePrevnextPaginationComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 7
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div\n  class=\"bg-white px-4 py-3 flex items-center justify-between border-t border-gray-200 sm:px-6\"\n>\n  <div class=\"flex-1 flex justify-between sm:hidden\">\n    <a\n      href=\"#\"\n      class=\"relative inline-flex items-center px-4 py-2 border border-indigo-800 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50\"\n    >\n      Previous\n    </a>\n    <a\n      href=\"#\"\n      class=\"ml-3 relative inline-flex items-center px-4 py-2 border border-indigo-800 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50\"\n    >\n      Next\n    </a>\n  </div>\n  <div class=\"hidden sm:flex-1 sm:flex sm:items-center sm:justify-between\">\n    <div></div>\n    <div>\n      <nav class=\"relative z-0 inline-flex\" aria-label=\"Pagination\">\n        <a\n          href=\"#\"\n          class=\"relative inline-flex items-center m-1 px-2 py-2 rounded-l-md border-none bg-white text-sm font-medium hover:bg-gray-50\"\n        >\n          <span class=\"sr-only\">Previous</span>\n          <!-- Heroicon name: solid/chevron-left -->\n          <span class=\"material-icons text-indigo-800\">navigate_before</span>\n          <!-- <svg\n            class=\"h-5 w-5\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 20 20\"\n            fill=\"currentColor\"\n            aria-hidden=\"true\"\n          >\n            <path\n              fill-rule=\"evenodd\"\n              d=\"M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z\"\n              clip-rule=\"evenodd\"\n            />\n          </svg> -->\n        </a>\n        <!-- Current: \"z-10 bg-indigo-50 border-indigo-500 text-indigo-600\", Default: \"bg-white border-gray-300 text-gray-500 hover:bg-gray-50\" -->\n        <a\n          href=\"#\"\n          aria-current=\"page\"\n          class=\"z-10 bg-indigo-800 border-indigo-800 rounded-md text-white relative inline-flex items-center m-1 px-2 py-2 border text-sm font-medium\"\n        >\n          <div class=\"w-4 h-4 flex justify-center items-center\">1</div>\n        </a>\n        <a\n          href=\"#\"\n          class=\"bg-white border-indigo-800 font-sans rounded-md font-semibold text-sm text-indigo-800 hover:bg-gray-50 relative inline-flex items-center m-1 px-2 py-2 border\"\n        >\n          <div class=\"w-4 h-4 flex justify-center items-center\">2</div>\n        </a>\n        <a\n          href=\"#\"\n          class=\"bg-white border-indigo-800 font-sans rounded-md font-semibold text-sm text-indigo-800 hover:bg-gray-50 hidden md:inline-flex relative items-center m-1 px-2 py-2 border\"\n        >\n          <div class=\"w-4 h-4 flex justify-center items-center\">3</div>\n        </a>\n        <span\n          class=\"relative inline-flex items-center m-1 px-2 py-2 border border-indigo-800 rounded-md bg-white text-sm font-medium text-gray-700\"\n        >\n          <div class=\"w-4 h-4 flex justify-center items-center\">...</div>\n        </span>\n        <a\n          href=\"#\"\n          class=\"bg-white border-indigo-800 font-sans rounded-md font-semibold text-sm text-indigo-800 hover:bg-gray-50 hidden md:inline-flex relative items-center m-1 px-2 py-2 border\"\n        >\n          <div class=\"w-4 h-4 flex justify-center items-center\">8</div>\n        </a>\n        <a\n          href=\"#\"\n          class=\"bg-white border-indigo-800 font-sans rounded-md font-semibold text-sm text-indigo-800 hover:bg-gray-50 relative inline-flex items-center m-1 px-2 py-2 border\"\n        >\n          <div class=\"w-4 h-4 flex justify-center items-center\">9</div>\n        </a>\n        <a\n          href=\"#\"\n          class=\"bg-white border-indigo-800 font-sans rounded-md font-semibold text-sm text-indigo-800 hover:bg-gray-50 relative inline-flex items-center m-1 px-2 py-2 border\"\n        >\n          <div class=\"w-4 h-4 flex justify-center items-center\">10</div>\n        </a>\n        <a\n          href=\"#\"\n          class=\"relative inline-flex items-center m-1 px-2 py-2 rounded-r-md border-none bg-white text-sm font-medium hover:bg-gray-50\"\n        >\n          <span class=\"sr-only\">Next</span>\n          <!-- Heroicon name: solid/chevron-right -->\n          <span class=\"material-icons text-indigo-800\">navigate_next</span>\n          <!-- <svg\n            class=\"h-5 w-5\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 20 20\"\n            fill=\"currentColor\"\n            aria-hidden=\"true\"\n          >\n            <path\n              fill-rule=\"evenodd\"\n              d=\"M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z\"\n              clip-rule=\"evenodd\"\n            />\n          </svg> -->\n        </a>\n      </nav>\n    </div>\n  </div>\n</div>\n"
        },
        {
            "name": "OutlineSelectInputComponent",
            "id": "component-OutlineSelectInputComponent-88e5000bfa0da78c9538b913ace1641d",
            "file": "src/app/shared/components/inputs/outline-select-input/outline-select-input.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-outline-select-input",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./outline-select-input.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "asteriskOverride",
                    "line": 49
                },
                {
                    "name": "config",
                    "defaultValue": "{\n    size: 'base',\n    label: 'Input label',\n    autocomplete: 'off',\n    options: ['one', 'two', 'three'],\n  }",
                    "line": 27,
                    "type": "IOutlineSelectInputConfig"
                },
                {
                    "name": "required",
                    "line": 38
                }
            ],
            "outputsClass": [
                {
                    "name": "onComponentReady",
                    "defaultValue": "new EventEmitter<FormGroup>()",
                    "line": 58,
                    "type": "EventEmitter<FormGroup>"
                },
                {
                    "name": "valueChanged",
                    "defaultValue": "new EventEmitter()",
                    "line": 56,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "_asteriskOverride",
                    "defaultValue": "false",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "_required",
                    "defaultValue": "false",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "componentFormGroup",
                    "defaultValue": "new FormBuilder().group({\n    input: [''],\n  })",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 60,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "hidden",
                    "defaultValue": "false",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 64,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "isOpen",
                    "defaultValue": "false",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "locked",
                    "defaultValue": "false",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 63,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "selected",
                    "type": "string | undefined",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 68
                },
                {
                    "name": "toggleOpen",
                    "args": [
                        {
                            "name": "e",
                            "type": "MouseEvent"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 86,
                    "description": "<p>Toggles open and close select options</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 2320,
                                "end": 2321,
                                "flags": 0,
                                "escapedText": "e"
                            },
                            "type": "MouseEvent",
                            "tagName": {
                                "pos": 2314,
                                "end": 2319,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": "<p>MouseEvent to stop propagation.</p>\n"
                        }
                    ]
                },
                {
                    "name": "updateForm",
                    "args": [
                        {
                            "name": "idx",
                            "type": "number"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 95,
                    "description": "<p>Updates the form with the selected option value</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 2529,
                                "end": 2532,
                                "flags": 0,
                                "escapedText": "idx"
                            },
                            "type": "number",
                            "tagName": {
                                "pos": 2523,
                                "end": 2528,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": "<p>index of the select option clicked on</p>\n"
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\nexport interface IOutlineSelectInputConfig {\n  size: string;\n  label: string;\n  autocomplete: string;\n  options: string[];\n}\n\n@Component({\n  selector: 'brave-outline-select-input',\n  templateUrl: './outline-select-input.component.html',\n})\nexport class OutlineSelectInputComponent implements OnInit {\n  private _required: boolean = false;\n  private _asteriskOverride: boolean = false;\n  public selected: string | undefined;\n  public isOpen: boolean = false;\n\n  /**\n   * @param Config Object to pass in component params\n   * @param config.size 'sm', 'base', 'lg'\n   * @param config.label Label text (default: 'Input label')\n   * @param config.options select options to choose from\n   */\n  @Input() config: IOutlineSelectInputConfig = {\n    size: 'base',\n    label: 'Input label',\n    autocomplete: 'off',\n    options: ['one', 'two', 'three'],\n  };\n\n  /**\n   * @input Flag to make the input field required for form to be valid\n   */\n  @Input()\n  get required() {\n    return this._required;\n  }\n  set required(value: any) {\n    this._required = !!value;\n  }\n\n  /**\n   * @input Flag to override the display of an asterisk but still make it required\n   */\n  @Input()\n  get asteriskOverride() {\n    return this._asteriskOverride;\n  }\n  set asteriskOverride(value: any) {\n    this._asteriskOverride = !!value;\n  }\n\n  @Output() valueChanged: EventEmitter<any> = new EventEmitter();\n  @Output()\n  onComponentReady: EventEmitter<FormGroup> = new EventEmitter<FormGroup>();\n\n  public componentFormGroup: FormGroup = new FormBuilder().group({\n    input: [''],\n  });\n  public locked: boolean = false;\n  public hidden: boolean = false;\n\n  constructor(private fb: FormBuilder) {}\n\n  ngOnInit(): void {\n    const validators = [];\n    if (this.required) {\n      validators.push(Validators.required);\n    }\n    this.componentFormGroup = this.fb.group({\n      input: [this.config.label, validators], // default to first item in array\n    });\n    this.componentFormGroup.controls.input.valueChanges.subscribe((value) => {\n      this.valueChanged.emit(value);\n    });\n    this.onComponentReady.emit(this.componentFormGroup);\n  }\n\n  /**\n   * Toggles open and close select options\n   * @param e MouseEvent to stop propagation.\n   */\n  toggleOpen(e: MouseEvent): void {\n    e.stopPropagation();\n    this.isOpen = !this.isOpen;\n  }\n\n  /**\n   * Updates the form with the selected option value\n   * @param idx index of the select option clicked on\n   */\n  updateForm(idx: number): void {\n    this.componentFormGroup.setValue({ input: this.config.options[idx] });\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "fb",
                        "type": "FormBuilder"
                    }
                ],
                "line": 64,
                "jsdoctags": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "required": {
                    "name": "required",
                    "setSignature": {
                        "name": "required",
                        "type": "void",
                        "args": [
                            {
                                "name": "value",
                                "type": "any"
                            }
                        ],
                        "returnType": "void",
                        "line": 41,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "any",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "asteriskOverride": {
                    "name": "asteriskOverride",
                    "setSignature": {
                        "name": "asteriskOverride",
                        "type": "void",
                        "args": [
                            {
                                "name": "value",
                                "type": "any"
                            }
                        ],
                        "returnType": "void",
                        "line": 52,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "any",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                }
            },
            "templateData": "<form [formGroup]=\"componentFormGroup\">\n  <div class=\"mb-5 pt-0\">\n    <label\n      for=\"select_field\"\n      class=\"block mb-2.5 text-sm text-blueGray-600 whitespace-nowrap\"\n      >{{ config?.label\n      }}<span *ngIf=\"required && !asteriskOverride\" class=\"-mt-1\"\n        >&#42;</span\n      ></label\n    >\n    <div\n      [ngClass]=\"config | outlineSelectInput\"\n      class=\"relative bg-white rounded border border-blueGray-300 outline-none w-full\"\n      (click)=\"toggleOpen($event)\"\n    >\n      <input\n        #selectInput\n        name=\"select_field\"\n        formControlName=\"input\"\n        [autocomplete]=\"config?.autocomplete || 'off'\"\n        style=\"width: 0px; height: 0px\"\n        class=\"absolute\"\n      />\n      <div\n        class=\"flex justify-between items-center w-full hover:cursor-pointer\"\n      >\n        <span\n          [ngClass]=\"{\n            'text-blueGray-300': selectInput.value === config.label,\n            'text-blueGray-600': selectInput.value !== config.label\n          }\"\n          >{{ selectInput.value || \"Select item\" }}</span\n        >\n        <span class=\"material-icons text-blueGray-600\">expand_more</span>\n      </div>\n      <ul\n        *ngIf=\"isOpen\"\n        class=\"absolute z-10 mt-2 -ml-1 w-full bg-white text-blueGray-600 shadow-lg max-h-56 rounded-md py-1 text-base ring-1 ring-black ring-opacity-5 overflow-auto focus:outline-none sm:text-sm\"\n      >\n        <li\n          *ngFor=\"let opt of config.options; index as i\"\n          (click)=\"toggleOpen($event); updateForm(i)\"\n          class=\"bg-white hover:bg-gray-50 hover:cursor-pointer my-2\"\n        >\n          <div class=\"flex items-center\">\n            <span class=\"font-normal ml-3 block truncate\"> {{ opt }}</span>\n          </div>\n        </li>\n      </ul>\n    </div>\n  </div>\n</form>\n"
        },
        {
            "name": "OutlineTooltipComponent",
            "id": "component-OutlineTooltipComponent-3a23872d45b5d3969300db3a1fee5090",
            "file": "src/app/shared/components/tooltips/outline-tooltip/outline-tooltip.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-outline-tooltip",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./outline-tooltip.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "body",
                    "defaultValue": "'Body'",
                    "line": 10,
                    "type": "string"
                },
                {
                    "name": "position",
                    "defaultValue": "'top'",
                    "line": 11,
                    "type": "Placement"
                },
                {
                    "name": "title",
                    "defaultValue": "'Title'",
                    "line": 9,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\nimport { Placement } from '@popperjs/core';\n\n@Component({\n  selector: 'brave-outline-tooltip',\n  templateUrl: './outline-tooltip.component.html',\n})\nexport class OutlineTooltipComponent implements OnInit {\n  @Input() title: string = 'Title';\n  @Input() body: string = 'Body';\n  @Input() position: Placement = 'top';\n\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 11
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"flex flex-wrap\">\n  <div class=\"w-full text-center\" style=\"margin-top: 40vh\">\n    <button\n      braveOutlineTooltip\n      [title]=\"title\"\n      [body]=\"body\"\n      [position]=\"position\"\n      class=\"bg-red-500 text-white active:bg-red-600 font-bold uppercase text-sm px-6 py-3 rounded shadow hover:shadow-lg outline-none focus:outline-none mr-1 mb-1 ease-linear transition-all duration-150\"\n      type=\"button\"\n    >\n      top red\n    </button>\n  </div>\n</div>\n"
        },
        {
            "name": "OutlineVerificationcodeFormComponent",
            "id": "component-OutlineVerificationcodeFormComponent-f8149769b9af077b89efa46f95acf7b9",
            "file": "src/app/shared/components/forms/outline-verificationcode-form/outline-verificationcode-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{ provide: , useValue:  }"
                }
            ],
            "selector": "brave-outline-verificationcode-form",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./outline-verificationcode-form.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "hideHint",
                    "defaultValue": "false",
                    "line": 16,
                    "type": "boolean",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "onChanges",
                    "defaultValue": "new EventEmitter()",
                    "line": 9,
                    "type": "EventEmitter<any>",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "onSubmit",
                    "defaultValue": "new EventEmitter()",
                    "line": 10,
                    "type": "EventEmitter<FormGroup>",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "onSubmitError",
                    "defaultValue": "new EventEmitter()",
                    "line": 12,
                    "type": "EventEmitter<literal type>",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "codeConfig",
                    "defaultValue": "{\n    size: 'sm',\n    type: 'text',\n    label: 'Code',\n    placeholder: '5-digit Code',\n    autocomplete: 'off',\n  }",
                    "type": "IOutlineInputeConfig",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "parentForm",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "addChild",
                    "args": [
                        {
                            "name": "childName",
                            "type": "string"
                        },
                        {
                            "name": "childGroup",
                            "type": "FormGroup"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "jsdoctags": [
                        {
                            "name": "childName",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "childGroup",
                            "type": "FormGroup",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "submitForm",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { BaseFormComponent } from '@shared/components/forms/base-form/base-form.component';\nimport { IOutlineInputeConfig } from '@shared/components/inputs/outline-input/outline-input.component';\n\n@Component({\n  selector: 'brave-outline-verificationcode-form',\n  templateUrl: './outline-verificationcode-form.component.html',\n  providers: [{ provide: 'name', useValue: 'code-form' }],\n})\nexport class OutlineVerificationcodeFormComponent extends BaseFormComponent {\n  public codeConfig: IOutlineInputeConfig = {\n    size: 'sm',\n    type: 'text',\n    label: 'Code',\n    placeholder: '5-digit Code',\n    autocomplete: 'off',\n  };\n\n  constructor(fb: FormBuilder) {\n    super(fb, 'code-form');\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "fb",
                        "type": "FormBuilder"
                    }
                ],
                "line": 18,
                "jsdoctags": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "BaseFormComponent",
            "templateData": "<form [formGroup]=\"parentForm\">\n  <div class=\"grid grid-cols-3 gap-4\">\n    <div class=\"col-span-3\">\n      <brave-outline-input\n        [config]=\"codeConfig\"\n        (onComponentReady)=\"addChild('code', $event)\"\n        [required]=\"true\"\n      >\n      </brave-outline-input>\n      <div *ngIf=\"!hideHint\" class=\"-mt-2\">\n        <div class=\"flex justify-start items-start text-xs text-blueGray-600\">\n          <span class=\"-mt-1\">&#42;</span>&nbsp;Required\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n"
        },
        {
            "name": "PagesDropdownComponent",
            "id": "component-PagesDropdownComponent-f098dee3452088ee9f5921f39191f1b9",
            "file": "src/app/shared/components/dropdowns/popdowns/pages-dropdown/pages-dropdown.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-pages-dropdown",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./pages-dropdown.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "btnDropdownRef",
                    "type": "ElementRef | undefined",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'btnDropdownRef', {static: false}"
                        }
                    ]
                },
                {
                    "name": "dropdownPopoverShow",
                    "defaultValue": "false",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "popoverDropdownRef",
                    "type": "ElementRef | undefined",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'popoverDropdownRef', {static: false}"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "createPoppper",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15
                },
                {
                    "name": "toggleDropdown",
                    "args": [
                        {
                            "name": "event",
                            "type": "literal type"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "literal type",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { createPopper } from '@popperjs/core';\n\n@Component({\n  selector: 'brave-pages-dropdown',\n  templateUrl: './pages-dropdown.component.html',\n})\nexport class PagesDropdownComponent implements OnInit {\n  dropdownPopoverShow = false;\n  @ViewChild('btnDropdownRef', { static: false }) btnDropdownRef:\n    | ElementRef\n    | undefined;\n  @ViewChild('popoverDropdownRef', { static: false })\n  popoverDropdownRef: ElementRef | undefined;\n  ngOnInit() {}\n  toggleDropdown(event: { preventDefault: () => void }) {\n    event.preventDefault();\n    if (this.dropdownPopoverShow) {\n      this.dropdownPopoverShow = false;\n    } else {\n      this.dropdownPopoverShow = true;\n      this.createPoppper();\n    }\n  }\n  createPoppper() {\n    createPopper(\n      this.btnDropdownRef?.nativeElement,\n      this.popoverDropdownRef?.nativeElement,\n      {\n        placement: 'bottom-start',\n      }\n    );\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<a\n  class=\"lg:text-white lg:hover:text-blueGray-200 text-blueGray-700 px-3 py-4 lg:py-2 flex items-center text-xs uppercase font-bold\"\n  href=\"#pablo\"\n  (click)=\"toggleDropdown($event)\"\n  #btnDropdownRef\n>\n  Demo Pages\n</a>\n<div\n  class=\"bg-white text-base z-50 float-left py-2 list-none text-left rounded shadow-lg min-w-48\"\n  [ngClass]=\"dropdownPopoverShow ? 'block' : 'hidden'\"\n  #popoverDropdownRef\n>\n  <span\n    class=\"text-sm pt-2 pb-0 px-4 font-bold block w-full whitespace-nowrap bg-transparent text-blueGray-400\"\n  >\n    Admin Layout\n  </span>\n  <a\n    [routerLink]=\"['/admin/dashboard']\"\n    class=\"text-sm py-2 px-4 font-normal block w-full whitespace-nowrap bg-transparent text-blueGray-700\"\n  >\n    Dashboard\n  </a>\n  <a\n    [routerLink]=\"['/admin/settings']\"\n    class=\"text-sm py-2 px-4 font-normal block w-full whitespace-nowrap bg-transparent text-blueGray-700\"\n  >\n    Settings\n  </a>\n  <a\n    [routerLink]=\"['/admin/tables']\"\n    class=\"text-sm py-2 px-4 font-normal block w-full whitespace-nowrap bg-transparent text-blueGray-700\"\n  >\n    Tables\n  </a>\n  <a\n    [routerLink]=\"['/admin/maps']\"\n    class=\"text-sm py-2 px-4 font-normal block w-full whitespace-nowrap bg-transparent text-blueGray-700\"\n  >\n    Maps\n  </a>\n  <div class=\"h-0 mx-4 my-2 border border-solid border-blueGray-100\"></div>\n  <span\n    class=\"text-sm pt-2 pb-0 px-4 font-bold block w-full whitespace-nowrap bg-transparent text-blueGray-400\"\n  >\n    Auth Layout\n  </span>\n  <a\n    [routerLink]=\"['/auth/login']\"\n    class=\"text-sm py-2 px-4 font-normal block w-full whitespace-nowrap bg-transparent text-blueGray-700\"\n  >\n    Login\n  </a>\n  <a\n    [routerLink]=\"['/auth/register']\"\n    class=\"text-sm py-2 px-4 font-normal block w-full whitespace-nowrap bg-transparent text-blueGray-700\"\n  >\n    Register\n  </a>\n  <div class=\"h-0 mx-4 my-2 border border-solid border-blueGray-100\"></div>\n  <span\n    class=\"text-sm pt-2 pb-0 px-4 font-bold block w-full whitespace-nowrap bg-transparent text-blueGray-400\"\n  >\n    No Layout\n  </span>\n  <a\n    [routerLink]=\"['/landing']\"\n    class=\"text-sm py-2 px-4 font-normal block w-full whitespace-nowrap bg-transparent text-blueGray-700\"\n  >\n    Landing\n  </a>\n  <a\n    [routerLink]=\"['/profile']\"\n    class=\"text-sm py-2 px-4 font-normal block w-full whitespace-nowrap bg-transparent text-blueGray-700\"\n  >\n    Profile\n  </a>\n</div>\n"
        },
        {
            "name": "SelectDobFormComponent",
            "id": "component-SelectDobFormComponent-0df5ad67b87762940adda112def32ffd",
            "file": "src/app/shared/components/forms/select-dob-form/select-dob-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{ provide: , useValue:  }"
                }
            ],
            "selector": "brave-select-dob-form",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./select-dob-form.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "hideHint",
                    "defaultValue": "false",
                    "line": 16,
                    "type": "boolean",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "onChanges",
                    "defaultValue": "new EventEmitter()",
                    "line": 9,
                    "type": "EventEmitter<any>",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "onSubmit",
                    "defaultValue": "new EventEmitter()",
                    "line": 10,
                    "type": "EventEmitter<FormGroup>",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "onSubmitError",
                    "defaultValue": "new EventEmitter()",
                    "line": 12,
                    "type": "EventEmitter<literal type>",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "dayConfig",
                    "defaultValue": "{\n    size: 'sm',\n    label: 'Day',\n    autocomplete: 'off',\n    options: this.addDays(31),\n  }",
                    "type": "IOutlineSelectInputConfig",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "monthConfig",
                    "defaultValue": "{\n    size: 'sm',\n    label: 'Month',\n    autocomplete: 'off',\n    options: months,\n  }",
                    "type": "IOutlineSelectInputConfig",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "yearConfig",
                    "defaultValue": "{\n    size: 'sm',\n    label: 'Year',\n    autocomplete: 'off',\n    options: this.addYears(new Date().getFullYear()),\n  }",
                    "type": "IOutlineSelectInputConfig",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "parentForm",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "addDays",
                    "args": [
                        {
                            "name": "x",
                            "type": "number"
                        }
                    ],
                    "optional": false,
                    "returnType": "string[]",
                    "typeParameters": [],
                    "line": 34,
                    "jsdoctags": [
                        {
                            "name": "x",
                            "type": "number",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "addYears",
                    "args": [
                        {
                            "name": "x",
                            "type": "number"
                        }
                    ],
                    "optional": false,
                    "returnType": "string[]",
                    "typeParameters": [],
                    "line": 42,
                    "jsdoctags": [
                        {
                            "name": "x",
                            "type": "number",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "addChild",
                    "args": [
                        {
                            "name": "childName",
                            "type": "string"
                        },
                        {
                            "name": "childGroup",
                            "type": "FormGroup"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "jsdoctags": [
                        {
                            "name": "childName",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "childGroup",
                            "type": "FormGroup",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "submitForm",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { BaseFormComponent } from '@shared/components/forms/base-form/base-form.component';\nimport { IOutlineSelectInputConfig } from '@shared/components/inputs/outline-select-input/outline-select-input.component';\n\n@Component({\n  selector: 'brave-select-dob-form',\n  templateUrl: './select-dob-form.component.html',\n  providers: [{ provide: 'name', useValue: 'dob-form' }],\n})\nexport class SelectDobFormComponent extends BaseFormComponent {\n  monthConfig: IOutlineSelectInputConfig = {\n    size: 'sm',\n    label: 'Month',\n    autocomplete: 'off',\n    options: months,\n  };\n  dayConfig: IOutlineSelectInputConfig = {\n    size: 'sm',\n    label: 'Day',\n    autocomplete: 'off',\n    options: this.addDays(31),\n  };\n  yearConfig: IOutlineSelectInputConfig = {\n    size: 'sm',\n    label: 'Year',\n    autocomplete: 'off',\n    options: this.addYears(new Date().getFullYear()),\n  };\n  constructor(fb: FormBuilder) {\n    super(fb, 'dob-form');\n  }\n\n  addDays(x: number): string[] {\n    let days: string[] = [];\n    for (let i = x; i > 0; i--) {\n      days = [i.toString(), ...days];\n    }\n    return days;\n  }\n\n  addYears(x: number): string[] {\n    let years: string[] = [];\n    for (let i = x; i > x - 100; i--) {\n      years = [...years, i.toString()];\n    }\n    return years;\n  }\n}\n\nconst months: string[] = [\n  'Jan',\n  'Feb',\n  'Mar',\n  'Apr',\n  'May',\n  'Jun',\n  'Jul',\n  'Aug',\n  'Sep',\n  'Oct',\n  'Nov',\n  'Dec',\n];\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "fb",
                        "type": "FormBuilder"
                    }
                ],
                "line": 29,
                "jsdoctags": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "BaseFormComponent",
            "templateData": "<form [formGroup]=\"parentForm\">\n  <div class=\"grid grid-cols-3 gap-2\">\n    <div>\n      <brave-outline-select-input\n        [config]=\"monthConfig\"\n        (onComponentReady)=\"addChild('month', $event)\"\n        [required]=\"true\"\n        [asteriskOverride]=\"true\"\n      >\n      </brave-outline-select-input>\n      <div class=\"-mt-2\">\n        <div class=\"flex justify-start items-start text-xs text-blueGray-600\">\n          <span class=\"-mt-1\">&#42;</span>&nbsp;Required\n        </div>\n      </div>\n    </div>\n    <div>\n      <brave-outline-select-input\n        [config]=\"dayConfig\"\n        (onComponentReady)=\"addChild('day', $event)\"\n        [required]=\"true\"\n        [asteriskOverride]=\"true\"\n      >\n      </brave-outline-select-input>\n    </div>\n    <div>\n      <div>\n        <brave-outline-select-input\n          [config]=\"yearConfig\"\n          (onComponentReady)=\"addChild('year', $event)\"\n          [required]=\"true\"\n          [asteriskOverride]=\"true\"\n        >\n        </brave-outline-select-input>\n      </div>\n    </div>\n  </div>\n</form>\n"
        },
        {
            "name": "SidebarComponent",
            "id": "component-SidebarComponent-8a7928395104b7aaab3d229b85f72c5d",
            "file": "src/app/shared/components/sidebar/sidebar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-sidebar",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./sidebar.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "collapseShow",
                    "defaultValue": "'hidden'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 11
                },
                {
                    "name": "toggleCollapseShow",
                    "args": [
                        {
                            "name": "classes",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "jsdoctags": [
                        {
                            "name": "classes",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'brave-sidebar',\n  templateUrl: './sidebar.component.html',\n})\nexport class SidebarComponent implements OnInit {\n  collapseShow = 'hidden';\n  constructor() {}\n\n  ngOnInit() {}\n  toggleCollapseShow(classes: string) {\n    this.collapseShow = classes;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<nav\n  class=\"md:left-0 md:block md:fixed md:top-0 md:bottom-0 md:overflow-y-auto md:flex-row md:flex-nowrap md:overflow-hidden shadow-xl bg-white flex flex-wrap items-center justify-between relative md:w-64 z-10 py-4 px-6\"\n>\n  <div\n    class=\"md:flex-col md:items-stretch md:min-h-full md:flex-nowrap px-0 flex flex-wrap items-center justify-between w-full mx-auto\"\n  >\n    <!-- Toggler -->\n    <button\n      class=\"cursor-pointer text-black opacity-50 md:hidden px-3 py-1 text-xl leading-none bg-transparent rounded border border-solid border-transparent\"\n      type=\"button\"\n      (click)=\"toggleCollapseShow('bg-white m-2 py-3 px-6')\"\n    >\n      <i class=\"fas fa-bars\"></i>\n    </button>\n    <!-- Brand -->\n    <a\n      [routerLink]=\"['/']\"\n      class=\"md:block text-left md:pb-2 text-blueGray-600 mr-0 inline-block whitespace-nowrap text-sm uppercase font-bold p-4 px-0\"\n    >\n      <span class=\"block sm:hidden\"> Tailwind Angular </span>\n      <span class=\"hidden sm:block\"> Notus Angular </span>\n    </a>\n    <!-- User -->\n    <ul class=\"md:hidden items-center flex flex-wrap list-none\">\n      <li class=\"inline-block relative\">\n        <brave-notification-dropdown\n          class=\"block\"\n        ></brave-notification-dropdown>\n      </li>\n      <li class=\"inline-block relative\">\n        <brave-user-dropdown class=\"block\"></brave-user-dropdown>\n      </li>\n    </ul>\n    <!-- Collapse -->\n    <div\n      class=\"md:flex md:flex-col md:items-stretch md:opacity-100 md:relative md:mt-4 md:shadow-none shadow absolute top-0 left-0 right-0 z-40 overflow-y-auto overflow-x-hidden h-auto items-center flex-1 rounded\"\n      [ngClass]=\"collapseShow\"\n    >\n      <!-- Collapse header -->\n      <div\n        class=\"md:min-w-full md:hidden block pb-4 mb-4 border-b border-solid border-blueGray-200\"\n      >\n        <div class=\"flex flex-wrap\">\n          <div class=\"w-6/12\">\n            <a\n              [routerLink]=\"['/']\"\n              class=\"md:block text-left md:pb-2 text-blueGray-600 mr-0 inline-block whitespace-nowrap text-sm uppercase font-bold p-4 px-0\"\n            >\n              Notus Angular\n            </a>\n          </div>\n          <div class=\"w-6/12 flex justify-end\">\n            <button\n              type=\"button\"\n              class=\"cursor-pointer text-black opacity-50 md:hidden px-3 py-1 text-xl leading-none bg-transparent rounded border border-solid border-transparent\"\n              (click)=\"toggleCollapseShow('hidden')\"\n            >\n              <i class=\"fas fa-times\"></i>\n            </button>\n          </div>\n        </div>\n      </div>\n      <!-- Form -->\n      <form class=\"mt-6 mb-4 md:hidden\">\n        <div class=\"mb-3 pt-0\">\n          <input\n            type=\"text\"\n            placeholder=\"Search\"\n            class=\"border-0 px-3 py-2 h-12 border border-solid border-blueGray-500 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-base leading-snug shadow-none outline-none focus:outline-none w-full font-normal\"\n          />\n        </div>\n      </form>\n\n      <!-- Divider -->\n      <hr class=\"my-4 md:min-w-full\" />\n      <!-- Heading -->\n      <h6\n        class=\"md:min-w-full text-blueGray-500 text-xs uppercase font-bold block pt-1 pb-4 no-underline\"\n      >\n        Admin Layout Pages\n      </h6>\n      <!-- Navigation -->\n\n      <ul class=\"md:flex-col md:min-w-full flex flex-col list-none\">\n        <li class=\"items-center\">\n          <a\n            [routerLink]=\"['/admin/dashboard']\"\n            class=\"text-xs uppercase py-3 font-bold block\"\n            routerLinkActive\n            #adminDashboard=\"routerLinkActive\"\n            [ngClass]=\"\n              adminDashboard.isActive\n                ? 'text-red-600 hover:text-red-700'\n                : 'text-blueGray-700 hover:text-blueGray-500'\n            \"\n          >\n            <i\n              class=\"fas fa-tv mr-2 text-sm\"\n              [ngClass]=\"\n                adminDashboard.isActive ? 'opacity-75' : 'text-blueGray-300'\n              \"\n            ></i>\n            Dashboard\n          </a>\n        </li>\n\n        <li class=\"items-center\">\n          <a\n            [routerLink]=\"['/admin/settings']\"\n            class=\"text-xs uppercase py-3 font-bold block\"\n            routerLinkActive\n            #adminSettings=\"routerLinkActive\"\n            [ngClass]=\"\n              adminSettings.isActive\n                ? 'text-red-600 hover:text-red-700'\n                : 'text-blueGray-700 hover:text-blueGray-500'\n            \"\n          >\n            <i\n              class=\"fas fa-tools mr-2 text-sm\"\n              [ngClass]=\"\n                adminSettings.isActive ? 'opacity-75' : 'text-blueGray-300'\n              \"\n            ></i>\n            Settings\n          </a>\n        </li>\n\n        <li class=\"items-center\">\n          <a\n            [routerLink]=\"['/admin/tables']\"\n            class=\"text-xs uppercase py-3 font-bold block\"\n            routerLinkActive\n            #adminTables=\"routerLinkActive\"\n            [ngClass]=\"\n              adminTables.isActive\n                ? 'text-red-600 hover:text-red-700'\n                : 'text-blueGray-700 hover:text-blueGray-500'\n            \"\n          >\n            <i\n              class=\"fas fa-table mr-2 text-sm\"\n              [ngClass]=\"\n                adminTables.isActive ? 'opacity-75' : 'text-blueGray-300'\n              \"\n            ></i>\n            Tables\n          </a>\n        </li>\n\n        <li class=\"items-center\">\n          <a\n            [routerLink]=\"['/admin/maps']\"\n            class=\"text-xs uppercase py-3 font-bold block\"\n            routerLinkActive\n            #adminMaps=\"routerLinkActive\"\n            [ngClass]=\"\n              adminMaps.isActive\n                ? 'text-red-600 hover:text-red-700'\n                : 'text-blueGray-700 hover:text-blueGray-500'\n            \"\n          >\n            <i\n              class=\"fas fa-map-marked mr-2 text-sm\"\n              [ngClass]=\"\n                adminMaps.isActive ? 'opacity-75' : 'text-blueGray-300'\n              \"\n            ></i>\n            Maps\n          </a>\n        </li>\n      </ul>\n\n      <!-- Divider -->\n      <hr class=\"my-4 md:min-w-full\" />\n      <!-- Heading -->\n      <h6\n        class=\"md:min-w-full text-blueGray-500 text-xs uppercase font-bold block pt-1 pb-4 no-underline\"\n      >\n        Auth Layout Pages\n      </h6>\n      <!-- Navigation -->\n\n      <ul class=\"md:flex-col md:min-w-full flex flex-col list-none md:mb-4\">\n        <li class=\"items-center\">\n          <a\n            [routerLink]=\"['/auth/login']\"\n            class=\"text-blueGray-700 hover:text-blueGray-500 text-xs uppercase py-3 font-bold block\"\n          >\n            <i class=\"fas fa-fingerprint text-blueGray-300 mr-2 text-sm\"></i>\n            Login\n          </a>\n        </li>\n\n        <li class=\"items-center\">\n          <a\n            [routerLink]=\"['/auth/register']\"\n            class=\"text-blueGray-700 hover:text-blueGray-500 text-xs uppercase py-3 font-bold block\"\n          >\n            <i class=\"fas fa-clipboard-list text-blueGray-300 mr-2 text-sm\"></i>\n            Register\n          </a>\n        </li>\n      </ul>\n\n      <!-- Divider -->\n      <hr class=\"my-4 md:min-w-full\" />\n      <!-- Heading -->\n      <h6\n        class=\"md:min-w-full text-blueGray-500 text-xs uppercase font-bold block pt-1 pb-4 no-underline\"\n      >\n        No Layout Pages\n      </h6>\n      <!-- Navigation -->\n\n      <ul class=\"md:flex-col md:min-w-full flex flex-col list-none md:mb-4\">\n        <li class=\"items-center\">\n          <a\n            [routerLink]=\"['/landing']\"\n            class=\"text-blueGray-700 hover:text-blueGray-500 text-xs uppercase py-3 font-bold block\"\n          >\n            <i class=\"fas fa-newspaper text-blueGray-300 mr-2 text-sm\"></i>\n            Landing Page\n          </a>\n        </li>\n\n        <li class=\"items-center\">\n          <a\n            [routerLink]=\"['/profile']\"\n            class=\"text-blueGray-700 hover:text-blueGray-500 text-xs uppercase py-3 font-bold block\"\n          >\n            <i class=\"fas fa-user-circle text-blueGray-300 mr-2 text-sm\"></i>\n            Profile Page\n          </a>\n        </li>\n      </ul>\n\n      <!-- Divider -->\n      <hr class=\"my-4 md:min-w-full\" />\n      <!-- Heading -->\n      <h6\n        class=\"md:min-w-full text-blueGray-500 text-xs uppercase font-bold block pt-1 pb-4 no-underline\"\n      >\n        Documentation\n      </h6>\n      <!-- Navigation -->\n      <ul class=\"md:flex-col md:min-w-full flex flex-col list-none md:mb-4\">\n        <li class=\"inline-flex\">\n          <a\n            href=\"https://www.creative-tim.com/learning-lab/tailwind/angular/colors/notus\"\n            target=\"_blank\"\n            class=\"text-blueGray-700 hover:text-blueGray-500 text-sm block mb-4 no-underline font-semibold\"\n          >\n            <i class=\"fas fa-paint-brush mr-2 text-blueGray-300 text-base\"></i>\n            Styles\n          </a>\n        </li>\n\n        <li class=\"inline-flex\">\n          <a\n            href=\"https://www.creative-tim.com/learning-lab/tailwind/angular/alerts/notus\"\n            target=\"_blank\"\n            class=\"text-blueGray-700 hover:text-blueGray-500 text-sm block mb-4 no-underline font-semibold\"\n          >\n            <i class=\"fab fa-css3-alt mr-2 text-blueGray-300 text-base\"></i>\n            CSS Components\n          </a>\n        </li>\n\n        <li class=\"inline-flex\">\n          <a\n            href=\"https://www.creative-tim.com/learning-lab/tailwind/angular/overview/notus\"\n            target=\"_blank\"\n            class=\"text-blueGray-700 hover:text-blueGray-500 text-sm block mb-4 no-underline font-semibold\"\n          >\n            <i class=\"fab fa-angular mr-2 text-blueGray-300 text-base\"></i>\n            Angular\n          </a>\n        </li>\n\n        <li class=\"inline-flex\">\n          <a\n            href=\"https://www.creative-tim.com/learning-lab/tailwind/js/overview/notus\"\n            target=\"_blank\"\n            class=\"text-blueGray-700 hover:text-blueGray-500 text-sm block mb-4 no-underline font-semibold\"\n          >\n            <i class=\"fab fa-js-square mr-2 text-blueGray-300 text-base\"></i>\n            Javascript\n          </a>\n        </li>\n\n        <li class=\"inline-flex\">\n          <a\n            href=\"https://www.creative-tim.com/learning-lab/tailwind/nextjs/overview/notus\"\n            target=\"_blank\"\n            class=\"text-blueGray-700 hover:text-blueGray-500 text-sm block mb-4 no-underline font-semibold\"\n          >\n            <i class=\"fab fa-react mr-2 text-blueGray-300 text-base\"></i>\n            NextJS\n          </a>\n        </li>\n\n        <li class=\"inline-flex\">\n          <a\n            href=\"https://www.creative-tim.com/learning-lab/tailwind/react/overview/notus\"\n            target=\"_blank\"\n            class=\"text-blueGray-700 hover:text-blueGray-500 text-sm block mb-4 no-underline font-semibold\"\n          >\n            <i class=\"fab fa-react mr-2 text-blueGray-300 text-base\"></i>\n            React\n          </a>\n        </li>\n\n        <li class=\"inline-flex\">\n          <a\n            href=\"https://www.creative-tim.com/learning-lab/tailwind/svelte/overview/notus\"\n            target=\"_blank\"\n            class=\"text-blueGray-700 hover:text-blueGray-500 text-sm block mb-4 no-underline font-semibold\"\n          >\n            <i class=\"fas fa-link mr-2 text-blueGray-300 text-base\"></i>\n            Svelte\n          </a>\n        </li>\n\n        <li class=\"inline-flex\">\n          <a\n            href=\"https://www.creative-tim.com/learning-lab/tailwind/vue/overview/notus\"\n            target=\"_blank\"\n            class=\"text-blueGray-700 hover:text-blueGray-500 text-sm block mb-4 no-underline font-semibold\"\n          >\n            <i class=\"fab fa-vuejs mr-2 text-blueGray-300 text-base\"></i>\n            VueJS\n          </a>\n        </li>\n      </ul>\n    </div>\n  </div>\n</nav>\n"
        },
        {
            "name": "SigninComponent",
            "id": "component-SigninComponent-580f96a9bcd13ab04cceec6f3feb0263",
            "file": "src/app/views/signin/signin/signin.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-signin",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./signin.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "goToForgot",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 113,
                    "description": "<p>Method to route user to forgot</p>\n"
                },
                {
                    "name": "goToPrivacy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 120,
                    "description": "<p>Method to route user to privacy policy</p>\n"
                },
                {
                    "name": "goToTerms",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 127,
                    "description": "<p>Method to route user to terms of service</p>\n"
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24
                },
                {
                    "name": "signInWithCognito",
                    "args": [
                        {
                            "name": "user",
                            "type": "NewUser"
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<void>",
                    "typeParameters": [],
                    "line": 29,
                    "description": "<p>Method to sign user up</p>\n",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "user",
                            "type": "NewUser",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "signInWithFacebook",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 97,
                    "description": "<p>Method to sign user up/in with Facebook</p>\n"
                },
                {
                    "name": "signInWithGoogle",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 105,
                    "description": "<p>Method to sign user up/in with Google</p>\n"
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AuthService, NewUser } from '@shared/services/auth/auth.service';\nimport { ICredentials } from '@aws-amplify/core';\nimport { CognitoHostedUIIdentityProvider } from '@aws-amplify/auth';\nimport { APIService } from '@shared/services/aws/api.service';\nimport { Store } from '@ngxs/store';\nimport * as AppDataActions from '@store/app-data/app-data.actions';\nimport * as UserActions from '@store/user/user.actions';\n\n@Component({\n  selector: 'brave-signin',\n  templateUrl: './signin.component.html',\n})\nexport class SigninComponent {\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n    private store: Store,\n    private auth: AuthService,\n    private api: APIService\n  ) {}\n\n  ngOnInit(): void {}\n\n  /**\n   * Method to sign user up\n   */\n  async signInWithCognito(user: NewUser): Promise<void> {\n    if (!user) return;\n    // add email validation here // const isValid = await this.accountMgmtService.isEmailValid(formData.username);\n    let isValid = true;\n    if (isValid) {\n      try {\n        const cognitorUser = await this.auth.signIn(\n          user.username,\n          user.password\n        );\n        // TODO need to get data from backend and find out what last step was\n        if (\n          cognitorUser?.challengeName === 'SMS_MFA' ||\n          cognitorUser.challengeName === 'SOFTWARE_TOKEN_MFA'\n        ) {\n          console.log('MFA challenge');\n          // this.router.navigate(['/account/submitmfa']);\n        } else if (cognitorUser?.challengeName === 'NEW_PASSWORD_REQUIRED') {\n          const { requiredAttributes } = cognitorUser?.challengeParam;\n        } else if (cognitorUser?.challengeName === 'MFA_SETUP') {\n          console.log('OTP setup');\n          // this.auth.setupTOTP(user);\n        } else {\n          // TODO go to dashboard...default to assume no data for now\n          // handled by auth listener for SignIn event\n\n          const creds = await this.auth.getAuthCredentials();\n          if (creds) {\n            // await this.store\n            //   .dispatch(new AppDataActions.Edit({ id: creds.identityId }))\n            //   .toPromise();\n            // await this.store\n            //   .dispatch(new UserActions.Edit({ id: creds.identityId }))\n            //   .toPromise();\n            // this.auth.seedAppData(creds); //possibly update to async\n          }\n          // TODO add condition to check if onboarding is complete\n          // need to get the results from the database\n          //   ...check onboarding status and then route accordingly\n          this.router.navigate(['/onboarding/name']);\n        }\n      } catch (err) {\n        if (err.code === 'UserNotConfirmedException') {\n          const unconfirmedUserState = {};\n          // TODO go to dashboard with an unconfirmed state (can't do anything)\n        } else if (err.code === 'PasswordResetRequiredException') {\n          // TODO handle error\n          this.router.navigate(['../error'], { relativeTo: this.route });\n        } else if (err.code === 'NotAuthorizedException') {\n          // TODO handle error\n          this.router.navigate(['../error'], { relativeTo: this.route });\n        } else if (err.code === 'UserNotFoundException') {\n          // TODO handle error\n          this.router.navigate(['../error'], { relativeTo: this.route });\n        } else {\n          // TODO handle error\n        }\n        this.router.navigate(['../error'], { relativeTo: this.route });\n      }\n    } else {\n      // TODO: need to provide feedback to the user on the invalid email\n      this.router.navigate(['../error'], { relativeTo: this.route });\n    }\n  }\n\n  /**\n   * Method to sign user up/in with Facebook\n   */\n  signInWithFacebook(): void {\n    let provider = CognitoHostedUIIdentityProvider.Facebook;\n    this.auth.socialSignIn(provider);\n  }\n\n  /**\n   * Method to sign user up/in with Google\n   */\n  signInWithGoogle(): void {\n    let provider = CognitoHostedUIIdentityProvider.Google;\n    this.auth.socialSignIn(provider);\n  }\n\n  /**\n   * Method to route user to forgot\n   */\n  goToForgot(): void {\n    this.router.navigate(['../forgot'], { relativeTo: this.route });\n  }\n\n  /**\n   * Method to route user to privacy policy\n   */\n  goToPrivacy(): void {\n    this.router.navigate(['/legal/privacy']);\n  }\n\n  /**\n   * Method to route user to terms of service\n   */\n  goToTerms(): void {\n    this.router.navigate(['/legal/tos']);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router"
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute"
                    },
                    {
                        "name": "store",
                        "type": "Store"
                    },
                    {
                        "name": "auth",
                        "type": "AuthService"
                    },
                    {
                        "name": "api",
                        "type": "APIService"
                    }
                ],
                "line": 15,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "store",
                        "type": "Store",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "auth",
                        "type": "AuthService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "api",
                        "type": "APIService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div class=\"container mx-auto max-w-xs h-full\">\n  <brave-signin-pure\n    (clickGoogle)=\"signInWithGoogle()\"\n    (clickFacebook)=\"signInWithFacebook()\"\n    (clickSignup)=\"signInWithCognito($event)\"\n    (clickForgot)=\"goToForgot()\"\n    (clickPrivacy)=\"goToPrivacy()\"\n    (clickTerms)=\"goToTerms()\"\n  ></brave-signin-pure>\n</div>\n"
        },
        {
            "name": "SignInComponent",
            "id": "component-SignInComponent-cb37e4e55922ae7036d7fbb1c55e607c",
            "file": "src/app/shared/components/auth/sign-in/sign-in.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-sign-in",
            "styleUrls": [
                "./sign-in.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./sign-in.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 11
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'brave-sign-in',\n  templateUrl: './sign-in.component.html',\n  styleUrls: ['./sign-in.component.css'],\n})\nexport class SignInComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {\n\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./sign-in.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>sign-in works!</p>\n"
        },
        {
            "name": "SigninForgotComponent",
            "id": "component-SigninForgotComponent-afda1bb9be5f7b755be20a66d9bdb3a6",
            "file": "src/app/views/signin-forgot/signin-forgot.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-signin-forgot",
            "styleUrls": [
                "./signin-forgot.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./signin-forgot.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'brave-signin-forgot',\n  templateUrl: './signin-forgot.component.html',\n  styleUrls: ['./signin-forgot.component.css']\n})\nexport class SigninForgotComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./signin-forgot.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>signin-forgot works!</p>\n"
        },
        {
            "name": "SigninPureComponent",
            "id": "component-SigninPureComponent-9677e778e38694e70bb1a58c54d01825",
            "file": "src/app/views/signin/signin-pure/signin-pure.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-signin-pure",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./signin-pure.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "clickFacebook",
                    "defaultValue": "new EventEmitter()",
                    "line": 10,
                    "type": "EventEmitter<void>"
                },
                {
                    "name": "clickForgot",
                    "defaultValue": "new EventEmitter()",
                    "line": 12,
                    "type": "EventEmitter<void>"
                },
                {
                    "name": "clickGoogle",
                    "defaultValue": "new EventEmitter()",
                    "line": 9,
                    "type": "EventEmitter<void>"
                },
                {
                    "name": "clickLogin",
                    "defaultValue": "new EventEmitter()",
                    "line": 13,
                    "type": "EventEmitter<void>"
                },
                {
                    "name": "clickPrivacy",
                    "defaultValue": "new EventEmitter()",
                    "line": 14,
                    "type": "EventEmitter<void>"
                },
                {
                    "name": "clickSignup",
                    "defaultValue": "new EventEmitter()",
                    "line": 11,
                    "type": "EventEmitter<NewUser>"
                },
                {
                    "name": "clickTerms",
                    "defaultValue": "new EventEmitter()",
                    "line": 15,
                    "type": "EventEmitter<void>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { NewUser } from '@shared/services/auth/auth.service';\n\n@Component({\n  selector: 'brave-signin-pure',\n  templateUrl: './signin-pure.component.html',\n})\nexport class SigninPureComponent implements OnInit {\n  @Output() clickGoogle: EventEmitter<void> = new EventEmitter();\n  @Output() clickFacebook: EventEmitter<void> = new EventEmitter();\n  @Output() clickSignup: EventEmitter<NewUser> = new EventEmitter();\n  @Output() clickForgot: EventEmitter<void> = new EventEmitter();\n  @Output() clickLogin: EventEmitter<void> = new EventEmitter();\n  @Output() clickPrivacy: EventEmitter<void> = new EventEmitter();\n  @Output() clickTerms: EventEmitter<void> = new EventEmitter();\n\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 15
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"flex content-center items-center justify-center h-full p-2\">\n  <div class=\"w-full max-w-xs\">\n    <div\n      class=\"relative flex flex-col min-w-0 break-words w-full mb-6 border-0\"\n    >\n      <!-- logo -->\n      <div class=\"flex justify-center\">\n        <img class=\"w-32 h-32\" src=\"assets/img/brave-teal-512x512.jpg\" />\n      </div>\n\n      <!-- Social sign up buttons -->\n      <div class=\"rounded-t mb-0 py-6\">\n        <div class=\"text-center mb-3\">\n          <h4 class=\"brave-h4\">Create Account</h4>\n        </div>\n        <div class=\"btn-wrapper text-center\">\n          <div class=\"mb-1\">\n            <brave-google-iconsignin-button\n              (click)=\"clickGoogle.emit()\"\n            ></brave-google-iconsignin-button>\n          </div>\n          <div>\n            <brave-facebook-onlytextsignin-button\n              (click)=\"clickFacebook.emit()\"\n            ></brave-facebook-onlytextsignin-button>\n          </div>\n        </div>\n      </div>\n      <div class=\"flex-auto py-6 pt-0\">\n        <div class=\"brave-body1 text-center mb-3\">\n          <small>- Or -</small>\n        </div>\n        <brave-simple-signup-form\n          (signupClick)=\"clickSignup.emit($event)\"\n          (forgotClick)=\"clickForgot.emit()\"\n        ></brave-simple-signup-form>\n      </div>\n\n      <!-- Already have an account -->\n      <div class=\"flex justify-center\">\n        <div class=\"text-sm text-blueGray-600\">\n          <span>Already have an account?&nbsp;</span>\n          <span>\n            <a (click)=\"clickLogin.emit()\" class=\"hover:cursor-pointer\">\n              Login here.\n            </a>\n          </span>\n        </div>\n      </div>\n\n      <!--  terms of service -->\n      <div class=\"flex justify-center mt-10\">\n        <div class=\"text-sm text-blueGray-600 text-center\">\n          <small>\n            By joining you are agreeing to our&nbsp;<span\n              ><a\n                (click)=\"clickPrivacy.emit()\"\n                class=\"underline hover:cursor-pointer\"\n                >Privacy Policy</a\n              ></span\n            >&nbsp;and&nbsp;<span\n              ><a\n                (click)=\"clickTerms.emit()\"\n                class=\"underline hover:cursor-pointer\"\n                >TOS</a\n              ></span\n            >\n          </small>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n"
        },
        {
            "name": "SigninRedirectComponent",
            "id": "component-SigninRedirectComponent-1e1b4d8f68da7c26be8c1ead9292e840",
            "file": "src/app/views/signin-redirect/signin-redirect.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-signin-redirect",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./signin-redirect.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<void>",
                    "typeParameters": [],
                    "line": 13,
                    "modifierKind": [
                        120
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '@shared/services/auth/auth.service';\nimport { SyncService } from '@shared/services/sync/sync.service';\nimport { ICredentials } from '@aws-amplify/core';\n\n@Component({\n  selector: 'brave-signin-redirect',\n  templateUrl: './signin-redirect.component.html',\n})\nexport class SigninRedirectComponent implements OnInit {\n  constructor(private sync: SyncService, private auth: AuthService) {}\n\n  async ngOnInit(): Promise<void> {\n    try {\n      const creds: ICredentials = await this.auth.getCurrentUserCredentials();\n      await this.sync.hallmonitor(creds);\n    } catch (err) {\n      console.log('hall monitor error', err);\n    }\n  }\n}\n\nconst navs: Record<string, any> = {};\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "sync",
                        "type": "SyncService"
                    },
                    {
                        "name": "auth",
                        "type": "AuthService"
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "sync",
                        "type": "SyncService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "auth",
                        "type": "AuthService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>Redirecting you</p>\n"
        },
        {
            "name": "SignupComponent",
            "id": "component-SignupComponent-f8bec1d6e29053a9712e36127995fa6e",
            "file": "src/app/views/signup/signup/signup.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-signup",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./signup.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "goToForgot",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 65,
                    "description": "<p>Method to route user to forgot</p>\n"
                },
                {
                    "name": "goToLogin",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 72,
                    "description": "<p>Method to route user to login</p>\n"
                },
                {
                    "name": "goToPrivacy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "description": "<p>Method to route user to privacy policy</p>\n"
                },
                {
                    "name": "goToTerms",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 86,
                    "description": "<p>Method to route user to terms of service</p>\n"
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23
                },
                {
                    "name": "signUpWithCognito",
                    "args": [
                        {
                            "name": "user",
                            "type": "NewUser"
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<void>",
                    "typeParameters": [],
                    "line": 28,
                    "description": "<p>Method to sign user up</p>\n",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "user",
                            "type": "NewUser",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "signUpWithFacebook",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 49,
                    "description": "<p>Method to sign user up/in with Facebook</p>\n"
                },
                {
                    "name": "signUpWithGoogle",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 57,
                    "description": "<p>Method to sign user up/in with Google</p>\n"
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AuthService, NewUser } from '@shared/services/auth/auth.service';\nimport { CognitoHostedUIIdentityProvider } from '@aws-amplify/auth';\nimport { ICredentials } from '@aws-amplify/core';\nimport {\n  APIService,\n  CreateAppDataInput,\n} from '@shared/services/aws/api.service';\n\n@Component({\n  selector: 'brave-signup',\n  templateUrl: './signup.component.html',\n})\nexport class SignupComponent implements OnInit {\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n    private auth: AuthService,\n    private api: APIService\n  ) {}\n\n  ngOnInit(): void {}\n\n  /**\n   * Method to sign user up\n   */\n  async signUpWithCognito(user: NewUser): Promise<void> {\n    if (!user) return;\n    // add email validation here // const isValid = await this.accountMgmtService.isEmailValid(formData.username);\n    let isValid = true;\n    if (isValid) {\n      try {\n        await this.auth.signUp(user);\n        this.router.navigate(['../thankyou'], { relativeTo: this.route });\n      } catch (err) {\n        console.log('sign up email error', err);\n        this.router.navigate(['../error'], { relativeTo: this.route });\n      }\n    } else {\n      // TODO: need to provide feedback to the user on the invalid email\n      this.router.navigate(['../error'], { relativeTo: this.route });\n    }\n  }\n\n  /**\n   * Method to sign user up/in with Facebook\n   */\n  signUpWithFacebook(): void {\n    let provider = CognitoHostedUIIdentityProvider.Facebook;\n    this.auth.socialSignIn(provider);\n  }\n\n  /**\n   * Method to sign user up/in with Google\n   */\n  signUpWithGoogle(): void {\n    let provider = CognitoHostedUIIdentityProvider.Google;\n    this.auth.socialSignIn(provider);\n  }\n\n  /**\n   * Method to route user to forgot\n   */\n  goToForgot(): void {\n    this.router.navigate(['../forgot'], { relativeTo: this.route });\n  }\n\n  /**\n   * Method to route user to login\n   */\n  goToLogin(): void {\n    this.router.navigate(['../signin'], { relativeTo: this.route });\n  }\n\n  /**\n   * Method to route user to privacy policy\n   */\n  goToPrivacy(): void {\n    this.router.navigate(['/legal/privacy']);\n  }\n\n  /**\n   * Method to route user to terms of service\n   */\n  goToTerms(): void {\n    this.router.navigate(['/legal/tos']);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router"
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute"
                    },
                    {
                        "name": "auth",
                        "type": "AuthService"
                    },
                    {
                        "name": "api",
                        "type": "APIService"
                    }
                ],
                "line": 15,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "auth",
                        "type": "AuthService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "api",
                        "type": "APIService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"container mx-auto max-w-xs h-full\">\n  <brave-signup-pure\n    (clickGoogle)=\"signUpWithGoogle()\"\n    (clickFacebook)=\"signUpWithFacebook()\"\n    (clickSignup)=\"signUpWithCognito($event)\"\n    (clickForgot)=\"goToForgot()\"\n    (clickLogin)=\"goToLogin()\"\n    (clickPrivacy)=\"goToPrivacy()\"\n    (clickTerms)=\"goToTerms()\"\n  ></brave-signup-pure>\n</div>\n"
        },
        {
            "name": "SignUpComponent",
            "id": "component-SignUpComponent-6f0ff2e88b3511b0c6727e84be58a763",
            "file": "src/app/shared/components/auth/sign-up/sign-up.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-sign-up",
            "styleUrls": [
                "./sign-up.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./sign-up.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "signUpForm",
                    "defaultValue": "{} as FormGroup",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 17
                }
            ],
            "methodsClass": [
                {
                    "name": "signUpUser",
                    "args": [
                        {
                            "name": "formData",
                            "type": "FormFields"
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 34,
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "formData",
                            "type": "FormFields",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { BraveEmailValidator } from '@shared/validators/email.validator';\n\ninterface FormFields {\n  fullName: string;\n  username: string;\n  password: string;\n}\n\n@Component({\n  selector: 'brave-sign-up',\n  templateUrl: './sign-up.component.html',\n  styleUrls: ['./sign-up.component.css'],\n})\nexport class SignUpComponent {\n  signUpForm: FormGroup = {} as FormGroup;\n\n  constructor(private fb: FormBuilder) {\n    this.signUpForm = this.fb.group({\n      fullName: ['', [Validators.required]],\n      username: ['', [Validators.required, BraveEmailValidator]],\n      password: ['', [Validators.required, Validators.minLength(8)]],\n    });\n  }\n\n  get validForm() {\n    return this.signUpForm.valid;\n  }\n  get signUpValues() {\n    return this.signUpForm.value;\n  }\n\n  async signUpUser(formData: FormFields) {\n    if (!this.validForm) {\n      return;\n    }\n\n    const { username, password, fullName } = this.signUpValues;\n\n    // Auth.signUp({\n    //   username,\n    //   password,\n    //   attributes: {\n    //     email: username,\n    //     'custom:fullName': fullName,\n    //   },\n    // })\n    //   .then((_) => {\n    //     // fire fb pixel\n    //     // this.facebookService.fireCompleteRegistration(0.0, 'USD');\n    //     // this.googleService.fireSignUpEvent();\n    //     sessionStorage.setItem('userEmail', username);\n    //     const unconfirmedUserState = {\n    //       userFirstName: 'Guest',\n    //       userAttributes: {\n    //         'custom:firstName': 'Guest',\n    //         'custom:lastName': '',\n    //         'custom:legalFullName': '',\n    //         'custom:dob': '',\n    //         'custom:address': '',\n    //         email: username,\n    //         email_verified: false,\n    //         sub: '',\n    //       },\n    //       isSignedIn: true,\n    //       isAdmin: false,\n    //     };\n    //     this.accountMgmtService.updateUser(unconfirmedUserState); // signed up not confirmed...manually update state.\n    //     this.accountMgmtService.isWaiting$.next(false);\n    //     this.router.navigate(['/userportal/stepone']);\n    //   })\n    //   .catch((err) => {\n    //     this.error = true;\n    //     this.errorMessage = err.message;\n    //     this.accountMgmtService.isWaiting$.next(false);\n    //   });\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./sign-up.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "fb",
                        "type": "FormBuilder"
                    }
                ],
                "line": 17,
                "jsdoctags": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "validForm": {
                    "name": "validForm",
                    "getSignature": {
                        "name": "validForm",
                        "type": "",
                        "returnType": "",
                        "line": 27
                    }
                },
                "signUpValues": {
                    "name": "signUpValues",
                    "getSignature": {
                        "name": "signUpValues",
                        "type": "",
                        "returnType": "",
                        "line": 30
                    }
                }
            },
            "templateData": "<!-- <div class=\"c-flex flex-center\">\n  <div class=\"form-container\">\n    <form action=\"\" [formGroup]=\"signUpForm\">\n      <div>\n        <span class=\"brave-font-1\">Start taking control of your credit!</span>\n      </div>\n      <h5 class=\"brave-font-0 m-0\">\n        <span>Complete the information below to get started</span>\n      </h5>\n      <div>\n        <div class=\"brave-font-0 m-t-15 m-b-15\">\n          <input\n            matInput\n            name=\"fullName\"\n            [formControl]=\"signUpForm.controls['fullName']\"\n            placeholder=\"\"\n          />\n          <small\n            *ngIf=\"\n              signUpForm?.controls?.fullName?.touched &&\n              signUpForm.controls.fullName.errors?.required\n            \"\n            class=\"form-error-msg\"\n            >Name is required</small\n          >\n        </div>\n        <div class=\"brave-font-0 m-t-15 m-b-15\">\n          <input\n            #userEmail\n            matInput\n            name=\"username\"\n            [formControl]=\"signUpForm.controls['username']\"\n            placeholder=\"Username\"\n            autocorrect=\"off\"\n            autocapitalize=\"off\"\n            spellcheck=\"false\"\n          />\n          <small\n            *ngIf=\"\n              signUpForm?.controls?.email?.touched &&\n              signUpForm.controls.email.errors?.required\n            \"\n            class=\"form-error-msg\"\n            >Email is required</small\n          >\n        </div>\n        <div class=\"brave-font-0 m-t-15 m-b-15\">\n          <input\n            matInput\n            name=\"username\"\n            [formControl]=\"signUpForm.controls['password']\"\n            placeholder=\"Create a strong password\"\n            [type]=\"hide ? 'password' : 'text'\"\n            autocorrect=\"off\"\n            autocapitalize=\"off\"\n            spellcheck=\"false\"\n          />\n        </div>\n        <div class=\"brave-font-5 warning-text\">\n          <p *ngIf=\"error\">&#9888;&nbsp;{{ errorMessage }}</p>\n          <p *ngIf=\"success\">{{ successMessage }}</p>\n        </div>\n        <div>\n          <div>\n            <button\n              class=\"brave-btn-accent-raised brave-lgbtn\"\n              type=\"submit\"\n              [disabled]=\"!signUpForm.valid\"\n              (click)=\"completeStep()\"\n            >\n              Submit\n            </button>\n          </div>\n          <p class=\"brave-font-5 disclaimer\">\n            <small\n              >By joining you are agreeing to our\n              <a [routerLink]=\"['/privacy/info']\">Privacy Policy</a> and\n              <a [routerLink]=\"['/terms/info']\">TOS</a></small\n            >\n          </p>\n          <p class=\"brave-font-0 signin-text\">\n            Already a member? <a [routerLink]=\"['../signin']\">Log in.</a>\n          </p>\n          <p class=\"brave-font-0 signin-text\">\n            Forgot your password?\n            <a [routerLink]=\"['../forgot']\">Click here.</a>\n          </p>\n        </div>\n      </div>\n    </form>\n  </div>\n</div> -->\n"
        },
        {
            "name": "SignupErrorComponent",
            "id": "component-SignupErrorComponent-f2e99ec1bc97a91b990906b63907fd95",
            "file": "src/app/views/signup-error/signup-error.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-signup-error",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./signup-error.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 10
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'brave-signup-error',\n  templateUrl: './signup-error.component.html',\n})\nexport class SignupErrorComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 7
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"container mx-auto max-w-xs h-full\">\n  <div class=\"flex content-center items-center justify-center h-full\">\n    <div class=\"w-full max-w-xs\">\n      <div class=\"relative flex flex-col min-w-0 w-full mb-6 border-0\">\n        <!-- image -->\n        <div class=\"flex justify-center mb-6\">\n          <img class=\"w-full\" src=\"assets/img/undraw_welcoming_xvuq.svg\" />\n        </div>\n\n        <!-- header -->\n        <div class=\"py-3\">\n          <h4 class=\"brave-h4\">Verification Error</h4>\n        </div>\n\n        <!-- message -->\n        <div class=\"py-3\">\n          <div class=\"text-base text-blueGray-600\">\n            <p class=\"mb-0\">\n              Unfortunately there was a connection issue and you need to\n              re-enter your information.\n            </p>\n          </div>\n        </div>\n\n        <!-- action -->\n        <div class=\"mt-5\">\n          <div class=\"flex justify-center items-center\">\n            <brave-filled-onlytext-button [routerLink]=\"['/']\"\n              >Retry</brave-filled-onlytext-button\n            >\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n"
        },
        {
            "name": "SignupErrorValidationComponent",
            "id": "component-SignupErrorValidationComponent-f4383cb8f9db4af54b3c86b8eeb9d21e",
            "file": "src/app/views/signup-error-validation/signup-error-validation.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-signup-error-validation",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./signup-error-validation.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 10
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'brave-signup-error-validation',\n  templateUrl: './signup-error-validation.component.html',\n})\nexport class SignupErrorValidationComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 7
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"container mx-auto max-w-xs h-full\">\n  <div class=\"flex content-center items-center justify-center h-full\">\n    <div class=\"w-full max-w-xs\">\n      <div class=\"relative flex flex-col min-w-0 w-full mb-6 border-0\">\n        <!-- image -->\n        <div class=\"flex justify-center mb-6\">\n          <img class=\"w-full\" src=\"assets/img/undraw_welcoming_xvuq.svg\" />\n        </div>\n\n        <!-- header -->\n        <div class=\"py-3\">\n          <h4 class=\"brave-h4\">Verification Error</h4>\n        </div>\n\n        <!-- message -->\n        <div class=\"py-3\">\n          <div class=\"text-base\">\n            <p class=\"mb-6 text-blueGray-600\">\n              Unfortunately there we were unable to verify your identity with\n              the answers provided.\n            </p>\n            <p class=\"mb-6 text-blueGray-600\">Please try again in 30 days.</p>\n            <p class=\"mb-6 text-fuchsia-500\">\n              Why was my ID unable to be verified?\n            </p>\n          </div>\n        </div>\n\n        <!-- action -->\n        <div class=\"mt-5\">\n          <div class=\"flex justify-center items-center\">\n            <brave-filled-onlytext-button [routerLink]=\"['/']\"\n              >Return to Dashboard</brave-filled-onlytext-button\n            >\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n"
        },
        {
            "name": "SignupKnowyouComponent",
            "id": "component-SignupKnowyouComponent-00e99b29ff605d4246c52605d8c7db03",
            "file": "src/app/views/signup-knowyou/signup-knowyou.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-signup-knowyou",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./signup-knowyou.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 10
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'brave-signup-knowyou',\n  templateUrl: './signup-knowyou.component.html',\n})\nexport class SignupKnowyouComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 7
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"container mx-auto max-w-xs h-full\">\n  <div class=\"flex content-center items-center justify-center h-full\">\n    <div class=\"w-full max-w-xs\">\n      <div class=\"relative flex flex-col min-w-0 w-full mb-6 border-0\">\n        <!-- image -->\n        <div class=\"flex justify-center mb-6\">\n          <img class=\"w-full\" src=\"assets/img/undraw_welcoming_xvuq.svg\" />\n        </div>\n\n        <!-- header -->\n        <div class=\"py-3\">\n          <h4 class=\"brave-h4\">Let's get to know you!</h4>\n        </div>\n\n        <!-- form -->\n        <div class=\"py-3\">\n          <brave-outline-name-form></brave-outline-name-form>\n        </div>\n\n        <div class=\"mt-5\">\n          <div class=\"flex justify-center items-center\">\n            <brave-filled-onlytext-button\n              ><span class=\"flex items-center\"\n                >Continue<span class=\"material-icons px-1\"\n                  >arrow_forward</span\n                ></span\n              ></brave-filled-onlytext-button\n            >\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n"
        },
        {
            "name": "SignupPureComponent",
            "id": "component-SignupPureComponent-86f07f33a5f889554dc0751f4ef68b95",
            "file": "src/app/views/signup/signup-pure/signup-pure.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-signup-pure",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./signup-pure.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "clickFacebook",
                    "defaultValue": "new EventEmitter()",
                    "line": 10,
                    "type": "EventEmitter<void>"
                },
                {
                    "name": "clickForgot",
                    "defaultValue": "new EventEmitter()",
                    "line": 12,
                    "type": "EventEmitter<void>"
                },
                {
                    "name": "clickGoogle",
                    "defaultValue": "new EventEmitter()",
                    "line": 9,
                    "type": "EventEmitter<void>"
                },
                {
                    "name": "clickLogin",
                    "defaultValue": "new EventEmitter()",
                    "line": 13,
                    "type": "EventEmitter<void>"
                },
                {
                    "name": "clickPrivacy",
                    "defaultValue": "new EventEmitter()",
                    "line": 14,
                    "type": "EventEmitter<void>"
                },
                {
                    "name": "clickSignup",
                    "defaultValue": "new EventEmitter()",
                    "line": 11,
                    "type": "EventEmitter<NewUser>"
                },
                {
                    "name": "clickTerms",
                    "defaultValue": "new EventEmitter()",
                    "line": 15,
                    "type": "EventEmitter<void>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Output } from '@angular/core';\nimport { NewUser } from '@shared/services/auth/auth.service';\n\n@Component({\n  selector: 'brave-signup-pure',\n  templateUrl: './signup-pure.component.html',\n})\nexport class SignupPureComponent {\n  @Output() clickGoogle: EventEmitter<void> = new EventEmitter();\n  @Output() clickFacebook: EventEmitter<void> = new EventEmitter();\n  @Output() clickSignup: EventEmitter<NewUser> = new EventEmitter();\n  @Output() clickForgot: EventEmitter<void> = new EventEmitter();\n  @Output() clickLogin: EventEmitter<void> = new EventEmitter();\n  @Output() clickPrivacy: EventEmitter<void> = new EventEmitter();\n  @Output() clickTerms: EventEmitter<void> = new EventEmitter();\n\n  constructor() {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 15
            },
            "templateData": "<div class=\"flex content-center items-center justify-center h-full p-2\">\n  <div class=\"w-full max-w-xs\">\n    <div\n      class=\"relative flex flex-col min-w-0 break-words w-full mb-6 border-0\"\n    >\n      <!-- logo -->\n      <div class=\"flex justify-center\">\n        <img class=\"w-32 h-32\" src=\"assets/img/brave-teal-512x512.jpg\" />\n      </div>\n\n      <!-- Social sign up buttons -->\n      <div class=\"rounded-t mb-0 py-6\">\n        <div class=\"text-center mb-3\">\n          <h4 class=\"brave-h4\">Create Account</h4>\n        </div>\n        <div class=\"btn-wrapper text-center\">\n          <div class=\"mb-1\">\n            <brave-google-iconsignin-button\n              (click)=\"clickGoogle.emit()\"\n            ></brave-google-iconsignin-button>\n          </div>\n          <div>\n            <brave-facebook-onlytextsignin-button\n              (click)=\"clickFacebook.emit()\"\n            ></brave-facebook-onlytextsignin-button>\n          </div>\n        </div>\n      </div>\n      <div class=\"flex-auto py-6 pt-0\">\n        <div class=\"brave-body1 text-center mb-3\">\n          <small>- Or -</small>\n        </div>\n        <brave-simple-signup-form\n          (signupClick)=\"clickSignup.emit($event)\"\n          (forgotClick)=\"clickForgot.emit()\"\n        ></brave-simple-signup-form>\n      </div>\n\n      <!-- Already have an account -->\n      <div class=\"flex justify-center\">\n        <div class=\"text-sm text-blueGray-600\">\n          <span>Already have an account?&nbsp;</span>\n          <span>\n            <a (click)=\"clickLogin.emit()\" class=\"hover:cursor-pointer\">\n              Login here.\n            </a>\n          </span>\n        </div>\n      </div>\n\n      <!--  terms of service -->\n      <div class=\"flex justify-center mt-10\">\n        <div class=\"text-sm text-blueGray-600 text-center\">\n          <small>\n            By joining you are agreeing to our&nbsp;<span\n              ><a\n                (click)=\"clickPrivacy.emit()\"\n                class=\"underline hover:cursor-pointer\"\n                >Privacy Policy</a\n              ></span\n            >&nbsp;and&nbsp;<span\n              ><a\n                (click)=\"clickTerms.emit()\"\n                class=\"underline hover:cursor-pointer\"\n                >TOS</a\n              ></span\n            >\n          </small>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n"
        },
        {
            "name": "SignupResendComponent",
            "id": "component-SignupResendComponent-821418574d24d0d815adcddc9c087dd0",
            "file": "src/app/views/signup-resend/signup-resend.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-signup-resend",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./signup-resend.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 10
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'brave-signup-resend',\n  templateUrl: './signup-resend.component.html',\n})\nexport class SignupResendComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 7
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>signup-resend works!</p>\n"
        },
        {
            "name": "SignupThankyouComponent",
            "id": "component-SignupThankyouComponent-948665f062e1c678814eb4a9e75cd72c",
            "file": "src/app/views/signup-thankyou/signup-thankyou.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-signup-thankyou",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./signup-thankyou.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 10
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'brave-signup-thankyou',\n  templateUrl: './signup-thankyou.component.html',\n})\nexport class SignupThankyouComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 7
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"container mx-auto max-w-xs h-full\">\n  <div class=\"flex content-center items-center justify-center h-full\">\n    <div class=\"w-full max-w-xs\">\n      <div class=\"relative flex flex-col min-w-0 w-full mb-6 border-0\">\n        <!-- image -->\n        <div class=\"flex justify-center mb-6\">\n          <img class=\"w-full\" src=\"assets/img/undraw_welcoming_xvuq.svg\" />\n        </div>\n\n        <!-- header -->\n        <div class=\"py-3\">\n          <h4 class=\"brave-h4\">Thanks for signing up!</h4>\n        </div>\n\n        <!-- message -->\n        <div class=\"py-3\">\n          <div class=\"text-base text-blueGray-600\">\n            <p class=\"mb-0\">Check your email for a verification link.</p>\n            <p>Click on it to continue.</p>\n          </div>\n        </div>\n\n        <!-- footer -->\n        <div class=\"mt-10 py-3\">\n          <div class=\"text-sm text-blueGray-600\">\n            <p>\n              Didn't receive an email?&nbsp;<span\n                ><a [routerLink]=\"['../resend']\">Click here to resend.</a></span\n              >\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n"
        },
        {
            "name": "SimpleSignupFormComponent",
            "id": "component-SimpleSignupFormComponent-525c6bbe1f3302617c7678e7e37d4b15",
            "file": "src/app/shared/components/forms/simple-signup-form/simple-signup-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-simple-signup-form",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./simple-signup-form.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "forgotClick",
                    "defaultValue": "new EventEmitter()",
                    "line": 11,
                    "type": "EventEmitter<MouseEvent>"
                },
                {
                    "name": "signupClick",
                    "defaultValue": "new EventEmitter()",
                    "line": 12,
                    "type": "EventEmitter<NewUser>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "emailConfig",
                    "defaultValue": "{\n    size: 'sm',\n    label: 'Email',\n    type: 'email',\n    placeholder: 'Email address',\n    autocomplete: 'email',\n  }",
                    "type": "IOutlineInputeConfig",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "parentForm",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "passwordConfig",
                    "defaultValue": "{\n    size: 'sm',\n    label: 'Password',\n    type: 'password',\n    placeholder: 'Password',\n    autocomplete: 'off',\n  }",
                    "type": "IOutlineInputeConfig",
                    "optional": false,
                    "description": "",
                    "line": 22
                }
            ],
            "methodsClass": [
                {
                    "name": "addChild",
                    "args": [
                        {
                            "name": "childName",
                            "type": "string"
                        },
                        {
                            "name": "childGroup",
                            "type": "FormGroup"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 41,
                    "description": "<p>Add a new child form control using the child form group</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1166,
                                "end": 1175,
                                "flags": 0,
                                "escapedText": "childName"
                            },
                            "type": "string",
                            "tagName": {
                                "pos": 1160,
                                "end": 1165,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": ""
                        },
                        {
                            "name": {
                                "pos": 1188,
                                "end": 1198,
                                "flags": 0,
                                "escapedText": "childGroup"
                            },
                            "type": "FormGroup",
                            "tagName": {
                                "pos": 1182,
                                "end": 1187,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": ""
                        }
                    ]
                },
                {
                    "name": "signupUser",
                    "args": [
                        {
                            "name": "form",
                            "type": "FormGroup"
                        }
                    ],
                    "optional": false,
                    "returnType": "NewUser",
                    "typeParameters": [],
                    "line": 50,
                    "description": "<p>Take the sign up form and transform into NewUser object</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1405,
                                "end": 1409,
                                "flags": 0,
                                "escapedText": "form"
                            },
                            "type": "FormGroup",
                            "tagName": {
                                "pos": 1399,
                                "end": 1404,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": ""
                        },
                        {
                            "tagName": {
                                "pos": 1416,
                                "end": 1423,
                                "flags": 0,
                                "escapedText": "returns"
                            },
                            "comment": "",
                            "returnType": ""
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Output } from '@angular/core';\nimport { FormGroup, FormBuilder } from '@angular/forms';\nimport { IOutlineInputeConfig } from '@shared/components/inputs/outline-input/outline-input.component';\nimport { NewUser } from '@shared/services/auth/auth.service';\n\n@Component({\n  selector: 'brave-simple-signup-form',\n  templateUrl: './simple-signup-form.component.html',\n})\nexport class SimpleSignupFormComponent {\n  @Output() forgotClick: EventEmitter<MouseEvent> = new EventEmitter();\n  @Output() signupClick: EventEmitter<NewUser> = new EventEmitter();\n\n  parentForm: FormGroup;\n  emailConfig: IOutlineInputeConfig = {\n    size: 'sm',\n    label: 'Email',\n    type: 'email',\n    placeholder: 'Email address',\n    autocomplete: 'email',\n  };\n  passwordConfig: IOutlineInputeConfig = {\n    size: 'sm',\n    label: 'Password',\n    type: 'password',\n    placeholder: 'Password',\n    autocomplete: 'off',\n  };\n\n  constructor(fb: FormBuilder) {\n    this.parentForm = fb.group({\n      name: ['simple-signup-form'],\n    }); // simple parent form with name of form\n  }\n\n  /**\n   * Add a new child form control using the child form group\n   * @param childName\n   * @param childGroup\n   */\n  addChild(childName: string, childGroup: FormGroup): void {\n    this.parentForm.addControl(childName, childGroup);\n  }\n\n  /**\n   * Take the sign up form and transform into NewUser object\n   * @param form\n   * @returns {NewUser}\n   */\n  signupUser(form: FormGroup): NewUser {\n    const { email, password } = form.value;\n    return {\n      username: email.input,\n      password: password.input,\n    };\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "fb",
                        "type": "FormBuilder"
                    }
                ],
                "line": 28,
                "jsdoctags": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<form [formGroup]=\"parentForm\">\n  <brave-outline-input\n    [config]=\"emailConfig\"\n    (onComponentReady)=\"addChild('email', $event)\"\n    [required]=\"true\"\n    [asteriskOverride]=\"true\"\n  >\n  </brave-outline-input>\n  <brave-outline-input\n    [config]=\"passwordConfig\"\n    (onComponentReady)=\"addChild('password', $event)\"\n    [required]=\"true\"\n    [asteriskOverride]=\"true\"\n  >\n  </brave-outline-input>\n  <div class=\"-mt-2\">\n    <div class=\"flex justify-end items-end\">\n      <a\n        class=\"text-xs text-blueGray-600 hover:cursor-pointer\"\n        (click)=\"forgotClick.emit($event)\"\n        >Forgot password?</a\n      >\n    </div>\n  </div>\n\n  <div class=\"mt-5\">\n    <div class=\"flex justify-center items-center\">\n      <brave-filled-onlytext-button\n        [disabled]=\"!parentForm.valid\"\n        (click)=\"signupClick.emit(signupUser(parentForm))\"\n        >Sign Up</brave-filled-onlytext-button\n      >\n    </div>\n  </div>\n</form>\n"
        },
        {
            "name": "SnapshotDisplayCardComponent",
            "id": "component-SnapshotDisplayCardComponent-721cf134cc22c36ab9f61a17964a77ee",
            "file": "src/app/shared/components/cards/snapshot-display-card/snapshot-display-card.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-snapshot-display-card",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./snapshot-display-card.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "label",
                    "defaultValue": "LabelOfSnapshot.NoLabel",
                    "line": 26,
                    "type": "LabelOfSnapshot | string"
                },
                {
                    "name": "status",
                    "defaultValue": "SnapshotStatus.Default",
                    "line": 20,
                    "type": "SnapshotStatus | string"
                },
                {
                    "name": "tendency",
                    "defaultValue": "'no-tendency'",
                    "line": 22,
                    "type": "SnapshotTendency"
                },
                {
                    "name": "title",
                    "defaultValue": "''",
                    "line": 21
                },
                {
                    "name": "typeOfDate",
                    "defaultValue": "'Years'",
                    "line": 25,
                    "type": "TypeOfDate"
                },
                {
                    "name": "typeOfSnapshot",
                    "defaultValue": "'tag'",
                    "line": 23,
                    "type": "TypeOfSnapshot"
                },
                {
                    "name": "value",
                    "defaultValue": "''",
                    "line": 24,
                    "type": "string | number"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\nimport { LabelOfSnapshot } from './snapshot-label.pipe';\nexport type Status = 'excellent' | 'good' | 'okay' | 'poor';\nexport type TypeOfSnapshot = 'date' | 'percentage' | 'digit' | 'tag' | 'time';\nexport type TypeOfDate = 'Years' | 'Months' | 'Days';\nexport type SnapshotTendency = 'up' | 'down' | 'no-tendency';\n\nexport enum SnapshotStatus {\n  Critical = 'critical',\n  Danger = 'danger',\n  Safe = 'safe',\n  Default = 'default',\n}\n\n@Component({\n  selector: 'brave-snapshot-display-card',\n  templateUrl: './snapshot-display-card.component.html',\n})\nexport class SnapshotDisplayCardComponent implements OnInit {\n  @Input() status: SnapshotStatus | string = SnapshotStatus.Default;\n  @Input() title = '';\n  @Input() tendency: SnapshotTendency = 'no-tendency';\n  @Input() typeOfSnapshot: TypeOfSnapshot = 'tag';\n  @Input() value: string | number = '';\n  @Input() typeOfDate: TypeOfDate = 'Years';\n  @Input() label: LabelOfSnapshot | string = LabelOfSnapshot.NoLabel;\n\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 26
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<!-- no-purge for component -->\n<div class=\"text-brave-danger bg-brave-danger bg-brave-critical bg-brave-safe text-brave-danger text-brave-critical text-brave-safe mt-4\" *ngIf=\"false\"></div>\n\n<div class=\"relative flex break-words w-full py-2 rounded-lg border border-blueGray-300 min-h-14 max-h-14 mt-3\">\n  <!-- tag div: Display of current type of snapshot -->\n  <div class=\"absolute -mt-5 ml-3 px-1 font-semibold bg-white text-sm font-headings uppercase\" *ngIf=\"label !== undefined\"><span class=\"font-sans\" [ngClass]=\"label | snapshotLabel:'color-class'\">{{ label | snapshotLabel:'text' }}</span></div>\n  <!-- left column  section 1: Display of current snapshot status indicator-->\n  <div class=\"flex items-center ml-3 mr-6\">\n    <div class=\"rounded-full border-none w-4 h-4\"></div>\n  </div>\n  <div class=\"flex flex-col mr-auto justify-center\">\n    <!--  center column section 2: Display of snapshot card information -->\n    <div class=\"flex flex-row items-center\">\n      <p class=\"text-base font-semibold font-sans text-dk-gray\">{{ title }}</p>\n    </div>\n    <div class=\"flex flex-row items-center\">\n      <p class=\"text-2.5 text-opacity-50 font-sans text-dk-gray\">Learn More</p>\n      <span class=\"ml-2 text-little-card-icon text-md-gray\">&#10095;</span>\n    </div>\n  </div>\n  <!-- right column section 3: Display of values -->\n  <div class=\"flex flex-col items-center mr-6 text-center\">\n    <span class=\"text-xl m-auto\">\n      <p class=\"font-bold font-headings\" *ngIf=\"typeOfSnapshot === 'tag'\" [ngClass]=\"status | snapshotStatus: 'text'\">{{ value }}</p>\n      <p class=\"font-bold font-headings text-dk-gray\" *ngIf=\"typeOfSnapshot !== 'tag'\">{{ value }}<span *ngIf=\"typeOfSnapshot === 'percentage'\">%</span></p>\n    </span>\n    <span class=\"text-2.5 -mt-1\" *ngIf=\"typeOfSnapshot === 'date'\">\n      <p class=\"font-sans text-dk-gray\">{{ typeOfDate }}</p>\n    </span>\n  </div>\n</div>\n"
        },
        {
            "name": "SpinnerComponent",
            "id": "component-SpinnerComponent-0218dd2a2f644aa5efc9e68704fe8e99",
            "file": "src/app/shared/components/interstitials/spinner/spinner.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-spinner",
            "styleUrls": [
                "./spinner.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./spinner.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'brave-spinner',\n  templateUrl: './spinner.component.html',\n  styleUrls: ['./spinner.component.css']\n})\nexport class SpinnerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".loader {\n  --tw-border-opacity: 1;\n  border-top-color: rgba(67, 56, 202, var(--tw-border-opacity));\n  -webkit-animation: spinner 1.5s linear infinite;\n  animation: spinner 1.5s linear infinite;\n}\n\n@-webkit-keyframes spinner {\n  0% {\n    -webkit-transform: rotate(0deg);\n  }\n  100% {\n    -webkit-transform: rotate(360deg);\n  }\n}\n\n@keyframes spinner {\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n}\n",
                    "styleUrl": "./spinner.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"w-full h-full flex justify-center align-center\">\n  <div\n    class=\"loader ease-linear rounded-full border-8 border-t-8 border-gray-200 h-64 w-64\"\n  ></div>\n</div>\n"
        },
        {
            "name": "SsnFullFormComponent",
            "id": "component-SsnFullFormComponent-093881b330f652e53a16ee7143c92e9b",
            "file": "src/app/shared/components/forms/ssn-full-form/ssn-full-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{ provide: , useValue:  }"
                }
            ],
            "selector": "brave-ssn-full-form",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./ssn-full-form.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "hideHint",
                    "defaultValue": "false",
                    "line": 16,
                    "type": "boolean",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "onChanges",
                    "defaultValue": "new EventEmitter()",
                    "line": 9,
                    "type": "EventEmitter<any>",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "onSubmit",
                    "defaultValue": "new EventEmitter()",
                    "line": 10,
                    "type": "EventEmitter<FormGroup>",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "onSubmitError",
                    "defaultValue": "new EventEmitter()",
                    "line": 12,
                    "type": "EventEmitter<literal type>",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "childName",
                    "defaultValue": "'input'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "hiddenFields",
                    "type": "QueryList<HiddenAsteriskInputComponent> | undefined",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "decorators": [
                        {
                            "name": "ViewChildren",
                            "stringifiedArguments": "HiddenAsteriskInputComponent"
                        }
                    ]
                },
                {
                    "name": "parentForm",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "clearForm",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 41,
                    "description": "<p>Clears out all the values from the form</p>\n"
                },
                {
                    "name": "formatChildName",
                    "args": [
                        {
                            "name": "childName",
                            "type": "string"
                        },
                        {
                            "name": "digit",
                            "type": "number"
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 21,
                    "jsdoctags": [
                        {
                            "name": "childName",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "digit",
                            "type": "number",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "moveNext",
                    "args": [
                        {
                            "name": "idx",
                            "type": "number"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "description": "<p>Moves to the component located at the index</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 946,
                                "end": 949,
                                "flags": 0,
                                "escapedText": "idx"
                            },
                            "type": "number",
                            "tagName": {
                                "pos": 940,
                                "end": 945,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": ""
                        }
                    ]
                },
                {
                    "name": "addChild",
                    "args": [
                        {
                            "name": "childName",
                            "type": "string"
                        },
                        {
                            "name": "childGroup",
                            "type": "FormGroup"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "jsdoctags": [
                        {
                            "name": "childName",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "childGroup",
                            "type": "FormGroup",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "submitForm",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, QueryList, ViewChildren } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { BaseFormComponent } from '@shared/components/forms/base-form/base-form.component';\nimport { HiddenAsteriskInputComponent } from '@shared/components/inputs/hidden-asterisk-input/hidden-asterisk-input.component';\n\n@Component({\n  selector: 'brave-ssn-full-form',\n  templateUrl: './ssn-full-form.component.html',\n  providers: [{ provide: 'name', useValue: 'ssnfull-form' }],\n})\nexport class SsnFullFormComponent extends BaseFormComponent {\n  @ViewChildren(HiddenAsteriskInputComponent)\n  hiddenFields: QueryList<HiddenAsteriskInputComponent> | undefined;\n\n  childName: string = 'input';\n\n  constructor(fb: FormBuilder) {\n    super(fb, 'ssnfull-form');\n  }\n\n  formatChildName(childName: string, digit: number): string {\n    return `${childName}-${digit}`;\n  }\n\n  /**\n   * Moves to the component located at the index\n   * @param idx\n   */\n  moveNext(idx: number): void {\n    const comp = this.hiddenFields?.find((c, i) => i === idx + 1);\n    if (comp) {\n      setTimeout(() => {\n        comp.focusMe();\n      }, 500);\n    }\n  }\n\n  /**\n   * Clears out all the values from the form\n   */\n  clearForm(): void {\n    this.hiddenFields?.forEach((c) => {\n      c.clearMe();\n    });\n    this.hiddenFields?.first.focusMe(); // set the cursor to the first one\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "fb",
                        "type": "FormBuilder"
                    }
                ],
                "line": 15,
                "jsdoctags": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "BaseFormComponent",
            "templateData": "<!-- first three digits -->\n<form [formGroup]=\"parentForm\">\n  <div class=\"flex\">\n    <!-- first three digits -->\n    <span\n      class=\"flex justify-center items-center p-1 border-0 rounded bg-coolGray-100\"\n    >\n      <!-- Passing parent form to the child component -->\n      <div *ngFor=\"let x of [0, 1, 2]; index as idx\" class=\"flex mr-1\">\n        <brave-hidden-asterisk-input\n          [index]=\"idx\"\n          (onComponentReady)=\"addChild(formatChildName(childName, x), $event)\"\n          (onMoveNext)=\"moveNext(x)\"\n        >\n        </brave-hidden-asterisk-input>\n      </div>\n    </span>\n\n    <!-- hyphen -->\n    <span class=\"flex justify-center items-center -mt-2 p-1\">&#8212; </span>\n\n    <!-- second two digits -->\n    <span\n      class=\"flex justify-center items-center p-1 border-0 rounded bg-coolGray-100\"\n    >\n      <!-- Passing parent form to the child component -->\n      <div *ngFor=\"let x of [3, 4]; index as idx\" class=\"flex mr-1\">\n        <brave-hidden-asterisk-input\n          [index]=\"idx\"\n          (onComponentReady)=\"addChild(formatChildName(childName, x), $event)\"\n          (onMoveNext)=\"moveNext(x)\"\n        >\n        </brave-hidden-asterisk-input>\n      </div>\n    </span>\n\n    <!-- hyphen -->\n    <span class=\"flex justify-center items-center -mt-2 p-1\">&#8212; </span>\n\n    <!-- last four to populate -->\n    <span\n      class=\"flex justify-center items-center p-1 border-0 rounded bg-coolGray-100\"\n    >\n      <!-- Passing parent form to the child component -->\n      <div *ngFor=\"let x of [5, 6, 7, 8]; index as idx\" class=\"flex mr-1\">\n        <brave-hidden-asterisk-input\n          [index]=\"idx\"\n          (onComponentReady)=\"addChild(formatChildName(childName, x), $event)\"\n          (onMoveNext)=\"moveNext(x)\"\n        >\n        </brave-hidden-asterisk-input>\n      </div>\n    </span>\n  </div>\n</form>\n"
        },
        {
            "name": "SsnLastfourFormComponent",
            "id": "component-SsnLastfourFormComponent-1ea0e3fbbf19a25a650caf3a37155227",
            "file": "src/app/shared/components/forms/ssn-lastfour-form/ssn-lastfour-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{ provide: , useValue:  }"
                }
            ],
            "selector": "brave-ssn-lastfour-form",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./ssn-lastfour-form.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "hideHint",
                    "defaultValue": "false",
                    "line": 16,
                    "type": "boolean",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "onChanges",
                    "defaultValue": "new EventEmitter()",
                    "line": 9,
                    "type": "EventEmitter<any>",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "onSubmit",
                    "defaultValue": "new EventEmitter()",
                    "line": 10,
                    "type": "EventEmitter<FormGroup>",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "onSubmitError",
                    "defaultValue": "new EventEmitter()",
                    "line": 12,
                    "type": "EventEmitter<literal type>",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "childName",
                    "defaultValue": "'input'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "hiddenFields",
                    "type": "QueryList<HiddenAsteriskInputComponent> | undefined",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "decorators": [
                        {
                            "name": "ViewChildren",
                            "stringifiedArguments": "HiddenAsteriskInputComponent"
                        }
                    ]
                },
                {
                    "name": "parentForm",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "clearForm",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 41,
                    "description": "<p>Clears out all the values from the form</p>\n"
                },
                {
                    "name": "formatChildName",
                    "args": [
                        {
                            "name": "childName",
                            "type": "string"
                        },
                        {
                            "name": "digit",
                            "type": "number"
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 21,
                    "jsdoctags": [
                        {
                            "name": "childName",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "digit",
                            "type": "number",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "moveNext",
                    "args": [
                        {
                            "name": "idx",
                            "type": "number"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "description": "<p>Moves to the component located at the index</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 966,
                                "end": 969,
                                "flags": 0,
                                "escapedText": "idx"
                            },
                            "type": "number",
                            "tagName": {
                                "pos": 960,
                                "end": 965,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": ""
                        }
                    ]
                },
                {
                    "name": "addChild",
                    "args": [
                        {
                            "name": "childName",
                            "type": "string"
                        },
                        {
                            "name": "childGroup",
                            "type": "FormGroup"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "jsdoctags": [
                        {
                            "name": "childName",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "childGroup",
                            "type": "FormGroup",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "submitForm",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, QueryList, ViewChildren } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { BaseFormComponent } from '@shared/components/forms/base-form/base-form.component';\nimport { HiddenAsteriskInputComponent } from '@shared/components/inputs/hidden-asterisk-input/hidden-asterisk-input.component';\n\n@Component({\n  selector: 'brave-ssn-lastfour-form',\n  templateUrl: './ssn-lastfour-form.component.html',\n  providers: [{ provide: 'name', useValue: 'address-form' }],\n})\nexport class SsnLastfourFormComponent extends BaseFormComponent {\n  @ViewChildren(HiddenAsteriskInputComponent)\n  hiddenFields: QueryList<HiddenAsteriskInputComponent> | undefined;\n\n  childName: string = 'input';\n\n  constructor(fb: FormBuilder) {\n    super(fb, 'lastfour-form');\n  }\n\n  formatChildName(childName: string, digit: number): string {\n    return `${childName}-${digit}`;\n  }\n\n  /**\n   * Moves to the component located at the index\n   * @param idx\n   */\n  moveNext(idx: number): void {\n    const comp = this.hiddenFields?.find((c) => c.index === idx + 1);\n    if (comp) {\n      setTimeout(() => {\n        comp.focusMe();\n      }, 500);\n    }\n  }\n\n  /**\n   * Clears out all the values from the form\n   */\n  clearForm(): void {\n    this.hiddenFields?.forEach((c) => {\n      c.clearMe();\n    });\n    this.hiddenFields?.first.focusMe(); // set the cursor to the first one\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "fb",
                        "type": "FormBuilder"
                    }
                ],
                "line": 15,
                "jsdoctags": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "BaseFormComponent",
            "templateData": "<div class=\"flex\">\n  <!-- first three digits -->\n  <span *ngFor=\"let number of [0, 1, 2]\" class=\"flex justify-center p-1\">\n    <div style=\"position: relative\">\n      <div\n        class=\"flex text-3xl w-4 h-full pt-1 justify-center items-center text-blueGray-600\"\n      >\n        <p>&#42;</p>\n      </div>\n    </div>\n  </span>\n\n  <!-- hyphen -->\n  <span class=\"flex justify-center items-center -mt-2 p-1\">&#8212; </span>\n\n  <!-- second two digits -->\n  <span *ngFor=\"let number of [0, 1]\" class=\"flex justify-center p-1\">\n    <div style=\"position: relative\">\n      <div\n        class=\"flex text-3xl w-4 h-full pt-1 justify-center items-center text-blueGray-600\"\n      >\n        <p>&#42;</p>\n      </div>\n    </div>\n  </span>\n\n  <!-- hyphen -->\n  <span class=\"flex justify-center items-center -mt-2 p-1\">&#8212; </span>\n\n  <!-- last four to populate -->\n  <span class=\"flex flex-shrink border-0 rounded bg-coolGray-100\">\n    <form [formGroup]=\"parentForm\" class=\"flex justify-center items-center\">\n      <!-- Passing parent form to the child component -->\n      <div *ngFor=\"let x of [0, 1, 2, 3]; index as idx\" class=\"flex\">\n        <brave-hidden-asterisk-input\n          [index]=\"idx\"\n          (onComponentReady)=\"addChild(formatChildName(childName, x), $event)\"\n          (onMoveNext)=\"moveNext(idx)\"\n        >\n        </brave-hidden-asterisk-input>\n      </div>\n    </form>\n  </span>\n</div>\n"
        },
        {
            "name": "TableDropdownComponent",
            "id": "component-TableDropdownComponent-842c0ab8925fef314f9d305cebc8e878",
            "file": "src/app/shared/components/dropdowns/popdowns/table-dropdown/table-dropdown.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-table-dropdown",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./table-dropdown.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "btnDropdownRef",
                    "type": "ElementRef | undefined",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'btnDropdownRef', {static: false}"
                        }
                    ]
                },
                {
                    "name": "dropdownPopoverShow",
                    "defaultValue": "false",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "popoverDropdownRef",
                    "type": "ElementRef | undefined",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'popoverDropdownRef', {static: false}"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15
                },
                {
                    "name": "toggleDropdown",
                    "args": [
                        {
                            "name": "event",
                            "type": "literal type"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "literal type",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, AfterViewInit, ViewChild, ElementRef } from '@angular/core';\nimport { createPopper } from '@popperjs/core';\n\n@Component({\n  selector: 'brave-table-dropdown',\n  templateUrl: './table-dropdown.component.html',\n})\nexport class TableDropdownComponent implements AfterViewInit {\n  dropdownPopoverShow = false;\n  @ViewChild('btnDropdownRef', { static: false }) btnDropdownRef:\n    | ElementRef\n    | undefined;\n  @ViewChild('popoverDropdownRef', { static: false })\n  popoverDropdownRef: ElementRef | undefined;\n  ngAfterViewInit() {\n    createPopper(\n      this.btnDropdownRef?.nativeElement,\n      this.popoverDropdownRef?.nativeElement,\n      {\n        placement: 'bottom-start',\n      }\n    );\n  }\n  toggleDropdown(event: { preventDefault: () => void }) {\n    event.preventDefault();\n    if (this.dropdownPopoverShow) {\n      this.dropdownPopoverShow = false;\n    } else {\n      this.dropdownPopoverShow = true;\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "implements": [
                "AfterViewInit"
            ],
            "templateData": "<a\n  class=\"text-blueGray-500 block py-1 px-3\"\n  href=\"#pablo\"\n  (click)=\"toggleDropdown($event)\"\n  #btnDropdownRef\n>\n  <i class=\"fas fa-ellipsis-v\"></i>\n</a>\n<div class=\"min-w-48 z-50\" #popoverDropdownRef>\n  <div\n    class=\"bg-white text-base float-left py-2 list-none text-left rounded shadow-lg mt-1 min-w-48\"\n    [ngClass]=\"dropdownPopoverShow ? 'block' : 'hidden'\"\n  >\n    <a\n      href=\"#pablo\"\n      class=\"text-sm py-2 px-4 font-normal block w-full whitespace-nowrap bg-transparent text-blueGray-700\"\n    >\n      Action\n    </a>\n    <a\n      href=\"#pablo\"\n      class=\"text-sm py-2 px-4 font-normal block w-full whitespace-nowrap bg-transparent text-blueGray-700\"\n    >\n      Another action\n    </a>\n    <a\n      href=\"#pablo\"\n      class=\"text-sm py-2 px-4 font-normal block w-full whitespace-nowrap bg-transparent text-blueGray-700\"\n    >\n      Something else here\n    </a>\n    <div class=\"h-0 my-2 border border-solid border-blueGray-100\"></div>\n    <a\n      href=\"#pablo\"\n      class=\"text-sm py-2 px-4 font-normal block w-full whitespace-nowrap bg-transparent text-blueGray-700\"\n    >\n      Seprated link\n    </a>\n  </div>\n</div>\n"
        },
        {
            "name": "TradelineDetailRowComponent",
            "id": "component-TradelineDetailRowComponent-4910e29f9600f8fff3a7df46cf1b84c7",
            "file": "src/app/shared/components/tradelines/tradeline-detail-row/tradeline-detail-row.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-tradeline-detail-row",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./tradeline-detail-row.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "label",
                    "defaultValue": "''",
                    "line": 8,
                    "type": "string | undefined"
                },
                {
                    "name": "value",
                    "defaultValue": "''",
                    "line": 9,
                    "type": "number | string | undefined"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'brave-tradeline-detail-row',\n  templateUrl: './tradeline-detail-row.component.html',\n})\nexport class TradelineDetailRowComponent implements OnInit {\n  @Input() label: string | undefined = '';\n  @Input() value: number | string | undefined = '';\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 9
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"flex justify-between w-full\">\n  <span>\n    <p class=\"text-xs text-dk-gray\">{{ label }}</p>\n  </span>\n  <span>\n    <p class=\"text-xs text-dk-gray text-opacity-50 text-right\">\n      {{ value }}\n    </p>\n  </span>\n</div>\n"
        },
        {
            "name": "TradelineDetailsComponent",
            "id": "component-TradelineDetailsComponent-2736bcc9788643dbf4a420f037284b5b",
            "file": "src/app/shared/components/tradelines/tradeline-details/tradeline-details.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-tradeline-details",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./tradeline-details.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "address",
                    "defaultValue": "''",
                    "line": 53,
                    "type": "string"
                },
                {
                    "name": "config",
                    "defaultValue": "{} as ITradelineDetailsConfig",
                    "line": 50,
                    "type": "ITradelineDetailsConfig"
                },
                {
                    "name": "payments",
                    "line": 51,
                    "type": "any"
                },
                {
                    "name": "remarks",
                    "defaultValue": "''",
                    "line": 52,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 56
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit, Input } from '@angular/core';\n\nexport interface IRevolvingTradelineDetails {\n  dateOpened?: string;\n  accountDesignator?: string;\n  late30Count?: number | string;\n  late60Count?: number | string;\n  late90Count?: number | string;\n  amountPastDue?: number | string;\n  disputeFlag?: string;\n}\n\nexport interface IInstallmentTradelineDetails {\n  dateOpened?: string;\n  accountDesignator?: string;\n  termMonths?: number | string;\n  late30Count?: number | string;\n  late60Count?: number | string;\n  late90Count?: number | string;\n  amountPastDue?: number | string;\n  disputeFlag?: string;\n}\n\nexport interface ICollectionsTradelineDetails {\n  originalCreditor?: string;\n  creditType?: string;\n  dateOpened?: string;\n  disputeFlag?: string;\n}\n\nexport interface ITradelineDetailsConfig {\n  originalCreditor?: string | undefined;\n  creditType?: string | undefined;\n  dateOpened?: string | undefined;\n  accountDesignator?: string | undefined;\n  termMonths?: number | string | undefined;\n  late30Count?: number | string | undefined;\n  late60Count?: number | string | undefined;\n  late90Count?: number | string | undefined;\n  amountPastDue?: number | string | undefined;\n  disputeFlag?: string | undefined;\n  payments?: any | undefined;\n}\n\n@Component({\n  selector: 'brave-tradeline-details',\n  templateUrl: './tradeline-details.component.html',\n})\nexport class TradelineDetailsComponent implements OnInit {\n  @Input() config: ITradelineDetailsConfig = {} as ITradelineDetailsConfig;\n  @Input() payments: any;\n  @Input() remarks: string = '';\n  @Input() address: string = '';\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 53
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<!-- <div class=\"border-t border-blueGray-300 my-2\"></div> -->\n<div class=\"flex items-center mb-3\">\n  <span>Account Details</span>\n</div>\n<div class=\"card\">\n  <div\n    *ngIf=\"config | parseTradelineDetails as rows\"\n    class=\"divide-y divide-blueGray-300\"\n  >\n    <div *ngFor=\"let row of rows\" class=\"py-2 px-1\">\n      <brave-tradeline-detail-row\n        [label]=\"row.label\"\n        [value]=\"row.value\"\n      ></brave-tradeline-detail-row>\n    </div>\n    <!-- Spacer -->\n    <div></div>\n  </div>\n  <div *ngIf=\"viewDetail.open$ | async as open\">\n    <brave-tradeline-payments\n      [payments]=\"payments\"\n      [remarks]=\"remarks\"\n      [address]=\"address\"\n    ></brave-tradeline-payments>\n  </div>\n  <div class=\"flex justify-center my-6\">\n    <brave-viewdetail-button #viewDetail>\n      <p class=\"text-sm hover:cursor-pointer\">See Payment History</p>\n    </brave-viewdetail-button>\n  </div>\n</div>\n<div class=\"border-t border-blueGray-300 my-2\"></div>\n"
        },
        {
            "name": "TradelineMetricsComponent",
            "id": "component-TradelineMetricsComponent-a762be2c584951e98aeabfc56cc7c737",
            "file": "src/app/shared/components/tradelines/tradeline-metrics/tradeline-metrics.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-tradeline-metrics",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./tradeline-metrics.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 10
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'brave-tradeline-metrics',\n  templateUrl: './tradeline-metrics.component.html',\n})\nexport class TradelineMetricsComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 7
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div\n  style=\"padding: 2.25rem 0; background-color: lightgrey\"\n  class=\"flex justify-center\"\n>\n  <span>\n    <p>Credit Limit and Utilization</p>\n  </span>\n</div>\n"
        },
        {
            "name": "TradelinePaymentHistoryComponent",
            "id": "component-TradelinePaymentHistoryComponent-cf840f96a37b376d76bb887adb8958e0",
            "file": "src/app/shared/components/tradelines/tradeline-payment-history/tradeline-payment-history.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-tradeline-payment-history",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./tradeline-payment-history.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "gridHeight",
                    "defaultValue": "'h-3'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "gridWidth",
                    "defaultValue": "'w-3'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "test",
                    "defaultValue": "{\n    headers: {\n      year: null,\n      months: months,\n    },\n    years: [\n      {\n        year: '2020',\n        months: ['c', 'c', 'c', 'c', 'c', 'c', '', '', '', '', '', ''],\n      },\n      {\n        year: '2019',\n        months: ['c', 'c', 'c', 'u', 'c', '1', 'c', 'c', 'c', 'c', 'c', 'c'],\n      },\n      {\n        year: '2018',\n        months: ['c', 'c', 'c', 'u', 'c', '1', 'c', '', 'c', 'c', 'c', 'c'],\n      },\n    ],\n  }",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'brave-tradeline-payment-history',\n  templateUrl: './tradeline-payment-history.component.html',\n})\nexport class TradelinePaymentHistoryComponent implements OnInit {\n  gridWidth: string = 'w-3';\n  gridHeight: string = 'h-3';\n  test = {\n    headers: {\n      year: null,\n      months: months,\n    },\n    years: [\n      {\n        year: '2020',\n        months: ['c', 'c', 'c', 'c', 'c', 'c', '', '', '', '', '', ''],\n      },\n      {\n        year: '2019',\n        months: ['c', 'c', 'c', 'u', 'c', '1', 'c', 'c', 'c', 'c', 'c', 'c'],\n      },\n      {\n        year: '2018',\n        months: ['c', 'c', 'c', 'u', 'c', '1', 'c', '', 'c', 'c', 'c', 'c'],\n      },\n    ],\n  };\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n\nconst months = ['j', 'f', 'm', 'a', 'm', 'j', 'j', 'a', 's', 'o', 'n', 'd'];\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 29
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"my-6\">\n  <span class=\"text-xs text-dk-gray\"><p>Payment History</p></span>\n</div>\n<!-- header -->\n<div class=\"mb-4\">\n  <div class=\"flex justify-between\">\n    <div [ngClass]=\"gridHeight\" class=\"w-11\">&nbsp;</div>\n    <div\n      *ngFor=\"let month of test.headers.months\"\n      style=\"font-size: 0.66rem\"\n      [ngClass]=\"[gridWidth, gridHeight]\"\n      class=\"font-sans mr-1 text-dk-gray\"\n    >\n      <div [ngClass]=\"gridWidth\" class=\"flex justify-center\">\n        {{ month.toUpperCase() }}\n      </div>\n    </div>\n  </div>\n</div>\n<!-- data -->\n<div class=\"mb-4\">\n  <div *ngFor=\"let year of test.years\" class=\"flex justify-between mb-2\">\n    <div\n      style=\"font-size: 0.66rem\"\n      [ngClass]=\"gridHeight\"\n      class=\"w-11 text-dk-gray\"\n    >\n      {{ year.year }}\n    </div>\n    <div\n      *ngFor=\"let month of year.months\"\n      [ngClass]=\"[gridWidth, gridHeight]\"\n      class=\"mr-1\"\n    >\n      <brave-tradeline-payment-icon\n        [height]=\"gridHeight\"\n        [width]=\"gridWidth\"\n        [code]=\"month\"\n      ></brave-tradeline-payment-icon>\n    </div>\n  </div>\n</div>\n<!-- legend -->\n<div class=\"flex flex-wrap\">\n  <div class=\"flex items-center whitespace-nowrap mr-4\">\n    <brave-tradeline-payment-icon code=\"C\"></brave-tradeline-payment-icon>\n    <p style=\"font-size: 0.5rem\" class=\"ml-1 whitespace-nowrap\">= On-Time</p>\n  </div>\n  <div class=\"flex items-center whitespace-nowrap mr-4\">\n    <brave-tradeline-payment-icon code=\"1\"></brave-tradeline-payment-icon>\n    <p style=\"font-size: 0.5rem\" class=\"ml-1 whitespace-nowrap\">\n      = 30-180 Day Late Payment\n    </p>\n  </div>\n  <div class=\"flex items-center whitespace-nowrap mr-4\">\n    <brave-tradeline-payment-icon code=\"U\"></brave-tradeline-payment-icon>\n    <p style=\"font-size: 0.5rem\" class=\"ml-1 whitespace-nowrap\">= Unknown</p>\n  </div>\n  <div class=\"flex items-center whitespace-nowrap mr-4\">\n    <brave-tradeline-payment-icon code=\"9\"></brave-tradeline-payment-icon>\n    <p style=\"font-size: 0.5rem\" class=\"ml-1 whitespace-nowrap\">\n      = Collections/Chargeoff\n    </p>\n  </div>\n  <div class=\"flex items-center whitespace-nowrap mr-4\">\n    <brave-tradeline-payment-icon code=\"8R\"></brave-tradeline-payment-icon>\n    <p style=\"font-size: 0.5rem\" class=\"ml-1 whitespace-nowrap\">\n      = Other Symbols\n    </p>\n  </div>\n</div>\n"
        },
        {
            "name": "TradelinePaymentIconComponent",
            "id": "component-TradelinePaymentIconComponent-22eb2abed27b4eab1d3b616240eac690",
            "file": "src/app/shared/components/tradelines/tradeline-payment-icon/tradeline-payment-icon.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-tradeline-payment-icon",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./tradeline-payment-icon.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "code",
                    "defaultValue": "'U'",
                    "line": 23,
                    "type": "string"
                },
                {
                    "name": "height",
                    "defaultValue": "'h-4'",
                    "line": 24,
                    "type": "string"
                },
                {
                    "name": "width",
                    "defaultValue": "'w-4'",
                    "line": 25,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "tradelineIcons",
                    "defaultValue": "TradelineIcons",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 26
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29
                },
                {
                    "name": "parseCode",
                    "args": [
                        {
                            "name": "code",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "TradelineIcons",
                    "typeParameters": [],
                    "line": 31,
                    "jsdoctags": [
                        {
                            "name": "code",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\nimport {\n  LATE_PAY_STATUS_CODES,\n  COLLECTION_PAY_STATUS_CODES,\n  UNKNOWN_PAY_STATUS_CODES,\n  OTHER_PAY_STATUS_CODES,\n  ONTIME_PAY_STATUS_CODES,\n} from '@shared/data';\n\nexport enum TradelineIcons {\n  Late = 'late',\n  Collection = 'collection',\n  Unknown = 'unknown',\n  Current = 'current',\n  Other = 'other',\n}\n\n@Component({\n  selector: 'brave-tradeline-payment-icon',\n  templateUrl: './tradeline-payment-icon.component.html',\n})\nexport class TradelinePaymentIconComponent implements OnInit {\n  @Input() code: string = 'U';\n  @Input() height: string = 'h-4';\n  @Input() width: string = 'w-4';\n  tradelineIcons = TradelineIcons;\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  parseCode(code: string): TradelineIcons {\n    if (LATE_PAY_STATUS_CODES[code.toUpperCase()]) return TradelineIcons.Late;\n    if (UNKNOWN_PAY_STATUS_CODES[code.toUpperCase()])\n      return TradelineIcons.Unknown;\n    if (COLLECTION_PAY_STATUS_CODES[code.toUpperCase()])\n      return TradelineIcons.Collection;\n    if (ONTIME_PAY_STATUS_CODES[code.toUpperCase()])\n      return TradelineIcons.Current;\n    if (OTHER_PAY_STATUS_CODES[code.toUpperCase()]) return TradelineIcons.Other;\n    return TradelineIcons.Other;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 26
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div\n  *ngIf=\"this.parseCode(code) === tradelineIcons.Late\"\n  [ngClass]=\"[height, width]\"\n  class=\"flex justify-center items-center\"\n>\n  <i class=\"material-icons text-xs text-orange-600\">close</i>\n</div>\n<div\n  *ngIf=\"this.parseCode(code) === tradelineIcons.Collection\"\n  [ngClass]=\"[height, width]\"\n  class=\"flex justify-center items-center\"\n>\n  <span class=\"text-xs text-coolGray-600\">C</span>\n</div>\n<div\n  *ngIf=\"this.parseCode(code) === tradelineIcons.Unknown\"\n  [ngClass]=\"[height, width]\"\n  class=\"flex justify-center items-center\"\n>\n  <i style=\"font-size: 0.5rem\" class=\"material-icons text-coolGray-300\"\n    >circle</i\n  >\n</div>\n<div\n  *ngIf=\"this.parseCode(code) === tradelineIcons.Current\"\n  [ngClass]=\"[height, width]\"\n  class=\"flex justify-center items-center\"\n>\n  <i class=\"material-icons text-xs text-emerald-500\">check</i>\n</div>\n<div\n  *ngIf=\"this.parseCode(code) === tradelineIcons.Other\"\n  [ngClass]=\"[height, width]\"\n  class=\"flex justify-center items-center\"\n>\n  <i class=\"material-icons text-xs text-coolGray-600\">info_outline</i>\n</div>\n"
        },
        {
            "name": "TradelinePaymentsComponent",
            "id": "component-TradelinePaymentsComponent-943413570fd247fb6ec1dae575847554",
            "file": "src/app/shared/components/tradelines/tradeline-payments/tradeline-payments.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-tradeline-payments",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./tradeline-payments.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "address",
                    "defaultValue": "''",
                    "line": 10,
                    "type": "string"
                },
                {
                    "name": "payments",
                    "line": 8,
                    "type": "any"
                },
                {
                    "name": "remarks",
                    "defaultValue": "''",
                    "line": 9,
                    "type": "string"
                }
            ],
            "outputsClass": [
                {
                    "name": "onDisputeClick",
                    "defaultValue": "new EventEmitter()",
                    "line": 11,
                    "type": "EventEmitter<void>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'brave-tradeline-payments',\n  templateUrl: './tradeline-payments.component.html',\n})\nexport class TradelinePaymentsComponent implements OnInit {\n  @Input() payments: any;\n  @Input() remarks: string = '';\n  @Input() address: string = '';\n  @Output() onDisputeClick: EventEmitter<void> = new EventEmitter();\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 11
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"px-1\">\n  <brave-tradeline-payment-history></brave-tradeline-payment-history>\n  <brave-tradeline-remarks\n    [remarks]=\"remarks\"\n    [address]=\"address\"\n    (disputeClick)=\"onDisputeClick.emit()\"\n  ></brave-tradeline-remarks>\n</div>\n"
        },
        {
            "name": "TradelineRemarksComponent",
            "id": "component-TradelineRemarksComponent-faa44fff2bf759cf80d29566a0f6d2b6",
            "file": "src/app/shared/components/tradelines/tradeline-remarks/tradeline-remarks.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-tradeline-remarks",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./tradeline-remarks.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "address",
                    "defaultValue": "''",
                    "line": 9,
                    "type": "string"
                },
                {
                    "name": "remarks",
                    "defaultValue": "''",
                    "line": 8,
                    "type": "string"
                }
            ],
            "outputsClass": [
                {
                    "name": "disputeClick",
                    "defaultValue": "new EventEmitter()",
                    "line": 10,
                    "type": "EventEmitter<void>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\n@Component({\n  selector: 'brave-tradeline-remarks',\n  templateUrl: './tradeline-remarks.component.html',\n})\nexport class TradelineRemarksComponent implements OnInit {\n  @Input() remarks: string = '';\n  @Input() address: string = '';\n  @Output() disputeClick: EventEmitter<void> = new EventEmitter();\n\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 10
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"my-8\">\n  <div><p class=\"text-xs text-dk-gray mb-4\">Remarks</p></div>\n  <div>\n    <p class=\"text-xs text-dk-gray text-opacity-50\">\n      {{ remarks }}\n    </p>\n  </div>\n</div>\n\n<div class=\"mb-8\">\n  <div><p class=\"text-xs text-dk-gray mb-4\">Contact Address</p></div>\n  <div>\n    <p class=\"text-xs text-dk-gray text-opacity-50\">\n      {{ address }}\n    </p>\n  </div>\n</div>\n\n<div class=\"mb-4\">\n  <div><p class=\"text-s text-dk-gray mb-4\">See an error?</p></div>\n  <div>\n    <p class=\"text-xs text-dk-gray\">\n      If you see an error in your account, you can ask for it to be reviewed\n      through a dispute. You can do this through Brave Credit!\n    </p>\n  </div>\n</div>\n\n<div class=\"flex justify-center mb-2\">\n  <brave-filled-onlytext-button (click)=\"disputeClick.emit()\"\n    >Dispute in a few clicks</brave-filled-onlytext-button\n  >\n</div>\n"
        },
        {
            "name": "TradelinesComponent",
            "id": "component-TradelinesComponent-9caaa779bd88b0b91c8db6947f80338e",
            "file": "src/app/views/tradelines/tradelines/tradelines.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-tradelines",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./tradelines.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 10
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'brave-tradelines',\n  templateUrl: './tradelines.component.html',\n})\nexport class TradelinesComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 7
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"container mx-auto max-w-xs h-full\">\n  <brave-tradelines-pure></brave-tradelines-pure>\n</div>\n"
        },
        {
            "name": "TradelinesPureComponent",
            "id": "component-TradelinesPureComponent-6b66926d9ff3e0f83155698a25d29c06",
            "file": "src/app/views/tradelines/tradelines-pure/tradelines-pure.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-tradelines-pure",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./tradelines-pure.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "address",
                    "defaultValue": "''",
                    "line": 11,
                    "type": "string"
                },
                {
                    "name": "details",
                    "defaultValue": "{} as ITradelineDetailsConfig",
                    "line": 9,
                    "type": "ITradelineDetailsConfig"
                },
                {
                    "name": "remarks",
                    "defaultValue": "''",
                    "line": 10,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\nimport { ITradelineDetailsConfig } from '@shared/components/tradelines/tradeline-details/tradeline-details.component';\n\n@Component({\n  selector: 'brave-tradelines-pure',\n  templateUrl: './tradelines-pure.component.html',\n})\nexport class TradelinesPureComponent implements OnInit {\n  @Input() details: ITradelineDetailsConfig = {} as ITradelineDetailsConfig;\n  @Input() remarks: string = '';\n  @Input() address: string = '';\n\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 11
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"px-4\">\n  <div>\n    <brave-tradeline-summary></brave-tradeline-summary>\n  </div>\n\n  <div>\n    <brave-tradeline-metrics></brave-tradeline-metrics>\n  </div>\n\n  <div class=\"mt-6\">\n    <brave-tradeline-details\n      [config]=\"details\"\n      [remarks]=\"remarks\"\n      [address]=\"address\"\n    ></brave-tradeline-details>\n  </div>\n\n  <div\n    style=\"padding: 2.25rem 0\"\n    class=\"flex justify-center border border-coolGray-300 bg-coolGray-300\"\n  >\n    <span>\n      <p>Ad text here</p>\n    </span>\n  </div>\n</div>\n"
        },
        {
            "name": "TradelineSummaryComponent",
            "id": "component-TradelineSummaryComponent-f66a936adf9ba18480a1107f7c74f6e0",
            "file": "src/app/shared/components/tradelines/tradeline-summary/tradeline-summary.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-tradeline-summary",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./tradeline-summary.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "status",
                    "defaultValue": "''",
                    "line": 8,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 11
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'brave-tradeline-summary',\n  templateUrl: './tradeline-summary.component.html',\n})\nexport class TradelineSummaryComponent implements OnInit {\n  @Input() status: string = '';\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"flex items-center\">\n  <div\n    class=\"h-4 w-4 bg-blue-500 rounded-full border-none\"\n    [ngClass]=\"status | snapshotStatus: 'background'\"\n  ></div>\n  <span class=\"ml-3\">Creditor Name (open)</span>\n</div>\n<div class=\"card pl-7 pr-3 mt-2\">\n  <div class=\"mb-2\">\n    <span><p class=\"text-xs text-dk-gray\">Date Reported: 2020-01-01</p></span>\n  </div>\n</div>\n<div class=\"py-9\">\n  <div class=\"flex flex-col justify-center items-center\">\n    <span\n      ><p class=\"text-4xl font-semibold mb-3\">{{ 1200 | currency }}</p></span\n    >\n    <span><p class=\"text-xs text-dk-gray\">Current Balance</p></span>\n  </div>\n</div>\n"
        },
        {
            "name": "UserDropdownComponent",
            "id": "component-UserDropdownComponent-dccebddf81b0594de1ab2efbab06388a",
            "file": "src/app/shared/components/dropdowns/popdowns/user-dropdown/user-dropdown.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-user-dropdown",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./user-dropdown.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "btnDropdownRef",
                    "type": "ElementRef | undefined",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'btnDropdownRef', {static: false}"
                        }
                    ]
                },
                {
                    "name": "dropdownPopoverShow",
                    "defaultValue": "false",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "popoverDropdownRef",
                    "type": "ElementRef | undefined",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'popoverDropdownRef', {static: false}"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15
                },
                {
                    "name": "toggleDropdown",
                    "args": [
                        {
                            "name": "event",
                            "type": "literal type"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "literal type",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, AfterViewInit, ViewChild, ElementRef } from '@angular/core';\nimport { createPopper } from '@popperjs/core';\n\n@Component({\n  selector: 'brave-user-dropdown',\n  templateUrl: './user-dropdown.component.html',\n})\nexport class UserDropdownComponent implements AfterViewInit {\n  dropdownPopoverShow = false;\n  @ViewChild('btnDropdownRef', { static: false }) btnDropdownRef:\n    | ElementRef\n    | undefined;\n  @ViewChild('popoverDropdownRef', { static: false })\n  popoverDropdownRef: ElementRef | undefined;\n  ngAfterViewInit() {\n    createPopper(\n      this.btnDropdownRef?.nativeElement,\n      this.popoverDropdownRef?.nativeElement,\n      {\n        placement: 'bottom-start',\n      }\n    );\n  }\n  toggleDropdown(event: { preventDefault: () => void }) {\n    event.preventDefault();\n    if (this.dropdownPopoverShow) {\n      this.dropdownPopoverShow = false;\n    } else {\n      this.dropdownPopoverShow = true;\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "implements": [
                "AfterViewInit"
            ],
            "templateData": "<a\n  class=\"text-blueGray-500 block\"\n  href=\"#pablo\"\n  (click)=\"toggleDropdown($event)\"\n  #btnDropdownRef\n>\n  <div class=\"items-center flex\">\n    <span\n      class=\"w-12 h-12 text-sm text-white bg-blueGray-200 inline-flex items-center justify-center rounded-full\"\n    >\n      <img\n        alt=\"...\"\n        class=\"w-full rounded-full align-middle border-none shadow-lg\"\n        src=\"assets/img/team-1-800x800.jpg\"\n      />\n    </span>\n  </div>\n</a>\n<div class=\"min-w-48 z-50\" #popoverDropdownRef>\n  <div\n    class=\"bg-white text-base z-50 float-left py-2 list-none text-left rounded shadow-lg mt-1 min-w-48\"\n    [ngClass]=\"dropdownPopoverShow ? 'block' : 'hidden'\"\n  >\n    <a\n      href=\"#pablo\"\n      class=\"text-sm py-2 px-4 font-normal block w-full whitespace-nowrap bg-transparent text-blueGray-700\"\n    >\n      Action\n    </a>\n    <a\n      href=\"#pablo\"\n      class=\"text-sm py-2 px-4 font-normal block w-full whitespace-nowrap bg-transparent text-blueGray-700\"\n    >\n      Another action\n    </a>\n    <a\n      href=\"#pablo\"\n      class=\"text-sm py-2 px-4 font-normal block w-full whitespace-nowrap bg-transparent text-blueGray-700\"\n    >\n      Something else here\n    </a>\n    <div class=\"h-0 my-2 border border-solid border-blueGray-100\"></div>\n    <a\n      href=\"#pablo\"\n      class=\"text-sm py-2 px-4 font-normal block w-full whitespace-nowrap bg-transparent text-blueGray-700\"\n    >\n      Seprated link\n    </a>\n  </div>\n</div>\n"
        },
        {
            "name": "ViewdetailButtonComponent",
            "id": "component-ViewdetailButtonComponent-625ae32f3665523266ab94bc3d44740e",
            "file": "src/app/shared/components/buttons/viewdetail-button/viewdetail-button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-viewdetail-button",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./viewdetail-button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "size",
                    "defaultValue": "''",
                    "line": 9
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "open",
                    "defaultValue": "false",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "open$",
                    "defaultValue": "new Subject()",
                    "type": "Subject<boolean>",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit, Input } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Component({\n  selector: 'brave-viewdetail-button',\n  templateUrl: './viewdetail-button.component.html',\n})\nexport class ViewdetailButtonComponent implements OnInit {\n  @Input() size = '';\n  open: boolean = false;\n  open$: Subject<boolean> = new Subject();\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 11
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<button\n  type=\"button\"\n  class=\"relative {{ size === 'full' ? 'w-100 mx-auto' : '' }} flex bg-transparent font-sans text-sm text-coolGray-700 text-left hover:cursor-pointer focus:outline-none\"\n  (click)=\"open = !open; open$.next(open)\"\n>\n  <span class=\"flex items-center mr-2\">\n    <p *ngIf=\"!open\"><ng-content></ng-content></p>\n    <p *ngIf=\"open\">Close</p>\n  </span>\n  <!-- TODO replace with material icon and add transform rotation-->\n  <span *ngIf=\"!open\" style=\"transform: rotate(90deg)\"> &#10095; </span>\n  <span *ngIf=\"open\" style=\"transform: rotate(270deg)\"> &#10095; </span>\n</button>\n"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        },
                        {
                            "name": "AuthenticationModule"
                        },
                        {
                            "name": "OnboardingModule"
                        },
                        {
                            "name": "SharedDirectivesModule"
                        },
                        {
                            "name": "SharedServicesModule"
                        },
                        {
                            "name": "ViewsModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AuthenticationModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AuthenticationComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AuthenticationRoutingModule"
                        },
                        {
                            "name": "ViewsModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "AuthenticationComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AuthenticationRoutingModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ComplianceModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AuthenticationComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "ComplianceRoutingModule"
                        },
                        {
                            "name": "ViewsModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "AuthenticationComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ComplianceRoutingModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "DashboardModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AuthenticationComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "DashboardRoutingModule"
                        },
                        {
                            "name": "ViewsModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "AuthenticationComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "DashboardRoutingModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "OnboardingModule",
            "children": [
                {
                    "type": "providers",
                    "elements": [
                        {
                            "name": "OnboardingService"
                        }
                    ]
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AuthenticationComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "OnboardingRoutingModule"
                        },
                        {
                            "name": "ViewsModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "AuthenticationComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "OnboardingRoutingModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SharedComponentsModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AuthenticationComponent"
                        },
                        {
                            "name": "CreditReportPipe"
                        },
                        {
                            "name": "HiddenAsteriskInputDirective"
                        },
                        {
                            "name": "KycKbaquestionsPipe"
                        },
                        {
                            "name": "NegativeTradelinesPipe"
                        },
                        {
                            "name": "OutlineTooltipDirective"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "AuthenticationComponent"
                        },
                        {
                            "name": "CreditReportPipe"
                        },
                        {
                            "name": "HiddenAsteriskInputDirective"
                        },
                        {
                            "name": "KycKbaquestionsPipe"
                        },
                        {
                            "name": "NegativeTradelinesPipe"
                        },
                        {
                            "name": "OutlineTooltipDirective"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SharedDirectivesModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SharedPipesModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SharedServicesModule",
            "children": [
                {
                    "type": "providers",
                    "elements": [
                        {
                            "name": "APIService"
                        },
                        {
                            "name": "AuthService"
                        },
                        {
                            "name": "DashboardService"
                        },
                        {
                            "name": "GuestService"
                        },
                        {
                            "name": "IamService"
                        },
                        {
                            "name": "KycService"
                        },
                        {
                            "name": "SyncService"
                        },
                        {
                            "name": "TransunionService"
                        }
                    ]
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ViewsModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "CompliancePrivacyComponent"
                        },
                        {
                            "name": "ComplianceTosComponent"
                        },
                        {
                            "name": "CreditReportComponent"
                        },
                        {
                            "name": "CreditReportPipe"
                        },
                        {
                            "name": "CreditReportPureComponent"
                        },
                        {
                            "name": "DashboardInitComponent"
                        },
                        {
                            "name": "KycAddressComponent"
                        },
                        {
                            "name": "KycAddressPureComponent"
                        },
                        {
                            "name": "KycBaseComponent"
                        },
                        {
                            "name": "KycCongratulationsComponent"
                        },
                        {
                            "name": "KycCongratulationsPureComponent"
                        },
                        {
                            "name": "KycErrorComponent"
                        },
                        {
                            "name": "KycIdverificationComponent"
                        },
                        {
                            "name": "KycIdverificationPureComponent"
                        },
                        {
                            "name": "KycKbaquestionsComponent"
                        },
                        {
                            "name": "KycKbaquestionsPipe"
                        },
                        {
                            "name": "KycKbaquestionsPureComponent"
                        },
                        {
                            "name": "KycPhonenumberComponent"
                        },
                        {
                            "name": "KycPhonenumberPureComponent"
                        },
                        {
                            "name": "KycSsnComponent"
                        },
                        {
                            "name": "KycSsnFullComponent"
                        },
                        {
                            "name": "KycSsnFullPureComponent"
                        },
                        {
                            "name": "KycSsnPureComponent"
                        },
                        {
                            "name": "KycWelcomeComponent"
                        },
                        {
                            "name": "KycWelcomePureComponent"
                        },
                        {
                            "name": "KycWelcomebackComponent"
                        },
                        {
                            "name": "KycWelcomebackPureComponent"
                        },
                        {
                            "name": "NegativeAccountInitialComponent"
                        },
                        {
                            "name": "NegativeAccountInitialPureComponent"
                        },
                        {
                            "name": "NegativeTradelinesPipe"
                        },
                        {
                            "name": "SigninComponent"
                        },
                        {
                            "name": "SigninForgotComponent"
                        },
                        {
                            "name": "SigninPureComponent"
                        },
                        {
                            "name": "SigninRedirectComponent"
                        },
                        {
                            "name": "SignupComponent"
                        },
                        {
                            "name": "SignupErrorComponent"
                        },
                        {
                            "name": "SignupErrorValidationComponent"
                        },
                        {
                            "name": "SignupKnowyouComponent"
                        },
                        {
                            "name": "SignupPureComponent"
                        },
                        {
                            "name": "SignupResendComponent"
                        },
                        {
                            "name": "SignupThankyouComponent"
                        },
                        {
                            "name": "TradelinesComponent"
                        },
                        {
                            "name": "TradelinesPureComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "CompliancePrivacyComponent"
                        },
                        {
                            "name": "ComplianceTosComponent"
                        },
                        {
                            "name": "CreditReportComponent"
                        },
                        {
                            "name": "CreditReportPipe"
                        },
                        {
                            "name": "CreditReportPureComponent"
                        },
                        {
                            "name": "DashboardInitComponent"
                        },
                        {
                            "name": "KycAddressComponent"
                        },
                        {
                            "name": "KycAddressPureComponent"
                        },
                        {
                            "name": "KycBaseComponent"
                        },
                        {
                            "name": "KycCongratulationsComponent"
                        },
                        {
                            "name": "KycCongratulationsPureComponent"
                        },
                        {
                            "name": "KycErrorComponent"
                        },
                        {
                            "name": "KycIdverificationComponent"
                        },
                        {
                            "name": "KycIdverificationPureComponent"
                        },
                        {
                            "name": "KycKbaquestionsComponent"
                        },
                        {
                            "name": "KycKbaquestionsPipe"
                        },
                        {
                            "name": "KycKbaquestionsPureComponent"
                        },
                        {
                            "name": "KycPhonenumberComponent"
                        },
                        {
                            "name": "KycPhonenumberPureComponent"
                        },
                        {
                            "name": "KycSsnComponent"
                        },
                        {
                            "name": "KycSsnFullComponent"
                        },
                        {
                            "name": "KycSsnFullPureComponent"
                        },
                        {
                            "name": "KycSsnPureComponent"
                        },
                        {
                            "name": "KycWelcomeComponent"
                        },
                        {
                            "name": "KycWelcomePureComponent"
                        },
                        {
                            "name": "KycWelcomebackComponent"
                        },
                        {
                            "name": "KycWelcomebackPureComponent"
                        },
                        {
                            "name": "NegativeAccountInitialComponent"
                        },
                        {
                            "name": "NegativeAccountInitialPureComponent"
                        },
                        {
                            "name": "NegativeTradelinesPipe"
                        },
                        {
                            "name": "SigninComponent"
                        },
                        {
                            "name": "SigninForgotComponent"
                        },
                        {
                            "name": "SigninPureComponent"
                        },
                        {
                            "name": "SigninRedirectComponent"
                        },
                        {
                            "name": "SignupComponent"
                        },
                        {
                            "name": "SignupErrorComponent"
                        },
                        {
                            "name": "SignupErrorValidationComponent"
                        },
                        {
                            "name": "SignupKnowyouComponent"
                        },
                        {
                            "name": "SignupPureComponent"
                        },
                        {
                            "name": "SignupResendComponent"
                        },
                        {
                            "name": "SignupThankyouComponent"
                        },
                        {
                            "name": "TradelinesComponent"
                        },
                        {
                            "name": "TradelinesPureComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "_deleteKeyNestedObject",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/utils/utils.ts",
                "type": "",
                "defaultValue": "(o: any, k: string) => {\n  if (!o) return;\n  delete o[k];\n  Object.keys(o).forEach((key) => {\n    if (typeof o[key] === 'object') {\n      _deleteKeyNestedObject(o[key], k);\n    }\n  });\n}"
            },
            {
                "name": "_updateNestedRecurse",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/utils/utils.ts",
                "type": "",
                "defaultValue": "(o: any, k: string, v: any) => {\n  if (!o) return;\n  Object.keys(o).forEach((key) => {\n    if (key == k) o[k] = v;\n    if (typeof o[key] === 'object') {\n      _updateNestedRecurse(o[key], k, v);\n    }\n  });\n}"
            },
            {
                "name": "Accent",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Accent",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/badges/filled-onlytext-badge/filled-onlytext-badge.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Accent",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/buttons/filled-onlytext-button/filled-onlytext-button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Accent",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/buttons/links-onlytext-button/links-onlytext-button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "accentConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.stories.ts",
                "type": "IFilledClosingAlertConfig",
                "defaultValue": "{\n  size: 'base',\n  backgroundColor: 'bg-fuchsia-500',\n  color: 'text-white',\n  alertTitle: 'Alert!',\n  alertBody: 'Something went wrong. Please try again.',\n}"
            },
            {
                "name": "accentConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/badges/filled-onlytext-badge/filled-onlytext-badge.stories.ts",
                "type": "IFilledOnlytextBadgeConfig",
                "defaultValue": "{\n  size: 'base',\n  backgroundColor: 'bg-fuchsia-200',\n  color: 'text-fuchsia-500',\n}"
            },
            {
                "name": "accentConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/buttons/filled-onlytext-button/filled-onlytext-button.stories.ts",
                "type": "IFilledOnlyTextButtonConfig",
                "defaultValue": "{\n  buttonSize: 'base',\n  backgroundColor: 'bg-fuchsia-500',\n  activeColor: 'bg-fuchsia-600',\n  color: 'text-white',\n}"
            },
            {
                "name": "accentConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/buttons/links-onlytext-button/links-onlytext-button.stories.ts",
                "type": "ILinksOnlyTextButtonConfig",
                "defaultValue": "{\n  buttonSize: 'base',\n  color: 'text-fuchsia-500',\n}"
            },
            {
                "name": "address",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/kyc-address/kyc-address/kyc-address.component.ts",
                "type": "Record<string, any>",
                "defaultValue": "{\n  addressOne: true,\n  addressTwo: true,\n  city: true,\n  state: true,\n  zip: true,\n}"
            },
            {
                "name": "address",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/tradelines/tradelines-pure/tradelines.stories.ts",
                "type": "string",
                "defaultValue": "'123 Main Street, Hollywood, CA'"
            },
            {
                "name": "address",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/tradelines/tradeline-details/tradeline-details.stories.ts",
                "type": "string",
                "defaultValue": "'123 Main Street, Hollywood, CA'"
            },
            {
                "name": "address",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/tradelines/tradeline-payments/tradeline-payments.stories.ts",
                "type": "string",
                "defaultValue": "'123 Main Street, Hollywood, CA'"
            },
            {
                "name": "Bottom",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/tooltips/outline-tooltip/outline-tooltip.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "BRAVE_ACCOUNT_TYPE",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/data/pay-status-codes.ts",
                "type": "Record<string, any>",
                "defaultValue": "{\n  '1': `30-Day Late Payment`,\n  '2': `60-Day Late Payment`,\n  '3': `90-Day Late Payment`,\n  '4': `120-Day Late Payment`,\n  '7': `Wage Earner Plan`,\n  '8R': `Repossesion Account`,\n  '9': `Collection Chargeoff Account`,\n}"
            },
            {
                "name": "braveState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/index.ts",
                "type": "[]",
                "defaultValue": "[\n  AppDataState,\n  UserState,\n  OnboardingState,\n  AgenciesState,\n  PreferencesState,\n]"
            },
            {
                "name": "cards",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/negative-account/negative-account-initial-pure/negative-account-initial-pure.stories.ts",
                "type": "INegativeAccountCardInputs[]",
                "defaultValue": "[\n  {\n    creditorName: 'ABC Collections',\n    lastReported: '2020-01-01',\n    accountTypeDescription: 'Collections Account',\n    accountTypeDescriptionValue: 'Open',\n    originalCreditor: 'Original Creditor',\n    originalCreditorValue: 'Loans R Us',\n    disputeFlag: 'Previously Disputed',\n    disputeFlagValue: 'No',\n    accountDetail: {\n      accountNumber: '12345678',\n      typeOfCollection: 'Collections',\n      amountPastDue: '700',\n      dateOpened: '2017-01-01',\n      dateLastPayment: '2019-01-01',\n    },\n  },\n  {\n    creditorName: 'XYZ Collections',\n    lastReported: '2020-01-01',\n    accountTypeDescription: 'Collections Account',\n    accountTypeDescriptionValue: 'Open',\n    originalCreditor: 'Original Creditor',\n    originalCreditorValue: 'Loans R Us',\n    disputeFlag: 'Previously Disputed',\n    disputeFlagValue: 'No',\n    accountDetail: {\n      accountNumber: '12345678',\n      typeOfCollection: 'Collections',\n      amountPastDue: '700',\n      dateOpened: '2017-01-01',\n      dateLastPayment: '2019-01-01',\n    },\n  },\n]"
            },
            {
                "name": "codeMap",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/kyc-idverification/kyc-idverification/kyc-idverification.component.ts",
                "type": "Record<string, any>",
                "defaultValue": "{\n  code: true,\n}"
            },
            {
                "name": "Collection",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/tradelines/tradeline-payment-icon/tradeline-payment-icon.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "COLLECTION_PAY_STATUS_CODES",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/data/pay-status-codes.ts",
                "type": "Record<string, any>",
                "defaultValue": "{\n  '9': `Collection Chargeoff Account`,\n}"
            },
            {
                "name": "collections",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/tradelines/tradeline-details/tradeline-details.stories.ts",
                "type": "ICollectionsTradelineDetails",
                "defaultValue": "{\n  originalCreditor: 'ABC Financing',\n  creditType: 'Collection',\n  dateOpened: '2018-01-01',\n  disputeFlag: 'No',\n}"
            },
            {
                "name": "Collections",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/tradelines/tradeline-details/tradeline-details.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "components",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layouts/authentication/authentication.module.ts",
                "type": "[]",
                "defaultValue": "[AuthenticationComponent]"
            },
            {
                "name": "components",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layouts/compliance/compliance.module.ts",
                "type": "[]",
                "defaultValue": "[ComplianceComponent]"
            },
            {
                "name": "components",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layouts/dashboard/dashboard.module.ts",
                "type": "[]",
                "defaultValue": "[DashboardComponent]"
            },
            {
                "name": "components",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layouts/onboarding/onboarding.module.ts",
                "type": "[]",
                "defaultValue": "[OnboardingComponent]"
            },
            {
                "name": "components",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/shared-components.module.ts",
                "type": "[]",
                "defaultValue": "[\n  BaseFormComponent,\n  SignInComponent,\n  SignUpComponent,\n  FilledOnlytextButtonComponent,\n  LinksOnlytextButtonComponent,\n  OutlineOnlytextButtonComponent,\n  OutlineInputComponent,\n  OutlineOnecolumnFormComponent,\n  GoogleIconsigninButtonComponent,\n  FacebookOnlytextsigninButtonComponent,\n  SimpleSignupFormComponent,\n  OutlineSelectInputComponent,\n  FilledClosingAlertComponent,\n  FilledOnlytextBadgeComponent,\n  IndexDropdownComponent,\n  MenuDropdownComponent,\n  NotificationDropdownComponent,\n  PagesDropdownComponent,\n  TableDropdownComponent,\n  UserDropdownComponent,\n  OutlineOnlytextSelectComponent,\n  FooterComponent,\n  FooterAdminComponent,\n  FooterSmallComponent,\n  HiddenAsteriskInputComponent,\n  OutlineAddressFormComponent,\n  OutlinePhoneFormComponent,\n  OutlineVerificationcodeFormComponent,\n  SsnFullFormComponent,\n  SsnLastfourFormComponent,\n  HiddenAsteriskInputComponent,\n  BaseModalRegularComponent,\n  BaseModalSmallComponent,\n  AdminNavbarComponent,\n  AuthNavbarComponent,\n  DashboardNavbarComponent,\n  IndexNavbarComponent,\n  OutlinePrevnextPaginationComponent,\n  FilledChecktextProgressbarComponent,\n  SidebarComponent,\n  FilledOnlytextTabsComponent,\n  NavigationTabsComponent,\n  OutlineTooltipComponent,\n  KbaquestionsFormComponent,\n  OutlineNamedobFormComponent,\n  SelectDobFormComponent,\n  OutlineNameFormComponent,\n  CreditcardCardComponent,\n  ViewdetailButtonComponent,\n  LoanCardComponent,\n  SnapshotDisplayCardComponent,\n  CreditBuilderCardComponent,\n  SnapshotDisplayCardComponent,\n  NegativeAccountCardComponent,\n  KbaMultiplechoiceInputComponent,\n  CreditReportCardComponent,\n  SpinnerComponent,\n  TradelineMetricsComponent,\n  TradelineSummaryComponent,\n  TradelineDetailsComponent,\n  TradelineDetailRowComponent,\n  TradelinePaymentsComponent,\n  TradelinePaymentIconComponent,\n  TradelinePaymentHistoryComponent,\n  TradelineRemarksComponent,\n]"
            },
            {
                "name": "config",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/modals/base-modal-regular/base-modal-regular.stories.ts",
                "type": "IBaseModalRegularConfig",
                "defaultValue": "{\n  openButtonText: 'Open',\n  title: 'Message Title',\n  body:\n    'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec ultrices est in dolor feugiat, et consequat urna imperdiet. Nam a purus elit. In eu dui fermentum, tincidunt nisi a, pulvinar nulla. Morbi justo lectus, pellentesque ut dignissim at, varius at erat. Nullam porta libero justo, non facilisis urna elementum quis. Sed cursus lacinia faucibus. Nulla at elit erat. Ut at pharetra est. In dictum fringilla odio sed fringilla.',\n  actionButtonOneText: 'Cancel',\n  actionButtonTwoText: 'Continue',\n}"
            },
            {
                "name": "config",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/modals/base-modal-small/base-modal-small.stories.ts",
                "type": "IBaseModalSmallConfig",
                "defaultValue": "{\n  openButtonText: 'Open',\n  title: 'Message Title',\n  body:\n    'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec ultrices est in dolor feugiat, et consequat urna imperdiet. Nam a purus elit. In eu dui fermentum, tincidunt nisi a, pulvinar nulla. Morbi justo lectus, pellentesque ut dignissim at, varius at erat. Nullam porta libero justo, non facilisis urna elementum quis. Sed cursus lacinia faucibus. Nulla at elit erat. Ut at pharetra est. In dictum fringilla odio sed fringilla.',\n  actionButtonOneText: 'Cancel',\n  actionButtonTwoText: 'Continue',\n}"
            },
            {
                "name": "config",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/progressbars/filled-checktext-progressbar/filled-checktext-progressbar.stories.ts",
                "type": "IFilledChecktextProgressbarConfig",
                "defaultValue": "{\n  size: 'base',\n}"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "CREDIT_REPORT_GROUPS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/data/credit-report.ts",
                "type": "Record<string, any>",
                "defaultValue": "{\n  c: { order: 1, group: CreditReportGroups.CreditCards, title: 'Credit Cards' },\n  r: { order: 1, group: CreditReportGroups.CreditCards, title: 'Credit Cards' },\n  y: {\n    order: 2,\n    group: CreditReportGroups.CollectionsAccounts,\n    title: 'Collections Accounts',\n  },\n  i: {\n    order: 3,\n    group: CreditReportGroups.InstallmentLoans,\n    title: 'Student, Car & Personal Loans',\n  },\n  m: { order: 4, group: CreditReportGroups.Mortgages, title: 'Mortgages' },\n}"
            },
            {
                "name": "creditReports",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/credit-report/credit-report-pure/credit-report-pure.stories.ts",
                "type": "ICreditReportCardGroup[]",
                "defaultValue": "[\n  {\n    title: 'Credit Cards',\n    group: CreditReportGroups.CreditCards,\n    cards: [\n      {\n        type: 'c',\n        creditorName: 'ABC Financial',\n        isOpen: true,\n        firstFieldName: 'Current Balance',\n        firstFieldValue: '1,200',\n        secondFieldName: 'Credit Limit',\n        secondFieldValue: '1,200',\n        thirdFieldName: 'Payment Status',\n        thirdFieldValue: 'Paid',\n        status: '',\n      },\n      {\n        type: 'c',\n        creditorName: 'XYZ Financial',\n        isOpen: true,\n        firstFieldName: 'Current Balance',\n        firstFieldValue: '200',\n        secondFieldName: 'Credit Limit',\n        secondFieldValue: '200',\n        thirdFieldName: 'Payment Status',\n        thirdFieldValue: 'Paid',\n        status: '',\n      },\n    ],\n  },\n  {\n    title: 'Collection Accounts',\n    group: CreditReportGroups.CollectionsAccounts,\n    cards: [\n      {\n        type: 'c',\n        creditorName: 'ABC Services',\n        isOpen: true,\n        firstFieldName: 'Current Balance',\n        firstFieldValue: '1,200',\n        secondFieldName: 'Credit Limit',\n        secondFieldValue: '1,200',\n        thirdFieldName: 'Payment Status',\n        thirdFieldValue: 'Paid',\n        status: '',\n      },\n    ],\n  },\n]"
            },
            {
                "name": "Current",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/tradelines/tradeline-payment-icon/tradeline-payment-icon.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/dashboard-init/dashboard-init.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/signup-error/signup-error.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/signup-error-validation/signup-error-validation.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/signup-knowyou/signup-knowyou.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/signup-thankyou/signup-thankyou.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/typography/typography-accent-bg-cooltext.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/typography/typography-accent-bg.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/typography/typography-primary-bg-cooltext.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/typography/typography-primary-bg.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/typography/typography-transparent-bg.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/credit-report/credit-report-pure/credit-report-pure.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/kyc-address/kyc-address-pure/kyc-address-pure.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/kyc-congratulations/kyc-congratulations-pure/kyc-congratulations-pure.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/kyc-idverification/kyc-idverification-pure/kyc-idverification-pure.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/kyc-kbaquestions/kyc-kbaquestions-pure/kyc-kbaquestions-pure.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/kyc-phonenumber/kyc-phonenumber-pure/kyc-phonenumber-pure.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/kyc-ssn/kyc-ssn-pure/kyc-ssn-pure.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/kyc-ssn-full/kyc-ssn-full-pure/kyc-ssn-full-pure.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/kyc-welcome/kyc-welcome-pure/kyc-welcome-pure.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/kyc-welcomeback/kyc-welcomeback-pure/kyc-welcomeback-pure.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/negative-account/negative-account-initial-pure/negative-account-initial-pure.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/signup/signup-pure/signup-pure.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/tradelines/tradelines-pure/tradelines.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/badges/filled-onlytext-badge/filled-onlytext-badge.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/buttons/filled-onlytext-button/filled-onlytext-button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/buttons/viewdetail-button/viewdetail-button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/buttons/outline-onlytext-button/outline-onlytext-button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/buttons/links-onlytext-button/links-onlytext-button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/cards/credit-builder-card/credit-builder-card.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/cards/creditcard-card/creditcard-card.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/cards/loan-card/loan-card.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/cards/negative-account-card/negative-account-card.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/cards/snapshot-display-card/snapshot-display-card.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/cards/credit-report-card/credit-report-card.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/inputs/hidden-asterisk-input/hidden-asterisk-input.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/inputs/kba-multiplechoice-input/kba-multiplechoice-input.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/inputs/outline-input/outline-input.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/inputs/outline-select-input/outline-select-input.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/forms/kbaquestions-form/kbaquestions-form.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/forms/outline-address-form/outline-address-form.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/forms/outline-name-form/outline-name-form.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/forms/outline-onecolumn-form/outline-onecolumn-form.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/forms/outline-phone-form/outline-phone-form.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/forms/outline-verificationcode-form/outline-verificationcode-form.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/forms/select-dob-form/select-dob-form.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/forms/ssn-full-form/ssn-full-form.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/forms/simple-signup-form/simple-signup-form.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/forms/ssn-lastfour-form/ssn-lastfour-form.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/interstitials/spinner/spinner.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/modals/base-modal-regular/base-modal-regular.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/modals/base-modal-small/base-modal-small.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/navbars/dashboard-navbar/dashboard-navbar.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/progressbars/filled-checktext-progressbar/filled-checktext-progressbar.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/paginations/outline-prevnext-pagination/outline-prevnext-pagination.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/tooltips/outline-tooltip/outline-tooltip.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/tabs/filled-onlytext-tabs/filled-onlytext-tabs.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/tabs/navigation-tabs/navigation-tabs.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/tradelines/tradeline-payments/tradeline-payments.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/tradelines/tradeline-payment-history/tradeline-payment-history.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/tradelines/tradeline-summary/tradeline-summary.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/dropdowns/popdowns/notification-dropdown/notification-dropdown.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/dropdowns/popdowns/table-dropdown/table-dropdown.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/dropdowns/popdowns/user-dropdown/user-dropdown.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/dropdowns/selects/outline-onlytext-select/outline-onlytext-select.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "defaultTradeline",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/negative-account/negative-account-initial/negative-tradelines.pipe.ts",
                "type": "object",
                "defaultValue": "{\n  creditorName: '',\n  lastReported: '',\n  accountTypeDescription: '',\n  accountTypeDescriptionValue: 'No account type',\n  disputeFlag: 'Previously Disputed?',\n  originalCreditor: 'Original Creditor',\n  originalCreditorValue: '',\n  disputeFlagValue: '',\n  accountDetail: {\n    accountNumber: '',\n    typeOfCollection: '',\n    amountPastDue: -1,\n    dateOpened: '',\n    dateLastPayment: '',\n    remarks: '',\n  },\n}"
            },
            {
                "name": "deleteKeyNestedObject",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/utils/utils.ts",
                "type": "",
                "defaultValue": "(o: any, k: string) => {\n  const obj = Object.assign({}, o);\n  _deleteKeyNestedObject(obj, k);\n  return obj;\n}",
                "description": "<p>A utility function to remove unwanted fields by key\nWill delete all keys of the name you specify</p>\n"
            },
            {
                "name": "Digit",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/cards/snapshot-display-card/snapshot-display-card.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "directives",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/shared-components.module.ts",
                "type": "[]",
                "defaultValue": "[HiddenAsteriskInputDirective, OutlineTooltipDirective]"
            },
            {
                "name": "dob",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/kyc-welcome/kyc-welcome/kyc-welcome.component.ts",
                "type": "Record<string, any>",
                "defaultValue": "{\n  year: true,\n  month: true,\n  day: true,\n}"
            },
            {
                "name": "enumStrColorCLassIndicator",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/cards/snapshot-display-card/snapshot-status.pipe.ts",
                "type": "object",
                "defaultValue": "{\n  [SnapshotStatus.Danger]: 'brave-danger',\n  [SnapshotStatus.Safe]: 'brave-safe',\n  [SnapshotStatus.Critical]: 'brave-critical',\n  [SnapshotStatus.Default]: 'lt-gray'\n}"
            },
            {
                "name": "enumStrColorCLassIndicator",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/graphics/credit-report-graphic/credit-report-graphic.pipe.ts",
                "type": "object",
                "defaultValue": "{\n  [CreditReportStatus.Danger]: 'brave-danger',\n  [CreditReportStatus.Safe]: 'brave-safe',\n  [CreditReportStatus.Critical]: 'brave-critical',\n  [CreditReportStatus.Default]: 'lt-gray'\n}"
            },
            {
                "name": "enumStrNameOfLabel",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/cards/snapshot-display-card/snapshot-label.pipe.ts",
                "type": "object",
                "defaultValue": "{\n  [LabelOfSnapshot.Update]: { text: 'Updates', colorClass: 'text-brave-magenta' },\n  [LabelOfSnapshot.Hidden]: { text: 'Hidden Items', colorClass: 'text-lt-gray' },\n  [LabelOfSnapshot.New]: { text: 'New', colorClass: 'text-brave-blurple' },\n  [LabelOfSnapshot.NoLabel]: { text: '', colorClass: '' }\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.dev.ts",
                "type": "object",
                "defaultValue": "{\n  production: false,\n  API: 'https://jokbs4tpn3.execute-api.us-east-2.amazonaws.com/dev',\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "type": "object",
                "defaultValue": "{\n  production: true\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.qa.ts",
                "type": "object",
                "defaultValue": "{\n  production: false,\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "type": "object",
                "defaultValue": "{\n  production: false\n}"
            },
            {
                "name": "ExtraLarge",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "extraLargeConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.stories.ts",
                "type": "IFilledClosingAlertConfig",
                "defaultValue": "{\n  size: 'xl',\n  backgroundColor: 'bg-indigo-800',\n  color: 'text-white',\n  alertTitle: 'Alert!',\n  alertBody: 'Something went wrong. Please try again.',\n}"
            },
            {
                "name": "ExtraSmall",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "extraSmallConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.stories.ts",
                "type": "IFilledClosingAlertConfig",
                "defaultValue": "{\n  size: 'xs',\n  backgroundColor: 'bg-indigo-800',\n  color: 'text-white',\n  alertTitle: 'Alert!',\n  alertBody: 'Something went wrong. Please try again.',\n}"
            },
            {
                "name": "formattedQuestions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/kyc-kbaquestions/example-questions.ts",
                "type": "null",
                "defaultValue": "null"
            },
            {
                "name": "installment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/tradelines/tradelines-pure/tradelines.stories.ts",
                "type": "IInstallmentTradelineDetails",
                "defaultValue": "{\n  dateOpened: '2019-01-01',\n  accountDesignator: 'James Credit',\n  termMonths: '48',\n  late90Count: '3',\n  amountPastDue: '950',\n  disputeFlag: 'No',\n}"
            },
            {
                "name": "installment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/tradelines/tradeline-details/tradeline-details.stories.ts",
                "type": "IInstallmentTradelineDetails",
                "defaultValue": "{\n  dateOpened: '2019-01-01',\n  accountDesignator: 'James Credit',\n  termMonths: '48',\n  late90Count: '3',\n  amountPastDue: '950',\n  disputeFlag: 'No',\n}"
            },
            {
                "name": "Installment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/tradelines/tradeline-details/tradeline-details.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "isLocalhost",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.module.ts",
                "type": "",
                "defaultValue": "Boolean(\n  window.location.hostname === 'localhost' ||\n    window.location.hostname === '[::1]' ||\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)"
            },
            {
                "name": "items",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/dropdowns/selects/outline-onlytext-select/outline-onlytext-select.stories.ts",
                "type": "IOutlineOnlyTextItem[]",
                "defaultValue": "[\n  { value: 'Item 1' },\n  { value: 'Item 2' },\n  { value: 'Item 3' },\n  { value: 'Item 4' },\n  { value: 'Item 5' },\n]"
            },
            {
                "name": "kbas",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/kyc-kbaquestions/kyc-kbaquestions-pure/kyc-kbaquestions-pure.stories.ts",
                "type": "ITransunionKBAQuestion[]",
                "defaultValue": "[]"
            },
            {
                "name": "kbas",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/forms/kbaquestions-form/kbaquestions-form.stories.ts",
                "type": "any",
                "defaultValue": "[]"
            },
            {
                "name": "labelMapping",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/tradelines/tradeline-details/parse-tradeline-details.pipe.ts",
                "type": "Record<string, any>",
                "defaultValue": "{\n  originalCreditor: 'Original Creditor:',\n  creditType: 'Type of Account:',\n  dateOpened: 'Opened:',\n  accountDesignator: 'Responsibility:',\n  termMonths: 'Term:',\n  late30Count: 'Times 30/60/90 Days Late:',\n  late60Count: 'Times 30/60/90 Days Late:',\n  late90Count: 'Times 30/60/90 Days Late:',\n  amountPastDue: 'Amount Past Due:',\n  disputeFlag: 'Disputed:',\n}"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/buttons/filled-onlytext-button/filled-onlytext-button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/buttons/outline-onlytext-button/outline-onlytext-button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/buttons/links-onlytext-button/links-onlytext-button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/inputs/hidden-asterisk-input/hidden-asterisk-input.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/inputs/outline-input/outline-input.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/inputs/outline-select-input/outline-select-input.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "largeConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.stories.ts",
                "type": "IFilledClosingAlertConfig",
                "defaultValue": "{\n  size: 'lg',\n  backgroundColor: 'bg-indigo-800',\n  color: 'text-white',\n  alertTitle: 'Alert!',\n  alertBody: 'Something went wrong. Please try again.',\n}"
            },
            {
                "name": "largeConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/buttons/filled-onlytext-button/filled-onlytext-button.stories.ts",
                "type": "IFilledOnlyTextButtonConfig",
                "defaultValue": "{\n  buttonSize: 'lg',\n  backgroundColor: 'bg-fuchsia-500',\n  activeColor: 'bg-fuchsia-600',\n  color: 'text-white',\n}"
            },
            {
                "name": "largeConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/buttons/outline-onlytext-button/outline-onlytext-button.stories.ts",
                "type": "IOutlineOnlyTextButtonConfig",
                "defaultValue": "{\n  buttonSize: 'lg',\n  borderColor: 'border-indigo-800',\n  activeColor: 'bg-indigo-900',\n  hoverColor: 'bg-indigo-800',\n  color: 'text-indigo-800',\n}"
            },
            {
                "name": "largeConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/buttons/links-onlytext-button/links-onlytext-button.stories.ts",
                "type": "ILinksOnlyTextButtonConfig",
                "defaultValue": "{\n  buttonSize: 'lg',\n  color: 'text-indigo-800',\n}"
            },
            {
                "name": "largeConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/inputs/outline-input/outline-input.stories.ts",
                "type": "IOutlineInputeConfig",
                "defaultValue": "{\n  size: 'lg',\n  type: 'text',\n  label: 'Input label',\n  placeholder: 'Input text',\n  autocomplete: 'off',\n  value: '',\n}"
            },
            {
                "name": "largeConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/inputs/outline-select-input/outline-select-input.stories.ts",
                "type": "IOutlineSelectInputConfig",
                "defaultValue": "{\n  size: 'lg',\n  label: 'Input label',\n  autocomplete: 'off',\n  options: ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l'],\n}"
            },
            {
                "name": "Late",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/tradelines/tradeline-payment-icon/tradeline-payment-icon.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LATE_PAY_STATUS_CODES",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/data/pay-status-codes.ts",
                "type": "Record<string, any>",
                "defaultValue": "{\n  '1': `Late 30 Days`,\n  '2': `Late 60 Days`,\n  '3': `Late 90 Days`,\n  '4': `Late 120 Days`,\n}"
            },
            {
                "name": "Left",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/tooltips/outline-tooltip/outline-tooltip.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "mapEnrollResponse",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/kyc-idverification/kyc-idverification/kyc-idverification.component.ts",
                "type": "",
                "defaultValue": "(res: any): TUEnrollResponseInput => {\n  return {\n    bureau: res['Bureau'],\n    errorResponse: res['ErrorResponse'],\n    serviceProduct: res['ServiceProduct'],\n    serviceProductFullfillmentKey: res['ServiceProductFulfillmentKey'],\n    serviceProductObject: JSON.stringify(res['ServiceProductObject']),\n    serviceProductTypeId: res['ServiceProductTypeId'],\n    serviceProductValue: res['ServiceProductValue'],\n    status: res['Status'],\n  } as TUEnrollResponseInput;\n}"
            },
            {
                "name": "mockCreditReports",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/credit-report/credit-report/constants.ts",
                "type": "[]",
                "defaultValue": "[\n\t{\n\t\tid: 0,\n\t\tname: 'Credit Cards',\n\t\titems: [\n\t\t\t{\n\t\t\t\ttitle: 'American Express',\n\t\t\t\tisOpen: true,\n\t\t\t\tstatus: 'safe',\n\t\t\t\tfirstFieldName: 'Current Balance',\n\t\t\t\tfirstFieldValue:  300,\n\t\t\t\tsecondFieldName: 'Credit Limit',\n\t\t\t\tsecondFieldValue: 400,\n\t\t\t\tthirdFieldName: 'Payment Status',\n\t\t\t\tthirdFieldValue: 'Safe'\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tid: 1,\n\t\tname: 'Credit Cards',\n\t\titems: [\n\t\t\t{\n\t\t\t\ttitle: 'Hj National Collections',\n\t\t\t\tisOpen: true,\n\t\t\t\tstatus: 'safe',\n\t\t\t\tfirstFieldName: 'Current Balance',\n\t\t\t\tfirstFieldValue:  300,\n\t\t\t\tsecondFieldName: 'Credit Limit',\n\t\t\t\tsecondFieldValue: 400,\n\t\t\t\tthirdFieldName: 'Payment Status',\n\t\t\t\tthirdFieldValue: 'Safe'\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tid: 1,\n\t\tname: 'Credit Cards',\n\t\titems: [\n\t\t\t{\n\t\t\t\ttitle: 'Hj National Collections',\n\t\t\t\tisOpen: true,\n\t\t\t\tstatus: 'critical',\n\t\t\t\tfirstFieldName: 'Original Creditor',\n\t\t\t\tfirstFieldValue:  'Bank of America',\n\t\t\t\tsecondFieldName: 'Amount Past Due',\n\t\t\t\tsecondFieldValue: '20/04/2021',\n\t\t\t\tthirdFieldName: 'Payment Status',\n\t\t\t\tthirdFieldValue: 'Safe'\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tid: 2,\n\t\tname: 'Student, Car & Personal Loans',\n\t\titems: [\n\t\t\t{\n\t\t\t\ttitle: 'Verify Student Loans',\n\t\t\t\tisOpen: true,\n\t\t\t\tstatus: 'safe',\n\t\t\t\tfirstFieldName: 'Current Balance',\n\t\t\t\tfirstFieldValue:  '-400$',\n\t\t\t\tsecondFieldName: 'Original Loan Amount',\n\t\t\t\tsecondFieldValue: '3000$',\n\t\t\t\tthirdFieldName: 'Payment Status',\n\t\t\t\tthirdFieldValue: 'Not Safe'\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tid: 3,\n\t\tname: 'Mortages',\n\t\titems: [\n\t\t\t{\n\t\t\t\ttitle: 'Consolidated Lenders',\n\t\t\t\tisOpen: false,\n\t\t\t\tstatus: 'safe',\n\t\t\t\tfirstFieldName: 'Current Balance',\n\t\t\t\tfirstFieldValue:  '-400$',\n\t\t\t\tsecondFieldName: 'Loan Amount',\n\t\t\t\tsecondFieldValue: '3000$',\n\t\t\t\tthirdFieldName: 'Payment Status',\n\t\t\t\tthirdFieldValue: 'Not Safe'\n\t\t\t}\n\t\t]\n\t}\n]"
            },
            {
                "name": "mockParsedMergeReport",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/mocks/parsed-merge-report-response.ts",
                "type": "object",
                "defaultValue": "{\n  TrueLinkCreditReportType: {\n    FraudIndicator: false,\n    DeceasedIndicator: false,\n    SB168Frozen: { equifax: false, experian: false, transunion: false },\n    Borrower: {\n      SocialSecurityNumber: 666628891,\n      BorrowerAddress: {\n        dateReported: '2012-09-20',\n        addressOrder: 0,\n        partitionSet: 0,\n        CreditAddress: {\n          city: 'DEWEY',\n          direction: 'W',\n          houseNumber: 397620,\n          postDirection: '',\n          stateCode: 'OK',\n          streetName: 1300,\n          streetType: 'RD',\n          unit: '',\n          postalCode: 74029,\n        },\n        Dwelling: {\n          abbreviation: '',\n          description: '',\n          symbol: '',\n          rank: 100000,\n        },\n        Origin: { abbreviation: '', description: '', symbol: '', rank: 100000 },\n        Ownership: {\n          abbreviation: '',\n          description: '',\n          symbol: '',\n          rank: 100000,\n        },\n        Source: {\n          BorrowerKey: '',\n          Bureau: {\n            abbreviation: 'TransUnion',\n            description: 'TransUnion',\n            symbol: 'TUC',\n            rank: 1,\n          },\n          InquiryDate: '2015-06-09',\n          Reference: '0757326e-da32-48ea-99e',\n        },\n      },\n      PreviousAddress: [\n        {\n          dateReported: '2009-02-01',\n          addressOrder: 0,\n          partitionSet: 0,\n          CreditAddress: {\n            city: 'BARTLESVILLE',\n            direction: '',\n            houseNumber: 725,\n            stateCode: 'OK',\n            streetName: 'YALE',\n            streetType: 'DR',\n            unit: '',\n            postalCode: 74006,\n          },\n          Dwelling: {\n            abbreviation: '',\n            description: '',\n            symbol: '',\n            rank: 100000,\n          },\n          Origin: {\n            abbreviation: '',\n            description: '',\n            symbol: '',\n            rank: 100000,\n          },\n          Ownership: {\n            abbreviation: '',\n            description: '',\n            symbol: '',\n            rank: 100000,\n          },\n          Source: {\n            BorrowerKey: '',\n            Bureau: {\n              abbreviation: 'TransUnion',\n              description: 'TransUnion',\n              symbol: 'TUC',\n              rank: 1,\n            },\n            InquiryDate: '2015-06-09',\n            Reference: '0757326e-da32-48ea-99e',\n          },\n        },\n        {\n          addressOrder: 1,\n          partitionSet: 1,\n          CreditAddress: {\n            city: 'DEWEY',\n            direction: 'W',\n            houseNumber: 397250,\n            stateCode: 'OK',\n            streetName: 1300,\n            streetType: 'RD',\n            unit: '',\n            postalCode: 74029,\n          },\n          Dwelling: {\n            abbreviation: '',\n            description: '',\n            symbol: '',\n            rank: 100000,\n          },\n          Origin: {\n            abbreviation: '',\n            description: '',\n            symbol: '',\n            rank: 100000,\n          },\n          Ownership: {\n            abbreviation: '',\n            description: '',\n            symbol: '',\n            rank: 100000,\n          },\n          Source: {\n            BorrowerKey: '',\n            Bureau: {\n              abbreviation: 'TransUnion',\n              description: 'TransUnion',\n              symbol: 'TUC',\n              rank: 1,\n            },\n            InquiryDate: '2015-06-09',\n            Reference: '0757326e-da32-48ea-99e',\n          },\n        },\n      ],\n      Birth: {\n        age: 0,\n        date: '1961-01-01',\n        partitionSet: 0,\n        BirthDate: { year: 1961, month: 1, day: 1 },\n        Source: {\n          BorrowerKey: '',\n          Bureau: {\n            abbreviation: 'TransUnion',\n            description: 'TransUnion',\n            symbol: 'TUC',\n            rank: 1,\n          },\n          InquiryDate: '2015-06-09',\n          Reference: '0757326e-da32-48ea-99e',\n        },\n      },\n      CreditScore: {\n        riskScore: 668,\n        scoreName: 'VantageScore3',\n        populationRank: 49,\n        inquiriesAffectedScore: true,\n        CreditScoreFactor: [\n          {\n            bureauCode: 4,\n            Factor: {\n              abbreviation: '',\n              description: '',\n              symbol: 4,\n              rank: 100000,\n            },\n            FactorText: [\n              'explain: The balances on your accounts are high compared to the original loan amounts, lowering your score.',\n              'factor: The balances on your accounts are too high compared to loan amounts',\n              'cando: Paying down the balances on your accounts will benefit your score.',\n            ],\n          },\n          {\n            bureauCode: 12,\n            Factor: {\n              abbreviation: '',\n              description: '',\n              symbol: 12,\n              rank: 100000,\n            },\n            FactorText: [\n              'explain: Your oldest account is still too recent. A credit file containing older accounts will have a positive impact on your credit score because it demonstrates that you are experienced managing credit.',\n              'factor: The date that you opened your oldest account is too recent',\n              \"cando: Don't open more accounts than you actually need. Research shows that new accounts indicate greater risk. Your score will benefit as your accounts get older.\",\n            ],\n          },\n          {\n            bureauCode: 7,\n            Factor: {\n              abbreviation: '',\n              description: '',\n              symbol: 7,\n              rank: 100000,\n            },\n            FactorText: [\n              'explain: You have had too many accounts with payments that are at least 30 days late and/or on which a lender has reported a derogatory status. Late payments are a proven indicator of increased risk. People with late payments are at risk of being overextended, putting existing credit with lenders at risk.',\n              'factor: You have too many delinquent or derogatory accounts',\n              'cando: Paying bills on time every month is important to maintaining a good credit score. If you remain behind with any payments, bring them current as soon as possible, and then make future payments on time. Over time, this will have a positive impact on your score.',\n            ],\n          },\n          {\n            bureauCode: 55,\n            Factor: {\n              abbreviation: '',\n              description: '',\n              symbol: 55,\n              rank: 100000,\n            },\n            FactorText: [\n              \"explain: A real estate loan can be a first mortgage, a home equity loan, or home equity line of credit. The outstanding balances on open real estate accounts remain high compared to the original loan amounts. People who haven't paid down much of their mortgage or other real estate loans are higher credit risks than people who have.\",\n              'factor: Open real estate account balances are too high compared to their loan amounts',\n              'cando: As monthly real estate payments are made, a portion of the outstanding principle balance is reduced, benefitting your score. Whenever possible, further pay down balances on your real estate accounts. Over time this will also have a positive impact on your score.',\n            ],\n          },\n        ],\n        CreditScoreModel: {\n          abbreviation: '',\n          description: '',\n          symbol: '00W40',\n          rank: 100000,\n        },\n        NoScoreReason: {\n          abbreviation: '',\n          description: '',\n          symbol: '',\n          rank: 100000,\n        },\n        Source: {\n          BorrowerKey: '',\n          Bureau: {\n            abbreviation: 'TransUnion',\n            description: 'TransUnion',\n            symbol: 'TUC',\n            rank: 1,\n          },\n          InquiryDate: '2015-06-09',\n          Reference: '0757326e-da32-48ea-99e',\n        },\n      },\n      Employer: {\n        name: 'EMPLOYER X',\n        partitionSet: 0,\n        CreditAddress: {\n          city: '',\n          stateCode: '',\n          unparsedStreet: '',\n          postalCode: '',\n        },\n        Source: {\n          BorrowerKey: '',\n          Bureau: {\n            abbreviation: 'TransUnion',\n            description: 'TransUnion',\n            symbol: 'TUC',\n            rank: 1,\n          },\n          InquiryDate: '2015-06-09',\n          Reference: '0757326e-da32-48ea-99e',\n        },\n      },\n      BorrowerName: {\n        partitionSet: 0,\n        Name: { first: 'DIANNE', middle: 'J', last: 'COSGRAVE' },\n        NameType: {\n          abbreviation: 'Primary',\n          description: 'Primary',\n          symbol: 1,\n          rank: 199,\n        },\n        Source: {\n          BorrowerKey: '',\n          Bureau: {\n            abbreviation: 'TransUnion',\n            description: 'TransUnion',\n            symbol: 'TUC',\n            rank: 1,\n          },\n          InquiryDate: '2015-06-09',\n          Reference: '0757326e-da32-48ea-99e',\n        },\n      },\n      SocialPartition: {\n        Social: {\n          SocialSecurityNumber: 666628891,\n          Source: {\n            BorrowerKey: '',\n            Bureau: {\n              abbreviation: 'TransUnion',\n              description: 'TransUnion',\n              symbol: 'TUC',\n              rank: 1,\n            },\n            InquiryDate: '2015-06-09',\n            Reference: '0757326e-da32-48ea-99e',\n          },\n        },\n      },\n    },\n    TradeLinePartition: [\n      {\n        accountTypeDescription: 'Collection Account',\n        accountTypeSymbol: 'Y',\n        accountTypeAbbreviation: 'Collection',\n        Tradeline: {\n          subscriberCode: '063VB001',\n          highBalance: 6530,\n          dateVerified: '2015-04-15',\n          dateReported: '2015-04-15',\n          dateOpened: '2012-08-05',\n          accountNumber: '9X1X0X6X',\n          dateAccountStatus: '2015-04-15',\n          currentBalance: 2668,\n          creditorName: 'TULSA ADJUST',\n          position: 0,\n          bureau: 'TransUnion',\n          AccountCondition: {\n            abbreviation: 'Derog',\n            description: 'Derogatory',\n            symbol: 'F',\n            rank: 20,\n          },\n          AccountDesignator: {\n            abbreviation: 'Individual',\n            description: 'Individual',\n            symbol: 'I',\n            rank: 199,\n          },\n          DisputeFlag: {\n            abbreviation: 'Account not disputed',\n            description: 'Account not disputed',\n            symbol: 'F',\n            rank: 199,\n          },\n          IndustryCode: {\n            abbreviation: 'Collection Services',\n            description: 'Collection Services',\n            symbol: 'Y',\n            rank: 199,\n          },\n          OpenClosed: {\n            abbreviation: 'Open',\n            description: 'Open',\n            symbol: 'O',\n            rank: 199,\n          },\n          PayStatus: {\n            abbreviation: 'Coll/Chargeoff',\n            description: 'Collection/Chargeoff',\n            symbol: 9,\n            rank: 2,\n          },\n          VerificationIndicator: {\n            abbreviation: 'Account not disputed',\n            description: 'Account not disputed',\n            symbol: 'F',\n            rank: 199,\n          },\n          Remark: {\n            customRemark: '',\n            RemarkCode: {\n              abbreviation: 'Placed for collection',\n              description: 'Placed for collection',\n              symbol: 'T00CLA',\n              rank: 199,\n            },\n          },\n          CollectionTrade: {\n            originalCreditor: 'MEDICAL',\n            creditType: {\n              abbreviation: 'Collection',\n              description: 'Collection Account',\n              symbol: 'Y',\n              rank: 5,\n            },\n          },\n          Source: {\n            BorrowerKey: '',\n            Bureau: {\n              abbreviation: 'TransUnion',\n              description: 'TransUnion',\n              symbol: 'TUC',\n              rank: 1,\n            },\n            InquiryDate: '2015-06-09',\n            Reference: '0757326e-da32-48ea-99e',\n          },\n        },\n      },\n      {\n        accountTypeDescription: 'Collection Account',\n        accountTypeSymbol: 'Y',\n        accountTypeAbbreviation: 'Collection',\n        Tradeline: {\n          subscriberCode: '049XV001',\n          highBalance: 209,\n          dateVerified: '2013-10-24',\n          dateReported: '2013-10-24',\n          dateOpened: '2013-02-16',\n          accountNumber: '1X9X5X5X',\n          dateAccountStatus: '2013-10-21',\n          currentBalance: 0,\n          creditorName: 'EOS CCA',\n          position: 1,\n          bureau: 'TransUnion',\n          AccountCondition: {\n            abbreviation: 'Paid',\n            description: 'Paid',\n            symbol: 'P',\n            rank: 10,\n          },\n          AccountDesignator: {\n            abbreviation: 'Individual',\n            description: 'Individual',\n            symbol: 'I',\n            rank: 199,\n          },\n          DisputeFlag: {\n            abbreviation: 'Account not disputed',\n            description: 'Account not disputed',\n            symbol: 'F',\n            rank: 199,\n          },\n          IndustryCode: {\n            abbreviation: 'Collection Services',\n            description: 'Collection Services',\n            symbol: 'Y',\n            rank: 199,\n          },\n          OpenClosed: {\n            abbreviation: 'Closed',\n            description: 'Closed',\n            symbol: 'C',\n            rank: 198,\n          },\n          PayStatus: {\n            abbreviation: 'Coll/Chargeoff',\n            description: 'Collection/Chargeoff',\n            symbol: 9,\n            rank: 2,\n          },\n          VerificationIndicator: {\n            abbreviation: 'Account not disputed',\n            description: 'Account not disputed',\n            symbol: 'F',\n            rank: 199,\n          },\n          Remark: {\n            customRemark: '',\n            RemarkCode: {\n              abbreviation: 'Paid collection',\n              description: 'Paid collection',\n              symbol: 'T00PCL',\n              rank: 199,\n            },\n          },\n          CollectionTrade: {\n            originalCreditor: '10 AT T',\n            creditType: {\n              abbreviation: 'Collection',\n              description: 'Collection Account',\n              symbol: 'Y',\n              rank: 5,\n            },\n          },\n          Source: {\n            BorrowerKey: '',\n            Bureau: {\n              abbreviation: 'TransUnion',\n              description: 'TransUnion',\n              symbol: 'TUC',\n              rank: 1,\n            },\n            InquiryDate: '2015-06-09',\n            Reference: '0757326e-da32-48ea-99e',\n          },\n        },\n      },\n      {\n        accountTypeDescription: 'Collection Account',\n        accountTypeSymbol: 'Y',\n        accountTypeAbbreviation: 'Collection',\n        Tradeline: {\n          subscriberCode: '063VB001',\n          highBalance: 521,\n          dateVerified: '2013-03-18',\n          dateReported: '2013-03-18',\n          dateOpened: '2012-04-10',\n          accountNumber: '9X0X0X4X',\n          dateAccountStatus: '2013-03-18',\n          currentBalance: 0,\n          creditorName: 'TULSA ADJUST',\n          position: 2,\n          bureau: 'TransUnion',\n          AccountCondition: {\n            abbreviation: 'Derog',\n            description: 'Derogatory',\n            symbol: 'F',\n            rank: 20,\n          },\n          AccountDesignator: {\n            abbreviation: 'Individual',\n            description: 'Individual',\n            symbol: 'I',\n            rank: 199,\n          },\n          DisputeFlag: {\n            abbreviation: 'Account not disputed',\n            description: 'Account not disputed',\n            symbol: 'F',\n            rank: 199,\n          },\n          IndustryCode: {\n            abbreviation: 'Collection Services',\n            description: 'Collection Services',\n            symbol: 'Y',\n            rank: 199,\n          },\n          OpenClosed: {\n            abbreviation: 'Closed',\n            description: 'Closed',\n            symbol: 'C',\n            rank: 198,\n          },\n          PayStatus: {\n            abbreviation: 'Coll/Chargeoff',\n            description: 'Collection/Chargeoff',\n            symbol: 9,\n            rank: 2,\n          },\n          VerificationIndicator: {\n            abbreviation: 'Account not disputed',\n            description: 'Account not disputed',\n            symbol: 'F',\n            rank: 199,\n          },\n          Remark: {\n            customRemark: '',\n            RemarkCode: {\n              abbreviation: 'Paid collection',\n              description: 'Paid collection',\n              symbol: 'T00PCL',\n              rank: 199,\n            },\n          },\n          CollectionTrade: {\n            originalCreditor: 'MEDICAL',\n            creditType: {\n              abbreviation: 'Collection',\n              description: 'Collection Account',\n              symbol: 'Y',\n              rank: 5,\n            },\n          },\n          Source: {\n            BorrowerKey: '',\n            Bureau: {\n              abbreviation: 'TransUnion',\n              description: 'TransUnion',\n              symbol: 'TUC',\n              rank: 1,\n            },\n            InquiryDate: '2015-06-09',\n            Reference: '0757326e-da32-48ea-99e',\n          },\n        },\n      },\n      {\n        accountTypeDescription: 'Revolving Account',\n        accountTypeSymbol: 'R',\n        accountTypeAbbreviation: 'Revolving',\n        Tradeline: {\n          subscriberCode: '0235058D',\n          highBalance: 52,\n          dateVerified: '2015-05-20',\n          dateReported: '2015-05-20',\n          dateOpened: '1999-11-23',\n          accountNumber: 600884930301,\n          dateAccountStatus: '2015-03-20',\n          currentBalance: 0,\n          creditorName: 'SYNCB/JCP',\n          position: 3,\n          dateClosed: '2015-03-20',\n          bureau: 'TransUnion',\n          AccountCondition: {\n            abbreviation: 'Closed',\n            description: 'Closed',\n            symbol: 'C',\n            rank: 50,\n          },\n          AccountDesignator: {\n            abbreviation: 'Joint',\n            description: 'Joint',\n            symbol: 'J',\n            rank: 199,\n          },\n          DisputeFlag: {\n            abbreviation: 'Account not disputed',\n            description: 'Account not disputed',\n            symbol: 'F',\n            rank: 199,\n          },\n          IndustryCode: {\n            abbreviation: 'Department/Variety and Other Retail',\n            description: 'Department/Variety and Other Retail',\n            symbol: 'D',\n            rank: 199,\n          },\n          OpenClosed: {\n            abbreviation: 'Closed',\n            description: 'Closed',\n            symbol: 'C',\n            rank: 198,\n          },\n          PayStatus: {\n            abbreviation: 'Current',\n            description: 'Current',\n            symbol: 'C',\n            rank: 110,\n          },\n          VerificationIndicator: {\n            abbreviation: 'Account not disputed',\n            description: 'Account not disputed',\n            symbol: 'F',\n            rank: 199,\n          },\n          Remark: {\n            customRemark: '',\n            RemarkCode: {\n              abbreviation: 'Closed',\n              description: 'Closed',\n              symbol: 'T00CLO',\n              rank: 199,\n            },\n          },\n          GrantedTrade: {\n            monthsReviewed: 48,\n            monthlyPayment: 0,\n            late90Count: 0,\n            late60Count: 0,\n            late30Count: 0,\n            dateLastPayment: '2000-08-01',\n            termMonths: 0,\n            collateral: '',\n            amountPastDue: 0,\n            worstPatStatusCount: 48,\n            AccountType: {\n              abbreviation: 'Charge account',\n              description: 'Charge account',\n              symbol: 'CH',\n              rank: 50,\n            },\n            CreditType: {\n              abbreviation: 'Revolving',\n              description: 'Revolving Account',\n              symbol: 'R',\n              rank: 50,\n            },\n            PaymentFrequency: {\n              abbreviation: '',\n              description: '',\n              symbol: '',\n              rank: 100000,\n            },\n            TermType: {\n              abbreviation: 'Provided',\n              description: 'Provided',\n              symbol: 'P',\n              rank: 199,\n            },\n            WorstPayStatus: {\n              abbreviation: 'Current',\n              description: 'Current',\n              symbol: 'C',\n              rank: 110,\n            },\n            PayStatusHistory: {\n              status: 'CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC',\n              startDate: '2015-04-20',\n              MonthlyPayStatus: [\n                { date: '2015-04-20', status: 'C' },\n                { date: '2015-03-20', status: 'C' },\n                { date: '2015-02-19', status: 'C' },\n                { date: '2015-01-19', status: 'C' },\n                { date: '2014-12-19', status: 'C' },\n                { date: '2014-11-19', status: 'C' },\n                { date: '2014-10-20', status: 'C' },\n                { date: '2014-09-20', status: 'C' },\n                { date: '2014-08-20', status: 'C' },\n                { date: '2014-07-20', status: 'C' },\n                { date: '2014-06-20', status: 'C' },\n                { date: '2014-05-20', status: 'C' },\n                { date: '2014-04-20', status: 'C' },\n                { date: '2014-03-20', status: 'C' },\n                { date: '2014-02-19', status: 'C' },\n                { date: '2014-01-19', status: 'C' },\n                { date: '2013-12-19', status: 'C' },\n                { date: '2013-11-19', status: 'C' },\n                { date: '2013-10-20', status: 'C' },\n                { date: '2013-09-20', status: 'C' },\n                { date: '2013-08-20', status: 'C' },\n                { date: '2013-07-20', status: 'C' },\n                { date: '2013-06-20', status: 'C' },\n                { date: '2013-05-20', status: 'C' },\n                { date: '2013-04-20', status: 'C' },\n                { date: '2013-03-20', status: 'C' },\n                { date: '2013-02-19', status: 'C' },\n                { date: '2013-01-19', status: 'C' },\n                { date: '2012-12-19', status: 'C' },\n                { date: '2012-11-19', status: 'C' },\n                { date: '2012-10-20', status: 'C' },\n                { date: '2012-09-20', status: 'C' },\n                { date: '2012-08-20', status: 'C' },\n                { date: '2012-07-20', status: 'C' },\n                { date: '2012-06-20', status: 'C' },\n                { date: '2012-05-20', status: 'C' },\n                { date: '2012-04-20', status: 'C' },\n                { date: '2012-03-20', status: 'C' },\n                { date: '2012-02-19', status: 'C' },\n                { date: '2012-01-19', status: 'C' },\n                { date: '2011-12-19', status: 'C' },\n                { date: '2011-11-19', status: 'C' },\n                { date: '2011-10-20', status: 'C' },\n                { date: '2011-09-20', status: 'C' },\n                { date: '2011-08-20', status: 'C' },\n                { date: '2011-07-20', status: 'C' },\n                { date: '2011-06-20', status: 'C' },\n                { date: '2011-05-20', status: 'C' },\n              ],\n            },\n            CreditLimit: 124,\n          },\n          Source: {\n            BorrowerKey: '',\n            Bureau: {\n              abbreviation: 'TransUnion',\n              description: 'TransUnion',\n              symbol: 'TUC',\n              rank: 1,\n            },\n            InquiryDate: '2015-06-09',\n            Reference: '0757326e-da32-48ea-99e',\n          },\n        },\n      },\n      {\n        accountTypeDescription: 'Primary or secondary mortgage',\n        accountTypeSymbol: 'M',\n        accountTypeAbbreviation: 'Mortgage',\n        Tradeline: {\n          subscriberCode: '082TE004',\n          highBalance: 148106,\n          dateVerified: '2015-05-08',\n          dateReported: '2015-05-08',\n          dateOpened: '2014-06-30',\n          accountNumber: '9X6X3X3X2X4X2',\n          dateAccountStatus: '2015-05-08',\n          currentBalance: 141990,\n          creditorName: 'WFHM',\n          position: 4,\n          bureau: 'TransUnion',\n          AccountCondition: {\n            abbreviation: 'Open',\n            description: 'Open',\n            symbol: 'O',\n            rank: 60,\n          },\n          AccountDesignator: {\n            abbreviation: 'Joint',\n            description: 'Joint',\n            symbol: 'J',\n            rank: 199,\n          },\n          DisputeFlag: {\n            abbreviation: 'Account not disputed',\n            description: 'Account not disputed',\n            symbol: 'F',\n            rank: 199,\n          },\n          IndustryCode: {\n            abbreviation: 'Bank',\n            description: 'Bank',\n            symbol: 'B',\n            rank: 199,\n          },\n          OpenClosed: {\n            abbreviation: 'Open',\n            description: 'Open',\n            symbol: 'O',\n            rank: 199,\n          },\n          PayStatus: {\n            abbreviation: 'Current',\n            description: 'Current',\n            symbol: 'C',\n            rank: 110,\n          },\n          VerificationIndicator: {\n            abbreviation: 'Account not disputed',\n            description: 'Account not disputed',\n            symbol: 'F',\n            rank: 199,\n          },\n          GrantedTrade: {\n            monthsReviewed: 6,\n            monthlyPayment: 1204,\n            late90Count: 0,\n            late60Count: 0,\n            late30Count: 0,\n            dateLastPayment: '2015-04-16',\n            termMonths: 180,\n            collateral: '',\n            amountPastDue: 0,\n            worstPatStatusCount: 6,\n            AccountType: {\n              abbreviation: 'FHA real estate mortgage',\n              description: 'FHA real estate mortgage',\n              symbol: 'FR',\n              rank: 50,\n            },\n            CreditType: {\n              abbreviation: 'Mortgage',\n              description: 'Primary or secondary mortgage',\n              symbol: 'M',\n              rank: 10,\n            },\n            PaymentFrequency: {\n              abbreviation: 'Monthly (every month)',\n              description: 'Monthly (every month)',\n              symbol: 'M',\n              rank: 199,\n            },\n            TermType: {\n              abbreviation: 'Provided',\n              description: 'Provided',\n              symbol: 'P',\n              rank: 199,\n            },\n            WorstPayStatus: {\n              abbreviation: 'Current',\n              description: 'Current',\n              symbol: 'C',\n              rank: 110,\n            },\n            PayStatusHistory: {\n              status: 'CCUCCC',\n              startDate: '2015-04-08',\n              MonthlyPayStatus: [\n                { date: '2015-04-08', status: 'C' },\n                { date: '2015-03-07', status: 'C' },\n                { date: '2015-02-07', status: 'U' },\n                { date: '2015-01-07', status: 'C' },\n                { date: '2014-12-07', status: 'C' },\n                { date: '2014-11-07', status: 'C' },\n                { date: '2014-10-08', status: '' },\n                { date: '2014-09-08', status: '' },\n                { date: '2014-08-08', status: '' },\n                { date: '2014-07-08', status: '' },\n                { date: '2014-06-08', status: '' },\n                { date: '2014-05-08', status: '' },\n                { date: '2014-04-08', status: '' },\n                { date: '2014-03-07', status: '' },\n                { date: '2014-02-07', status: '' },\n                { date: '2014-01-07', status: '' },\n                { date: '2013-12-07', status: '' },\n                { date: '2013-11-07', status: '' },\n                { date: '2013-10-08', status: '' },\n                { date: '2013-09-08', status: '' },\n                { date: '2013-08-08', status: '' },\n                { date: '2013-07-08', status: '' },\n                { date: '2013-06-08', status: '' },\n                { date: '2013-05-08', status: '' },\n              ],\n            },\n            CreditLimit: 0,\n          },\n          Source: {\n            BorrowerKey: '',\n            Bureau: {\n              abbreviation: 'TransUnion',\n              description: 'TransUnion',\n              symbol: 'TUC',\n              rank: 1,\n            },\n            InquiryDate: '2015-06-09',\n            Reference: '0757326e-da32-48ea-99e',\n          },\n        },\n      },\n      {\n        accountTypeDescription: 'Revolving Account',\n        accountTypeSymbol: 'R',\n        accountTypeAbbreviation: 'Revolving',\n        Tradeline: {\n          subscriberCode: 9992952,\n          highBalance: 0,\n          dateVerified: '2015-05-08',\n          dateReported: '2015-05-08',\n          dateOpened: '2010-05-20',\n          accountNumber: 601915437403,\n          dateAccountStatus: '2012-04-30',\n          currentBalance: 0,\n          creditorName: 'SYNCB/CARECR',\n          position: 5,\n          dateClosed: '2012-04-30',\n          bureau: 'TransUnion',\n          AccountCondition: {\n            abbreviation: 'Closed',\n            description: 'Closed',\n            symbol: 'C',\n            rank: 50,\n          },\n          AccountDesignator: {\n            abbreviation: 'Joint',\n            description: 'Joint',\n            symbol: 'J',\n            rank: 199,\n          },\n          DisputeFlag: {\n            abbreviation: 'Account not disputed',\n            description: 'Account not disputed',\n            symbol: 'F',\n            rank: 199,\n          },\n          IndustryCode: {\n            abbreviation: 'Finance/Personal',\n            description: 'Finance/Personal',\n            symbol: 'F',\n            rank: 199,\n          },\n          OpenClosed: {\n            abbreviation: 'Closed',\n            description: 'Closed',\n            symbol: 'C',\n            rank: 198,\n          },\n          PayStatus: {\n            abbreviation: 'Current',\n            description: 'Current',\n            symbol: 'C',\n            rank: 110,\n          },\n          VerificationIndicator: {\n            abbreviation: 'Account not disputed',\n            description: 'Account not disputed',\n            symbol: 'F',\n            rank: 199,\n          },\n          Remark: {\n            customRemark: '',\n            RemarkCode: {\n              abbreviation: 'Canceled by credit grantor',\n              description: 'Canceled by credit grantor',\n              symbol: 'T00CBG',\n              rank: 199,\n            },\n          },\n          GrantedTrade: {\n            monthsReviewed: 48,\n            monthlyPayment: 0,\n            late90Count: 0,\n            late60Count: 0,\n            late30Count: 0,\n            termMonths: 0,\n            collateral: '',\n            amountPastDue: 0,\n            worstPatStatusCount: 48,\n            AccountType: {\n              abbreviation: 'Charge account',\n              description: 'Charge account',\n              symbol: 'CH',\n              rank: 50,\n            },\n            CreditType: {\n              abbreviation: 'Revolving',\n              description: 'Revolving Account',\n              symbol: 'R',\n              rank: 50,\n            },\n            PaymentFrequency: {\n              abbreviation: '',\n              description: '',\n              symbol: '',\n              rank: 100000,\n            },\n            TermType: {\n              abbreviation: 'Provided',\n              description: 'Provided',\n              symbol: 'P',\n              rank: 199,\n            },\n            WorstPayStatus: {\n              abbreviation: 'Current',\n              description: 'Current',\n              symbol: 'C',\n              rank: 110,\n            },\n            PayStatusHistory: {\n              status: 'CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC',\n              startDate: '2015-04-08',\n              MonthlyPayStatus: [\n                { date: '2015-04-08', status: 'C' },\n                { date: '2015-03-07', status: 'C' },\n                { date: '2015-02-07', status: 'C' },\n                { date: '2015-01-07', status: 'C' },\n                { date: '2014-12-07', status: 'C' },\n                { date: '2014-11-07', status: 'C' },\n                { date: '2014-10-08', status: 'C' },\n                { date: '2014-09-08', status: 'C' },\n                { date: '2014-08-08', status: 'C' },\n                { date: '2014-07-08', status: 'C' },\n                { date: '2014-06-08', status: 'C' },\n                { date: '2014-05-08', status: 'C' },\n                { date: '2014-04-08', status: 'C' },\n                { date: '2014-03-07', status: 'C' },\n                { date: '2014-02-07', status: 'C' },\n                { date: '2014-01-07', status: 'C' },\n                { date: '2013-12-07', status: 'C' },\n                { date: '2013-11-07', status: 'C' },\n                { date: '2013-10-08', status: 'C' },\n                { date: '2013-09-08', status: 'C' },\n                { date: '2013-08-08', status: 'C' },\n                { date: '2013-07-08', status: 'C' },\n                { date: '2013-06-08', status: 'C' },\n                { date: '2013-05-08', status: 'C' },\n                { date: '2013-04-08', status: 'C' },\n                { date: '2013-03-07', status: 'C' },\n                { date: '2013-02-07', status: 'C' },\n                { date: '2013-01-07', status: 'C' },\n                { date: '2012-12-07', status: 'C' },\n                { date: '2012-11-07', status: 'C' },\n                { date: '2012-10-08', status: 'C' },\n                { date: '2012-09-08', status: 'C' },\n                { date: '2012-08-08', status: 'C' },\n                { date: '2012-07-08', status: 'C' },\n                { date: '2012-06-08', status: 'C' },\n                { date: '2012-05-08', status: 'C' },\n                { date: '2012-04-08', status: 'C' },\n                { date: '2012-03-07', status: 'C' },\n                { date: '2012-02-07', status: 'C' },\n                { date: '2012-01-07', status: 'C' },\n                { date: '2011-12-07', status: 'C' },\n                { date: '2011-11-07', status: 'C' },\n                { date: '2011-10-08', status: 'C' },\n                { date: '2011-09-08', status: 'C' },\n                { date: '2011-08-08', status: 'C' },\n                { date: '2011-07-08', status: 'C' },\n                { date: '2011-06-08', status: 'C' },\n                { date: '2011-05-08', status: 'C' },\n              ],\n            },\n            CreditLimit: 1000,\n          },\n          Source: {\n            BorrowerKey: '',\n            Bureau: {\n              abbreviation: 'TransUnion',\n              description: 'TransUnion',\n              symbol: 'TUC',\n              rank: 1,\n            },\n            InquiryDate: '2015-06-09',\n            Reference: '0757326e-da32-48ea-99e',\n          },\n        },\n      },\n      {\n        accountTypeDescription: 'Revolving Account',\n        accountTypeSymbol: 'R',\n        accountTypeAbbreviation: 'Revolving',\n        Tradeline: {\n          subscriberCode: '0235058D',\n          highBalance: 681,\n          dateVerified: '2015-04-22',\n          dateReported: '2015-04-22',\n          dateOpened: '2007-12-10',\n          accountNumber: 600886311190,\n          dateAccountStatus: '2013-05-02',\n          currentBalance: 0,\n          creditorName: 'SYNCB/JCP',\n          position: 6,\n          bureau: 'TransUnion',\n          AccountCondition: {\n            abbreviation: 'Open',\n            description: 'Open',\n            symbol: 'O',\n            rank: 60,\n          },\n          AccountDesignator: {\n            abbreviation: 'Individual',\n            description: 'Individual',\n            symbol: 'I',\n            rank: 199,\n          },\n          DisputeFlag: {\n            abbreviation: 'Account not disputed',\n            description: 'Account not disputed',\n            symbol: 'F',\n            rank: 199,\n          },\n          IndustryCode: {\n            abbreviation: 'Department/Variety and Other Retail',\n            description: 'Department/Variety and Other Retail',\n            symbol: 'D',\n            rank: 199,\n          },\n          OpenClosed: {\n            abbreviation: 'Open',\n            description: 'Open',\n            symbol: 'O',\n            rank: 199,\n          },\n          PayStatus: {\n            abbreviation: 'Current',\n            description: 'Current',\n            symbol: 'C',\n            rank: 110,\n          },\n          VerificationIndicator: {\n            abbreviation: 'Account not disputed',\n            description: 'Account not disputed',\n            symbol: 'F',\n            rank: 199,\n          },\n          GrantedTrade: {\n            monthsReviewed: 48,\n            monthlyPayment: 0,\n            late90Count: 0,\n            late60Count: 1,\n            late30Count: 1,\n            dateLastPayment: '2013-05-02',\n            termMonths: 0,\n            collateral: '',\n            amountPastDue: 0,\n            worstPatStatusCount: 48,\n            AccountType: {\n              abbreviation: 'Charge account',\n              description: 'Charge account',\n              symbol: 'CH',\n              rank: 50,\n            },\n            CreditType: {\n              abbreviation: 'Revolving',\n              description: 'Revolving Account',\n              symbol: 'R',\n              rank: 50,\n            },\n            PaymentFrequency: {\n              abbreviation: '',\n              description: '',\n              symbol: '',\n              rank: 100000,\n            },\n            TermType: {\n              abbreviation: 'Provided',\n              description: 'Provided',\n              symbol: 'P',\n              rank: 199,\n            },\n            WorstPayStatus: {\n              abbreviation: '60 Delinq',\n              description: 'Late 60 Days',\n              symbol: 2,\n              rank: 104,\n            },\n            PayStatusHistory: {\n              status: 'CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC21C',\n              startDate: '2015-03-22',\n              MonthlyPayStatus: [\n                { date: '2015-03-22', status: 'C' },\n                { date: '2015-02-21', status: 'C' },\n                { date: '2015-01-21', status: 'C' },\n                { date: '2014-12-21', status: 'C' },\n                { date: '2014-11-21', status: 'C' },\n                { date: '2014-10-22', status: 'C' },\n                { date: '2014-09-22', status: 'C' },\n                { date: '2014-08-22', status: 'C' },\n                { date: '2014-07-22', status: 'C' },\n                { date: '2014-06-22', status: 'C' },\n                { date: '2014-05-22', status: 'C' },\n                { date: '2014-04-22', status: 'C' },\n                { date: '2014-03-22', status: 'C' },\n                { date: '2014-02-21', status: 'C' },\n                { date: '2014-01-21', status: 'C' },\n                { date: '2013-12-21', status: 'C' },\n                { date: '2013-11-21', status: 'C' },\n                { date: '2013-10-22', status: 'C' },\n                { date: '2013-09-22', status: 'C' },\n                { date: '2013-08-22', status: 'C' },\n                { date: '2013-07-22', status: 'C' },\n                { date: '2013-06-22', status: 'C' },\n                { date: '2013-05-22', status: 'C' },\n                { date: '2013-04-22', status: 'C' },\n                { date: '2013-03-22', status: 'C' },\n                { date: '2013-02-21', status: 'C' },\n                { date: '2013-01-21', status: 'C' },\n                { date: '2012-12-21', status: 'C' },\n                { date: '2012-11-21', status: 'C' },\n                { date: '2012-10-22', status: 'C' },\n                { date: '2012-09-22', status: 'C' },\n                { date: '2012-08-22', status: 'C' },\n                { date: '2012-07-22', status: 'C' },\n                { date: '2012-06-22', status: 'C' },\n                { date: '2012-05-22', status: 'C' },\n                { date: '2012-04-22', status: 'C' },\n                { date: '2012-03-22', status: 'C' },\n                { date: '2012-02-21', status: 'C' },\n                { date: '2012-01-21', status: 'C' },\n                { date: '2011-12-21', status: 'C' },\n                { date: '2011-11-21', status: 'C' },\n                { date: '2011-10-22', status: 'C' },\n                { date: '2011-09-22', status: 'C' },\n                { date: '2011-08-22', status: 'C' },\n                { date: '2011-07-22', status: 'C' },\n                { date: '2011-06-22', status: 2 },\n                { date: '2011-05-22', status: 1 },\n                { date: '2011-04-22', status: 'C' },\n              ],\n            },\n            CreditLimit: 341,\n          },\n          Source: {\n            BorrowerKey: '',\n            Bureau: {\n              abbreviation: 'TransUnion',\n              description: 'TransUnion',\n              symbol: 'TUC',\n              rank: 1,\n            },\n            InquiryDate: '2015-06-09',\n            Reference: '0757326e-da32-48ea-99e',\n          },\n        },\n      },\n      {\n        accountTypeDescription: 'Revolving Account',\n        accountTypeSymbol: 'R',\n        accountTypeAbbreviation: 'Revolving',\n        Tradeline: {\n          subscriberCode: 1597029,\n          highBalance: 11208,\n          dateVerified: '2014-05-07',\n          dateReported: '2014-05-07',\n          dateOpened: '2001-01-12',\n          accountNumber: 1587,\n          dateAccountStatus: '2013-11-15',\n          currentBalance: 0,\n          creditorName: 'BK OF AMER',\n          position: 7,\n          dateClosed: '2014-05-07',\n          bureau: 'TransUnion',\n          AccountCondition: {\n            abbreviation: 'Paid',\n            description: 'Paid',\n            symbol: 'P',\n            rank: 10,\n          },\n          AccountDesignator: {\n            abbreviation: 'Individual',\n            description: 'Individual',\n            symbol: 'I',\n            rank: 199,\n          },\n          DisputeFlag: {\n            abbreviation: 'Account not disputed',\n            description: 'Account not disputed',\n            symbol: 'F',\n            rank: 199,\n          },\n          IndustryCode: {\n            abbreviation: 'Bank',\n            description: 'Bank',\n            symbol: 'B',\n            rank: 199,\n          },\n          OpenClosed: {\n            abbreviation: 'Closed',\n            description: 'Closed',\n            symbol: 'C',\n            rank: 198,\n          },\n          PayStatus: {\n            abbreviation: 'Current',\n            description: 'Current',\n            symbol: 'C',\n            rank: 110,\n          },\n          VerificationIndicator: {\n            abbreviation: 'Account not disputed',\n            description: 'Account not disputed',\n            symbol: 'F',\n            rank: 199,\n          },\n          Remark: {\n            customRemark: '',\n            RemarkCode: {\n              abbreviation: 'Account closed by consumer',\n              description: 'Account closed by consumer',\n              symbol: 'T00CBC',\n              rank: 199,\n            },\n          },\n          GrantedTrade: {\n            monthsReviewed: 48,\n            monthlyPayment: 0,\n            late90Count: 20,\n            late60Count: 2,\n            late30Count: 3,\n            dateLastPayment: '2013-11-15',\n            termMonths: 0,\n            collateral: '',\n            amountPastDue: 0,\n            worstPatStatusCount: 48,\n            AccountType: {\n              abbreviation: 'Credit Card',\n              description: 'Credit Card',\n              symbol: 'CC',\n              rank: 50,\n            },\n            CreditType: {\n              abbreviation: 'Revolving',\n              description: 'Revolving Account',\n              symbol: 'R',\n              rank: 50,\n            },\n            PaymentFrequency: {\n              abbreviation: '',\n              description: '',\n              symbol: '',\n              rank: 100000,\n            },\n            TermType: {\n              abbreviation: 'Provided',\n              description: 'Provided',\n              symbol: 'P',\n              rank: 199,\n            },\n            WorstPayStatus: {\n              abbreviation: '120 Delinq',\n              description: 'Late 120 Days',\n              symbol: 4,\n              rank: 102,\n            },\n            PayStatusHistory: {\n              status: 'UUCCCC3334333334321CCCC44444321CCCCCCC1CCCCCC444',\n              startDate: '2014-04-07',\n              MonthlyPayStatus: [\n                { date: '2014-04-07', status: 'U' },\n                { date: '2014-03-06', status: 'U' },\n                { date: '2014-02-06', status: 'C' },\n                { date: '2014-01-06', status: 'C' },\n                { date: '2013-12-06', status: 'C' },\n                { date: '2013-11-06', status: 'C' },\n                { date: '2013-10-07', status: 3 },\n                { date: '2013-09-07', status: 3 },\n                { date: '2013-08-07', status: 3 },\n                { date: '2013-07-07', status: 4 },\n                { date: '2013-06-07', status: 3 },\n                { date: '2013-05-07', status: 3 },\n                { date: '2013-04-07', status: 3 },\n                { date: '2013-03-06', status: 3 },\n                { date: '2013-02-06', status: 3 },\n                { date: '2013-01-06', status: 4 },\n                { date: '2012-12-06', status: 3 },\n                { date: '2012-11-06', status: 2 },\n                { date: '2012-10-07', status: 1 },\n                { date: '2012-09-07', status: 'C' },\n                { date: '2012-08-07', status: 'C' },\n                { date: '2012-07-07', status: 'C' },\n                { date: '2012-06-07', status: 'C' },\n                { date: '2012-05-07', status: 4 },\n                { date: '2012-04-07', status: 4 },\n                { date: '2012-03-06', status: 4 },\n                { date: '2012-02-06', status: 4 },\n                { date: '2012-01-06', status: 4 },\n                { date: '2011-12-06', status: 3 },\n                { date: '2011-11-06', status: 2 },\n                { date: '2011-10-07', status: 1 },\n                { date: '2011-09-07', status: 'C' },\n                { date: '2011-08-07', status: 'C' },\n                { date: '2011-07-07', status: 'C' },\n                { date: '2011-06-07', status: 'C' },\n                { date: '2011-05-07', status: 'C' },\n                { date: '2011-04-07', status: 'C' },\n                { date: '2011-03-06', status: 'C' },\n                { date: '2011-02-06', status: 1 },\n                { date: '2011-01-06', status: 'C' },\n                { date: '2010-12-06', status: 'C' },\n                { date: '2010-11-07', status: 'C' },\n                { date: '2010-10-07', status: 'C' },\n                { date: '2010-09-07', status: 'C' },\n                { date: '2010-08-07', status: 'C' },\n                { date: '2010-07-07', status: 4 },\n                { date: '2010-06-07', status: 4 },\n                { date: '2010-05-07', status: 4 },\n              ],\n            },\n            CreditLimit: 9400,\n          },\n          Source: {\n            BorrowerKey: '',\n            Bureau: {\n              abbreviation: 'TransUnion',\n              description: 'TransUnion',\n              symbol: 'TUC',\n              rank: 1,\n            },\n            InquiryDate: '2015-06-09',\n            Reference: '0757326e-da32-48ea-99e',\n          },\n        },\n      },\n      {\n        accountTypeDescription: 'Installment Account',\n        accountTypeSymbol: 'I',\n        accountTypeAbbreviation: 'Installment',\n        Tradeline: {\n          subscriberCode: 3946018,\n          highBalance: 31888,\n          dateVerified: '2014-03-10',\n          dateReported: '2014-03-10',\n          dateOpened: '2009-09-09',\n          accountNumber: '8X6X9X8X',\n          dateAccountStatus: '2013-10-08',\n          currentBalance: 245,\n          creditorName: 'AMER HONDA',\n          position: 8,\n          dateClosed: '2013-10-08',\n          bureau: 'TransUnion',\n          AccountCondition: {\n            abbreviation: 'Closed',\n            description: 'Closed',\n            symbol: 'C',\n            rank: 50,\n          },\n          AccountDesignator: {\n            abbreviation: 'Joint',\n            description: 'Joint',\n            symbol: 'J',\n            rank: 199,\n          },\n          DisputeFlag: {\n            abbreviation: 'Account not disputed',\n            description: 'Account not disputed',\n            symbol: 'F',\n            rank: 199,\n          },\n          IndustryCode: {\n            abbreviation: 'Credit Union',\n            description: 'Credit Union',\n            symbol: 'Q',\n            rank: 199,\n          },\n          OpenClosed: {\n            abbreviation: 'Closed',\n            description: 'Closed',\n            symbol: 'C',\n            rank: 198,\n          },\n          PayStatus: {\n            abbreviation: 'Current',\n            description: 'Current',\n            symbol: 'C',\n            rank: 110,\n          },\n          VerificationIndicator: {\n            abbreviation: 'Account not disputed',\n            description: 'Account not disputed',\n            symbol: 'F',\n            rank: 199,\n          },\n          GrantedTrade: {\n            monthsReviewed: 48,\n            monthlyPayment: 642,\n            late90Count: 0,\n            late60Count: 0,\n            late30Count: 3,\n            dateLastPayment: '2013-10-08',\n            termMonths: 72,\n            collateral: '',\n            amountPastDue: 0,\n            worstPatStatusCount: 48,\n            AccountType: {\n              abbreviation: 'Auto Loan',\n              description: 'Auto Loan',\n              symbol: 'AU',\n              rank: 50,\n            },\n            CreditType: {\n              abbreviation: 'Installment',\n              description: 'Installment Account',\n              symbol: 'I',\n              rank: 20,\n            },\n            PaymentFrequency: {\n              abbreviation: 'Monthly (every month)',\n              description: 'Monthly (every month)',\n              symbol: 'M',\n              rank: 199,\n            },\n            TermType: {\n              abbreviation: 'Provided',\n              description: 'Provided',\n              symbol: 'P',\n              rank: 199,\n            },\n            WorstPayStatus: {\n              abbreviation: '30 Delinq',\n              description: 'Late 30 Days',\n              symbol: 1,\n              rank: 105,\n            },\n            PayStatusHistory: {\n              status: 'CCCCCCCCCCCC111CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC',\n              startDate: '2014-02-10',\n              MonthlyPayStatus: [\n                { date: '2014-02-10', status: 'C' },\n                { date: '2014-01-10', status: 'C' },\n                { date: '2013-12-10', status: 'C' },\n                { date: '2013-11-10', status: 'C' },\n                { date: '2013-10-10', status: 'C' },\n                { date: '2013-09-10', status: 'C' },\n                { date: '2013-08-10', status: 'C' },\n                { date: '2013-07-10', status: 'C' },\n                { date: '2013-06-10', status: 'C' },\n                { date: '2013-05-10', status: 'C' },\n                { date: '2013-04-10', status: 'C' },\n                { date: '2013-03-10', status: 'C' },\n                { date: '2013-02-10', status: 1 },\n                { date: '2013-01-10', status: 1 },\n                { date: '2012-12-10', status: 1 },\n                { date: '2012-11-10', status: 'C' },\n                { date: '2012-10-10', status: 'C' },\n                { date: '2012-09-10', status: 'C' },\n                { date: '2012-08-10', status: 'C' },\n                { date: '2012-07-10', status: 'C' },\n                { date: '2012-06-10', status: 'C' },\n                { date: '2012-05-10', status: 'C' },\n                { date: '2012-04-10', status: 'C' },\n                { date: '2012-03-10', status: 'C' },\n                { date: '2012-02-10', status: 'C' },\n                { date: '2012-01-10', status: 'C' },\n                { date: '2011-12-10', status: 'C' },\n                { date: '2011-11-10', status: 'C' },\n                { date: '2011-10-10', status: 'C' },\n                { date: '2011-09-10', status: 'C' },\n                { date: '2011-08-10', status: 'C' },\n                { date: '2011-07-10', status: 'C' },\n                { date: '2011-06-10', status: 'C' },\n                { date: '2011-05-10', status: 'C' },\n                { date: '2011-04-10', status: 'C' },\n                { date: '2011-03-10', status: 'C' },\n                { date: '2011-02-10', status: 'C' },\n                { date: '2011-01-10', status: 'C' },\n                { date: '2010-12-10', status: 'C' },\n                { date: '2010-11-10', status: 'C' },\n                { date: '2010-10-10', status: 'C' },\n                { date: '2010-09-10', status: 'C' },\n                { date: '2010-08-10', status: 'C' },\n                { date: '2010-07-10', status: 'C' },\n                { date: '2010-06-10', status: 'C' },\n                { date: '2010-05-10', status: 'C' },\n                { date: '2010-04-10', status: 'C' },\n                { date: '2010-03-10', status: 'C' },\n              ],\n            },\n            CreditLimit: 0,\n          },\n          Source: {\n            BorrowerKey: '',\n            Bureau: {\n              abbreviation: 'TransUnion',\n              description: 'TransUnion',\n              symbol: 'TUC',\n              rank: 1,\n            },\n            InquiryDate: '2015-06-09',\n            Reference: '0757326e-da32-48ea-99e',\n          },\n        },\n      },\n      {\n        accountTypeDescription: 'Installment Account',\n        accountTypeSymbol: 'I',\n        accountTypeAbbreviation: 'Installment',\n        Tradeline: {\n          subscriberCode: '01ZHV008',\n          highBalance: 5889,\n          dateVerified: '2012-08-16',\n          dateReported: '2012-08-16',\n          dateOpened: '2010-09-27',\n          accountNumber: '1X5X4X9',\n          dateAccountStatus: '2012-08-16',\n          currentBalance: 0,\n          creditorName: 'ARVEST BANK',\n          position: 9,\n          dateClosed: '2012-08-16',\n          bureau: 'TransUnion',\n          AccountCondition: {\n            abbreviation: 'Closed',\n            description: 'Closed',\n            symbol: 'C',\n            rank: 50,\n          },\n          AccountDesignator: {\n            abbreviation: 'Individual',\n            description: 'Individual',\n            symbol: 'I',\n            rank: 199,\n          },\n          DisputeFlag: {\n            abbreviation: 'Account not disputed',\n            description: 'Account not disputed',\n            symbol: 'F',\n            rank: 199,\n          },\n          IndustryCode: {\n            abbreviation: 'Bank',\n            description: 'Bank',\n            symbol: 'B',\n            rank: 199,\n          },\n          OpenClosed: {\n            abbreviation: 'Closed',\n            description: 'Closed',\n            symbol: 'C',\n            rank: 198,\n          },\n          PayStatus: {\n            abbreviation: 'Current',\n            description: 'Current',\n            symbol: 'C',\n            rank: 110,\n          },\n          VerificationIndicator: {\n            abbreviation: 'Account not disputed',\n            description: 'Account not disputed',\n            symbol: 'F',\n            rank: 199,\n          },\n          Remark: {\n            customRemark: '',\n            RemarkCode: {\n              abbreviation: 'Closed',\n              description: 'Closed',\n              symbol: 'T00CLO',\n              rank: 199,\n            },\n          },\n          GrantedTrade: {\n            monthsReviewed: 21,\n            monthlyPayment: 0,\n            late90Count: 0,\n            late60Count: 0,\n            late30Count: 1,\n            dateLastPayment: '2012-07-17',\n            termMonths: 0,\n            collateral: '',\n            amountPastDue: 0,\n            worstPatStatusCount: 21,\n            AccountType: {\n              abbreviation: 'Secured loan',\n              description: 'Secured loan',\n              symbol: 'SE',\n              rank: 50,\n            },\n            CreditType: {\n              abbreviation: 'Installment',\n              description: 'Installment Account',\n              symbol: 'I',\n              rank: 20,\n            },\n            PaymentFrequency: {\n              abbreviation: '',\n              description: '',\n              symbol: '',\n              rank: 100000,\n            },\n            TermType: {\n              abbreviation: 'Provided',\n              description: 'Provided',\n              symbol: 'P',\n              rank: 199,\n            },\n            WorstPayStatus: {\n              abbreviation: '30 Delinq',\n              description: 'Late 30 Days',\n              symbol: 1,\n              rank: 105,\n            },\n            PayStatusHistory: {\n              status: 'CCCCCCCCCCCCCC1CCCCCC',\n              startDate: '2012-07-16',\n              MonthlyPayStatus: [\n                { date: '2012-07-16', status: 'C' },\n                { date: '2012-06-16', status: 'C' },\n                { date: '2012-05-16', status: 'C' },\n                { date: '2012-04-16', status: 'C' },\n                { date: '2012-03-16', status: 'C' },\n                { date: '2012-02-15', status: 'C' },\n                { date: '2012-01-15', status: 'C' },\n                { date: '2011-12-15', status: 'C' },\n                { date: '2011-11-15', status: 'C' },\n                { date: '2011-10-16', status: 'C' },\n                { date: '2011-09-16', status: 'C' },\n                { date: '2011-08-16', status: 'C' },\n                { date: '2011-07-16', status: 'C' },\n                { date: '2011-06-16', status: 'C' },\n                { date: '2011-05-16', status: 1 },\n                { date: '2011-04-16', status: 'C' },\n                { date: '2011-03-16', status: 'C' },\n                { date: '2011-02-15', status: 'C' },\n                { date: '2011-01-15', status: 'C' },\n                { date: '2010-12-15', status: 'C' },\n                { date: '2010-11-15', status: 'C' },\n                { date: '2010-10-16', status: '' },\n                { date: '2010-09-16', status: '' },\n                { date: '2010-08-16', status: '' },\n              ],\n            },\n            CreditLimit: 0,\n          },\n          Source: {\n            BorrowerKey: '',\n            Bureau: {\n              abbreviation: 'TransUnion',\n              description: 'TransUnion',\n              symbol: 'TUC',\n              rank: 1,\n            },\n            InquiryDate: '2015-06-09',\n            Reference: '0757326e-da32-48ea-99e',\n          },\n        },\n      },\n      {\n        accountTypeDescription: 'Installment Account',\n        accountTypeSymbol: 'I',\n        accountTypeAbbreviation: 'Installment',\n        Tradeline: {\n          subscriberCode: '0654N1XG',\n          highBalance: 7720,\n          dateVerified: '2012-02-29',\n          dateReported: '2012-02-29',\n          dateOpened: '2009-08-11',\n          accountNumber: '8X6X6X5X3X8X5X5X',\n          dateAccountStatus: '2012-02-29',\n          currentBalance: 0,\n          creditorName: 'SPRINGLF FIN',\n          position: 10,\n          dateClosed: '2012-02-29',\n          bureau: 'TransUnion',\n          AccountCondition: {\n            abbreviation: 'Closed',\n            description: 'Closed',\n            symbol: 'C',\n            rank: 50,\n          },\n          AccountDesignator: {\n            abbreviation: 'Joint',\n            description: 'Joint',\n            symbol: 'J',\n            rank: 199,\n          },\n          DisputeFlag: {\n            abbreviation: 'Account not disputed',\n            description: 'Account not disputed',\n            symbol: 'F',\n            rank: 199,\n          },\n          IndustryCode: {\n            abbreviation: 'Finance/Personal',\n            description: 'Finance/Personal',\n            symbol: 'F',\n            rank: 199,\n          },\n          OpenClosed: {\n            abbreviation: 'Closed',\n            description: 'Closed',\n            symbol: 'C',\n            rank: 198,\n          },\n          PayStatus: {\n            abbreviation: 'Current',\n            description: 'Current',\n            symbol: 'C',\n            rank: 110,\n          },\n          VerificationIndicator: {\n            abbreviation: 'Account not disputed',\n            description: 'Account not disputed',\n            symbol: 'F',\n            rank: 199,\n          },\n          Remark: {\n            customRemark: '',\n            RemarkCode: {\n              abbreviation: 'Closed',\n              description: 'Closed',\n              symbol: 'T00CLO',\n              rank: 199,\n            },\n          },\n          GrantedTrade: {\n            monthsReviewed: 28,\n            monthlyPayment: 214,\n            late90Count: 0,\n            late60Count: 0,\n            late30Count: 0,\n            dateLastPayment: '2011-11-13',\n            termMonths: 36,\n            collateral: '',\n            amountPastDue: 0,\n            worstPatStatusCount: 28,\n            AccountType: {\n              abbreviation: 'Secured by household goods/collateral',\n              description: 'Secured by household goods/collateral',\n              symbol: 'SO',\n              rank: 50,\n            },\n            CreditType: {\n              abbreviation: 'Installment',\n              description: 'Installment Account',\n              symbol: 'I',\n              rank: 20,\n            },\n            PaymentFrequency: {\n              abbreviation: 'Monthly (every month)',\n              description: 'Monthly (every month)',\n              symbol: 'M',\n              rank: 199,\n            },\n            TermType: {\n              abbreviation: 'Provided',\n              description: 'Provided',\n              symbol: 'P',\n              rank: 199,\n            },\n            WorstPayStatus: {\n              abbreviation: 'Current',\n              description: 'Current',\n              symbol: 'C',\n              rank: 110,\n            },\n            PayStatusHistory: {\n              status: 'CCCCCCCCCCCCCCCCCCCCCCCCCCCC',\n              startDate: '2012-01-29',\n              MonthlyPayStatus: [\n                { date: '2012-01-29', status: 'C' },\n                { date: '2011-12-29', status: 'C' },\n                { date: '2011-11-29', status: 'C' },\n                { date: '2011-10-29', status: 'C' },\n                { date: '2011-09-29', status: 'C' },\n                { date: '2011-08-29', status: 'C' },\n                { date: '2011-07-29', status: 'C' },\n                { date: '2011-06-29', status: 'C' },\n                { date: '2011-05-29', status: 'C' },\n                { date: '2011-04-29', status: 'C' },\n                { date: '2011-03-29', status: 'C' },\n                { date: '2011-02-28', status: 'C' },\n                { date: '2011-01-28', status: 'C' },\n                { date: '2010-12-28', status: 'C' },\n                { date: '2010-11-28', status: 'C' },\n                { date: '2010-10-28', status: 'C' },\n                { date: '2010-09-28', status: 'C' },\n                { date: '2010-08-28', status: 'C' },\n                { date: '2010-07-28', status: 'C' },\n                { date: '2010-06-28', status: 'C' },\n                { date: '2010-05-28', status: 'C' },\n                { date: '2010-04-28', status: 'C' },\n                { date: '2010-03-28', status: 'C' },\n                { date: '2010-02-28', status: 'C' },\n                { date: '2010-01-28', status: 'C' },\n                { date: '2009-12-28', status: 'C' },\n                { date: '2009-11-28', status: 'C' },\n                { date: '2009-10-28', status: 'C' },\n              ],\n            },\n            CreditLimit: 0,\n          },\n          Source: {\n            BorrowerKey: '',\n            Bureau: {\n              abbreviation: 'TransUnion',\n              description: 'TransUnion',\n              symbol: 'TUC',\n              rank: 1,\n            },\n            InquiryDate: '2015-06-09',\n            Reference: '0757326e-da32-48ea-99e',\n          },\n        },\n      },\n      {\n        accountTypeDescription: 'Installment Account',\n        accountTypeSymbol: 'I',\n        accountTypeAbbreviation: 'Installment',\n        Tradeline: {\n          subscriberCode: '0890D30G',\n          highBalance: 20093,\n          dateVerified: '2012-01-31',\n          dateReported: '2012-01-31',\n          dateOpened: '2006-01-20',\n          accountNumber: '1X4X3X0X0X',\n          dateAccountStatus: '2012-01-31',\n          currentBalance: 0,\n          creditorName: 'CITI AUTO',\n          position: 11,\n          dateClosed: '2012-01-31',\n          bureau: 'TransUnion',\n          AccountCondition: {\n            abbreviation: 'Closed',\n            description: 'Closed',\n            symbol: 'C',\n            rank: 50,\n          },\n          AccountDesignator: {\n            abbreviation: 'Joint',\n            description: 'Joint',\n            symbol: 'J',\n            rank: 199,\n          },\n          DisputeFlag: {\n            abbreviation: 'Account not disputed',\n            description: 'Account not disputed',\n            symbol: 'F',\n            rank: 199,\n          },\n          IndustryCode: {\n            abbreviation: 'Finance/Personal',\n            description: 'Finance/Personal',\n            symbol: 'F',\n            rank: 199,\n          },\n          OpenClosed: {\n            abbreviation: 'Closed',\n            description: 'Closed',\n            symbol: 'C',\n            rank: 198,\n          },\n          PayStatus: {\n            abbreviation: 'Current',\n            description: 'Current',\n            symbol: 'C',\n            rank: 110,\n          },\n          VerificationIndicator: {\n            abbreviation: 'Account not disputed',\n            description: 'Account not disputed',\n            symbol: 'F',\n            rank: 199,\n          },\n          Remark: {\n            customRemark: '',\n            RemarkCode: {\n              abbreviation: 'Closed',\n              description: 'Closed',\n              symbol: 'T00CLO',\n              rank: 199,\n            },\n          },\n          GrantedTrade: {\n            monthsReviewed: 48,\n            monthlyPayment: 0,\n            late90Count: 0,\n            late60Count: 0,\n            late30Count: 0,\n            dateLastPayment: '2011-12-31',\n            termMonths: 72,\n            collateral: '',\n            amountPastDue: 0,\n            worstPatStatusCount: 48,\n            AccountType: {\n              abbreviation: 'Auto Loan',\n              description: 'Auto Loan',\n              symbol: 'AU',\n              rank: 50,\n            },\n            CreditType: {\n              abbreviation: 'Installment',\n              description: 'Installment Account',\n              symbol: 'I',\n              rank: 20,\n            },\n            PaymentFrequency: {\n              abbreviation: 'Monthly (every month)',\n              description: 'Monthly (every month)',\n              symbol: 'M',\n              rank: 199,\n            },\n            TermType: {\n              abbreviation: 'Provided',\n              description: 'Provided',\n              symbol: 'P',\n              rank: 199,\n            },\n            WorstPayStatus: {\n              abbreviation: 'Current',\n              description: 'Current',\n              symbol: 'C',\n              rank: 110,\n            },\n            PayStatusHistory: {\n              status: 'CCCCCCCCCCCCCCCCCCCCCCCCCCCCCUCCCCCCCCCCCCCCCCCC',\n              startDate: '2011-12-31',\n              MonthlyPayStatus: [\n                { date: '2011-12-31', status: 'C' },\n                { date: '2011-11-30', status: 'C' },\n                { date: '2011-10-30', status: 'C' },\n                { date: '2011-09-30', status: 'C' },\n                { date: '2011-08-30', status: 'C' },\n                { date: '2011-07-30', status: 'C' },\n                { date: '2011-06-30', status: 'C' },\n                { date: '2011-05-30', status: 'C' },\n                { date: '2011-04-30', status: 'C' },\n                { date: '2011-03-30', status: 'C' },\n                { date: '2011-02-28', status: 'C' },\n                { date: '2011-01-28', status: 'C' },\n                { date: '2010-12-28', status: 'C' },\n                { date: '2010-11-28', status: 'C' },\n                { date: '2010-10-28', status: 'C' },\n                { date: '2010-09-28', status: 'C' },\n                { date: '2010-08-28', status: 'C' },\n                { date: '2010-07-28', status: 'C' },\n                { date: '2010-06-28', status: 'C' },\n                { date: '2010-05-28', status: 'C' },\n                { date: '2010-04-28', status: 'C' },\n                { date: '2010-03-28', status: 'C' },\n                { date: '2010-02-28', status: 'C' },\n                { date: '2010-01-28', status: 'C' },\n                { date: '2009-12-28', status: 'C' },\n                { date: '2009-11-28', status: 'C' },\n                { date: '2009-10-28', status: 'C' },\n                { date: '2009-09-28', status: 'C' },\n                { date: '2009-08-28', status: 'C' },\n                { date: '2009-07-28', status: 'U' },\n                { date: '2009-06-28', status: 'C' },\n                { date: '2009-05-28', status: 'C' },\n                { date: '2009-04-28', status: 'C' },\n                { date: '2009-03-28', status: 'C' },\n                { date: '2009-02-28', status: 'C' },\n                { date: '2009-01-28', status: 'C' },\n                { date: '2008-12-28', status: 'C' },\n                { date: '2008-11-28', status: 'C' },\n                { date: '2008-10-28', status: 'C' },\n                { date: '2008-09-28', status: 'C' },\n                { date: '2008-08-28', status: 'C' },\n                { date: '2008-07-28', status: 'C' },\n                { date: '2008-06-28', status: 'C' },\n                { date: '2008-05-28', status: 'C' },\n                { date: '2008-04-28', status: 'C' },\n                { date: '2008-03-28', status: 'C' },\n                { date: '2008-02-28', status: 'C' },\n                { date: '2008-01-28', status: 'C' },\n              ],\n            },\n            CreditLimit: 0,\n          },\n          Source: {\n            BorrowerKey: '',\n            Bureau: {\n              abbreviation: 'TransUnion',\n              description: 'TransUnion',\n              symbol: 'TUC',\n              rank: 1,\n            },\n            InquiryDate: '2015-06-09',\n            Reference: '0757326e-da32-48ea-99e',\n          },\n        },\n      },\n      {\n        accountTypeDescription: 'Installment Account',\n        accountTypeSymbol: 'I',\n        accountTypeAbbreviation: 'Installment',\n        Tradeline: {\n          subscriberCode: '01ZHV008',\n          highBalance: 7034,\n          dateVerified: '2010-11-01',\n          dateReported: '2010-11-01',\n          dateOpened: '2009-04-06',\n          accountNumber: '3X7X7X7',\n          dateAccountStatus: '2010-11-01',\n          currentBalance: 0,\n          creditorName: 'ARVEST BANK',\n          position: 12,\n          dateClosed: '2010-11-01',\n          bureau: 'TransUnion',\n          AccountCondition: {\n            abbreviation: 'Closed',\n            description: 'Closed',\n            symbol: 'C',\n            rank: 50,\n          },\n          AccountDesignator: {\n            abbreviation: 'Joint',\n            description: 'Joint',\n            symbol: 'J',\n            rank: 199,\n          },\n          DisputeFlag: {\n            abbreviation: 'Account not disputed',\n            description: 'Account not disputed',\n            symbol: 'F',\n            rank: 199,\n          },\n          IndustryCode: {\n            abbreviation: 'Bank',\n            description: 'Bank',\n            symbol: 'B',\n            rank: 199,\n          },\n          OpenClosed: {\n            abbreviation: 'Closed',\n            description: 'Closed',\n            symbol: 'C',\n            rank: 198,\n          },\n          PayStatus: {\n            abbreviation: 'Current',\n            description: 'Current',\n            symbol: 'C',\n            rank: 110,\n          },\n          VerificationIndicator: {\n            abbreviation: 'Account not disputed',\n            description: 'Account not disputed',\n            symbol: 'F',\n            rank: 199,\n          },\n          Remark: {\n            customRemark: '',\n            RemarkCode: {\n              abbreviation: 'Closed',\n              description: 'Closed',\n              symbol: 'T00CLO',\n              rank: 199,\n            },\n          },\n          GrantedTrade: {\n            monthsReviewed: 17,\n            monthlyPayment: 312,\n            late90Count: 0,\n            late60Count: 0,\n            late30Count: 0,\n            dateLastPayment: '2010-10-31',\n            termMonths: 24,\n            collateral: '',\n            amountPastDue: 0,\n            worstPatStatusCount: 17,\n            AccountType: {\n              abbreviation: 'Secured loan',\n              description: 'Secured loan',\n              symbol: 'SE',\n              rank: 50,\n            },\n            CreditType: {\n              abbreviation: 'Installment',\n              description: 'Installment Account',\n              symbol: 'I',\n              rank: 20,\n            },\n            PaymentFrequency: {\n              abbreviation: 'Monthly (every month)',\n              description: 'Monthly (every month)',\n              symbol: 'M',\n              rank: 199,\n            },\n            TermType: {\n              abbreviation: 'Provided',\n              description: 'Provided',\n              symbol: 'P',\n              rank: 199,\n            },\n            WorstPayStatus: {\n              abbreviation: 'Current',\n              description: 'Current',\n              symbol: 'C',\n              rank: 110,\n            },\n            PayStatusHistory: {\n              status: 'CCCCCCCCCCCCCCCCC',\n              startDate: '2010-10-01',\n              MonthlyPayStatus: [\n                { date: '2010-10-01', status: 'C' },\n                { date: '2010-09-01', status: 'C' },\n                { date: '2010-08-01', status: 'C' },\n                { date: '2010-07-01', status: 'C' },\n                { date: '2010-06-01', status: 'C' },\n                { date: '2010-05-01', status: 'C' },\n                { date: '2010-04-01', status: 'C' },\n                { date: '2010-02-28', status: 'C' },\n                { date: '2010-01-31', status: 'C' },\n                { date: '2009-12-31', status: 'C' },\n                { date: '2009-11-30', status: 'C' },\n                { date: '2009-11-01', status: 'C' },\n                { date: '2009-10-01', status: 'C' },\n                { date: '2009-09-01', status: 'C' },\n                { date: '2009-08-01', status: 'C' },\n                { date: '2009-07-01', status: 'C' },\n                { date: '2009-06-01', status: 'C' },\n                { date: '2009-05-01', status: '' },\n                { date: '2009-04-01', status: '' },\n                { date: '2009-02-28', status: '' },\n                { date: '2009-01-31', status: '' },\n                { date: '2008-12-31', status: '' },\n                { date: '2008-11-30', status: '' },\n                { date: '2008-11-01', status: '' },\n              ],\n            },\n            CreditLimit: 0,\n          },\n          Source: {\n            BorrowerKey: '',\n            Bureau: {\n              abbreviation: 'TransUnion',\n              description: 'TransUnion',\n              symbol: 'TUC',\n              rank: 1,\n            },\n            InquiryDate: '2015-06-09',\n            Reference: '0757326e-da32-48ea-99e',\n          },\n        },\n      },\n      {\n        accountTypeDescription: 'Installment Account',\n        accountTypeSymbol: 'I',\n        accountTypeAbbreviation: 'Installment',\n        Tradeline: {\n          subscriberCode: '0654N1XG',\n          highBalance: 1215,\n          dateVerified: '2009-07-31',\n          dateReported: '2009-07-31',\n          dateOpened: '2008-02-10',\n          accountNumber: '2X5X6X5X3X8X5X5X',\n          dateAccountStatus: '2009-07-31',\n          currentBalance: 0,\n          creditorName: 'SPRINGLF FIN',\n          position: 13,\n          dateClosed: '2009-07-31',\n          bureau: 'TransUnion',\n          AccountCondition: {\n            abbreviation: 'Closed',\n            description: 'Closed',\n            symbol: 'C',\n            rank: 50,\n          },\n          AccountDesignator: {\n            abbreviation: 'Joint',\n            description: 'Joint',\n            symbol: 'J',\n            rank: 199,\n          },\n          DisputeFlag: {\n            abbreviation: 'Account not disputed',\n            description: 'Account not disputed',\n            symbol: 'F',\n            rank: 199,\n          },\n          IndustryCode: {\n            abbreviation: 'Finance/Personal',\n            description: 'Finance/Personal',\n            symbol: 'F',\n            rank: 199,\n          },\n          OpenClosed: {\n            abbreviation: 'Closed',\n            description: 'Closed',\n            symbol: 'C',\n            rank: 198,\n          },\n          PayStatus: {\n            abbreviation: 'Current',\n            description: 'Current',\n            symbol: 'C',\n            rank: 110,\n          },\n          VerificationIndicator: {\n            abbreviation: 'Account not disputed',\n            description: 'Account not disputed',\n            symbol: 'F',\n            rank: 199,\n          },\n          Remark: {\n            customRemark: '',\n            RemarkCode: {\n              abbreviation: 'Closed',\n              description: 'Closed',\n              symbol: 'T00CLO',\n              rank: 199,\n            },\n          },\n          GrantedTrade: {\n            monthsReviewed: 16,\n            monthlyPayment: 80,\n            late90Count: 0,\n            late60Count: 0,\n            late30Count: 0,\n            dateLastPayment: '2009-06-16',\n            termMonths: 15,\n            collateral: '',\n            amountPastDue: 0,\n            worstPatStatusCount: 16,\n            AccountType: {\n              abbreviation: 'Secured by household goods/collateral',\n              description: 'Secured by household goods/collateral',\n              symbol: 'SO',\n              rank: 50,\n            },\n            CreditType: {\n              abbreviation: 'Installment',\n              description: 'Installment Account',\n              symbol: 'I',\n              rank: 20,\n            },\n            PaymentFrequency: {\n              abbreviation: 'Monthly (every month)',\n              description: 'Monthly (every month)',\n              symbol: 'M',\n              rank: 199,\n            },\n            TermType: {\n              abbreviation: 'Provided',\n              description: 'Provided',\n              symbol: 'P',\n              rank: 199,\n            },\n            WorstPayStatus: {\n              abbreviation: 'Current',\n              description: 'Current',\n              symbol: 'C',\n              rank: 110,\n            },\n            PayStatusHistory: {\n              status: 'CCCCCCCUCCCCCCCC',\n              startDate: '2009-06-30',\n              MonthlyPayStatus: [\n                { date: '2009-06-30', status: 'C' },\n                { date: '2009-05-30', status: 'C' },\n                { date: '2009-04-30', status: 'C' },\n                { date: '2009-03-30', status: 'C' },\n                { date: '2009-02-27', status: 'C' },\n                { date: '2009-01-27', status: 'C' },\n                { date: '2008-12-27', status: 'C' },\n                { date: '2008-11-27', status: 'U' },\n                { date: '2008-10-28', status: 'C' },\n                { date: '2008-09-28', status: 'C' },\n                { date: '2008-08-28', status: 'C' },\n                { date: '2008-07-28', status: 'C' },\n                { date: '2008-06-28', status: 'C' },\n                { date: '2008-05-28', status: 'C' },\n                { date: '2008-04-28', status: 'C' },\n                { date: '2008-03-28', status: 'C' },\n                { date: '2008-02-27', status: '' },\n                { date: '2008-01-27', status: '' },\n                { date: '2007-12-27', status: '' },\n                { date: '2007-11-27', status: '' },\n                { date: '2007-10-28', status: '' },\n                { date: '2007-09-28', status: '' },\n                { date: '2007-08-28', status: '' },\n                { date: '2007-07-28', status: '' },\n              ],\n            },\n            CreditLimit: 0,\n          },\n          Source: {\n            BorrowerKey: '',\n            Bureau: {\n              abbreviation: 'TransUnion',\n              description: 'TransUnion',\n              symbol: 'TUC',\n              rank: 1,\n            },\n            InquiryDate: '2015-06-09',\n            Reference: '0757326e-da32-48ea-99e',\n          },\n        },\n      },\n      {\n        accountTypeDescription: 'Installment Account',\n        accountTypeSymbol: 'I',\n        accountTypeAbbreviation: 'Installment',\n        Tradeline: {\n          subscriberCode: 4176128,\n          highBalance: 13724,\n          dateVerified: '2009-07-31',\n          dateReported: '2009-07-31',\n          dateOpened: '2004-06-16',\n          accountNumber: '7X4X0X6X7X9X1X0X1',\n          dateAccountStatus: '2009-07-31',\n          currentBalance: 0,\n          creditorName: 'TOYOTA MTR',\n          position: 14,\n          dateClosed: '2009-07-31',\n          bureau: 'TransUnion',\n          AccountCondition: {\n            abbreviation: 'Closed',\n            description: 'Closed',\n            symbol: 'C',\n            rank: 50,\n          },\n          AccountDesignator: {\n            abbreviation: 'Individual',\n            description: 'Individual',\n            symbol: 'I',\n            rank: 199,\n          },\n          DisputeFlag: {\n            abbreviation: 'Account not disputed',\n            description: 'Account not disputed',\n            symbol: 'F',\n            rank: 199,\n          },\n          IndustryCode: {\n            abbreviation: 'Credit Union',\n            description: 'Credit Union',\n            symbol: 'Q',\n            rank: 199,\n          },\n          OpenClosed: {\n            abbreviation: 'Closed',\n            description: 'Closed',\n            symbol: 'C',\n            rank: 198,\n          },\n          PayStatus: {\n            abbreviation: 'Current',\n            description: 'Current',\n            symbol: 'C',\n            rank: 110,\n          },\n          VerificationIndicator: {\n            abbreviation: 'Account not disputed',\n            description: 'Account not disputed',\n            symbol: 'F',\n            rank: 199,\n          },\n          Remark: {\n            customRemark: '',\n            RemarkCode: {\n              abbreviation: 'Closed',\n              description: 'Closed',\n              symbol: 'T00CLO',\n              rank: 199,\n            },\n          },\n          GrantedTrade: {\n            monthsReviewed: 47,\n            monthlyPayment: 332,\n            late90Count: 0,\n            late60Count: 0,\n            late30Count: 0,\n            dateLastPayment: '2009-07-31',\n            termMonths: 60,\n            collateral: '',\n            amountPastDue: 0,\n            worstPatStatusCount: 47,\n            AccountType: {\n              abbreviation: 'Auto Loan',\n              description: 'Auto Loan',\n              symbol: 'AU',\n              rank: 50,\n            },\n            CreditType: {\n              abbreviation: 'Installment',\n              description: 'Installment Account',\n              symbol: 'I',\n              rank: 20,\n            },\n            PaymentFrequency: {\n              abbreviation: 'Monthly (every month)',\n              description: 'Monthly (every month)',\n              symbol: 'M',\n              rank: 199,\n            },\n            TermType: {\n              abbreviation: 'Provided',\n              description: 'Provided',\n              symbol: 'P',\n              rank: 199,\n            },\n            WorstPayStatus: {\n              abbreviation: 'Current',\n              description: 'Current',\n              symbol: 'C',\n              rank: 110,\n            },\n            PayStatusHistory: {\n              status: 'CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC',\n              startDate: '2009-06-30',\n              MonthlyPayStatus: [\n                { date: '2009-06-30', status: 'C' },\n                { date: '2009-05-30', status: 'C' },\n                { date: '2009-04-30', status: 'C' },\n                { date: '2009-03-30', status: 'C' },\n                { date: '2009-02-27', status: 'C' },\n                { date: '2009-01-27', status: 'C' },\n                { date: '2008-12-27', status: 'C' },\n                { date: '2008-11-27', status: 'C' },\n                { date: '2008-10-28', status: 'C' },\n                { date: '2008-09-28', status: 'C' },\n                { date: '2008-08-28', status: 'C' },\n                { date: '2008-07-28', status: 'C' },\n                { date: '2008-06-28', status: 'C' },\n                { date: '2008-05-28', status: 'C' },\n                { date: '2008-04-28', status: 'C' },\n                { date: '2008-03-28', status: 'C' },\n                { date: '2008-02-27', status: 'C' },\n                { date: '2008-01-27', status: 'C' },\n                { date: '2007-12-27', status: 'C' },\n                { date: '2007-11-27', status: 'C' },\n                { date: '2007-10-28', status: 'C' },\n                { date: '2007-09-28', status: 'C' },\n                { date: '2007-08-28', status: 'C' },\n                { date: '2007-07-28', status: 'C' },\n                { date: '2007-06-28', status: 'C' },\n                { date: '2007-05-28', status: 'C' },\n                { date: '2007-04-28', status: 'C' },\n                { date: '2007-03-28', status: 'C' },\n                { date: '2007-02-27', status: 'C' },\n                { date: '2007-01-27', status: 'C' },\n                { date: '2006-12-27', status: 'C' },\n                { date: '2006-11-27', status: 'C' },\n                { date: '2006-10-28', status: 'C' },\n                { date: '2006-09-28', status: 'C' },\n                { date: '2006-08-28', status: 'C' },\n                { date: '2006-07-28', status: 'C' },\n                { date: '2006-06-28', status: 'C' },\n                { date: '2006-05-28', status: 'C' },\n                { date: '2006-04-28', status: 'C' },\n                { date: '2006-03-27', status: 'C' },\n                { date: '2006-02-27', status: 'C' },\n                { date: '2006-01-27', status: 'C' },\n                { date: '2005-12-27', status: 'C' },\n                { date: '2005-11-27', status: 'C' },\n                { date: '2005-10-28', status: 'C' },\n                { date: '2005-09-28', status: 'C' },\n                { date: '2005-08-28', status: 'C' },\n              ],\n            },\n            CreditLimit: 0,\n          },\n          Source: {\n            BorrowerKey: '',\n            Bureau: {\n              abbreviation: 'TransUnion',\n              description: 'TransUnion',\n              symbol: 'TUC',\n              rank: 1,\n            },\n            InquiryDate: '2015-06-09',\n            Reference: '0757326e-da32-48ea-99e',\n          },\n        },\n      },\n      {\n        accountTypeDescription: 'Installment Account',\n        accountTypeSymbol: 'I',\n        accountTypeAbbreviation: 'Installment',\n        Tradeline: {\n          subscriberCode: '01ZHV008',\n          highBalance: 14927,\n          dateVerified: '2009-05-20',\n          dateReported: '2009-05-20',\n          dateOpened: '2007-01-31',\n          accountNumber: '2X2X4X5',\n          dateAccountStatus: '2009-05-20',\n          currentBalance: 0,\n          creditorName: 'ARVEST BANK',\n          position: 15,\n          dateClosed: '2009-05-20',\n          bureau: 'TransUnion',\n          AccountCondition: {\n            abbreviation: 'Closed',\n            description: 'Closed',\n            symbol: 'C',\n            rank: 50,\n          },\n          AccountDesignator: {\n            abbreviation: 'Joint',\n            description: 'Joint',\n            symbol: 'J',\n            rank: 199,\n          },\n          DisputeFlag: {\n            abbreviation: 'Account not disputed',\n            description: 'Account not disputed',\n            symbol: 'F',\n            rank: 199,\n          },\n          IndustryCode: {\n            abbreviation: 'Bank',\n            description: 'Bank',\n            symbol: 'B',\n            rank: 199,\n          },\n          OpenClosed: {\n            abbreviation: 'Closed',\n            description: 'Closed',\n            symbol: 'C',\n            rank: 198,\n          },\n          PayStatus: {\n            abbreviation: 'Current',\n            description: 'Current',\n            symbol: 'C',\n            rank: 110,\n          },\n          VerificationIndicator: {\n            abbreviation: 'Account not disputed',\n            description: 'Account not disputed',\n            symbol: 'F',\n            rank: 199,\n          },\n          Remark: {\n            customRemark: '',\n            RemarkCode: {\n              abbreviation: 'Closed',\n              description: 'Closed',\n              symbol: 'T00CLO',\n              rank: 199,\n            },\n          },\n          GrantedTrade: {\n            monthsReviewed: 27,\n            monthlyPayment: 0,\n            late90Count: 0,\n            late60Count: 0,\n            late30Count: 1,\n            dateLastPayment: '2009-03-17',\n            termMonths: 26,\n            collateral: '',\n            amountPastDue: 0,\n            worstPatStatusCount: 27,\n            AccountType: {\n              abbreviation: 'Secured loan',\n              description: 'Secured loan',\n              symbol: 'SE',\n              rank: 50,\n            },\n            CreditType: {\n              abbreviation: 'Installment',\n              description: 'Installment Account',\n              symbol: 'I',\n              rank: 20,\n            },\n            PaymentFrequency: {\n              abbreviation: 'Monthly (every month)',\n              description: 'Monthly (every month)',\n              symbol: 'M',\n              rank: 199,\n            },\n            TermType: {\n              abbreviation: 'Provided',\n              description: 'Provided',\n              symbol: 'P',\n              rank: 199,\n            },\n            WorstPayStatus: {\n              abbreviation: '30 Delinq',\n              description: 'Late 30 Days',\n              symbol: 1,\n              rank: 105,\n            },\n            PayStatusHistory: {\n              status: 'U1CCCCCCCCCCCCCCCCCCCCCCCCC',\n              startDate: '2009-04-20',\n              MonthlyPayStatus: [\n                { date: '2009-04-20', status: 'U' },\n                { date: '2009-03-20', status: 1 },\n                { date: '2009-02-19', status: 'C' },\n                { date: '2009-01-19', status: 'C' },\n                { date: '2008-12-19', status: 'C' },\n                { date: '2008-11-19', status: 'C' },\n                { date: '2008-10-20', status: 'C' },\n                { date: '2008-09-20', status: 'C' },\n                { date: '2008-08-20', status: 'C' },\n                { date: '2008-07-20', status: 'C' },\n                { date: '2008-06-20', status: 'C' },\n                { date: '2008-05-20', status: 'C' },\n                { date: '2008-04-20', status: 'C' },\n                { date: '2008-03-20', status: 'C' },\n                { date: '2008-02-19', status: 'C' },\n                { date: '2008-01-19', status: 'C' },\n                { date: '2007-12-19', status: 'C' },\n                { date: '2007-11-19', status: 'C' },\n                { date: '2007-10-20', status: 'C' },\n                { date: '2007-09-20', status: 'C' },\n                { date: '2007-08-20', status: 'C' },\n                { date: '2007-07-20', status: 'C' },\n                { date: '2007-06-20', status: 'C' },\n                { date: '2007-05-20', status: 'C' },\n                { date: '2007-04-20', status: 'C' },\n                { date: '2007-03-20', status: 'C' },\n                { date: '2007-02-19', status: 'C' },\n              ],\n            },\n            CreditLimit: 0,\n          },\n          Source: {\n            BorrowerKey: '',\n            Bureau: {\n              abbreviation: 'TransUnion',\n              description: 'TransUnion',\n              symbol: 'TUC',\n              rank: 1,\n            },\n            InquiryDate: '2015-06-09',\n            Reference: '0757326e-da32-48ea-99e',\n          },\n        },\n      },\n      {\n        accountTypeDescription: 'Revolving Account',\n        accountTypeSymbol: 'R',\n        accountTypeAbbreviation: 'Revolving',\n        Tradeline: {\n          subscriberCode: '01NZ8094',\n          highBalance: 200,\n          dateVerified: '2008-07-23',\n          dateReported: '2008-07-23',\n          dateOpened: '2002-07-01',\n          accountNumber: 585632851620,\n          dateAccountStatus: '2008-07-01',\n          currentBalance: 0,\n          creditorName: 'CB/STAGE',\n          position: 16,\n          bureau: 'TransUnion',\n          AccountCondition: {\n            abbreviation: 'Open',\n            description: 'Open',\n            symbol: 'O',\n            rank: 60,\n          },\n          AccountDesignator: {\n            abbreviation: 'Individual',\n            description: 'Individual',\n            symbol: 'I',\n            rank: 199,\n          },\n          DisputeFlag: {\n            abbreviation: 'Account not disputed',\n            description: 'Account not disputed',\n            symbol: 'F',\n            rank: 199,\n          },\n          IndustryCode: {\n            abbreviation: 'Department/Variety and Other Retail',\n            description: 'Department/Variety and Other Retail',\n            symbol: 'D',\n            rank: 199,\n          },\n          OpenClosed: {\n            abbreviation: 'Open',\n            description: 'Open',\n            symbol: 'O',\n            rank: 199,\n          },\n          PayStatus: {\n            abbreviation: 'Current',\n            description: 'Current',\n            symbol: 'C',\n            rank: 110,\n          },\n          VerificationIndicator: {\n            abbreviation: 'Account not disputed',\n            description: 'Account not disputed',\n            symbol: 'F',\n            rank: 199,\n          },\n          GrantedTrade: {\n            monthsReviewed: 4,\n            monthlyPayment: 0,\n            late90Count: 0,\n            late60Count: 0,\n            late30Count: 0,\n            dateLastPayment: '2008-07-01',\n            termMonths: 0,\n            collateral: '',\n            amountPastDue: 0,\n            worstPatStatusCount: 4,\n            AccountType: {\n              abbreviation: 'Charge account',\n              description: 'Charge account',\n              symbol: 'CH',\n              rank: 50,\n            },\n            CreditType: {\n              abbreviation: 'Revolving',\n              description: 'Revolving Account',\n              symbol: 'R',\n              rank: 50,\n            },\n            PaymentFrequency: {\n              abbreviation: '',\n              description: '',\n              symbol: '',\n              rank: 100000,\n            },\n            TermType: {\n              abbreviation: 'Provided',\n              description: 'Provided',\n              symbol: 'P',\n              rank: 199,\n            },\n            WorstPayStatus: {\n              abbreviation: 'Current',\n              description: 'Current',\n              symbol: 'C',\n              rank: 110,\n            },\n            PayStatusHistory: {\n              status: 'CCCC',\n              startDate: '2008-06-23',\n              MonthlyPayStatus: [\n                { date: '2008-06-23', status: 'C' },\n                { date: '2008-05-23', status: 'C' },\n                { date: '2008-04-23', status: 'C' },\n                { date: '2008-03-23', status: 'C' },\n                { date: '2008-02-22', status: '' },\n                { date: '2008-01-22', status: '' },\n                { date: '2007-12-22', status: '' },\n                { date: '2007-11-22', status: '' },\n                { date: '2007-10-23', status: '' },\n                { date: '2007-09-23', status: '' },\n                { date: '2007-08-23', status: '' },\n                { date: '2007-07-23', status: '' },\n                { date: '2007-06-23', status: '' },\n                { date: '2007-05-23', status: '' },\n                { date: '2007-04-23', status: '' },\n                { date: '2007-03-23', status: '' },\n                { date: '2007-02-22', status: '' },\n                { date: '2007-01-22', status: '' },\n                { date: '2006-12-22', status: '' },\n                { date: '2006-11-22', status: '' },\n                { date: '2006-10-23', status: '' },\n                { date: '2006-09-23', status: '' },\n                { date: '2006-08-23', status: '' },\n                { date: '2006-07-23', status: '' },\n              ],\n            },\n            CreditLimit: 0,\n          },\n          Source: {\n            BorrowerKey: '',\n            Bureau: {\n              abbreviation: 'TransUnion',\n              description: 'TransUnion',\n              symbol: 'TUC',\n              rank: 1,\n            },\n            InquiryDate: '2015-06-09',\n            Reference: '0757326e-da32-48ea-99e',\n          },\n        },\n      },\n      {\n        accountTypeDescription: 'Installment Account',\n        accountTypeSymbol: 'I',\n        accountTypeAbbreviation: 'Installment',\n        Tradeline: {\n          subscriberCode: '0654N1XG',\n          highBalance: 1190,\n          dateVerified: '2007-11-30',\n          dateReported: '2007-11-30',\n          dateOpened: '2006-09-26',\n          accountNumber: '9X3X6X5X1X0X3X3X',\n          dateAccountStatus: '2007-11-30',\n          currentBalance: 0,\n          creditorName: 'SPRINGLF FIN',\n          position: 17,\n          dateClosed: '2007-11-30',\n          bureau: 'TransUnion',\n          AccountCondition: {\n            abbreviation: 'Closed',\n            description: 'Closed',\n            symbol: 'C',\n            rank: 50,\n          },\n          AccountDesignator: {\n            abbreviation: 'Joint',\n            description: 'Joint',\n            symbol: 'J',\n            rank: 199,\n          },\n          DisputeFlag: {\n            abbreviation: 'Account not disputed',\n            description: 'Account not disputed',\n            symbol: 'F',\n            rank: 199,\n          },\n          IndustryCode: {\n            abbreviation: 'Finance/Personal',\n            description: 'Finance/Personal',\n            symbol: 'F',\n            rank: 199,\n          },\n          OpenClosed: {\n            abbreviation: 'Closed',\n            description: 'Closed',\n            symbol: 'C',\n            rank: 198,\n          },\n          PayStatus: {\n            abbreviation: 'Current',\n            description: 'Current',\n            symbol: 'C',\n            rank: 110,\n          },\n          VerificationIndicator: {\n            abbreviation: 'Account not disputed',\n            description: 'Account not disputed',\n            symbol: 'F',\n            rank: 199,\n          },\n          Remark: {\n            customRemark: '',\n            RemarkCode: {\n              abbreviation: 'Closed',\n              description: 'Closed',\n              symbol: 'T00CLO',\n              rank: 199,\n            },\n          },\n          GrantedTrade: {\n            monthsReviewed: 13,\n            monthlyPayment: 98,\n            late90Count: 0,\n            late60Count: 0,\n            late30Count: 0,\n            dateLastPayment: '2007-10-09',\n            termMonths: 12,\n            collateral: '',\n            amountPastDue: 0,\n            worstPatStatusCount: 13,\n            AccountType: {\n              abbreviation: 'Secured by household goods/collateral',\n              description: 'Secured by household goods/collateral',\n              symbol: 'SO',\n              rank: 50,\n            },\n            CreditType: {\n              abbreviation: 'Installment',\n              description: 'Installment Account',\n              symbol: 'I',\n              rank: 20,\n            },\n            PaymentFrequency: {\n              abbreviation: 'Monthly (every month)',\n              description: 'Monthly (every month)',\n              symbol: 'M',\n              rank: 199,\n            },\n            TermType: {\n              abbreviation: 'Provided',\n              description: 'Provided',\n              symbol: 'P',\n              rank: 199,\n            },\n            WorstPayStatus: {\n              abbreviation: 'Current',\n              description: 'Current',\n              symbol: 'C',\n              rank: 110,\n            },\n            PayStatusHistory: {\n              status: 'CCCCCCCCCCCCC',\n              startDate: '2007-10-30',\n              MonthlyPayStatus: [\n                { date: '2007-10-30', status: 'C' },\n                { date: '2007-09-30', status: 'C' },\n                { date: '2007-08-30', status: 'C' },\n                { date: '2007-07-30', status: 'C' },\n                { date: '2007-06-30', status: 'C' },\n                { date: '2007-05-30', status: 'C' },\n                { date: '2007-04-30', status: 'C' },\n                { date: '2007-03-30', status: 'C' },\n                { date: '2007-02-27', status: 'C' },\n                { date: '2007-01-27', status: 'C' },\n                { date: '2006-12-27', status: 'C' },\n                { date: '2006-11-27', status: 'C' },\n                { date: '2006-10-28', status: 'C' },\n                { date: '2006-09-28', status: '' },\n                { date: '2006-08-28', status: '' },\n                { date: '2006-07-28', status: '' },\n                { date: '2006-06-28', status: '' },\n                { date: '2006-05-28', status: '' },\n                { date: '2006-04-28', status: '' },\n                { date: '2006-03-27', status: '' },\n                { date: '2006-02-27', status: '' },\n                { date: '2006-01-27', status: '' },\n                { date: '2005-12-27', status: '' },\n                { date: '2005-11-27', status: '' },\n              ],\n            },\n            CreditLimit: 0,\n          },\n          Source: {\n            BorrowerKey: '',\n            Bureau: {\n              abbreviation: 'TransUnion',\n              description: 'TransUnion',\n              symbol: 'TUC',\n              rank: 1,\n            },\n            InquiryDate: '2015-06-09',\n            Reference: '0757326e-da32-48ea-99e',\n          },\n        },\n      },\n      {\n        accountTypeDescription: 'Installment Account',\n        accountTypeSymbol: 'I',\n        accountTypeAbbreviation: 'Installment',\n        Tradeline: {\n          subscriberCode: '01ZHV008',\n          highBalance: 7000,\n          dateVerified: '2007-03-03',\n          dateReported: '2007-03-03',\n          dateOpened: '2005-08-27',\n          accountNumber: '5X5X3X',\n          dateAccountStatus: '2007-03-03',\n          currentBalance: 0,\n          creditorName: 'ARVEST BANK',\n          position: 18,\n          dateClosed: '2007-03-03',\n          bureau: 'TransUnion',\n          AccountCondition: {\n            abbreviation: 'Closed',\n            description: 'Closed',\n            symbol: 'C',\n            rank: 50,\n          },\n          AccountDesignator: {\n            abbreviation: 'Joint',\n            description: 'Joint',\n            symbol: 'J',\n            rank: 199,\n          },\n          DisputeFlag: {\n            abbreviation: 'Account not disputed',\n            description: 'Account not disputed',\n            symbol: 'F',\n            rank: 199,\n          },\n          IndustryCode: {\n            abbreviation: 'Bank',\n            description: 'Bank',\n            symbol: 'B',\n            rank: 199,\n          },\n          OpenClosed: {\n            abbreviation: 'Closed',\n            description: 'Closed',\n            symbol: 'C',\n            rank: 198,\n          },\n          PayStatus: {\n            abbreviation: 'Current',\n            description: 'Current',\n            symbol: 'C',\n            rank: 110,\n          },\n          VerificationIndicator: {\n            abbreviation: 'Account not disputed',\n            description: 'Account not disputed',\n            symbol: 'F',\n            rank: 199,\n          },\n          Remark: {\n            customRemark: '',\n            RemarkCode: {\n              abbreviation: 'Closed',\n              description: 'Closed',\n              symbol: 'T00CLO',\n              rank: 199,\n            },\n          },\n          GrantedTrade: {\n            monthsReviewed: 18,\n            monthlyPayment: 0,\n            late90Count: 0,\n            late60Count: 0,\n            late30Count: 0,\n            dateLastPayment: '2007-02-16',\n            termMonths: 19,\n            collateral: '',\n            amountPastDue: 0,\n            worstPatStatusCount: 18,\n            AccountType: {\n              abbreviation: '',\n              description: '',\n              symbol: '',\n              rank: 100000,\n            },\n            CreditType: {\n              abbreviation: 'Installment',\n              description: 'Installment Account',\n              symbol: 'I',\n              rank: 20,\n            },\n            PaymentFrequency: {\n              abbreviation: 'Monthly (every month)',\n              description: 'Monthly (every month)',\n              symbol: 'M',\n              rank: 199,\n            },\n            TermType: {\n              abbreviation: 'Provided',\n              description: 'Provided',\n              symbol: 'P',\n              rank: 199,\n            },\n            WorstPayStatus: {\n              abbreviation: 'Unk',\n              description: 'Unknown',\n              symbol: 'U',\n              rank: 10000,\n            },\n            PayStatusHistory: '',\n            CreditLimit: 0,\n          },\n          Source: {\n            BorrowerKey: '',\n            Bureau: {\n              abbreviation: 'TransUnion',\n              description: 'TransUnion',\n              symbol: 'TUC',\n              rank: 1,\n            },\n            InquiryDate: '2015-06-09',\n            Reference: '0757326e-da32-48ea-99e',\n          },\n        },\n      },\n      {\n        accountTypeDescription: 'Revolving Account',\n        accountTypeSymbol: 'R',\n        accountTypeAbbreviation: 'Revolving',\n        Tradeline: {\n          subscriberCode: '01GYY001',\n          highBalance: 200,\n          dateVerified: '2006-10-12',\n          dateReported: '2006-10-12',\n          dateOpened: '2002-07-01',\n          accountNumber: 4,\n          dateAccountStatus: '2006-10-11',\n          currentBalance: 0,\n          creditorName: 'GNB/STAGE',\n          position: 19,\n          dateClosed: '2006-10-11',\n          bureau: 'TransUnion',\n          AccountCondition: {\n            abbreviation: 'Xfer',\n            description: 'Transferred',\n            symbol: 'T',\n            rank: 30,\n          },\n          AccountDesignator: {\n            abbreviation: 'Individual',\n            description: 'Individual',\n            symbol: 'I',\n            rank: 199,\n          },\n          DisputeFlag: {\n            abbreviation: 'Account not disputed',\n            description: 'Account not disputed',\n            symbol: 'F',\n            rank: 199,\n          },\n          IndustryCode: {\n            abbreviation: 'Department/Variety and Other Retail',\n            description: 'Department/Variety and Other Retail',\n            symbol: 'D',\n            rank: 199,\n          },\n          OpenClosed: {\n            abbreviation: 'Closed',\n            description: 'Closed',\n            symbol: 'C',\n            rank: 198,\n          },\n          PayStatus: {\n            abbreviation: 'Current',\n            description: 'Current',\n            symbol: 'C',\n            rank: 110,\n          },\n          VerificationIndicator: {\n            abbreviation: 'Account not disputed',\n            description: 'Account not disputed',\n            symbol: 'F',\n            rank: 199,\n          },\n          Remark: {\n            customRemark: '',\n            RemarkCode: {\n              abbreviation: 'Purchased by another lender',\n              description: 'Purchased by another lender',\n              symbol: 'T00PAL',\n              rank: 199,\n            },\n          },\n          GrantedTrade: {\n            monthsReviewed: 13,\n            monthlyPayment: 0,\n            late90Count: 0,\n            late60Count: 0,\n            late30Count: 0,\n            dateLastPayment: '2005-12-06',\n            termMonths: 0,\n            collateral: '',\n            amountPastDue: 0,\n            worstPatStatusCount: 13,\n            AccountType: {\n              abbreviation: 'Charge account',\n              description: 'Charge account',\n              symbol: 'CH',\n              rank: 50,\n            },\n            CreditType: {\n              abbreviation: 'Revolving',\n              description: 'Revolving Account',\n              symbol: 'R',\n              rank: 50,\n            },\n            PaymentFrequency: {\n              abbreviation: '',\n              description: '',\n              symbol: '',\n              rank: 100000,\n            },\n            TermType: {\n              abbreviation: 'Provided',\n              description: 'Provided',\n              symbol: 'P',\n              rank: 199,\n            },\n            WorstPayStatus: {\n              abbreviation: 'Current',\n              description: 'Current',\n              symbol: 'C',\n              rank: 110,\n            },\n            PayStatusHistory: {\n              status: 'UUUUUUUUUCCCC',\n              startDate: '2006-09-12',\n              MonthlyPayStatus: [\n                { date: '2006-09-12', status: 'U' },\n                { date: '2006-08-12', status: 'U' },\n                { date: '2006-07-12', status: 'U' },\n                { date: '2006-06-12', status: 'U' },\n                { date: '2006-05-12', status: 'U' },\n                { date: '2006-04-12', status: 'U' },\n                { date: '2006-03-11', status: 'U' },\n                { date: '2006-02-11', status: 'U' },\n                { date: '2006-01-11', status: 'U' },\n                { date: '2005-12-11', status: 'C' },\n                { date: '2005-11-11', status: 'C' },\n                { date: '2005-10-12', status: 'C' },\n                { date: '2005-09-12', status: 'C' },\n                { date: '2005-08-12', status: '' },\n                { date: '2005-07-12', status: '' },\n                { date: '2005-06-12', status: '' },\n                { date: '2005-05-12', status: '' },\n                { date: '2005-04-12', status: '' },\n                { date: '2005-03-11', status: '' },\n                { date: '2005-02-11', status: '' },\n                { date: '2005-01-11', status: '' },\n                { date: '2004-12-11', status: '' },\n                { date: '2004-11-11', status: '' },\n                { date: '2004-10-12', status: '' },\n              ],\n            },\n            CreditLimit: 400,\n          },\n          Source: {\n            BorrowerKey: '',\n            Bureau: {\n              abbreviation: 'TransUnion',\n              description: 'TransUnion',\n              symbol: 'TUC',\n              rank: 1,\n            },\n            InquiryDate: '2015-06-09',\n            Reference: '0757326e-da32-48ea-99e',\n          },\n        },\n      },\n    ],\n    InquiryPartition: [\n      {\n        Inquiry: {\n          inquiryDate: '2014-05-18',\n          subscriberName: 'CREDCO',\n          subscriberNumber: 728002,\n          bureau: 'TransUnion',\n          inquiryType: 'A',\n          IndustryCode: {\n            abbreviation: 'Finance/Personal',\n            description: 'Finance/Personal',\n            symbol: 'F',\n            rank: 199,\n          },\n          Source: {\n            BorrowerKey: '',\n            Bureau: {\n              abbreviation: 'TransUnion',\n              description: 'TransUnion',\n              symbol: 'TUC',\n              rank: 1,\n            },\n            InquiryDate: '2015-06-09',\n            Reference: '0757326e-da32-48ea-99e',\n          },\n        },\n      },\n      {\n        Inquiry: {\n          inquiryDate: '2013-10-05',\n          subscriberName: 'DATAFACTS',\n          subscriberNumber: 180844,\n          bureau: 'TransUnion',\n          inquiryType: 'I',\n          IndustryCode: {\n            abbreviation: 'Miscellaneous',\n            description: 'Miscellaneous',\n            symbol: 'Z',\n            rank: 199,\n          },\n          Source: {\n            BorrowerKey: '',\n            Bureau: {\n              abbreviation: 'TransUnion',\n              description: 'TransUnion',\n              symbol: 'TUC',\n              rank: 1,\n            },\n            InquiryDate: '2015-06-09',\n            Reference: '0757326e-da32-48ea-99e',\n          },\n        },\n      },\n    ],\n    Summary: {\n      TradelineSummary: {\n        TransUnion: {\n          TotalAccounts: 20,\n          OpenAccounts: 4,\n          CloseAccounts: 16,\n          DelinquentAccounts: 0,\n          DerogatoryAccounts: 3,\n          TotalBalances: 144903,\n          TotalMonthlyPayments: 1846,\n        },\n      },\n      InquirySummary: { TransUnion: { NumberInLast2Years: 2 } },\n      PublicRecordSummary: { TransUnion: { NumberOfRecords: 0 } },\n    },\n    Sources: {\n      Source: {\n        Bureau: {\n          abbreviation: 'TransUnion',\n          description: 'TransUnion',\n          symbol: 'TUC',\n          rank: 1,\n        },\n        InquiryDate: '2015-06-09',\n        OriginalData:\n          '',\n      },\n    },\n    SafetyCheckPassed: true,\n  },\n}"
            },
            {
                "name": "mockParseVantageScore",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/mocks/parsed-vantage-score-response.ts",
                "type": "object",
                "defaultValue": "{\n  CreditScoreType: {\n    riskScore: 527,\n    scoreName: 'VantageScore3',\n    populationRank: 16,\n    CreditScoreFactor: [\n      {\n        bureauCode: 34,\n        FactorType: 'Negative',\n        Factor: { abbreviation: '', description: '', symbol: 34, rank: 100000 },\n        FactorText: [\n          'explain: Bankcard accounts include credit cards and\\ncharge cards from a bank and are frequently revolving accounts.\\nRevolving accounts allow you to carry a balance and your monthly payment\\nwill vary, based on the amount of your balance. The total combined\\namount you owe on all of your bankcards and revolving accounts is high,\\na sign of increased risk. People who carry balances on multiple\\nbankcards or other revolving accounts have reduced available credit to\\nuse if needed, creating a greater chance of becoming\\noverextended.',\n          'factor: Total of\\nall balances on bankcard or revolving accounts is too\\nhigh',\n          'cando: Pay down the\\nbalances on your accounts. Ideally, the balance on any revolving account\\nshould be 30% or less of the total credit limit on that\\naccount.',\n        ],\n      },\n      {\n        bureauCode: 65,\n        FactorType: 'Negative',\n        Factor: { abbreviation: '', description: '', symbol: 65, rank: 100000 },\n        FactorText: [\n          'explain: The VantageScore credit score model relies on\\ninformation in your credit files at the three national credit reporting\\ncompanies (Equifax, Experian and TransUnion) to generate your score.\\nYour credit file does not contain enough credit behavior information\\nabout your first mortgage accounts. A mix of different types of open and\\nactive credit accounts, including first mortgage loans, can have a\\npositive impact on your credit score.',\n          'factor: Lack of sufficient relevant first mortgage\\naccount information',\n          'cando:\\nMaintaining open and active credit accounts in good standing can help\\nimprove your credit score.',\n        ],\n      },\n      {\n        bureauCode: 44,\n        FactorType: 'Negative',\n        Factor: { abbreviation: '', description: '', symbol: 44, rank: 100000 },\n        FactorText: [\n          'explain: Bankcard accounts include credit cards and\\ncharge cards from a bank and are frequently revolving accounts.\\nRevolving accounts allow you to carry a balance and your monthly payment\\nwill vary, based on the amount of your balance. You have had too many\\nbankcard or revolving accounts with payments that are at least 30 days\\nlate and/or on which a lender has reported a derogatory status. People\\nwith late payments are at risk of being overextended, putting existing\\ncredit with lenders at risk.',\n          'factor: Too many bankcard or revolving accounts with\\ndelinquent or derogatory status',\n          'cando: Paying bills on time every month is important\\nto maintaining a good credit score. If you remain behind with any\\npayments, bring them current as soon as possible, and then make future\\npayments on time. Over time this will have a positive impact on your\\nscore.',\n        ],\n      },\n      {\n        bureauCode: 7,\n        FactorType: 'Negative',\n        Factor: { abbreviation: '', description: '', symbol: 7, rank: 100000 },\n        FactorText: [\n          'explain: You have had too many accounts with payments\\nthat are at least 30 days late and/or on which a lender has reported a\\nderogatory status. Late payments are a proven indicator of increased\\nrisk. People with late payments are at risk of being overextended,\\nputting existing credit with lenders at risk.',\n          'factor: You have too many delinquent or derogatory\\naccounts',\n          'cando: Paying bills\\non time every month is important to maintaining a good credit score. If\\nyou remain behind with any payments, bring them current as soon as\\npossible, and then make future payments on time. Over time, this will\\nhave a positive impact on your score.',\n        ],\n      },\n      {\n        bureauCode: 'P32',\n        FactorType: 'Positive',\n        Factor: {\n          abbreviation: '',\n          description: '',\n          symbol: 'P32',\n          rank: 100000,\n        },\n        FactorText: [\n          'explain: Bankcard accounts include credit cards and\\ncharge cards from a bank and are frequently revolving accounts.\\nRevolving accounts allow you to carry a balance and your monthly payment\\nwill vary, based on the amount of your balance. Your balances on\\nbankcard or revolving accounts are not too high compared to the credit\\nlimit amounts, which causes your score to\\nimprove.',\n          'factor: Balances on\\nbankcard or revolving accts not too high compared to\\nlimits',\n          'cando: Keep low\\nbalances on your accounts; this will benefit your\\nscore.',\n        ],\n      },\n      {\n        bureauCode: 'P05',\n        FactorType: 'Positive',\n        Factor: {\n          abbreviation: '',\n          description: '',\n          symbol: 'P05',\n          rank: 100000,\n        },\n        FactorText: [\n          'explain: A delinquency is a payment that was made 30\\nor more days late. You have had no or very few delinquencies recently\\nwhich has caused your score to improve.',\n          'factor: There are no or only a few recent\\ndelinquencies on your accounts',\n          'cando: Keep paying bills on time every month since it\\nis important for maintaining a good credit score. If you remain behind\\nwith any payments, bring them current as soon as possible, and then make\\nfuture payments on time. Over time, this will have a positive impact on\\nyour score.',\n        ],\n      },\n      {\n        bureauCode: 'P40',\n        FactorType: 'Positive',\n        Factor: {\n          abbreviation: '',\n          description: '',\n          symbol: 'P40',\n          rank: 100000,\n        },\n        FactorText: [\n          'explain: Bankcard accounts include credit cards and\\ncharge cards from a bank and are frequently revolving accounts.\\nRevolving accounts allow you to carry a balance and your monthly payment\\nwill vary, based on the amount of your balance. Your oldest bankcard or\\nrevolving account was not opened too recently. As a result, your history\\nof credit management is enough to demonstrate responsible behavior which\\nhas improved your score.',\n          'factor: Date your oldest bankcard or revolving account\\nopened is not too recent',\n          \"cando: Don't open more accounts than you actually\\nneed. Research shows that new accounts indicate greater risk. Your score\\nwill benefit as your accounts get older.\",\n        ],\n      },\n      {\n        bureauCode: 'P63',\n        FactorType: 'Positive',\n        Factor: {\n          abbreviation: '',\n          description: '',\n          symbol: 'P63',\n          rank: 100000,\n        },\n        FactorText: [\n          'explain: A real estate loan can be a first mortgage, a\\nhome equity loan, or home equity line of credit. The VantageScore credit\\nscore model relies on information in your credit files at the three\\nnational credit reporting companies (Equifax, Experian and TransUnion)\\nto generate your score. A mix of different types of open and active\\ncredit accounts, including real estate accounts, can have a positive\\nimpact on your score.',\n          'factor:\\nLack of sufficient relevant real estate account\\ninformation',\n          'cando: Maintaining\\nopen and active credit accounts in good standing can help improve your\\ncredit score.',\n        ],\n      },\n    ],\n    CreditScoreModel: {\n      abbreviation: '',\n      description: '',\n      symbol: '00W40',\n      rank: 100000,\n    },\n    NoScoreReason: {\n      abbreviation: '',\n      description: '',\n      symbol: '',\n      rank: 100000,\n    },\n    Source: {\n      BorrowerKey: '',\n      Bureau: {\n        abbreviation: 'TransUnion',\n        description: 'TransUnion',\n        symbol: 'TUC',\n        rank: 1,\n      },\n      InquiryDate: '2015-06-09',\n      Reference: 'ND0711_v7SOreport',\n    },\n  },\n}"
            },
            {
                "name": "monthMap",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/services/transunion/transunion.service.ts",
                "type": "Record<string, any>",
                "defaultValue": "{\n  jan: '01',\n  feb: '02',\n  mar: '03',\n  apr: '04',\n  may: '05',\n  jun: '06',\n  jul: '07',\n  aug: '08',\n  sep: '09',\n  oct: '10',\n  nov: '11',\n  dec: '12',\n}"
            },
            {
                "name": "months",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/forms/outline-namedob-form/outline-namedob-form.component.ts",
                "type": "string[]",
                "defaultValue": "[\n  'Jan',\n  'Feb',\n  'Mar',\n  'Apr',\n  'May',\n  'Jun',\n  'Jul',\n  'Aug',\n  'Sep',\n  'Oct',\n  'Nov',\n  'Dec',\n]"
            },
            {
                "name": "months",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/forms/select-dob-form/select-dob-form.component.ts",
                "type": "string[]",
                "defaultValue": "[\n  'Jan',\n  'Feb',\n  'Mar',\n  'Apr',\n  'May',\n  'Jun',\n  'Jul',\n  'Aug',\n  'Sep',\n  'Oct',\n  'Nov',\n  'Dec',\n]"
            },
            {
                "name": "months",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/tradelines/tradeline-payment-history/tradeline-payment-history.component.ts",
                "type": "[]",
                "defaultValue": "['j', 'f', 'm', 'a', 'm', 'j', 'j', 'a', 's', 'o', 'n', 'd']"
            },
            {
                "name": "name",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/kyc-welcome/kyc-welcome/kyc-welcome.component.ts",
                "type": "Record<string, any>",
                "defaultValue": "{\n  first: true,\n  middle: true,\n  last: true,\n}"
            },
            {
                "name": "navs",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/signin-redirect/signin-redirect.component.ts",
                "type": "Record<string, any>",
                "defaultValue": "{}"
            },
            {
                "name": "NEGATIVE_PAY_STATUS_CODES",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/data/pay-status-codes.ts",
                "type": "Record<string, any>",
                "defaultValue": "{\n  '1': `Late 30 Days`,\n  '2': `Late 60 Days`,\n  '3': `Late 90 Days`,\n  '4': `Late 120 Days`,\n  '8R': `Repossesion`,\n  '9': `Collection Chargeoff`,\n}"
            },
            {
                "name": "NEGATIVE_REASON_CODES",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/data/negative-reason-codes.ts",
                "type": "Record<string, any>",
                "defaultValue": "{\n  R1: { factor: ``, explain: ``, cando: `` },\n  R2: { factor: ``, explain: ``, cando: `` },\n  R3: { factor: ``, explain: ``, cando: `` },\n  R4: {\n    factor: `The balances on your accounts are too high compared to loan amounts`,\n    explain: `The balances on your accounts are high compared to the original loan amounts, lowering your score.`,\n    cando: `Paying down the balances on your accounts will benefit your score.  `,\n  },\n  R5: {\n    factor: `Too many of the delinquencies on your accounts are recent`,\n    explain: `A delinquency is a payment that was made 30 or more days late.  Too many late payments occurred recently on some of your accounts.  Late payments are a proven indicator of increased risk.  People with late payments are at risk of being overextended, putting existing credit with lenders at risk.`,\n    cando: `Paying bills on time every month is important to maintaining a good credit score.  If you remain behind with any payments, bring them current as soon as possible, and then make future payments on time. Over time, this will have a positive impact on your score.`,\n  },\n  R6: {\n    factor: `You have too many accounts that were opened recently`,\n    explain: `Because too many of your accounts were opened recently, the history on those new accounts is not long enough to provide sufficient payment and account history to demonstrate responsible behavior on those accounts.  In addition, having multiple accounts that are relatively new is seen as a higher risk because of the possibility of becoming overextended, which can then lead to late payments or defaulting on the account.`,\n    cando: `Use your existing credit responsibly and make your payments on time. Your credit score will benefit as you make payments on time and manage the accounts in a responsible fashion. Manage your credit wisely by planning ahead for your credit needs and avoid applying for more credit than you need.`,\n  },\n  R7: {\n    factor: `You have too many delinquent or derogatory accounts`,\n    explain: `You have had too many accounts with payments that are at least 30 days late and/or on which a lender has reported a derogatory status.  Late payments are a proven indicator of increased risk.  People with late payments are at risk of being overextended, putting existing credit with lenders at risk.`,\n    cando: `Paying bills on time every month is important to maintaining a good credit score.  If you remain behind with any payments, bring them current as soon as possible, and then make future payments on time. Over time, this will have a positive impact on your score.`,\n  },\n  R8: {\n    factor: `You have either very few loans or too many loans with recent delinquencies`,\n    explain: `You have had too many accounts with late payments or do not have enough loans to provide sufficient information about your credit behaviors. Late payments are a proven indicator of increased risk.  People with late payments are at risk of being overextended, putting existing credit with lenders at risk.`,\n    cando: `Paying bills on time every month is important to maintaining a good credit score.  If you remain behind with any payments, bring them current as soon as possible, and then make future payments on time. Over time, this will have a positive impact on your score.`,\n  },\n  R9: {\n    factor: `The worst payment status on your accounts is delinquent or derogatory`,\n    explain: `Your credit file is showing an account with a payment that was at least 30 days late and/or on which a lender has reported a derogatory status.  Late payments are a proven indicator of increased risk.  People with late payments are at risk of being overextended, putting existing credit with lenders at risk.`,\n    cando: `Paying bills on time every month is important to maintaining a good credit score.  If you remain behind with any payments, bring them current as soon as possible, and then make future payments on time. Over time, this will have a positive impact on your score.`,\n  },\n  R10: {\n    factor: `You have either very few loans or too many loans with delinquencies`,\n    explain: `You have had too many accounts with late payments or do not have enough loans to provide sufficient information about your credit behaviors. Late payments are a proven indicator of increased risk.  People with late payments are at risk of being overextended, putting existing credit with lenders at risk.`,\n    cando: `Paying bills on time every month is important to maintaining a good credit score.  If you remain behind with any payments, bring them current as soon as possible, and then make future payments on time. Over time, this will have a positive impact on your score.`,\n  },\n  R11: {\n    factor: `The total of your delinquent or derogatory account balances is too high`,\n    explain: `The total of the balances is high on your accounts with late payments or on which a lender has reported the account derogatory. Late payments are a proven indicator of risk.  When credit line balances approach credit limits, risk is further increased because you don't have much credit available should it be needed, creating a greater chance of becoming overextended.`,\n    cando: `Paying bills on time every month is important to maintaining a good credit score.  If you remain behind with any payments, bring them current as soon as possible, and then make future payments on time.  Whenever possible, pay down balances on your accounts.  Over time these actions will benefit your score.`,\n  },\n  R12: {\n    factor: `The date that you opened your oldest account is too recent`,\n    explain: `Your oldest account is still too recent.  A credit file containing older accounts will have a positive impact on your credit score because it demonstrates that you are experienced managing credit.  `,\n    cando: `Don't open more accounts than you actually need.  Research shows that new accounts indicate greater risk.  Your score will benefit as your accounts get older.`,\n  },\n  R13: {\n    factor: `Your most recently opened account is too new`,\n    explain: `The account that you opened most recently is still too new.  A credit file containing older accounts will have a positive impact on your credit score because it demonstrates that you are experienced managing credit.  `,\n    cando: `Don't open more accounts than you actually need.  Research shows that new accounts indicate greater risk, especially if overall account history isn't long.  Your score will benefit as your accounts get older.`,\n  },\n  R14: {\n    factor: `Lack of sufficient credit history`,\n    explain: `Your credit file does not contain enough information about your use of credit.  A credit file with older accounts and/or more accounts reflects more experience with handling credit and can have a positive impact on your credit score.`,\n    cando: `Maintaining open and active credit accounts in good standing can help improve your credit score. `,\n  },\n  R15: {\n    factor: `Newest delinquent or derogatory payment status on your accounts is too recent`,\n    explain: `You have an account that had a late payment or on which a lender has reported a derogatory status.  Your credit file shows that this event occurred too recently.  Late payments are a proven indicator of increased risk.  People with late payments are at risk of being overextended, putting existing credit with lenders at risk.`,\n    cando: `Paying bills on time every month is important to maintaining a good credit score.  If you remain behind with any payments, bring them current as soon as possible, and then make future payments on time.  `,\n  },\n  R16: {\n    factor: `The total of all balances on your open accounts is too high`,\n    explain: `The total that you owe on all your accounts is high.  Maintaining high balances has proven to be risky behavior because you don't have much credit available should it be needed, creating a greater chance of becoming overextended.  People with the highest credit scores keep their account balances low.`,\n    cando: `Whenever possible, pay down balances on your accounts.  Over time, this will have a positive impact on your score.`,\n  },\n  R17: {\n    factor: `Balances on previously delinquent accounts are too high compared to loan amts`,\n    explain: `You've been late on at least one payment in the past, and the balances on the accounts that had late payments are high compared to the original loan amount or the credit limit on a revolving account.  Late payments are a proven indicator of risk.  When balances are close to the original loan amount or approach credit limits, risk is further increased because you don't have much credit available should it be needed, creating a greater chance of becoming overextended.  People with the best scores have no late payments and keep their balances low.`,\n    cando: `Paying bills on time every month is important to maintaining a good credit score.  If you remain behind with any payments, bring them current as soon as possible, and then make future payments on time.  Whenever possible, pay down balances on your accounts.  Over time these actions will have a positive impact on your score.`,\n  },\n  R18: {\n    factor: `Total of balances on accounts never late is too high compared to loan amounts`,\n    explain: `You have some accounts in your credit file with balances that are high compared to the original loan amount or the limit on a revolving account.  The good news is that you've never been late on these accounts.  Maintaining high balances has proven to be risky behavior because you don't have much credit available should it be needed, creating a greater chance of becoming overextended.  People with the highest credit scores keep their account balances low.`,\n    cando: `Whenever possible, pay down balances on your accounts.  Over time, this will have a positive impact on your score.`,\n  },\n  R21: {\n    factor: `No open accounts in your credit file`,\n    explain: `The VantageScore credit score model relies on information in your credit files at the three national credit reporting companies (Equifax, Experian and TransUnion) to generate your score.  Because you have no open accounts, your credit file does not contain enough information about your use of credit.  A mix of different types of open and active credit accounts can have a positive impact on your credit score.`,\n    cando: `Maintaining open and active credit accounts in good standing can help improve your credit score. `,\n  },\n  R22: {\n    factor: `No recently reported account information`,\n    explain: `The VantageScore credit score model relies on information in your credit files at the three national credit reporting companies (Equifax, Experian and TransUnion) to generate your score.  Because you have no accounts where a lender has reported recent activity, your credit file does not contain enough information about your use of credit.  A mix of different types of open and active credit accounts with can have a positive impact on your credit score.`,\n    cando: `Maintaining open and active credit accounts in good standing can help improve your credit score. `,\n  },\n  R23: {\n    factor: `Lack of sufficient relevant account information`,\n    explain: `The VantageScore credit score model relies on information in your credit files at the three national credit reporting companies (Equifax, Experian and TransUnion) to generate your score.  Your credit file does not have enough credit behavior information about your loans.  A mix of different types of open and active credit accounts can have a positive impact on your credit score.`,\n    cando: `Maintaining open and active credit accounts in good standing can help improve your credit score. `,\n  },\n  R29: {\n    factor: `Too many of your open bankcard or revolving accounts have a balance`,\n    explain: `Bankcard accounts include credit cards and charge cards from a bank and are frequently revolving accounts.  Revolving accounts allow you to carry a balance and your monthly payment will vary, based on the amount of your balance.  Carrying a balance on too many bankcards and revolving accounts is an indicator of increased risk.  People who carry balances on multiple bankcards or revolving accounts have reduced available credit to use if needed, creating a greater chance of becoming overextended.`,\n    cando: `Pay down your existing balances, and then pay your balance in full each month as often as possible.`,\n  },\n  R30: {\n    factor: `Too few of your bankcard or other revolving accounts have high limits`,\n    explain: `Bankcard accounts include credit cards and charge cards from a bank and are frequently revolving accounts.  Revolving accounts allow you to carry a balance and your monthly payment will vary, based on the amount of your balance.  Having too few accounts with high credit limits is an indicator that you lack available credit.  Having higher limits gives you access to credit without seeking new loans or becoming overextended _ which are triggers for higher risk.`,\n    cando: `Use credit responsibly and always make payments on time with your existing accounts.  After a period of successfully managing your accounts, you can seek increases to your credit limit.  `,\n  },\n  R31: {\n    factor: `Too many bankcard or other revolving accounts were opened recently`,\n    explain: `Bankcard accounts include credit cards and charge cards from a bank and are frequently revolving accounts.  Revolving accounts allow you to carry a balance and your monthly payment will vary, based on the amount of your balance.  Opening multiple bankcards or other revolving accounts in a relatively short period of time is a proven indicator of increased risk because the history on those new accounts is not long enough to provide sufficient payment and account information to demonstrate responsible behavior on those accounts.  In addition, having multiple accounts that are relatively new is seen as a higher risk because of the possibility of becoming overextended, which can then lead to late payments or defaulting on the account.`,\n    cando: `Use your existing credit responsibly and make your payments on time. Your credit score will benefit as you make payments on time and manage the accounts in a responsible fashion. Manage your credit wisely by planning ahead for your credit needs so you can avoid applying for more credit than you need.`,\n  },\n  R32: {\n    factor: `Balances on bankcard or revolving accounts too high compared to credit limits`,\n    explain: `Bankcard accounts include credit cards and charge cards from a bank and are frequently revolving accounts.  Revolving accounts allow you to carry a balance and your monthly payment will vary, based on the amount of your balance.  You have bankcard or revolving accounts in your credit file with balances that are high compared to the credit limit on the account, which is a proven indicator of increased risk.`,\n    cando: `Pay down balances on your accounts and keep them below 30% of the total credit limit on that account.  Over time this will have a positive impact on your score.`,\n  },\n  R33: {\n    factor: `Your worst bankcard or revolving account status is delinquent or derogatory`,\n    explain: `Bankcard accounts include credit cards and charge cards from a bank and are frequently revolving accounts.  Revolving accounts allow you to carry a balance and your monthly payment will vary, based on the amount of your balance.  Your credit file is showing a bankcard or revolving account with a payment that was at least 30 days late and/or an account on which a lender has reported a derogatory status.  Late payments are a proven indicator of increased risk.  People with late payments are at risk of being overextended, putting existing credit with lenders at risk.`,\n    cando: `Paying bills on time every month is important to maintaining a good credit score.  If you remain behind with any payments, bring them current as soon as possible, and then make future payments on time.  Over time, this will have a positive impact on your score.`,\n  },\n  R34: {\n    factor: `Total of all balances on bankcard or revolving accounts is too high`,\n    explain: `Bankcard accounts include credit cards and charge cards from a bank and are frequently revolving accounts.  Revolving accounts allow you to carry a balance and your monthly payment will vary, based on the amount of your balance.  The total combined amount you owe on all of your bankcards and revolving accounts is high, a sign of increased risk. People who carry balances on multiple bankcards or other revolving accounts have reduced available credit to use if needed, creating a greater chance of becoming overextended.`,\n    cando: `Pay down the balances on your accounts. Ideally, the balance on any revolving account should be 30% or less of the total credit limit on that account.`,\n  },\n  R35: {\n    factor: `Your highest bankcard or revolving account balance is too high`,\n    explain: `Bankcard accounts include credit cards and charge cards from a bank and are frequently revolving accounts.  Revolving accounts allow you to carry a balance and your monthly payment will vary, based on the amount of your balance.  You have a bankcard or revolving account in your credit file with a high balance, a sign of increased risk. People who carry balances on bankcards or other revolving accounts have reduced available credit to use if needed, creating a greater chance of becoming overextended.`,\n    cando: `Pay down the balances on your accounts. Ideally, the balance on any revolving account should be 30% or less of the total credit limit on that account.`,\n  },\n  R36: {\n    factor: `Your largest credit limit on open bankcard or revolving accounts is too low`,\n    explain: `Bankcard accounts include credit cards and charge cards from a bank and are frequently revolving accounts.  Revolving accounts allow you to carry a balance and your monthly payment will vary, based on the amount of your balance.  The largest credit limit among all the open bankcard or revolving accounts in your credit file is low.  Having higher limits gives you access to credit without seeking new loans or becoming overextended _ which are triggers for higher risk.`,\n    cando: `Use credit responsibly and always make payments on time with your existing accounts.  After a period of successfully managing your accounts, you can seek increases to your credit limit.  `,\n  },\n  R39: {\n    factor: `Available credit on your open bankcard or revolving accounts is too low`,\n    explain: `Bankcard accounts include credit cards and charge cards from a bank and are frequently revolving accounts.  Revolving accounts allow you to carry a balance and your monthly payment will vary, based on the amount of your balance.  The amount of credit you have available to use on your open bankcards or revolving accounts is low.  Having higher limits gives you access to credit without seeking new loans or becoming overextended _ which are triggers for higher risk.`,\n    cando: `Use credit responsibly and always make payments on time with your existing accounts.  After a period of successfully managing your accounts, you can seek increases to your credit limit.  `,\n  },\n  R40: {\n    factor: `The date you opened your oldest bankcard or revolving account is too recent`,\n    explain: `Bankcard accounts include credit cards and charge cards from a bank and are frequently revolving accounts.  Revolving accounts allow you to carry a balance and your monthly payment will vary, based on the amount of your balance.  Your oldest bankcard or revolving account is still too new.  A credit file containing older accounts will have a positive impact on your credit score because it demonstrates that you are experienced managing credit.`,\n    cando: `Don't open more accounts than you actually need.  Research shows that new accounts indicate greater risk.  Your score will benefit as your accounts get older.`,\n  },\n  R42: {\n    factor: `The date you opened your newest bankcard or revolving account is too recent`,\n    explain: `Bankcard accounts include credit cards and charge cards from a bank and are frequently revolving accounts.  Revolving accounts allow you to carry a balance and your monthly payment will vary, based on the amount of your balance.  The bankcard or revolving account that you opened most recently is still too new.  A credit file containing older accounts will have a positive impact on your credit score because it demonstrates that you are experienced managing credit.`,\n    cando: `Don't open more accounts than you actually need.  Research shows that new accounts indicate greater risk, especially if overall account history isn't long.  Your score will benefit as your accounts get older.`,\n  },\n  R43: {\n    factor: `Lack of sufficient credit history on bankcard or revolving accounts`,\n    explain: `Bankcard accounts include credit cards and charge cards from a bank and are frequently revolving accounts.  Revolving accounts allow you to carry a balance and your monthly payment will vary, based on the amount of your balance.  Your credit file does not contain enough information about your use of bankcards or revolving accounts.  A credit file with older accounts and/or more accounts reflects more experience with handling credit and can have a positive impact on your credit score.`,\n    cando: `Maintaining open and active credit accounts in good standing can help improve your credit score.`,\n  },\n  R44: {\n    factor: `Too many bankcard or revolving accounts with delinquent or derogatory status`,\n    explain: `Bankcard accounts include credit cards and charge cards from a bank and are frequently revolving accounts.  Revolving accounts allow you to carry a balance and your monthly payment will vary, based on the amount of your balance.  You have had too many bankcard or revolving accounts with payments that are at least 30 days late and/or on which a lender has reported a derogatory status.  People with late payments are at risk of being overextended, putting existing credit with lenders at risk.`,\n    cando: `Paying bills on time every month is important to maintaining a good credit score.  If you remain behind with any payments, bring them current as soon as possible, and then make future payments on time. Over time this will have a positive impact on your score.`,\n  },\n  R45: {\n    factor: `Total balances too high on delinquent/derogatory bankcard or revolving accts `,\n    explain: `Bankcard accounts include credit cards and charge cards from a bank and are frequently revolving accounts.  Revolving accounts allow you to carry a balance and your monthly payment will vary, based on the amount of your balance.  The total of the balances is high on your bankcard or revolving accounts with late payments or on which a lender has reported a derogatory.  Late payments are a proven indicator of risk.  When credit line balances approach credit limits, risk is further increased because you don't have much credit available should it be needed, creating a greater chance of becoming overextended.`,\n    cando: `Paying bills on time every month is important to maintaining a good credit score.  If you remain behind with any payments, bring them current as soon as possible, and then make future payments on time.  Whenever possible, pay down balances on your accounts.  Over time these actions will benefit your score.`,\n  },\n  R47: {\n    factor: `No open bankcard or revolving accounts in your credit file`,\n    explain: `Bankcard accounts include credit cards and charge cards from a bank and are frequently revolving accounts.  Revolving accounts allow you to carry a balance and your monthly payment will vary, based on the amount of your balance.   The VantageScore credit score model relies on information in your credit files at the three national credit reporting companies (Equifax, Experian and TransUnion) to generate your score.  Because you have no open bankcards or revolving accounts, your credit file does not contain enough information about your use of credit.  A mix of different types of open and active credit accounts, including bankcards and other revolving accounts, can have a positive impact on your credit score.`,\n    cando: `Maintaining open and active credit accounts in good standing can help improve your credit score.`,\n  },\n  R48: {\n    factor: `No bankcard or revolving recently reported account information`,\n    explain: `Bankcard accounts include credit cards and charge cards from a bank and are frequently revolving accounts.  Revolving accounts allow you to carry a balance and your monthly payment will vary, based on the amount of your balance.  The VantageScore credit score model relies on information in your credit files at the three national credit reporting companies (Equifax, Experian and TransUnion) to generate your score.  Because you have no bankcard or revolving accounts where a lender has reported recent activity, your credit file does not contain enough information about your use of this kind of credit.  A mix of different types of open and active credit accounts, including bankcards and other revolving accounts, can have a positive impact on your credit score.`,\n    cando: `Maintaining open and active credit accounts in good standing can help improve your credit score.`,\n  },\n  R49: {\n    factor: `Lack of sufficient relevant bankcard or revolving account information`,\n    explain: `Bankcard accounts include credit cards and charge cards from a bank and are frequently revolving accounts.  Revolving accounts allow you to carry a balance and your monthly payment will vary, based on the amount of your balance.  The VantageScore credit score model relies on information in your credit files at the three national credit reporting companies (Equifax, Experian and TransUnion) to generate your score.  Your credit file does not have enough credit behavior information about your bankcard or revolving accounts. A mix of different types of open and active credit accounts, including bankcard and other revolving accounts, can have a positive impact on your credit score.`,\n    cando: `Maintaining open and active credit accounts in good standing can help improve your credit score.`,\n  },\n  R53: {\n    factor: `The worst status on your real estate accounts is delinquent or derogatory`,\n    explain: `A real estate loan can be a first mortgage, a home equity loan, or home equity line of credit.  Your credit file is showing a real estate account with a payment that was at least 30 days late and/or on which a lender has reported a derogatory status.  Late payments are a proven indicator of increased risk.  People with late payments are at risk of being overextended, putting existing credit with lenders at risk.`,\n    cando: `Paying bills on time every month is important to maintaining a good credit score.  If you remain behind with any payments, bring them current as soon as possible, and then make future payments on time. Over time this will have a positive impact on your score.`,\n  },\n  R54: {\n    factor: `The amount of balance paid down on your open real estate accounts is too low`,\n    explain: `A real estate loan can be a first mortgage, a home equity loan, or home equity line of credit.  The amount that has been paid down on your open real estate accounts is low.  People who haven't paid down much of their mortgage or other real estate loans are higher credit risks than people who have.`,\n    cando: `As monthly real estate payments are made, a portion of the outstanding principal balance is reduced, benefitting your score.  Whenever possible, further pay down balances on your real estate accounts.  Over time this will also have a positive impact on your score.`,\n  },\n  R55: {\n    factor: `Open real estate account balances are too high compared to their loan amounts`,\n    explain: `A real estate loan can be a first mortgage, a home equity loan, or home equity line of credit.  The outstanding balances on open real estate accounts remain high compared to the original loan amounts.  People who haven't paid down much of their mortgage or other real estate loans are higher credit risks than people who have.`,\n    cando: `As monthly real estate payments are made, a portion of the outstanding principal balance is reduced, benefitting your score.  Whenever possible, further pay down balances on your real estate accounts.  Over time this will also have a positive impact on your score.`,\n  },\n  R57: {\n    factor: `Too many real estate accounts with delinquent or derogatory payment status`,\n    explain: `A real estate loan can be a first mortgage, a home equity loan, or home equity line of credit.  You have had too many real estate accounts with payments that are at least 30 days late and/or on which a lender has reported a derogatory status. Late payments are a proven indicator of increased risk.  People with late payments are at risk of being overextended, putting existing credit with lenders at risk.`,\n    cando: `Paying all bills on time every month is important to maintaining a good credit score.  If you remain behind with any payments, bring them current as soon as possible, and then make future payments on time. Over time this will have a positive impact on your score.`,\n  },\n  R58: {\n    factor: `The total of all balances on your open real estate accounts is too high`,\n    explain: `A real estate loan can be a first mortgage, a home equity loan, or home equity line of credit.  The total that you owe on all of your open real estate accounts is high.  Maintaining high balances has proven to be risky behavior because you don't have much credit available should it be needed, creating a greater chance of becoming overextended.  People with the highest credit scores keep their account balances low.`,\n    cando: `As monthly real estate payments are made, a portion of the outstanding principal balance is reduced, benefitting your score.  Whenever possible, further pay down balances on your real estate accounts.  Over time this will also have a positive impact on your score.`,\n  },\n  R61: {\n    factor: `No open real estate accounts in your credit file`,\n    explain: `A real estate loan can be a first mortgage, a home equity loan, or home equity line of credit.  The VantageScore credit score model relies on information in your credit files at the three national credit reporting companies (Equifax, Experian and TransUnion) to generate your score.  A mix of different types of open and active credit accounts, including real estate accounts, can have a positive impact on your credit score.`,\n    cando: `Maintaining open and active credit accounts in good standing can help improve your credit score.`,\n  },\n  R62: {\n    factor: `No recently reported real estate account information`,\n    explain: `A real estate loan can be a first mortgage, a home equity loan, or home equity line of credit.  The VantageScore credit score model relies on information in your credit files at the three national credit reporting companies (Equifax, Experian and TransUnion) to generate your score.  Because you have no real estate accounts where a lender has reported recent activity, your credit file does not contain enough information about your use of credit.  A mix of different types of open and active credit accounts with can have a positive impact on your credit score.`,\n    cando: `Maintaining open and active credit accounts in good standing can help improve your credit score.`,\n  },\n  R63: {\n    factor: `Lack of sufficient relevant real estate account information`,\n    explain: `A real estate loan can be a first mortgage, a home equity loan, or home equity line of credit.  The VantageScore credit score model relies on information in your credit files at the three national credit reporting companies (Equifax, Experian and TransUnion) to generate your score.  Your credit file does not contain enough credit behavior information about your real estate accounts.  A mix of different types of open and active credit accounts, including real estate loans, can have a positive impact on your credit score.`,\n    cando: `Maintaining open and active credit accounts in good standing can help improve your credit score.`,\n  },\n  R64: {\n    factor: `No open first mortgage accounts in your credit file`,\n    explain: `The VantageScore credit score model relies on information in your credit files at the three national credit reporting companies (Equifax, Experian and TransUnion) to generate your score.  A mix of different types of open and active credit accounts, including first mortgage accounts, can have a positive impact on your credit score.`,\n    cando: `Maintaining open and active credit accounts in good standing can help improve your credit score.`,\n  },\n  R65: {\n    factor: `Lack of sufficient relevant first mortgage account information`,\n    explain: `The VantageScore credit score model relies on information in your credit files at the three national credit reporting companies (Equifax, Experian and TransUnion) to generate your score.  Your credit file does not contain enough credit behavior information about your first mortgage accounts.  A mix of different types of open and active credit accounts, including first mortgage loans, can have a positive impact on your credit score.`,\n    cando: `Maintaining open and active credit accounts in good standing can help improve your credit score.`,\n  },\n  R66: {\n    factor: `Your open auto account balances are too high compared to their loan amounts`,\n    explain: `You have auto loans in your credit file with balances that are high compared to the original loan amounts on the account, which is a proven indicator of increased risk.`,\n    cando: `As monthly car payments are made, a portion of the outstanding principal balance is reduced, benefitting your score.  Whenever possible, further pay down balances on your auto loan accounts.  Over time this will also have a positive impact on your score.`,\n  },\n  R68: {\n    factor: `No open auto accounts in your credit file`,\n    explain: `The VantageScore credit score model relies on information in your credit files at the three national credit reporting companies (Equifax, Experian and TransUnion) to generate your score.  A mix of different types of open and active credit accounts, including auto loans, can have a positive impact on your credit score.`,\n    cando: `Maintaining open and active credit accounts in good standing can help improve your credit score.`,\n  },\n  R69: {\n    factor: `Lack of sufficient relevant auto  account information`,\n    explain: `The VantageScore credit score model relies on information in your credit files at the three national credit reporting companies (Equifax, Experian and TransUnion) to generate your score.  Your credit file does not contain enough credit behavior information about your auto loans.  A mix of different types of open and active credit accounts, including auto loans, can have a positive impact on your credit score.`,\n    cando: `Maintaining open and active credit accounts in good standing can help improve your credit score.`,\n  },\n  R71: {\n    factor: `You have either very few installment loans or too many with delinquencies`,\n    explain: `An installment account is one with a fixed monthly payment for the life of the loan.  Auto loans and student loans are common examples of installment loans.  You have had too many installment accounts with late payments or do not have enough installment loans to provide sufficient information about your credit behaviors.  Late payments are a proven indicator of increased risk.  People with late payments are at risk of being overextended, putting existing credit with lenders at risk.`,\n    cando: `Paying bills on time every month is important to maintaining a good credit score.  If you remain behind with any payments, bring them current as soon as possible, and then make future payments on time. Over time this will have a positive impact on your score.`,\n  },\n  R72: {\n    factor: `Too many installment accounts with a delinquent or derogatory payment status`,\n    explain: `An installment account is one with a fixed monthly payment for the life of the loan.  Auto loans and student loans are common examples of installment loans.  You have had too many installment accounts that are at least 30 days late and/or on which a lender has reported a derogatory status.  Late payments are a proven indicator of increased risk.  People with late payments are at risk of being overextended, putting existing credit with lenders at risk.`,\n    cando: `Paying all bills on time every month is important to maintaining a good credit score.  If you remain behind with any payments, bring them current as soon as possible, and then make future payments on time. Over time this will have a positive impact on your score.`,\n  },\n  R73: {\n    factor: `The worst status on your installment accounts is delinquent or derogatory`,\n    explain: `An installment account is one with a fixed monthly payment for the life of the loan.  Auto loans and student loans are common examples of installment loans.  Your credit file is showing an installment account with a payment that was at least 30 days late and/or on which a lender has reported a derogatory status.    Late payments are a proven indicator of increased risk.  People with late payments are at risk of being overextended, putting existing credit with lenders at risk.`,\n    cando: `Paying bills on time every month is important to maintaining a good credit score.  If you remain behind with any payments, bring them current as soon as possible, and then make future payments on time.  Over time, this will have a positive impact on your score.`,\n  },\n  R74: {\n    factor: `The balance amount paid down on your open installment accounts is too low`,\n    explain: `An installment account is one with a fixed monthly payment for the life of the loan.  Auto loans and student loans are common examples of installment loans.  The amount that has been paid down on your open installment accounts is low.  People who haven't paid down much of their installment account loan balances are higher credit risks than people who have.`,\n    cando: `As monthly installment account payments are made, a portion of the outstanding principal balance is reduced, benefitting your score.  Whenever possible, further pay down balances on your accounts.  Over time this will also have a positive impact on your score.`,\n  },\n  R75: {\n    factor: `The installment account that you opened most recently is too new`,\n    explain: `An installment account is one with a fixed monthly payment for the life of the loan.  Auto loans and student loans are common examples of installment loans.  The installment account that you opened most recently is still too new.  A credit file containing older accounts will have a positive impact on your credit score because it demonstrates that you are experienced managing credit.`,\n    cando: `Don't open more accounts than you actually need.  Research shows that new accounts indicate greater risk, especially if overall account history isn't long.  Your score will benefit as your accounts get older.`,\n  },\n  R76: {\n    factor: `You have insufficient credit history on installment loans`,\n    explain: `An installment account is one with a fixed monthly payment for the life of the loan.  Auto loans and student loans are common examples of installment loans.  Your credit file does not contain enough information about your use of installment loans.  A credit file with older accounts and/or more accounts reflects more experience with handling credit and can have a positive impact on your credit score.`,\n    cando: `Maintaining open and active credit accounts in good standing can help improve your credit score.`,\n  },\n  R77: {\n    factor: `Newest delinquent or derogatory status on installment accounts is too recent`,\n    explain: `An installment account is one with a fixed monthly payment for the life of the loan.  Auto loans and student loans are common examples of installment loans.  You have an installment account that had a late payment or on which a lender has reported a derogatory status.  Your credit file shows that this event occurred too recently.  Late payments are a proven indicator of increased risk.  People with late payments are at risk of being overextended, putting existing credit with lenders at risk.`,\n    cando: `Paying bills on time every month is important to maintaining a good credit score.  If you remain behind with any payments, bring them current as soon as possible, and then make future payments on time.  `,\n  },\n  R78: {\n    factor: `Balances on installment accounts are too high compared to their loan amounts`,\n    explain: `An installment account is one with a fixed monthly payment for the life of the loan.  Auto loans and student loans are common examples of installment loans.  The outstanding balances on open installment accounts remain high compared to the original loan amounts.  People who haven't paid down much of the original amount on installment loans are higher credit risks than people who have.`,\n    cando: `As monthly payments are made, a portion of the outstanding principal balance is reduced, benefitting your score.  Whenever possible, further pay down balances on your installment loan accounts.  Over time this will also have a positive impact on your score.`,\n  },\n  R79: {\n    factor: `Too many of the delinquencies on your installment accounts are recent`,\n    explain: `An installment account is one with a fixed monthly payment for the life of the loan.  Auto loans and student loans are common examples of installment loans.  A delinquency is a payment that was made 30 or more days late. Too many late payments occurred recently on your installment accounts.  Late payments are a proven indicator of increased risk.  People with late payments are at risk of being overextended, putting existing credit with lenders at risk.`,\n    cando: `Paying bills on time every month is important to maintaining a good credit score.  If you remain behind with any payments, bring them current as soon as possible, and then make future payments on time. Over time, this will have a positive impact on your score.`,\n  },\n  R81: {\n    factor: `No open installment accounts in your credit file`,\n    explain: `An installment account is one with a fixed monthly payment for the life of the loan.  Auto loans and student loans are common examples of installment loans.  The VantageScore credit score model relies on information in your credit files at the three national credit reporting companies (Equifax, Experian and TransUnion) to generate your score.  A mix of different types of open and active credit accounts, including installment accounts, can have a positive impact on your credit score.`,\n    cando: `Maintaining open and active credit accounts in good standing can help improve your credit score.`,\n  },\n  R83: {\n    factor: `Lack of sufficient relevant installment account information`,\n    explain: `An installment account is one with a fixed monthly payment for the life of the loan.  Auto loans and student loans are common examples of installment loans.  The VantageScore credit score model relies on information in your credit files at the three national credit reporting companies (Equifax, Experian and TransUnion) to generate your score.  Your credit file does not contain enough information about your installment accounts.  A mix of different types of open and active credit accounts, including installment accounts, can have a positive impact on your credit score.`,\n    cando: `Maintaining open and active credit accounts in good standing can help improve your credit score.`,\n  },\n  R84: {\n    factor: `The number of inquiries was also a factor, but effect was not significant`,\n    explain: `If a lender runs a credit check when you apply for credit, an inquiry is reported to the credit bureaus.  This can lower your score a small amount, in this case the drop was not significant.  The VantageScore credit score model takes rate shopping, e.g., for a mortgage or car loan, into consideration.  All inquiries for mortgages, auto loans and major credit cards that appear in your credit file within a 14-day window are interpreted as a single inquiry.  Another time inquiries never count against your score is when you check your own credit or obtain your own credit score.`,\n    cando: `Apply for credit only when you need it. If you are approved for credit, the small score drop from making an inquiry will disappear within a short time and the score will quickly benefit if you make on-time payments and manage your new account in a responsible fashion.`,\n  },\n  R85: {\n    factor: `You have too many inquiries on your credit report.`,\n    explain: `If a lender runs a credit check when you apply for credit, an inquiry is reported to the credit bureaus.  This can lower your score a small amount, typically by 10 to 20 points.  The VantageScore credit score model takes rate shopping, e.g., for a mortgage or car loan, into consideration.  All inquiries for mortgages, auto loans and major credit cards that appear in your credit file within a 14-day window are interpreted as a single inquiry.  Another time inquiries never count against your score is when you check your own credit or obtain your own credit score.`,\n    cando: `Apply for credit only when you need it. If you are approved for credit, the small score drop from making an inquiry will disappear within a short time and the score will quickly benefit if you make on-time payments and manage your new account in a responsible fashion.`,\n  },\n  R86: {\n    factor: `Your credit report contains too many derogatory public records`,\n    explain: `Public records include information filed or recorded by local, state, federal or other government agencies that is available to the general public. The types of public records that can affect your credit score include legal judgments against you, or tax liens levied by a government authority.  Public records can have a significant negative impact on your credit score.`,\n    cando: `Pay all bills on-time and satisfy all judgments.  The impact that negative items such as public records have on your credit score will diminish over time.`,\n  },\n  R87: {\n    factor: `Your credit report contains too many unsatisfied public records`,\n    explain: `Public records include information filed or recorded by local, state, federal or other government agencies that is available to the general public. The types of public records that can affect your credit score include legal judgments against you, or tax liens levied by a government authority.  Your credit file contains public records that remain unpaid.  All public records can have a significant negative impact on your credit score.`,\n    cando: `Pay all bills on-time and satisfy all judgments.  The impact that negative items such as public records have on your credit score will diminish over time.`,\n  },\n  R88: {\n    factor: `One or more derogatory public records in your credit file is too recent`,\n    explain: `Public records include information filed or recorded by local, state, federal or other government agencies that is available to the general public. The types of public records that can affect your credit score include legal judgments against you, or tax liens levied by a government authority.  Your credit file contains public records that are too recent.  All public records can have a significant negative impact on your credit score.`,\n    cando: `Pay all bills on-time and satisfy all judgments.  The impact that negative items such as public records have on your credit score will diminish over time.`,\n  },\n  R90: {\n    factor: `Too few discharged bankruptcies`,\n    explain: `You have a bankruptcy on your credit report that has not been discharged.`,\n    cando: `Complete your bankruptcy plan to have your debts discharged.¾ The impact on your credit score from the bankruptcy will diminish over time.`,\n  },\n  R93: {\n    factor: `The worst status on your student loan accounts is delinquent or derogatory`,\n    explain: `Your credit file is showing a student loan with a payment that was at least 30 days late and/or on which a lender has reported a derogatory status.  Late payments are a proven indicator of increased risk.  People with late payments are at risk of being overextended, putting existing credit with lenders at risk.`,\n    cando: `Paying bills on time every month is important to maintaining a good credit score.  If you remain behind with any payments, bring them current as soon as possible, and then make future payments on time.  Over time, this will have a positive impact on your score.`,\n  },\n  R94: {\n    factor: `The balance amount paid down on your open student loan accounts is too low`,\n    explain: `The amount that has been paid down on your open student loan accounts is low.  People who haven't paid down much of their student loan account balances are higher credit risks than people who have.`,\n    cando: `As monthly student loan account payments are made, a portion of the outstanding balance is reduced, benefitting your score.  Whenever possible, further pay down balances on your accounts.  Over time, this will also have a positive impact on your score.`,\n  },\n  R95: {\n    factor: `You have too many collection agency accounts that are unpaid`,\n    explain: `Some collection agencies report account information to credit bureaus just like lenders do.  Your credit file has too many accounts that have been sent to a collection agency and remain unpaid.  Unpaid collection accounts in your file can have a significant negative impact on your credit score.  `,\n    cando: `Satisfy all collection accounts and pay all other accounts on time each month.  The impact that negative items such as collections accounts have on your credit score will diminish over time.`,\n  },\n  R96: {\n    factor: `The total you owe on collection agency accounts is high`,\n    explain: `Some collection agencies report account information to credit bureaus just like lenders do.  Your credit file indicates the amount of money you owe to collection agencies is high.  Unpaid collection accounts in your file can have a significant negative impact on your credit score.  `,\n    cando: `Satisfy all collection accounts and pay all other accounts on time each month.  The impact that negative items such as collections accounts have on your credit score will diminish over time.`,\n  },\n  R97: {\n    factor: `You have too few credit accounts`,\n    explain: `The VantageScore credit score model relies on information in your credit files at the three national credit reporting companies (Equifax, Experian and TransUnion) to generate your score.  Your credit file does not have enough credit behavior information about your loans.  A mix of different types of open and active credit accounts can have a positive impact on your credit score.`,\n    cando: `Maintaining open and active credit accounts in good standing can help improve your credit score.`,\n  },\n  R98: {\n    factor: `There is a bankruptcy on your credit report`,\n    explain: `Bankruptcy is a proven indicator of risk with future payments and causes a significant drop to your credit score over an extended period of time.`,\n    cando: `Make all future payments on time.  The impact on your credit score from the bankruptcy will diminish over time.`,\n  },\n}"
            },
            {
                "name": "ONTIME_PAY_STATUS_CODES",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/data/pay-status-codes.ts",
                "type": "Record<string, any>",
                "defaultValue": "{\n  C: `Current`,\n}"
            },
            {
                "name": "Other",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/tradelines/tradeline-payment-icon/tradeline-payment-icon.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "OTHER_PAY_STATUS_CODES",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/data/pay-status-codes.ts",
                "type": "Record<string, any>",
                "defaultValue": "{\n  '8R': `Repossesion Account`,\n  '7': `Wage Earner Plan`,\n}"
            },
            {
                "name": "parserOptions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/services/creditreport/creditreport.service.ts",
                "type": "object",
                "defaultValue": "{\n  attributeNamePrefix: '',\n  ignoreAttributes: false,\n  ignoreNameSpace: true,\n  parseAttributeValue: true,\n}"
            },
            {
                "name": "PAY_STATUS_CODES",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/data/pay-status-codes.ts",
                "type": "Record<string, any>",
                "defaultValue": "{\n  U: `No Data / Unknown`,\n  C: `Current`,\n  '0': `Too New to Rate`,\n  '1': `Late 30 Days`,\n  '2': `Late 60 Days`,\n  '3': `Late 90 Days`,\n  '4': `Late 120 Days`,\n  '7': `Wage Earner Plan`,\n  '8R': `Repossesion`,\n  '9': `Collection Chargeoff`,\n}"
            },
            {
                "name": "Percentage",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/cards/snapshot-display-card/snapshot-display-card.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "phoneMap",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/kyc-phonenumber/kyc-phonenumber/kyc-phonenumber.component.ts",
                "type": "Record<string, any>",
                "defaultValue": "{\n  phone: true,\n}"
            },
            {
                "name": "pipes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/views.module.ts",
                "type": "[]",
                "defaultValue": "[KycKbaquestionsPipe, NegativeTradelinesPipe, CreditReportPipe]"
            },
            {
                "name": "pipes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/shared-components.module.ts",
                "type": "[]",
                "defaultValue": "[\n  FilledOnlytextButtonPipe,\n  LinksOnlytextButtonPipe,\n  OutlineOnlytextButtonPipe,\n  OutlineInputPipe,\n  OutlineSelectInputPipe,\n  FilledClosingAlertPipe,\n  FilledOnlytextBadgePipe,\n  FilledChecktextProgressbarPipe,\n  AccountStatusPipe,\n  SnapshotLabelPipe,\n  SnapshotStatusPipe,\n  CreditReportGraphicPipe,\n  ParseTradelineDetailsPipe,\n]"
            },
            {
                "name": "POSITIVE_PAY_STATUS_CODES",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/data/pay-status-codes.ts",
                "type": "Record<string, any>",
                "defaultValue": "{\n  U: `No Data / Unknown`,\n  C: `Current`,\n  '0': `Too New to Rate`,\n  '7': `Wage Earner Plan`,\n}"
            },
            {
                "name": "POSITIVE_REASON_CODES",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/data/positive-reason-codes.ts",
                "type": "Record<string, any>",
                "defaultValue": "{\n  RPO1: { factor: ``, explain: ``, cando: `` },\n  RP02: { factor: ``, explain: ``, cando: `` },\n  RP03: { factor: ``, explain: ``, cando: `` },\n  RP04: {\n    factor: `The balances on your accounts are not too high compared to loan limits`,\n    explain: `Your balances are not too high compared to the loan amounts, which causes your score to improve. `,\n    cando: `Keep low balances on your accounts; this will benefit your score. `,\n  },\n  RP05: {\n    factor: `There are no or only a few recent delinquencies on your accounts`,\n    explain: `A delinquency is a payment that was made 30 or more days late. You have had no or very few delinquencies recently which has caused your score to improve.`,\n    cando: `Keep paying bills on time every month since it is important for maintaining a good credit score. If you remain behind with any payments, bring them current as soon as possible, and then make future payments on time. Over time, this will have a positive impact on your score.`,\n  },\n  RP06: {\n    factor: `You have few or no accounts that were opened recently `,\n    explain: `None or only a few of your accounts were recently opened. As a result, your history of credit management performance is enough to demonstrate responsible behavior.`,\n    cando: `Keep using your existing credit responsibly and make your payments on time. Your credit score will benefit as you make payments on time and manage the accounts in a responsible fashion. Manage your credit wisely by planning ahead for your credit needs and avoid applying for more credit than you need.`,\n  },\n  RP07: {\n    factor: `You have either no or few delinquent or derogatory accounts`,\n    explain: `Paying your bills on time improves your score. You have paid all or nearly all of your bills on time.`,\n    cando: `Keep paying bills on time every month since it is important to maintaining a good credit score. If you remain behind with any payments, bring them current as soon as possible, and then make future payments on time. `,\n  },\n  RP08: {\n    factor: `One or more of your accounts were paid on time in recent months`,\n    explain: `Paying your bills on time improves your score. Recently at least one of your accounts was paid on time.`,\n    cando: `Keep paying bills on time every month since it is important to maintaining a good credit score. If you remain behind with any payments, bring them current as soon as possible, and then make future payments on time. `,\n  },\n  RP09: {\n    factor: `None of your accounts have a severe delinquency or a derogatory status`,\n    explain: `Paying your bills on time improves your score. You have paid all your accounts on time or no more than 30 days late. `,\n    cando: `Keep paying bills on time every month since it is important to maintaining a good credit score. If you remain behind with any payments, bring them current as soon as possible, and then make future payments on time. `,\n  },\n  RP10: {\n    factor: `One or more of your accounts have been paid on time`,\n    explain: `Paying your bills on time improves your score. At least one of your accounts has no late payments.`,\n    cando: `Keep paying bills on time every month since it is important to maintaining a good credit score. If you remain behind with any payments, bring them current as soon as possible, and then make future payments on time. `,\n  },\n  RP11: {\n    factor: `You have few or no accounts with delinquent or derogatory balances`,\n    explain: `Paying your bills on time improves your score. At most, only a small amount of your balances is currently late.`,\n    cando: `Keep paying bills on time every month since it is important to maintaining a good credit score. If you remain behind with any payments, bring them current as soon as possible, and then make future payments on time. `,\n  },\n  RP12: {\n    factor: `The date that you opened your oldest account is not too recent`,\n    explain: `Your oldest account was not opened too recently. As a result, your history of credit management is enough to demonstrate responsible behavior which has improved your score.`,\n    cando: `Don't open more accounts than you actually need. Research shows that new accounts indicate greater risk. Your score will benefit as your accounts get older.`,\n  },\n  RP13: {\n    factor: `Your most recently opened account is not too new`,\n    explain: `Your newest account was not opened too recently. As a result, your history of credit management is enough to demonstrate responsible behavior which has improved your score.`,\n    cando: `Don't open more accounts than you actually need. Research shows that new accounts indicate greater risk. Your score will benefit as your accounts get older.`,\n  },\n  RP14: {\n    factor: `Your credit file contains enough information about your use of credit`,\n    explain: `A credit file with sufficient accounts and credit history reflects more experience in handling credit. More experience can have a positive impact on your score.`,\n    cando: `Maintaining open and active credit accounts in good standing can help improve your credit score. `,\n  },\n  RP15: {\n    factor: `None of your accounts have a recent delinquency or a derogatory status`,\n    explain: `A delinquency or derogatory is a payment that was made at least 30 or more days late. Recently you have paid all of your accounts on time which has caused your score to improve.`,\n    cando: `Keep paying bills on time every month since it is important to maintaining a good credit score. If you remain behind with any payments, bring them current as soon as possible, and then make future payments on time. `,\n  },\n  RP16: {\n    factor: `The total of all balances on your open accounts is not too high`,\n    explain: `The total of your balances on your open accounts, compared to the loan amounts, is not too high which has caused your score to improve. `,\n    cando: `Keep low balances on your accounts; this will benefit your score. `,\n  },\n  RP17: {\n    factor: `Balances on prior delinquent accounts not too high compared to loan amts`,\n    explain: `Keeping low balances and paying your accounts on time can improve your score. The balances on accounts, that were previously paid late, are now low compared to the loan amount or credit limit.`,\n    cando: `Keep paying bills on time every month since it is important to maintaining a good credit score. If you remain behind with any payments, bring them current as soon as possible, and then make future payments on time. `,\n  },\n  RP18: {\n    factor: `Total of balances on accts never late not too high compared to loan amts`,\n    explain: `Your balances on loans that you have paid on time, compared to the loan amounts, are not too high which has caused your score to improve. `,\n    cando: `Keep low balances on your accounts; this will benefit your score. `,\n  },\n  RP21: {\n    factor: `No open accounts in your credit file `,\n    explain: `The VantageScore credit score model relies on information in your credit files at the three national credit reporting companies (Equifax, Experian and TransUnion) to generate your score. Because you have no open accounts, your credit file does not contain enough information about your use of credit. A mix of different types of open and active credit accounts can have a positive impact on your score.`,\n    cando: `Maintaining open and active credit accounts in good standing can help improve your credit score. `,\n  },\n  RP22: {\n    factor: `No recently reported account information`,\n    explain: `The VantageScore credit score model relies on information in your credit files at the three national credit reporting companies (Equifax, Experian and TransUnion) to generate your score. Because you have no open accounts, your credit file does not contain enough information about your use of credit. A mix of different types of open and active credit accounts can have a positive impact on your score.`,\n    cando: `Maintaining open and active credit accounts in good standing can help improve your credit score. `,\n  },\n  RP23: {\n    factor: `Lack of sufficient relevant account information`,\n    explain: `The VantageScore credit score model relies on information in your credit files at the three national credit reporting companies (Equifax, Experian and TransUnion) to generate your score. Because you have no open accounts, your credit file does not contain enough information about your use of credit. A mix of different types of open and active credit accounts can have a positive impact on your score.`,\n    cando: `Maintaining open and active credit accounts in good standing can help improve your credit score. `,\n  },\n  RP29: {\n    factor: `Few or none of your open bankcard or revolving accounts has a balance`,\n    explain: `Bankcard accounts include credit cards and charge cards from a bank and are frequently revolving accounts. Revolving accounts allow you to carry a balance and your monthly payment will vary, based on the amount of your balance. Keeping low balances can improve your score. The balances on your bankcard and revolving accounts are low.`,\n    cando: `Keep low balances on your accounts; this will benefit your score. `,\n  },\n  RP30: {\n    factor: `One or more of your bankcard or revolving accounts has a high limit`,\n    explain: `Bankcard accounts include credit cards and charge cards from a bank and are frequently revolving accounts. Revolving accounts allow you to carry a balance and your monthly payment will vary, based on the amount of your balance. Having bankcard or revolving accounts with high credit limits indicates that you have high availability of credit, improving your score.`,\n    cando: `Keep using your existing credit responsibly. Your credit score will benefit as you manage the accounts in a responsible fashion. Manage your credit wisely by planning ahead for your credit needs and avoid applying for more credit than you need.`,\n  },\n  RP31: {\n    factor: `Few or none of your bankcard or revolving accounts was opened recently`,\n    explain: `Bankcard accounts include credit cards and charge cards from a bank and are frequently revolving accounts. Revolving accounts allow you to carry a balance and your monthly payment will vary, based on the amount of your balance. None or only a few of your bankcard or revolving accounts were recently opened. As a result, your history of credit management is enough to demonstrate responsible behavior.`,\n    cando: `Keep using your existing credit responsibly and make your payments on time. Your credit score will benefit as you make payments on time and manage the accounts in a responsible fashion. Manage your credit wisely by planning ahead for your credit needs and avoid applying for more credit than you need.`,\n  },\n  RP32: {\n    factor: `Balances on bankcard or revolving accts not too high compared to limits`,\n    explain: `Bankcard accounts include credit cards and charge cards from a bank and are frequently revolving accounts. Revolving accounts allow you to carry a balance and your monthly payment will vary, based on the amount of your balance. Your balances on bankcard or revolving accounts are not too high compared to the credit limit amounts, which causes your score to improve. `,\n    cando: `Keep low balances on your accounts; this will benefit your score. `,\n  },\n  RP33: {\n    factor: `No severe delinquency/derogatory status on bankcard or revolving accts`,\n    explain: `Bankcard accounts include credit cards and charge cards from a bank and are frequently revolving accounts. Revolving accounts allow you to carry a balance and your monthly payment will vary, based on the amount of your balance. Paying your bills on time improves your score. You have paid all your bankcard or revolving accounts on time or no more than 30 days late. `,\n    cando: `Keep paying bills on time every month since it is important to maintaining a good credit score. If you remain behind with any payments, bring them current as soon as possible, and then make future payments on time. `,\n  },\n  RP34: {\n    factor: `Total of all balances on bankcard or revolving accounts is not too high`,\n    explain: `Bankcard accounts include credit cards and charge cards from a bank and are frequently revolving accounts. Revolving accounts allow you to carry a balance and your monthly payment will vary, based on the amount of your balance. The total of your balances on your open bankcard or revolving accounts, compared to the credit limit amounts, is not too high which has caused your score to improve.`,\n    cando: `Keep low balances on your accounts; this will benefit your score. `,\n  },\n  RP35: {\n    factor: `Your highest bankcard or revolving account balance is not too high`,\n    explain: `Bankcard accounts include credit cards and charge cards from a bank and are frequently revolving accounts. Revolving accounts allow you to carry a balance and your monthly payment will vary, based on the amount of your balance. The highest of your balances on your open bankcard or revolving accounts is not too high which has caused your score to improve. `,\n    cando: `Keep low balances on your accounts; this will benefit your score. `,\n  },\n  RP36: {\n    factor: `Largest credit limit on open bankcard or revolving accts is not too low`,\n    explain: `Bankcard accounts include credit cards and charge cards from a bank and are frequently revolving accounts. Revolving accounts allow you to carry a balance and your monthly payment will vary, based on the amount of your balance. Having bankcard or revolving accounts with high credit limits indicates that you have high availability of credit, improving your score.`,\n    cando: `Keep using your existing credit responsibly. Your credit score will benefit as you manage the accounts in a responsible fashion. Manage your credit wisely by planning ahead for your credit needs and avoid applying for more credit than you need.`,\n  },\n  RP39: {\n    factor: `Available credit on open bankcard or revolving accounts is not too low`,\n    explain: `Bankcard accounts include credit cards and charge cards from a bank and are frequently revolving accounts. Revolving accounts allow you to carry a balance and your monthly payment will vary, based on the amount of your balance. You have high available credit on bankcard or revolving accounts which has caused your score to improve.`,\n    cando: `Keep using your existing credit responsibly. Your credit score will benefit as you manage the accounts in a responsible fashion. Manage your credit wisely by planning ahead for your credit needs and avoid applying for more credit than you need.`,\n  },\n  RP40: {\n    factor: `Date your oldest bankcard or revolving account opened is not too recent`,\n    explain: `Bankcard accounts include credit cards and charge cards from a bank and are frequently revolving accounts. Revolving accounts allow you to carry a balance and your monthly payment will vary, based on the amount of your balance. Your oldest bankcard or revolving account was not opened too recently. As a result, your history of credit management is enough to demonstrate responsible behavior which has improved your score.`,\n    cando: `Don't open more accounts than you actually need. Research shows that new accounts indicate greater risk. Your score will benefit as your accounts get older.`,\n  },\n  RP42: {\n    factor: `Date your newest bankcard or revolving account opened is not too recent`,\n    explain: `Bankcard accounts include credit cards and charge cards from a bank and are frequently revolving accounts. Revolving accounts allow you to carry a balance and your monthly payment will vary, based on the amount of your balance. Your newest bankcard or revolving account was not opened too recently. As a result, your history of credit management is enough to demonstrate responsible behavior which has improved your score.`,\n    cando: `Don't open more accounts than you actually need. Research shows that new accounts indicate greater risk. Your score will benefit as your accounts get older.`,\n  },\n  RP43: {\n    factor: `Credit file has enough history on your use of bankcard/revolving accts`,\n    explain: `Bankcard accounts include credit cards and charge cards from a bank and are frequently revolving accounts. Revolving accounts allow you to carry a balance and your monthly payment will vary, based on the amount of your balance. A credit file with sufficient accounts and credit history, including bankcard or revolving accounts, reflects more experience in handling credit. More experience can have a positive impact on your score.`,\n    cando: `Maintaining open and active credit accounts in good standing can help improve your credit score. `,\n  },\n  RP44: {\n    factor: `Few or no bankcard or revolving accts with delinquent/derogatory status`,\n    explain: `Bankcard accounts include credit cards and charge cards from a bank and are frequently revolving accounts. Revolving accounts allow you to carry a balance and your monthly payment will vary, based on the amount of your balance. Paying your bills on time improves your score. You have paid all your bankcard or revolving accounts on time or no more than 30 days late. `,\n    cando: `Keep paying bills on time every month since it is important to maintaining a good credit score. If you remain behind with any payments, bring them current as soon as possible, and then make future payments on time. `,\n  },\n  RP45: {\n    factor: `Few or no bankcard/revolving accts with delinquent/derogatory balances`,\n    explain: `Bankcard accounts include credit cards and charge cards from a bank and are frequently revolving accounts. Revolving accounts allow you to carry a balance and your monthly payment will vary, based on the amount of your balance. Paying your bills on time improves your score. At most, only a small amount of your bankcard or revolving balances are currently late.`,\n    cando: `Keep paying bills on time every month since it is important to maintaining a good credit score. If you remain behind with any payments, bring them current as soon as possible, and then make future payments on time. `,\n  },\n  RP47: {\n    factor: `No open bankcard or revolving accounts in your credit file`,\n    explain: `Bankcard accounts include credit cards and charge cards from a bank and are frequently revolving accounts. Revolving accounts allow you to carry a balance and your monthly payment will vary, based on the amount of your balance. The VantageScore credit score model relies on information in your credit files at the three national credit reporting companies (Equifax, Experian and TransUnion) to generate your score. Because you have no open bankcard or revolving accounts, your credit file does not contain enough information about your use of credit. A mix of different types of open and active credit accounts can have a positive impact on your score.`,\n    cando: `Maintaining open and active credit accounts in good standing can help improve your credit score. `,\n  },\n  RP48: {\n    factor: `No bankcard or revolving recently reported account information`,\n    explain: `Bankcard accounts include credit cards and charge cards from a bank and are frequently revolving accounts. Revolving accounts allow you to carry a balance and your monthly payment will vary, based on the amount of your balance. The VantageScore credit score model relies on information in your credit files at the three national credit reporting companies (Equifax, Experian and TransUnion) to generate your score. Because you have no open bankcard or revolving accounts, your credit file does not contain enough information about your use of credit. A mix of different types of open and active credit accounts can have a positive impact on your score.`,\n    cando: `Maintaining open and active credit accounts in good standing can help improve your credit score. `,\n  },\n  RP49: {\n    factor: `Lack of sufficient relevant bankcard or revolving account information`,\n    explain: `Bankcard accounts include credit cards and charge cards from a bank and are frequently revolving accounts. Revolving accounts allow you to carry a balance and your monthly payment will vary, based on the amount of your balance. The VantageScore credit score model relies on information in your credit files at the three national credit reporting companies (Equifax, Experian and TransUnion) to generate your score. Because you have no open bankcard or revolving accounts, your credit file does not contain enough information about your use of credit. A mix of different types of open and active credit accounts can have a positive impact on your score.`,\n    cando: `Maintaining open and active credit accounts in good standing can help improve your credit score. `,\n  },\n  RP50: {\n    factor: `No open retail revolving accounts in your credit file`,\n    explain: `The VantageScore credit score model relies on information in your credit files at the three national credit reporting companies (Equifax, Experian and TransUnion) to generate your score. A mix of different types of open and active credit accounts, including retail revolving accounts, can have a positive impact on your score.`,\n    cando: `Maintaining open and active credit accounts in good standing can help improve your credit score. `,\n  },\n  RP52: {\n    factor: `No open home equity loans in your credit file `,\n    explain: `The VantageScore credit score model relies on information in your credit files at the three national credit reporting companies (Equifax, Experian and TransUnion) to generate your score. A mix of different types of open and active credit accounts, including home equity accounts, can have a positive impact on your score.`,\n    cando: `Maintaining open and active credit accounts in good standing can help improve your credit score. `,\n  },\n  RP53: {\n    factor: `No real estate accounts with severe delinquency or derogatory status`,\n    explain: `A real estate loan can be a first mortgage, a home equity loan, or home equity line of credit. Paying your bills on time improves your score. You have paid all your real estate accounts on time or no more than 30 days late. `,\n    cando: `Keep paying bills on time every month since it is important to maintaining a good credit score. If you remain behind with any payments, bring them current as soon as possible, and then make future payments on time. `,\n  },\n  RP54: {\n    factor: `Amount of balance paid down on open real estate accounts is not too low`,\n    explain: `A real estate loan can be a first mortgage, a home equity loan, or home equity line of credit. The amount that has been paid down on your open real estate accounts is high. Paying down a high amount of your real estate loans increases your score.`,\n    cando: `As monthly real estate payments are made, a portion of the outstanding principal balance is reduced, benefitting your score. Whenever possible, further pay down balances on your real estate accounts. Over time this will also have a positive impact on your score.`,\n  },\n  RP55: {\n    factor: `Open real estate account balances not too high compared to loan amounts`,\n    explain: `A real estate loan can be a first mortgage, a home equity loan, or home equity line of credit. Your balances on real estate accounts are not too high compared to the original loan amounts, which causes your score to improve.`,\n    cando: `Keep low balances on your accounts; this will benefit your score. `,\n  },\n  RP57: {\n    factor: `Few or no real estate accts with delinquent or derogatory payment status`,\n    explain: `A real estate loan can be a first mortgage, a home equity loan, or home equity line of credit. Paying your bills on time improves your score. You have paid all your real estate loans on time or no more than 30 days late. `,\n    cando: `Keep paying bills on time every month since it is important to maintaining a good credit score. If you remain behind with any payments, bring them current as soon as possible, and then make future payments on time. `,\n  },\n  RP58: {\n    factor: `The total of all balances on open real estate accounts is not too high`,\n    explain: `A real estate loan can be a first mortgage, a home equity loan, or home equity line of credit. Your balances on real estate loans, compared to the original loan amounts, are not too high which has caused your score to improve. `,\n    cando: `Keep low balances on your accounts; this will benefit your score. `,\n  },\n  RP61: {\n    factor: `No open real estate accounts in your credit file`,\n    explain: `A real estate loan can be a first mortgage, a home equity loan, or home equity line of credit. The VantageScore credit score model relies on information in your credit files at the three national credit reporting companies (Equifax, Experian and TransUnion) to generate your score. A mix of different types of open and active credit accounts, including real estate accounts, can have a positive impact on your score.`,\n    cando: `Maintaining open and active credit accounts in good standing can help improve your credit score. `,\n  },\n  RP62: {\n    factor: `No recently reported real estate account information`,\n    explain: `A real estate loan can be a first mortgage, a home equity loan, or home equity line of credit. The VantageScore credit score model relies on information in your credit files at the three national credit reporting companies (Equifax, Experian and TransUnion) to generate your score. A mix of different types of open and active credit accounts, including real estate accounts, can have a positive impact on your score.`,\n    cando: `Maintaining open and active credit accounts in good standing can help improve your credit score. `,\n  },\n  RP63: {\n    factor: `Lack of sufficient relevant real estate account information`,\n    explain: `A real estate loan can be a first mortgage, a home equity loan, or home equity line of credit. The VantageScore credit score model relies on information in your credit files at the three national credit reporting companies (Equifax, Experian and TransUnion) to generate your score. A mix of different types of open and active credit accounts, including real estate accounts, can have a positive impact on your score.`,\n    cando: `Maintaining open and active credit accounts in good standing can help improve your credit score. `,\n  },\n  RP64: {\n    factor: `No open first mortgage accounts in your credit file`,\n    explain: `The VantageScore credit score model relies on information in your credit files at the three national credit reporting companies (Equifax, Experian and TransUnion) to generate your score. A mix of different types of open and active credit accounts, including first mortgage accounts, can have a positive impact on your score.`,\n    cando: `Maintaining open and active credit accounts in good standing can help improve your credit score. `,\n  },\n  RP65: {\n    factor: `Lack of sufficient relevant first mortgage account information`,\n    explain: `The VantageScore credit score model relies on information in your credit files at the three national credit reporting companies (Equifax, Experian and TransUnion) to generate your score. A mix of different types of open and active credit accounts, including first mortgage accounts, can have a positive impact on your score.`,\n    cando: `Maintaining open and active credit accounts in good standing can help improve your credit score. `,\n  },\n  RP66: {\n    factor: `Balances on open auto accounts are not too high compared to loan amounts`,\n    explain: `Your balances on auto accounts are not too high compared to the original loan amounts, which causes your score to improve.`,\n    cando: `Keep low balances on your accounts; this will benefit your score. `,\n  },\n  RP68: {\n    factor: `No open auto accounts in your credit file`,\n    explain: `The VantageScore credit score model relies on information in your credit files at the three national credit reporting companies (Equifax, Experian and TransUnion) to generate your score. A mix of different types of open and active credit accounts, including auto accounts, can have a positive impact on your score.`,\n    cando: `Maintaining open and active credit accounts in good standing can help improve your credit score. `,\n  },\n  RP69: {\n    factor: `Lack of sufficient relevant auto account information`,\n    explain: `The VantageScore credit score model relies on information in your credit files at the three national credit reporting companies (Equifax, Experian and TransUnion) to generate your score. A mix of different types of open and active credit accounts, including auto accounts, can have a positive impact on your score.`,\n    cando: `Maintaining open and active credit accounts in good standing can help improve your credit score. `,\n  },\n  RP70: {\n    factor: `No open personal installment loans in your credit file`,\n    explain: `The VantageScore credit score model relies on information in your credit files at the three national credit reporting companies (Equifax, Experian and TransUnion) to generate your score. A mix of different types of open and active credit accounts, including personal installment accounts, can have a positive impact on your score.`,\n    cando: `Maintaining open and active credit accounts in good standing can help improve your credit score. `,\n  },\n  RP71: {\n    factor: `One or more of your installment accounts has been paid on time`,\n    explain: `An installment account is one with a fixed monthly payment for the life of the loan. Auto loans and student loans are common examples of installment loans. Paying your bills on time improves your score. At least one of your installment accounts was paid on time.`,\n    cando: `Keep paying bills on time every month since it is important to maintaining a good credit score. If you remain behind with any payments, bring them current as soon as possible, and then make future payments on time. `,\n  },\n  RP72: {\n    factor: `Few or no installment accts with delinquent or derogatory payment status`,\n    explain: `An installment account is one with a fixed monthly payment for the life of the loan. Auto loans and student loans are common examples of installment loans. Paying your bills on time improves your score. You have paid all your installment loans on time or no more than 30 days late. `,\n    cando: `Keep paying bills on time every month since it is important to maintaining a good credit score. If you remain behind with any payments, bring them current as soon as possible, and then make future payments on time. `,\n  },\n  RP73: {\n    factor: `No installment accounts with a severe delinquency or derogatory status`,\n    explain: `An installment account is one with a fixed monthly payment for the life of the loan. Auto loans and student loans are common examples of installment loans. Paying your bills on time improves your score. You have paid all your installment accounts on time or no more than 30 days late. `,\n    cando: `Keep paying bills on time every month since it is important to maintaining a good credit score. If you remain behind with any payments, bring them current as soon as possible, and then make future payments on time. `,\n  },\n  RP74: {\n    factor: `Amount of balance paid down on open installment accounts is not too low`,\n    explain: `An installment account is one with a fixed monthly payment for the life of the loan. Auto loans and student loans are common examples of installment loans. The amount that has been paid down on your open installment accounts is high. Paying down a high amount of your installment loans increases your score.`,\n    cando: `As monthly installment account payments are made, a portion of the outstanding principal balance is reduced, benefitting your score. Whenever possible, further pay down balances on your accounts. Over time this will also have a positive impact on your score.`,\n  },\n  RP75: {\n    factor: `Your most recently opened installment account is not too new`,\n    explain: `An installment account is one with a fixed monthly payment for the life of the loan. Auto loans and student loans are common examples of installment loans. Your newest installment account was not opened too recently. As a result, your history of credit management is enough to demonstrate responsible behavior which has improved your score.`,\n    cando: `Don't open more accounts than you actually need. Research shows that new accounts indicate greater risk. Your score will benefit as your accounts get older.`,\n  },\n  RP76: {\n    factor: `Your credit file has enough history on your use of installment loans`,\n    explain: `An installment account is one with a fixed monthly payment for the life of the loan. Auto loans and student loans are common examples of installment loans. A credit file with sufficient accounts and credit history, including installment loans, reflects more experience in handling credit. More experience can have a positive impact on your score.`,\n    cando: `Maintaining open and active credit accounts in good standing can help improve your credit score. `,\n  },\n  RP77: {\n    factor: `Newest delinquent/derogatory status on installment accts not too recent`,\n    explain: `An installment account is one with a fixed monthly payment for the life of the loan. Auto loans and student loans are common examples of installment loans. You have an installment account that had a late payment or on which a lender has reported a derogatory status. However, your credit file shows that this event did not occur too recently, having some positive impact on your score.`,\n    cando: `Keep paying bills on time every month since it is important to maintaining a good credit score. If you remain behind with any payments, bring them current as soon as possible, and then make future payments on time. `,\n  },\n  RP78: {\n    factor: `Installment account balances not too high compared to loan amounts`,\n    explain: `An installment account is one with a fixed monthly payment for the life of the loan. Auto loans and student loans are common examples of installment loans. Your balances on installment accounts are not too high compared to the original loan amounts, which causes your score to improve.`,\n    cando: `Keep low balances on your accounts; this will benefit your score. `,\n  },\n  RP79: {\n    factor: `You have few or no recent delinquencies on your installment accounts`,\n    explain: `An installment account is one with a fixed monthly payment for the life of the loan. Auto loans and student loans are common examples of installment loans. A delinquency is a payment that was made 30 or more days late. You have had no or very few delinquencies recently on your installment accounts, which has caused your score to improve.`,\n    cando: `Keep paying bills on time every month since it is important for maintaining a good credit score. If you remain behind with any payments, bring them current as soon as possible, and then make future payments on time. Over time, this will have a positive impact on your score.`,\n  },\n  RP81: {\n    factor: `No open installment accounts in your credit file`,\n    explain: `The VantageScore credit score model relies on information in your credit files at the three national credit reporting companies (Equifax, Experian and TransUnion) to generate your score. A mix of different types of open and active credit accounts, including installment accounts, can have a positive impact on your score.`,\n    cando: `Maintaining open and active credit accounts in good standing can help improve your credit score. `,\n  },\n  RP83: {\n    factor: `Lack of sufficient relevant installment account information`,\n    explain: `The VantageScore credit score model relies on information in your credit files at the three national credit reporting companies (Equifax, Experian and TransUnion) to generate your score. A mix of different types of open and active credit accounts, including installment accounts, can have a positive impact on your score.`,\n    cando: `Maintaining open and active credit accounts in good standing can help improve your credit score. `,\n  },\n  RP85: {\n    factor: `You have few or no inquiries on your credit report`,\n    explain: `If a lender runs a credit check when you apply for credit, an inquiry is reported to the credit bureaus. This can lower your score a small amount, typically by 10 to 20 points. The VantageScore credit score model takes rate shopping, e.g., for a mortgage or car loan, into consideration. All inquiries for mortgages, auto loans and major credit cards that appear in your credit file within a 14-day window are counted as a single inquiry. Another time inquiries never count against your score is when you check your own credit or obtain your own score. You have no inquiries or a low number of inquiries on your credit report, which increases your score.`,\n    cando: `Apply for credit only when you need it. If you are approved for credit, the small score drop from making an inquiry will disappear within a short time and the score will quickly benefit if you make on-time payments and manage your new account in a responsible fashion.`,\n  },\n  RP86: {\n    factor: `You have few or no derogatory public records on your credit report`,\n    explain: `Public records include information filed or recorded by local, state, federal or other government agencies that is available to the general public. The types of public records that can affect your score include legal judgments against you and tax liens levied by a government authority. You have few or no public records on your credit report, which increases your score.`,\n    cando: `Pay all bills on-time and satisfy all judgments. The impact that negative items such as public records have on your credit score will diminish over time.`,\n  },\n  RP87: {\n    factor: `You have few or no unsatisfied public records on your credit report`,\n    explain: `Public records include information filed or recorded by local, state, federal or other government agencies that is available to the general public. The types of public records that can affect your score include legal judgments against you and tax liens levied by a government authority. You have few or no public records on your credit report, which increases your score.`,\n    cando: `Pay all bills on-time and satisfy all judgments. The impact that negative items such as public records have on your credit score will diminish over time.`,\n  },\n  RP88: {\n    factor: `You have no recent derogatory public records on your credit report`,\n    explain: `Public records include information filed or recorded by local, state, federal or other government agencies that is available to the general public. The types of public records that can affect your score include legal judgments against you and tax liens levied by a government authority. You have few or no public records on your credit report, which increases your score.`,\n    cando: `Pay all bills on-time and satisfy all judgments. The impact that negative items such as public records have on your credit score will diminish over time.`,\n  },\n  RP90: {\n    factor: `You have one or more discharged bankruptcies`,\n    explain: `You have one or more bankruptcies on your credit report. However, they have been discharged.`,\n    cando: `Make all future payments on time. The impact on your credit score from the bankruptcy will diminish over time.`,\n  },\n  RP92: {\n    factor: `No open student loan accounts in your credit file`,\n    explain: `The VantageScore credit score model relies on information in your credit files at the three national credit reporting companies (Equifax, Experian and TransUnion) to generate your score. A mix of different types of open and active credit accounts, including student loan accounts, can have a positive impact on your score.`,\n    cando: `Maintaining open and active credit accounts in good standing can help improve your credit score. `,\n  },\n  RP93: {\n    factor: `No student loan accounts with a severe delinquency or derogatory status`,\n    explain: `Paying your bills on time improves your score. You have paid all your student loans on time or no more than 30 days late. `,\n    cando: `Keep paying bills on time every month since it is important for maintaining a good credit score. If you remain behind with any payments, bring them current as soon as possible, and then make future payments on time. Over time, this will have a positive impact on your score.`,\n  },\n  RP94: {\n    factor: `Amount of balance paid down on open student loan accounts is not too low`,\n    explain: `The amount that has been paid down on your open student loan accounts is high. Paying down a high amount of your student loans increases your score.`,\n    cando: `As monthly student loan account payments are made, a portion of the outstanding principal balance is reduced, benefitting your score. Whenever possible, further pay down balances on your accounts. Over time this will also have a positive impact on your score.`,\n  },\n  RP95: {\n    factor: `You have few or no unpaid collection agency accounts`,\n    explain: `Some collection agencies report account information to credit bureaus just like lenders do. Your credit file has no or few accounts that have been sent to a collection agency and remain unpaid, which increases your score.`,\n    cando: `Satisfy all collection accounts and pay all other accounts on time each month. The impact that negative items such as collections accounts have on your credit score will diminish over time.`,\n  },\n  RP96: {\n    factor: `You have few or no collection agency account balances`,\n    explain: `Some collection agencies report account information to credit bureaus just like lenders do. Your credit file has no or few accounts that have been sent to a collection agency and remain unpaid, which increases your score.`,\n    cando: `Satisfy all collection accounts and pay all other accounts on time each month. The impact that negative items such as collections accounts have on your credit score will diminish over time.`,\n  },\n  RP98: {\n    factor: `There is no bankruptcy on your credit report`,\n    explain: `You have no bankruptcy on your credit report, which increases your score.`,\n    cando: `Keep paying bills on time every month since it is important for maintaining a good credit score. If you remain behind with any payments, bring them current as soon as possible, and then make future payments on time. Over time, this will have a positive impact on your score.`,\n  },\n}"
            },
            {
                "name": "preferences",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/credit-report/credit-report-pure/credit-report-pure.stories.ts",
                "type": "PreferencesStateModel",
                "defaultValue": "{\n  showAllAccounts: {\n    [CreditReportGroups.CreditCards]: true,\n    [CreditReportGroups.CollectionsAccounts]: true,\n    [CreditReportGroups.InstallmentLoans]: true,\n    [CreditReportGroups.Mortgages]: true,\n  },\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/badges/filled-onlytext-badge/filled-onlytext-badge.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/buttons/filled-onlytext-button/filled-onlytext-button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/buttons/outline-onlytext-button/outline-onlytext-button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/buttons/links-onlytext-button/links-onlytext-button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "primaryConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.stories.ts",
                "type": "IFilledClosingAlertConfig",
                "defaultValue": "{\n  size: 'base',\n  backgroundColor: 'bg-indigo-800',\n  color: 'text-white',\n  alertTitle: 'Alert!',\n  alertBody: 'Something went wrong. Please try again.',\n}"
            },
            {
                "name": "primaryConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/badges/filled-onlytext-badge/filled-onlytext-badge.stories.ts",
                "type": "IFilledOnlytextBadgeConfig",
                "defaultValue": "{\n  size: 'base',\n  backgroundColor: 'bg-indigo-200',\n  color: 'text-indigo-800',\n}"
            },
            {
                "name": "primaryConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/buttons/filled-onlytext-button/filled-onlytext-button.stories.ts",
                "type": "IFilledOnlyTextButtonConfig",
                "defaultValue": "{\n  buttonSize: 'base',\n  backgroundColor: 'bg-indigo-800',\n  activeColor: 'bg-indigo-900',\n  color: 'text-white',\n}"
            },
            {
                "name": "primaryConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/buttons/outline-onlytext-button/outline-onlytext-button.stories.ts",
                "type": "IOutlineOnlyTextButtonConfig",
                "defaultValue": "{\n  buttonSize: 'base',\n  borderColor: 'border-indigo-800',\n  activeColor: 'bg-indigo-900',\n  hoverColor: 'bg-indigo-800',\n  color: 'text-indigo-800',\n}"
            },
            {
                "name": "primaryConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/buttons/links-onlytext-button/links-onlytext-button.stories.ts",
                "type": "ILinksOnlyTextButtonConfig",
                "defaultValue": "{\n  buttonSize: 'base',\n  color: 'text-indigo-800',\n}"
            },
            {
                "name": "question",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/inputs/kba-multiplechoice-input/kba-multiplechoice-input.stories.ts",
                "type": "ITransunionKBAQuestion",
                "defaultValue": "{} as ITransunionKBAQuestion"
            },
            {
                "name": "remarks",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/tradelines/tradelines-pure/tradelines.stories.ts",
                "type": "",
                "defaultValue": "`This account was investigated two weeks ago per the client's request`"
            },
            {
                "name": "remarks",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/tradelines/tradeline-details/tradeline-details.stories.ts",
                "type": "",
                "defaultValue": "`This account was investigated two weeks ago per the client's request`"
            },
            {
                "name": "remarks",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/tradelines/tradeline-payments/tradeline-payments.stories.ts",
                "type": "",
                "defaultValue": "`This account was investigated two weeks ago per the client's request`"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "type": "literal type"
            },
            {
                "name": "returnNestedObject",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/utils/utils.ts",
                "type": "",
                "defaultValue": "(o: any, k: string): any => {\n  let value;\n  const _returnNestedObject = (obj: any) => {\n    Object.keys(obj).forEach((key) => {\n      if (key === k) value = obj[k];\n      if (typeof obj[key] === 'object' && obj[key] !== null) {\n        _returnNestedObject(obj[key]);\n      }\n    });\n  };\n  _returnNestedObject(o);\n  return value;\n}",
                "description": "<p>A utility function to find the first matching key in a nested object\n   use carefully. Does not iterate over arrays</p>\n"
            },
            {
                "name": "revolving",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/tradelines/tradeline-details/tradeline-details.stories.ts",
                "type": "IRevolvingTradelineDetails",
                "defaultValue": "{\n  dateOpened: '2020-01-10',\n  accountDesignator: 'James Credit',\n  late60Count: '10',\n  amountPastDue: 1200,\n  disputeFlag: 'No',\n}"
            },
            {
                "name": "Revolving",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/tradelines/tradeline-details/tradeline-details.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Right",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/tooltips/outline-tooltip/outline-tooltip.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/badges/filled-onlytext-badge/filled-onlytext-badge.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/buttons/filled-onlytext-button/filled-onlytext-button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "secondaryConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/badges/filled-onlytext-badge/filled-onlytext-badge.stories.ts",
                "type": "IFilledOnlytextBadgeConfig",
                "defaultValue": "{\n  size: 'base',\n  backgroundColor: 'bg-lightBlue-100',\n  color: 'text-indigo-800',\n}"
            },
            {
                "name": "secondaryConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/buttons/filled-onlytext-button/filled-onlytext-button.stories.ts",
                "type": "IFilledOnlyTextButtonConfig",
                "defaultValue": "{\n  buttonSize: 'base',\n  backgroundColor: 'bg-lightBlue-100',\n  activeColor: 'bg-lightBlue-200',\n  color: 'text-indigo-800',\n}"
            },
            {
                "name": "services",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/services/shared-services.module.ts",
                "type": "[]",
                "defaultValue": "[\n  AuthService,\n  APIService,\n  SyncService,\n  GuestService,\n  IamService,\n  KycService,\n  DashboardService,\n  TransunionService,\n]"
            },
            {
                "name": "sizeSpecificClass",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.pipe.ts",
                "type": "Record<string, any>",
                "defaultValue": "{\n  xs: 'max-w-xs',\n  sm: 'max-w-sm',\n  base: 'max-w-md',\n  lg: 'max-w-lg',\n  xl: 'max-w-xl',\n}"
            },
            {
                "name": "sizeSpecificClass",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/badges/filled-onlytext-badge/filled-onlytext-badge.pipe.ts",
                "type": "Record<string, any>",
                "defaultValue": "{\n  sm: 'text-xs px-2 py-1',\n  base: 'text-xs px-2 py-1',\n  lg: 'text-xs px-2 py-1',\n}"
            },
            {
                "name": "sizeSpecificClass",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/buttons/filled-onlytext-button/filled-onlytext-button.pipe.ts",
                "type": "Record<string, any>",
                "defaultValue": "{\n  sm: 'text-xs px-4 py-2 hover:shadow-md',\n  base: 'text-sm px-6 py-3 hover:shadow-lg',\n  lg: 'text-base px-8 py-3 hover:shadow-lg',\n}"
            },
            {
                "name": "sizeSpecificClass",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/buttons/outline-onlytext-button/outline-onlytext-button.pipe.ts",
                "type": "Record<string, any>",
                "defaultValue": "{\n  sm: 'text-xs px-4 py-2',\n  base: 'text-sm px-6 py-3',\n  lg: 'text-base px-8 py-3',\n}"
            },
            {
                "name": "sizeSpecificClass",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/buttons/links-onlytext-button/links-onlytext-button.pipe.ts",
                "type": "Record<string, any>",
                "defaultValue": "{\n  sm: 'text-xs px-3 py-1',\n  base: 'text-sm px-6 py-2',\n  lg: 'text-base px-8 py-3',\n}"
            },
            {
                "name": "sizeSpecificClass",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/inputs/outline-input/outline-input.pipe.ts",
                "type": "Record<string, any>",
                "defaultValue": "{\n  sm: 'text-sm px-3 py-1',\n  base: 'text-sm px-3 py-3',\n  lg: 'text-base px-3 py-4',\n}"
            },
            {
                "name": "sizeSpecificClass",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/inputs/outline-select-input/outline-select-input.pipe.ts",
                "type": "Record<string, any>",
                "defaultValue": "{\n  sm: 'text-sm px-1 py-1',\n  base: 'text-sm px-1 py-3',\n  lg: 'text-base px-1 py-4',\n}"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/buttons/filled-onlytext-button/filled-onlytext-button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/buttons/outline-onlytext-button/outline-onlytext-button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/buttons/links-onlytext-button/links-onlytext-button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/inputs/hidden-asterisk-input/hidden-asterisk-input.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/inputs/outline-input/outline-input.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/inputs/outline-select-input/outline-select-input.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "smallConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.stories.ts",
                "type": "IFilledClosingAlertConfig",
                "defaultValue": "{\n  size: 'sm',\n  backgroundColor: 'bg-indigo-800',\n  color: 'text-white',\n  alertTitle: 'Alert!',\n  alertBody: 'Something went wrong. Please try again.',\n}"
            },
            {
                "name": "smallConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/buttons/filled-onlytext-button/filled-onlytext-button.stories.ts",
                "type": "IFilledOnlyTextButtonConfig",
                "defaultValue": "{\n  buttonSize: 'sm',\n  backgroundColor: 'bg-fuchsia-500',\n  activeColor: 'bg-fuchsia-600',\n  color: 'text-white',\n}"
            },
            {
                "name": "smallConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/buttons/outline-onlytext-button/outline-onlytext-button.stories.ts",
                "type": "IOutlineOnlyTextButtonConfig",
                "defaultValue": "{\n  buttonSize: 'sm',\n  borderColor: 'border-indigo-800',\n  activeColor: 'bg-indigo-900',\n  hoverColor: 'bg-indigo-800',\n  color: 'text-indigo-800',\n}"
            },
            {
                "name": "smallConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/buttons/links-onlytext-button/links-onlytext-button.stories.ts",
                "type": "ILinksOnlyTextButtonConfig",
                "defaultValue": "{\n  buttonSize: 'sm',\n  color: 'text-indigo-800',\n}"
            },
            {
                "name": "smallConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/inputs/outline-input/outline-input.stories.ts",
                "type": "IOutlineInputeConfig",
                "defaultValue": "{\n  size: 'sm',\n  type: 'text',\n  label: 'Input label',\n  placeholder: 'Input text',\n  autocomplete: 'off',\n  value: '',\n}"
            },
            {
                "name": "smallConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/inputs/outline-select-input/outline-select-input.stories.ts",
                "type": "IOutlineSelectInputConfig",
                "defaultValue": "{\n  size: 'sm',\n  label: 'Input label',\n  autocomplete: 'off',\n  options: ['one', 'two', 'three'],\n}"
            },
            {
                "name": "ssn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/kyc-ssn-full/kyc-ssn-full/kyc-ssn-full.component.ts",
                "type": "Record<string, any>",
                "defaultValue": "{\n  'input-0': true,\n  'input-1': true,\n  'input-2': true,\n  'input-3': true,\n  'input-4': true,\n  'input-5': true,\n  'input-6': true,\n  'input-7': true,\n  'input-8': true,\n}"
            },
            {
                "name": "ssnMap",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/kyc-ssn/kyc-ssn/kyc-ssn.component.ts",
                "type": "Record<string, any>",
                "defaultValue": "{\n  'input-0': true,\n  'input-1': true,\n  'input-2': true,\n  'input-3': true,\n}"
            },
            {
                "name": "stack",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/progressbars/filled-checktext-progressbar/filled-checktext-progressbar.stories.ts",
                "type": "IProgressStep[]",
                "defaultValue": "[\n  { id: 0, active: true, complete: true, name: 'step 1' },\n  { id: 1, active: true, complete: true, name: 'step 2' },\n  { id: 2, active: true, complete: false, name: 'step 3' },\n]"
            },
            {
                "name": "states",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/forms/outline-address-form/outline-address-form.component.ts",
                "type": "[]",
                "defaultValue": "[\n  'AL',\n  'AK',\n  'AZ',\n  'AR',\n  'CA',\n  'CO',\n  'CT',\n  'DE',\n  'FL',\n  'GA',\n  'HI',\n  'ID',\n  'IL',\n  'IN',\n  'IA',\n  'KS',\n  'KY',\n  'LA',\n  'ME',\n  'MD',\n  'MA',\n  'MI',\n  'MN',\n  'MS',\n  'MO',\n  'MT',\n  'NE',\n  'NV',\n  'NH',\n  'NJ',\n  'NM',\n  'NY',\n  'NC',\n  'ND',\n  'OH',\n  'OK',\n  'OR',\n  'PA',\n  'RI',\n  'SC',\n  'SD',\n  'TN',\n  'TX',\n  'UT',\n  'VT',\n  'VA',\n  'WA',\n  'WV',\n  'WI',\n  'WY',\n]"
            },
            {
                "name": "statuses",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/cards/creditcard-card/account-status.pipe.ts",
                "type": "Record<Status, any>",
                "defaultValue": "{\n  excellent: 'bg-teal-500',\n  good: 'bg-amber-300',\n  okay: 'bg-orange-500',\n  poor: 'bg-rose-800',\n}"
            },
            {
                "name": "steps",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/progressbars/filled-checktext-progressbar/filled-checktext-progressbar.stories.ts",
                "type": "IProgressStep[]",
                "defaultValue": "[\n  { id: 0, active: true, complete: true, name: 'step 1' },\n  { id: 1, active: true, complete: true, name: 'step 2' },\n  { id: 2, active: true, complete: false, name: 'step 3' },\n  { id: 3, active: false, complete: false, name: 'step 4' },\n  { id: 4, active: false, complete: false, name: 'step 5' },\n]"
            },
            {
                "name": "Strong",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/badges/filled-onlytext-badge/filled-onlytext-badge.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "strongConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/badges/filled-onlytext-badge/filled-onlytext-badge.stories.ts",
                "type": "IFilledOnlytextBadgeConfig",
                "defaultValue": "{\n  size: 'base',\n  backgroundColor: 'bg-indigo-800',\n  color: 'text-lightBlue-100',\n}"
            },
            {
                "name": "Tag",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/cards/snapshot-display-card/snapshot-display-card.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/dashboard-init/dashboard-init.stories.ts",
                "type": "Story<DashboardInitComponent>",
                "defaultValue": "(args: any) => ({\n  component: DashboardInitComponent,\n  props: {\n    ...args,\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/signup-error/signup-error.stories.ts",
                "type": "Story<SignupErrorComponent>",
                "defaultValue": "(args: any) => ({\n  component: SignupErrorComponent,\n  props: {\n    ...args,\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/signup-error-validation/signup-error-validation.stories.ts",
                "type": "Story<SignupErrorValidationComponent>",
                "defaultValue": "(args: any) => ({\n  component: SignupErrorValidationComponent,\n  props: {\n    ...args,\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/signup-knowyou/signup-knowyou.stories.ts",
                "type": "Story<SignupKnowyouComponent>",
                "defaultValue": "(args: any) => ({\n  component: SignupKnowyouComponent,\n  props: {\n    ...args,\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/signup-thankyou/signup-thankyou.stories.ts",
                "type": "Story<SignupThankyouComponent>",
                "defaultValue": "(args: any) => ({\n  component: SignupThankyouComponent,\n  props: {\n    ...args,\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/typography/typography-accent-bg-cooltext.stories.ts",
                "type": "Story<any>",
                "defaultValue": "(args: any) => ({\n  props: {\n    ...args,\n  },\n  template: `\n  <div class=\"bg-fuchsia-500 p-4\">\n    <h1 class='font-headings font-extrabold text-5xl text-lightBlue-100'>H1 Heading</h1>\n    <h2 class='font-headings font-extrabold text-4xl text-lightBlue-100'>H2 Heading</h2>\n    <h3 class='font-headings font-extrabold text-3xl text-lightBlue-100'>H3 Heading</h3>\n    <h4 class='font-headings font-extrabold text-2xl text-lightBlue-100'>H4 Heading</h4>\n    <h5 class='font-headings font-extrabold text-xl text-lightBlue-100'>H5 Heading</h5>\n    <h6 class='font-headings font-extrabold text-lg text-lightBlue-100'>H6 Heading</h6>\n    <div style=\"margin: 10px 0px\"></div>\n    <p class='font-sans text-base text-lightBlue-100'>Body 1</p>\n    <p class='font-sans font-semibold text-base text-lightBlue-100'>Body 1-semibold</p>\n    <p class='font-sans text-sm text-lightBlue-100'>Body 2</p>\n    <p class='font-sans font-semibold text-sm text-lightBlue-100'>Body 2-semibold</p>\n  </div>\n    `,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/typography/typography-accent-bg.stories.ts",
                "type": "Story<any>",
                "defaultValue": "(args: any) => ({\n  props: {\n    ...args,\n  },\n  template: `\n  <div class=\"bg-fuchsia-500 p-4\">\n    <h1 class='font-headings font-extrabold text-5xl text-white'>H1 Heading</h1>\n    <h2 class='font-headings font-extrabold text-4xl text-white'>H2 Heading</h2>\n    <h3 class='font-headings font-extrabold text-3xl text-white'>H3 Heading</h3>\n    <h4 class='font-headings font-extrabold text-2xl text-white'>H4 Heading</h4>\n    <h5 class='font-headings font-extrabold text-xl text-white'>H5 Heading</h5>\n    <h6 class='font-headings font-extrabold text-lg text-white'>H6 Heading</h6>\n    <div style=\"margin: 10px 0px\"></div>\n    <p class='font-sans text-base text-white'>Body 1</p>\n    <p class='font-sans font-semibold text-base text-white'>Body 1-semibold</p>\n    <p class='font-sans text-sm text-white'>Body 2</p>\n    <p class='font-sans font-semibold text-sm text-white'>Body 2-semibold</p>\n  </div>\n    `,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/typography/typography-primary-bg-cooltext.stories.ts",
                "type": "Story<any>",
                "defaultValue": "(args: any) => ({\n  props: {\n    ...args,\n  },\n  template: `\n  <div class=\"bg-indigo-800 p-4\">\n    <h1 class='font-headings font-extrabold text-5xl text-lightBlue-100'>H1 Heading</h1>\n    <h2 class='font-headings font-extrabold text-4xl text-lightBlue-100'>H2 Heading</h2>\n    <h3 class='font-headings font-extrabold text-3xl text-lightBlue-100'>H3 Heading</h3>\n    <h4 class='font-headings font-extrabold text-2xl text-lightBlue-100'>H4 Heading</h4>\n    <h5 class='font-headings font-extrabold text-xl text-lightBlue-100'>H5 Heading</h5>\n    <h6 class='font-headings font-extrabold text-lg text-lightBlue-100'>H6 Heading</h6>\n    <div style=\"margin: 10px 0px\"></div>\n    <p class='font-sans text-base text-lightBlue-100'>Body 1</p>\n    <p class='font-sans font-semibold text-base text-lightBlue-100'>Body 1-semibold</p>\n    <p class='font-sans text-sm text-lightBlue-100'>Body 2</p>\n    <p class='font-sans font-semibold text-sm text-lightBlue-100'>Body 2-semibold</p>\n  </div>\n    `,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/typography/typography-primary-bg.stories.ts",
                "type": "Story<any>",
                "defaultValue": "(args: any) => ({\n  props: {\n    ...args,\n  },\n  template: `\n  <div class=\"bg-indigo-800 p-4\">\n    <h1 class='font-headings font-extrabold text-5xl text-white'>H1 Heading</h1>\n    <h2 class='font-headings font-extrabold text-4xl text-white'>H2 Heading</h2>\n    <h3 class='font-headings font-extrabold text-3xl text-white'>H3 Heading</h3>\n    <h4 class='font-headings font-extrabold text-2xl text-white'>H4 Heading</h4>\n    <h5 class='font-headings font-extrabold text-xl text-white'>H5 Heading</h5>\n    <h6 class='font-headings font-extrabold text-lg text-white'>H6 Heading</h6>\n    <div style=\"margin: 10px 0px\"></div>\n    <p class='font-sans text-base text-white'>Body 1</p>\n    <p class='font-sans font-semibold text-base text-white'>Body 1-semibold</p>\n    <p class='font-sans text-sm text-white'>Body 2</p>\n    <p class='font-sans font-semibold text-sm text-white'>Body 2-semibold</p>\n  </div>\n    `,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/typography/typography-transparent-bg.stories.ts",
                "type": "Story<any>",
                "defaultValue": "(args: any) => ({\n  props: {\n    ...args,\n  },\n  template: `\n    <h1 class='font-headings font-extrabold text-5xl text-coolGray-900'>H1 Heading</h1>\n    <h2 class='font-headings font-extrabold text-4xl text-coolGray-900'>H2 Heading</h2>\n    <h3 class='font-headings font-extrabold text-3xl text-coolGray-900'>H3 Heading</h3>\n    <h4 class='font-headings font-extrabold text-2xl text-coolGray-900'>H4 Heading</h4>\n    <h5 class='font-headings font-extrabold text-xl text-coolGray-900'>H5 Heading</h5>\n    <h6 class='font-headings font-extrabold text-lg text-coolGray-900'>H6 Heading</h6>\n    <div style=\"margin: 10px 0px\"></div>\n    <p class='font-sans text-base text-coolGray-700'>Body 1</p>\n    <p class='font-sans font-semibold text-base text-coolGray-700'>Body 1-semibold</p>\n    <p class='font-sans text-sm text-coolGray-700'>Body 2</p>\n    <p class='font-sans font-semibold text-sm text-coolGray-700'>Body 2-semibold</p>\n    `,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/credit-report/credit-report-pure/credit-report-pure.stories.ts",
                "type": "Story<CreditReportPureComponent>",
                "defaultValue": "(args: any) => ({\n  component: CreditReportPureComponent,\n  props: {\n    ...args,\n    creditReports: creditReports,\n    preferences: preferences,\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/kyc-address/kyc-address-pure/kyc-address-pure.stories.ts",
                "type": "Story<KycAddressPureComponent>",
                "defaultValue": "(args: any) => ({\n  component: KycAddressPureComponent,\n  props: {\n    ...args,\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/kyc-congratulations/kyc-congratulations-pure/kyc-congratulations-pure.stories.ts",
                "type": "Story<KycCongratulationsPureComponent>",
                "defaultValue": "(args: any) => ({\n  component: KycCongratulationsPureComponent,\n  props: {\n    ...args,\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/kyc-idverification/kyc-idverification-pure/kyc-idverification-pure.stories.ts",
                "type": "Story<KycIdverificationPureComponent>",
                "defaultValue": "(args: any) => ({\n  component: KycIdverificationPureComponent,\n  props: {\n    ...args,\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/kyc-kbaquestions/kyc-kbaquestions-pure/kyc-kbaquestions-pure.stories.ts",
                "type": "Story<KycKbaquestionsPureComponent>",
                "defaultValue": "(args: any) => ({\n  component: KycKbaquestionsPureComponent,\n  props: {\n    ...args,\n    kbas,\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/kyc-phonenumber/kyc-phonenumber-pure/kyc-phonenumber-pure.stories.ts",
                "type": "Story<KycPhonenumberPureComponent>",
                "defaultValue": "(args: any) => ({\n  component: KycPhonenumberPureComponent,\n  props: {\n    ...args,\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/kyc-ssn/kyc-ssn-pure/kyc-ssn-pure.stories.ts",
                "type": "Story<KycSsnPureComponent>",
                "defaultValue": "(args: any) => ({\n  component: KycSsnPureComponent,\n  props: {\n    ...args,\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/kyc-ssn-full/kyc-ssn-full-pure/kyc-ssn-full-pure.stories.ts",
                "type": "Story<KycSsnFullPureComponent>",
                "defaultValue": "(args: any) => ({\n  component: KycSsnFullPureComponent,\n  props: {\n    ...args,\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/kyc-welcome/kyc-welcome-pure/kyc-welcome-pure.stories.ts",
                "type": "Story<KycWelcomePureComponent>",
                "defaultValue": "(args: any) => ({\n  props: {\n    ...args,\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/kyc-welcomeback/kyc-welcomeback-pure/kyc-welcomeback-pure.stories.ts",
                "type": "Story<KycWelcomebackPureComponent>",
                "defaultValue": "(args: any) => ({\n  component: KycWelcomebackPureComponent,\n  props: {\n    ...args,\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/negative-account/negative-account-initial-pure/negative-account-initial-pure.stories.ts",
                "type": "Story<NegativeAccountInitialPureComponent>",
                "defaultValue": "(args: any) => ({\n  component: NegativeAccountInitialPureComponent,\n  props: {\n    ...args,\n    cards,\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/signup/signup-pure/signup-pure.stories.ts",
                "type": "Story<SignupPureComponent>",
                "defaultValue": "(args: any) => ({\n  component: SignupPureComponent,\n  props: {\n    ...args,\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/tradelines/tradelines-pure/tradelines.stories.ts",
                "type": "Story<TradelinesPureComponent>",
                "defaultValue": "(args: any) => ({\n  component: TradelinesPureComponent,\n  props: {\n    ...args,\n    details: installment,\n    remarks: remarks,\n    address: address,\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.stories.ts",
                "type": "Story<FilledClosingAlertComponent>",
                "defaultValue": "(args: any) => ({\n  component: FilledClosingAlertComponent,\n  props: {\n    ...args,\n    showAlert: true,\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/badges/filled-onlytext-badge/filled-onlytext-badge.stories.ts",
                "type": "Story<FilledOnlytextBadgeComponent>",
                "defaultValue": "(args: any) => ({\n  props: {\n    ...args,\n  },\n  template: `<brave-filled-onlytext-badge>Badge</brave-filled-onlytext-badge>`,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/buttons/filled-onlytext-button/filled-onlytext-button.stories.ts",
                "type": "Story<FilledOnlytextButtonComponent>",
                "defaultValue": "(args: any) => ({\n  props: {\n    ...args,\n  },\n  template: `<brave-filled-onlytext-button>Default</brave-filled-onlytext-button>`,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/buttons/viewdetail-button/viewdetail-button.stories.ts",
                "type": "Story<ViewdetailButtonComponent>",
                "defaultValue": "(args: any) => ({\n  props: {\n    ...args,\n  },\n  template: `\n  <span style=\"p-6 width: 120px\">\n    <brave-viewdetail-button>View Details</brave-viewdetail-button>\n  </span>\n  `,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/buttons/outline-onlytext-button/outline-onlytext-button.stories.ts",
                "type": "Story<OutlineOnlytextButtonComponent>",
                "defaultValue": "(args: any) => ({\n  props: {\n    ...args,\n  },\n  template: `<brave-outline-onlytext-button>Default</brave-outline-onlytext-button>`,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/buttons/links-onlytext-button/links-onlytext-button.stories.ts",
                "type": "Story<LinksOnlytextButtonComponent>",
                "defaultValue": "(args: any) => ({\n  props: {\n    ...args,\n  },\n  template: `<brave-links-onlytext-button>My Link</brave-links-onlytext-button>`,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/cards/credit-builder-card/credit-builder-card.stories.ts",
                "type": "Story<CreditBuilderCardComponent>",
                "defaultValue": "(args: any) => ({\n  component: CreditBuilderCardComponent,\n  props: {\n    ...args\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/cards/creditcard-card/creditcard-card.stories.ts",
                "type": "Story<CreditcardCardComponent>",
                "defaultValue": "(args: any) => ({\n  component: CreditcardCardComponent,\n  props: {\n    ...args,\n    status: 'excellent',\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/cards/loan-card/loan-card.stories.ts",
                "type": "Story<LoanCardComponent>",
                "defaultValue": "(args: any) => ({\n  component: LoanCardComponent,\n  props: {\n    ...args,\n    status: 'good',\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/cards/negative-account-card/negative-account-card.stories.ts",
                "type": "Story<NegativeAccountCardComponent>",
                "defaultValue": "(args: any) => ({\n  component: NegativeAccountCardComponent,\n  props: {\n    ...args,\n    creditorName:\"A.R.M. Solutions\",\n    lastReported:\"29/09/2020\",\n    accountTypeDescription:\"90-Day Late Payment\",\n    accountTypeDescriptionValue:\"Open\",\n    originalCreditor:\"Original Creditor\",\n    originalCreditorValue:\"Bank Of America\",\n    disputeFlag:\"Previously Disputed?\",\n    disputeFlagValue:\"No\",\n    accountNumber:\"066611222\",\n    typeOfCollection:\"Collections\",\n    amountPastDue:700,\n    dateOpened:\"04/12/2018\",\n    dateLastPayment:\"04/21/2018\"\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/cards/snapshot-display-card/snapshot-display-card.stories.ts",
                "type": "Story<SnapshotDisplayCardComponent>",
                "defaultValue": "(args: any) => ({\n  component: SnapshotDisplayCardComponent,\n  props: {\n    ...args\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/cards/credit-report-card/credit-report-card.stories.ts",
                "type": "Story<CreditReportCardComponent>",
                "defaultValue": "(args: any) => ({\n  component: CreditReportCardComponent,\n  props: {\n    ...args\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/inputs/hidden-asterisk-input/hidden-asterisk-input.stories.ts",
                "type": "Story<HiddenAsteriskInputComponent>",
                "defaultValue": "(args: any) => ({\n  component: HiddenAsteriskInputComponent,\n  props: {\n    ...args,\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/inputs/kba-multiplechoice-input/kba-multiplechoice-input.stories.ts",
                "type": "Story<KbaMultiplechoiceInputComponent>",
                "defaultValue": "(args: any) => ({\n  props: {\n    ...args,\n    question,\n  },\n  template: `<brave-kba-multiplechoice-input [question]=\"question\"></brave-kba-multiplechoice-input>`,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/inputs/outline-input/outline-input.stories.ts",
                "type": "Story<OutlineInputComponent>",
                "defaultValue": "(args: any) => ({\n  component: OutlineInputComponent,\n  props: {\n    ...args,\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/inputs/outline-select-input/outline-select-input.stories.ts",
                "type": "Story<OutlineSelectInputComponent>",
                "defaultValue": "(args: any) => ({\n  component: OutlineSelectInputComponent,\n  props: {\n    ...args,\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/forms/kbaquestions-form/kbaquestions-form.stories.ts",
                "type": "Story<KbaquestionsFormComponent>",
                "defaultValue": "(args: any) => ({\n  props: {\n    ...args,\n    kbas,\n    required: true,\n  },\n  template: `<brave-kbaquestions-form [kbas]=\"kbas\"></brave-kbaquestions-form>`,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/forms/outline-address-form/outline-address-form.stories.ts",
                "type": "Story<OutlineAddressFormComponent>",
                "defaultValue": "(args: any) => ({\n  component: OutlineAddressFormComponent,\n  props: {\n    ...args,\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/forms/outline-name-form/outline-name-form.stories.ts",
                "type": "Story<OutlineNameFormComponent>",
                "defaultValue": "(args: any) => ({\n  component: OutlineNameFormComponent,\n  props: {\n    ...args,\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/forms/outline-onecolumn-form/outline-onecolumn-form.stories.ts",
                "type": "Story<OutlineOnecolumnFormComponent>",
                "defaultValue": "(args: any) => ({\n  component: OutlineOnecolumnFormComponent,\n  props: {\n    ...args,\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/forms/outline-phone-form/outline-phone-form.stories.ts",
                "type": "Story<OutlinePhoneFormComponent>",
                "defaultValue": "(args: any) => ({\n  component: OutlinePhoneFormComponent,\n  props: {\n    ...args,\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/forms/outline-verificationcode-form/outline-verificationcode-form.stories.ts",
                "type": "Story<OutlineVerificationcodeFormComponent>",
                "defaultValue": "(args: any) => ({\n  component: OutlineVerificationcodeFormComponent,\n  props: {\n    ...args,\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/forms/select-dob-form/select-dob-form.stories.ts",
                "type": "Story<SelectDobFormComponent>",
                "defaultValue": "(args: any) => ({\n  component: SelectDobFormComponent,\n  props: {\n    ...args,\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/forms/ssn-full-form/ssn-full-form.stories.ts",
                "type": "Story<SsnFullFormComponent>",
                "defaultValue": "(args: any) => ({\n  component: SsnFullFormComponent,\n  props: {\n    ...args,\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/forms/simple-signup-form/simple-signup-form.stories.ts",
                "type": "Story<SimpleSignupFormComponent>",
                "defaultValue": "(args: any) => ({\n  component: SimpleSignupFormComponent,\n  props: {\n    ...args,\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/forms/ssn-lastfour-form/ssn-lastfour-form.stories.ts",
                "type": "Story<SsnLastfourFormComponent>",
                "defaultValue": "(args: any) => ({\n  props: {\n    ...args,\n  },\n  template: `<brave-ssn-lastfour-form></brave-ssn-lastfour-form>`,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/interstitials/spinner/spinner.stories.ts",
                "type": "Story<SpinnerComponent>",
                "defaultValue": "(args: any) => ({\n  props: {\n    ...args,\n  },\n  template: `<div style=\"width: 75vw; height: 74vh\"><brave-spinner></brave-spinner></div>`,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/modals/base-modal-regular/base-modal-regular.stories.ts",
                "type": "Story<BaseModalRegularComponent>",
                "defaultValue": "(args: any) => ({\n  props: {\n    ...args,\n    config,\n  },\n  template: `<brave-base-modal-regular [config]=\"config\"></brave-base-modal-regular>`,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/modals/base-modal-small/base-modal-small.stories.ts",
                "type": "Story<BaseModalSmallComponent>",
                "defaultValue": "(args: any) => ({\n  props: {\n    ...args,\n    config,\n  },\n  template: `<brave-base-modal-small [config]=\"config\"></brave-base-modal-small>`,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/navbars/dashboard-navbar/dashboard-navbar.stories.ts",
                "type": "Story<DashboardNavbarComponent>",
                "defaultValue": "(args: any) => ({\n  props: {\n    ...args,\n  },\n  template: `<brave-dashboard-navbar><brave-dashboard-navbar>`,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/progressbars/filled-checktext-progressbar/filled-checktext-progressbar.stories.ts",
                "type": "Story<FilledChecktextProgressbarComponent>",
                "defaultValue": "(args: any) => ({\n  props: {\n    ...args,\n    stack,\n    config,\n  },\n  template: `<brave-filled-checktext-progressbar [config]=\"config\" [steps]=\"steps\"><brave-filled-checktext-progressbar>`,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/paginations/outline-prevnext-pagination/outline-prevnext-pagination.stories.ts",
                "type": "Story<any>",
                "defaultValue": "(args: any) => ({\n  component: OutlinePrevnextPaginationComponent,\n  props: {\n    ...args,\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/tooltips/outline-tooltip/outline-tooltip.stories.ts",
                "type": "Story<OutlineTooltipComponent>",
                "defaultValue": "(args: any) => ({\n  component: OutlineTooltipComponent,\n  props: {\n    ...args,\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/tabs/filled-onlytext-tabs/filled-onlytext-tabs.stories.ts",
                "type": "Story<any>",
                "defaultValue": "(args: any) => ({\n  component: FilledOnlytextTabsComponent,\n  props: {\n    ...args,\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/tabs/navigation-tabs/navigation-tabs.stories.ts",
                "type": "Story<any>",
                "defaultValue": "(args: any) => ({\n  component: NavigationTabsComponent,\n  props: {\n    ...args,\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/tradelines/tradeline-details/tradeline-details.stories.ts",
                "type": "Story<TradelineDetailsComponent>",
                "defaultValue": "(args: any) => ({\n  component: TradelineDetailsComponent,\n  props: {\n    ...args,\n    remarks: remarks,\n    address: address,\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/tradelines/tradeline-payments/tradeline-payments.stories.ts",
                "type": "Story<TradelinePaymentsComponent>",
                "defaultValue": "(args: any) => ({\n  component: TradelinePaymentsComponent,\n  props: {\n    ...args,\n    remarks: remarks,\n    address: address,\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/tradelines/tradeline-payment-history/tradeline-payment-history.stories.ts",
                "type": "Story<TradelinePaymentHistoryComponent>",
                "defaultValue": "(args: any) => ({\n  component: TradelinePaymentHistoryComponent,\n  props: {\n    ...args,\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/tradelines/tradeline-summary/tradeline-summary.stories.ts",
                "type": "Story<TradelineSummaryComponent>",
                "defaultValue": "(args: any) => ({\n  component: TradelineSummaryComponent,\n  props: {\n    ...args,\n  },\n  template: `\n    <div class=\"container mx-auto max-w-xs h-full\">\n      <brave-tradeline-summary\n        [status]=\"'Open'\"\n      ></brave-tradeline-summary>\n    </div>`,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/tradelines/tradeline-payment-icon/tradeline-payment-icon.stories.ts",
                "type": "Story<TradelinePaymentIconComponent>",
                "defaultValue": "(args: any) => ({\n  component: TradelinePaymentIconComponent,\n  props: {\n    ...args,\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/dropdowns/popdowns/notification-dropdown/notification-dropdown.stories.ts",
                "type": "Story<NotificationDropdownComponent>",
                "defaultValue": "(args: any) => ({\n  component: NotificationDropdownComponent,\n  props: {\n    ...args,\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/dropdowns/popdowns/table-dropdown/table-dropdown.stories.ts",
                "type": "Story<TableDropdownComponent>",
                "defaultValue": "(args: any) => ({\n  component: TableDropdownComponent,\n  props: {\n    ...args,\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/dropdowns/popdowns/user-dropdown/user-dropdown.stories.ts",
                "type": "Story<UserDropdownComponent>",
                "defaultValue": "(args: any) => ({\n  component: UserDropdownComponent,\n  props: {\n    ...args,\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/dropdowns/selects/outline-onlytext-select/outline-onlytext-select.stories.ts",
                "type": "Story<OutlineOnlytextSelectComponent>",
                "defaultValue": "(args: any) => ({\n  props: {\n    ...args,\n    items,\n  },\n  template: `\n  <brave-outline-onlytext-select [items]=\"items\"></brave-outline-onlytext-select>\n  `,\n})"
            },
            {
                "name": "Time",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/cards/snapshot-display-card/snapshot-display-card.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Top",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/tooltips/outline-tooltip/outline-tooltip.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.module.ts",
                "type": "",
                "defaultValue": "awsconfig.oauth.redirectSignIn.split(',')"
            },
            {
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.module.ts",
                "type": "",
                "defaultValue": "awsconfig.oauth.redirectSignOut.split(',')"
            },
            {
                "name": "Unknown",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/tradelines/tradeline-payment-icon/tradeline-payment-icon.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "UNKNOWN_PAY_STATUS_CODES",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/data/pay-status-codes.ts",
                "type": "Record<string, any>",
                "defaultValue": "{\n  U: `No Data / Unknown`,\n  '0': `Too New to Rate`,\n  '7': `Wage Earner Plan`,\n}"
            },
            {
                "name": "updatedAwsConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.module.ts",
                "type": "object",
                "defaultValue": "{\n  ...awsconfig,\n  oauth: {\n    ...awsconfig.oauth,\n    redirectSignIn: isLocalhost\n      ? localRedirectSignIn\n      : productionRedirectSignIn,\n    redirectSignOut: isLocalhost\n      ? localRedirectSignOut\n      : productionRedirectSignOut,\n  },\n}"
            },
            {
                "name": "updateNestedObject",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/utils/utils.ts",
                "type": "",
                "defaultValue": "(o: any, k: string, v: any): any => {\n  const obj = Object.assign({}, o);\n  _updateNestedRecurse(obj, k, v);\n  return obj;\n}",
                "description": "<p>A utility function to update deep nested objects\nWill update all keys of the name you specify</p>\n"
            },
            {
                "name": "views",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/views.module.ts",
                "type": "[]",
                "defaultValue": "[\n  SignupComponent,\n  SignupPureComponent,\n  SignupErrorComponent,\n  SignupErrorValidationComponent,\n  SignupKnowyouComponent,\n  SignupThankyouComponent,\n  SignupResendComponent,\n  SigninComponent,\n  SigninPureComponent,\n  SigninForgotComponent,\n  SigninRedirectComponent,\n  KycBaseComponent,\n  KycAddressComponent,\n  KycAddressPureComponent,\n  KycCongratulationsComponent,\n  KycCongratulationsPureComponent,\n  KycIdverificationComponent,\n  KycIdverificationPureComponent,\n  KycKbaquestionsComponent,\n  KycKbaquestionsPureComponent,\n  KycPhonenumberComponent,\n  KycPhonenumberPureComponent,\n  KycSsnComponent,\n  KycSsnPureComponent,\n  KycSsnFullComponent,\n  KycSsnFullPureComponent,\n  KycWelcomeComponent,\n  KycWelcomePureComponent,\n  KycWelcomebackComponent,\n  KycWelcomebackPureComponent,\n  KycErrorComponent,\n  CompliancePrivacyComponent,\n  ComplianceTosComponent,\n  DashboardInitComponent,\n  NegativeAccountInitialComponent,\n  NegativeAccountInitialPureComponent,\n  CreditReportPureComponent,\n  CreditReportComponent,\n  TradelinesComponent,\n  TradelinesPureComponent,\n]"
            }
        ],
        "functions": [
            {
                "name": "BraveEmailValidator",
                "file": "src/app/shared/validators/email.validator.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "description": "",
                "args": [
                    {
                        "name": "control"
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "control",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        ],
        "typealiases": [
            {
                "name": "Address",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/shared/services/aws/api.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "AddressInput",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/shared/services/aws/api.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "Agencies",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/shared/services/aws/api.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "AgenciesInput",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/shared/services/aws/api.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "AppData",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/shared/services/aws/api.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "CreateAppDataInput",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/shared/services/aws/api.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "CreateAppDataMutation",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/shared/services/aws/api.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "DeleteAppDataInput",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/shared/services/aws/api.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "DeleteAppDataMutation",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/shared/services/aws/api.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "Dob",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/shared/services/aws/api.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "DobInput",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/shared/services/aws/api.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "Equifax",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/shared/services/aws/api.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "EquifaxInput",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/shared/services/aws/api.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "Experian",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/shared/services/aws/api.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "ExperianInput",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/shared/services/aws/api.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "GetAppDataQuery",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/shared/services/aws/api.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "KycIdverificationState",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"init\" | \"sent\" | \"error\"",
                "file": "src/app/views/kyc-idverification/kyc-idverification/kyc-idverification.component.ts",
                "description": "",
                "kind": 168
            },
            {
                "name": "ListAppDatasQuery",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/shared/services/aws/api.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "ModelAppDataConditionInput",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/shared/services/aws/api.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "ModelAppDataConnection",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/shared/services/aws/api.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "ModelAppDataFilterInput",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/shared/services/aws/api.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "ModelIDInput",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/shared/services/aws/api.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "ModelSizeInput",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/shared/services/aws/api.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "Mutable",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/app/shared/utils/types.ts",
                "description": "<p>To change read only types to mutable\nExample:\ninterface Foo {\n   readonly bar: boolean;\n}</p>\n<p>const Bar: Foo = {\n    bar: false\n}</p>\n<p>const FooBar = {...Bar} as DeepWriteable<Foo>\nBar.bar = true; // ERROR!!\nFooBar.bar = true; // OK\nFooBar.bar = false; // OK</p>\n",
                "kind": 176
            },
            {
                "name": "Name",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/shared/services/aws/api.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "NameInput",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/shared/services/aws/api.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "Onboarding",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/shared/services/aws/api.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "OnboardingInput",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/shared/services/aws/api.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "OnCreateAppDataSubscription",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/shared/services/aws/api.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "OnDeleteAppDataSubscription",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/shared/services/aws/api.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "OnUpdateAppDataSubscription",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/shared/services/aws/api.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "Phone",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/shared/services/aws/api.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "PhoneInput",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/shared/services/aws/api.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "Preferences",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/shared/services/aws/api.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "PreferencesInput",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/shared/services/aws/api.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "ShowAccountsPreference",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/shared/services/aws/api.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "ShowAccountsPreferenceInput",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/shared/services/aws/api.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "SnapshotTendency",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"up\" | \"down\" | \"no-tendency\"",
                "file": "src/app/shared/components/cards/snapshot-display-card/snapshot-display-card.component.ts",
                "description": "",
                "kind": 168
            },
            {
                "name": "Ssn",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/shared/services/aws/api.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "SsnInput",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/shared/services/aws/api.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "Status",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"excellent\" | \"good\" | \"okay\" | \"poor\"",
                "file": "src/app/shared/components/cards/creditcard-card/creditcard-card.component.ts",
                "description": "",
                "kind": 168
            },
            {
                "name": "Status",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"excellent\" | \"good\" | \"okay\" | \"poor\"",
                "file": "src/app/shared/components/cards/loan-card/loan-card.component.ts",
                "description": "",
                "kind": 168
            },
            {
                "name": "Status",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"excellent\" | \"good\" | \"okay\" | \"poor\"",
                "file": "src/app/shared/components/cards/snapshot-display-card/snapshot-display-card.component.ts",
                "description": "",
                "kind": 168
            },
            {
                "name": "Transunion",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/shared/services/aws/api.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "TransunionInput",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/shared/services/aws/api.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "TUEnrollResponse",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/shared/services/aws/api.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "TUEnrollResponseInput",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/shared/services/aws/api.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "typename",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/app/store/app-data/app-data.model.ts",
                "description": "",
                "kind": 177
            },
            {
                "name": "typename",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/app/store/onboarding/onboarding.model.ts",
                "description": "",
                "kind": 177
            },
            {
                "name": "typename",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/app/store/user/user.model.ts",
                "description": "",
                "kind": 177
            },
            {
                "name": "TypeOfDate",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"Years\" | \"Months\" | \"Days\"",
                "file": "src/app/shared/components/cards/snapshot-display-card/snapshot-display-card.component.ts",
                "description": "",
                "kind": 168
            },
            {
                "name": "TypeOfSnapshot",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"date\" | \"percentage\" | \"digit\" | \"tag\" | \"time\"",
                "file": "src/app/shared/components/cards/snapshot-display-card/snapshot-display-card.component.ts",
                "description": "",
                "kind": 168
            },
            {
                "name": "UpdateAppDataInput",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/shared/services/aws/api.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "UpdateAppDataMutation",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/shared/services/aws/api.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "User",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/shared/services/aws/api.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "UserAttributes",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/shared/services/aws/api.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "UserAttributesInput",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/shared/services/aws/api.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "UserInput",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/shared/services/aws/api.service.ts",
                "description": "",
                "kind": 165
            }
        ],
        "enumerations": [
            {
                "name": "CreditReportGroups",
                "childs": [
                    {
                        "name": "CreditCards",
                        "value": "creditCards"
                    },
                    {
                        "name": "CollectionsAccounts",
                        "value": "collectionsAccounts"
                    },
                    {
                        "name": "InstallmentLoans",
                        "value": "installmentLoans"
                    },
                    {
                        "name": "Mortgages",
                        "value": "mortgages"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "description": "",
                "file": "src/app/shared/data/credit-report.ts"
            },
            {
                "name": "CreditReportStatus",
                "childs": [
                    {
                        "name": "Critical",
                        "value": "critical"
                    },
                    {
                        "name": "Danger",
                        "value": "danger"
                    },
                    {
                        "name": "Safe",
                        "value": "safe"
                    },
                    {
                        "name": "Default",
                        "value": "default"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "description": "",
                "file": "src/app/shared/components/graphics/credit-report-graphic/credit-report-graphic.pipe.ts"
            },
            {
                "name": "KYCResponse",
                "childs": [
                    {
                        "name": "Failed",
                        "value": "failed"
                    },
                    {
                        "name": "Success",
                        "value": "success"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "description": "",
                "file": "src/app/shared/services/kyc/kyc.service.ts"
            },
            {
                "name": "LabelOfSnapshot",
                "childs": [
                    {
                        "name": "Update",
                        "value": "update"
                    },
                    {
                        "name": "Hidden",
                        "value": "hidden"
                    },
                    {
                        "name": "New",
                        "value": "new"
                    },
                    {
                        "name": "NoLabel",
                        "value": "no-label"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "description": "",
                "file": "src/app/shared/components/cards/snapshot-display-card/snapshot-label.pipe.ts"
            },
            {
                "name": "ModelAttributeTypes",
                "childs": [
                    {
                        "name": "binary",
                        "value": "binary"
                    },
                    {
                        "name": "binarySet",
                        "value": "binarySet"
                    },
                    {
                        "name": "bool",
                        "value": "bool"
                    },
                    {
                        "name": "list",
                        "value": "list"
                    },
                    {
                        "name": "map",
                        "value": "map"
                    },
                    {
                        "name": "number",
                        "value": "number"
                    },
                    {
                        "name": "numberSet",
                        "value": "numberSet"
                    },
                    {
                        "name": "string",
                        "value": "string"
                    },
                    {
                        "name": "stringSet",
                        "value": "stringSet"
                    },
                    {
                        "name": "_null",
                        "value": "_null"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "description": "",
                "file": "src/app/shared/services/aws/api.service.ts"
            },
            {
                "name": "OTPQuestion",
                "childs": [
                    {
                        "name": "FullText",
                        "value": "Please select your preferred method of Authentication?(Standard text message and voice rates apply)*</FullQuestionText"
                    },
                    {
                        "name": "PartialOne",
                        "value": "preferred method of Authentication"
                    },
                    {
                        "name": "PartialTwo",
                        "value": "Standard text message and voice rates apply"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "description": "",
                "file": "src/app/shared/services/kyc/kyc.service.ts"
            },
            {
                "name": "OTPReponse",
                "childs": [
                    {
                        "name": "FullText",
                        "value": "Deliver passcode via Text Message"
                    },
                    {
                        "name": "PartialOne",
                        "value": "via Text Message"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "description": "",
                "file": "src/app/shared/services/kyc/kyc.service.ts"
            },
            {
                "name": "PassCodeQuestion",
                "childs": [
                    {
                        "name": "FullText",
                        "value": "Enter the passcode you received"
                    },
                    {
                        "name": "PartialOne",
                        "value": "passcode"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "description": "",
                "file": "src/app/shared/services/kyc/kyc.service.ts"
            },
            {
                "name": "SnapshotStatus",
                "childs": [
                    {
                        "name": "Critical",
                        "value": "critical"
                    },
                    {
                        "name": "Danger",
                        "value": "danger"
                    },
                    {
                        "name": "Safe",
                        "value": "safe"
                    },
                    {
                        "name": "Default",
                        "value": "default"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "description": "",
                "file": "src/app/shared/components/cards/snapshot-display-card/snapshot-display-card.component.ts"
            },
            {
                "name": "TradelineIcons",
                "childs": [
                    {
                        "name": "Late",
                        "value": "late"
                    },
                    {
                        "name": "Collection",
                        "value": "collection"
                    },
                    {
                        "name": "Unknown",
                        "value": "unknown"
                    },
                    {
                        "name": "Current",
                        "value": "current"
                    },
                    {
                        "name": "Other",
                        "value": "other"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "description": "",
                "file": "src/app/shared/components/tradelines/tradeline-payment-icon/tradeline-payment-icon.component.ts"
            }
        ],
        "groupedVariables": {
            "src/app/shared/utils/utils.ts": [
                {
                    "name": "_deleteKeyNestedObject",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/utils/utils.ts",
                    "type": "",
                    "defaultValue": "(o: any, k: string) => {\n  if (!o) return;\n  delete o[k];\n  Object.keys(o).forEach((key) => {\n    if (typeof o[key] === 'object') {\n      _deleteKeyNestedObject(o[key], k);\n    }\n  });\n}"
                },
                {
                    "name": "_updateNestedRecurse",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/utils/utils.ts",
                    "type": "",
                    "defaultValue": "(o: any, k: string, v: any) => {\n  if (!o) return;\n  Object.keys(o).forEach((key) => {\n    if (key == k) o[k] = v;\n    if (typeof o[key] === 'object') {\n      _updateNestedRecurse(o[key], k, v);\n    }\n  });\n}"
                },
                {
                    "name": "deleteKeyNestedObject",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/utils/utils.ts",
                    "type": "",
                    "defaultValue": "(o: any, k: string) => {\n  const obj = Object.assign({}, o);\n  _deleteKeyNestedObject(obj, k);\n  return obj;\n}",
                    "description": "<p>A utility function to remove unwanted fields by key\nWill delete all keys of the name you specify</p>\n"
                },
                {
                    "name": "returnNestedObject",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/utils/utils.ts",
                    "type": "",
                    "defaultValue": "(o: any, k: string): any => {\n  let value;\n  const _returnNestedObject = (obj: any) => {\n    Object.keys(obj).forEach((key) => {\n      if (key === k) value = obj[k];\n      if (typeof obj[key] === 'object' && obj[key] !== null) {\n        _returnNestedObject(obj[key]);\n      }\n    });\n  };\n  _returnNestedObject(o);\n  return value;\n}",
                    "description": "<p>A utility function to find the first matching key in a nested object\n   use carefully. Does not iterate over arrays</p>\n"
                },
                {
                    "name": "updateNestedObject",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/utils/utils.ts",
                    "type": "",
                    "defaultValue": "(o: any, k: string, v: any): any => {\n  const obj = Object.assign({}, o);\n  _updateNestedRecurse(obj, k, v);\n  return obj;\n}",
                    "description": "<p>A utility function to update deep nested objects\nWill update all keys of the name you specify</p>\n"
                }
            ],
            "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.stories.ts": [
                {
                    "name": "Accent",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "accentConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.stories.ts",
                    "type": "IFilledClosingAlertConfig",
                    "defaultValue": "{\n  size: 'base',\n  backgroundColor: 'bg-fuchsia-500',\n  color: 'text-white',\n  alertTitle: 'Alert!',\n  alertBody: 'Something went wrong. Please try again.',\n}"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "ExtraLarge",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "extraLargeConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.stories.ts",
                    "type": "IFilledClosingAlertConfig",
                    "defaultValue": "{\n  size: 'xl',\n  backgroundColor: 'bg-indigo-800',\n  color: 'text-white',\n  alertTitle: 'Alert!',\n  alertBody: 'Something went wrong. Please try again.',\n}"
                },
                {
                    "name": "ExtraSmall",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "extraSmallConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.stories.ts",
                    "type": "IFilledClosingAlertConfig",
                    "defaultValue": "{\n  size: 'xs',\n  backgroundColor: 'bg-indigo-800',\n  color: 'text-white',\n  alertTitle: 'Alert!',\n  alertBody: 'Something went wrong. Please try again.',\n}"
                },
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "largeConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.stories.ts",
                    "type": "IFilledClosingAlertConfig",
                    "defaultValue": "{\n  size: 'lg',\n  backgroundColor: 'bg-indigo-800',\n  color: 'text-white',\n  alertTitle: 'Alert!',\n  alertBody: 'Something went wrong. Please try again.',\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "primaryConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.stories.ts",
                    "type": "IFilledClosingAlertConfig",
                    "defaultValue": "{\n  size: 'base',\n  backgroundColor: 'bg-indigo-800',\n  color: 'text-white',\n  alertTitle: 'Alert!',\n  alertBody: 'Something went wrong. Please try again.',\n}"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "smallConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.stories.ts",
                    "type": "IFilledClosingAlertConfig",
                    "defaultValue": "{\n  size: 'sm',\n  backgroundColor: 'bg-indigo-800',\n  color: 'text-white',\n  alertTitle: 'Alert!',\n  alertBody: 'Something went wrong. Please try again.',\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.stories.ts",
                    "type": "Story<FilledClosingAlertComponent>",
                    "defaultValue": "(args: any) => ({\n  component: FilledClosingAlertComponent,\n  props: {\n    ...args,\n    showAlert: true,\n  },\n})"
                }
            ],
            "src/app/shared/components/badges/filled-onlytext-badge/filled-onlytext-badge.stories.ts": [
                {
                    "name": "Accent",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/badges/filled-onlytext-badge/filled-onlytext-badge.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "accentConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/badges/filled-onlytext-badge/filled-onlytext-badge.stories.ts",
                    "type": "IFilledOnlytextBadgeConfig",
                    "defaultValue": "{\n  size: 'base',\n  backgroundColor: 'bg-fuchsia-200',\n  color: 'text-fuchsia-500',\n}"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/badges/filled-onlytext-badge/filled-onlytext-badge.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/badges/filled-onlytext-badge/filled-onlytext-badge.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "primaryConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/badges/filled-onlytext-badge/filled-onlytext-badge.stories.ts",
                    "type": "IFilledOnlytextBadgeConfig",
                    "defaultValue": "{\n  size: 'base',\n  backgroundColor: 'bg-indigo-200',\n  color: 'text-indigo-800',\n}"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/badges/filled-onlytext-badge/filled-onlytext-badge.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "secondaryConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/badges/filled-onlytext-badge/filled-onlytext-badge.stories.ts",
                    "type": "IFilledOnlytextBadgeConfig",
                    "defaultValue": "{\n  size: 'base',\n  backgroundColor: 'bg-lightBlue-100',\n  color: 'text-indigo-800',\n}"
                },
                {
                    "name": "Strong",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/badges/filled-onlytext-badge/filled-onlytext-badge.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "strongConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/badges/filled-onlytext-badge/filled-onlytext-badge.stories.ts",
                    "type": "IFilledOnlytextBadgeConfig",
                    "defaultValue": "{\n  size: 'base',\n  backgroundColor: 'bg-indigo-800',\n  color: 'text-lightBlue-100',\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/badges/filled-onlytext-badge/filled-onlytext-badge.stories.ts",
                    "type": "Story<FilledOnlytextBadgeComponent>",
                    "defaultValue": "(args: any) => ({\n  props: {\n    ...args,\n  },\n  template: `<brave-filled-onlytext-badge>Badge</brave-filled-onlytext-badge>`,\n})"
                }
            ],
            "src/app/shared/components/buttons/filled-onlytext-button/filled-onlytext-button.stories.ts": [
                {
                    "name": "Accent",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/buttons/filled-onlytext-button/filled-onlytext-button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "accentConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/buttons/filled-onlytext-button/filled-onlytext-button.stories.ts",
                    "type": "IFilledOnlyTextButtonConfig",
                    "defaultValue": "{\n  buttonSize: 'base',\n  backgroundColor: 'bg-fuchsia-500',\n  activeColor: 'bg-fuchsia-600',\n  color: 'text-white',\n}"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/buttons/filled-onlytext-button/filled-onlytext-button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/buttons/filled-onlytext-button/filled-onlytext-button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "largeConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/buttons/filled-onlytext-button/filled-onlytext-button.stories.ts",
                    "type": "IFilledOnlyTextButtonConfig",
                    "defaultValue": "{\n  buttonSize: 'lg',\n  backgroundColor: 'bg-fuchsia-500',\n  activeColor: 'bg-fuchsia-600',\n  color: 'text-white',\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/buttons/filled-onlytext-button/filled-onlytext-button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "primaryConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/buttons/filled-onlytext-button/filled-onlytext-button.stories.ts",
                    "type": "IFilledOnlyTextButtonConfig",
                    "defaultValue": "{\n  buttonSize: 'base',\n  backgroundColor: 'bg-indigo-800',\n  activeColor: 'bg-indigo-900',\n  color: 'text-white',\n}"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/buttons/filled-onlytext-button/filled-onlytext-button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "secondaryConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/buttons/filled-onlytext-button/filled-onlytext-button.stories.ts",
                    "type": "IFilledOnlyTextButtonConfig",
                    "defaultValue": "{\n  buttonSize: 'base',\n  backgroundColor: 'bg-lightBlue-100',\n  activeColor: 'bg-lightBlue-200',\n  color: 'text-indigo-800',\n}"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/buttons/filled-onlytext-button/filled-onlytext-button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "smallConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/buttons/filled-onlytext-button/filled-onlytext-button.stories.ts",
                    "type": "IFilledOnlyTextButtonConfig",
                    "defaultValue": "{\n  buttonSize: 'sm',\n  backgroundColor: 'bg-fuchsia-500',\n  activeColor: 'bg-fuchsia-600',\n  color: 'text-white',\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/buttons/filled-onlytext-button/filled-onlytext-button.stories.ts",
                    "type": "Story<FilledOnlytextButtonComponent>",
                    "defaultValue": "(args: any) => ({\n  props: {\n    ...args,\n  },\n  template: `<brave-filled-onlytext-button>Default</brave-filled-onlytext-button>`,\n})"
                }
            ],
            "src/app/shared/components/buttons/links-onlytext-button/links-onlytext-button.stories.ts": [
                {
                    "name": "Accent",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/buttons/links-onlytext-button/links-onlytext-button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "accentConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/buttons/links-onlytext-button/links-onlytext-button.stories.ts",
                    "type": "ILinksOnlyTextButtonConfig",
                    "defaultValue": "{\n  buttonSize: 'base',\n  color: 'text-fuchsia-500',\n}"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/buttons/links-onlytext-button/links-onlytext-button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/buttons/links-onlytext-button/links-onlytext-button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "largeConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/buttons/links-onlytext-button/links-onlytext-button.stories.ts",
                    "type": "ILinksOnlyTextButtonConfig",
                    "defaultValue": "{\n  buttonSize: 'lg',\n  color: 'text-indigo-800',\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/buttons/links-onlytext-button/links-onlytext-button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "primaryConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/buttons/links-onlytext-button/links-onlytext-button.stories.ts",
                    "type": "ILinksOnlyTextButtonConfig",
                    "defaultValue": "{\n  buttonSize: 'base',\n  color: 'text-indigo-800',\n}"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/buttons/links-onlytext-button/links-onlytext-button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "smallConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/buttons/links-onlytext-button/links-onlytext-button.stories.ts",
                    "type": "ILinksOnlyTextButtonConfig",
                    "defaultValue": "{\n  buttonSize: 'sm',\n  color: 'text-indigo-800',\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/buttons/links-onlytext-button/links-onlytext-button.stories.ts",
                    "type": "Story<LinksOnlytextButtonComponent>",
                    "defaultValue": "(args: any) => ({\n  props: {\n    ...args,\n  },\n  template: `<brave-links-onlytext-button>My Link</brave-links-onlytext-button>`,\n})"
                }
            ],
            "src/app/views/kyc-address/kyc-address/kyc-address.component.ts": [
                {
                    "name": "address",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/kyc-address/kyc-address/kyc-address.component.ts",
                    "type": "Record<string, any>",
                    "defaultValue": "{\n  addressOne: true,\n  addressTwo: true,\n  city: true,\n  state: true,\n  zip: true,\n}"
                }
            ],
            "src/app/views/tradelines/tradelines-pure/tradelines.stories.ts": [
                {
                    "name": "address",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/tradelines/tradelines-pure/tradelines.stories.ts",
                    "type": "string",
                    "defaultValue": "'123 Main Street, Hollywood, CA'"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/tradelines/tradelines-pure/tradelines.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "installment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/tradelines/tradelines-pure/tradelines.stories.ts",
                    "type": "IInstallmentTradelineDetails",
                    "defaultValue": "{\n  dateOpened: '2019-01-01',\n  accountDesignator: 'James Credit',\n  termMonths: '48',\n  late90Count: '3',\n  amountPastDue: '950',\n  disputeFlag: 'No',\n}"
                },
                {
                    "name": "remarks",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/tradelines/tradelines-pure/tradelines.stories.ts",
                    "type": "",
                    "defaultValue": "`This account was investigated two weeks ago per the client's request`"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/tradelines/tradelines-pure/tradelines.stories.ts",
                    "type": "Story<TradelinesPureComponent>",
                    "defaultValue": "(args: any) => ({\n  component: TradelinesPureComponent,\n  props: {\n    ...args,\n    details: installment,\n    remarks: remarks,\n    address: address,\n  },\n})"
                }
            ],
            "src/app/shared/components/tradelines/tradeline-details/tradeline-details.stories.ts": [
                {
                    "name": "address",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/tradelines/tradeline-details/tradeline-details.stories.ts",
                    "type": "string",
                    "defaultValue": "'123 Main Street, Hollywood, CA'"
                },
                {
                    "name": "collections",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/tradelines/tradeline-details/tradeline-details.stories.ts",
                    "type": "ICollectionsTradelineDetails",
                    "defaultValue": "{\n  originalCreditor: 'ABC Financing',\n  creditType: 'Collection',\n  dateOpened: '2018-01-01',\n  disputeFlag: 'No',\n}"
                },
                {
                    "name": "Collections",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/tradelines/tradeline-details/tradeline-details.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "installment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/tradelines/tradeline-details/tradeline-details.stories.ts",
                    "type": "IInstallmentTradelineDetails",
                    "defaultValue": "{\n  dateOpened: '2019-01-01',\n  accountDesignator: 'James Credit',\n  termMonths: '48',\n  late90Count: '3',\n  amountPastDue: '950',\n  disputeFlag: 'No',\n}"
                },
                {
                    "name": "Installment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/tradelines/tradeline-details/tradeline-details.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "remarks",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/tradelines/tradeline-details/tradeline-details.stories.ts",
                    "type": "",
                    "defaultValue": "`This account was investigated two weeks ago per the client's request`"
                },
                {
                    "name": "revolving",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/tradelines/tradeline-details/tradeline-details.stories.ts",
                    "type": "IRevolvingTradelineDetails",
                    "defaultValue": "{\n  dateOpened: '2020-01-10',\n  accountDesignator: 'James Credit',\n  late60Count: '10',\n  amountPastDue: 1200,\n  disputeFlag: 'No',\n}"
                },
                {
                    "name": "Revolving",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/tradelines/tradeline-details/tradeline-details.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/tradelines/tradeline-details/tradeline-details.stories.ts",
                    "type": "Story<TradelineDetailsComponent>",
                    "defaultValue": "(args: any) => ({\n  component: TradelineDetailsComponent,\n  props: {\n    ...args,\n    remarks: remarks,\n    address: address,\n  },\n})"
                }
            ],
            "src/app/shared/components/tradelines/tradeline-payments/tradeline-payments.stories.ts": [
                {
                    "name": "address",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/tradelines/tradeline-payments/tradeline-payments.stories.ts",
                    "type": "string",
                    "defaultValue": "'123 Main Street, Hollywood, CA'"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/tradelines/tradeline-payments/tradeline-payments.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "remarks",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/tradelines/tradeline-payments/tradeline-payments.stories.ts",
                    "type": "",
                    "defaultValue": "`This account was investigated two weeks ago per the client's request`"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/tradelines/tradeline-payments/tradeline-payments.stories.ts",
                    "type": "Story<TradelinePaymentsComponent>",
                    "defaultValue": "(args: any) => ({\n  component: TradelinePaymentsComponent,\n  props: {\n    ...args,\n    remarks: remarks,\n    address: address,\n  },\n})"
                }
            ],
            "src/app/shared/components/tooltips/outline-tooltip/outline-tooltip.stories.ts": [
                {
                    "name": "Bottom",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/tooltips/outline-tooltip/outline-tooltip.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/tooltips/outline-tooltip/outline-tooltip.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Left",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/tooltips/outline-tooltip/outline-tooltip.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Right",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/tooltips/outline-tooltip/outline-tooltip.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/tooltips/outline-tooltip/outline-tooltip.stories.ts",
                    "type": "Story<OutlineTooltipComponent>",
                    "defaultValue": "(args: any) => ({\n  component: OutlineTooltipComponent,\n  props: {\n    ...args,\n  },\n})"
                },
                {
                    "name": "Top",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/tooltips/outline-tooltip/outline-tooltip.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "src/app/shared/data/pay-status-codes.ts": [
                {
                    "name": "BRAVE_ACCOUNT_TYPE",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/data/pay-status-codes.ts",
                    "type": "Record<string, any>",
                    "defaultValue": "{\n  '1': `30-Day Late Payment`,\n  '2': `60-Day Late Payment`,\n  '3': `90-Day Late Payment`,\n  '4': `120-Day Late Payment`,\n  '7': `Wage Earner Plan`,\n  '8R': `Repossesion Account`,\n  '9': `Collection Chargeoff Account`,\n}"
                },
                {
                    "name": "COLLECTION_PAY_STATUS_CODES",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/data/pay-status-codes.ts",
                    "type": "Record<string, any>",
                    "defaultValue": "{\n  '9': `Collection Chargeoff Account`,\n}"
                },
                {
                    "name": "LATE_PAY_STATUS_CODES",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/data/pay-status-codes.ts",
                    "type": "Record<string, any>",
                    "defaultValue": "{\n  '1': `Late 30 Days`,\n  '2': `Late 60 Days`,\n  '3': `Late 90 Days`,\n  '4': `Late 120 Days`,\n}"
                },
                {
                    "name": "NEGATIVE_PAY_STATUS_CODES",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/data/pay-status-codes.ts",
                    "type": "Record<string, any>",
                    "defaultValue": "{\n  '1': `Late 30 Days`,\n  '2': `Late 60 Days`,\n  '3': `Late 90 Days`,\n  '4': `Late 120 Days`,\n  '8R': `Repossesion`,\n  '9': `Collection Chargeoff`,\n}"
                },
                {
                    "name": "ONTIME_PAY_STATUS_CODES",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/data/pay-status-codes.ts",
                    "type": "Record<string, any>",
                    "defaultValue": "{\n  C: `Current`,\n}"
                },
                {
                    "name": "OTHER_PAY_STATUS_CODES",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/data/pay-status-codes.ts",
                    "type": "Record<string, any>",
                    "defaultValue": "{\n  '8R': `Repossesion Account`,\n  '7': `Wage Earner Plan`,\n}"
                },
                {
                    "name": "PAY_STATUS_CODES",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/data/pay-status-codes.ts",
                    "type": "Record<string, any>",
                    "defaultValue": "{\n  U: `No Data / Unknown`,\n  C: `Current`,\n  '0': `Too New to Rate`,\n  '1': `Late 30 Days`,\n  '2': `Late 60 Days`,\n  '3': `Late 90 Days`,\n  '4': `Late 120 Days`,\n  '7': `Wage Earner Plan`,\n  '8R': `Repossesion`,\n  '9': `Collection Chargeoff`,\n}"
                },
                {
                    "name": "POSITIVE_PAY_STATUS_CODES",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/data/pay-status-codes.ts",
                    "type": "Record<string, any>",
                    "defaultValue": "{\n  U: `No Data / Unknown`,\n  C: `Current`,\n  '0': `Too New to Rate`,\n  '7': `Wage Earner Plan`,\n}"
                },
                {
                    "name": "UNKNOWN_PAY_STATUS_CODES",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/data/pay-status-codes.ts",
                    "type": "Record<string, any>",
                    "defaultValue": "{\n  U: `No Data / Unknown`,\n  '0': `Too New to Rate`,\n  '7': `Wage Earner Plan`,\n}"
                }
            ],
            "src/app/store/index.ts": [
                {
                    "name": "braveState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/index.ts",
                    "type": "[]",
                    "defaultValue": "[\n  AppDataState,\n  UserState,\n  OnboardingState,\n  AgenciesState,\n  PreferencesState,\n]"
                }
            ],
            "src/app/views/negative-account/negative-account-initial-pure/negative-account-initial-pure.stories.ts": [
                {
                    "name": "cards",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/negative-account/negative-account-initial-pure/negative-account-initial-pure.stories.ts",
                    "type": "INegativeAccountCardInputs[]",
                    "defaultValue": "[\n  {\n    creditorName: 'ABC Collections',\n    lastReported: '2020-01-01',\n    accountTypeDescription: 'Collections Account',\n    accountTypeDescriptionValue: 'Open',\n    originalCreditor: 'Original Creditor',\n    originalCreditorValue: 'Loans R Us',\n    disputeFlag: 'Previously Disputed',\n    disputeFlagValue: 'No',\n    accountDetail: {\n      accountNumber: '12345678',\n      typeOfCollection: 'Collections',\n      amountPastDue: '700',\n      dateOpened: '2017-01-01',\n      dateLastPayment: '2019-01-01',\n    },\n  },\n  {\n    creditorName: 'XYZ Collections',\n    lastReported: '2020-01-01',\n    accountTypeDescription: 'Collections Account',\n    accountTypeDescriptionValue: 'Open',\n    originalCreditor: 'Original Creditor',\n    originalCreditorValue: 'Loans R Us',\n    disputeFlag: 'Previously Disputed',\n    disputeFlagValue: 'No',\n    accountDetail: {\n      accountNumber: '12345678',\n      typeOfCollection: 'Collections',\n      amountPastDue: '700',\n      dateOpened: '2017-01-01',\n      dateLastPayment: '2019-01-01',\n    },\n  },\n]"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/negative-account/negative-account-initial-pure/negative-account-initial-pure.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/negative-account/negative-account-initial-pure/negative-account-initial-pure.stories.ts",
                    "type": "Story<NegativeAccountInitialPureComponent>",
                    "defaultValue": "(args: any) => ({\n  component: NegativeAccountInitialPureComponent,\n  props: {\n    ...args,\n    cards,\n  },\n})"
                }
            ],
            "src/app/views/kyc-idverification/kyc-idverification/kyc-idverification.component.ts": [
                {
                    "name": "codeMap",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/kyc-idverification/kyc-idverification/kyc-idverification.component.ts",
                    "type": "Record<string, any>",
                    "defaultValue": "{\n  code: true,\n}"
                },
                {
                    "name": "mapEnrollResponse",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/kyc-idverification/kyc-idverification/kyc-idverification.component.ts",
                    "type": "",
                    "defaultValue": "(res: any): TUEnrollResponseInput => {\n  return {\n    bureau: res['Bureau'],\n    errorResponse: res['ErrorResponse'],\n    serviceProduct: res['ServiceProduct'],\n    serviceProductFullfillmentKey: res['ServiceProductFulfillmentKey'],\n    serviceProductObject: JSON.stringify(res['ServiceProductObject']),\n    serviceProductTypeId: res['ServiceProductTypeId'],\n    serviceProductValue: res['ServiceProductValue'],\n    status: res['Status'],\n  } as TUEnrollResponseInput;\n}"
                }
            ],
            "src/app/shared/components/tradelines/tradeline-payment-icon/tradeline-payment-icon.stories.ts": [
                {
                    "name": "Collection",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/tradelines/tradeline-payment-icon/tradeline-payment-icon.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Current",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/tradelines/tradeline-payment-icon/tradeline-payment-icon.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Late",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/tradelines/tradeline-payment-icon/tradeline-payment-icon.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Other",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/tradelines/tradeline-payment-icon/tradeline-payment-icon.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/tradelines/tradeline-payment-icon/tradeline-payment-icon.stories.ts",
                    "type": "Story<TradelinePaymentIconComponent>",
                    "defaultValue": "(args: any) => ({\n  component: TradelinePaymentIconComponent,\n  props: {\n    ...args,\n  },\n})"
                },
                {
                    "name": "Unknown",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/tradelines/tradeline-payment-icon/tradeline-payment-icon.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "src/app/layouts/authentication/authentication.module.ts": [
                {
                    "name": "components",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layouts/authentication/authentication.module.ts",
                    "type": "[]",
                    "defaultValue": "[AuthenticationComponent]"
                }
            ],
            "src/app/layouts/compliance/compliance.module.ts": [
                {
                    "name": "components",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layouts/compliance/compliance.module.ts",
                    "type": "[]",
                    "defaultValue": "[ComplianceComponent]"
                }
            ],
            "src/app/layouts/dashboard/dashboard.module.ts": [
                {
                    "name": "components",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layouts/dashboard/dashboard.module.ts",
                    "type": "[]",
                    "defaultValue": "[DashboardComponent]"
                }
            ],
            "src/app/layouts/onboarding/onboarding.module.ts": [
                {
                    "name": "components",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layouts/onboarding/onboarding.module.ts",
                    "type": "[]",
                    "defaultValue": "[OnboardingComponent]"
                }
            ],
            "src/app/shared/components/shared-components.module.ts": [
                {
                    "name": "components",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/shared-components.module.ts",
                    "type": "[]",
                    "defaultValue": "[\n  BaseFormComponent,\n  SignInComponent,\n  SignUpComponent,\n  FilledOnlytextButtonComponent,\n  LinksOnlytextButtonComponent,\n  OutlineOnlytextButtonComponent,\n  OutlineInputComponent,\n  OutlineOnecolumnFormComponent,\n  GoogleIconsigninButtonComponent,\n  FacebookOnlytextsigninButtonComponent,\n  SimpleSignupFormComponent,\n  OutlineSelectInputComponent,\n  FilledClosingAlertComponent,\n  FilledOnlytextBadgeComponent,\n  IndexDropdownComponent,\n  MenuDropdownComponent,\n  NotificationDropdownComponent,\n  PagesDropdownComponent,\n  TableDropdownComponent,\n  UserDropdownComponent,\n  OutlineOnlytextSelectComponent,\n  FooterComponent,\n  FooterAdminComponent,\n  FooterSmallComponent,\n  HiddenAsteriskInputComponent,\n  OutlineAddressFormComponent,\n  OutlinePhoneFormComponent,\n  OutlineVerificationcodeFormComponent,\n  SsnFullFormComponent,\n  SsnLastfourFormComponent,\n  HiddenAsteriskInputComponent,\n  BaseModalRegularComponent,\n  BaseModalSmallComponent,\n  AdminNavbarComponent,\n  AuthNavbarComponent,\n  DashboardNavbarComponent,\n  IndexNavbarComponent,\n  OutlinePrevnextPaginationComponent,\n  FilledChecktextProgressbarComponent,\n  SidebarComponent,\n  FilledOnlytextTabsComponent,\n  NavigationTabsComponent,\n  OutlineTooltipComponent,\n  KbaquestionsFormComponent,\n  OutlineNamedobFormComponent,\n  SelectDobFormComponent,\n  OutlineNameFormComponent,\n  CreditcardCardComponent,\n  ViewdetailButtonComponent,\n  LoanCardComponent,\n  SnapshotDisplayCardComponent,\n  CreditBuilderCardComponent,\n  SnapshotDisplayCardComponent,\n  NegativeAccountCardComponent,\n  KbaMultiplechoiceInputComponent,\n  CreditReportCardComponent,\n  SpinnerComponent,\n  TradelineMetricsComponent,\n  TradelineSummaryComponent,\n  TradelineDetailsComponent,\n  TradelineDetailRowComponent,\n  TradelinePaymentsComponent,\n  TradelinePaymentIconComponent,\n  TradelinePaymentHistoryComponent,\n  TradelineRemarksComponent,\n]"
                },
                {
                    "name": "directives",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/shared-components.module.ts",
                    "type": "[]",
                    "defaultValue": "[HiddenAsteriskInputDirective, OutlineTooltipDirective]"
                },
                {
                    "name": "pipes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/shared-components.module.ts",
                    "type": "[]",
                    "defaultValue": "[\n  FilledOnlytextButtonPipe,\n  LinksOnlytextButtonPipe,\n  OutlineOnlytextButtonPipe,\n  OutlineInputPipe,\n  OutlineSelectInputPipe,\n  FilledClosingAlertPipe,\n  FilledOnlytextBadgePipe,\n  FilledChecktextProgressbarPipe,\n  AccountStatusPipe,\n  SnapshotLabelPipe,\n  SnapshotStatusPipe,\n  CreditReportGraphicPipe,\n  ParseTradelineDetailsPipe,\n]"
                }
            ],
            "src/app/shared/components/modals/base-modal-regular/base-modal-regular.stories.ts": [
                {
                    "name": "config",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/modals/base-modal-regular/base-modal-regular.stories.ts",
                    "type": "IBaseModalRegularConfig",
                    "defaultValue": "{\n  openButtonText: 'Open',\n  title: 'Message Title',\n  body:\n    'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec ultrices est in dolor feugiat, et consequat urna imperdiet. Nam a purus elit. In eu dui fermentum, tincidunt nisi a, pulvinar nulla. Morbi justo lectus, pellentesque ut dignissim at, varius at erat. Nullam porta libero justo, non facilisis urna elementum quis. Sed cursus lacinia faucibus. Nulla at elit erat. Ut at pharetra est. In dictum fringilla odio sed fringilla.',\n  actionButtonOneText: 'Cancel',\n  actionButtonTwoText: 'Continue',\n}"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/modals/base-modal-regular/base-modal-regular.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/modals/base-modal-regular/base-modal-regular.stories.ts",
                    "type": "Story<BaseModalRegularComponent>",
                    "defaultValue": "(args: any) => ({\n  props: {\n    ...args,\n    config,\n  },\n  template: `<brave-base-modal-regular [config]=\"config\"></brave-base-modal-regular>`,\n})"
                }
            ],
            "src/app/shared/components/modals/base-modal-small/base-modal-small.stories.ts": [
                {
                    "name": "config",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/modals/base-modal-small/base-modal-small.stories.ts",
                    "type": "IBaseModalSmallConfig",
                    "defaultValue": "{\n  openButtonText: 'Open',\n  title: 'Message Title',\n  body:\n    'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec ultrices est in dolor feugiat, et consequat urna imperdiet. Nam a purus elit. In eu dui fermentum, tincidunt nisi a, pulvinar nulla. Morbi justo lectus, pellentesque ut dignissim at, varius at erat. Nullam porta libero justo, non facilisis urna elementum quis. Sed cursus lacinia faucibus. Nulla at elit erat. Ut at pharetra est. In dictum fringilla odio sed fringilla.',\n  actionButtonOneText: 'Cancel',\n  actionButtonTwoText: 'Continue',\n}"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/modals/base-modal-small/base-modal-small.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/modals/base-modal-small/base-modal-small.stories.ts",
                    "type": "Story<BaseModalSmallComponent>",
                    "defaultValue": "(args: any) => ({\n  props: {\n    ...args,\n    config,\n  },\n  template: `<brave-base-modal-small [config]=\"config\"></brave-base-modal-small>`,\n})"
                }
            ],
            "src/app/shared/components/progressbars/filled-checktext-progressbar/filled-checktext-progressbar.stories.ts": [
                {
                    "name": "config",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/progressbars/filled-checktext-progressbar/filled-checktext-progressbar.stories.ts",
                    "type": "IFilledChecktextProgressbarConfig",
                    "defaultValue": "{\n  size: 'base',\n}"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/progressbars/filled-checktext-progressbar/filled-checktext-progressbar.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "stack",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/progressbars/filled-checktext-progressbar/filled-checktext-progressbar.stories.ts",
                    "type": "IProgressStep[]",
                    "defaultValue": "[\n  { id: 0, active: true, complete: true, name: 'step 1' },\n  { id: 1, active: true, complete: true, name: 'step 2' },\n  { id: 2, active: true, complete: false, name: 'step 3' },\n]"
                },
                {
                    "name": "steps",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/progressbars/filled-checktext-progressbar/filled-checktext-progressbar.stories.ts",
                    "type": "IProgressStep[]",
                    "defaultValue": "[\n  { id: 0, active: true, complete: true, name: 'step 1' },\n  { id: 1, active: true, complete: true, name: 'step 2' },\n  { id: 2, active: true, complete: false, name: 'step 3' },\n  { id: 3, active: false, complete: false, name: 'step 4' },\n  { id: 4, active: false, complete: false, name: 'step 5' },\n]"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/progressbars/filled-checktext-progressbar/filled-checktext-progressbar.stories.ts",
                    "type": "Story<FilledChecktextProgressbarComponent>",
                    "defaultValue": "(args: any) => ({\n  props: {\n    ...args,\n    stack,\n    config,\n  },\n  template: `<brave-filled-checktext-progressbar [config]=\"config\" [steps]=\"steps\"><brave-filled-checktext-progressbar>`,\n})"
                }
            ],
            "src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "type": "literal type"
                }
            ],
            "src/app/shared/data/credit-report.ts": [
                {
                    "name": "CREDIT_REPORT_GROUPS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/data/credit-report.ts",
                    "type": "Record<string, any>",
                    "defaultValue": "{\n  c: { order: 1, group: CreditReportGroups.CreditCards, title: 'Credit Cards' },\n  r: { order: 1, group: CreditReportGroups.CreditCards, title: 'Credit Cards' },\n  y: {\n    order: 2,\n    group: CreditReportGroups.CollectionsAccounts,\n    title: 'Collections Accounts',\n  },\n  i: {\n    order: 3,\n    group: CreditReportGroups.InstallmentLoans,\n    title: 'Student, Car & Personal Loans',\n  },\n  m: { order: 4, group: CreditReportGroups.Mortgages, title: 'Mortgages' },\n}"
                }
            ],
            "src/app/views/credit-report/credit-report-pure/credit-report-pure.stories.ts": [
                {
                    "name": "creditReports",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/credit-report/credit-report-pure/credit-report-pure.stories.ts",
                    "type": "ICreditReportCardGroup[]",
                    "defaultValue": "[\n  {\n    title: 'Credit Cards',\n    group: CreditReportGroups.CreditCards,\n    cards: [\n      {\n        type: 'c',\n        creditorName: 'ABC Financial',\n        isOpen: true,\n        firstFieldName: 'Current Balance',\n        firstFieldValue: '1,200',\n        secondFieldName: 'Credit Limit',\n        secondFieldValue: '1,200',\n        thirdFieldName: 'Payment Status',\n        thirdFieldValue: 'Paid',\n        status: '',\n      },\n      {\n        type: 'c',\n        creditorName: 'XYZ Financial',\n        isOpen: true,\n        firstFieldName: 'Current Balance',\n        firstFieldValue: '200',\n        secondFieldName: 'Credit Limit',\n        secondFieldValue: '200',\n        thirdFieldName: 'Payment Status',\n        thirdFieldValue: 'Paid',\n        status: '',\n      },\n    ],\n  },\n  {\n    title: 'Collection Accounts',\n    group: CreditReportGroups.CollectionsAccounts,\n    cards: [\n      {\n        type: 'c',\n        creditorName: 'ABC Services',\n        isOpen: true,\n        firstFieldName: 'Current Balance',\n        firstFieldValue: '1,200',\n        secondFieldName: 'Credit Limit',\n        secondFieldValue: '1,200',\n        thirdFieldName: 'Payment Status',\n        thirdFieldValue: 'Paid',\n        status: '',\n      },\n    ],\n  },\n]"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/credit-report/credit-report-pure/credit-report-pure.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "preferences",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/credit-report/credit-report-pure/credit-report-pure.stories.ts",
                    "type": "PreferencesStateModel",
                    "defaultValue": "{\n  showAllAccounts: {\n    [CreditReportGroups.CreditCards]: true,\n    [CreditReportGroups.CollectionsAccounts]: true,\n    [CreditReportGroups.InstallmentLoans]: true,\n    [CreditReportGroups.Mortgages]: true,\n  },\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/credit-report/credit-report-pure/credit-report-pure.stories.ts",
                    "type": "Story<CreditReportPureComponent>",
                    "defaultValue": "(args: any) => ({\n  component: CreditReportPureComponent,\n  props: {\n    ...args,\n    creditReports: creditReports,\n    preferences: preferences,\n  },\n})"
                }
            ],
            "src/app/views/dashboard-init/dashboard-init.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/dashboard-init/dashboard-init.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/dashboard-init/dashboard-init.stories.ts",
                    "type": "Story<DashboardInitComponent>",
                    "defaultValue": "(args: any) => ({\n  component: DashboardInitComponent,\n  props: {\n    ...args,\n  },\n})"
                }
            ],
            "src/app/views/signup-error/signup-error.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/signup-error/signup-error.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/signup-error/signup-error.stories.ts",
                    "type": "Story<SignupErrorComponent>",
                    "defaultValue": "(args: any) => ({\n  component: SignupErrorComponent,\n  props: {\n    ...args,\n  },\n})"
                }
            ],
            "src/app/views/signup-error-validation/signup-error-validation.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/signup-error-validation/signup-error-validation.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/signup-error-validation/signup-error-validation.stories.ts",
                    "type": "Story<SignupErrorValidationComponent>",
                    "defaultValue": "(args: any) => ({\n  component: SignupErrorValidationComponent,\n  props: {\n    ...args,\n  },\n})"
                }
            ],
            "src/app/views/signup-knowyou/signup-knowyou.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/signup-knowyou/signup-knowyou.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/signup-knowyou/signup-knowyou.stories.ts",
                    "type": "Story<SignupKnowyouComponent>",
                    "defaultValue": "(args: any) => ({\n  component: SignupKnowyouComponent,\n  props: {\n    ...args,\n  },\n})"
                }
            ],
            "src/app/views/signup-thankyou/signup-thankyou.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/signup-thankyou/signup-thankyou.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/signup-thankyou/signup-thankyou.stories.ts",
                    "type": "Story<SignupThankyouComponent>",
                    "defaultValue": "(args: any) => ({\n  component: SignupThankyouComponent,\n  props: {\n    ...args,\n  },\n})"
                }
            ],
            "src/app/shared/components/typography/typography-accent-bg-cooltext.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/typography/typography-accent-bg-cooltext.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/typography/typography-accent-bg-cooltext.stories.ts",
                    "type": "Story<any>",
                    "defaultValue": "(args: any) => ({\n  props: {\n    ...args,\n  },\n  template: `\n  <div class=\"bg-fuchsia-500 p-4\">\n    <h1 class='font-headings font-extrabold text-5xl text-lightBlue-100'>H1 Heading</h1>\n    <h2 class='font-headings font-extrabold text-4xl text-lightBlue-100'>H2 Heading</h2>\n    <h3 class='font-headings font-extrabold text-3xl text-lightBlue-100'>H3 Heading</h3>\n    <h4 class='font-headings font-extrabold text-2xl text-lightBlue-100'>H4 Heading</h4>\n    <h5 class='font-headings font-extrabold text-xl text-lightBlue-100'>H5 Heading</h5>\n    <h6 class='font-headings font-extrabold text-lg text-lightBlue-100'>H6 Heading</h6>\n    <div style=\"margin: 10px 0px\"></div>\n    <p class='font-sans text-base text-lightBlue-100'>Body 1</p>\n    <p class='font-sans font-semibold text-base text-lightBlue-100'>Body 1-semibold</p>\n    <p class='font-sans text-sm text-lightBlue-100'>Body 2</p>\n    <p class='font-sans font-semibold text-sm text-lightBlue-100'>Body 2-semibold</p>\n  </div>\n    `,\n})"
                }
            ],
            "src/app/shared/components/typography/typography-accent-bg.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/typography/typography-accent-bg.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/typography/typography-accent-bg.stories.ts",
                    "type": "Story<any>",
                    "defaultValue": "(args: any) => ({\n  props: {\n    ...args,\n  },\n  template: `\n  <div class=\"bg-fuchsia-500 p-4\">\n    <h1 class='font-headings font-extrabold text-5xl text-white'>H1 Heading</h1>\n    <h2 class='font-headings font-extrabold text-4xl text-white'>H2 Heading</h2>\n    <h3 class='font-headings font-extrabold text-3xl text-white'>H3 Heading</h3>\n    <h4 class='font-headings font-extrabold text-2xl text-white'>H4 Heading</h4>\n    <h5 class='font-headings font-extrabold text-xl text-white'>H5 Heading</h5>\n    <h6 class='font-headings font-extrabold text-lg text-white'>H6 Heading</h6>\n    <div style=\"margin: 10px 0px\"></div>\n    <p class='font-sans text-base text-white'>Body 1</p>\n    <p class='font-sans font-semibold text-base text-white'>Body 1-semibold</p>\n    <p class='font-sans text-sm text-white'>Body 2</p>\n    <p class='font-sans font-semibold text-sm text-white'>Body 2-semibold</p>\n  </div>\n    `,\n})"
                }
            ],
            "src/app/shared/components/typography/typography-primary-bg-cooltext.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/typography/typography-primary-bg-cooltext.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/typography/typography-primary-bg-cooltext.stories.ts",
                    "type": "Story<any>",
                    "defaultValue": "(args: any) => ({\n  props: {\n    ...args,\n  },\n  template: `\n  <div class=\"bg-indigo-800 p-4\">\n    <h1 class='font-headings font-extrabold text-5xl text-lightBlue-100'>H1 Heading</h1>\n    <h2 class='font-headings font-extrabold text-4xl text-lightBlue-100'>H2 Heading</h2>\n    <h3 class='font-headings font-extrabold text-3xl text-lightBlue-100'>H3 Heading</h3>\n    <h4 class='font-headings font-extrabold text-2xl text-lightBlue-100'>H4 Heading</h4>\n    <h5 class='font-headings font-extrabold text-xl text-lightBlue-100'>H5 Heading</h5>\n    <h6 class='font-headings font-extrabold text-lg text-lightBlue-100'>H6 Heading</h6>\n    <div style=\"margin: 10px 0px\"></div>\n    <p class='font-sans text-base text-lightBlue-100'>Body 1</p>\n    <p class='font-sans font-semibold text-base text-lightBlue-100'>Body 1-semibold</p>\n    <p class='font-sans text-sm text-lightBlue-100'>Body 2</p>\n    <p class='font-sans font-semibold text-sm text-lightBlue-100'>Body 2-semibold</p>\n  </div>\n    `,\n})"
                }
            ],
            "src/app/shared/components/typography/typography-primary-bg.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/typography/typography-primary-bg.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/typography/typography-primary-bg.stories.ts",
                    "type": "Story<any>",
                    "defaultValue": "(args: any) => ({\n  props: {\n    ...args,\n  },\n  template: `\n  <div class=\"bg-indigo-800 p-4\">\n    <h1 class='font-headings font-extrabold text-5xl text-white'>H1 Heading</h1>\n    <h2 class='font-headings font-extrabold text-4xl text-white'>H2 Heading</h2>\n    <h3 class='font-headings font-extrabold text-3xl text-white'>H3 Heading</h3>\n    <h4 class='font-headings font-extrabold text-2xl text-white'>H4 Heading</h4>\n    <h5 class='font-headings font-extrabold text-xl text-white'>H5 Heading</h5>\n    <h6 class='font-headings font-extrabold text-lg text-white'>H6 Heading</h6>\n    <div style=\"margin: 10px 0px\"></div>\n    <p class='font-sans text-base text-white'>Body 1</p>\n    <p class='font-sans font-semibold text-base text-white'>Body 1-semibold</p>\n    <p class='font-sans text-sm text-white'>Body 2</p>\n    <p class='font-sans font-semibold text-sm text-white'>Body 2-semibold</p>\n  </div>\n    `,\n})"
                }
            ],
            "src/app/shared/components/typography/typography-transparent-bg.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/typography/typography-transparent-bg.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/typography/typography-transparent-bg.stories.ts",
                    "type": "Story<any>",
                    "defaultValue": "(args: any) => ({\n  props: {\n    ...args,\n  },\n  template: `\n    <h1 class='font-headings font-extrabold text-5xl text-coolGray-900'>H1 Heading</h1>\n    <h2 class='font-headings font-extrabold text-4xl text-coolGray-900'>H2 Heading</h2>\n    <h3 class='font-headings font-extrabold text-3xl text-coolGray-900'>H3 Heading</h3>\n    <h4 class='font-headings font-extrabold text-2xl text-coolGray-900'>H4 Heading</h4>\n    <h5 class='font-headings font-extrabold text-xl text-coolGray-900'>H5 Heading</h5>\n    <h6 class='font-headings font-extrabold text-lg text-coolGray-900'>H6 Heading</h6>\n    <div style=\"margin: 10px 0px\"></div>\n    <p class='font-sans text-base text-coolGray-700'>Body 1</p>\n    <p class='font-sans font-semibold text-base text-coolGray-700'>Body 1-semibold</p>\n    <p class='font-sans text-sm text-coolGray-700'>Body 2</p>\n    <p class='font-sans font-semibold text-sm text-coolGray-700'>Body 2-semibold</p>\n    `,\n})"
                }
            ],
            "src/app/views/kyc-address/kyc-address-pure/kyc-address-pure.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/kyc-address/kyc-address-pure/kyc-address-pure.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/kyc-address/kyc-address-pure/kyc-address-pure.stories.ts",
                    "type": "Story<KycAddressPureComponent>",
                    "defaultValue": "(args: any) => ({\n  component: KycAddressPureComponent,\n  props: {\n    ...args,\n  },\n})"
                }
            ],
            "src/app/views/kyc-congratulations/kyc-congratulations-pure/kyc-congratulations-pure.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/kyc-congratulations/kyc-congratulations-pure/kyc-congratulations-pure.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/kyc-congratulations/kyc-congratulations-pure/kyc-congratulations-pure.stories.ts",
                    "type": "Story<KycCongratulationsPureComponent>",
                    "defaultValue": "(args: any) => ({\n  component: KycCongratulationsPureComponent,\n  props: {\n    ...args,\n  },\n})"
                }
            ],
            "src/app/views/kyc-idverification/kyc-idverification-pure/kyc-idverification-pure.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/kyc-idverification/kyc-idverification-pure/kyc-idverification-pure.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/kyc-idverification/kyc-idverification-pure/kyc-idverification-pure.stories.ts",
                    "type": "Story<KycIdverificationPureComponent>",
                    "defaultValue": "(args: any) => ({\n  component: KycIdverificationPureComponent,\n  props: {\n    ...args,\n  },\n})"
                }
            ],
            "src/app/views/kyc-kbaquestions/kyc-kbaquestions-pure/kyc-kbaquestions-pure.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/kyc-kbaquestions/kyc-kbaquestions-pure/kyc-kbaquestions-pure.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "kbas",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/kyc-kbaquestions/kyc-kbaquestions-pure/kyc-kbaquestions-pure.stories.ts",
                    "type": "ITransunionKBAQuestion[]",
                    "defaultValue": "[]"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/kyc-kbaquestions/kyc-kbaquestions-pure/kyc-kbaquestions-pure.stories.ts",
                    "type": "Story<KycKbaquestionsPureComponent>",
                    "defaultValue": "(args: any) => ({\n  component: KycKbaquestionsPureComponent,\n  props: {\n    ...args,\n    kbas,\n  },\n})"
                }
            ],
            "src/app/views/kyc-phonenumber/kyc-phonenumber-pure/kyc-phonenumber-pure.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/kyc-phonenumber/kyc-phonenumber-pure/kyc-phonenumber-pure.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/kyc-phonenumber/kyc-phonenumber-pure/kyc-phonenumber-pure.stories.ts",
                    "type": "Story<KycPhonenumberPureComponent>",
                    "defaultValue": "(args: any) => ({\n  component: KycPhonenumberPureComponent,\n  props: {\n    ...args,\n  },\n})"
                }
            ],
            "src/app/views/kyc-ssn/kyc-ssn-pure/kyc-ssn-pure.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/kyc-ssn/kyc-ssn-pure/kyc-ssn-pure.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/kyc-ssn/kyc-ssn-pure/kyc-ssn-pure.stories.ts",
                    "type": "Story<KycSsnPureComponent>",
                    "defaultValue": "(args: any) => ({\n  component: KycSsnPureComponent,\n  props: {\n    ...args,\n  },\n})"
                }
            ],
            "src/app/views/kyc-ssn-full/kyc-ssn-full-pure/kyc-ssn-full-pure.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/kyc-ssn-full/kyc-ssn-full-pure/kyc-ssn-full-pure.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/kyc-ssn-full/kyc-ssn-full-pure/kyc-ssn-full-pure.stories.ts",
                    "type": "Story<KycSsnFullPureComponent>",
                    "defaultValue": "(args: any) => ({\n  component: KycSsnFullPureComponent,\n  props: {\n    ...args,\n  },\n})"
                }
            ],
            "src/app/views/kyc-welcome/kyc-welcome-pure/kyc-welcome-pure.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/kyc-welcome/kyc-welcome-pure/kyc-welcome-pure.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/kyc-welcome/kyc-welcome-pure/kyc-welcome-pure.stories.ts",
                    "type": "Story<KycWelcomePureComponent>",
                    "defaultValue": "(args: any) => ({\n  props: {\n    ...args,\n  },\n})"
                }
            ],
            "src/app/views/kyc-welcomeback/kyc-welcomeback-pure/kyc-welcomeback-pure.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/kyc-welcomeback/kyc-welcomeback-pure/kyc-welcomeback-pure.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/kyc-welcomeback/kyc-welcomeback-pure/kyc-welcomeback-pure.stories.ts",
                    "type": "Story<KycWelcomebackPureComponent>",
                    "defaultValue": "(args: any) => ({\n  component: KycWelcomebackPureComponent,\n  props: {\n    ...args,\n  },\n})"
                }
            ],
            "src/app/views/signup/signup-pure/signup-pure.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/signup/signup-pure/signup-pure.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/signup/signup-pure/signup-pure.stories.ts",
                    "type": "Story<SignupPureComponent>",
                    "defaultValue": "(args: any) => ({\n  component: SignupPureComponent,\n  props: {\n    ...args,\n  },\n})"
                }
            ],
            "src/app/shared/components/buttons/viewdetail-button/viewdetail-button.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/buttons/viewdetail-button/viewdetail-button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/buttons/viewdetail-button/viewdetail-button.stories.ts",
                    "type": "Story<ViewdetailButtonComponent>",
                    "defaultValue": "(args: any) => ({\n  props: {\n    ...args,\n  },\n  template: `\n  <span style=\"p-6 width: 120px\">\n    <brave-viewdetail-button>View Details</brave-viewdetail-button>\n  </span>\n  `,\n})"
                }
            ],
            "src/app/shared/components/buttons/outline-onlytext-button/outline-onlytext-button.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/buttons/outline-onlytext-button/outline-onlytext-button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/buttons/outline-onlytext-button/outline-onlytext-button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "largeConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/buttons/outline-onlytext-button/outline-onlytext-button.stories.ts",
                    "type": "IOutlineOnlyTextButtonConfig",
                    "defaultValue": "{\n  buttonSize: 'lg',\n  borderColor: 'border-indigo-800',\n  activeColor: 'bg-indigo-900',\n  hoverColor: 'bg-indigo-800',\n  color: 'text-indigo-800',\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/buttons/outline-onlytext-button/outline-onlytext-button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "primaryConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/buttons/outline-onlytext-button/outline-onlytext-button.stories.ts",
                    "type": "IOutlineOnlyTextButtonConfig",
                    "defaultValue": "{\n  buttonSize: 'base',\n  borderColor: 'border-indigo-800',\n  activeColor: 'bg-indigo-900',\n  hoverColor: 'bg-indigo-800',\n  color: 'text-indigo-800',\n}"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/buttons/outline-onlytext-button/outline-onlytext-button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "smallConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/buttons/outline-onlytext-button/outline-onlytext-button.stories.ts",
                    "type": "IOutlineOnlyTextButtonConfig",
                    "defaultValue": "{\n  buttonSize: 'sm',\n  borderColor: 'border-indigo-800',\n  activeColor: 'bg-indigo-900',\n  hoverColor: 'bg-indigo-800',\n  color: 'text-indigo-800',\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/buttons/outline-onlytext-button/outline-onlytext-button.stories.ts",
                    "type": "Story<OutlineOnlytextButtonComponent>",
                    "defaultValue": "(args: any) => ({\n  props: {\n    ...args,\n  },\n  template: `<brave-outline-onlytext-button>Default</brave-outline-onlytext-button>`,\n})"
                }
            ],
            "src/app/shared/components/cards/credit-builder-card/credit-builder-card.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/cards/credit-builder-card/credit-builder-card.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/cards/credit-builder-card/credit-builder-card.stories.ts",
                    "type": "Story<CreditBuilderCardComponent>",
                    "defaultValue": "(args: any) => ({\n  component: CreditBuilderCardComponent,\n  props: {\n    ...args\n  },\n})"
                }
            ],
            "src/app/shared/components/cards/creditcard-card/creditcard-card.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/cards/creditcard-card/creditcard-card.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/cards/creditcard-card/creditcard-card.stories.ts",
                    "type": "Story<CreditcardCardComponent>",
                    "defaultValue": "(args: any) => ({\n  component: CreditcardCardComponent,\n  props: {\n    ...args,\n    status: 'excellent',\n  },\n})"
                }
            ],
            "src/app/shared/components/cards/loan-card/loan-card.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/cards/loan-card/loan-card.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/cards/loan-card/loan-card.stories.ts",
                    "type": "Story<LoanCardComponent>",
                    "defaultValue": "(args: any) => ({\n  component: LoanCardComponent,\n  props: {\n    ...args,\n    status: 'good',\n  },\n})"
                }
            ],
            "src/app/shared/components/cards/negative-account-card/negative-account-card.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/cards/negative-account-card/negative-account-card.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/cards/negative-account-card/negative-account-card.stories.ts",
                    "type": "Story<NegativeAccountCardComponent>",
                    "defaultValue": "(args: any) => ({\n  component: NegativeAccountCardComponent,\n  props: {\n    ...args,\n    creditorName:\"A.R.M. Solutions\",\n    lastReported:\"29/09/2020\",\n    accountTypeDescription:\"90-Day Late Payment\",\n    accountTypeDescriptionValue:\"Open\",\n    originalCreditor:\"Original Creditor\",\n    originalCreditorValue:\"Bank Of America\",\n    disputeFlag:\"Previously Disputed?\",\n    disputeFlagValue:\"No\",\n    accountNumber:\"066611222\",\n    typeOfCollection:\"Collections\",\n    amountPastDue:700,\n    dateOpened:\"04/12/2018\",\n    dateLastPayment:\"04/21/2018\"\n  },\n})"
                }
            ],
            "src/app/shared/components/cards/snapshot-display-card/snapshot-display-card.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/cards/snapshot-display-card/snapshot-display-card.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Digit",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/cards/snapshot-display-card/snapshot-display-card.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Percentage",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/cards/snapshot-display-card/snapshot-display-card.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Tag",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/cards/snapshot-display-card/snapshot-display-card.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/cards/snapshot-display-card/snapshot-display-card.stories.ts",
                    "type": "Story<SnapshotDisplayCardComponent>",
                    "defaultValue": "(args: any) => ({\n  component: SnapshotDisplayCardComponent,\n  props: {\n    ...args\n  },\n})"
                },
                {
                    "name": "Time",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/cards/snapshot-display-card/snapshot-display-card.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "src/app/shared/components/cards/credit-report-card/credit-report-card.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/cards/credit-report-card/credit-report-card.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/cards/credit-report-card/credit-report-card.stories.ts",
                    "type": "Story<CreditReportCardComponent>",
                    "defaultValue": "(args: any) => ({\n  component: CreditReportCardComponent,\n  props: {\n    ...args\n  },\n})"
                }
            ],
            "src/app/shared/components/inputs/hidden-asterisk-input/hidden-asterisk-input.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/inputs/hidden-asterisk-input/hidden-asterisk-input.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/inputs/hidden-asterisk-input/hidden-asterisk-input.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/inputs/hidden-asterisk-input/hidden-asterisk-input.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/inputs/hidden-asterisk-input/hidden-asterisk-input.stories.ts",
                    "type": "Story<HiddenAsteriskInputComponent>",
                    "defaultValue": "(args: any) => ({\n  component: HiddenAsteriskInputComponent,\n  props: {\n    ...args,\n  },\n})"
                }
            ],
            "src/app/shared/components/inputs/kba-multiplechoice-input/kba-multiplechoice-input.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/inputs/kba-multiplechoice-input/kba-multiplechoice-input.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "question",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/inputs/kba-multiplechoice-input/kba-multiplechoice-input.stories.ts",
                    "type": "ITransunionKBAQuestion",
                    "defaultValue": "{} as ITransunionKBAQuestion"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/inputs/kba-multiplechoice-input/kba-multiplechoice-input.stories.ts",
                    "type": "Story<KbaMultiplechoiceInputComponent>",
                    "defaultValue": "(args: any) => ({\n  props: {\n    ...args,\n    question,\n  },\n  template: `<brave-kba-multiplechoice-input [question]=\"question\"></brave-kba-multiplechoice-input>`,\n})"
                }
            ],
            "src/app/shared/components/inputs/outline-input/outline-input.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/inputs/outline-input/outline-input.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/inputs/outline-input/outline-input.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "largeConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/inputs/outline-input/outline-input.stories.ts",
                    "type": "IOutlineInputeConfig",
                    "defaultValue": "{\n  size: 'lg',\n  type: 'text',\n  label: 'Input label',\n  placeholder: 'Input text',\n  autocomplete: 'off',\n  value: '',\n}"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/inputs/outline-input/outline-input.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "smallConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/inputs/outline-input/outline-input.stories.ts",
                    "type": "IOutlineInputeConfig",
                    "defaultValue": "{\n  size: 'sm',\n  type: 'text',\n  label: 'Input label',\n  placeholder: 'Input text',\n  autocomplete: 'off',\n  value: '',\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/inputs/outline-input/outline-input.stories.ts",
                    "type": "Story<OutlineInputComponent>",
                    "defaultValue": "(args: any) => ({\n  component: OutlineInputComponent,\n  props: {\n    ...args,\n  },\n})"
                }
            ],
            "src/app/shared/components/inputs/outline-select-input/outline-select-input.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/inputs/outline-select-input/outline-select-input.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/inputs/outline-select-input/outline-select-input.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "largeConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/inputs/outline-select-input/outline-select-input.stories.ts",
                    "type": "IOutlineSelectInputConfig",
                    "defaultValue": "{\n  size: 'lg',\n  label: 'Input label',\n  autocomplete: 'off',\n  options: ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l'],\n}"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/inputs/outline-select-input/outline-select-input.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "smallConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/inputs/outline-select-input/outline-select-input.stories.ts",
                    "type": "IOutlineSelectInputConfig",
                    "defaultValue": "{\n  size: 'sm',\n  label: 'Input label',\n  autocomplete: 'off',\n  options: ['one', 'two', 'three'],\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/inputs/outline-select-input/outline-select-input.stories.ts",
                    "type": "Story<OutlineSelectInputComponent>",
                    "defaultValue": "(args: any) => ({\n  component: OutlineSelectInputComponent,\n  props: {\n    ...args,\n  },\n})"
                }
            ],
            "src/app/shared/components/forms/kbaquestions-form/kbaquestions-form.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/forms/kbaquestions-form/kbaquestions-form.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "kbas",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/forms/kbaquestions-form/kbaquestions-form.stories.ts",
                    "type": "any",
                    "defaultValue": "[]"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/forms/kbaquestions-form/kbaquestions-form.stories.ts",
                    "type": "Story<KbaquestionsFormComponent>",
                    "defaultValue": "(args: any) => ({\n  props: {\n    ...args,\n    kbas,\n    required: true,\n  },\n  template: `<brave-kbaquestions-form [kbas]=\"kbas\"></brave-kbaquestions-form>`,\n})"
                }
            ],
            "src/app/shared/components/forms/outline-address-form/outline-address-form.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/forms/outline-address-form/outline-address-form.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/forms/outline-address-form/outline-address-form.stories.ts",
                    "type": "Story<OutlineAddressFormComponent>",
                    "defaultValue": "(args: any) => ({\n  component: OutlineAddressFormComponent,\n  props: {\n    ...args,\n  },\n})"
                }
            ],
            "src/app/shared/components/forms/outline-name-form/outline-name-form.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/forms/outline-name-form/outline-name-form.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/forms/outline-name-form/outline-name-form.stories.ts",
                    "type": "Story<OutlineNameFormComponent>",
                    "defaultValue": "(args: any) => ({\n  component: OutlineNameFormComponent,\n  props: {\n    ...args,\n  },\n})"
                }
            ],
            "src/app/shared/components/forms/outline-onecolumn-form/outline-onecolumn-form.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/forms/outline-onecolumn-form/outline-onecolumn-form.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/forms/outline-onecolumn-form/outline-onecolumn-form.stories.ts",
                    "type": "Story<OutlineOnecolumnFormComponent>",
                    "defaultValue": "(args: any) => ({\n  component: OutlineOnecolumnFormComponent,\n  props: {\n    ...args,\n  },\n})"
                }
            ],
            "src/app/shared/components/forms/outline-phone-form/outline-phone-form.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/forms/outline-phone-form/outline-phone-form.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/forms/outline-phone-form/outline-phone-form.stories.ts",
                    "type": "Story<OutlinePhoneFormComponent>",
                    "defaultValue": "(args: any) => ({\n  component: OutlinePhoneFormComponent,\n  props: {\n    ...args,\n  },\n})"
                }
            ],
            "src/app/shared/components/forms/outline-verificationcode-form/outline-verificationcode-form.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/forms/outline-verificationcode-form/outline-verificationcode-form.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/forms/outline-verificationcode-form/outline-verificationcode-form.stories.ts",
                    "type": "Story<OutlineVerificationcodeFormComponent>",
                    "defaultValue": "(args: any) => ({\n  component: OutlineVerificationcodeFormComponent,\n  props: {\n    ...args,\n  },\n})"
                }
            ],
            "src/app/shared/components/forms/select-dob-form/select-dob-form.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/forms/select-dob-form/select-dob-form.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/forms/select-dob-form/select-dob-form.stories.ts",
                    "type": "Story<SelectDobFormComponent>",
                    "defaultValue": "(args: any) => ({\n  component: SelectDobFormComponent,\n  props: {\n    ...args,\n  },\n})"
                }
            ],
            "src/app/shared/components/forms/ssn-full-form/ssn-full-form.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/forms/ssn-full-form/ssn-full-form.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/forms/ssn-full-form/ssn-full-form.stories.ts",
                    "type": "Story<SsnFullFormComponent>",
                    "defaultValue": "(args: any) => ({\n  component: SsnFullFormComponent,\n  props: {\n    ...args,\n  },\n})"
                }
            ],
            "src/app/shared/components/forms/simple-signup-form/simple-signup-form.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/forms/simple-signup-form/simple-signup-form.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/forms/simple-signup-form/simple-signup-form.stories.ts",
                    "type": "Story<SimpleSignupFormComponent>",
                    "defaultValue": "(args: any) => ({\n  component: SimpleSignupFormComponent,\n  props: {\n    ...args,\n  },\n})"
                }
            ],
            "src/app/shared/components/forms/ssn-lastfour-form/ssn-lastfour-form.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/forms/ssn-lastfour-form/ssn-lastfour-form.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/forms/ssn-lastfour-form/ssn-lastfour-form.stories.ts",
                    "type": "Story<SsnLastfourFormComponent>",
                    "defaultValue": "(args: any) => ({\n  props: {\n    ...args,\n  },\n  template: `<brave-ssn-lastfour-form></brave-ssn-lastfour-form>`,\n})"
                }
            ],
            "src/app/shared/components/interstitials/spinner/spinner.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/interstitials/spinner/spinner.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/interstitials/spinner/spinner.stories.ts",
                    "type": "Story<SpinnerComponent>",
                    "defaultValue": "(args: any) => ({\n  props: {\n    ...args,\n  },\n  template: `<div style=\"width: 75vw; height: 74vh\"><brave-spinner></brave-spinner></div>`,\n})"
                }
            ],
            "src/app/shared/components/navbars/dashboard-navbar/dashboard-navbar.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/navbars/dashboard-navbar/dashboard-navbar.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/navbars/dashboard-navbar/dashboard-navbar.stories.ts",
                    "type": "Story<DashboardNavbarComponent>",
                    "defaultValue": "(args: any) => ({\n  props: {\n    ...args,\n  },\n  template: `<brave-dashboard-navbar><brave-dashboard-navbar>`,\n})"
                }
            ],
            "src/app/shared/components/paginations/outline-prevnext-pagination/outline-prevnext-pagination.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/paginations/outline-prevnext-pagination/outline-prevnext-pagination.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/paginations/outline-prevnext-pagination/outline-prevnext-pagination.stories.ts",
                    "type": "Story<any>",
                    "defaultValue": "(args: any) => ({\n  component: OutlinePrevnextPaginationComponent,\n  props: {\n    ...args,\n  },\n})"
                }
            ],
            "src/app/shared/components/tabs/filled-onlytext-tabs/filled-onlytext-tabs.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/tabs/filled-onlytext-tabs/filled-onlytext-tabs.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/tabs/filled-onlytext-tabs/filled-onlytext-tabs.stories.ts",
                    "type": "Story<any>",
                    "defaultValue": "(args: any) => ({\n  component: FilledOnlytextTabsComponent,\n  props: {\n    ...args,\n  },\n})"
                }
            ],
            "src/app/shared/components/tabs/navigation-tabs/navigation-tabs.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/tabs/navigation-tabs/navigation-tabs.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/tabs/navigation-tabs/navigation-tabs.stories.ts",
                    "type": "Story<any>",
                    "defaultValue": "(args: any) => ({\n  component: NavigationTabsComponent,\n  props: {\n    ...args,\n  },\n})"
                }
            ],
            "src/app/shared/components/tradelines/tradeline-payment-history/tradeline-payment-history.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/tradelines/tradeline-payment-history/tradeline-payment-history.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/tradelines/tradeline-payment-history/tradeline-payment-history.stories.ts",
                    "type": "Story<TradelinePaymentHistoryComponent>",
                    "defaultValue": "(args: any) => ({\n  component: TradelinePaymentHistoryComponent,\n  props: {\n    ...args,\n  },\n})"
                }
            ],
            "src/app/shared/components/tradelines/tradeline-summary/tradeline-summary.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/tradelines/tradeline-summary/tradeline-summary.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/tradelines/tradeline-summary/tradeline-summary.stories.ts",
                    "type": "Story<TradelineSummaryComponent>",
                    "defaultValue": "(args: any) => ({\n  component: TradelineSummaryComponent,\n  props: {\n    ...args,\n  },\n  template: `\n    <div class=\"container mx-auto max-w-xs h-full\">\n      <brave-tradeline-summary\n        [status]=\"'Open'\"\n      ></brave-tradeline-summary>\n    </div>`,\n})"
                }
            ],
            "src/app/shared/components/dropdowns/popdowns/notification-dropdown/notification-dropdown.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/dropdowns/popdowns/notification-dropdown/notification-dropdown.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/dropdowns/popdowns/notification-dropdown/notification-dropdown.stories.ts",
                    "type": "Story<NotificationDropdownComponent>",
                    "defaultValue": "(args: any) => ({\n  component: NotificationDropdownComponent,\n  props: {\n    ...args,\n  },\n})"
                }
            ],
            "src/app/shared/components/dropdowns/popdowns/table-dropdown/table-dropdown.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/dropdowns/popdowns/table-dropdown/table-dropdown.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/dropdowns/popdowns/table-dropdown/table-dropdown.stories.ts",
                    "type": "Story<TableDropdownComponent>",
                    "defaultValue": "(args: any) => ({\n  component: TableDropdownComponent,\n  props: {\n    ...args,\n  },\n})"
                }
            ],
            "src/app/shared/components/dropdowns/popdowns/user-dropdown/user-dropdown.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/dropdowns/popdowns/user-dropdown/user-dropdown.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/dropdowns/popdowns/user-dropdown/user-dropdown.stories.ts",
                    "type": "Story<UserDropdownComponent>",
                    "defaultValue": "(args: any) => ({\n  component: UserDropdownComponent,\n  props: {\n    ...args,\n  },\n})"
                }
            ],
            "src/app/shared/components/dropdowns/selects/outline-onlytext-select/outline-onlytext-select.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/dropdowns/selects/outline-onlytext-select/outline-onlytext-select.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "items",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/dropdowns/selects/outline-onlytext-select/outline-onlytext-select.stories.ts",
                    "type": "IOutlineOnlyTextItem[]",
                    "defaultValue": "[\n  { value: 'Item 1' },\n  { value: 'Item 2' },\n  { value: 'Item 3' },\n  { value: 'Item 4' },\n  { value: 'Item 5' },\n]"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/dropdowns/selects/outline-onlytext-select/outline-onlytext-select.stories.ts",
                    "type": "Story<OutlineOnlytextSelectComponent>",
                    "defaultValue": "(args: any) => ({\n  props: {\n    ...args,\n    items,\n  },\n  template: `\n  <brave-outline-onlytext-select [items]=\"items\"></brave-outline-onlytext-select>\n  `,\n})"
                }
            ],
            "src/app/views/negative-account/negative-account-initial/negative-tradelines.pipe.ts": [
                {
                    "name": "defaultTradeline",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/negative-account/negative-account-initial/negative-tradelines.pipe.ts",
                    "type": "object",
                    "defaultValue": "{\n  creditorName: '',\n  lastReported: '',\n  accountTypeDescription: '',\n  accountTypeDescriptionValue: 'No account type',\n  disputeFlag: 'Previously Disputed?',\n  originalCreditor: 'Original Creditor',\n  originalCreditorValue: '',\n  disputeFlagValue: '',\n  accountDetail: {\n    accountNumber: '',\n    typeOfCollection: '',\n    amountPastDue: -1,\n    dateOpened: '',\n    dateLastPayment: '',\n    remarks: '',\n  },\n}"
                }
            ],
            "src/app/views/kyc-welcome/kyc-welcome/kyc-welcome.component.ts": [
                {
                    "name": "dob",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/kyc-welcome/kyc-welcome/kyc-welcome.component.ts",
                    "type": "Record<string, any>",
                    "defaultValue": "{\n  year: true,\n  month: true,\n  day: true,\n}"
                },
                {
                    "name": "name",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/kyc-welcome/kyc-welcome/kyc-welcome.component.ts",
                    "type": "Record<string, any>",
                    "defaultValue": "{\n  first: true,\n  middle: true,\n  last: true,\n}"
                }
            ],
            "src/app/shared/components/cards/snapshot-display-card/snapshot-status.pipe.ts": [
                {
                    "name": "enumStrColorCLassIndicator",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/cards/snapshot-display-card/snapshot-status.pipe.ts",
                    "type": "object",
                    "defaultValue": "{\n  [SnapshotStatus.Danger]: 'brave-danger',\n  [SnapshotStatus.Safe]: 'brave-safe',\n  [SnapshotStatus.Critical]: 'brave-critical',\n  [SnapshotStatus.Default]: 'lt-gray'\n}"
                }
            ],
            "src/app/shared/components/graphics/credit-report-graphic/credit-report-graphic.pipe.ts": [
                {
                    "name": "enumStrColorCLassIndicator",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/graphics/credit-report-graphic/credit-report-graphic.pipe.ts",
                    "type": "object",
                    "defaultValue": "{\n  [CreditReportStatus.Danger]: 'brave-danger',\n  [CreditReportStatus.Safe]: 'brave-safe',\n  [CreditReportStatus.Critical]: 'brave-critical',\n  [CreditReportStatus.Default]: 'lt-gray'\n}"
                }
            ],
            "src/app/shared/components/cards/snapshot-display-card/snapshot-label.pipe.ts": [
                {
                    "name": "enumStrNameOfLabel",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/cards/snapshot-display-card/snapshot-label.pipe.ts",
                    "type": "object",
                    "defaultValue": "{\n  [LabelOfSnapshot.Update]: { text: 'Updates', colorClass: 'text-brave-magenta' },\n  [LabelOfSnapshot.Hidden]: { text: 'Hidden Items', colorClass: 'text-lt-gray' },\n  [LabelOfSnapshot.New]: { text: 'New', colorClass: 'text-brave-blurple' },\n  [LabelOfSnapshot.NoLabel]: { text: '', colorClass: '' }\n}"
                }
            ],
            "src/environments/environment.dev.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.dev.ts",
                    "type": "object",
                    "defaultValue": "{\n  production: false,\n  API: 'https://jokbs4tpn3.execute-api.us-east-2.amazonaws.com/dev',\n}"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "type": "object",
                    "defaultValue": "{\n  production: true\n}"
                }
            ],
            "src/environments/environment.qa.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.qa.ts",
                    "type": "object",
                    "defaultValue": "{\n  production: false,\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "type": "object",
                    "defaultValue": "{\n  production: false\n}"
                }
            ],
            "src/app/views/kyc-kbaquestions/example-questions.ts": [
                {
                    "name": "formattedQuestions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/kyc-kbaquestions/example-questions.ts",
                    "type": "null",
                    "defaultValue": "null"
                }
            ],
            "src/app/app.module.ts": [
                {
                    "name": "isLocalhost",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.module.ts",
                    "type": "",
                    "defaultValue": "Boolean(\n  window.location.hostname === 'localhost' ||\n    window.location.hostname === '[::1]' ||\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)"
                },
                {
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.module.ts",
                    "type": "",
                    "defaultValue": "awsconfig.oauth.redirectSignIn.split(',')"
                },
                {
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.module.ts",
                    "type": "",
                    "defaultValue": "awsconfig.oauth.redirectSignOut.split(',')"
                },
                {
                    "name": "updatedAwsConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.module.ts",
                    "type": "object",
                    "defaultValue": "{\n  ...awsconfig,\n  oauth: {\n    ...awsconfig.oauth,\n    redirectSignIn: isLocalhost\n      ? localRedirectSignIn\n      : productionRedirectSignIn,\n    redirectSignOut: isLocalhost\n      ? localRedirectSignOut\n      : productionRedirectSignOut,\n  },\n}"
                }
            ],
            "src/app/shared/components/tradelines/tradeline-details/parse-tradeline-details.pipe.ts": [
                {
                    "name": "labelMapping",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/tradelines/tradeline-details/parse-tradeline-details.pipe.ts",
                    "type": "Record<string, any>",
                    "defaultValue": "{\n  originalCreditor: 'Original Creditor:',\n  creditType: 'Type of Account:',\n  dateOpened: 'Opened:',\n  accountDesignator: 'Responsibility:',\n  termMonths: 'Term:',\n  late30Count: 'Times 30/60/90 Days Late:',\n  late60Count: 'Times 30/60/90 Days Late:',\n  late90Count: 'Times 30/60/90 Days Late:',\n  amountPastDue: 'Amount Past Due:',\n  disputeFlag: 'Disputed:',\n}"
                }
            ],
            "src/app/views/credit-report/credit-report/constants.ts": [
                {
                    "name": "mockCreditReports",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/credit-report/credit-report/constants.ts",
                    "type": "[]",
                    "defaultValue": "[\n\t{\n\t\tid: 0,\n\t\tname: 'Credit Cards',\n\t\titems: [\n\t\t\t{\n\t\t\t\ttitle: 'American Express',\n\t\t\t\tisOpen: true,\n\t\t\t\tstatus: 'safe',\n\t\t\t\tfirstFieldName: 'Current Balance',\n\t\t\t\tfirstFieldValue:  300,\n\t\t\t\tsecondFieldName: 'Credit Limit',\n\t\t\t\tsecondFieldValue: 400,\n\t\t\t\tthirdFieldName: 'Payment Status',\n\t\t\t\tthirdFieldValue: 'Safe'\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tid: 1,\n\t\tname: 'Credit Cards',\n\t\titems: [\n\t\t\t{\n\t\t\t\ttitle: 'Hj National Collections',\n\t\t\t\tisOpen: true,\n\t\t\t\tstatus: 'safe',\n\t\t\t\tfirstFieldName: 'Current Balance',\n\t\t\t\tfirstFieldValue:  300,\n\t\t\t\tsecondFieldName: 'Credit Limit',\n\t\t\t\tsecondFieldValue: 400,\n\t\t\t\tthirdFieldName: 'Payment Status',\n\t\t\t\tthirdFieldValue: 'Safe'\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tid: 1,\n\t\tname: 'Credit Cards',\n\t\titems: [\n\t\t\t{\n\t\t\t\ttitle: 'Hj National Collections',\n\t\t\t\tisOpen: true,\n\t\t\t\tstatus: 'critical',\n\t\t\t\tfirstFieldName: 'Original Creditor',\n\t\t\t\tfirstFieldValue:  'Bank of America',\n\t\t\t\tsecondFieldName: 'Amount Past Due',\n\t\t\t\tsecondFieldValue: '20/04/2021',\n\t\t\t\tthirdFieldName: 'Payment Status',\n\t\t\t\tthirdFieldValue: 'Safe'\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tid: 2,\n\t\tname: 'Student, Car & Personal Loans',\n\t\titems: [\n\t\t\t{\n\t\t\t\ttitle: 'Verify Student Loans',\n\t\t\t\tisOpen: true,\n\t\t\t\tstatus: 'safe',\n\t\t\t\tfirstFieldName: 'Current Balance',\n\t\t\t\tfirstFieldValue:  '-400$',\n\t\t\t\tsecondFieldName: 'Original Loan Amount',\n\t\t\t\tsecondFieldValue: '3000$',\n\t\t\t\tthirdFieldName: 'Payment Status',\n\t\t\t\tthirdFieldValue: 'Not Safe'\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tid: 3,\n\t\tname: 'Mortages',\n\t\titems: [\n\t\t\t{\n\t\t\t\ttitle: 'Consolidated Lenders',\n\t\t\t\tisOpen: false,\n\t\t\t\tstatus: 'safe',\n\t\t\t\tfirstFieldName: 'Current Balance',\n\t\t\t\tfirstFieldValue:  '-400$',\n\t\t\t\tsecondFieldName: 'Loan Amount',\n\t\t\t\tsecondFieldValue: '3000$',\n\t\t\t\tthirdFieldName: 'Payment Status',\n\t\t\t\tthirdFieldValue: 'Not Safe'\n\t\t\t}\n\t\t]\n\t}\n]"
                }
            ],
            "src/app/shared/mocks/parsed-merge-report-response.ts": [
                {
                    "name": "mockParsedMergeReport",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/mocks/parsed-merge-report-response.ts",
                    "type": "object",
                    "defaultValue": "{\n  TrueLinkCreditReportType: {\n    FraudIndicator: false,\n    DeceasedIndicator: false,\n    SB168Frozen: { equifax: false, experian: false, transunion: false },\n    Borrower: {\n      SocialSecurityNumber: 666628891,\n      BorrowerAddress: {\n        dateReported: '2012-09-20',\n        addressOrder: 0,\n        partitionSet: 0,\n        CreditAddress: {\n          city: 'DEWEY',\n          direction: 'W',\n          houseNumber: 397620,\n          postDirection: '',\n          stateCode: 'OK',\n          streetName: 1300,\n          streetType: 'RD',\n          unit: '',\n          postalCode: 74029,\n        },\n        Dwelling: {\n          abbreviation: '',\n          description: '',\n          symbol: '',\n          rank: 100000,\n        },\n        Origin: { abbreviation: '', description: '', symbol: '', rank: 100000 },\n        Ownership: {\n          abbreviation: '',\n          description: '',\n          symbol: '',\n          rank: 100000,\n        },\n        Source: {\n          BorrowerKey: '',\n          Bureau: {\n            abbreviation: 'TransUnion',\n            description: 'TransUnion',\n            symbol: 'TUC',\n            rank: 1,\n          },\n          InquiryDate: '2015-06-09',\n          Reference: '0757326e-da32-48ea-99e',\n        },\n      },\n      PreviousAddress: [\n        {\n          dateReported: '2009-02-01',\n          addressOrder: 0,\n          partitionSet: 0,\n          CreditAddress: {\n            city: 'BARTLESVILLE',\n            direction: '',\n            houseNumber: 725,\n            stateCode: 'OK',\n            streetName: 'YALE',\n            streetType: 'DR',\n            unit: '',\n            postalCode: 74006,\n          },\n          Dwelling: {\n            abbreviation: '',\n            description: '',\n            symbol: '',\n            rank: 100000,\n          },\n          Origin: {\n            abbreviation: '',\n            description: '',\n            symbol: '',\n            rank: 100000,\n          },\n          Ownership: {\n            abbreviation: '',\n            description: '',\n            symbol: '',\n            rank: 100000,\n          },\n          Source: {\n            BorrowerKey: '',\n            Bureau: {\n              abbreviation: 'TransUnion',\n              description: 'TransUnion',\n              symbol: 'TUC',\n              rank: 1,\n            },\n            InquiryDate: '2015-06-09',\n            Reference: '0757326e-da32-48ea-99e',\n          },\n        },\n        {\n          addressOrder: 1,\n          partitionSet: 1,\n          CreditAddress: {\n            city: 'DEWEY',\n            direction: 'W',\n            houseNumber: 397250,\n            stateCode: 'OK',\n            streetName: 1300,\n            streetType: 'RD',\n            unit: '',\n            postalCode: 74029,\n          },\n          Dwelling: {\n            abbreviation: '',\n            description: '',\n            symbol: '',\n            rank: 100000,\n          },\n          Origin: {\n            abbreviation: '',\n            description: '',\n            symbol: '',\n            rank: 100000,\n          },\n          Ownership: {\n            abbreviation: '',\n            description: '',\n            symbol: '',\n            rank: 100000,\n          },\n          Source: {\n            BorrowerKey: '',\n            Bureau: {\n              abbreviation: 'TransUnion',\n              description: 'TransUnion',\n              symbol: 'TUC',\n              rank: 1,\n            },\n            InquiryDate: '2015-06-09',\n            Reference: '0757326e-da32-48ea-99e',\n          },\n        },\n      ],\n      Birth: {\n        age: 0,\n        date: '1961-01-01',\n        partitionSet: 0,\n        BirthDate: { year: 1961, month: 1, day: 1 },\n        Source: {\n          BorrowerKey: '',\n          Bureau: {\n            abbreviation: 'TransUnion',\n            description: 'TransUnion',\n            symbol: 'TUC',\n            rank: 1,\n          },\n          InquiryDate: '2015-06-09',\n          Reference: '0757326e-da32-48ea-99e',\n        },\n      },\n      CreditScore: {\n        riskScore: 668,\n        scoreName: 'VantageScore3',\n        populationRank: 49,\n        inquiriesAffectedScore: true,\n        CreditScoreFactor: [\n          {\n            bureauCode: 4,\n            Factor: {\n              abbreviation: '',\n              description: '',\n              symbol: 4,\n              rank: 100000,\n            },\n            FactorText: [\n              'explain: The balances on your accounts are high compared to the original loan amounts, lowering your score.',\n              'factor: The balances on your accounts are too high compared to loan amounts',\n              'cando: Paying down the balances on your accounts will benefit your score.',\n            ],\n          },\n          {\n            bureauCode: 12,\n            Factor: {\n              abbreviation: '',\n              description: '',\n              symbol: 12,\n              rank: 100000,\n            },\n            FactorText: [\n              'explain: Your oldest account is still too recent. A credit file containing older accounts will have a positive impact on your credit score because it demonstrates that you are experienced managing credit.',\n              'factor: The date that you opened your oldest account is too recent',\n              \"cando: Don't open more accounts than you actually need. Research shows that new accounts indicate greater risk. Your score will benefit as your accounts get older.\",\n            ],\n          },\n          {\n            bureauCode: 7,\n            Factor: {\n              abbreviation: '',\n              description: '',\n              symbol: 7,\n              rank: 100000,\n            },\n            FactorText: [\n              'explain: You have had too many accounts with payments that are at least 30 days late and/or on which a lender has reported a derogatory status. Late payments are a proven indicator of increased risk. People with late payments are at risk of being overextended, putting existing credit with lenders at risk.',\n              'factor: You have too many delinquent or derogatory accounts',\n              'cando: Paying bills on time every month is important to maintaining a good credit score. If you remain behind with any payments, bring them current as soon as possible, and then make future payments on time. Over time, this will have a positive impact on your score.',\n            ],\n          },\n          {\n            bureauCode: 55,\n            Factor: {\n              abbreviation: '',\n              description: '',\n              symbol: 55,\n              rank: 100000,\n            },\n            FactorText: [\n              \"explain: A real estate loan can be a first mortgage, a home equity loan, or home equity line of credit. The outstanding balances on open real estate accounts remain high compared to the original loan amounts. People who haven't paid down much of their mortgage or other real estate loans are higher credit risks than people who have.\",\n              'factor: Open real estate account balances are too high compared to their loan amounts',\n              'cando: As monthly real estate payments are made, a portion of the outstanding principle balance is reduced, benefitting your score. Whenever possible, further pay down balances on your real estate accounts. Over time this will also have a positive impact on your score.',\n            ],\n          },\n        ],\n        CreditScoreModel: {\n          abbreviation: '',\n          description: '',\n          symbol: '00W40',\n          rank: 100000,\n        },\n        NoScoreReason: {\n          abbreviation: '',\n          description: '',\n          symbol: '',\n          rank: 100000,\n        },\n        Source: {\n          BorrowerKey: '',\n          Bureau: {\n            abbreviation: 'TransUnion',\n            description: 'TransUnion',\n            symbol: 'TUC',\n            rank: 1,\n          },\n          InquiryDate: '2015-06-09',\n          Reference: '0757326e-da32-48ea-99e',\n        },\n      },\n      Employer: {\n        name: 'EMPLOYER X',\n        partitionSet: 0,\n        CreditAddress: {\n          city: '',\n          stateCode: '',\n          unparsedStreet: '',\n          postalCode: '',\n        },\n        Source: {\n          BorrowerKey: '',\n          Bureau: {\n            abbreviation: 'TransUnion',\n            description: 'TransUnion',\n            symbol: 'TUC',\n            rank: 1,\n          },\n          InquiryDate: '2015-06-09',\n          Reference: '0757326e-da32-48ea-99e',\n        },\n      },\n      BorrowerName: {\n        partitionSet: 0,\n        Name: { first: 'DIANNE', middle: 'J', last: 'COSGRAVE' },\n        NameType: {\n          abbreviation: 'Primary',\n          description: 'Primary',\n          symbol: 1,\n          rank: 199,\n        },\n        Source: {\n          BorrowerKey: '',\n          Bureau: {\n            abbreviation: 'TransUnion',\n            description: 'TransUnion',\n            symbol: 'TUC',\n            rank: 1,\n          },\n          InquiryDate: '2015-06-09',\n          Reference: '0757326e-da32-48ea-99e',\n        },\n      },\n      SocialPartition: {\n        Social: {\n          SocialSecurityNumber: 666628891,\n          Source: {\n            BorrowerKey: '',\n            Bureau: {\n              abbreviation: 'TransUnion',\n              description: 'TransUnion',\n              symbol: 'TUC',\n              rank: 1,\n            },\n            InquiryDate: '2015-06-09',\n            Reference: '0757326e-da32-48ea-99e',\n          },\n        },\n      },\n    },\n    TradeLinePartition: [\n      {\n        accountTypeDescription: 'Collection Account',\n        accountTypeSymbol: 'Y',\n        accountTypeAbbreviation: 'Collection',\n        Tradeline: {\n          subscriberCode: '063VB001',\n          highBalance: 6530,\n          dateVerified: '2015-04-15',\n          dateReported: '2015-04-15',\n          dateOpened: '2012-08-05',\n          accountNumber: '9X1X0X6X',\n          dateAccountStatus: '2015-04-15',\n          currentBalance: 2668,\n          creditorName: 'TULSA ADJUST',\n          position: 0,\n          bureau: 'TransUnion',\n          AccountCondition: {\n            abbreviation: 'Derog',\n            description: 'Derogatory',\n            symbol: 'F',\n            rank: 20,\n          },\n          AccountDesignator: {\n            abbreviation: 'Individual',\n            description: 'Individual',\n            symbol: 'I',\n            rank: 199,\n          },\n          DisputeFlag: {\n            abbreviation: 'Account not disputed',\n            description: 'Account not disputed',\n            symbol: 'F',\n            rank: 199,\n          },\n          IndustryCode: {\n            abbreviation: 'Collection Services',\n            description: 'Collection Services',\n            symbol: 'Y',\n            rank: 199,\n          },\n          OpenClosed: {\n            abbreviation: 'Open',\n            description: 'Open',\n            symbol: 'O',\n            rank: 199,\n          },\n          PayStatus: {\n            abbreviation: 'Coll/Chargeoff',\n            description: 'Collection/Chargeoff',\n            symbol: 9,\n            rank: 2,\n          },\n          VerificationIndicator: {\n            abbreviation: 'Account not disputed',\n            description: 'Account not disputed',\n            symbol: 'F',\n            rank: 199,\n          },\n          Remark: {\n            customRemark: '',\n            RemarkCode: {\n              abbreviation: 'Placed for collection',\n              description: 'Placed for collection',\n              symbol: 'T00CLA',\n              rank: 199,\n            },\n          },\n          CollectionTrade: {\n            originalCreditor: 'MEDICAL',\n            creditType: {\n              abbreviation: 'Collection',\n              description: 'Collection Account',\n              symbol: 'Y',\n              rank: 5,\n            },\n          },\n          Source: {\n            BorrowerKey: '',\n            Bureau: {\n              abbreviation: 'TransUnion',\n              description: 'TransUnion',\n              symbol: 'TUC',\n              rank: 1,\n            },\n            InquiryDate: '2015-06-09',\n            Reference: '0757326e-da32-48ea-99e',\n          },\n        },\n      },\n      {\n        accountTypeDescription: 'Collection Account',\n        accountTypeSymbol: 'Y',\n        accountTypeAbbreviation: 'Collection',\n        Tradeline: {\n          subscriberCode: '049XV001',\n          highBalance: 209,\n          dateVerified: '2013-10-24',\n          dateReported: '2013-10-24',\n          dateOpened: '2013-02-16',\n          accountNumber: '1X9X5X5X',\n          dateAccountStatus: '2013-10-21',\n          currentBalance: 0,\n          creditorName: 'EOS CCA',\n          position: 1,\n          bureau: 'TransUnion',\n          AccountCondition: {\n            abbreviation: 'Paid',\n            description: 'Paid',\n            symbol: 'P',\n            rank: 10,\n          },\n          AccountDesignator: {\n            abbreviation: 'Individual',\n            description: 'Individual',\n            symbol: 'I',\n            rank: 199,\n          },\n          DisputeFlag: {\n            abbreviation: 'Account not disputed',\n            description: 'Account not disputed',\n            symbol: 'F',\n            rank: 199,\n          },\n          IndustryCode: {\n            abbreviation: 'Collection Services',\n            description: 'Collection Services',\n            symbol: 'Y',\n            rank: 199,\n          },\n          OpenClosed: {\n            abbreviation: 'Closed',\n            description: 'Closed',\n            symbol: 'C',\n            rank: 198,\n          },\n          PayStatus: {\n            abbreviation: 'Coll/Chargeoff',\n            description: 'Collection/Chargeoff',\n            symbol: 9,\n            rank: 2,\n          },\n          VerificationIndicator: {\n            abbreviation: 'Account not disputed',\n            description: 'Account not disputed',\n            symbol: 'F',\n            rank: 199,\n          },\n          Remark: {\n            customRemark: '',\n            RemarkCode: {\n              abbreviation: 'Paid collection',\n              description: 'Paid collection',\n              symbol: 'T00PCL',\n              rank: 199,\n            },\n          },\n          CollectionTrade: {\n            originalCreditor: '10 AT T',\n            creditType: {\n              abbreviation: 'Collection',\n              description: 'Collection Account',\n              symbol: 'Y',\n              rank: 5,\n            },\n          },\n          Source: {\n            BorrowerKey: '',\n            Bureau: {\n              abbreviation: 'TransUnion',\n              description: 'TransUnion',\n              symbol: 'TUC',\n              rank: 1,\n            },\n            InquiryDate: '2015-06-09',\n            Reference: '0757326e-da32-48ea-99e',\n          },\n        },\n      },\n      {\n        accountTypeDescription: 'Collection Account',\n        accountTypeSymbol: 'Y',\n        accountTypeAbbreviation: 'Collection',\n        Tradeline: {\n          subscriberCode: '063VB001',\n          highBalance: 521,\n          dateVerified: '2013-03-18',\n          dateReported: '2013-03-18',\n          dateOpened: '2012-04-10',\n          accountNumber: '9X0X0X4X',\n          dateAccountStatus: '2013-03-18',\n          currentBalance: 0,\n          creditorName: 'TULSA ADJUST',\n          position: 2,\n          bureau: 'TransUnion',\n          AccountCondition: {\n            abbreviation: 'Derog',\n            description: 'Derogatory',\n            symbol: 'F',\n            rank: 20,\n          },\n          AccountDesignator: {\n            abbreviation: 'Individual',\n            description: 'Individual',\n            symbol: 'I',\n            rank: 199,\n          },\n          DisputeFlag: {\n            abbreviation: 'Account not disputed',\n            description: 'Account not disputed',\n            symbol: 'F',\n            rank: 199,\n          },\n          IndustryCode: {\n            abbreviation: 'Collection Services',\n            description: 'Collection Services',\n            symbol: 'Y',\n            rank: 199,\n          },\n          OpenClosed: {\n            abbreviation: 'Closed',\n            description: 'Closed',\n            symbol: 'C',\n            rank: 198,\n          },\n          PayStatus: {\n            abbreviation: 'Coll/Chargeoff',\n            description: 'Collection/Chargeoff',\n            symbol: 9,\n            rank: 2,\n          },\n          VerificationIndicator: {\n            abbreviation: 'Account not disputed',\n            description: 'Account not disputed',\n            symbol: 'F',\n            rank: 199,\n          },\n          Remark: {\n            customRemark: '',\n            RemarkCode: {\n              abbreviation: 'Paid collection',\n              description: 'Paid collection',\n              symbol: 'T00PCL',\n              rank: 199,\n            },\n          },\n          CollectionTrade: {\n            originalCreditor: 'MEDICAL',\n            creditType: {\n              abbreviation: 'Collection',\n              description: 'Collection Account',\n              symbol: 'Y',\n              rank: 5,\n            },\n          },\n          Source: {\n            BorrowerKey: '',\n            Bureau: {\n              abbreviation: 'TransUnion',\n              description: 'TransUnion',\n              symbol: 'TUC',\n              rank: 1,\n            },\n            InquiryDate: '2015-06-09',\n            Reference: '0757326e-da32-48ea-99e',\n          },\n        },\n      },\n      {\n        accountTypeDescription: 'Revolving Account',\n        accountTypeSymbol: 'R',\n        accountTypeAbbreviation: 'Revolving',\n        Tradeline: {\n          subscriberCode: '0235058D',\n          highBalance: 52,\n          dateVerified: '2015-05-20',\n          dateReported: '2015-05-20',\n          dateOpened: '1999-11-23',\n          accountNumber: 600884930301,\n          dateAccountStatus: '2015-03-20',\n          currentBalance: 0,\n          creditorName: 'SYNCB/JCP',\n          position: 3,\n          dateClosed: '2015-03-20',\n          bureau: 'TransUnion',\n          AccountCondition: {\n            abbreviation: 'Closed',\n            description: 'Closed',\n            symbol: 'C',\n            rank: 50,\n          },\n          AccountDesignator: {\n            abbreviation: 'Joint',\n            description: 'Joint',\n            symbol: 'J',\n            rank: 199,\n          },\n          DisputeFlag: {\n            abbreviation: 'Account not disputed',\n            description: 'Account not disputed',\n            symbol: 'F',\n            rank: 199,\n          },\n          IndustryCode: {\n            abbreviation: 'Department/Variety and Other Retail',\n            description: 'Department/Variety and Other Retail',\n            symbol: 'D',\n            rank: 199,\n          },\n          OpenClosed: {\n            abbreviation: 'Closed',\n            description: 'Closed',\n            symbol: 'C',\n            rank: 198,\n          },\n          PayStatus: {\n            abbreviation: 'Current',\n            description: 'Current',\n            symbol: 'C',\n            rank: 110,\n          },\n          VerificationIndicator: {\n            abbreviation: 'Account not disputed',\n            description: 'Account not disputed',\n            symbol: 'F',\n            rank: 199,\n          },\n          Remark: {\n            customRemark: '',\n            RemarkCode: {\n              abbreviation: 'Closed',\n              description: 'Closed',\n              symbol: 'T00CLO',\n              rank: 199,\n            },\n          },\n          GrantedTrade: {\n            monthsReviewed: 48,\n            monthlyPayment: 0,\n            late90Count: 0,\n            late60Count: 0,\n            late30Count: 0,\n            dateLastPayment: '2000-08-01',\n            termMonths: 0,\n            collateral: '',\n            amountPastDue: 0,\n            worstPatStatusCount: 48,\n            AccountType: {\n              abbreviation: 'Charge account',\n              description: 'Charge account',\n              symbol: 'CH',\n              rank: 50,\n            },\n            CreditType: {\n              abbreviation: 'Revolving',\n              description: 'Revolving Account',\n              symbol: 'R',\n              rank: 50,\n            },\n            PaymentFrequency: {\n              abbreviation: '',\n              description: '',\n              symbol: '',\n              rank: 100000,\n            },\n            TermType: {\n              abbreviation: 'Provided',\n              description: 'Provided',\n              symbol: 'P',\n              rank: 199,\n            },\n            WorstPayStatus: {\n              abbreviation: 'Current',\n              description: 'Current',\n              symbol: 'C',\n              rank: 110,\n            },\n            PayStatusHistory: {\n              status: 'CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC',\n              startDate: '2015-04-20',\n              MonthlyPayStatus: [\n                { date: '2015-04-20', status: 'C' },\n                { date: '2015-03-20', status: 'C' },\n                { date: '2015-02-19', status: 'C' },\n                { date: '2015-01-19', status: 'C' },\n                { date: '2014-12-19', status: 'C' },\n                { date: '2014-11-19', status: 'C' },\n                { date: '2014-10-20', status: 'C' },\n                { date: '2014-09-20', status: 'C' },\n                { date: '2014-08-20', status: 'C' },\n                { date: '2014-07-20', status: 'C' },\n                { date: '2014-06-20', status: 'C' },\n                { date: '2014-05-20', status: 'C' },\n                { date: '2014-04-20', status: 'C' },\n                { date: '2014-03-20', status: 'C' },\n                { date: '2014-02-19', status: 'C' },\n                { date: '2014-01-19', status: 'C' },\n                { date: '2013-12-19', status: 'C' },\n                { date: '2013-11-19', status: 'C' },\n                { date: '2013-10-20', status: 'C' },\n                { date: '2013-09-20', status: 'C' },\n                { date: '2013-08-20', status: 'C' },\n                { date: '2013-07-20', status: 'C' },\n                { date: '2013-06-20', status: 'C' },\n                { date: '2013-05-20', status: 'C' },\n                { date: '2013-04-20', status: 'C' },\n                { date: '2013-03-20', status: 'C' },\n                { date: '2013-02-19', status: 'C' },\n                { date: '2013-01-19', status: 'C' },\n                { date: '2012-12-19', status: 'C' },\n                { date: '2012-11-19', status: 'C' },\n                { date: '2012-10-20', status: 'C' },\n                { date: '2012-09-20', status: 'C' },\n                { date: '2012-08-20', status: 'C' },\n                { date: '2012-07-20', status: 'C' },\n                { date: '2012-06-20', status: 'C' },\n                { date: '2012-05-20', status: 'C' },\n                { date: '2012-04-20', status: 'C' },\n                { date: '2012-03-20', status: 'C' },\n                { date: '2012-02-19', status: 'C' },\n                { date: '2012-01-19', status: 'C' },\n                { date: '2011-12-19', status: 'C' },\n                { date: '2011-11-19', status: 'C' },\n                { date: '2011-10-20', status: 'C' },\n                { date: '2011-09-20', status: 'C' },\n                { date: '2011-08-20', status: 'C' },\n                { date: '2011-07-20', status: 'C' },\n                { date: '2011-06-20', status: 'C' },\n                { date: '2011-05-20', status: 'C' },\n              ],\n            },\n            CreditLimit: 124,\n          },\n          Source: {\n            BorrowerKey: '',\n            Bureau: {\n              abbreviation: 'TransUnion',\n              description: 'TransUnion',\n              symbol: 'TUC',\n              rank: 1,\n            },\n            InquiryDate: '2015-06-09',\n            Reference: '0757326e-da32-48ea-99e',\n          },\n        },\n      },\n      {\n        accountTypeDescription: 'Primary or secondary mortgage',\n        accountTypeSymbol: 'M',\n        accountTypeAbbreviation: 'Mortgage',\n        Tradeline: {\n          subscriberCode: '082TE004',\n          highBalance: 148106,\n          dateVerified: '2015-05-08',\n          dateReported: '2015-05-08',\n          dateOpened: '2014-06-30',\n          accountNumber: '9X6X3X3X2X4X2',\n          dateAccountStatus: '2015-05-08',\n          currentBalance: 141990,\n          creditorName: 'WFHM',\n          position: 4,\n          bureau: 'TransUnion',\n          AccountCondition: {\n            abbreviation: 'Open',\n            description: 'Open',\n            symbol: 'O',\n            rank: 60,\n          },\n          AccountDesignator: {\n            abbreviation: 'Joint',\n            description: 'Joint',\n            symbol: 'J',\n            rank: 199,\n          },\n          DisputeFlag: {\n            abbreviation: 'Account not disputed',\n            description: 'Account not disputed',\n            symbol: 'F',\n            rank: 199,\n          },\n          IndustryCode: {\n            abbreviation: 'Bank',\n            description: 'Bank',\n            symbol: 'B',\n            rank: 199,\n          },\n          OpenClosed: {\n            abbreviation: 'Open',\n            description: 'Open',\n            symbol: 'O',\n            rank: 199,\n          },\n          PayStatus: {\n            abbreviation: 'Current',\n            description: 'Current',\n            symbol: 'C',\n            rank: 110,\n          },\n          VerificationIndicator: {\n            abbreviation: 'Account not disputed',\n            description: 'Account not disputed',\n            symbol: 'F',\n            rank: 199,\n          },\n          GrantedTrade: {\n            monthsReviewed: 6,\n            monthlyPayment: 1204,\n            late90Count: 0,\n            late60Count: 0,\n            late30Count: 0,\n            dateLastPayment: '2015-04-16',\n            termMonths: 180,\n            collateral: '',\n            amountPastDue: 0,\n            worstPatStatusCount: 6,\n            AccountType: {\n              abbreviation: 'FHA real estate mortgage',\n              description: 'FHA real estate mortgage',\n              symbol: 'FR',\n              rank: 50,\n            },\n            CreditType: {\n              abbreviation: 'Mortgage',\n              description: 'Primary or secondary mortgage',\n              symbol: 'M',\n              rank: 10,\n            },\n            PaymentFrequency: {\n              abbreviation: 'Monthly (every month)',\n              description: 'Monthly (every month)',\n              symbol: 'M',\n              rank: 199,\n            },\n            TermType: {\n              abbreviation: 'Provided',\n              description: 'Provided',\n              symbol: 'P',\n              rank: 199,\n            },\n            WorstPayStatus: {\n              abbreviation: 'Current',\n              description: 'Current',\n              symbol: 'C',\n              rank: 110,\n            },\n            PayStatusHistory: {\n              status: 'CCUCCC',\n              startDate: '2015-04-08',\n              MonthlyPayStatus: [\n                { date: '2015-04-08', status: 'C' },\n                { date: '2015-03-07', status: 'C' },\n                { date: '2015-02-07', status: 'U' },\n                { date: '2015-01-07', status: 'C' },\n                { date: '2014-12-07', status: 'C' },\n                { date: '2014-11-07', status: 'C' },\n                { date: '2014-10-08', status: '' },\n                { date: '2014-09-08', status: '' },\n                { date: '2014-08-08', status: '' },\n                { date: '2014-07-08', status: '' },\n                { date: '2014-06-08', status: '' },\n                { date: '2014-05-08', status: '' },\n                { date: '2014-04-08', status: '' },\n                { date: '2014-03-07', status: '' },\n                { date: '2014-02-07', status: '' },\n                { date: '2014-01-07', status: '' },\n                { date: '2013-12-07', status: '' },\n                { date: '2013-11-07', status: '' },\n                { date: '2013-10-08', status: '' },\n                { date: '2013-09-08', status: '' },\n                { date: '2013-08-08', status: '' },\n                { date: '2013-07-08', status: '' },\n                { date: '2013-06-08', status: '' },\n                { date: '2013-05-08', status: '' },\n              ],\n            },\n            CreditLimit: 0,\n          },\n          Source: {\n            BorrowerKey: '',\n            Bureau: {\n              abbreviation: 'TransUnion',\n              description: 'TransUnion',\n              symbol: 'TUC',\n              rank: 1,\n            },\n            InquiryDate: '2015-06-09',\n            Reference: '0757326e-da32-48ea-99e',\n          },\n        },\n      },\n      {\n        accountTypeDescription: 'Revolving Account',\n        accountTypeSymbol: 'R',\n        accountTypeAbbreviation: 'Revolving',\n        Tradeline: {\n          subscriberCode: 9992952,\n          highBalance: 0,\n          dateVerified: '2015-05-08',\n          dateReported: '2015-05-08',\n          dateOpened: '2010-05-20',\n          accountNumber: 601915437403,\n          dateAccountStatus: '2012-04-30',\n          currentBalance: 0,\n          creditorName: 'SYNCB/CARECR',\n          position: 5,\n          dateClosed: '2012-04-30',\n          bureau: 'TransUnion',\n          AccountCondition: {\n            abbreviation: 'Closed',\n            description: 'Closed',\n            symbol: 'C',\n            rank: 50,\n          },\n          AccountDesignator: {\n            abbreviation: 'Joint',\n            description: 'Joint',\n            symbol: 'J',\n            rank: 199,\n          },\n          DisputeFlag: {\n            abbreviation: 'Account not disputed',\n            description: 'Account not disputed',\n            symbol: 'F',\n            rank: 199,\n          },\n          IndustryCode: {\n            abbreviation: 'Finance/Personal',\n            description: 'Finance/Personal',\n            symbol: 'F',\n            rank: 199,\n          },\n          OpenClosed: {\n            abbreviation: 'Closed',\n            description: 'Closed',\n            symbol: 'C',\n            rank: 198,\n          },\n          PayStatus: {\n            abbreviation: 'Current',\n            description: 'Current',\n            symbol: 'C',\n            rank: 110,\n          },\n          VerificationIndicator: {\n            abbreviation: 'Account not disputed',\n            description: 'Account not disputed',\n            symbol: 'F',\n            rank: 199,\n          },\n          Remark: {\n            customRemark: '',\n            RemarkCode: {\n              abbreviation: 'Canceled by credit grantor',\n              description: 'Canceled by credit grantor',\n              symbol: 'T00CBG',\n              rank: 199,\n            },\n          },\n          GrantedTrade: {\n            monthsReviewed: 48,\n            monthlyPayment: 0,\n            late90Count: 0,\n            late60Count: 0,\n            late30Count: 0,\n            termMonths: 0,\n            collateral: '',\n            amountPastDue: 0,\n            worstPatStatusCount: 48,\n            AccountType: {\n              abbreviation: 'Charge account',\n              description: 'Charge account',\n              symbol: 'CH',\n              rank: 50,\n            },\n            CreditType: {\n              abbreviation: 'Revolving',\n              description: 'Revolving Account',\n              symbol: 'R',\n              rank: 50,\n            },\n            PaymentFrequency: {\n              abbreviation: '',\n              description: '',\n              symbol: '',\n              rank: 100000,\n            },\n            TermType: {\n              abbreviation: 'Provided',\n              description: 'Provided',\n              symbol: 'P',\n              rank: 199,\n            },\n            WorstPayStatus: {\n              abbreviation: 'Current',\n              description: 'Current',\n              symbol: 'C',\n              rank: 110,\n            },\n            PayStatusHistory: {\n              status: 'CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC',\n              startDate: '2015-04-08',\n              MonthlyPayStatus: [\n                { date: '2015-04-08', status: 'C' },\n                { date: '2015-03-07', status: 'C' },\n                { date: '2015-02-07', status: 'C' },\n                { date: '2015-01-07', status: 'C' },\n                { date: '2014-12-07', status: 'C' },\n                { date: '2014-11-07', status: 'C' },\n                { date: '2014-10-08', status: 'C' },\n                { date: '2014-09-08', status: 'C' },\n                { date: '2014-08-08', status: 'C' },\n                { date: '2014-07-08', status: 'C' },\n                { date: '2014-06-08', status: 'C' },\n                { date: '2014-05-08', status: 'C' },\n                { date: '2014-04-08', status: 'C' },\n                { date: '2014-03-07', status: 'C' },\n                { date: '2014-02-07', status: 'C' },\n                { date: '2014-01-07', status: 'C' },\n                { date: '2013-12-07', status: 'C' },\n                { date: '2013-11-07', status: 'C' },\n                { date: '2013-10-08', status: 'C' },\n                { date: '2013-09-08', status: 'C' },\n                { date: '2013-08-08', status: 'C' },\n                { date: '2013-07-08', status: 'C' },\n                { date: '2013-06-08', status: 'C' },\n                { date: '2013-05-08', status: 'C' },\n                { date: '2013-04-08', status: 'C' },\n                { date: '2013-03-07', status: 'C' },\n                { date: '2013-02-07', status: 'C' },\n                { date: '2013-01-07', status: 'C' },\n                { date: '2012-12-07', status: 'C' },\n                { date: '2012-11-07', status: 'C' },\n                { date: '2012-10-08', status: 'C' },\n                { date: '2012-09-08', status: 'C' },\n                { date: '2012-08-08', status: 'C' },\n                { date: '2012-07-08', status: 'C' },\n                { date: '2012-06-08', status: 'C' },\n                { date: '2012-05-08', status: 'C' },\n                { date: '2012-04-08', status: 'C' },\n                { date: '2012-03-07', status: 'C' },\n                { date: '2012-02-07', status: 'C' },\n                { date: '2012-01-07', status: 'C' },\n                { date: '2011-12-07', status: 'C' },\n                { date: '2011-11-07', status: 'C' },\n                { date: '2011-10-08', status: 'C' },\n                { date: '2011-09-08', status: 'C' },\n                { date: '2011-08-08', status: 'C' },\n                { date: '2011-07-08', status: 'C' },\n                { date: '2011-06-08', status: 'C' },\n                { date: '2011-05-08', status: 'C' },\n              ],\n            },\n            CreditLimit: 1000,\n          },\n          Source: {\n            BorrowerKey: '',\n            Bureau: {\n              abbreviation: 'TransUnion',\n              description: 'TransUnion',\n              symbol: 'TUC',\n              rank: 1,\n            },\n            InquiryDate: '2015-06-09',\n            Reference: '0757326e-da32-48ea-99e',\n          },\n        },\n      },\n      {\n        accountTypeDescription: 'Revolving Account',\n        accountTypeSymbol: 'R',\n        accountTypeAbbreviation: 'Revolving',\n        Tradeline: {\n          subscriberCode: '0235058D',\n          highBalance: 681,\n          dateVerified: '2015-04-22',\n          dateReported: '2015-04-22',\n          dateOpened: '2007-12-10',\n          accountNumber: 600886311190,\n          dateAccountStatus: '2013-05-02',\n          currentBalance: 0,\n          creditorName: 'SYNCB/JCP',\n          position: 6,\n          bureau: 'TransUnion',\n          AccountCondition: {\n            abbreviation: 'Open',\n            description: 'Open',\n            symbol: 'O',\n            rank: 60,\n          },\n          AccountDesignator: {\n            abbreviation: 'Individual',\n            description: 'Individual',\n            symbol: 'I',\n            rank: 199,\n          },\n          DisputeFlag: {\n            abbreviation: 'Account not disputed',\n            description: 'Account not disputed',\n            symbol: 'F',\n            rank: 199,\n          },\n          IndustryCode: {\n            abbreviation: 'Department/Variety and Other Retail',\n            description: 'Department/Variety and Other Retail',\n            symbol: 'D',\n            rank: 199,\n          },\n          OpenClosed: {\n            abbreviation: 'Open',\n            description: 'Open',\n            symbol: 'O',\n            rank: 199,\n          },\n          PayStatus: {\n            abbreviation: 'Current',\n            description: 'Current',\n            symbol: 'C',\n            rank: 110,\n          },\n          VerificationIndicator: {\n            abbreviation: 'Account not disputed',\n            description: 'Account not disputed',\n            symbol: 'F',\n            rank: 199,\n          },\n          GrantedTrade: {\n            monthsReviewed: 48,\n            monthlyPayment: 0,\n            late90Count: 0,\n            late60Count: 1,\n            late30Count: 1,\n            dateLastPayment: '2013-05-02',\n            termMonths: 0,\n            collateral: '',\n            amountPastDue: 0,\n            worstPatStatusCount: 48,\n            AccountType: {\n              abbreviation: 'Charge account',\n              description: 'Charge account',\n              symbol: 'CH',\n              rank: 50,\n            },\n            CreditType: {\n              abbreviation: 'Revolving',\n              description: 'Revolving Account',\n              symbol: 'R',\n              rank: 50,\n            },\n            PaymentFrequency: {\n              abbreviation: '',\n              description: '',\n              symbol: '',\n              rank: 100000,\n            },\n            TermType: {\n              abbreviation: 'Provided',\n              description: 'Provided',\n              symbol: 'P',\n              rank: 199,\n            },\n            WorstPayStatus: {\n              abbreviation: '60 Delinq',\n              description: 'Late 60 Days',\n              symbol: 2,\n              rank: 104,\n            },\n            PayStatusHistory: {\n              status: 'CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC21C',\n              startDate: '2015-03-22',\n              MonthlyPayStatus: [\n                { date: '2015-03-22', status: 'C' },\n                { date: '2015-02-21', status: 'C' },\n                { date: '2015-01-21', status: 'C' },\n                { date: '2014-12-21', status: 'C' },\n                { date: '2014-11-21', status: 'C' },\n                { date: '2014-10-22', status: 'C' },\n                { date: '2014-09-22', status: 'C' },\n                { date: '2014-08-22', status: 'C' },\n                { date: '2014-07-22', status: 'C' },\n                { date: '2014-06-22', status: 'C' },\n                { date: '2014-05-22', status: 'C' },\n                { date: '2014-04-22', status: 'C' },\n                { date: '2014-03-22', status: 'C' },\n                { date: '2014-02-21', status: 'C' },\n                { date: '2014-01-21', status: 'C' },\n                { date: '2013-12-21', status: 'C' },\n                { date: '2013-11-21', status: 'C' },\n                { date: '2013-10-22', status: 'C' },\n                { date: '2013-09-22', status: 'C' },\n                { date: '2013-08-22', status: 'C' },\n                { date: '2013-07-22', status: 'C' },\n                { date: '2013-06-22', status: 'C' },\n                { date: '2013-05-22', status: 'C' },\n                { date: '2013-04-22', status: 'C' },\n                { date: '2013-03-22', status: 'C' },\n                { date: '2013-02-21', status: 'C' },\n                { date: '2013-01-21', status: 'C' },\n                { date: '2012-12-21', status: 'C' },\n                { date: '2012-11-21', status: 'C' },\n                { date: '2012-10-22', status: 'C' },\n                { date: '2012-09-22', status: 'C' },\n                { date: '2012-08-22', status: 'C' },\n                { date: '2012-07-22', status: 'C' },\n                { date: '2012-06-22', status: 'C' },\n                { date: '2012-05-22', status: 'C' },\n                { date: '2012-04-22', status: 'C' },\n                { date: '2012-03-22', status: 'C' },\n                { date: '2012-02-21', status: 'C' },\n                { date: '2012-01-21', status: 'C' },\n                { date: '2011-12-21', status: 'C' },\n                { date: '2011-11-21', status: 'C' },\n                { date: '2011-10-22', status: 'C' },\n                { date: '2011-09-22', status: 'C' },\n                { date: '2011-08-22', status: 'C' },\n                { date: '2011-07-22', status: 'C' },\n                { date: '2011-06-22', status: 2 },\n                { date: '2011-05-22', status: 1 },\n                { date: '2011-04-22', status: 'C' },\n              ],\n            },\n            CreditLimit: 341,\n          },\n          Source: {\n            BorrowerKey: '',\n            Bureau: {\n              abbreviation: 'TransUnion',\n              description: 'TransUnion',\n              symbol: 'TUC',\n              rank: 1,\n            },\n            InquiryDate: '2015-06-09',\n            Reference: '0757326e-da32-48ea-99e',\n          },\n        },\n      },\n      {\n        accountTypeDescription: 'Revolving Account',\n        accountTypeSymbol: 'R',\n        accountTypeAbbreviation: 'Revolving',\n        Tradeline: {\n          subscriberCode: 1597029,\n          highBalance: 11208,\n          dateVerified: '2014-05-07',\n          dateReported: '2014-05-07',\n          dateOpened: '2001-01-12',\n          accountNumber: 1587,\n          dateAccountStatus: '2013-11-15',\n          currentBalance: 0,\n          creditorName: 'BK OF AMER',\n          position: 7,\n          dateClosed: '2014-05-07',\n          bureau: 'TransUnion',\n          AccountCondition: {\n            abbreviation: 'Paid',\n            description: 'Paid',\n            symbol: 'P',\n            rank: 10,\n          },\n          AccountDesignator: {\n            abbreviation: 'Individual',\n            description: 'Individual',\n            symbol: 'I',\n            rank: 199,\n          },\n          DisputeFlag: {\n            abbreviation: 'Account not disputed',\n            description: 'Account not disputed',\n            symbol: 'F',\n            rank: 199,\n          },\n          IndustryCode: {\n            abbreviation: 'Bank',\n            description: 'Bank',\n            symbol: 'B',\n            rank: 199,\n          },\n          OpenClosed: {\n            abbreviation: 'Closed',\n            description: 'Closed',\n            symbol: 'C',\n            rank: 198,\n          },\n          PayStatus: {\n            abbreviation: 'Current',\n            description: 'Current',\n            symbol: 'C',\n            rank: 110,\n          },\n          VerificationIndicator: {\n            abbreviation: 'Account not disputed',\n            description: 'Account not disputed',\n            symbol: 'F',\n            rank: 199,\n          },\n          Remark: {\n            customRemark: '',\n            RemarkCode: {\n              abbreviation: 'Account closed by consumer',\n              description: 'Account closed by consumer',\n              symbol: 'T00CBC',\n              rank: 199,\n            },\n          },\n          GrantedTrade: {\n            monthsReviewed: 48,\n            monthlyPayment: 0,\n            late90Count: 20,\n            late60Count: 2,\n            late30Count: 3,\n            dateLastPayment: '2013-11-15',\n            termMonths: 0,\n            collateral: '',\n            amountPastDue: 0,\n            worstPatStatusCount: 48,\n            AccountType: {\n              abbreviation: 'Credit Card',\n              description: 'Credit Card',\n              symbol: 'CC',\n              rank: 50,\n            },\n            CreditType: {\n              abbreviation: 'Revolving',\n              description: 'Revolving Account',\n              symbol: 'R',\n              rank: 50,\n            },\n            PaymentFrequency: {\n              abbreviation: '',\n              description: '',\n              symbol: '',\n              rank: 100000,\n            },\n            TermType: {\n              abbreviation: 'Provided',\n              description: 'Provided',\n              symbol: 'P',\n              rank: 199,\n            },\n            WorstPayStatus: {\n              abbreviation: '120 Delinq',\n              description: 'Late 120 Days',\n              symbol: 4,\n              rank: 102,\n            },\n            PayStatusHistory: {\n              status: 'UUCCCC3334333334321CCCC44444321CCCCCCC1CCCCCC444',\n              startDate: '2014-04-07',\n              MonthlyPayStatus: [\n                { date: '2014-04-07', status: 'U' },\n                { date: '2014-03-06', status: 'U' },\n                { date: '2014-02-06', status: 'C' },\n                { date: '2014-01-06', status: 'C' },\n                { date: '2013-12-06', status: 'C' },\n                { date: '2013-11-06', status: 'C' },\n                { date: '2013-10-07', status: 3 },\n                { date: '2013-09-07', status: 3 },\n                { date: '2013-08-07', status: 3 },\n                { date: '2013-07-07', status: 4 },\n                { date: '2013-06-07', status: 3 },\n                { date: '2013-05-07', status: 3 },\n                { date: '2013-04-07', status: 3 },\n                { date: '2013-03-06', status: 3 },\n                { date: '2013-02-06', status: 3 },\n                { date: '2013-01-06', status: 4 },\n                { date: '2012-12-06', status: 3 },\n                { date: '2012-11-06', status: 2 },\n                { date: '2012-10-07', status: 1 },\n                { date: '2012-09-07', status: 'C' },\n                { date: '2012-08-07', status: 'C' },\n                { date: '2012-07-07', status: 'C' },\n                { date: '2012-06-07', status: 'C' },\n                { date: '2012-05-07', status: 4 },\n                { date: '2012-04-07', status: 4 },\n                { date: '2012-03-06', status: 4 },\n                { date: '2012-02-06', status: 4 },\n                { date: '2012-01-06', status: 4 },\n                { date: '2011-12-06', status: 3 },\n                { date: '2011-11-06', status: 2 },\n                { date: '2011-10-07', status: 1 },\n                { date: '2011-09-07', status: 'C' },\n                { date: '2011-08-07', status: 'C' },\n                { date: '2011-07-07', status: 'C' },\n                { date: '2011-06-07', status: 'C' },\n                { date: '2011-05-07', status: 'C' },\n                { date: '2011-04-07', status: 'C' },\n                { date: '2011-03-06', status: 'C' },\n                { date: '2011-02-06', status: 1 },\n                { date: '2011-01-06', status: 'C' },\n                { date: '2010-12-06', status: 'C' },\n                { date: '2010-11-07', status: 'C' },\n                { date: '2010-10-07', status: 'C' },\n                { date: '2010-09-07', status: 'C' },\n                { date: '2010-08-07', status: 'C' },\n                { date: '2010-07-07', status: 4 },\n                { date: '2010-06-07', status: 4 },\n                { date: '2010-05-07', status: 4 },\n              ],\n            },\n            CreditLimit: 9400,\n          },\n          Source: {\n            BorrowerKey: '',\n            Bureau: {\n              abbreviation: 'TransUnion',\n              description: 'TransUnion',\n              symbol: 'TUC',\n              rank: 1,\n            },\n            InquiryDate: '2015-06-09',\n            Reference: '0757326e-da32-48ea-99e',\n          },\n        },\n      },\n      {\n        accountTypeDescription: 'Installment Account',\n        accountTypeSymbol: 'I',\n        accountTypeAbbreviation: 'Installment',\n        Tradeline: {\n          subscriberCode: 3946018,\n          highBalance: 31888,\n          dateVerified: '2014-03-10',\n          dateReported: '2014-03-10',\n          dateOpened: '2009-09-09',\n          accountNumber: '8X6X9X8X',\n          dateAccountStatus: '2013-10-08',\n          currentBalance: 245,\n          creditorName: 'AMER HONDA',\n          position: 8,\n          dateClosed: '2013-10-08',\n          bureau: 'TransUnion',\n          AccountCondition: {\n            abbreviation: 'Closed',\n            description: 'Closed',\n            symbol: 'C',\n            rank: 50,\n          },\n          AccountDesignator: {\n            abbreviation: 'Joint',\n            description: 'Joint',\n            symbol: 'J',\n            rank: 199,\n          },\n          DisputeFlag: {\n            abbreviation: 'Account not disputed',\n            description: 'Account not disputed',\n            symbol: 'F',\n            rank: 199,\n          },\n          IndustryCode: {\n            abbreviation: 'Credit Union',\n            description: 'Credit Union',\n            symbol: 'Q',\n            rank: 199,\n          },\n          OpenClosed: {\n            abbreviation: 'Closed',\n            description: 'Closed',\n            symbol: 'C',\n            rank: 198,\n          },\n          PayStatus: {\n            abbreviation: 'Current',\n            description: 'Current',\n            symbol: 'C',\n            rank: 110,\n          },\n          VerificationIndicator: {\n            abbreviation: 'Account not disputed',\n            description: 'Account not disputed',\n            symbol: 'F',\n            rank: 199,\n          },\n          GrantedTrade: {\n            monthsReviewed: 48,\n            monthlyPayment: 642,\n            late90Count: 0,\n            late60Count: 0,\n            late30Count: 3,\n            dateLastPayment: '2013-10-08',\n            termMonths: 72,\n            collateral: '',\n            amountPastDue: 0,\n            worstPatStatusCount: 48,\n            AccountType: {\n              abbreviation: 'Auto Loan',\n              description: 'Auto Loan',\n              symbol: 'AU',\n              rank: 50,\n            },\n            CreditType: {\n              abbreviation: 'Installment',\n              description: 'Installment Account',\n              symbol: 'I',\n              rank: 20,\n            },\n            PaymentFrequency: {\n              abbreviation: 'Monthly (every month)',\n              description: 'Monthly (every month)',\n              symbol: 'M',\n              rank: 199,\n            },\n            TermType: {\n              abbreviation: 'Provided',\n              description: 'Provided',\n              symbol: 'P',\n              rank: 199,\n            },\n            WorstPayStatus: {\n              abbreviation: '30 Delinq',\n              description: 'Late 30 Days',\n              symbol: 1,\n              rank: 105,\n            },\n            PayStatusHistory: {\n              status: 'CCCCCCCCCCCC111CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC',\n              startDate: '2014-02-10',\n              MonthlyPayStatus: [\n                { date: '2014-02-10', status: 'C' },\n                { date: '2014-01-10', status: 'C' },\n                { date: '2013-12-10', status: 'C' },\n                { date: '2013-11-10', status: 'C' },\n                { date: '2013-10-10', status: 'C' },\n                { date: '2013-09-10', status: 'C' },\n                { date: '2013-08-10', status: 'C' },\n                { date: '2013-07-10', status: 'C' },\n                { date: '2013-06-10', status: 'C' },\n                { date: '2013-05-10', status: 'C' },\n                { date: '2013-04-10', status: 'C' },\n                { date: '2013-03-10', status: 'C' },\n                { date: '2013-02-10', status: 1 },\n                { date: '2013-01-10', status: 1 },\n                { date: '2012-12-10', status: 1 },\n                { date: '2012-11-10', status: 'C' },\n                { date: '2012-10-10', status: 'C' },\n                { date: '2012-09-10', status: 'C' },\n                { date: '2012-08-10', status: 'C' },\n                { date: '2012-07-10', status: 'C' },\n                { date: '2012-06-10', status: 'C' },\n                { date: '2012-05-10', status: 'C' },\n                { date: '2012-04-10', status: 'C' },\n                { date: '2012-03-10', status: 'C' },\n                { date: '2012-02-10', status: 'C' },\n                { date: '2012-01-10', status: 'C' },\n                { date: '2011-12-10', status: 'C' },\n                { date: '2011-11-10', status: 'C' },\n                { date: '2011-10-10', status: 'C' },\n                { date: '2011-09-10', status: 'C' },\n                { date: '2011-08-10', status: 'C' },\n                { date: '2011-07-10', status: 'C' },\n                { date: '2011-06-10', status: 'C' },\n                { date: '2011-05-10', status: 'C' },\n                { date: '2011-04-10', status: 'C' },\n                { date: '2011-03-10', status: 'C' },\n                { date: '2011-02-10', status: 'C' },\n                { date: '2011-01-10', status: 'C' },\n                { date: '2010-12-10', status: 'C' },\n                { date: '2010-11-10', status: 'C' },\n                { date: '2010-10-10', status: 'C' },\n                { date: '2010-09-10', status: 'C' },\n                { date: '2010-08-10', status: 'C' },\n                { date: '2010-07-10', status: 'C' },\n                { date: '2010-06-10', status: 'C' },\n                { date: '2010-05-10', status: 'C' },\n                { date: '2010-04-10', status: 'C' },\n                { date: '2010-03-10', status: 'C' },\n              ],\n            },\n            CreditLimit: 0,\n          },\n          Source: {\n            BorrowerKey: '',\n            Bureau: {\n              abbreviation: 'TransUnion',\n              description: 'TransUnion',\n              symbol: 'TUC',\n              rank: 1,\n            },\n            InquiryDate: '2015-06-09',\n            Reference: '0757326e-da32-48ea-99e',\n          },\n        },\n      },\n      {\n        accountTypeDescription: 'Installment Account',\n        accountTypeSymbol: 'I',\n        accountTypeAbbreviation: 'Installment',\n        Tradeline: {\n          subscriberCode: '01ZHV008',\n          highBalance: 5889,\n          dateVerified: '2012-08-16',\n          dateReported: '2012-08-16',\n          dateOpened: '2010-09-27',\n          accountNumber: '1X5X4X9',\n          dateAccountStatus: '2012-08-16',\n          currentBalance: 0,\n          creditorName: 'ARVEST BANK',\n          position: 9,\n          dateClosed: '2012-08-16',\n          bureau: 'TransUnion',\n          AccountCondition: {\n            abbreviation: 'Closed',\n            description: 'Closed',\n            symbol: 'C',\n            rank: 50,\n          },\n          AccountDesignator: {\n            abbreviation: 'Individual',\n            description: 'Individual',\n            symbol: 'I',\n            rank: 199,\n          },\n          DisputeFlag: {\n            abbreviation: 'Account not disputed',\n            description: 'Account not disputed',\n            symbol: 'F',\n            rank: 199,\n          },\n          IndustryCode: {\n            abbreviation: 'Bank',\n            description: 'Bank',\n            symbol: 'B',\n            rank: 199,\n          },\n          OpenClosed: {\n            abbreviation: 'Closed',\n            description: 'Closed',\n            symbol: 'C',\n            rank: 198,\n          },\n          PayStatus: {\n            abbreviation: 'Current',\n            description: 'Current',\n            symbol: 'C',\n            rank: 110,\n          },\n          VerificationIndicator: {\n            abbreviation: 'Account not disputed',\n            description: 'Account not disputed',\n            symbol: 'F',\n            rank: 199,\n          },\n          Remark: {\n            customRemark: '',\n            RemarkCode: {\n              abbreviation: 'Closed',\n              description: 'Closed',\n              symbol: 'T00CLO',\n              rank: 199,\n            },\n          },\n          GrantedTrade: {\n            monthsReviewed: 21,\n            monthlyPayment: 0,\n            late90Count: 0,\n            late60Count: 0,\n            late30Count: 1,\n            dateLastPayment: '2012-07-17',\n            termMonths: 0,\n            collateral: '',\n            amountPastDue: 0,\n            worstPatStatusCount: 21,\n            AccountType: {\n              abbreviation: 'Secured loan',\n              description: 'Secured loan',\n              symbol: 'SE',\n              rank: 50,\n            },\n            CreditType: {\n              abbreviation: 'Installment',\n              description: 'Installment Account',\n              symbol: 'I',\n              rank: 20,\n            },\n            PaymentFrequency: {\n              abbreviation: '',\n              description: '',\n              symbol: '',\n              rank: 100000,\n            },\n            TermType: {\n              abbreviation: 'Provided',\n              description: 'Provided',\n              symbol: 'P',\n              rank: 199,\n            },\n            WorstPayStatus: {\n              abbreviation: '30 Delinq',\n              description: 'Late 30 Days',\n              symbol: 1,\n              rank: 105,\n            },\n            PayStatusHistory: {\n              status: 'CCCCCCCCCCCCCC1CCCCCC',\n              startDate: '2012-07-16',\n              MonthlyPayStatus: [\n                { date: '2012-07-16', status: 'C' },\n                { date: '2012-06-16', status: 'C' },\n                { date: '2012-05-16', status: 'C' },\n                { date: '2012-04-16', status: 'C' },\n                { date: '2012-03-16', status: 'C' },\n                { date: '2012-02-15', status: 'C' },\n                { date: '2012-01-15', status: 'C' },\n                { date: '2011-12-15', status: 'C' },\n                { date: '2011-11-15', status: 'C' },\n                { date: '2011-10-16', status: 'C' },\n                { date: '2011-09-16', status: 'C' },\n                { date: '2011-08-16', status: 'C' },\n                { date: '2011-07-16', status: 'C' },\n                { date: '2011-06-16', status: 'C' },\n                { date: '2011-05-16', status: 1 },\n                { date: '2011-04-16', status: 'C' },\n                { date: '2011-03-16', status: 'C' },\n                { date: '2011-02-15', status: 'C' },\n                { date: '2011-01-15', status: 'C' },\n                { date: '2010-12-15', status: 'C' },\n                { date: '2010-11-15', status: 'C' },\n                { date: '2010-10-16', status: '' },\n                { date: '2010-09-16', status: '' },\n                { date: '2010-08-16', status: '' },\n              ],\n            },\n            CreditLimit: 0,\n          },\n          Source: {\n            BorrowerKey: '',\n            Bureau: {\n              abbreviation: 'TransUnion',\n              description: 'TransUnion',\n              symbol: 'TUC',\n              rank: 1,\n            },\n            InquiryDate: '2015-06-09',\n            Reference: '0757326e-da32-48ea-99e',\n          },\n        },\n      },\n      {\n        accountTypeDescription: 'Installment Account',\n        accountTypeSymbol: 'I',\n        accountTypeAbbreviation: 'Installment',\n        Tradeline: {\n          subscriberCode: '0654N1XG',\n          highBalance: 7720,\n          dateVerified: '2012-02-29',\n          dateReported: '2012-02-29',\n          dateOpened: '2009-08-11',\n          accountNumber: '8X6X6X5X3X8X5X5X',\n          dateAccountStatus: '2012-02-29',\n          currentBalance: 0,\n          creditorName: 'SPRINGLF FIN',\n          position: 10,\n          dateClosed: '2012-02-29',\n          bureau: 'TransUnion',\n          AccountCondition: {\n            abbreviation: 'Closed',\n            description: 'Closed',\n            symbol: 'C',\n            rank: 50,\n          },\n          AccountDesignator: {\n            abbreviation: 'Joint',\n            description: 'Joint',\n            symbol: 'J',\n            rank: 199,\n          },\n          DisputeFlag: {\n            abbreviation: 'Account not disputed',\n            description: 'Account not disputed',\n            symbol: 'F',\n            rank: 199,\n          },\n          IndustryCode: {\n            abbreviation: 'Finance/Personal',\n            description: 'Finance/Personal',\n            symbol: 'F',\n            rank: 199,\n          },\n          OpenClosed: {\n            abbreviation: 'Closed',\n            description: 'Closed',\n            symbol: 'C',\n            rank: 198,\n          },\n          PayStatus: {\n            abbreviation: 'Current',\n            description: 'Current',\n            symbol: 'C',\n            rank: 110,\n          },\n          VerificationIndicator: {\n            abbreviation: 'Account not disputed',\n            description: 'Account not disputed',\n            symbol: 'F',\n            rank: 199,\n          },\n          Remark: {\n            customRemark: '',\n            RemarkCode: {\n              abbreviation: 'Closed',\n              description: 'Closed',\n              symbol: 'T00CLO',\n              rank: 199,\n            },\n          },\n          GrantedTrade: {\n            monthsReviewed: 28,\n            monthlyPayment: 214,\n            late90Count: 0,\n            late60Count: 0,\n            late30Count: 0,\n            dateLastPayment: '2011-11-13',\n            termMonths: 36,\n            collateral: '',\n            amountPastDue: 0,\n            worstPatStatusCount: 28,\n            AccountType: {\n              abbreviation: 'Secured by household goods/collateral',\n              description: 'Secured by household goods/collateral',\n              symbol: 'SO',\n              rank: 50,\n            },\n            CreditType: {\n              abbreviation: 'Installment',\n              description: 'Installment Account',\n              symbol: 'I',\n              rank: 20,\n            },\n            PaymentFrequency: {\n              abbreviation: 'Monthly (every month)',\n              description: 'Monthly (every month)',\n              symbol: 'M',\n              rank: 199,\n            },\n            TermType: {\n              abbreviation: 'Provided',\n              description: 'Provided',\n              symbol: 'P',\n              rank: 199,\n            },\n            WorstPayStatus: {\n              abbreviation: 'Current',\n              description: 'Current',\n              symbol: 'C',\n              rank: 110,\n            },\n            PayStatusHistory: {\n              status: 'CCCCCCCCCCCCCCCCCCCCCCCCCCCC',\n              startDate: '2012-01-29',\n              MonthlyPayStatus: [\n                { date: '2012-01-29', status: 'C' },\n                { date: '2011-12-29', status: 'C' },\n                { date: '2011-11-29', status: 'C' },\n                { date: '2011-10-29', status: 'C' },\n                { date: '2011-09-29', status: 'C' },\n                { date: '2011-08-29', status: 'C' },\n                { date: '2011-07-29', status: 'C' },\n                { date: '2011-06-29', status: 'C' },\n                { date: '2011-05-29', status: 'C' },\n                { date: '2011-04-29', status: 'C' },\n                { date: '2011-03-29', status: 'C' },\n                { date: '2011-02-28', status: 'C' },\n                { date: '2011-01-28', status: 'C' },\n                { date: '2010-12-28', status: 'C' },\n                { date: '2010-11-28', status: 'C' },\n                { date: '2010-10-28', status: 'C' },\n                { date: '2010-09-28', status: 'C' },\n                { date: '2010-08-28', status: 'C' },\n                { date: '2010-07-28', status: 'C' },\n                { date: '2010-06-28', status: 'C' },\n                { date: '2010-05-28', status: 'C' },\n                { date: '2010-04-28', status: 'C' },\n                { date: '2010-03-28', status: 'C' },\n                { date: '2010-02-28', status: 'C' },\n                { date: '2010-01-28', status: 'C' },\n                { date: '2009-12-28', status: 'C' },\n                { date: '2009-11-28', status: 'C' },\n                { date: '2009-10-28', status: 'C' },\n              ],\n            },\n            CreditLimit: 0,\n          },\n          Source: {\n            BorrowerKey: '',\n            Bureau: {\n              abbreviation: 'TransUnion',\n              description: 'TransUnion',\n              symbol: 'TUC',\n              rank: 1,\n            },\n            InquiryDate: '2015-06-09',\n            Reference: '0757326e-da32-48ea-99e',\n          },\n        },\n      },\n      {\n        accountTypeDescription: 'Installment Account',\n        accountTypeSymbol: 'I',\n        accountTypeAbbreviation: 'Installment',\n        Tradeline: {\n          subscriberCode: '0890D30G',\n          highBalance: 20093,\n          dateVerified: '2012-01-31',\n          dateReported: '2012-01-31',\n          dateOpened: '2006-01-20',\n          accountNumber: '1X4X3X0X0X',\n          dateAccountStatus: '2012-01-31',\n          currentBalance: 0,\n          creditorName: 'CITI AUTO',\n          position: 11,\n          dateClosed: '2012-01-31',\n          bureau: 'TransUnion',\n          AccountCondition: {\n            abbreviation: 'Closed',\n            description: 'Closed',\n            symbol: 'C',\n            rank: 50,\n          },\n          AccountDesignator: {\n            abbreviation: 'Joint',\n            description: 'Joint',\n            symbol: 'J',\n            rank: 199,\n          },\n          DisputeFlag: {\n            abbreviation: 'Account not disputed',\n            description: 'Account not disputed',\n            symbol: 'F',\n            rank: 199,\n          },\n          IndustryCode: {\n            abbreviation: 'Finance/Personal',\n            description: 'Finance/Personal',\n            symbol: 'F',\n            rank: 199,\n          },\n          OpenClosed: {\n            abbreviation: 'Closed',\n            description: 'Closed',\n            symbol: 'C',\n            rank: 198,\n          },\n          PayStatus: {\n            abbreviation: 'Current',\n            description: 'Current',\n            symbol: 'C',\n            rank: 110,\n          },\n          VerificationIndicator: {\n            abbreviation: 'Account not disputed',\n            description: 'Account not disputed',\n            symbol: 'F',\n            rank: 199,\n          },\n          Remark: {\n            customRemark: '',\n            RemarkCode: {\n              abbreviation: 'Closed',\n              description: 'Closed',\n              symbol: 'T00CLO',\n              rank: 199,\n            },\n          },\n          GrantedTrade: {\n            monthsReviewed: 48,\n            monthlyPayment: 0,\n            late90Count: 0,\n            late60Count: 0,\n            late30Count: 0,\n            dateLastPayment: '2011-12-31',\n            termMonths: 72,\n            collateral: '',\n            amountPastDue: 0,\n            worstPatStatusCount: 48,\n            AccountType: {\n              abbreviation: 'Auto Loan',\n              description: 'Auto Loan',\n              symbol: 'AU',\n              rank: 50,\n            },\n            CreditType: {\n              abbreviation: 'Installment',\n              description: 'Installment Account',\n              symbol: 'I',\n              rank: 20,\n            },\n            PaymentFrequency: {\n              abbreviation: 'Monthly (every month)',\n              description: 'Monthly (every month)',\n              symbol: 'M',\n              rank: 199,\n            },\n            TermType: {\n              abbreviation: 'Provided',\n              description: 'Provided',\n              symbol: 'P',\n              rank: 199,\n            },\n            WorstPayStatus: {\n              abbreviation: 'Current',\n              description: 'Current',\n              symbol: 'C',\n              rank: 110,\n            },\n            PayStatusHistory: {\n              status: 'CCCCCCCCCCCCCCCCCCCCCCCCCCCCCUCCCCCCCCCCCCCCCCCC',\n              startDate: '2011-12-31',\n              MonthlyPayStatus: [\n                { date: '2011-12-31', status: 'C' },\n                { date: '2011-11-30', status: 'C' },\n                { date: '2011-10-30', status: 'C' },\n                { date: '2011-09-30', status: 'C' },\n                { date: '2011-08-30', status: 'C' },\n                { date: '2011-07-30', status: 'C' },\n                { date: '2011-06-30', status: 'C' },\n                { date: '2011-05-30', status: 'C' },\n                { date: '2011-04-30', status: 'C' },\n                { date: '2011-03-30', status: 'C' },\n                { date: '2011-02-28', status: 'C' },\n                { date: '2011-01-28', status: 'C' },\n                { date: '2010-12-28', status: 'C' },\n                { date: '2010-11-28', status: 'C' },\n                { date: '2010-10-28', status: 'C' },\n                { date: '2010-09-28', status: 'C' },\n                { date: '2010-08-28', status: 'C' },\n                { date: '2010-07-28', status: 'C' },\n                { date: '2010-06-28', status: 'C' },\n                { date: '2010-05-28', status: 'C' },\n                { date: '2010-04-28', status: 'C' },\n                { date: '2010-03-28', status: 'C' },\n                { date: '2010-02-28', status: 'C' },\n                { date: '2010-01-28', status: 'C' },\n                { date: '2009-12-28', status: 'C' },\n                { date: '2009-11-28', status: 'C' },\n                { date: '2009-10-28', status: 'C' },\n                { date: '2009-09-28', status: 'C' },\n                { date: '2009-08-28', status: 'C' },\n                { date: '2009-07-28', status: 'U' },\n                { date: '2009-06-28', status: 'C' },\n                { date: '2009-05-28', status: 'C' },\n                { date: '2009-04-28', status: 'C' },\n                { date: '2009-03-28', status: 'C' },\n                { date: '2009-02-28', status: 'C' },\n                { date: '2009-01-28', status: 'C' },\n                { date: '2008-12-28', status: 'C' },\n                { date: '2008-11-28', status: 'C' },\n                { date: '2008-10-28', status: 'C' },\n                { date: '2008-09-28', status: 'C' },\n                { date: '2008-08-28', status: 'C' },\n                { date: '2008-07-28', status: 'C' },\n                { date: '2008-06-28', status: 'C' },\n                { date: '2008-05-28', status: 'C' },\n                { date: '2008-04-28', status: 'C' },\n                { date: '2008-03-28', status: 'C' },\n                { date: '2008-02-28', status: 'C' },\n                { date: '2008-01-28', status: 'C' },\n              ],\n            },\n            CreditLimit: 0,\n          },\n          Source: {\n            BorrowerKey: '',\n            Bureau: {\n              abbreviation: 'TransUnion',\n              description: 'TransUnion',\n              symbol: 'TUC',\n              rank: 1,\n            },\n            InquiryDate: '2015-06-09',\n            Reference: '0757326e-da32-48ea-99e',\n          },\n        },\n      },\n      {\n        accountTypeDescription: 'Installment Account',\n        accountTypeSymbol: 'I',\n        accountTypeAbbreviation: 'Installment',\n        Tradeline: {\n          subscriberCode: '01ZHV008',\n          highBalance: 7034,\n          dateVerified: '2010-11-01',\n          dateReported: '2010-11-01',\n          dateOpened: '2009-04-06',\n          accountNumber: '3X7X7X7',\n          dateAccountStatus: '2010-11-01',\n          currentBalance: 0,\n          creditorName: 'ARVEST BANK',\n          position: 12,\n          dateClosed: '2010-11-01',\n          bureau: 'TransUnion',\n          AccountCondition: {\n            abbreviation: 'Closed',\n            description: 'Closed',\n            symbol: 'C',\n            rank: 50,\n          },\n          AccountDesignator: {\n            abbreviation: 'Joint',\n            description: 'Joint',\n            symbol: 'J',\n            rank: 199,\n          },\n          DisputeFlag: {\n            abbreviation: 'Account not disputed',\n            description: 'Account not disputed',\n            symbol: 'F',\n            rank: 199,\n          },\n          IndustryCode: {\n            abbreviation: 'Bank',\n            description: 'Bank',\n            symbol: 'B',\n            rank: 199,\n          },\n          OpenClosed: {\n            abbreviation: 'Closed',\n            description: 'Closed',\n            symbol: 'C',\n            rank: 198,\n          },\n          PayStatus: {\n            abbreviation: 'Current',\n            description: 'Current',\n            symbol: 'C',\n            rank: 110,\n          },\n          VerificationIndicator: {\n            abbreviation: 'Account not disputed',\n            description: 'Account not disputed',\n            symbol: 'F',\n            rank: 199,\n          },\n          Remark: {\n            customRemark: '',\n            RemarkCode: {\n              abbreviation: 'Closed',\n              description: 'Closed',\n              symbol: 'T00CLO',\n              rank: 199,\n            },\n          },\n          GrantedTrade: {\n            monthsReviewed: 17,\n            monthlyPayment: 312,\n            late90Count: 0,\n            late60Count: 0,\n            late30Count: 0,\n            dateLastPayment: '2010-10-31',\n            termMonths: 24,\n            collateral: '',\n            amountPastDue: 0,\n            worstPatStatusCount: 17,\n            AccountType: {\n              abbreviation: 'Secured loan',\n              description: 'Secured loan',\n              symbol: 'SE',\n              rank: 50,\n            },\n            CreditType: {\n              abbreviation: 'Installment',\n              description: 'Installment Account',\n              symbol: 'I',\n              rank: 20,\n            },\n            PaymentFrequency: {\n              abbreviation: 'Monthly (every month)',\n              description: 'Monthly (every month)',\n              symbol: 'M',\n              rank: 199,\n            },\n            TermType: {\n              abbreviation: 'Provided',\n              description: 'Provided',\n              symbol: 'P',\n              rank: 199,\n            },\n            WorstPayStatus: {\n              abbreviation: 'Current',\n              description: 'Current',\n              symbol: 'C',\n              rank: 110,\n            },\n            PayStatusHistory: {\n              status: 'CCCCCCCCCCCCCCCCC',\n              startDate: '2010-10-01',\n              MonthlyPayStatus: [\n                { date: '2010-10-01', status: 'C' },\n                { date: '2010-09-01', status: 'C' },\n                { date: '2010-08-01', status: 'C' },\n                { date: '2010-07-01', status: 'C' },\n                { date: '2010-06-01', status: 'C' },\n                { date: '2010-05-01', status: 'C' },\n                { date: '2010-04-01', status: 'C' },\n                { date: '2010-02-28', status: 'C' },\n                { date: '2010-01-31', status: 'C' },\n                { date: '2009-12-31', status: 'C' },\n                { date: '2009-11-30', status: 'C' },\n                { date: '2009-11-01', status: 'C' },\n                { date: '2009-10-01', status: 'C' },\n                { date: '2009-09-01', status: 'C' },\n                { date: '2009-08-01', status: 'C' },\n                { date: '2009-07-01', status: 'C' },\n                { date: '2009-06-01', status: 'C' },\n                { date: '2009-05-01', status: '' },\n                { date: '2009-04-01', status: '' },\n                { date: '2009-02-28', status: '' },\n                { date: '2009-01-31', status: '' },\n                { date: '2008-12-31', status: '' },\n                { date: '2008-11-30', status: '' },\n                { date: '2008-11-01', status: '' },\n              ],\n            },\n            CreditLimit: 0,\n          },\n          Source: {\n            BorrowerKey: '',\n            Bureau: {\n              abbreviation: 'TransUnion',\n              description: 'TransUnion',\n              symbol: 'TUC',\n              rank: 1,\n            },\n            InquiryDate: '2015-06-09',\n            Reference: '0757326e-da32-48ea-99e',\n          },\n        },\n      },\n      {\n        accountTypeDescription: 'Installment Account',\n        accountTypeSymbol: 'I',\n        accountTypeAbbreviation: 'Installment',\n        Tradeline: {\n          subscriberCode: '0654N1XG',\n          highBalance: 1215,\n          dateVerified: '2009-07-31',\n          dateReported: '2009-07-31',\n          dateOpened: '2008-02-10',\n          accountNumber: '2X5X6X5X3X8X5X5X',\n          dateAccountStatus: '2009-07-31',\n          currentBalance: 0,\n          creditorName: 'SPRINGLF FIN',\n          position: 13,\n          dateClosed: '2009-07-31',\n          bureau: 'TransUnion',\n          AccountCondition: {\n            abbreviation: 'Closed',\n            description: 'Closed',\n            symbol: 'C',\n            rank: 50,\n          },\n          AccountDesignator: {\n            abbreviation: 'Joint',\n            description: 'Joint',\n            symbol: 'J',\n            rank: 199,\n          },\n          DisputeFlag: {\n            abbreviation: 'Account not disputed',\n            description: 'Account not disputed',\n            symbol: 'F',\n            rank: 199,\n          },\n          IndustryCode: {\n            abbreviation: 'Finance/Personal',\n            description: 'Finance/Personal',\n            symbol: 'F',\n            rank: 199,\n          },\n          OpenClosed: {\n            abbreviation: 'Closed',\n            description: 'Closed',\n            symbol: 'C',\n            rank: 198,\n          },\n          PayStatus: {\n            abbreviation: 'Current',\n            description: 'Current',\n            symbol: 'C',\n            rank: 110,\n          },\n          VerificationIndicator: {\n            abbreviation: 'Account not disputed',\n            description: 'Account not disputed',\n            symbol: 'F',\n            rank: 199,\n          },\n          Remark: {\n            customRemark: '',\n            RemarkCode: {\n              abbreviation: 'Closed',\n              description: 'Closed',\n              symbol: 'T00CLO',\n              rank: 199,\n            },\n          },\n          GrantedTrade: {\n            monthsReviewed: 16,\n            monthlyPayment: 80,\n            late90Count: 0,\n            late60Count: 0,\n            late30Count: 0,\n            dateLastPayment: '2009-06-16',\n            termMonths: 15,\n            collateral: '',\n            amountPastDue: 0,\n            worstPatStatusCount: 16,\n            AccountType: {\n              abbreviation: 'Secured by household goods/collateral',\n              description: 'Secured by household goods/collateral',\n              symbol: 'SO',\n              rank: 50,\n            },\n            CreditType: {\n              abbreviation: 'Installment',\n              description: 'Installment Account',\n              symbol: 'I',\n              rank: 20,\n            },\n            PaymentFrequency: {\n              abbreviation: 'Monthly (every month)',\n              description: 'Monthly (every month)',\n              symbol: 'M',\n              rank: 199,\n            },\n            TermType: {\n              abbreviation: 'Provided',\n              description: 'Provided',\n              symbol: 'P',\n              rank: 199,\n            },\n            WorstPayStatus: {\n              abbreviation: 'Current',\n              description: 'Current',\n              symbol: 'C',\n              rank: 110,\n            },\n            PayStatusHistory: {\n              status: 'CCCCCCCUCCCCCCCC',\n              startDate: '2009-06-30',\n              MonthlyPayStatus: [\n                { date: '2009-06-30', status: 'C' },\n                { date: '2009-05-30', status: 'C' },\n                { date: '2009-04-30', status: 'C' },\n                { date: '2009-03-30', status: 'C' },\n                { date: '2009-02-27', status: 'C' },\n                { date: '2009-01-27', status: 'C' },\n                { date: '2008-12-27', status: 'C' },\n                { date: '2008-11-27', status: 'U' },\n                { date: '2008-10-28', status: 'C' },\n                { date: '2008-09-28', status: 'C' },\n                { date: '2008-08-28', status: 'C' },\n                { date: '2008-07-28', status: 'C' },\n                { date: '2008-06-28', status: 'C' },\n                { date: '2008-05-28', status: 'C' },\n                { date: '2008-04-28', status: 'C' },\n                { date: '2008-03-28', status: 'C' },\n                { date: '2008-02-27', status: '' },\n                { date: '2008-01-27', status: '' },\n                { date: '2007-12-27', status: '' },\n                { date: '2007-11-27', status: '' },\n                { date: '2007-10-28', status: '' },\n                { date: '2007-09-28', status: '' },\n                { date: '2007-08-28', status: '' },\n                { date: '2007-07-28', status: '' },\n              ],\n            },\n            CreditLimit: 0,\n          },\n          Source: {\n            BorrowerKey: '',\n            Bureau: {\n              abbreviation: 'TransUnion',\n              description: 'TransUnion',\n              symbol: 'TUC',\n              rank: 1,\n            },\n            InquiryDate: '2015-06-09',\n            Reference: '0757326e-da32-48ea-99e',\n          },\n        },\n      },\n      {\n        accountTypeDescription: 'Installment Account',\n        accountTypeSymbol: 'I',\n        accountTypeAbbreviation: 'Installment',\n        Tradeline: {\n          subscriberCode: 4176128,\n          highBalance: 13724,\n          dateVerified: '2009-07-31',\n          dateReported: '2009-07-31',\n          dateOpened: '2004-06-16',\n          accountNumber: '7X4X0X6X7X9X1X0X1',\n          dateAccountStatus: '2009-07-31',\n          currentBalance: 0,\n          creditorName: 'TOYOTA MTR',\n          position: 14,\n          dateClosed: '2009-07-31',\n          bureau: 'TransUnion',\n          AccountCondition: {\n            abbreviation: 'Closed',\n            description: 'Closed',\n            symbol: 'C',\n            rank: 50,\n          },\n          AccountDesignator: {\n            abbreviation: 'Individual',\n            description: 'Individual',\n            symbol: 'I',\n            rank: 199,\n          },\n          DisputeFlag: {\n            abbreviation: 'Account not disputed',\n            description: 'Account not disputed',\n            symbol: 'F',\n            rank: 199,\n          },\n          IndustryCode: {\n            abbreviation: 'Credit Union',\n            description: 'Credit Union',\n            symbol: 'Q',\n            rank: 199,\n          },\n          OpenClosed: {\n            abbreviation: 'Closed',\n            description: 'Closed',\n            symbol: 'C',\n            rank: 198,\n          },\n          PayStatus: {\n            abbreviation: 'Current',\n            description: 'Current',\n            symbol: 'C',\n            rank: 110,\n          },\n          VerificationIndicator: {\n            abbreviation: 'Account not disputed',\n            description: 'Account not disputed',\n            symbol: 'F',\n            rank: 199,\n          },\n          Remark: {\n            customRemark: '',\n            RemarkCode: {\n              abbreviation: 'Closed',\n              description: 'Closed',\n              symbol: 'T00CLO',\n              rank: 199,\n            },\n          },\n          GrantedTrade: {\n            monthsReviewed: 47,\n            monthlyPayment: 332,\n            late90Count: 0,\n            late60Count: 0,\n            late30Count: 0,\n            dateLastPayment: '2009-07-31',\n            termMonths: 60,\n            collateral: '',\n            amountPastDue: 0,\n            worstPatStatusCount: 47,\n            AccountType: {\n              abbreviation: 'Auto Loan',\n              description: 'Auto Loan',\n              symbol: 'AU',\n              rank: 50,\n            },\n            CreditType: {\n              abbreviation: 'Installment',\n              description: 'Installment Account',\n              symbol: 'I',\n              rank: 20,\n            },\n            PaymentFrequency: {\n              abbreviation: 'Monthly (every month)',\n              description: 'Monthly (every month)',\n              symbol: 'M',\n              rank: 199,\n            },\n            TermType: {\n              abbreviation: 'Provided',\n              description: 'Provided',\n              symbol: 'P',\n              rank: 199,\n            },\n            WorstPayStatus: {\n              abbreviation: 'Current',\n              description: 'Current',\n              symbol: 'C',\n              rank: 110,\n            },\n            PayStatusHistory: {\n              status: 'CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC',\n              startDate: '2009-06-30',\n              MonthlyPayStatus: [\n                { date: '2009-06-30', status: 'C' },\n                { date: '2009-05-30', status: 'C' },\n                { date: '2009-04-30', status: 'C' },\n                { date: '2009-03-30', status: 'C' },\n                { date: '2009-02-27', status: 'C' },\n                { date: '2009-01-27', status: 'C' },\n                { date: '2008-12-27', status: 'C' },\n                { date: '2008-11-27', status: 'C' },\n                { date: '2008-10-28', status: 'C' },\n                { date: '2008-09-28', status: 'C' },\n                { date: '2008-08-28', status: 'C' },\n                { date: '2008-07-28', status: 'C' },\n                { date: '2008-06-28', status: 'C' },\n                { date: '2008-05-28', status: 'C' },\n                { date: '2008-04-28', status: 'C' },\n                { date: '2008-03-28', status: 'C' },\n                { date: '2008-02-27', status: 'C' },\n                { date: '2008-01-27', status: 'C' },\n                { date: '2007-12-27', status: 'C' },\n                { date: '2007-11-27', status: 'C' },\n                { date: '2007-10-28', status: 'C' },\n                { date: '2007-09-28', status: 'C' },\n                { date: '2007-08-28', status: 'C' },\n                { date: '2007-07-28', status: 'C' },\n                { date: '2007-06-28', status: 'C' },\n                { date: '2007-05-28', status: 'C' },\n                { date: '2007-04-28', status: 'C' },\n                { date: '2007-03-28', status: 'C' },\n                { date: '2007-02-27', status: 'C' },\n                { date: '2007-01-27', status: 'C' },\n                { date: '2006-12-27', status: 'C' },\n                { date: '2006-11-27', status: 'C' },\n                { date: '2006-10-28', status: 'C' },\n                { date: '2006-09-28', status: 'C' },\n                { date: '2006-08-28', status: 'C' },\n                { date: '2006-07-28', status: 'C' },\n                { date: '2006-06-28', status: 'C' },\n                { date: '2006-05-28', status: 'C' },\n                { date: '2006-04-28', status: 'C' },\n                { date: '2006-03-27', status: 'C' },\n                { date: '2006-02-27', status: 'C' },\n                { date: '2006-01-27', status: 'C' },\n                { date: '2005-12-27', status: 'C' },\n                { date: '2005-11-27', status: 'C' },\n                { date: '2005-10-28', status: 'C' },\n                { date: '2005-09-28', status: 'C' },\n                { date: '2005-08-28', status: 'C' },\n              ],\n            },\n            CreditLimit: 0,\n          },\n          Source: {\n            BorrowerKey: '',\n            Bureau: {\n              abbreviation: 'TransUnion',\n              description: 'TransUnion',\n              symbol: 'TUC',\n              rank: 1,\n            },\n            InquiryDate: '2015-06-09',\n            Reference: '0757326e-da32-48ea-99e',\n          },\n        },\n      },\n      {\n        accountTypeDescription: 'Installment Account',\n        accountTypeSymbol: 'I',\n        accountTypeAbbreviation: 'Installment',\n        Tradeline: {\n          subscriberCode: '01ZHV008',\n          highBalance: 14927,\n          dateVerified: '2009-05-20',\n          dateReported: '2009-05-20',\n          dateOpened: '2007-01-31',\n          accountNumber: '2X2X4X5',\n          dateAccountStatus: '2009-05-20',\n          currentBalance: 0,\n          creditorName: 'ARVEST BANK',\n          position: 15,\n          dateClosed: '2009-05-20',\n          bureau: 'TransUnion',\n          AccountCondition: {\n            abbreviation: 'Closed',\n            description: 'Closed',\n            symbol: 'C',\n            rank: 50,\n          },\n          AccountDesignator: {\n            abbreviation: 'Joint',\n            description: 'Joint',\n            symbol: 'J',\n            rank: 199,\n          },\n          DisputeFlag: {\n            abbreviation: 'Account not disputed',\n            description: 'Account not disputed',\n            symbol: 'F',\n            rank: 199,\n          },\n          IndustryCode: {\n            abbreviation: 'Bank',\n            description: 'Bank',\n            symbol: 'B',\n            rank: 199,\n          },\n          OpenClosed: {\n            abbreviation: 'Closed',\n            description: 'Closed',\n            symbol: 'C',\n            rank: 198,\n          },\n          PayStatus: {\n            abbreviation: 'Current',\n            description: 'Current',\n            symbol: 'C',\n            rank: 110,\n          },\n          VerificationIndicator: {\n            abbreviation: 'Account not disputed',\n            description: 'Account not disputed',\n            symbol: 'F',\n            rank: 199,\n          },\n          Remark: {\n            customRemark: '',\n            RemarkCode: {\n              abbreviation: 'Closed',\n              description: 'Closed',\n              symbol: 'T00CLO',\n              rank: 199,\n            },\n          },\n          GrantedTrade: {\n            monthsReviewed: 27,\n            monthlyPayment: 0,\n            late90Count: 0,\n            late60Count: 0,\n            late30Count: 1,\n            dateLastPayment: '2009-03-17',\n            termMonths: 26,\n            collateral: '',\n            amountPastDue: 0,\n            worstPatStatusCount: 27,\n            AccountType: {\n              abbreviation: 'Secured loan',\n              description: 'Secured loan',\n              symbol: 'SE',\n              rank: 50,\n            },\n            CreditType: {\n              abbreviation: 'Installment',\n              description: 'Installment Account',\n              symbol: 'I',\n              rank: 20,\n            },\n            PaymentFrequency: {\n              abbreviation: 'Monthly (every month)',\n              description: 'Monthly (every month)',\n              symbol: 'M',\n              rank: 199,\n            },\n            TermType: {\n              abbreviation: 'Provided',\n              description: 'Provided',\n              symbol: 'P',\n              rank: 199,\n            },\n            WorstPayStatus: {\n              abbreviation: '30 Delinq',\n              description: 'Late 30 Days',\n              symbol: 1,\n              rank: 105,\n            },\n            PayStatusHistory: {\n              status: 'U1CCCCCCCCCCCCCCCCCCCCCCCCC',\n              startDate: '2009-04-20',\n              MonthlyPayStatus: [\n                { date: '2009-04-20', status: 'U' },\n                { date: '2009-03-20', status: 1 },\n                { date: '2009-02-19', status: 'C' },\n                { date: '2009-01-19', status: 'C' },\n                { date: '2008-12-19', status: 'C' },\n                { date: '2008-11-19', status: 'C' },\n                { date: '2008-10-20', status: 'C' },\n                { date: '2008-09-20', status: 'C' },\n                { date: '2008-08-20', status: 'C' },\n                { date: '2008-07-20', status: 'C' },\n                { date: '2008-06-20', status: 'C' },\n                { date: '2008-05-20', status: 'C' },\n                { date: '2008-04-20', status: 'C' },\n                { date: '2008-03-20', status: 'C' },\n                { date: '2008-02-19', status: 'C' },\n                { date: '2008-01-19', status: 'C' },\n                { date: '2007-12-19', status: 'C' },\n                { date: '2007-11-19', status: 'C' },\n                { date: '2007-10-20', status: 'C' },\n                { date: '2007-09-20', status: 'C' },\n                { date: '2007-08-20', status: 'C' },\n                { date: '2007-07-20', status: 'C' },\n                { date: '2007-06-20', status: 'C' },\n                { date: '2007-05-20', status: 'C' },\n                { date: '2007-04-20', status: 'C' },\n                { date: '2007-03-20', status: 'C' },\n                { date: '2007-02-19', status: 'C' },\n              ],\n            },\n            CreditLimit: 0,\n          },\n          Source: {\n            BorrowerKey: '',\n            Bureau: {\n              abbreviation: 'TransUnion',\n              description: 'TransUnion',\n              symbol: 'TUC',\n              rank: 1,\n            },\n            InquiryDate: '2015-06-09',\n            Reference: '0757326e-da32-48ea-99e',\n          },\n        },\n      },\n      {\n        accountTypeDescription: 'Revolving Account',\n        accountTypeSymbol: 'R',\n        accountTypeAbbreviation: 'Revolving',\n        Tradeline: {\n          subscriberCode: '01NZ8094',\n          highBalance: 200,\n          dateVerified: '2008-07-23',\n          dateReported: '2008-07-23',\n          dateOpened: '2002-07-01',\n          accountNumber: 585632851620,\n          dateAccountStatus: '2008-07-01',\n          currentBalance: 0,\n          creditorName: 'CB/STAGE',\n          position: 16,\n          bureau: 'TransUnion',\n          AccountCondition: {\n            abbreviation: 'Open',\n            description: 'Open',\n            symbol: 'O',\n            rank: 60,\n          },\n          AccountDesignator: {\n            abbreviation: 'Individual',\n            description: 'Individual',\n            symbol: 'I',\n            rank: 199,\n          },\n          DisputeFlag: {\n            abbreviation: 'Account not disputed',\n            description: 'Account not disputed',\n            symbol: 'F',\n            rank: 199,\n          },\n          IndustryCode: {\n            abbreviation: 'Department/Variety and Other Retail',\n            description: 'Department/Variety and Other Retail',\n            symbol: 'D',\n            rank: 199,\n          },\n          OpenClosed: {\n            abbreviation: 'Open',\n            description: 'Open',\n            symbol: 'O',\n            rank: 199,\n          },\n          PayStatus: {\n            abbreviation: 'Current',\n            description: 'Current',\n            symbol: 'C',\n            rank: 110,\n          },\n          VerificationIndicator: {\n            abbreviation: 'Account not disputed',\n            description: 'Account not disputed',\n            symbol: 'F',\n            rank: 199,\n          },\n          GrantedTrade: {\n            monthsReviewed: 4,\n            monthlyPayment: 0,\n            late90Count: 0,\n            late60Count: 0,\n            late30Count: 0,\n            dateLastPayment: '2008-07-01',\n            termMonths: 0,\n            collateral: '',\n            amountPastDue: 0,\n            worstPatStatusCount: 4,\n            AccountType: {\n              abbreviation: 'Charge account',\n              description: 'Charge account',\n              symbol: 'CH',\n              rank: 50,\n            },\n            CreditType: {\n              abbreviation: 'Revolving',\n              description: 'Revolving Account',\n              symbol: 'R',\n              rank: 50,\n            },\n            PaymentFrequency: {\n              abbreviation: '',\n              description: '',\n              symbol: '',\n              rank: 100000,\n            },\n            TermType: {\n              abbreviation: 'Provided',\n              description: 'Provided',\n              symbol: 'P',\n              rank: 199,\n            },\n            WorstPayStatus: {\n              abbreviation: 'Current',\n              description: 'Current',\n              symbol: 'C',\n              rank: 110,\n            },\n            PayStatusHistory: {\n              status: 'CCCC',\n              startDate: '2008-06-23',\n              MonthlyPayStatus: [\n                { date: '2008-06-23', status: 'C' },\n                { date: '2008-05-23', status: 'C' },\n                { date: '2008-04-23', status: 'C' },\n                { date: '2008-03-23', status: 'C' },\n                { date: '2008-02-22', status: '' },\n                { date: '2008-01-22', status: '' },\n                { date: '2007-12-22', status: '' },\n                { date: '2007-11-22', status: '' },\n                { date: '2007-10-23', status: '' },\n                { date: '2007-09-23', status: '' },\n                { date: '2007-08-23', status: '' },\n                { date: '2007-07-23', status: '' },\n                { date: '2007-06-23', status: '' },\n                { date: '2007-05-23', status: '' },\n                { date: '2007-04-23', status: '' },\n                { date: '2007-03-23', status: '' },\n                { date: '2007-02-22', status: '' },\n                { date: '2007-01-22', status: '' },\n                { date: '2006-12-22', status: '' },\n                { date: '2006-11-22', status: '' },\n                { date: '2006-10-23', status: '' },\n                { date: '2006-09-23', status: '' },\n                { date: '2006-08-23', status: '' },\n                { date: '2006-07-23', status: '' },\n              ],\n            },\n            CreditLimit: 0,\n          },\n          Source: {\n            BorrowerKey: '',\n            Bureau: {\n              abbreviation: 'TransUnion',\n              description: 'TransUnion',\n              symbol: 'TUC',\n              rank: 1,\n            },\n            InquiryDate: '2015-06-09',\n            Reference: '0757326e-da32-48ea-99e',\n          },\n        },\n      },\n      {\n        accountTypeDescription: 'Installment Account',\n        accountTypeSymbol: 'I',\n        accountTypeAbbreviation: 'Installment',\n        Tradeline: {\n          subscriberCode: '0654N1XG',\n          highBalance: 1190,\n          dateVerified: '2007-11-30',\n          dateReported: '2007-11-30',\n          dateOpened: '2006-09-26',\n          accountNumber: '9X3X6X5X1X0X3X3X',\n          dateAccountStatus: '2007-11-30',\n          currentBalance: 0,\n          creditorName: 'SPRINGLF FIN',\n          position: 17,\n          dateClosed: '2007-11-30',\n          bureau: 'TransUnion',\n          AccountCondition: {\n            abbreviation: 'Closed',\n            description: 'Closed',\n            symbol: 'C',\n            rank: 50,\n          },\n          AccountDesignator: {\n            abbreviation: 'Joint',\n            description: 'Joint',\n            symbol: 'J',\n            rank: 199,\n          },\n          DisputeFlag: {\n            abbreviation: 'Account not disputed',\n            description: 'Account not disputed',\n            symbol: 'F',\n            rank: 199,\n          },\n          IndustryCode: {\n            abbreviation: 'Finance/Personal',\n            description: 'Finance/Personal',\n            symbol: 'F',\n            rank: 199,\n          },\n          OpenClosed: {\n            abbreviation: 'Closed',\n            description: 'Closed',\n            symbol: 'C',\n            rank: 198,\n          },\n          PayStatus: {\n            abbreviation: 'Current',\n            description: 'Current',\n            symbol: 'C',\n            rank: 110,\n          },\n          VerificationIndicator: {\n            abbreviation: 'Account not disputed',\n            description: 'Account not disputed',\n            symbol: 'F',\n            rank: 199,\n          },\n          Remark: {\n            customRemark: '',\n            RemarkCode: {\n              abbreviation: 'Closed',\n              description: 'Closed',\n              symbol: 'T00CLO',\n              rank: 199,\n            },\n          },\n          GrantedTrade: {\n            monthsReviewed: 13,\n            monthlyPayment: 98,\n            late90Count: 0,\n            late60Count: 0,\n            late30Count: 0,\n            dateLastPayment: '2007-10-09',\n            termMonths: 12,\n            collateral: '',\n            amountPastDue: 0,\n            worstPatStatusCount: 13,\n            AccountType: {\n              abbreviation: 'Secured by household goods/collateral',\n              description: 'Secured by household goods/collateral',\n              symbol: 'SO',\n              rank: 50,\n            },\n            CreditType: {\n              abbreviation: 'Installment',\n              description: 'Installment Account',\n              symbol: 'I',\n              rank: 20,\n            },\n            PaymentFrequency: {\n              abbreviation: 'Monthly (every month)',\n              description: 'Monthly (every month)',\n              symbol: 'M',\n              rank: 199,\n            },\n            TermType: {\n              abbreviation: 'Provided',\n              description: 'Provided',\n              symbol: 'P',\n              rank: 199,\n            },\n            WorstPayStatus: {\n              abbreviation: 'Current',\n              description: 'Current',\n              symbol: 'C',\n              rank: 110,\n            },\n            PayStatusHistory: {\n              status: 'CCCCCCCCCCCCC',\n              startDate: '2007-10-30',\n              MonthlyPayStatus: [\n                { date: '2007-10-30', status: 'C' },\n                { date: '2007-09-30', status: 'C' },\n                { date: '2007-08-30', status: 'C' },\n                { date: '2007-07-30', status: 'C' },\n                { date: '2007-06-30', status: 'C' },\n                { date: '2007-05-30', status: 'C' },\n                { date: '2007-04-30', status: 'C' },\n                { date: '2007-03-30', status: 'C' },\n                { date: '2007-02-27', status: 'C' },\n                { date: '2007-01-27', status: 'C' },\n                { date: '2006-12-27', status: 'C' },\n                { date: '2006-11-27', status: 'C' },\n                { date: '2006-10-28', status: 'C' },\n                { date: '2006-09-28', status: '' },\n                { date: '2006-08-28', status: '' },\n                { date: '2006-07-28', status: '' },\n                { date: '2006-06-28', status: '' },\n                { date: '2006-05-28', status: '' },\n                { date: '2006-04-28', status: '' },\n                { date: '2006-03-27', status: '' },\n                { date: '2006-02-27', status: '' },\n                { date: '2006-01-27', status: '' },\n                { date: '2005-12-27', status: '' },\n                { date: '2005-11-27', status: '' },\n              ],\n            },\n            CreditLimit: 0,\n          },\n          Source: {\n            BorrowerKey: '',\n            Bureau: {\n              abbreviation: 'TransUnion',\n              description: 'TransUnion',\n              symbol: 'TUC',\n              rank: 1,\n            },\n            InquiryDate: '2015-06-09',\n            Reference: '0757326e-da32-48ea-99e',\n          },\n        },\n      },\n      {\n        accountTypeDescription: 'Installment Account',\n        accountTypeSymbol: 'I',\n        accountTypeAbbreviation: 'Installment',\n        Tradeline: {\n          subscriberCode: '01ZHV008',\n          highBalance: 7000,\n          dateVerified: '2007-03-03',\n          dateReported: '2007-03-03',\n          dateOpened: '2005-08-27',\n          accountNumber: '5X5X3X',\n          dateAccountStatus: '2007-03-03',\n          currentBalance: 0,\n          creditorName: 'ARVEST BANK',\n          position: 18,\n          dateClosed: '2007-03-03',\n          bureau: 'TransUnion',\n          AccountCondition: {\n            abbreviation: 'Closed',\n            description: 'Closed',\n            symbol: 'C',\n            rank: 50,\n          },\n          AccountDesignator: {\n            abbreviation: 'Joint',\n            description: 'Joint',\n            symbol: 'J',\n            rank: 199,\n          },\n          DisputeFlag: {\n            abbreviation: 'Account not disputed',\n            description: 'Account not disputed',\n            symbol: 'F',\n            rank: 199,\n          },\n          IndustryCode: {\n            abbreviation: 'Bank',\n            description: 'Bank',\n            symbol: 'B',\n            rank: 199,\n          },\n          OpenClosed: {\n            abbreviation: 'Closed',\n            description: 'Closed',\n            symbol: 'C',\n            rank: 198,\n          },\n          PayStatus: {\n            abbreviation: 'Current',\n            description: 'Current',\n            symbol: 'C',\n            rank: 110,\n          },\n          VerificationIndicator: {\n            abbreviation: 'Account not disputed',\n            description: 'Account not disputed',\n            symbol: 'F',\n            rank: 199,\n          },\n          Remark: {\n            customRemark: '',\n            RemarkCode: {\n              abbreviation: 'Closed',\n              description: 'Closed',\n              symbol: 'T00CLO',\n              rank: 199,\n            },\n          },\n          GrantedTrade: {\n            monthsReviewed: 18,\n            monthlyPayment: 0,\n            late90Count: 0,\n            late60Count: 0,\n            late30Count: 0,\n            dateLastPayment: '2007-02-16',\n            termMonths: 19,\n            collateral: '',\n            amountPastDue: 0,\n            worstPatStatusCount: 18,\n            AccountType: {\n              abbreviation: '',\n              description: '',\n              symbol: '',\n              rank: 100000,\n            },\n            CreditType: {\n              abbreviation: 'Installment',\n              description: 'Installment Account',\n              symbol: 'I',\n              rank: 20,\n            },\n            PaymentFrequency: {\n              abbreviation: 'Monthly (every month)',\n              description: 'Monthly (every month)',\n              symbol: 'M',\n              rank: 199,\n            },\n            TermType: {\n              abbreviation: 'Provided',\n              description: 'Provided',\n              symbol: 'P',\n              rank: 199,\n            },\n            WorstPayStatus: {\n              abbreviation: 'Unk',\n              description: 'Unknown',\n              symbol: 'U',\n              rank: 10000,\n            },\n            PayStatusHistory: '',\n            CreditLimit: 0,\n          },\n          Source: {\n            BorrowerKey: '',\n            Bureau: {\n              abbreviation: 'TransUnion',\n              description: 'TransUnion',\n              symbol: 'TUC',\n              rank: 1,\n            },\n            InquiryDate: '2015-06-09',\n            Reference: '0757326e-da32-48ea-99e',\n          },\n        },\n      },\n      {\n        accountTypeDescription: 'Revolving Account',\n        accountTypeSymbol: 'R',\n        accountTypeAbbreviation: 'Revolving',\n        Tradeline: {\n          subscriberCode: '01GYY001',\n          highBalance: 200,\n          dateVerified: '2006-10-12',\n          dateReported: '2006-10-12',\n          dateOpened: '2002-07-01',\n          accountNumber: 4,\n          dateAccountStatus: '2006-10-11',\n          currentBalance: 0,\n          creditorName: 'GNB/STAGE',\n          position: 19,\n          dateClosed: '2006-10-11',\n          bureau: 'TransUnion',\n          AccountCondition: {\n            abbreviation: 'Xfer',\n            description: 'Transferred',\n            symbol: 'T',\n            rank: 30,\n          },\n          AccountDesignator: {\n            abbreviation: 'Individual',\n            description: 'Individual',\n            symbol: 'I',\n            rank: 199,\n          },\n          DisputeFlag: {\n            abbreviation: 'Account not disputed',\n            description: 'Account not disputed',\n            symbol: 'F',\n            rank: 199,\n          },\n          IndustryCode: {\n            abbreviation: 'Department/Variety and Other Retail',\n            description: 'Department/Variety and Other Retail',\n            symbol: 'D',\n            rank: 199,\n          },\n          OpenClosed: {\n            abbreviation: 'Closed',\n            description: 'Closed',\n            symbol: 'C',\n            rank: 198,\n          },\n          PayStatus: {\n            abbreviation: 'Current',\n            description: 'Current',\n            symbol: 'C',\n            rank: 110,\n          },\n          VerificationIndicator: {\n            abbreviation: 'Account not disputed',\n            description: 'Account not disputed',\n            symbol: 'F',\n            rank: 199,\n          },\n          Remark: {\n            customRemark: '',\n            RemarkCode: {\n              abbreviation: 'Purchased by another lender',\n              description: 'Purchased by another lender',\n              symbol: 'T00PAL',\n              rank: 199,\n            },\n          },\n          GrantedTrade: {\n            monthsReviewed: 13,\n            monthlyPayment: 0,\n            late90Count: 0,\n            late60Count: 0,\n            late30Count: 0,\n            dateLastPayment: '2005-12-06',\n            termMonths: 0,\n            collateral: '',\n            amountPastDue: 0,\n            worstPatStatusCount: 13,\n            AccountType: {\n              abbreviation: 'Charge account',\n              description: 'Charge account',\n              symbol: 'CH',\n              rank: 50,\n            },\n            CreditType: {\n              abbreviation: 'Revolving',\n              description: 'Revolving Account',\n              symbol: 'R',\n              rank: 50,\n            },\n            PaymentFrequency: {\n              abbreviation: '',\n              description: '',\n              symbol: '',\n              rank: 100000,\n            },\n            TermType: {\n              abbreviation: 'Provided',\n              description: 'Provided',\n              symbol: 'P',\n              rank: 199,\n            },\n            WorstPayStatus: {\n              abbreviation: 'Current',\n              description: 'Current',\n              symbol: 'C',\n              rank: 110,\n            },\n            PayStatusHistory: {\n              status: 'UUUUUUUUUCCCC',\n              startDate: '2006-09-12',\n              MonthlyPayStatus: [\n                { date: '2006-09-12', status: 'U' },\n                { date: '2006-08-12', status: 'U' },\n                { date: '2006-07-12', status: 'U' },\n                { date: '2006-06-12', status: 'U' },\n                { date: '2006-05-12', status: 'U' },\n                { date: '2006-04-12', status: 'U' },\n                { date: '2006-03-11', status: 'U' },\n                { date: '2006-02-11', status: 'U' },\n                { date: '2006-01-11', status: 'U' },\n                { date: '2005-12-11', status: 'C' },\n                { date: '2005-11-11', status: 'C' },\n                { date: '2005-10-12', status: 'C' },\n                { date: '2005-09-12', status: 'C' },\n                { date: '2005-08-12', status: '' },\n                { date: '2005-07-12', status: '' },\n                { date: '2005-06-12', status: '' },\n                { date: '2005-05-12', status: '' },\n                { date: '2005-04-12', status: '' },\n                { date: '2005-03-11', status: '' },\n                { date: '2005-02-11', status: '' },\n                { date: '2005-01-11', status: '' },\n                { date: '2004-12-11', status: '' },\n                { date: '2004-11-11', status: '' },\n                { date: '2004-10-12', status: '' },\n              ],\n            },\n            CreditLimit: 400,\n          },\n          Source: {\n            BorrowerKey: '',\n            Bureau: {\n              abbreviation: 'TransUnion',\n              description: 'TransUnion',\n              symbol: 'TUC',\n              rank: 1,\n            },\n            InquiryDate: '2015-06-09',\n            Reference: '0757326e-da32-48ea-99e',\n          },\n        },\n      },\n    ],\n    InquiryPartition: [\n      {\n        Inquiry: {\n          inquiryDate: '2014-05-18',\n          subscriberName: 'CREDCO',\n          subscriberNumber: 728002,\n          bureau: 'TransUnion',\n          inquiryType: 'A',\n          IndustryCode: {\n            abbreviation: 'Finance/Personal',\n            description: 'Finance/Personal',\n            symbol: 'F',\n            rank: 199,\n          },\n          Source: {\n            BorrowerKey: '',\n            Bureau: {\n              abbreviation: 'TransUnion',\n              description: 'TransUnion',\n              symbol: 'TUC',\n              rank: 1,\n            },\n            InquiryDate: '2015-06-09',\n            Reference: '0757326e-da32-48ea-99e',\n          },\n        },\n      },\n      {\n        Inquiry: {\n          inquiryDate: '2013-10-05',\n          subscriberName: 'DATAFACTS',\n          subscriberNumber: 180844,\n          bureau: 'TransUnion',\n          inquiryType: 'I',\n          IndustryCode: {\n            abbreviation: 'Miscellaneous',\n            description: 'Miscellaneous',\n            symbol: 'Z',\n            rank: 199,\n          },\n          Source: {\n            BorrowerKey: '',\n            Bureau: {\n              abbreviation: 'TransUnion',\n              description: 'TransUnion',\n              symbol: 'TUC',\n              rank: 1,\n            },\n            InquiryDate: '2015-06-09',\n            Reference: '0757326e-da32-48ea-99e',\n          },\n        },\n      },\n    ],\n    Summary: {\n      TradelineSummary: {\n        TransUnion: {\n          TotalAccounts: 20,\n          OpenAccounts: 4,\n          CloseAccounts: 16,\n          DelinquentAccounts: 0,\n          DerogatoryAccounts: 3,\n          TotalBalances: 144903,\n          TotalMonthlyPayments: 1846,\n        },\n      },\n      InquirySummary: { TransUnion: { NumberInLast2Years: 2 } },\n      PublicRecordSummary: { TransUnion: { NumberOfRecords: 0 } },\n    },\n    Sources: {\n      Source: {\n        Bureau: {\n          abbreviation: 'TransUnion',\n          description: 'TransUnion',\n          symbol: 'TUC',\n          rank: 1,\n        },\n        InquiryDate: '2015-06-09',\n        OriginalData:\n          '',\n      },\n    },\n    SafetyCheckPassed: true,\n  },\n}"
                }
            ],
            "src/app/shared/mocks/parsed-vantage-score-response.ts": [
                {
                    "name": "mockParseVantageScore",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/mocks/parsed-vantage-score-response.ts",
                    "type": "object",
                    "defaultValue": "{\n  CreditScoreType: {\n    riskScore: 527,\n    scoreName: 'VantageScore3',\n    populationRank: 16,\n    CreditScoreFactor: [\n      {\n        bureauCode: 34,\n        FactorType: 'Negative',\n        Factor: { abbreviation: '', description: '', symbol: 34, rank: 100000 },\n        FactorText: [\n          'explain: Bankcard accounts include credit cards and\\ncharge cards from a bank and are frequently revolving accounts.\\nRevolving accounts allow you to carry a balance and your monthly payment\\nwill vary, based on the amount of your balance. The total combined\\namount you owe on all of your bankcards and revolving accounts is high,\\na sign of increased risk. People who carry balances on multiple\\nbankcards or other revolving accounts have reduced available credit to\\nuse if needed, creating a greater chance of becoming\\noverextended.',\n          'factor: Total of\\nall balances on bankcard or revolving accounts is too\\nhigh',\n          'cando: Pay down the\\nbalances on your accounts. Ideally, the balance on any revolving account\\nshould be 30% or less of the total credit limit on that\\naccount.',\n        ],\n      },\n      {\n        bureauCode: 65,\n        FactorType: 'Negative',\n        Factor: { abbreviation: '', description: '', symbol: 65, rank: 100000 },\n        FactorText: [\n          'explain: The VantageScore credit score model relies on\\ninformation in your credit files at the three national credit reporting\\ncompanies (Equifax, Experian and TransUnion) to generate your score.\\nYour credit file does not contain enough credit behavior information\\nabout your first mortgage accounts. A mix of different types of open and\\nactive credit accounts, including first mortgage loans, can have a\\npositive impact on your credit score.',\n          'factor: Lack of sufficient relevant first mortgage\\naccount information',\n          'cando:\\nMaintaining open and active credit accounts in good standing can help\\nimprove your credit score.',\n        ],\n      },\n      {\n        bureauCode: 44,\n        FactorType: 'Negative',\n        Factor: { abbreviation: '', description: '', symbol: 44, rank: 100000 },\n        FactorText: [\n          'explain: Bankcard accounts include credit cards and\\ncharge cards from a bank and are frequently revolving accounts.\\nRevolving accounts allow you to carry a balance and your monthly payment\\nwill vary, based on the amount of your balance. You have had too many\\nbankcard or revolving accounts with payments that are at least 30 days\\nlate and/or on which a lender has reported a derogatory status. People\\nwith late payments are at risk of being overextended, putting existing\\ncredit with lenders at risk.',\n          'factor: Too many bankcard or revolving accounts with\\ndelinquent or derogatory status',\n          'cando: Paying bills on time every month is important\\nto maintaining a good credit score. If you remain behind with any\\npayments, bring them current as soon as possible, and then make future\\npayments on time. Over time this will have a positive impact on your\\nscore.',\n        ],\n      },\n      {\n        bureauCode: 7,\n        FactorType: 'Negative',\n        Factor: { abbreviation: '', description: '', symbol: 7, rank: 100000 },\n        FactorText: [\n          'explain: You have had too many accounts with payments\\nthat are at least 30 days late and/or on which a lender has reported a\\nderogatory status. Late payments are a proven indicator of increased\\nrisk. People with late payments are at risk of being overextended,\\nputting existing credit with lenders at risk.',\n          'factor: You have too many delinquent or derogatory\\naccounts',\n          'cando: Paying bills\\non time every month is important to maintaining a good credit score. If\\nyou remain behind with any payments, bring them current as soon as\\npossible, and then make future payments on time. Over time, this will\\nhave a positive impact on your score.',\n        ],\n      },\n      {\n        bureauCode: 'P32',\n        FactorType: 'Positive',\n        Factor: {\n          abbreviation: '',\n          description: '',\n          symbol: 'P32',\n          rank: 100000,\n        },\n        FactorText: [\n          'explain: Bankcard accounts include credit cards and\\ncharge cards from a bank and are frequently revolving accounts.\\nRevolving accounts allow you to carry a balance and your monthly payment\\nwill vary, based on the amount of your balance. Your balances on\\nbankcard or revolving accounts are not too high compared to the credit\\nlimit amounts, which causes your score to\\nimprove.',\n          'factor: Balances on\\nbankcard or revolving accts not too high compared to\\nlimits',\n          'cando: Keep low\\nbalances on your accounts; this will benefit your\\nscore.',\n        ],\n      },\n      {\n        bureauCode: 'P05',\n        FactorType: 'Positive',\n        Factor: {\n          abbreviation: '',\n          description: '',\n          symbol: 'P05',\n          rank: 100000,\n        },\n        FactorText: [\n          'explain: A delinquency is a payment that was made 30\\nor more days late. You have had no or very few delinquencies recently\\nwhich has caused your score to improve.',\n          'factor: There are no or only a few recent\\ndelinquencies on your accounts',\n          'cando: Keep paying bills on time every month since it\\nis important for maintaining a good credit score. If you remain behind\\nwith any payments, bring them current as soon as possible, and then make\\nfuture payments on time. Over time, this will have a positive impact on\\nyour score.',\n        ],\n      },\n      {\n        bureauCode: 'P40',\n        FactorType: 'Positive',\n        Factor: {\n          abbreviation: '',\n          description: '',\n          symbol: 'P40',\n          rank: 100000,\n        },\n        FactorText: [\n          'explain: Bankcard accounts include credit cards and\\ncharge cards from a bank and are frequently revolving accounts.\\nRevolving accounts allow you to carry a balance and your monthly payment\\nwill vary, based on the amount of your balance. Your oldest bankcard or\\nrevolving account was not opened too recently. As a result, your history\\nof credit management is enough to demonstrate responsible behavior which\\nhas improved your score.',\n          'factor: Date your oldest bankcard or revolving account\\nopened is not too recent',\n          \"cando: Don't open more accounts than you actually\\nneed. Research shows that new accounts indicate greater risk. Your score\\nwill benefit as your accounts get older.\",\n        ],\n      },\n      {\n        bureauCode: 'P63',\n        FactorType: 'Positive',\n        Factor: {\n          abbreviation: '',\n          description: '',\n          symbol: 'P63',\n          rank: 100000,\n        },\n        FactorText: [\n          'explain: A real estate loan can be a first mortgage, a\\nhome equity loan, or home equity line of credit. The VantageScore credit\\nscore model relies on information in your credit files at the three\\nnational credit reporting companies (Equifax, Experian and TransUnion)\\nto generate your score. A mix of different types of open and active\\ncredit accounts, including real estate accounts, can have a positive\\nimpact on your score.',\n          'factor:\\nLack of sufficient relevant real estate account\\ninformation',\n          'cando: Maintaining\\nopen and active credit accounts in good standing can help improve your\\ncredit score.',\n        ],\n      },\n    ],\n    CreditScoreModel: {\n      abbreviation: '',\n      description: '',\n      symbol: '00W40',\n      rank: 100000,\n    },\n    NoScoreReason: {\n      abbreviation: '',\n      description: '',\n      symbol: '',\n      rank: 100000,\n    },\n    Source: {\n      BorrowerKey: '',\n      Bureau: {\n        abbreviation: 'TransUnion',\n        description: 'TransUnion',\n        symbol: 'TUC',\n        rank: 1,\n      },\n      InquiryDate: '2015-06-09',\n      Reference: 'ND0711_v7SOreport',\n    },\n  },\n}"
                }
            ],
            "src/app/shared/services/transunion/transunion.service.ts": [
                {
                    "name": "monthMap",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/services/transunion/transunion.service.ts",
                    "type": "Record<string, any>",
                    "defaultValue": "{\n  jan: '01',\n  feb: '02',\n  mar: '03',\n  apr: '04',\n  may: '05',\n  jun: '06',\n  jul: '07',\n  aug: '08',\n  sep: '09',\n  oct: '10',\n  nov: '11',\n  dec: '12',\n}"
                }
            ],
            "src/app/shared/components/forms/outline-namedob-form/outline-namedob-form.component.ts": [
                {
                    "name": "months",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/forms/outline-namedob-form/outline-namedob-form.component.ts",
                    "type": "string[]",
                    "defaultValue": "[\n  'Jan',\n  'Feb',\n  'Mar',\n  'Apr',\n  'May',\n  'Jun',\n  'Jul',\n  'Aug',\n  'Sep',\n  'Oct',\n  'Nov',\n  'Dec',\n]"
                }
            ],
            "src/app/shared/components/forms/select-dob-form/select-dob-form.component.ts": [
                {
                    "name": "months",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/forms/select-dob-form/select-dob-form.component.ts",
                    "type": "string[]",
                    "defaultValue": "[\n  'Jan',\n  'Feb',\n  'Mar',\n  'Apr',\n  'May',\n  'Jun',\n  'Jul',\n  'Aug',\n  'Sep',\n  'Oct',\n  'Nov',\n  'Dec',\n]"
                }
            ],
            "src/app/shared/components/tradelines/tradeline-payment-history/tradeline-payment-history.component.ts": [
                {
                    "name": "months",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/tradelines/tradeline-payment-history/tradeline-payment-history.component.ts",
                    "type": "[]",
                    "defaultValue": "['j', 'f', 'm', 'a', 'm', 'j', 'j', 'a', 's', 'o', 'n', 'd']"
                }
            ],
            "src/app/views/signin-redirect/signin-redirect.component.ts": [
                {
                    "name": "navs",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/signin-redirect/signin-redirect.component.ts",
                    "type": "Record<string, any>",
                    "defaultValue": "{}"
                }
            ],
            "src/app/shared/data/negative-reason-codes.ts": [
                {
                    "name": "NEGATIVE_REASON_CODES",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/data/negative-reason-codes.ts",
                    "type": "Record<string, any>",
                    "defaultValue": "{\n  R1: { factor: ``, explain: ``, cando: `` },\n  R2: { factor: ``, explain: ``, cando: `` },\n  R3: { factor: ``, explain: ``, cando: `` },\n  R4: {\n    factor: `The balances on your accounts are too high compared to loan amounts`,\n    explain: `The balances on your accounts are high compared to the original loan amounts, lowering your score.`,\n    cando: `Paying down the balances on your accounts will benefit your score.  `,\n  },\n  R5: {\n    factor: `Too many of the delinquencies on your accounts are recent`,\n    explain: `A delinquency is a payment that was made 30 or more days late.  Too many late payments occurred recently on some of your accounts.  Late payments are a proven indicator of increased risk.  People with late payments are at risk of being overextended, putting existing credit with lenders at risk.`,\n    cando: `Paying bills on time every month is important to maintaining a good credit score.  If you remain behind with any payments, bring them current as soon as possible, and then make future payments on time. Over time, this will have a positive impact on your score.`,\n  },\n  R6: {\n    factor: `You have too many accounts that were opened recently`,\n    explain: `Because too many of your accounts were opened recently, the history on those new accounts is not long enough to provide sufficient payment and account history to demonstrate responsible behavior on those accounts.  In addition, having multiple accounts that are relatively new is seen as a higher risk because of the possibility of becoming overextended, which can then lead to late payments or defaulting on the account.`,\n    cando: `Use your existing credit responsibly and make your payments on time. Your credit score will benefit as you make payments on time and manage the accounts in a responsible fashion. Manage your credit wisely by planning ahead for your credit needs and avoid applying for more credit than you need.`,\n  },\n  R7: {\n    factor: `You have too many delinquent or derogatory accounts`,\n    explain: `You have had too many accounts with payments that are at least 30 days late and/or on which a lender has reported a derogatory status.  Late payments are a proven indicator of increased risk.  People with late payments are at risk of being overextended, putting existing credit with lenders at risk.`,\n    cando: `Paying bills on time every month is important to maintaining a good credit score.  If you remain behind with any payments, bring them current as soon as possible, and then make future payments on time. Over time, this will have a positive impact on your score.`,\n  },\n  R8: {\n    factor: `You have either very few loans or too many loans with recent delinquencies`,\n    explain: `You have had too many accounts with late payments or do not have enough loans to provide sufficient information about your credit behaviors. Late payments are a proven indicator of increased risk.  People with late payments are at risk of being overextended, putting existing credit with lenders at risk.`,\n    cando: `Paying bills on time every month is important to maintaining a good credit score.  If you remain behind with any payments, bring them current as soon as possible, and then make future payments on time. Over time, this will have a positive impact on your score.`,\n  },\n  R9: {\n    factor: `The worst payment status on your accounts is delinquent or derogatory`,\n    explain: `Your credit file is showing an account with a payment that was at least 30 days late and/or on which a lender has reported a derogatory status.  Late payments are a proven indicator of increased risk.  People with late payments are at risk of being overextended, putting existing credit with lenders at risk.`,\n    cando: `Paying bills on time every month is important to maintaining a good credit score.  If you remain behind with any payments, bring them current as soon as possible, and then make future payments on time. Over time, this will have a positive impact on your score.`,\n  },\n  R10: {\n    factor: `You have either very few loans or too many loans with delinquencies`,\n    explain: `You have had too many accounts with late payments or do not have enough loans to provide sufficient information about your credit behaviors. Late payments are a proven indicator of increased risk.  People with late payments are at risk of being overextended, putting existing credit with lenders at risk.`,\n    cando: `Paying bills on time every month is important to maintaining a good credit score.  If you remain behind with any payments, bring them current as soon as possible, and then make future payments on time. Over time, this will have a positive impact on your score.`,\n  },\n  R11: {\n    factor: `The total of your delinquent or derogatory account balances is too high`,\n    explain: `The total of the balances is high on your accounts with late payments or on which a lender has reported the account derogatory. Late payments are a proven indicator of risk.  When credit line balances approach credit limits, risk is further increased because you don't have much credit available should it be needed, creating a greater chance of becoming overextended.`,\n    cando: `Paying bills on time every month is important to maintaining a good credit score.  If you remain behind with any payments, bring them current as soon as possible, and then make future payments on time.  Whenever possible, pay down balances on your accounts.  Over time these actions will benefit your score.`,\n  },\n  R12: {\n    factor: `The date that you opened your oldest account is too recent`,\n    explain: `Your oldest account is still too recent.  A credit file containing older accounts will have a positive impact on your credit score because it demonstrates that you are experienced managing credit.  `,\n    cando: `Don't open more accounts than you actually need.  Research shows that new accounts indicate greater risk.  Your score will benefit as your accounts get older.`,\n  },\n  R13: {\n    factor: `Your most recently opened account is too new`,\n    explain: `The account that you opened most recently is still too new.  A credit file containing older accounts will have a positive impact on your credit score because it demonstrates that you are experienced managing credit.  `,\n    cando: `Don't open more accounts than you actually need.  Research shows that new accounts indicate greater risk, especially if overall account history isn't long.  Your score will benefit as your accounts get older.`,\n  },\n  R14: {\n    factor: `Lack of sufficient credit history`,\n    explain: `Your credit file does not contain enough information about your use of credit.  A credit file with older accounts and/or more accounts reflects more experience with handling credit and can have a positive impact on your credit score.`,\n    cando: `Maintaining open and active credit accounts in good standing can help improve your credit score. `,\n  },\n  R15: {\n    factor: `Newest delinquent or derogatory payment status on your accounts is too recent`,\n    explain: `You have an account that had a late payment or on which a lender has reported a derogatory status.  Your credit file shows that this event occurred too recently.  Late payments are a proven indicator of increased risk.  People with late payments are at risk of being overextended, putting existing credit with lenders at risk.`,\n    cando: `Paying bills on time every month is important to maintaining a good credit score.  If you remain behind with any payments, bring them current as soon as possible, and then make future payments on time.  `,\n  },\n  R16: {\n    factor: `The total of all balances on your open accounts is too high`,\n    explain: `The total that you owe on all your accounts is high.  Maintaining high balances has proven to be risky behavior because you don't have much credit available should it be needed, creating a greater chance of becoming overextended.  People with the highest credit scores keep their account balances low.`,\n    cando: `Whenever possible, pay down balances on your accounts.  Over time, this will have a positive impact on your score.`,\n  },\n  R17: {\n    factor: `Balances on previously delinquent accounts are too high compared to loan amts`,\n    explain: `You've been late on at least one payment in the past, and the balances on the accounts that had late payments are high compared to the original loan amount or the credit limit on a revolving account.  Late payments are a proven indicator of risk.  When balances are close to the original loan amount or approach credit limits, risk is further increased because you don't have much credit available should it be needed, creating a greater chance of becoming overextended.  People with the best scores have no late payments and keep their balances low.`,\n    cando: `Paying bills on time every month is important to maintaining a good credit score.  If you remain behind with any payments, bring them current as soon as possible, and then make future payments on time.  Whenever possible, pay down balances on your accounts.  Over time these actions will have a positive impact on your score.`,\n  },\n  R18: {\n    factor: `Total of balances on accounts never late is too high compared to loan amounts`,\n    explain: `You have some accounts in your credit file with balances that are high compared to the original loan amount or the limit on a revolving account.  The good news is that you've never been late on these accounts.  Maintaining high balances has proven to be risky behavior because you don't have much credit available should it be needed, creating a greater chance of becoming overextended.  People with the highest credit scores keep their account balances low.`,\n    cando: `Whenever possible, pay down balances on your accounts.  Over time, this will have a positive impact on your score.`,\n  },\n  R21: {\n    factor: `No open accounts in your credit file`,\n    explain: `The VantageScore credit score model relies on information in your credit files at the three national credit reporting companies (Equifax, Experian and TransUnion) to generate your score.  Because you have no open accounts, your credit file does not contain enough information about your use of credit.  A mix of different types of open and active credit accounts can have a positive impact on your credit score.`,\n    cando: `Maintaining open and active credit accounts in good standing can help improve your credit score. `,\n  },\n  R22: {\n    factor: `No recently reported account information`,\n    explain: `The VantageScore credit score model relies on information in your credit files at the three national credit reporting companies (Equifax, Experian and TransUnion) to generate your score.  Because you have no accounts where a lender has reported recent activity, your credit file does not contain enough information about your use of credit.  A mix of different types of open and active credit accounts with can have a positive impact on your credit score.`,\n    cando: `Maintaining open and active credit accounts in good standing can help improve your credit score. `,\n  },\n  R23: {\n    factor: `Lack of sufficient relevant account information`,\n    explain: `The VantageScore credit score model relies on information in your credit files at the three national credit reporting companies (Equifax, Experian and TransUnion) to generate your score.  Your credit file does not have enough credit behavior information about your loans.  A mix of different types of open and active credit accounts can have a positive impact on your credit score.`,\n    cando: `Maintaining open and active credit accounts in good standing can help improve your credit score. `,\n  },\n  R29: {\n    factor: `Too many of your open bankcard or revolving accounts have a balance`,\n    explain: `Bankcard accounts include credit cards and charge cards from a bank and are frequently revolving accounts.  Revolving accounts allow you to carry a balance and your monthly payment will vary, based on the amount of your balance.  Carrying a balance on too many bankcards and revolving accounts is an indicator of increased risk.  People who carry balances on multiple bankcards or revolving accounts have reduced available credit to use if needed, creating a greater chance of becoming overextended.`,\n    cando: `Pay down your existing balances, and then pay your balance in full each month as often as possible.`,\n  },\n  R30: {\n    factor: `Too few of your bankcard or other revolving accounts have high limits`,\n    explain: `Bankcard accounts include credit cards and charge cards from a bank and are frequently revolving accounts.  Revolving accounts allow you to carry a balance and your monthly payment will vary, based on the amount of your balance.  Having too few accounts with high credit limits is an indicator that you lack available credit.  Having higher limits gives you access to credit without seeking new loans or becoming overextended _ which are triggers for higher risk.`,\n    cando: `Use credit responsibly and always make payments on time with your existing accounts.  After a period of successfully managing your accounts, you can seek increases to your credit limit.  `,\n  },\n  R31: {\n    factor: `Too many bankcard or other revolving accounts were opened recently`,\n    explain: `Bankcard accounts include credit cards and charge cards from a bank and are frequently revolving accounts.  Revolving accounts allow you to carry a balance and your monthly payment will vary, based on the amount of your balance.  Opening multiple bankcards or other revolving accounts in a relatively short period of time is a proven indicator of increased risk because the history on those new accounts is not long enough to provide sufficient payment and account information to demonstrate responsible behavior on those accounts.  In addition, having multiple accounts that are relatively new is seen as a higher risk because of the possibility of becoming overextended, which can then lead to late payments or defaulting on the account.`,\n    cando: `Use your existing credit responsibly and make your payments on time. Your credit score will benefit as you make payments on time and manage the accounts in a responsible fashion. Manage your credit wisely by planning ahead for your credit needs so you can avoid applying for more credit than you need.`,\n  },\n  R32: {\n    factor: `Balances on bankcard or revolving accounts too high compared to credit limits`,\n    explain: `Bankcard accounts include credit cards and charge cards from a bank and are frequently revolving accounts.  Revolving accounts allow you to carry a balance and your monthly payment will vary, based on the amount of your balance.  You have bankcard or revolving accounts in your credit file with balances that are high compared to the credit limit on the account, which is a proven indicator of increased risk.`,\n    cando: `Pay down balances on your accounts and keep them below 30% of the total credit limit on that account.  Over time this will have a positive impact on your score.`,\n  },\n  R33: {\n    factor: `Your worst bankcard or revolving account status is delinquent or derogatory`,\n    explain: `Bankcard accounts include credit cards and charge cards from a bank and are frequently revolving accounts.  Revolving accounts allow you to carry a balance and your monthly payment will vary, based on the amount of your balance.  Your credit file is showing a bankcard or revolving account with a payment that was at least 30 days late and/or an account on which a lender has reported a derogatory status.  Late payments are a proven indicator of increased risk.  People with late payments are at risk of being overextended, putting existing credit with lenders at risk.`,\n    cando: `Paying bills on time every month is important to maintaining a good credit score.  If you remain behind with any payments, bring them current as soon as possible, and then make future payments on time.  Over time, this will have a positive impact on your score.`,\n  },\n  R34: {\n    factor: `Total of all balances on bankcard or revolving accounts is too high`,\n    explain: `Bankcard accounts include credit cards and charge cards from a bank and are frequently revolving accounts.  Revolving accounts allow you to carry a balance and your monthly payment will vary, based on the amount of your balance.  The total combined amount you owe on all of your bankcards and revolving accounts is high, a sign of increased risk. People who carry balances on multiple bankcards or other revolving accounts have reduced available credit to use if needed, creating a greater chance of becoming overextended.`,\n    cando: `Pay down the balances on your accounts. Ideally, the balance on any revolving account should be 30% or less of the total credit limit on that account.`,\n  },\n  R35: {\n    factor: `Your highest bankcard or revolving account balance is too high`,\n    explain: `Bankcard accounts include credit cards and charge cards from a bank and are frequently revolving accounts.  Revolving accounts allow you to carry a balance and your monthly payment will vary, based on the amount of your balance.  You have a bankcard or revolving account in your credit file with a high balance, a sign of increased risk. People who carry balances on bankcards or other revolving accounts have reduced available credit to use if needed, creating a greater chance of becoming overextended.`,\n    cando: `Pay down the balances on your accounts. Ideally, the balance on any revolving account should be 30% or less of the total credit limit on that account.`,\n  },\n  R36: {\n    factor: `Your largest credit limit on open bankcard or revolving accounts is too low`,\n    explain: `Bankcard accounts include credit cards and charge cards from a bank and are frequently revolving accounts.  Revolving accounts allow you to carry a balance and your monthly payment will vary, based on the amount of your balance.  The largest credit limit among all the open bankcard or revolving accounts in your credit file is low.  Having higher limits gives you access to credit without seeking new loans or becoming overextended _ which are triggers for higher risk.`,\n    cando: `Use credit responsibly and always make payments on time with your existing accounts.  After a period of successfully managing your accounts, you can seek increases to your credit limit.  `,\n  },\n  R39: {\n    factor: `Available credit on your open bankcard or revolving accounts is too low`,\n    explain: `Bankcard accounts include credit cards and charge cards from a bank and are frequently revolving accounts.  Revolving accounts allow you to carry a balance and your monthly payment will vary, based on the amount of your balance.  The amount of credit you have available to use on your open bankcards or revolving accounts is low.  Having higher limits gives you access to credit without seeking new loans or becoming overextended _ which are triggers for higher risk.`,\n    cando: `Use credit responsibly and always make payments on time with your existing accounts.  After a period of successfully managing your accounts, you can seek increases to your credit limit.  `,\n  },\n  R40: {\n    factor: `The date you opened your oldest bankcard or revolving account is too recent`,\n    explain: `Bankcard accounts include credit cards and charge cards from a bank and are frequently revolving accounts.  Revolving accounts allow you to carry a balance and your monthly payment will vary, based on the amount of your balance.  Your oldest bankcard or revolving account is still too new.  A credit file containing older accounts will have a positive impact on your credit score because it demonstrates that you are experienced managing credit.`,\n    cando: `Don't open more accounts than you actually need.  Research shows that new accounts indicate greater risk.  Your score will benefit as your accounts get older.`,\n  },\n  R42: {\n    factor: `The date you opened your newest bankcard or revolving account is too recent`,\n    explain: `Bankcard accounts include credit cards and charge cards from a bank and are frequently revolving accounts.  Revolving accounts allow you to carry a balance and your monthly payment will vary, based on the amount of your balance.  The bankcard or revolving account that you opened most recently is still too new.  A credit file containing older accounts will have a positive impact on your credit score because it demonstrates that you are experienced managing credit.`,\n    cando: `Don't open more accounts than you actually need.  Research shows that new accounts indicate greater risk, especially if overall account history isn't long.  Your score will benefit as your accounts get older.`,\n  },\n  R43: {\n    factor: `Lack of sufficient credit history on bankcard or revolving accounts`,\n    explain: `Bankcard accounts include credit cards and charge cards from a bank and are frequently revolving accounts.  Revolving accounts allow you to carry a balance and your monthly payment will vary, based on the amount of your balance.  Your credit file does not contain enough information about your use of bankcards or revolving accounts.  A credit file with older accounts and/or more accounts reflects more experience with handling credit and can have a positive impact on your credit score.`,\n    cando: `Maintaining open and active credit accounts in good standing can help improve your credit score.`,\n  },\n  R44: {\n    factor: `Too many bankcard or revolving accounts with delinquent or derogatory status`,\n    explain: `Bankcard accounts include credit cards and charge cards from a bank and are frequently revolving accounts.  Revolving accounts allow you to carry a balance and your monthly payment will vary, based on the amount of your balance.  You have had too many bankcard or revolving accounts with payments that are at least 30 days late and/or on which a lender has reported a derogatory status.  People with late payments are at risk of being overextended, putting existing credit with lenders at risk.`,\n    cando: `Paying bills on time every month is important to maintaining a good credit score.  If you remain behind with any payments, bring them current as soon as possible, and then make future payments on time. Over time this will have a positive impact on your score.`,\n  },\n  R45: {\n    factor: `Total balances too high on delinquent/derogatory bankcard or revolving accts `,\n    explain: `Bankcard accounts include credit cards and charge cards from a bank and are frequently revolving accounts.  Revolving accounts allow you to carry a balance and your monthly payment will vary, based on the amount of your balance.  The total of the balances is high on your bankcard or revolving accounts with late payments or on which a lender has reported a derogatory.  Late payments are a proven indicator of risk.  When credit line balances approach credit limits, risk is further increased because you don't have much credit available should it be needed, creating a greater chance of becoming overextended.`,\n    cando: `Paying bills on time every month is important to maintaining a good credit score.  If you remain behind with any payments, bring them current as soon as possible, and then make future payments on time.  Whenever possible, pay down balances on your accounts.  Over time these actions will benefit your score.`,\n  },\n  R47: {\n    factor: `No open bankcard or revolving accounts in your credit file`,\n    explain: `Bankcard accounts include credit cards and charge cards from a bank and are frequently revolving accounts.  Revolving accounts allow you to carry a balance and your monthly payment will vary, based on the amount of your balance.   The VantageScore credit score model relies on information in your credit files at the three national credit reporting companies (Equifax, Experian and TransUnion) to generate your score.  Because you have no open bankcards or revolving accounts, your credit file does not contain enough information about your use of credit.  A mix of different types of open and active credit accounts, including bankcards and other revolving accounts, can have a positive impact on your credit score.`,\n    cando: `Maintaining open and active credit accounts in good standing can help improve your credit score.`,\n  },\n  R48: {\n    factor: `No bankcard or revolving recently reported account information`,\n    explain: `Bankcard accounts include credit cards and charge cards from a bank and are frequently revolving accounts.  Revolving accounts allow you to carry a balance and your monthly payment will vary, based on the amount of your balance.  The VantageScore credit score model relies on information in your credit files at the three national credit reporting companies (Equifax, Experian and TransUnion) to generate your score.  Because you have no bankcard or revolving accounts where a lender has reported recent activity, your credit file does not contain enough information about your use of this kind of credit.  A mix of different types of open and active credit accounts, including bankcards and other revolving accounts, can have a positive impact on your credit score.`,\n    cando: `Maintaining open and active credit accounts in good standing can help improve your credit score.`,\n  },\n  R49: {\n    factor: `Lack of sufficient relevant bankcard or revolving account information`,\n    explain: `Bankcard accounts include credit cards and charge cards from a bank and are frequently revolving accounts.  Revolving accounts allow you to carry a balance and your monthly payment will vary, based on the amount of your balance.  The VantageScore credit score model relies on information in your credit files at the three national credit reporting companies (Equifax, Experian and TransUnion) to generate your score.  Your credit file does not have enough credit behavior information about your bankcard or revolving accounts. A mix of different types of open and active credit accounts, including bankcard and other revolving accounts, can have a positive impact on your credit score.`,\n    cando: `Maintaining open and active credit accounts in good standing can help improve your credit score.`,\n  },\n  R53: {\n    factor: `The worst status on your real estate accounts is delinquent or derogatory`,\n    explain: `A real estate loan can be a first mortgage, a home equity loan, or home equity line of credit.  Your credit file is showing a real estate account with a payment that was at least 30 days late and/or on which a lender has reported a derogatory status.  Late payments are a proven indicator of increased risk.  People with late payments are at risk of being overextended, putting existing credit with lenders at risk.`,\n    cando: `Paying bills on time every month is important to maintaining a good credit score.  If you remain behind with any payments, bring them current as soon as possible, and then make future payments on time. Over time this will have a positive impact on your score.`,\n  },\n  R54: {\n    factor: `The amount of balance paid down on your open real estate accounts is too low`,\n    explain: `A real estate loan can be a first mortgage, a home equity loan, or home equity line of credit.  The amount that has been paid down on your open real estate accounts is low.  People who haven't paid down much of their mortgage or other real estate loans are higher credit risks than people who have.`,\n    cando: `As monthly real estate payments are made, a portion of the outstanding principal balance is reduced, benefitting your score.  Whenever possible, further pay down balances on your real estate accounts.  Over time this will also have a positive impact on your score.`,\n  },\n  R55: {\n    factor: `Open real estate account balances are too high compared to their loan amounts`,\n    explain: `A real estate loan can be a first mortgage, a home equity loan, or home equity line of credit.  The outstanding balances on open real estate accounts remain high compared to the original loan amounts.  People who haven't paid down much of their mortgage or other real estate loans are higher credit risks than people who have.`,\n    cando: `As monthly real estate payments are made, a portion of the outstanding principal balance is reduced, benefitting your score.  Whenever possible, further pay down balances on your real estate accounts.  Over time this will also have a positive impact on your score.`,\n  },\n  R57: {\n    factor: `Too many real estate accounts with delinquent or derogatory payment status`,\n    explain: `A real estate loan can be a first mortgage, a home equity loan, or home equity line of credit.  You have had too many real estate accounts with payments that are at least 30 days late and/or on which a lender has reported a derogatory status. Late payments are a proven indicator of increased risk.  People with late payments are at risk of being overextended, putting existing credit with lenders at risk.`,\n    cando: `Paying all bills on time every month is important to maintaining a good credit score.  If you remain behind with any payments, bring them current as soon as possible, and then make future payments on time. Over time this will have a positive impact on your score.`,\n  },\n  R58: {\n    factor: `The total of all balances on your open real estate accounts is too high`,\n    explain: `A real estate loan can be a first mortgage, a home equity loan, or home equity line of credit.  The total that you owe on all of your open real estate accounts is high.  Maintaining high balances has proven to be risky behavior because you don't have much credit available should it be needed, creating a greater chance of becoming overextended.  People with the highest credit scores keep their account balances low.`,\n    cando: `As monthly real estate payments are made, a portion of the outstanding principal balance is reduced, benefitting your score.  Whenever possible, further pay down balances on your real estate accounts.  Over time this will also have a positive impact on your score.`,\n  },\n  R61: {\n    factor: `No open real estate accounts in your credit file`,\n    explain: `A real estate loan can be a first mortgage, a home equity loan, or home equity line of credit.  The VantageScore credit score model relies on information in your credit files at the three national credit reporting companies (Equifax, Experian and TransUnion) to generate your score.  A mix of different types of open and active credit accounts, including real estate accounts, can have a positive impact on your credit score.`,\n    cando: `Maintaining open and active credit accounts in good standing can help improve your credit score.`,\n  },\n  R62: {\n    factor: `No recently reported real estate account information`,\n    explain: `A real estate loan can be a first mortgage, a home equity loan, or home equity line of credit.  The VantageScore credit score model relies on information in your credit files at the three national credit reporting companies (Equifax, Experian and TransUnion) to generate your score.  Because you have no real estate accounts where a lender has reported recent activity, your credit file does not contain enough information about your use of credit.  A mix of different types of open and active credit accounts with can have a positive impact on your credit score.`,\n    cando: `Maintaining open and active credit accounts in good standing can help improve your credit score.`,\n  },\n  R63: {\n    factor: `Lack of sufficient relevant real estate account information`,\n    explain: `A real estate loan can be a first mortgage, a home equity loan, or home equity line of credit.  The VantageScore credit score model relies on information in your credit files at the three national credit reporting companies (Equifax, Experian and TransUnion) to generate your score.  Your credit file does not contain enough credit behavior information about your real estate accounts.  A mix of different types of open and active credit accounts, including real estate loans, can have a positive impact on your credit score.`,\n    cando: `Maintaining open and active credit accounts in good standing can help improve your credit score.`,\n  },\n  R64: {\n    factor: `No open first mortgage accounts in your credit file`,\n    explain: `The VantageScore credit score model relies on information in your credit files at the three national credit reporting companies (Equifax, Experian and TransUnion) to generate your score.  A mix of different types of open and active credit accounts, including first mortgage accounts, can have a positive impact on your credit score.`,\n    cando: `Maintaining open and active credit accounts in good standing can help improve your credit score.`,\n  },\n  R65: {\n    factor: `Lack of sufficient relevant first mortgage account information`,\n    explain: `The VantageScore credit score model relies on information in your credit files at the three national credit reporting companies (Equifax, Experian and TransUnion) to generate your score.  Your credit file does not contain enough credit behavior information about your first mortgage accounts.  A mix of different types of open and active credit accounts, including first mortgage loans, can have a positive impact on your credit score.`,\n    cando: `Maintaining open and active credit accounts in good standing can help improve your credit score.`,\n  },\n  R66: {\n    factor: `Your open auto account balances are too high compared to their loan amounts`,\n    explain: `You have auto loans in your credit file with balances that are high compared to the original loan amounts on the account, which is a proven indicator of increased risk.`,\n    cando: `As monthly car payments are made, a portion of the outstanding principal balance is reduced, benefitting your score.  Whenever possible, further pay down balances on your auto loan accounts.  Over time this will also have a positive impact on your score.`,\n  },\n  R68: {\n    factor: `No open auto accounts in your credit file`,\n    explain: `The VantageScore credit score model relies on information in your credit files at the three national credit reporting companies (Equifax, Experian and TransUnion) to generate your score.  A mix of different types of open and active credit accounts, including auto loans, can have a positive impact on your credit score.`,\n    cando: `Maintaining open and active credit accounts in good standing can help improve your credit score.`,\n  },\n  R69: {\n    factor: `Lack of sufficient relevant auto  account information`,\n    explain: `The VantageScore credit score model relies on information in your credit files at the three national credit reporting companies (Equifax, Experian and TransUnion) to generate your score.  Your credit file does not contain enough credit behavior information about your auto loans.  A mix of different types of open and active credit accounts, including auto loans, can have a positive impact on your credit score.`,\n    cando: `Maintaining open and active credit accounts in good standing can help improve your credit score.`,\n  },\n  R71: {\n    factor: `You have either very few installment loans or too many with delinquencies`,\n    explain: `An installment account is one with a fixed monthly payment for the life of the loan.  Auto loans and student loans are common examples of installment loans.  You have had too many installment accounts with late payments or do not have enough installment loans to provide sufficient information about your credit behaviors.  Late payments are a proven indicator of increased risk.  People with late payments are at risk of being overextended, putting existing credit with lenders at risk.`,\n    cando: `Paying bills on time every month is important to maintaining a good credit score.  If you remain behind with any payments, bring them current as soon as possible, and then make future payments on time. Over time this will have a positive impact on your score.`,\n  },\n  R72: {\n    factor: `Too many installment accounts with a delinquent or derogatory payment status`,\n    explain: `An installment account is one with a fixed monthly payment for the life of the loan.  Auto loans and student loans are common examples of installment loans.  You have had too many installment accounts that are at least 30 days late and/or on which a lender has reported a derogatory status.  Late payments are a proven indicator of increased risk.  People with late payments are at risk of being overextended, putting existing credit with lenders at risk.`,\n    cando: `Paying all bills on time every month is important to maintaining a good credit score.  If you remain behind with any payments, bring them current as soon as possible, and then make future payments on time. Over time this will have a positive impact on your score.`,\n  },\n  R73: {\n    factor: `The worst status on your installment accounts is delinquent or derogatory`,\n    explain: `An installment account is one with a fixed monthly payment for the life of the loan.  Auto loans and student loans are common examples of installment loans.  Your credit file is showing an installment account with a payment that was at least 30 days late and/or on which a lender has reported a derogatory status.    Late payments are a proven indicator of increased risk.  People with late payments are at risk of being overextended, putting existing credit with lenders at risk.`,\n    cando: `Paying bills on time every month is important to maintaining a good credit score.  If you remain behind with any payments, bring them current as soon as possible, and then make future payments on time.  Over time, this will have a positive impact on your score.`,\n  },\n  R74: {\n    factor: `The balance amount paid down on your open installment accounts is too low`,\n    explain: `An installment account is one with a fixed monthly payment for the life of the loan.  Auto loans and student loans are common examples of installment loans.  The amount that has been paid down on your open installment accounts is low.  People who haven't paid down much of their installment account loan balances are higher credit risks than people who have.`,\n    cando: `As monthly installment account payments are made, a portion of the outstanding principal balance is reduced, benefitting your score.  Whenever possible, further pay down balances on your accounts.  Over time this will also have a positive impact on your score.`,\n  },\n  R75: {\n    factor: `The installment account that you opened most recently is too new`,\n    explain: `An installment account is one with a fixed monthly payment for the life of the loan.  Auto loans and student loans are common examples of installment loans.  The installment account that you opened most recently is still too new.  A credit file containing older accounts will have a positive impact on your credit score because it demonstrates that you are experienced managing credit.`,\n    cando: `Don't open more accounts than you actually need.  Research shows that new accounts indicate greater risk, especially if overall account history isn't long.  Your score will benefit as your accounts get older.`,\n  },\n  R76: {\n    factor: `You have insufficient credit history on installment loans`,\n    explain: `An installment account is one with a fixed monthly payment for the life of the loan.  Auto loans and student loans are common examples of installment loans.  Your credit file does not contain enough information about your use of installment loans.  A credit file with older accounts and/or more accounts reflects more experience with handling credit and can have a positive impact on your credit score.`,\n    cando: `Maintaining open and active credit accounts in good standing can help improve your credit score.`,\n  },\n  R77: {\n    factor: `Newest delinquent or derogatory status on installment accounts is too recent`,\n    explain: `An installment account is one with a fixed monthly payment for the life of the loan.  Auto loans and student loans are common examples of installment loans.  You have an installment account that had a late payment or on which a lender has reported a derogatory status.  Your credit file shows that this event occurred too recently.  Late payments are a proven indicator of increased risk.  People with late payments are at risk of being overextended, putting existing credit with lenders at risk.`,\n    cando: `Paying bills on time every month is important to maintaining a good credit score.  If you remain behind with any payments, bring them current as soon as possible, and then make future payments on time.  `,\n  },\n  R78: {\n    factor: `Balances on installment accounts are too high compared to their loan amounts`,\n    explain: `An installment account is one with a fixed monthly payment for the life of the loan.  Auto loans and student loans are common examples of installment loans.  The outstanding balances on open installment accounts remain high compared to the original loan amounts.  People who haven't paid down much of the original amount on installment loans are higher credit risks than people who have.`,\n    cando: `As monthly payments are made, a portion of the outstanding principal balance is reduced, benefitting your score.  Whenever possible, further pay down balances on your installment loan accounts.  Over time this will also have a positive impact on your score.`,\n  },\n  R79: {\n    factor: `Too many of the delinquencies on your installment accounts are recent`,\n    explain: `An installment account is one with a fixed monthly payment for the life of the loan.  Auto loans and student loans are common examples of installment loans.  A delinquency is a payment that was made 30 or more days late. Too many late payments occurred recently on your installment accounts.  Late payments are a proven indicator of increased risk.  People with late payments are at risk of being overextended, putting existing credit with lenders at risk.`,\n    cando: `Paying bills on time every month is important to maintaining a good credit score.  If you remain behind with any payments, bring them current as soon as possible, and then make future payments on time. Over time, this will have a positive impact on your score.`,\n  },\n  R81: {\n    factor: `No open installment accounts in your credit file`,\n    explain: `An installment account is one with a fixed monthly payment for the life of the loan.  Auto loans and student loans are common examples of installment loans.  The VantageScore credit score model relies on information in your credit files at the three national credit reporting companies (Equifax, Experian and TransUnion) to generate your score.  A mix of different types of open and active credit accounts, including installment accounts, can have a positive impact on your credit score.`,\n    cando: `Maintaining open and active credit accounts in good standing can help improve your credit score.`,\n  },\n  R83: {\n    factor: `Lack of sufficient relevant installment account information`,\n    explain: `An installment account is one with a fixed monthly payment for the life of the loan.  Auto loans and student loans are common examples of installment loans.  The VantageScore credit score model relies on information in your credit files at the three national credit reporting companies (Equifax, Experian and TransUnion) to generate your score.  Your credit file does not contain enough information about your installment accounts.  A mix of different types of open and active credit accounts, including installment accounts, can have a positive impact on your credit score.`,\n    cando: `Maintaining open and active credit accounts in good standing can help improve your credit score.`,\n  },\n  R84: {\n    factor: `The number of inquiries was also a factor, but effect was not significant`,\n    explain: `If a lender runs a credit check when you apply for credit, an inquiry is reported to the credit bureaus.  This can lower your score a small amount, in this case the drop was not significant.  The VantageScore credit score model takes rate shopping, e.g., for a mortgage or car loan, into consideration.  All inquiries for mortgages, auto loans and major credit cards that appear in your credit file within a 14-day window are interpreted as a single inquiry.  Another time inquiries never count against your score is when you check your own credit or obtain your own credit score.`,\n    cando: `Apply for credit only when you need it. If you are approved for credit, the small score drop from making an inquiry will disappear within a short time and the score will quickly benefit if you make on-time payments and manage your new account in a responsible fashion.`,\n  },\n  R85: {\n    factor: `You have too many inquiries on your credit report.`,\n    explain: `If a lender runs a credit check when you apply for credit, an inquiry is reported to the credit bureaus.  This can lower your score a small amount, typically by 10 to 20 points.  The VantageScore credit score model takes rate shopping, e.g., for a mortgage or car loan, into consideration.  All inquiries for mortgages, auto loans and major credit cards that appear in your credit file within a 14-day window are interpreted as a single inquiry.  Another time inquiries never count against your score is when you check your own credit or obtain your own credit score.`,\n    cando: `Apply for credit only when you need it. If you are approved for credit, the small score drop from making an inquiry will disappear within a short time and the score will quickly benefit if you make on-time payments and manage your new account in a responsible fashion.`,\n  },\n  R86: {\n    factor: `Your credit report contains too many derogatory public records`,\n    explain: `Public records include information filed or recorded by local, state, federal or other government agencies that is available to the general public. The types of public records that can affect your credit score include legal judgments against you, or tax liens levied by a government authority.  Public records can have a significant negative impact on your credit score.`,\n    cando: `Pay all bills on-time and satisfy all judgments.  The impact that negative items such as public records have on your credit score will diminish over time.`,\n  },\n  R87: {\n    factor: `Your credit report contains too many unsatisfied public records`,\n    explain: `Public records include information filed or recorded by local, state, federal or other government agencies that is available to the general public. The types of public records that can affect your credit score include legal judgments against you, or tax liens levied by a government authority.  Your credit file contains public records that remain unpaid.  All public records can have a significant negative impact on your credit score.`,\n    cando: `Pay all bills on-time and satisfy all judgments.  The impact that negative items such as public records have on your credit score will diminish over time.`,\n  },\n  R88: {\n    factor: `One or more derogatory public records in your credit file is too recent`,\n    explain: `Public records include information filed or recorded by local, state, federal or other government agencies that is available to the general public. The types of public records that can affect your credit score include legal judgments against you, or tax liens levied by a government authority.  Your credit file contains public records that are too recent.  All public records can have a significant negative impact on your credit score.`,\n    cando: `Pay all bills on-time and satisfy all judgments.  The impact that negative items such as public records have on your credit score will diminish over time.`,\n  },\n  R90: {\n    factor: `Too few discharged bankruptcies`,\n    explain: `You have a bankruptcy on your credit report that has not been discharged.`,\n    cando: `Complete your bankruptcy plan to have your debts discharged.¾ The impact on your credit score from the bankruptcy will diminish over time.`,\n  },\n  R93: {\n    factor: `The worst status on your student loan accounts is delinquent or derogatory`,\n    explain: `Your credit file is showing a student loan with a payment that was at least 30 days late and/or on which a lender has reported a derogatory status.  Late payments are a proven indicator of increased risk.  People with late payments are at risk of being overextended, putting existing credit with lenders at risk.`,\n    cando: `Paying bills on time every month is important to maintaining a good credit score.  If you remain behind with any payments, bring them current as soon as possible, and then make future payments on time.  Over time, this will have a positive impact on your score.`,\n  },\n  R94: {\n    factor: `The balance amount paid down on your open student loan accounts is too low`,\n    explain: `The amount that has been paid down on your open student loan accounts is low.  People who haven't paid down much of their student loan account balances are higher credit risks than people who have.`,\n    cando: `As monthly student loan account payments are made, a portion of the outstanding balance is reduced, benefitting your score.  Whenever possible, further pay down balances on your accounts.  Over time, this will also have a positive impact on your score.`,\n  },\n  R95: {\n    factor: `You have too many collection agency accounts that are unpaid`,\n    explain: `Some collection agencies report account information to credit bureaus just like lenders do.  Your credit file has too many accounts that have been sent to a collection agency and remain unpaid.  Unpaid collection accounts in your file can have a significant negative impact on your credit score.  `,\n    cando: `Satisfy all collection accounts and pay all other accounts on time each month.  The impact that negative items such as collections accounts have on your credit score will diminish over time.`,\n  },\n  R96: {\n    factor: `The total you owe on collection agency accounts is high`,\n    explain: `Some collection agencies report account information to credit bureaus just like lenders do.  Your credit file indicates the amount of money you owe to collection agencies is high.  Unpaid collection accounts in your file can have a significant negative impact on your credit score.  `,\n    cando: `Satisfy all collection accounts and pay all other accounts on time each month.  The impact that negative items such as collections accounts have on your credit score will diminish over time.`,\n  },\n  R97: {\n    factor: `You have too few credit accounts`,\n    explain: `The VantageScore credit score model relies on information in your credit files at the three national credit reporting companies (Equifax, Experian and TransUnion) to generate your score.  Your credit file does not have enough credit behavior information about your loans.  A mix of different types of open and active credit accounts can have a positive impact on your credit score.`,\n    cando: `Maintaining open and active credit accounts in good standing can help improve your credit score.`,\n  },\n  R98: {\n    factor: `There is a bankruptcy on your credit report`,\n    explain: `Bankruptcy is a proven indicator of risk with future payments and causes a significant drop to your credit score over an extended period of time.`,\n    cando: `Make all future payments on time.  The impact on your credit score from the bankruptcy will diminish over time.`,\n  },\n}"
                }
            ],
            "src/app/shared/services/creditreport/creditreport.service.ts": [
                {
                    "name": "parserOptions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/services/creditreport/creditreport.service.ts",
                    "type": "object",
                    "defaultValue": "{\n  attributeNamePrefix: '',\n  ignoreAttributes: false,\n  ignoreNameSpace: true,\n  parseAttributeValue: true,\n}"
                }
            ],
            "src/app/views/kyc-phonenumber/kyc-phonenumber/kyc-phonenumber.component.ts": [
                {
                    "name": "phoneMap",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/kyc-phonenumber/kyc-phonenumber/kyc-phonenumber.component.ts",
                    "type": "Record<string, any>",
                    "defaultValue": "{\n  phone: true,\n}"
                }
            ],
            "src/app/views/views.module.ts": [
                {
                    "name": "pipes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/views.module.ts",
                    "type": "[]",
                    "defaultValue": "[KycKbaquestionsPipe, NegativeTradelinesPipe, CreditReportPipe]"
                },
                {
                    "name": "views",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/views.module.ts",
                    "type": "[]",
                    "defaultValue": "[\n  SignupComponent,\n  SignupPureComponent,\n  SignupErrorComponent,\n  SignupErrorValidationComponent,\n  SignupKnowyouComponent,\n  SignupThankyouComponent,\n  SignupResendComponent,\n  SigninComponent,\n  SigninPureComponent,\n  SigninForgotComponent,\n  SigninRedirectComponent,\n  KycBaseComponent,\n  KycAddressComponent,\n  KycAddressPureComponent,\n  KycCongratulationsComponent,\n  KycCongratulationsPureComponent,\n  KycIdverificationComponent,\n  KycIdverificationPureComponent,\n  KycKbaquestionsComponent,\n  KycKbaquestionsPureComponent,\n  KycPhonenumberComponent,\n  KycPhonenumberPureComponent,\n  KycSsnComponent,\n  KycSsnPureComponent,\n  KycSsnFullComponent,\n  KycSsnFullPureComponent,\n  KycWelcomeComponent,\n  KycWelcomePureComponent,\n  KycWelcomebackComponent,\n  KycWelcomebackPureComponent,\n  KycErrorComponent,\n  CompliancePrivacyComponent,\n  ComplianceTosComponent,\n  DashboardInitComponent,\n  NegativeAccountInitialComponent,\n  NegativeAccountInitialPureComponent,\n  CreditReportPureComponent,\n  CreditReportComponent,\n  TradelinesComponent,\n  TradelinesPureComponent,\n]"
                }
            ],
            "src/app/shared/data/positive-reason-codes.ts": [
                {
                    "name": "POSITIVE_REASON_CODES",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/data/positive-reason-codes.ts",
                    "type": "Record<string, any>",
                    "defaultValue": "{\n  RPO1: { factor: ``, explain: ``, cando: `` },\n  RP02: { factor: ``, explain: ``, cando: `` },\n  RP03: { factor: ``, explain: ``, cando: `` },\n  RP04: {\n    factor: `The balances on your accounts are not too high compared to loan limits`,\n    explain: `Your balances are not too high compared to the loan amounts, which causes your score to improve. `,\n    cando: `Keep low balances on your accounts; this will benefit your score. `,\n  },\n  RP05: {\n    factor: `There are no or only a few recent delinquencies on your accounts`,\n    explain: `A delinquency is a payment that was made 30 or more days late. You have had no or very few delinquencies recently which has caused your score to improve.`,\n    cando: `Keep paying bills on time every month since it is important for maintaining a good credit score. If you remain behind with any payments, bring them current as soon as possible, and then make future payments on time. Over time, this will have a positive impact on your score.`,\n  },\n  RP06: {\n    factor: `You have few or no accounts that were opened recently `,\n    explain: `None or only a few of your accounts were recently opened. As a result, your history of credit management performance is enough to demonstrate responsible behavior.`,\n    cando: `Keep using your existing credit responsibly and make your payments on time. Your credit score will benefit as you make payments on time and manage the accounts in a responsible fashion. Manage your credit wisely by planning ahead for your credit needs and avoid applying for more credit than you need.`,\n  },\n  RP07: {\n    factor: `You have either no or few delinquent or derogatory accounts`,\n    explain: `Paying your bills on time improves your score. You have paid all or nearly all of your bills on time.`,\n    cando: `Keep paying bills on time every month since it is important to maintaining a good credit score. If you remain behind with any payments, bring them current as soon as possible, and then make future payments on time. `,\n  },\n  RP08: {\n    factor: `One or more of your accounts were paid on time in recent months`,\n    explain: `Paying your bills on time improves your score. Recently at least one of your accounts was paid on time.`,\n    cando: `Keep paying bills on time every month since it is important to maintaining a good credit score. If you remain behind with any payments, bring them current as soon as possible, and then make future payments on time. `,\n  },\n  RP09: {\n    factor: `None of your accounts have a severe delinquency or a derogatory status`,\n    explain: `Paying your bills on time improves your score. You have paid all your accounts on time or no more than 30 days late. `,\n    cando: `Keep paying bills on time every month since it is important to maintaining a good credit score. If you remain behind with any payments, bring them current as soon as possible, and then make future payments on time. `,\n  },\n  RP10: {\n    factor: `One or more of your accounts have been paid on time`,\n    explain: `Paying your bills on time improves your score. At least one of your accounts has no late payments.`,\n    cando: `Keep paying bills on time every month since it is important to maintaining a good credit score. If you remain behind with any payments, bring them current as soon as possible, and then make future payments on time. `,\n  },\n  RP11: {\n    factor: `You have few or no accounts with delinquent or derogatory balances`,\n    explain: `Paying your bills on time improves your score. At most, only a small amount of your balances is currently late.`,\n    cando: `Keep paying bills on time every month since it is important to maintaining a good credit score. If you remain behind with any payments, bring them current as soon as possible, and then make future payments on time. `,\n  },\n  RP12: {\n    factor: `The date that you opened your oldest account is not too recent`,\n    explain: `Your oldest account was not opened too recently. As a result, your history of credit management is enough to demonstrate responsible behavior which has improved your score.`,\n    cando: `Don't open more accounts than you actually need. Research shows that new accounts indicate greater risk. Your score will benefit as your accounts get older.`,\n  },\n  RP13: {\n    factor: `Your most recently opened account is not too new`,\n    explain: `Your newest account was not opened too recently. As a result, your history of credit management is enough to demonstrate responsible behavior which has improved your score.`,\n    cando: `Don't open more accounts than you actually need. Research shows that new accounts indicate greater risk. Your score will benefit as your accounts get older.`,\n  },\n  RP14: {\n    factor: `Your credit file contains enough information about your use of credit`,\n    explain: `A credit file with sufficient accounts and credit history reflects more experience in handling credit. More experience can have a positive impact on your score.`,\n    cando: `Maintaining open and active credit accounts in good standing can help improve your credit score. `,\n  },\n  RP15: {\n    factor: `None of your accounts have a recent delinquency or a derogatory status`,\n    explain: `A delinquency or derogatory is a payment that was made at least 30 or more days late. Recently you have paid all of your accounts on time which has caused your score to improve.`,\n    cando: `Keep paying bills on time every month since it is important to maintaining a good credit score. If you remain behind with any payments, bring them current as soon as possible, and then make future payments on time. `,\n  },\n  RP16: {\n    factor: `The total of all balances on your open accounts is not too high`,\n    explain: `The total of your balances on your open accounts, compared to the loan amounts, is not too high which has caused your score to improve. `,\n    cando: `Keep low balances on your accounts; this will benefit your score. `,\n  },\n  RP17: {\n    factor: `Balances on prior delinquent accounts not too high compared to loan amts`,\n    explain: `Keeping low balances and paying your accounts on time can improve your score. The balances on accounts, that were previously paid late, are now low compared to the loan amount or credit limit.`,\n    cando: `Keep paying bills on time every month since it is important to maintaining a good credit score. If you remain behind with any payments, bring them current as soon as possible, and then make future payments on time. `,\n  },\n  RP18: {\n    factor: `Total of balances on accts never late not too high compared to loan amts`,\n    explain: `Your balances on loans that you have paid on time, compared to the loan amounts, are not too high which has caused your score to improve. `,\n    cando: `Keep low balances on your accounts; this will benefit your score. `,\n  },\n  RP21: {\n    factor: `No open accounts in your credit file `,\n    explain: `The VantageScore credit score model relies on information in your credit files at the three national credit reporting companies (Equifax, Experian and TransUnion) to generate your score. Because you have no open accounts, your credit file does not contain enough information about your use of credit. A mix of different types of open and active credit accounts can have a positive impact on your score.`,\n    cando: `Maintaining open and active credit accounts in good standing can help improve your credit score. `,\n  },\n  RP22: {\n    factor: `No recently reported account information`,\n    explain: `The VantageScore credit score model relies on information in your credit files at the three national credit reporting companies (Equifax, Experian and TransUnion) to generate your score. Because you have no open accounts, your credit file does not contain enough information about your use of credit. A mix of different types of open and active credit accounts can have a positive impact on your score.`,\n    cando: `Maintaining open and active credit accounts in good standing can help improve your credit score. `,\n  },\n  RP23: {\n    factor: `Lack of sufficient relevant account information`,\n    explain: `The VantageScore credit score model relies on information in your credit files at the three national credit reporting companies (Equifax, Experian and TransUnion) to generate your score. Because you have no open accounts, your credit file does not contain enough information about your use of credit. A mix of different types of open and active credit accounts can have a positive impact on your score.`,\n    cando: `Maintaining open and active credit accounts in good standing can help improve your credit score. `,\n  },\n  RP29: {\n    factor: `Few or none of your open bankcard or revolving accounts has a balance`,\n    explain: `Bankcard accounts include credit cards and charge cards from a bank and are frequently revolving accounts. Revolving accounts allow you to carry a balance and your monthly payment will vary, based on the amount of your balance. Keeping low balances can improve your score. The balances on your bankcard and revolving accounts are low.`,\n    cando: `Keep low balances on your accounts; this will benefit your score. `,\n  },\n  RP30: {\n    factor: `One or more of your bankcard or revolving accounts has a high limit`,\n    explain: `Bankcard accounts include credit cards and charge cards from a bank and are frequently revolving accounts. Revolving accounts allow you to carry a balance and your monthly payment will vary, based on the amount of your balance. Having bankcard or revolving accounts with high credit limits indicates that you have high availability of credit, improving your score.`,\n    cando: `Keep using your existing credit responsibly. Your credit score will benefit as you manage the accounts in a responsible fashion. Manage your credit wisely by planning ahead for your credit needs and avoid applying for more credit than you need.`,\n  },\n  RP31: {\n    factor: `Few or none of your bankcard or revolving accounts was opened recently`,\n    explain: `Bankcard accounts include credit cards and charge cards from a bank and are frequently revolving accounts. Revolving accounts allow you to carry a balance and your monthly payment will vary, based on the amount of your balance. None or only a few of your bankcard or revolving accounts were recently opened. As a result, your history of credit management is enough to demonstrate responsible behavior.`,\n    cando: `Keep using your existing credit responsibly and make your payments on time. Your credit score will benefit as you make payments on time and manage the accounts in a responsible fashion. Manage your credit wisely by planning ahead for your credit needs and avoid applying for more credit than you need.`,\n  },\n  RP32: {\n    factor: `Balances on bankcard or revolving accts not too high compared to limits`,\n    explain: `Bankcard accounts include credit cards and charge cards from a bank and are frequently revolving accounts. Revolving accounts allow you to carry a balance and your monthly payment will vary, based on the amount of your balance. Your balances on bankcard or revolving accounts are not too high compared to the credit limit amounts, which causes your score to improve. `,\n    cando: `Keep low balances on your accounts; this will benefit your score. `,\n  },\n  RP33: {\n    factor: `No severe delinquency/derogatory status on bankcard or revolving accts`,\n    explain: `Bankcard accounts include credit cards and charge cards from a bank and are frequently revolving accounts. Revolving accounts allow you to carry a balance and your monthly payment will vary, based on the amount of your balance. Paying your bills on time improves your score. You have paid all your bankcard or revolving accounts on time or no more than 30 days late. `,\n    cando: `Keep paying bills on time every month since it is important to maintaining a good credit score. If you remain behind with any payments, bring them current as soon as possible, and then make future payments on time. `,\n  },\n  RP34: {\n    factor: `Total of all balances on bankcard or revolving accounts is not too high`,\n    explain: `Bankcard accounts include credit cards and charge cards from a bank and are frequently revolving accounts. Revolving accounts allow you to carry a balance and your monthly payment will vary, based on the amount of your balance. The total of your balances on your open bankcard or revolving accounts, compared to the credit limit amounts, is not too high which has caused your score to improve.`,\n    cando: `Keep low balances on your accounts; this will benefit your score. `,\n  },\n  RP35: {\n    factor: `Your highest bankcard or revolving account balance is not too high`,\n    explain: `Bankcard accounts include credit cards and charge cards from a bank and are frequently revolving accounts. Revolving accounts allow you to carry a balance and your monthly payment will vary, based on the amount of your balance. The highest of your balances on your open bankcard or revolving accounts is not too high which has caused your score to improve. `,\n    cando: `Keep low balances on your accounts; this will benefit your score. `,\n  },\n  RP36: {\n    factor: `Largest credit limit on open bankcard or revolving accts is not too low`,\n    explain: `Bankcard accounts include credit cards and charge cards from a bank and are frequently revolving accounts. Revolving accounts allow you to carry a balance and your monthly payment will vary, based on the amount of your balance. Having bankcard or revolving accounts with high credit limits indicates that you have high availability of credit, improving your score.`,\n    cando: `Keep using your existing credit responsibly. Your credit score will benefit as you manage the accounts in a responsible fashion. Manage your credit wisely by planning ahead for your credit needs and avoid applying for more credit than you need.`,\n  },\n  RP39: {\n    factor: `Available credit on open bankcard or revolving accounts is not too low`,\n    explain: `Bankcard accounts include credit cards and charge cards from a bank and are frequently revolving accounts. Revolving accounts allow you to carry a balance and your monthly payment will vary, based on the amount of your balance. You have high available credit on bankcard or revolving accounts which has caused your score to improve.`,\n    cando: `Keep using your existing credit responsibly. Your credit score will benefit as you manage the accounts in a responsible fashion. Manage your credit wisely by planning ahead for your credit needs and avoid applying for more credit than you need.`,\n  },\n  RP40: {\n    factor: `Date your oldest bankcard or revolving account opened is not too recent`,\n    explain: `Bankcard accounts include credit cards and charge cards from a bank and are frequently revolving accounts. Revolving accounts allow you to carry a balance and your monthly payment will vary, based on the amount of your balance. Your oldest bankcard or revolving account was not opened too recently. As a result, your history of credit management is enough to demonstrate responsible behavior which has improved your score.`,\n    cando: `Don't open more accounts than you actually need. Research shows that new accounts indicate greater risk. Your score will benefit as your accounts get older.`,\n  },\n  RP42: {\n    factor: `Date your newest bankcard or revolving account opened is not too recent`,\n    explain: `Bankcard accounts include credit cards and charge cards from a bank and are frequently revolving accounts. Revolving accounts allow you to carry a balance and your monthly payment will vary, based on the amount of your balance. Your newest bankcard or revolving account was not opened too recently. As a result, your history of credit management is enough to demonstrate responsible behavior which has improved your score.`,\n    cando: `Don't open more accounts than you actually need. Research shows that new accounts indicate greater risk. Your score will benefit as your accounts get older.`,\n  },\n  RP43: {\n    factor: `Credit file has enough history on your use of bankcard/revolving accts`,\n    explain: `Bankcard accounts include credit cards and charge cards from a bank and are frequently revolving accounts. Revolving accounts allow you to carry a balance and your monthly payment will vary, based on the amount of your balance. A credit file with sufficient accounts and credit history, including bankcard or revolving accounts, reflects more experience in handling credit. More experience can have a positive impact on your score.`,\n    cando: `Maintaining open and active credit accounts in good standing can help improve your credit score. `,\n  },\n  RP44: {\n    factor: `Few or no bankcard or revolving accts with delinquent/derogatory status`,\n    explain: `Bankcard accounts include credit cards and charge cards from a bank and are frequently revolving accounts. Revolving accounts allow you to carry a balance and your monthly payment will vary, based on the amount of your balance. Paying your bills on time improves your score. You have paid all your bankcard or revolving accounts on time or no more than 30 days late. `,\n    cando: `Keep paying bills on time every month since it is important to maintaining a good credit score. If you remain behind with any payments, bring them current as soon as possible, and then make future payments on time. `,\n  },\n  RP45: {\n    factor: `Few or no bankcard/revolving accts with delinquent/derogatory balances`,\n    explain: `Bankcard accounts include credit cards and charge cards from a bank and are frequently revolving accounts. Revolving accounts allow you to carry a balance and your monthly payment will vary, based on the amount of your balance. Paying your bills on time improves your score. At most, only a small amount of your bankcard or revolving balances are currently late.`,\n    cando: `Keep paying bills on time every month since it is important to maintaining a good credit score. If you remain behind with any payments, bring them current as soon as possible, and then make future payments on time. `,\n  },\n  RP47: {\n    factor: `No open bankcard or revolving accounts in your credit file`,\n    explain: `Bankcard accounts include credit cards and charge cards from a bank and are frequently revolving accounts. Revolving accounts allow you to carry a balance and your monthly payment will vary, based on the amount of your balance. The VantageScore credit score model relies on information in your credit files at the three national credit reporting companies (Equifax, Experian and TransUnion) to generate your score. Because you have no open bankcard or revolving accounts, your credit file does not contain enough information about your use of credit. A mix of different types of open and active credit accounts can have a positive impact on your score.`,\n    cando: `Maintaining open and active credit accounts in good standing can help improve your credit score. `,\n  },\n  RP48: {\n    factor: `No bankcard or revolving recently reported account information`,\n    explain: `Bankcard accounts include credit cards and charge cards from a bank and are frequently revolving accounts. Revolving accounts allow you to carry a balance and your monthly payment will vary, based on the amount of your balance. The VantageScore credit score model relies on information in your credit files at the three national credit reporting companies (Equifax, Experian and TransUnion) to generate your score. Because you have no open bankcard or revolving accounts, your credit file does not contain enough information about your use of credit. A mix of different types of open and active credit accounts can have a positive impact on your score.`,\n    cando: `Maintaining open and active credit accounts in good standing can help improve your credit score. `,\n  },\n  RP49: {\n    factor: `Lack of sufficient relevant bankcard or revolving account information`,\n    explain: `Bankcard accounts include credit cards and charge cards from a bank and are frequently revolving accounts. Revolving accounts allow you to carry a balance and your monthly payment will vary, based on the amount of your balance. The VantageScore credit score model relies on information in your credit files at the three national credit reporting companies (Equifax, Experian and TransUnion) to generate your score. Because you have no open bankcard or revolving accounts, your credit file does not contain enough information about your use of credit. A mix of different types of open and active credit accounts can have a positive impact on your score.`,\n    cando: `Maintaining open and active credit accounts in good standing can help improve your credit score. `,\n  },\n  RP50: {\n    factor: `No open retail revolving accounts in your credit file`,\n    explain: `The VantageScore credit score model relies on information in your credit files at the three national credit reporting companies (Equifax, Experian and TransUnion) to generate your score. A mix of different types of open and active credit accounts, including retail revolving accounts, can have a positive impact on your score.`,\n    cando: `Maintaining open and active credit accounts in good standing can help improve your credit score. `,\n  },\n  RP52: {\n    factor: `No open home equity loans in your credit file `,\n    explain: `The VantageScore credit score model relies on information in your credit files at the three national credit reporting companies (Equifax, Experian and TransUnion) to generate your score. A mix of different types of open and active credit accounts, including home equity accounts, can have a positive impact on your score.`,\n    cando: `Maintaining open and active credit accounts in good standing can help improve your credit score. `,\n  },\n  RP53: {\n    factor: `No real estate accounts with severe delinquency or derogatory status`,\n    explain: `A real estate loan can be a first mortgage, a home equity loan, or home equity line of credit. Paying your bills on time improves your score. You have paid all your real estate accounts on time or no more than 30 days late. `,\n    cando: `Keep paying bills on time every month since it is important to maintaining a good credit score. If you remain behind with any payments, bring them current as soon as possible, and then make future payments on time. `,\n  },\n  RP54: {\n    factor: `Amount of balance paid down on open real estate accounts is not too low`,\n    explain: `A real estate loan can be a first mortgage, a home equity loan, or home equity line of credit. The amount that has been paid down on your open real estate accounts is high. Paying down a high amount of your real estate loans increases your score.`,\n    cando: `As monthly real estate payments are made, a portion of the outstanding principal balance is reduced, benefitting your score. Whenever possible, further pay down balances on your real estate accounts. Over time this will also have a positive impact on your score.`,\n  },\n  RP55: {\n    factor: `Open real estate account balances not too high compared to loan amounts`,\n    explain: `A real estate loan can be a first mortgage, a home equity loan, or home equity line of credit. Your balances on real estate accounts are not too high compared to the original loan amounts, which causes your score to improve.`,\n    cando: `Keep low balances on your accounts; this will benefit your score. `,\n  },\n  RP57: {\n    factor: `Few or no real estate accts with delinquent or derogatory payment status`,\n    explain: `A real estate loan can be a first mortgage, a home equity loan, or home equity line of credit. Paying your bills on time improves your score. You have paid all your real estate loans on time or no more than 30 days late. `,\n    cando: `Keep paying bills on time every month since it is important to maintaining a good credit score. If you remain behind with any payments, bring them current as soon as possible, and then make future payments on time. `,\n  },\n  RP58: {\n    factor: `The total of all balances on open real estate accounts is not too high`,\n    explain: `A real estate loan can be a first mortgage, a home equity loan, or home equity line of credit. Your balances on real estate loans, compared to the original loan amounts, are not too high which has caused your score to improve. `,\n    cando: `Keep low balances on your accounts; this will benefit your score. `,\n  },\n  RP61: {\n    factor: `No open real estate accounts in your credit file`,\n    explain: `A real estate loan can be a first mortgage, a home equity loan, or home equity line of credit. The VantageScore credit score model relies on information in your credit files at the three national credit reporting companies (Equifax, Experian and TransUnion) to generate your score. A mix of different types of open and active credit accounts, including real estate accounts, can have a positive impact on your score.`,\n    cando: `Maintaining open and active credit accounts in good standing can help improve your credit score. `,\n  },\n  RP62: {\n    factor: `No recently reported real estate account information`,\n    explain: `A real estate loan can be a first mortgage, a home equity loan, or home equity line of credit. The VantageScore credit score model relies on information in your credit files at the three national credit reporting companies (Equifax, Experian and TransUnion) to generate your score. A mix of different types of open and active credit accounts, including real estate accounts, can have a positive impact on your score.`,\n    cando: `Maintaining open and active credit accounts in good standing can help improve your credit score. `,\n  },\n  RP63: {\n    factor: `Lack of sufficient relevant real estate account information`,\n    explain: `A real estate loan can be a first mortgage, a home equity loan, or home equity line of credit. The VantageScore credit score model relies on information in your credit files at the three national credit reporting companies (Equifax, Experian and TransUnion) to generate your score. A mix of different types of open and active credit accounts, including real estate accounts, can have a positive impact on your score.`,\n    cando: `Maintaining open and active credit accounts in good standing can help improve your credit score. `,\n  },\n  RP64: {\n    factor: `No open first mortgage accounts in your credit file`,\n    explain: `The VantageScore credit score model relies on information in your credit files at the three national credit reporting companies (Equifax, Experian and TransUnion) to generate your score. A mix of different types of open and active credit accounts, including first mortgage accounts, can have a positive impact on your score.`,\n    cando: `Maintaining open and active credit accounts in good standing can help improve your credit score. `,\n  },\n  RP65: {\n    factor: `Lack of sufficient relevant first mortgage account information`,\n    explain: `The VantageScore credit score model relies on information in your credit files at the three national credit reporting companies (Equifax, Experian and TransUnion) to generate your score. A mix of different types of open and active credit accounts, including first mortgage accounts, can have a positive impact on your score.`,\n    cando: `Maintaining open and active credit accounts in good standing can help improve your credit score. `,\n  },\n  RP66: {\n    factor: `Balances on open auto accounts are not too high compared to loan amounts`,\n    explain: `Your balances on auto accounts are not too high compared to the original loan amounts, which causes your score to improve.`,\n    cando: `Keep low balances on your accounts; this will benefit your score. `,\n  },\n  RP68: {\n    factor: `No open auto accounts in your credit file`,\n    explain: `The VantageScore credit score model relies on information in your credit files at the three national credit reporting companies (Equifax, Experian and TransUnion) to generate your score. A mix of different types of open and active credit accounts, including auto accounts, can have a positive impact on your score.`,\n    cando: `Maintaining open and active credit accounts in good standing can help improve your credit score. `,\n  },\n  RP69: {\n    factor: `Lack of sufficient relevant auto account information`,\n    explain: `The VantageScore credit score model relies on information in your credit files at the three national credit reporting companies (Equifax, Experian and TransUnion) to generate your score. A mix of different types of open and active credit accounts, including auto accounts, can have a positive impact on your score.`,\n    cando: `Maintaining open and active credit accounts in good standing can help improve your credit score. `,\n  },\n  RP70: {\n    factor: `No open personal installment loans in your credit file`,\n    explain: `The VantageScore credit score model relies on information in your credit files at the three national credit reporting companies (Equifax, Experian and TransUnion) to generate your score. A mix of different types of open and active credit accounts, including personal installment accounts, can have a positive impact on your score.`,\n    cando: `Maintaining open and active credit accounts in good standing can help improve your credit score. `,\n  },\n  RP71: {\n    factor: `One or more of your installment accounts has been paid on time`,\n    explain: `An installment account is one with a fixed monthly payment for the life of the loan. Auto loans and student loans are common examples of installment loans. Paying your bills on time improves your score. At least one of your installment accounts was paid on time.`,\n    cando: `Keep paying bills on time every month since it is important to maintaining a good credit score. If you remain behind with any payments, bring them current as soon as possible, and then make future payments on time. `,\n  },\n  RP72: {\n    factor: `Few or no installment accts with delinquent or derogatory payment status`,\n    explain: `An installment account is one with a fixed monthly payment for the life of the loan. Auto loans and student loans are common examples of installment loans. Paying your bills on time improves your score. You have paid all your installment loans on time or no more than 30 days late. `,\n    cando: `Keep paying bills on time every month since it is important to maintaining a good credit score. If you remain behind with any payments, bring them current as soon as possible, and then make future payments on time. `,\n  },\n  RP73: {\n    factor: `No installment accounts with a severe delinquency or derogatory status`,\n    explain: `An installment account is one with a fixed monthly payment for the life of the loan. Auto loans and student loans are common examples of installment loans. Paying your bills on time improves your score. You have paid all your installment accounts on time or no more than 30 days late. `,\n    cando: `Keep paying bills on time every month since it is important to maintaining a good credit score. If you remain behind with any payments, bring them current as soon as possible, and then make future payments on time. `,\n  },\n  RP74: {\n    factor: `Amount of balance paid down on open installment accounts is not too low`,\n    explain: `An installment account is one with a fixed monthly payment for the life of the loan. Auto loans and student loans are common examples of installment loans. The amount that has been paid down on your open installment accounts is high. Paying down a high amount of your installment loans increases your score.`,\n    cando: `As monthly installment account payments are made, a portion of the outstanding principal balance is reduced, benefitting your score. Whenever possible, further pay down balances on your accounts. Over time this will also have a positive impact on your score.`,\n  },\n  RP75: {\n    factor: `Your most recently opened installment account is not too new`,\n    explain: `An installment account is one with a fixed monthly payment for the life of the loan. Auto loans and student loans are common examples of installment loans. Your newest installment account was not opened too recently. As a result, your history of credit management is enough to demonstrate responsible behavior which has improved your score.`,\n    cando: `Don't open more accounts than you actually need. Research shows that new accounts indicate greater risk. Your score will benefit as your accounts get older.`,\n  },\n  RP76: {\n    factor: `Your credit file has enough history on your use of installment loans`,\n    explain: `An installment account is one with a fixed monthly payment for the life of the loan. Auto loans and student loans are common examples of installment loans. A credit file with sufficient accounts and credit history, including installment loans, reflects more experience in handling credit. More experience can have a positive impact on your score.`,\n    cando: `Maintaining open and active credit accounts in good standing can help improve your credit score. `,\n  },\n  RP77: {\n    factor: `Newest delinquent/derogatory status on installment accts not too recent`,\n    explain: `An installment account is one with a fixed monthly payment for the life of the loan. Auto loans and student loans are common examples of installment loans. You have an installment account that had a late payment or on which a lender has reported a derogatory status. However, your credit file shows that this event did not occur too recently, having some positive impact on your score.`,\n    cando: `Keep paying bills on time every month since it is important to maintaining a good credit score. If you remain behind with any payments, bring them current as soon as possible, and then make future payments on time. `,\n  },\n  RP78: {\n    factor: `Installment account balances not too high compared to loan amounts`,\n    explain: `An installment account is one with a fixed monthly payment for the life of the loan. Auto loans and student loans are common examples of installment loans. Your balances on installment accounts are not too high compared to the original loan amounts, which causes your score to improve.`,\n    cando: `Keep low balances on your accounts; this will benefit your score. `,\n  },\n  RP79: {\n    factor: `You have few or no recent delinquencies on your installment accounts`,\n    explain: `An installment account is one with a fixed monthly payment for the life of the loan. Auto loans and student loans are common examples of installment loans. A delinquency is a payment that was made 30 or more days late. You have had no or very few delinquencies recently on your installment accounts, which has caused your score to improve.`,\n    cando: `Keep paying bills on time every month since it is important for maintaining a good credit score. If you remain behind with any payments, bring them current as soon as possible, and then make future payments on time. Over time, this will have a positive impact on your score.`,\n  },\n  RP81: {\n    factor: `No open installment accounts in your credit file`,\n    explain: `The VantageScore credit score model relies on information in your credit files at the three national credit reporting companies (Equifax, Experian and TransUnion) to generate your score. A mix of different types of open and active credit accounts, including installment accounts, can have a positive impact on your score.`,\n    cando: `Maintaining open and active credit accounts in good standing can help improve your credit score. `,\n  },\n  RP83: {\n    factor: `Lack of sufficient relevant installment account information`,\n    explain: `The VantageScore credit score model relies on information in your credit files at the three national credit reporting companies (Equifax, Experian and TransUnion) to generate your score. A mix of different types of open and active credit accounts, including installment accounts, can have a positive impact on your score.`,\n    cando: `Maintaining open and active credit accounts in good standing can help improve your credit score. `,\n  },\n  RP85: {\n    factor: `You have few or no inquiries on your credit report`,\n    explain: `If a lender runs a credit check when you apply for credit, an inquiry is reported to the credit bureaus. This can lower your score a small amount, typically by 10 to 20 points. The VantageScore credit score model takes rate shopping, e.g., for a mortgage or car loan, into consideration. All inquiries for mortgages, auto loans and major credit cards that appear in your credit file within a 14-day window are counted as a single inquiry. Another time inquiries never count against your score is when you check your own credit or obtain your own score. You have no inquiries or a low number of inquiries on your credit report, which increases your score.`,\n    cando: `Apply for credit only when you need it. If you are approved for credit, the small score drop from making an inquiry will disappear within a short time and the score will quickly benefit if you make on-time payments and manage your new account in a responsible fashion.`,\n  },\n  RP86: {\n    factor: `You have few or no derogatory public records on your credit report`,\n    explain: `Public records include information filed or recorded by local, state, federal or other government agencies that is available to the general public. The types of public records that can affect your score include legal judgments against you and tax liens levied by a government authority. You have few or no public records on your credit report, which increases your score.`,\n    cando: `Pay all bills on-time and satisfy all judgments. The impact that negative items such as public records have on your credit score will diminish over time.`,\n  },\n  RP87: {\n    factor: `You have few or no unsatisfied public records on your credit report`,\n    explain: `Public records include information filed or recorded by local, state, federal or other government agencies that is available to the general public. The types of public records that can affect your score include legal judgments against you and tax liens levied by a government authority. You have few or no public records on your credit report, which increases your score.`,\n    cando: `Pay all bills on-time and satisfy all judgments. The impact that negative items such as public records have on your credit score will diminish over time.`,\n  },\n  RP88: {\n    factor: `You have no recent derogatory public records on your credit report`,\n    explain: `Public records include information filed or recorded by local, state, federal or other government agencies that is available to the general public. The types of public records that can affect your score include legal judgments against you and tax liens levied by a government authority. You have few or no public records on your credit report, which increases your score.`,\n    cando: `Pay all bills on-time and satisfy all judgments. The impact that negative items such as public records have on your credit score will diminish over time.`,\n  },\n  RP90: {\n    factor: `You have one or more discharged bankruptcies`,\n    explain: `You have one or more bankruptcies on your credit report. However, they have been discharged.`,\n    cando: `Make all future payments on time. The impact on your credit score from the bankruptcy will diminish over time.`,\n  },\n  RP92: {\n    factor: `No open student loan accounts in your credit file`,\n    explain: `The VantageScore credit score model relies on information in your credit files at the three national credit reporting companies (Equifax, Experian and TransUnion) to generate your score. A mix of different types of open and active credit accounts, including student loan accounts, can have a positive impact on your score.`,\n    cando: `Maintaining open and active credit accounts in good standing can help improve your credit score. `,\n  },\n  RP93: {\n    factor: `No student loan accounts with a severe delinquency or derogatory status`,\n    explain: `Paying your bills on time improves your score. You have paid all your student loans on time or no more than 30 days late. `,\n    cando: `Keep paying bills on time every month since it is important for maintaining a good credit score. If you remain behind with any payments, bring them current as soon as possible, and then make future payments on time. Over time, this will have a positive impact on your score.`,\n  },\n  RP94: {\n    factor: `Amount of balance paid down on open student loan accounts is not too low`,\n    explain: `The amount that has been paid down on your open student loan accounts is high. Paying down a high amount of your student loans increases your score.`,\n    cando: `As monthly student loan account payments are made, a portion of the outstanding principal balance is reduced, benefitting your score. Whenever possible, further pay down balances on your accounts. Over time this will also have a positive impact on your score.`,\n  },\n  RP95: {\n    factor: `You have few or no unpaid collection agency accounts`,\n    explain: `Some collection agencies report account information to credit bureaus just like lenders do. Your credit file has no or few accounts that have been sent to a collection agency and remain unpaid, which increases your score.`,\n    cando: `Satisfy all collection accounts and pay all other accounts on time each month. The impact that negative items such as collections accounts have on your credit score will diminish over time.`,\n  },\n  RP96: {\n    factor: `You have few or no collection agency account balances`,\n    explain: `Some collection agencies report account information to credit bureaus just like lenders do. Your credit file has no or few accounts that have been sent to a collection agency and remain unpaid, which increases your score.`,\n    cando: `Satisfy all collection accounts and pay all other accounts on time each month. The impact that negative items such as collections accounts have on your credit score will diminish over time.`,\n  },\n  RP98: {\n    factor: `There is no bankruptcy on your credit report`,\n    explain: `You have no bankruptcy on your credit report, which increases your score.`,\n    cando: `Keep paying bills on time every month since it is important for maintaining a good credit score. If you remain behind with any payments, bring them current as soon as possible, and then make future payments on time. Over time, this will have a positive impact on your score.`,\n  },\n}"
                }
            ],
            "src/app/shared/services/shared-services.module.ts": [
                {
                    "name": "services",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/services/shared-services.module.ts",
                    "type": "[]",
                    "defaultValue": "[\n  AuthService,\n  APIService,\n  SyncService,\n  GuestService,\n  IamService,\n  KycService,\n  DashboardService,\n  TransunionService,\n]"
                }
            ],
            "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.pipe.ts": [
                {
                    "name": "sizeSpecificClass",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.pipe.ts",
                    "type": "Record<string, any>",
                    "defaultValue": "{\n  xs: 'max-w-xs',\n  sm: 'max-w-sm',\n  base: 'max-w-md',\n  lg: 'max-w-lg',\n  xl: 'max-w-xl',\n}"
                }
            ],
            "src/app/shared/components/badges/filled-onlytext-badge/filled-onlytext-badge.pipe.ts": [
                {
                    "name": "sizeSpecificClass",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/badges/filled-onlytext-badge/filled-onlytext-badge.pipe.ts",
                    "type": "Record<string, any>",
                    "defaultValue": "{\n  sm: 'text-xs px-2 py-1',\n  base: 'text-xs px-2 py-1',\n  lg: 'text-xs px-2 py-1',\n}"
                }
            ],
            "src/app/shared/components/buttons/filled-onlytext-button/filled-onlytext-button.pipe.ts": [
                {
                    "name": "sizeSpecificClass",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/buttons/filled-onlytext-button/filled-onlytext-button.pipe.ts",
                    "type": "Record<string, any>",
                    "defaultValue": "{\n  sm: 'text-xs px-4 py-2 hover:shadow-md',\n  base: 'text-sm px-6 py-3 hover:shadow-lg',\n  lg: 'text-base px-8 py-3 hover:shadow-lg',\n}"
                }
            ],
            "src/app/shared/components/buttons/outline-onlytext-button/outline-onlytext-button.pipe.ts": [
                {
                    "name": "sizeSpecificClass",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/buttons/outline-onlytext-button/outline-onlytext-button.pipe.ts",
                    "type": "Record<string, any>",
                    "defaultValue": "{\n  sm: 'text-xs px-4 py-2',\n  base: 'text-sm px-6 py-3',\n  lg: 'text-base px-8 py-3',\n}"
                }
            ],
            "src/app/shared/components/buttons/links-onlytext-button/links-onlytext-button.pipe.ts": [
                {
                    "name": "sizeSpecificClass",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/buttons/links-onlytext-button/links-onlytext-button.pipe.ts",
                    "type": "Record<string, any>",
                    "defaultValue": "{\n  sm: 'text-xs px-3 py-1',\n  base: 'text-sm px-6 py-2',\n  lg: 'text-base px-8 py-3',\n}"
                }
            ],
            "src/app/shared/components/inputs/outline-input/outline-input.pipe.ts": [
                {
                    "name": "sizeSpecificClass",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/inputs/outline-input/outline-input.pipe.ts",
                    "type": "Record<string, any>",
                    "defaultValue": "{\n  sm: 'text-sm px-3 py-1',\n  base: 'text-sm px-3 py-3',\n  lg: 'text-base px-3 py-4',\n}"
                }
            ],
            "src/app/shared/components/inputs/outline-select-input/outline-select-input.pipe.ts": [
                {
                    "name": "sizeSpecificClass",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/inputs/outline-select-input/outline-select-input.pipe.ts",
                    "type": "Record<string, any>",
                    "defaultValue": "{\n  sm: 'text-sm px-1 py-1',\n  base: 'text-sm px-1 py-3',\n  lg: 'text-base px-1 py-4',\n}"
                }
            ],
            "src/app/views/kyc-ssn-full/kyc-ssn-full/kyc-ssn-full.component.ts": [
                {
                    "name": "ssn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/kyc-ssn-full/kyc-ssn-full/kyc-ssn-full.component.ts",
                    "type": "Record<string, any>",
                    "defaultValue": "{\n  'input-0': true,\n  'input-1': true,\n  'input-2': true,\n  'input-3': true,\n  'input-4': true,\n  'input-5': true,\n  'input-6': true,\n  'input-7': true,\n  'input-8': true,\n}"
                }
            ],
            "src/app/views/kyc-ssn/kyc-ssn/kyc-ssn.component.ts": [
                {
                    "name": "ssnMap",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/kyc-ssn/kyc-ssn/kyc-ssn.component.ts",
                    "type": "Record<string, any>",
                    "defaultValue": "{\n  'input-0': true,\n  'input-1': true,\n  'input-2': true,\n  'input-3': true,\n}"
                }
            ],
            "src/app/shared/components/forms/outline-address-form/outline-address-form.component.ts": [
                {
                    "name": "states",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/forms/outline-address-form/outline-address-form.component.ts",
                    "type": "[]",
                    "defaultValue": "[\n  'AL',\n  'AK',\n  'AZ',\n  'AR',\n  'CA',\n  'CO',\n  'CT',\n  'DE',\n  'FL',\n  'GA',\n  'HI',\n  'ID',\n  'IL',\n  'IN',\n  'IA',\n  'KS',\n  'KY',\n  'LA',\n  'ME',\n  'MD',\n  'MA',\n  'MI',\n  'MN',\n  'MS',\n  'MO',\n  'MT',\n  'NE',\n  'NV',\n  'NH',\n  'NJ',\n  'NM',\n  'NY',\n  'NC',\n  'ND',\n  'OH',\n  'OK',\n  'OR',\n  'PA',\n  'RI',\n  'SC',\n  'SD',\n  'TN',\n  'TX',\n  'UT',\n  'VT',\n  'VA',\n  'WA',\n  'WV',\n  'WI',\n  'WY',\n]"
                }
            ],
            "src/app/shared/components/cards/creditcard-card/account-status.pipe.ts": [
                {
                    "name": "statuses",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/cards/creditcard-card/account-status.pipe.ts",
                    "type": "Record<Status, any>",
                    "defaultValue": "{\n  excellent: 'bg-teal-500',\n  good: 'bg-amber-300',\n  okay: 'bg-orange-500',\n  poor: 'bg-rose-800',\n}"
                }
            ]
        },
        "groupedFunctions": {
            "src/app/shared/validators/email.validator.ts": [
                {
                    "name": "BraveEmailValidator",
                    "file": "src/app/shared/validators/email.validator.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "description": "",
                    "args": [
                        {
                            "name": "control"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "control",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ]
        },
        "groupedEnumerations": {
            "src/app/shared/data/credit-report.ts": [
                {
                    "name": "CreditReportGroups",
                    "childs": [
                        {
                            "name": "CreditCards",
                            "value": "creditCards"
                        },
                        {
                            "name": "CollectionsAccounts",
                            "value": "collectionsAccounts"
                        },
                        {
                            "name": "InstallmentLoans",
                            "value": "installmentLoans"
                        },
                        {
                            "name": "Mortgages",
                            "value": "mortgages"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "description": "",
                    "file": "src/app/shared/data/credit-report.ts"
                }
            ],
            "src/app/shared/components/graphics/credit-report-graphic/credit-report-graphic.pipe.ts": [
                {
                    "name": "CreditReportStatus",
                    "childs": [
                        {
                            "name": "Critical",
                            "value": "critical"
                        },
                        {
                            "name": "Danger",
                            "value": "danger"
                        },
                        {
                            "name": "Safe",
                            "value": "safe"
                        },
                        {
                            "name": "Default",
                            "value": "default"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "description": "",
                    "file": "src/app/shared/components/graphics/credit-report-graphic/credit-report-graphic.pipe.ts"
                }
            ],
            "src/app/shared/services/kyc/kyc.service.ts": [
                {
                    "name": "KYCResponse",
                    "childs": [
                        {
                            "name": "Failed",
                            "value": "failed"
                        },
                        {
                            "name": "Success",
                            "value": "success"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "description": "",
                    "file": "src/app/shared/services/kyc/kyc.service.ts"
                },
                {
                    "name": "OTPQuestion",
                    "childs": [
                        {
                            "name": "FullText",
                            "value": "Please select your preferred method of Authentication?(Standard text message and voice rates apply)*</FullQuestionText"
                        },
                        {
                            "name": "PartialOne",
                            "value": "preferred method of Authentication"
                        },
                        {
                            "name": "PartialTwo",
                            "value": "Standard text message and voice rates apply"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "description": "",
                    "file": "src/app/shared/services/kyc/kyc.service.ts"
                },
                {
                    "name": "OTPReponse",
                    "childs": [
                        {
                            "name": "FullText",
                            "value": "Deliver passcode via Text Message"
                        },
                        {
                            "name": "PartialOne",
                            "value": "via Text Message"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "description": "",
                    "file": "src/app/shared/services/kyc/kyc.service.ts"
                },
                {
                    "name": "PassCodeQuestion",
                    "childs": [
                        {
                            "name": "FullText",
                            "value": "Enter the passcode you received"
                        },
                        {
                            "name": "PartialOne",
                            "value": "passcode"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "description": "",
                    "file": "src/app/shared/services/kyc/kyc.service.ts"
                }
            ],
            "src/app/shared/components/cards/snapshot-display-card/snapshot-label.pipe.ts": [
                {
                    "name": "LabelOfSnapshot",
                    "childs": [
                        {
                            "name": "Update",
                            "value": "update"
                        },
                        {
                            "name": "Hidden",
                            "value": "hidden"
                        },
                        {
                            "name": "New",
                            "value": "new"
                        },
                        {
                            "name": "NoLabel",
                            "value": "no-label"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "description": "",
                    "file": "src/app/shared/components/cards/snapshot-display-card/snapshot-label.pipe.ts"
                }
            ],
            "src/app/shared/services/aws/api.service.ts": [
                {
                    "name": "ModelAttributeTypes",
                    "childs": [
                        {
                            "name": "binary",
                            "value": "binary"
                        },
                        {
                            "name": "binarySet",
                            "value": "binarySet"
                        },
                        {
                            "name": "bool",
                            "value": "bool"
                        },
                        {
                            "name": "list",
                            "value": "list"
                        },
                        {
                            "name": "map",
                            "value": "map"
                        },
                        {
                            "name": "number",
                            "value": "number"
                        },
                        {
                            "name": "numberSet",
                            "value": "numberSet"
                        },
                        {
                            "name": "string",
                            "value": "string"
                        },
                        {
                            "name": "stringSet",
                            "value": "stringSet"
                        },
                        {
                            "name": "_null",
                            "value": "_null"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "description": "",
                    "file": "src/app/shared/services/aws/api.service.ts"
                }
            ],
            "src/app/shared/components/cards/snapshot-display-card/snapshot-display-card.component.ts": [
                {
                    "name": "SnapshotStatus",
                    "childs": [
                        {
                            "name": "Critical",
                            "value": "critical"
                        },
                        {
                            "name": "Danger",
                            "value": "danger"
                        },
                        {
                            "name": "Safe",
                            "value": "safe"
                        },
                        {
                            "name": "Default",
                            "value": "default"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "description": "",
                    "file": "src/app/shared/components/cards/snapshot-display-card/snapshot-display-card.component.ts"
                }
            ],
            "src/app/shared/components/tradelines/tradeline-payment-icon/tradeline-payment-icon.component.ts": [
                {
                    "name": "TradelineIcons",
                    "childs": [
                        {
                            "name": "Late",
                            "value": "late"
                        },
                        {
                            "name": "Collection",
                            "value": "collection"
                        },
                        {
                            "name": "Unknown",
                            "value": "unknown"
                        },
                        {
                            "name": "Current",
                            "value": "current"
                        },
                        {
                            "name": "Other",
                            "value": "other"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "description": "",
                    "file": "src/app/shared/components/tradelines/tradeline-payment-icon/tradeline-payment-icon.component.ts"
                }
            ]
        },
        "groupedTypeAliases": {
            "src/app/shared/services/aws/api.service.ts": [
                {
                    "name": "Address",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/shared/services/aws/api.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "AddressInput",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/shared/services/aws/api.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "Agencies",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/shared/services/aws/api.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "AgenciesInput",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/shared/services/aws/api.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "AppData",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/shared/services/aws/api.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "CreateAppDataInput",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/shared/services/aws/api.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "CreateAppDataMutation",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/shared/services/aws/api.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "DeleteAppDataInput",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/shared/services/aws/api.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "DeleteAppDataMutation",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/shared/services/aws/api.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "Dob",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/shared/services/aws/api.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "DobInput",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/shared/services/aws/api.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "Equifax",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/shared/services/aws/api.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "EquifaxInput",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/shared/services/aws/api.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "Experian",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/shared/services/aws/api.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "ExperianInput",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/shared/services/aws/api.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "GetAppDataQuery",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/shared/services/aws/api.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "ListAppDatasQuery",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/shared/services/aws/api.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "ModelAppDataConditionInput",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/shared/services/aws/api.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "ModelAppDataConnection",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/shared/services/aws/api.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "ModelAppDataFilterInput",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/shared/services/aws/api.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "ModelIDInput",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/shared/services/aws/api.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "ModelSizeInput",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/shared/services/aws/api.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "Name",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/shared/services/aws/api.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "NameInput",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/shared/services/aws/api.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "Onboarding",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/shared/services/aws/api.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "OnboardingInput",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/shared/services/aws/api.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "OnCreateAppDataSubscription",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/shared/services/aws/api.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "OnDeleteAppDataSubscription",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/shared/services/aws/api.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "OnUpdateAppDataSubscription",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/shared/services/aws/api.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "Phone",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/shared/services/aws/api.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "PhoneInput",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/shared/services/aws/api.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "Preferences",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/shared/services/aws/api.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "PreferencesInput",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/shared/services/aws/api.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "ShowAccountsPreference",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/shared/services/aws/api.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "ShowAccountsPreferenceInput",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/shared/services/aws/api.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "Ssn",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/shared/services/aws/api.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "SsnInput",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/shared/services/aws/api.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "Transunion",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/shared/services/aws/api.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "TransunionInput",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/shared/services/aws/api.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "TUEnrollResponse",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/shared/services/aws/api.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "TUEnrollResponseInput",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/shared/services/aws/api.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "UpdateAppDataInput",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/shared/services/aws/api.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "UpdateAppDataMutation",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/shared/services/aws/api.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "User",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/shared/services/aws/api.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "UserAttributes",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/shared/services/aws/api.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "UserAttributesInput",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/shared/services/aws/api.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "UserInput",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/shared/services/aws/api.service.ts",
                    "description": "",
                    "kind": 165
                }
            ],
            "src/app/views/kyc-idverification/kyc-idverification/kyc-idverification.component.ts": [
                {
                    "name": "KycIdverificationState",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"init\" | \"sent\" | \"error\"",
                    "file": "src/app/views/kyc-idverification/kyc-idverification/kyc-idverification.component.ts",
                    "description": "",
                    "kind": 168
                }
            ],
            "src/app/shared/utils/types.ts": [
                {
                    "name": "Mutable",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/app/shared/utils/types.ts",
                    "description": "<p>To change read only types to mutable\nExample:\ninterface Foo {\n   readonly bar: boolean;\n}</p>\n<p>const Bar: Foo = {\n    bar: false\n}</p>\n<p>const FooBar = {...Bar} as DeepWriteable<Foo>\nBar.bar = true; // ERROR!!\nFooBar.bar = true; // OK\nFooBar.bar = false; // OK</p>\n",
                    "kind": 176
                }
            ],
            "src/app/shared/components/cards/snapshot-display-card/snapshot-display-card.component.ts": [
                {
                    "name": "SnapshotTendency",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"up\" | \"down\" | \"no-tendency\"",
                    "file": "src/app/shared/components/cards/snapshot-display-card/snapshot-display-card.component.ts",
                    "description": "",
                    "kind": 168
                },
                {
                    "name": "Status",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"excellent\" | \"good\" | \"okay\" | \"poor\"",
                    "file": "src/app/shared/components/cards/snapshot-display-card/snapshot-display-card.component.ts",
                    "description": "",
                    "kind": 168
                },
                {
                    "name": "TypeOfDate",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"Years\" | \"Months\" | \"Days\"",
                    "file": "src/app/shared/components/cards/snapshot-display-card/snapshot-display-card.component.ts",
                    "description": "",
                    "kind": 168
                },
                {
                    "name": "TypeOfSnapshot",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"date\" | \"percentage\" | \"digit\" | \"tag\" | \"time\"",
                    "file": "src/app/shared/components/cards/snapshot-display-card/snapshot-display-card.component.ts",
                    "description": "",
                    "kind": 168
                }
            ],
            "src/app/shared/components/cards/creditcard-card/creditcard-card.component.ts": [
                {
                    "name": "Status",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"excellent\" | \"good\" | \"okay\" | \"poor\"",
                    "file": "src/app/shared/components/cards/creditcard-card/creditcard-card.component.ts",
                    "description": "",
                    "kind": 168
                }
            ],
            "src/app/shared/components/cards/loan-card/loan-card.component.ts": [
                {
                    "name": "Status",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"excellent\" | \"good\" | \"okay\" | \"poor\"",
                    "file": "src/app/shared/components/cards/loan-card/loan-card.component.ts",
                    "description": "",
                    "kind": 168
                }
            ],
            "src/app/store/app-data/app-data.model.ts": [
                {
                    "name": "typename",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/app/store/app-data/app-data.model.ts",
                    "description": "",
                    "kind": 177
                }
            ],
            "src/app/store/onboarding/onboarding.model.ts": [
                {
                    "name": "typename",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/app/store/onboarding/onboarding.model.ts",
                    "description": "",
                    "kind": 177
                }
            ],
            "src/app/store/user/user.model.ts": [
                {
                    "name": "typename",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/app/store/user/user.model.ts",
                    "description": "",
                    "kind": 177
                }
            ]
        }
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "src/app/app-routing.module.ts",
                "module": "AppRoutingModule",
                "kind": "module"
            },
            {
                "name": "AuthenticationRoutes",
                "filename": "src/app/layouts/authentication/authentication.routing.ts",
                "module": "AuthenticationRoutingModule",
                "children": [
                    {
                        "path": "",
                        "component": "AuthenticationComponent",
                        "children": [
                            {
                                "path": "signup",
                                "component": "SignupComponent"
                            },
                            {
                                "path": "signin",
                                "component": "SigninComponent"
                            },
                            {
                                "path": "forgot",
                                "component": "SigninForgotComponent"
                            },
                            {
                                "path": "redirect",
                                "component": "SigninRedirectComponent"
                            },
                            {
                                "path": "thankyou",
                                "component": "SignupThankyouComponent"
                            },
                            {
                                "path": "name",
                                "component": "SignupKnowyouComponent"
                            },
                            {
                                "path": "error",
                                "component": "SignupErrorComponent"
                            },
                            {
                                "path": "invalid",
                                "component": "SignupErrorValidationComponent"
                            },
                            {
                                "path": "resend",
                                "component": "SignupResendComponent"
                            },
                            {
                                "path": "",
                                "redirectTo": "auth/signup",
                                "pathMatch": "full"
                            }
                        ]
                    }
                ],
                "kind": "module"
            },
            {
                "name": "OnboardingRoutes",
                "filename": "src/app/layouts/onboarding/onboarding.routing.ts",
                "module": "OnboardingRoutingModule",
                "children": [
                    {
                        "path": "",
                        "component": "OnboardingComponent",
                        "canActivate": [
                            "AuthGuard"
                        ],
                        "children": [
                            {
                                "path": "name",
                                "component": "KycWelcomeComponent",
                                "canActivate": [
                                    "AuthGuard"
                                ]
                            },
                            {
                                "path": "address",
                                "component": "KycAddressComponent",
                                "canActivate": [
                                    "AuthGuard"
                                ]
                            },
                            {
                                "path": "identity",
                                "component": "KycSsnComponent",
                                "canActivate": [
                                    "AuthGuard"
                                ]
                            },
                            {
                                "path": "identityfull",
                                "component": "KycSsnFullComponent",
                                "canActivate": [
                                    "AuthGuard"
                                ]
                            },
                            {
                                "path": "verify",
                                "component": "KycPhonenumberComponent",
                                "canActivate": [
                                    "AuthGuard"
                                ]
                            },
                            {
                                "path": "code",
                                "component": "KycIdverificationComponent",
                                "canActivate": [
                                    "AuthGuard"
                                ]
                            },
                            {
                                "path": "kba",
                                "component": "KycKbaquestionsComponent",
                                "canActivate": [
                                    "AuthGuard"
                                ]
                            },
                            {
                                "path": "congratulations",
                                "component": "KycCongratulationsComponent",
                                "canActivate": [
                                    "AuthGuard"
                                ]
                            },
                            {
                                "path": "returning",
                                "component": "KycWelcomebackComponent",
                                "canActivate": [
                                    "AuthGuard"
                                ]
                            },
                            {
                                "path": "error",
                                "component": "KycErrorComponent",
                                "canActivate": [
                                    "AuthGuard"
                                ]
                            }
                        ]
                    }
                ],
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 1,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/app.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "isLocalhost",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "updatedAwsConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layouts/authentication/authentication.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AuthenticationComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/layouts/authentication/authentication.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "components",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layouts/compliance/compliance.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ComplianceComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/layouts/compliance/compliance.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "components",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layouts/dashboard/dashboard.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DashboardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/layouts/dashboard/dashboard.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "components",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layouts/onboarding/onboarding.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OnboardingComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/layouts/onboarding/onboarding.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "components",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layouts/onboarding/onboarding.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "OnboardingService",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FilledClosingAlertComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IFilledClosingAlertConfig",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "FilledClosingAlertPipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.pipe.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "sizeSpecificClass",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Accent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "accentConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ExtraLarge",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "extraLargeConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ExtraSmall",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "extraSmallConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "largeConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "primaryConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "smallConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/auth/sign-in/sign-in.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SignInComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/auth/sign-up/sign-up.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SignUpComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/auth/sign-up/sign-up.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "FormFields",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/badges/filled-onlytext-badge/filled-onlytext-badge.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FilledOnlytextBadgeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/badges/filled-onlytext-badge/filled-onlytext-badge.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IFilledOnlytextBadgeConfig",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/badges/filled-onlytext-badge/filled-onlytext-badge.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "FilledOnlytextBadgePipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/badges/filled-onlytext-badge/filled-onlytext-badge.pipe.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "sizeSpecificClass",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/badges/filled-onlytext-badge/filled-onlytext-badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Accent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/badges/filled-onlytext-badge/filled-onlytext-badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "accentConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/badges/filled-onlytext-badge/filled-onlytext-badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/badges/filled-onlytext-badge/filled-onlytext-badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/badges/filled-onlytext-badge/filled-onlytext-badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "primaryConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/badges/filled-onlytext-badge/filled-onlytext-badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/badges/filled-onlytext-badge/filled-onlytext-badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "secondaryConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/badges/filled-onlytext-badge/filled-onlytext-badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Strong",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/badges/filled-onlytext-badge/filled-onlytext-badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "strongConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/badges/filled-onlytext-badge/filled-onlytext-badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/buttons/facebook-onlytextsignin-button/facebook-onlytextsignin-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FacebookOnlytextsigninButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/buttons/filled-onlytext-button/filled-onlytext-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FilledOnlytextButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/buttons/filled-onlytext-button/filled-onlytext-button.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IFilledOnlyTextButtonConfig",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/buttons/filled-onlytext-button/filled-onlytext-button.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "FilledOnlytextButtonPipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/buttons/filled-onlytext-button/filled-onlytext-button.pipe.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "sizeSpecificClass",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/buttons/filled-onlytext-button/filled-onlytext-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Accent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/buttons/filled-onlytext-button/filled-onlytext-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "accentConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/buttons/filled-onlytext-button/filled-onlytext-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/buttons/filled-onlytext-button/filled-onlytext-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/buttons/filled-onlytext-button/filled-onlytext-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "largeConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/buttons/filled-onlytext-button/filled-onlytext-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/buttons/filled-onlytext-button/filled-onlytext-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "primaryConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/buttons/filled-onlytext-button/filled-onlytext-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/buttons/filled-onlytext-button/filled-onlytext-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "secondaryConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/buttons/filled-onlytext-button/filled-onlytext-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/buttons/filled-onlytext-button/filled-onlytext-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "smallConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/buttons/filled-onlytext-button/filled-onlytext-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/buttons/google-iconsignin-button/google-iconsignin-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GoogleIconsigninButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/buttons/links-onlytext-button/links-onlytext-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LinksOnlytextButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/buttons/links-onlytext-button/links-onlytext-button.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ILinksOnlyTextButtonConfig",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/buttons/links-onlytext-button/links-onlytext-button.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "LinksOnlytextButtonPipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/buttons/links-onlytext-button/links-onlytext-button.pipe.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "sizeSpecificClass",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/buttons/links-onlytext-button/links-onlytext-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Accent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/buttons/links-onlytext-button/links-onlytext-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "accentConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/buttons/links-onlytext-button/links-onlytext-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/buttons/links-onlytext-button/links-onlytext-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/buttons/links-onlytext-button/links-onlytext-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "largeConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/buttons/links-onlytext-button/links-onlytext-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/buttons/links-onlytext-button/links-onlytext-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "primaryConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/buttons/links-onlytext-button/links-onlytext-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/buttons/links-onlytext-button/links-onlytext-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "smallConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/buttons/links-onlytext-button/links-onlytext-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/buttons/outline-onlytext-button/outline-onlytext-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OutlineOnlytextButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/buttons/outline-onlytext-button/outline-onlytext-button.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IOutlineOnlyTextButtonConfig",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/buttons/outline-onlytext-button/outline-onlytext-button.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "OutlineOnlytextButtonPipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/buttons/outline-onlytext-button/outline-onlytext-button.pipe.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "sizeSpecificClass",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/buttons/outline-onlytext-button/outline-onlytext-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/buttons/outline-onlytext-button/outline-onlytext-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/buttons/outline-onlytext-button/outline-onlytext-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "largeConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/buttons/outline-onlytext-button/outline-onlytext-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/buttons/outline-onlytext-button/outline-onlytext-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "primaryConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/buttons/outline-onlytext-button/outline-onlytext-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/buttons/outline-onlytext-button/outline-onlytext-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "smallConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/buttons/outline-onlytext-button/outline-onlytext-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/buttons/viewdetail-button/viewdetail-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ViewdetailButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/buttons/viewdetail-button/viewdetail-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/buttons/viewdetail-button/viewdetail-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/cards/credit-builder-card/credit-builder-card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CreditBuilderCardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/cards/credit-builder-card/credit-builder-card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/cards/credit-builder-card/credit-builder-card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/cards/credit-report-card/credit-report-card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CreditReportCardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/cards/credit-report-card/credit-report-card.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ICreditReportCardInputs",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/cards/credit-report-card/credit-report-card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/cards/credit-report-card/credit-report-card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/cards/creditcard-card/account-status.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "AccountStatusPipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/cards/creditcard-card/account-status.pipe.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "statuses",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/cards/creditcard-card/creditcard-card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CreditcardCardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/cards/creditcard-card/creditcard-card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/cards/creditcard-card/creditcard-card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/cards/loan-card/loan-card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LoanCardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/cards/loan-card/loan-card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/cards/loan-card/loan-card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/cards/negative-account-card/negative-account-card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NegativeAccountCardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/24",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/cards/negative-account-card/negative-account-card.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "INegativeAccountCardInputs",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/cards/negative-account-card/negative-account-card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/cards/negative-account-card/negative-account-card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/cards/snapshot-display-card/snapshot-display-card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SnapshotDisplayCardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/cards/snapshot-display-card/snapshot-display-card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/cards/snapshot-display-card/snapshot-display-card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Digit",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/cards/snapshot-display-card/snapshot-display-card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Percentage",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/cards/snapshot-display-card/snapshot-display-card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Tag",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/cards/snapshot-display-card/snapshot-display-card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/cards/snapshot-display-card/snapshot-display-card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Time",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/cards/snapshot-display-card/snapshot-label.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "SnapshotLabelPipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/cards/snapshot-display-card/snapshot-label.pipe.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "enumStrNameOfLabel",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/cards/snapshot-display-card/snapshot-status.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "SnapshotStatusPipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/cards/snapshot-display-card/snapshot-status.pipe.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "enumStrColorCLassIndicator",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/dropdowns/popdowns/index-dropdown/index-dropdown.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "IndexDropdownComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/dropdowns/popdowns/menu-dropdown/menu-dropdown.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MenuDropdownComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/dropdowns/popdowns/menu-dropdown/menu-dropdown.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IMenuDropdown",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/dropdowns/popdowns/menu-dropdown/menu-dropdown.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ISubmenuItem",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/dropdowns/popdowns/notification-dropdown/notification-dropdown.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NotificationDropdownComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/dropdowns/popdowns/notification-dropdown/notification-dropdown.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/dropdowns/popdowns/notification-dropdown/notification-dropdown.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/dropdowns/popdowns/pages-dropdown/pages-dropdown.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PagesDropdownComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/dropdowns/popdowns/table-dropdown/table-dropdown.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TableDropdownComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/dropdowns/popdowns/table-dropdown/table-dropdown.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/dropdowns/popdowns/table-dropdown/table-dropdown.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/dropdowns/popdowns/user-dropdown/user-dropdown.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UserDropdownComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/dropdowns/popdowns/user-dropdown/user-dropdown.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/dropdowns/popdowns/user-dropdown/user-dropdown.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/dropdowns/selects/outline-onlytext-select/outline-onlytext-select.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OutlineOnlytextSelectComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/dropdowns/selects/outline-onlytext-select/outline-onlytext-select.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IOutlineOnlyTextItem",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/dropdowns/selects/outline-onlytext-select/outline-onlytext-select.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/dropdowns/selects/outline-onlytext-select/outline-onlytext-select.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "items",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/dropdowns/selects/outline-onlytext-select/outline-onlytext-select.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/footers/footer-admin/footer-admin.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FooterAdminComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/footers/footer-small/footer-small.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FooterSmallComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/footers/footer/footer.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FooterComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/forms/base-form/base-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BaseFormComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/forms/kbaquestions-form/kbaquestions-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "KbaquestionsFormComponent",
                "coveragePercent": 13,
                "coverageCount": "3/23",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/forms/kbaquestions-form/kbaquestions-form.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/forms/kbaquestions-form/kbaquestions-form.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "kbas",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/forms/kbaquestions-form/kbaquestions-form.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/forms/outline-address-form/outline-address-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OutlineAddressFormComponent",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/forms/outline-address-form/outline-address-form.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "states",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/forms/outline-address-form/outline-address-form.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/forms/outline-address-form/outline-address-form.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/forms/outline-name-form/outline-name-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OutlineNameFormComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/forms/outline-name-form/outline-name-form.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/forms/outline-name-form/outline-name-form.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/forms/outline-namedob-form/outline-namedob-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OutlineNamedobFormComponent",
                "coveragePercent": 0,
                "coverageCount": "0/19",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/forms/outline-namedob-form/outline-namedob-form.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "months",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/forms/outline-onecolumn-form/outline-onecolumn-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OutlineOnecolumnFormComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/forms/outline-onecolumn-form/outline-onecolumn-form.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/forms/outline-onecolumn-form/outline-onecolumn-form.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/forms/outline-phone-form/outline-phone-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OutlinePhoneFormComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/forms/outline-phone-form/outline-phone-form.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/forms/outline-phone-form/outline-phone-form.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/forms/outline-verificationcode-form/outline-verificationcode-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OutlineVerificationcodeFormComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/forms/outline-verificationcode-form/outline-verificationcode-form.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/forms/outline-verificationcode-form/outline-verificationcode-form.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/forms/select-dob-form/select-dob-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SelectDobFormComponent",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/forms/select-dob-form/select-dob-form.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "months",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/forms/select-dob-form/select-dob-form.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/forms/select-dob-form/select-dob-form.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/forms/simple-signup-form/simple-signup-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SimpleSignupFormComponent",
                "coveragePercent": 22,
                "coverageCount": "2/9",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/forms/simple-signup-form/simple-signup-form.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/forms/simple-signup-form/simple-signup-form.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/forms/ssn-full-form/ssn-full-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SsnFullFormComponent",
                "coveragePercent": 14,
                "coverageCount": "2/14",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/forms/ssn-full-form/ssn-full-form.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/forms/ssn-full-form/ssn-full-form.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/forms/ssn-lastfour-form/ssn-lastfour-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SsnLastfourFormComponent",
                "coveragePercent": 14,
                "coverageCount": "2/14",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/forms/ssn-lastfour-form/ssn-lastfour-form.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/forms/ssn-lastfour-form/ssn-lastfour-form.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/graphics/credit-report-graphic/credit-report-graphic.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CreditReportGraphicComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/graphics/credit-report-graphic/credit-report-graphic.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "CreditReportGraphicPipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/graphics/credit-report-graphic/credit-report-graphic.pipe.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "enumStrColorCLassIndicator",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/inputs/hidden-asterisk-input/hidden-asterisk-input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HiddenAsteriskInputComponent",
                "coveragePercent": 18,
                "coverageCount": "3/16",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/inputs/hidden-asterisk-input/hidden-asterisk-input.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "HiddenAsteriskInputDirective",
                "coveragePercent": 10,
                "coverageCount": "1/10",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/inputs/hidden-asterisk-input/hidden-asterisk-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/inputs/hidden-asterisk-input/hidden-asterisk-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/inputs/hidden-asterisk-input/hidden-asterisk-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/inputs/hidden-asterisk-input/hidden-asterisk-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/inputs/kba-multiplechoice-input/kba-multiplechoice-input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "KbaMultiplechoiceInputComponent",
                "coveragePercent": 6,
                "coverageCount": "1/15",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/inputs/kba-multiplechoice-input/kba-multiplechoice-input.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IKbaMultipleChoiceConfig",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/inputs/kba-multiplechoice-input/kba-multiplechoice-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/inputs/kba-multiplechoice-input/kba-multiplechoice-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "question",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/inputs/kba-multiplechoice-input/kba-multiplechoice-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/inputs/outline-input/outline-input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OutlineInputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/inputs/outline-input/outline-input.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IOutlineInputeConfig",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/inputs/outline-input/outline-input.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "OutlineInputPipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/inputs/outline-input/outline-input.pipe.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "sizeSpecificClass",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/inputs/outline-input/outline-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/inputs/outline-input/outline-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/inputs/outline-input/outline-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "largeConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/inputs/outline-input/outline-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/inputs/outline-input/outline-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "smallConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/inputs/outline-input/outline-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/inputs/outline-select-input/outline-select-input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OutlineSelectInputComponent",
                "coveragePercent": 11,
                "coverageCount": "2/17",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/inputs/outline-select-input/outline-select-input.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IOutlineSelectInputConfig",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/inputs/outline-select-input/outline-select-input.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "OutlineSelectInputPipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/inputs/outline-select-input/outline-select-input.pipe.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "sizeSpecificClass",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/inputs/outline-select-input/outline-select-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/inputs/outline-select-input/outline-select-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/inputs/outline-select-input/outline-select-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "largeConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/inputs/outline-select-input/outline-select-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/inputs/outline-select-input/outline-select-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "smallConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/inputs/outline-select-input/outline-select-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/interstitials/spinner/spinner.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SpinnerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/interstitials/spinner/spinner.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/interstitials/spinner/spinner.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/modals/base-modal-regular/base-modal-regular.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BaseModalRegularComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/modals/base-modal-regular/base-modal-regular.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IBaseModalRegularConfig",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/modals/base-modal-regular/base-modal-regular.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "config",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/modals/base-modal-regular/base-modal-regular.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/modals/base-modal-regular/base-modal-regular.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/modals/base-modal-small/base-modal-small.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BaseModalSmallComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/modals/base-modal-small/base-modal-small.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IBaseModalSmallConfig",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/modals/base-modal-small/base-modal-small.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "config",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/modals/base-modal-small/base-modal-small.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/modals/base-modal-small/base-modal-small.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/navbars/admin-navbar/admin-navbar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AdminNavbarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/navbars/auth-navbar/auth-navbar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AuthNavbarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/navbars/dashboard-navbar/dashboard-navbar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DashboardNavbarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/navbars/dashboard-navbar/dashboard-navbar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/navbars/dashboard-navbar/dashboard-navbar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/navbars/index-navbar/index-navbar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "IndexNavbarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/paginations/outline-prevnext-pagination/outline-prevnext-pagination.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OutlinePrevnextPaginationComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/paginations/outline-prevnext-pagination/outline-prevnext-pagination.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/paginations/outline-prevnext-pagination/outline-prevnext-pagination.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/progressbars/filled-checktext-progressbar/filled-checktext-progressbar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FilledChecktextProgressbarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/progressbars/filled-checktext-progressbar/filled-checktext-progressbar.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IFilledChecktextProgressbarConfig",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/progressbars/filled-checktext-progressbar/filled-checktext-progressbar.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IProgressStep",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/progressbars/filled-checktext-progressbar/filled-checktext-progressbar.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "FilledChecktextProgressbarPipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/progressbars/filled-checktext-progressbar/filled-checktext-progressbar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "config",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/progressbars/filled-checktext-progressbar/filled-checktext-progressbar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/progressbars/filled-checktext-progressbar/filled-checktext-progressbar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "stack",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/progressbars/filled-checktext-progressbar/filled-checktext-progressbar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "steps",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/progressbars/filled-checktext-progressbar/filled-checktext-progressbar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/shared-components.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "components",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/shared-components.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "directives",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/shared-components.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "pipes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/sidebar/sidebar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SidebarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/tabs/filled-onlytext-tabs/filled-onlytext-tabs.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FilledOnlytextTabsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/tabs/filled-onlytext-tabs/filled-onlytext-tabs.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/tabs/filled-onlytext-tabs/filled-onlytext-tabs.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/tabs/navigation-tabs/navigation-tabs.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NavigationTabsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/tabs/navigation-tabs/navigation-tabs.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/tabs/navigation-tabs/navigation-tabs.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/tooltips/outline-tooltip/outline-tooltip.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OutlineTooltipComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/tooltips/outline-tooltip/outline-tooltip.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "OutlineTooltipDirective",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/tooltips/outline-tooltip/outline-tooltip.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Bottom",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/tooltips/outline-tooltip/outline-tooltip.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/tooltips/outline-tooltip/outline-tooltip.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Left",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/tooltips/outline-tooltip/outline-tooltip.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Right",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/tooltips/outline-tooltip/outline-tooltip.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/tooltips/outline-tooltip/outline-tooltip.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Top",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/tradelines/tradeline-detail-row/tradeline-detail-row.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TradelineDetailRowComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/tradelines/tradeline-details/parse-tradeline-details.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "ParseTradelineDetailsPipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/tradelines/tradeline-details/parse-tradeline-details.pipe.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "labelMapping",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/tradelines/tradeline-details/tradeline-details.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TradelineDetailsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/tradelines/tradeline-details/tradeline-details.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ICollectionsTradelineDetails",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/tradelines/tradeline-details/tradeline-details.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IInstallmentTradelineDetails",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/tradelines/tradeline-details/tradeline-details.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IRevolvingTradelineDetails",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/tradelines/tradeline-details/tradeline-details.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ITradelineDetailsConfig",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/tradelines/tradeline-details/tradeline-details.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "address",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/tradelines/tradeline-details/tradeline-details.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "collections",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/tradelines/tradeline-details/tradeline-details.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Collections",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/tradelines/tradeline-details/tradeline-details.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "installment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/tradelines/tradeline-details/tradeline-details.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Installment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/tradelines/tradeline-details/tradeline-details.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "remarks",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/tradelines/tradeline-details/tradeline-details.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "revolving",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/tradelines/tradeline-details/tradeline-details.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Revolving",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/tradelines/tradeline-details/tradeline-details.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/tradelines/tradeline-metrics/tradeline-metrics.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TradelineMetricsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/tradelines/tradeline-payment-history/tradeline-payment-history.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TradelinePaymentHistoryComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/tradelines/tradeline-payment-history/tradeline-payment-history.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "months",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/tradelines/tradeline-payment-history/tradeline-payment-history.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/tradelines/tradeline-payment-history/tradeline-payment-history.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/tradelines/tradeline-payment-icon/tradeline-payment-icon.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TradelinePaymentIconComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/tradelines/tradeline-payment-icon/tradeline-payment-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Collection",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/tradelines/tradeline-payment-icon/tradeline-payment-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Current",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/tradelines/tradeline-payment-icon/tradeline-payment-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Late",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/tradelines/tradeline-payment-icon/tradeline-payment-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Other",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/tradelines/tradeline-payment-icon/tradeline-payment-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/tradelines/tradeline-payment-icon/tradeline-payment-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Unknown",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/tradelines/tradeline-payments/tradeline-payments.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TradelinePaymentsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/tradelines/tradeline-payments/tradeline-payments.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "address",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/tradelines/tradeline-payments/tradeline-payments.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/tradelines/tradeline-payments/tradeline-payments.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "remarks",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/tradelines/tradeline-payments/tradeline-payments.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/tradelines/tradeline-remarks/tradeline-remarks.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TradelineRemarksComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/tradelines/tradeline-summary/tradeline-summary.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TradelineSummaryComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/tradelines/tradeline-summary/tradeline-summary.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/tradelines/tradeline-summary/tradeline-summary.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/typography/typography-accent-bg-cooltext.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/typography/typography-accent-bg-cooltext.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/typography/typography-accent-bg.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/typography/typography-accent-bg.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/typography/typography-primary-bg-cooltext.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/typography/typography-primary-bg-cooltext.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/typography/typography-primary-bg.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/typography/typography-primary-bg.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/typography/typography-transparent-bg.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/typography/typography-transparent-bg.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/data/credit-report.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CREDIT_REPORT_GROUPS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/data/negative-reason-codes.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "NEGATIVE_REASON_CODES",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/data/pay-status-codes.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "BRAVE_ACCOUNT_TYPE",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/data/pay-status-codes.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "COLLECTION_PAY_STATUS_CODES",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/data/pay-status-codes.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LATE_PAY_STATUS_CODES",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/data/pay-status-codes.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "NEGATIVE_PAY_STATUS_CODES",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/data/pay-status-codes.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ONTIME_PAY_STATUS_CODES",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/data/pay-status-codes.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "OTHER_PAY_STATUS_CODES",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/data/pay-status-codes.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "PAY_STATUS_CODES",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/data/pay-status-codes.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "POSITIVE_PAY_STATUS_CODES",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/data/pay-status-codes.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "UNKNOWN_PAY_STATUS_CODES",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/data/positive-reason-codes.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "POSITIVE_REASON_CODES",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/guards/auth.guard.ts",
                "type": "guard",
                "linktype": "guard",
                "name": "AuthGuard",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/guards/unauth.guard.ts",
                "type": "guard",
                "linktype": "guard",
                "name": "UnauthGuard",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/guards/unconfirmed.guard.ts",
                "type": "guard",
                "linktype": "guard",
                "name": "UnconfirmedGuard",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/interfaces/common-tu.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ICreditScoreAttributes",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/interfaces/common-tu.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ICreditScoreFactor",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/interfaces/common-tu.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ISource",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/interfaces/enroll-rquest.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IEnrollRequest",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/interfaces/enroll.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IEnroll",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/interfaces/enroll.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IEnrollMsg",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/interfaces/enroll.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IEnrollResponse",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/interfaces/enroll.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IEnrollResult",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/interfaces/enroll.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IEnrollServiceProductResponse",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/interfaces/merge-report.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IBorrower",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/interfaces/merge-report.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IGrantedTrade",
                "coveragePercent": 0,
                "coverageCount": "0/18",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/interfaces/merge-report.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IInquiryPartition",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/interfaces/merge-report.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IMergeReport",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/interfaces/merge-report.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IMonthyPayStatusItem",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/interfaces/merge-report.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IPayStatusHistory",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/interfaces/merge-report.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ISummary",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/interfaces/merge-report.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ITradeline",
                "coveragePercent": 0,
                "coverageCount": "0/23",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/interfaces/merge-report.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ITradelineCollection",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/interfaces/merge-report.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ITradeLinePartition",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/interfaces/merge-report.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ITradelineRemark",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/interfaces/merge-report.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ITrueLinkCreditReportType",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/interfaces/merge-report.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IUnparsedCreditReport",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/interfaces/tu-kba-questions.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ITransunionBAAnsweredQuestion",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/interfaces/tu-kba-questions.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ITransunionKBAAnswer",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/interfaces/tu-kba-questions.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ITransunionKBAChallengeAnswer",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/interfaces/tu-kba-questions.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ITransunionKBAQuestion",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/interfaces/tu-kba-questions.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ITransunionKBAQuestions",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/interfaces/vantage-score.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ICreditScoreType",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/interfaces/vantage-score.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IVantageScore",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/interfaces/verify-authentication-answers.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IVerifyAuthenticationAnswer",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/interfaces/verify-authentication-answers.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IVerifyAuthenticationAnswersArray",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/interfaces/verify-authentication-questions.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IVerifyAuthenticationQuestions",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/interfaces/verify-authentication-questions.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IVerifyAuthenticationQuestionsMsg",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/interfaces/verify-authentication-response.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IVerifyAuthenticationResponseSuccess",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/mocks/parsed-merge-report-response.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "mockParsedMergeReport",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/mocks/parsed-vantage-score-response.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "mockParseVantageScore",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/models/get-authorization-questions.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IGetAuthenticationQuestionsMsg",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/models/get-authorization-questions.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IGetAuthenticationQuestionsResponseSuccess",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/models/indicative-enrichment.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IIndicativeEnrichmentMsg",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/models/indicative-enrichment.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IIndicativeEnrichmentResponseSuccess",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/services/auth/auth.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "AuthService",
                "coveragePercent": 38,
                "coverageCount": "7/18",
                "status": "medium"
            },
            {
                "filePath": "src/app/shared/services/auth/auth.service.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "NewUser",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/services/auth/guest.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "GuestService",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/services/auth/iam.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "IamService",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/services/aws/api.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "APIService",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/services/aws/api.service.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "SubscriptionResponse",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/services/creditreport/creditreport.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "CreditreportService",
                "coveragePercent": 33,
                "coverageCount": "6/18",
                "status": "medium"
            },
            {
                "filePath": "src/app/shared/services/creditreport/creditreport.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "parserOptions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/services/dashboard/dashboard.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "DashboardService",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/services/kyc/kyc.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "KycService",
                "coveragePercent": 90,
                "coverageCount": "27/30",
                "status": "very-good"
            },
            {
                "filePath": "src/app/shared/services/shared-services.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "services",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/services/sync/sync.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "SyncService",
                "coveragePercent": 57,
                "coverageCount": "4/7",
                "status": "good"
            },
            {
                "filePath": "src/app/shared/services/transunion/transunion.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "TransunionService",
                "coveragePercent": 66,
                "coverageCount": "4/6",
                "status": "good"
            },
            {
                "filePath": "src/app/shared/services/transunion/transunion.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "monthMap",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/utils/utils.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "_deleteKeyNestedObject",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/utils/utils.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "_updateNestedRecurse",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/utils/utils.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "deleteKeyNestedObject",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/shared/utils/utils.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "returnNestedObject",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/shared/utils/utils.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "updateNestedObject",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/shared/validators/email.validator.ts",
                "type": "function",
                "linksubtype": "function",
                "name": "BraveEmailValidator",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/agencies/agencies.actions.ts",
                "type": "class",
                "linktype": "classe",
                "name": "Add",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/store/agencies/agencies.actions.ts",
                "type": "class",
                "linktype": "classe",
                "name": "Delete",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/store/agencies/agencies.actions.ts",
                "type": "class",
                "linktype": "classe",
                "name": "Edit",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/store/agencies/agencies.actions.ts",
                "type": "class",
                "linktype": "classe",
                "name": "EditTransunionAuthDetails",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/store/agencies/agencies.actions.ts",
                "type": "class",
                "linktype": "classe",
                "name": "EditTransunionQuestions",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/store/agencies/agencies.model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "AgenciesStateModel",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/store/agencies/agencies.selectors.ts",
                "type": "class",
                "linktype": "classe",
                "name": "AgenciesSelectors",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/store/agencies/agencies.state.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "AgenciesState",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/store/app-data/app-data.actions.ts",
                "type": "class",
                "linktype": "classe",
                "name": "Add",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/store/app-data/app-data.actions.ts",
                "type": "class",
                "linktype": "classe",
                "name": "Delete",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/store/app-data/app-data.actions.ts",
                "type": "class",
                "linktype": "classe",
                "name": "Edit",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/store/app-data/app-data.actions.ts",
                "type": "class",
                "linktype": "classe",
                "name": "Fetch",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/store/app-data/app-data.model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "AppDataStateModel",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/store/app-data/app-data.selectors.ts",
                "type": "class",
                "linktype": "classe",
                "name": "AppDataSelectors",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/store/app-data/app-data.state.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "AppDataState",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/store/index.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "braveState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/onboarding/onboarding.actions.ts",
                "type": "class",
                "linktype": "classe",
                "name": "Add",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/store/onboarding/onboarding.actions.ts",
                "type": "class",
                "linktype": "classe",
                "name": "Delete",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/store/onboarding/onboarding.actions.ts",
                "type": "class",
                "linktype": "classe",
                "name": "Edit",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/store/onboarding/onboarding.actions.ts",
                "type": "class",
                "linktype": "classe",
                "name": "UpdateLastActive",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/store/onboarding/onboarding.actions.ts",
                "type": "class",
                "linktype": "classe",
                "name": "UpdateLastComplete",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/store/onboarding/onboarding.model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "OnboardingStateModel",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/store/onboarding/onboarding.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "OnboardingStep",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/onboarding/onboarding.selectors.ts",
                "type": "class",
                "linktype": "classe",
                "name": "OnboardingSelectors",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/store/onboarding/onboarding.state.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "OnboardingState",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/store/preferences/preferences.actions.ts",
                "type": "class",
                "linktype": "classe",
                "name": "Add",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/store/preferences/preferences.actions.ts",
                "type": "class",
                "linktype": "classe",
                "name": "Delete",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/store/preferences/preferences.actions.ts",
                "type": "class",
                "linktype": "classe",
                "name": "Edit",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/store/preferences/preferences.model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "PreferencesStateModel",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/store/preferences/preferences.selectors.ts",
                "type": "class",
                "linktype": "classe",
                "name": "PreferencesSelectors",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/store/preferences/preferences.state.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "PreferencesState",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/store/user/user.actions.ts",
                "type": "class",
                "linktype": "classe",
                "name": "Add",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/store/user/user.actions.ts",
                "type": "class",
                "linktype": "classe",
                "name": "Delete",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/store/user/user.actions.ts",
                "type": "class",
                "linktype": "classe",
                "name": "Edit",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/store/user/user.actions.ts",
                "type": "class",
                "linktype": "classe",
                "name": "UpdateAttributes",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/store/user/user.model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "UserStateModel",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/store/user/user.selectors.ts",
                "type": "class",
                "linktype": "classe",
                "name": "UserSelectors",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/store/user/user.state.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "UserState",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/testing/dom-helper.ts",
                "type": "class",
                "linktype": "classe",
                "name": "DOMHelper",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/app/testing/test-helper.ts",
                "type": "class",
                "linktype": "classe",
                "name": "Helper",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/views/compliance-privacy/compliance-privacy.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CompliancePrivacyComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/views/compliance-tos/compliance-tos.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ComplianceTosComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/views/credit-report/credit-report-pure/credit-report-pure.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CreditReportPureComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/views/credit-report/credit-report-pure/credit-report-pure.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ICreditReportCardGroup",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/views/credit-report/credit-report-pure/credit-report-pure.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "creditReports",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/credit-report/credit-report-pure/credit-report-pure.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/credit-report/credit-report-pure/credit-report-pure.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "preferences",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/credit-report/credit-report-pure/credit-report-pure.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/credit-report/credit-report/constants.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "mockCreditReports",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/credit-report/credit-report/credit-report.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CreditReportComponent",
                "coveragePercent": 16,
                "coverageCount": "1/6",
                "status": "low"
            },
            {
                "filePath": "src/app/views/credit-report/credit-report/credit-report.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "CreditReportPipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/dashboard-init/dashboard-init.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DashboardInitComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "src/app/views/dashboard-init/dashboard-init.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/dashboard-init/dashboard-init.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/kyc-address/kyc-address-pure/kyc-address-pure.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "KycAddressPureComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/views/kyc-address/kyc-address-pure/kyc-address-pure.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/kyc-address/kyc-address-pure/kyc-address-pure.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/kyc-address/kyc-address/kyc-address.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "KycAddressComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "src/app/views/kyc-address/kyc-address/kyc-address.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "address",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/kyc-base/kyc-base.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "KycBaseComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/views/kyc-base/kyc-base.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "FlatForm",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/kyc-congratulations/kyc-congratulations-pure/kyc-congratulations-pure.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "KycCongratulationsPureComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/views/kyc-congratulations/kyc-congratulations-pure/kyc-congratulations-pure.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/kyc-congratulations/kyc-congratulations-pure/kyc-congratulations-pure.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/kyc-congratulations/kyc-congratulations/kyc-congratulations.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "KycCongratulationsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/views/kyc-error/kyc-error.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "KycErrorComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/views/kyc-idverification/kyc-idverification-pure/kyc-idverification-pure.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "KycIdverificationPureComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/views/kyc-idverification/kyc-idverification-pure/kyc-idverification-pure.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/kyc-idverification/kyc-idverification-pure/kyc-idverification-pure.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/kyc-idverification/kyc-idverification/kyc-idverification.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "KycIdverificationComponent",
                "coveragePercent": 25,
                "coverageCount": "9/35",
                "status": "low"
            },
            {
                "filePath": "src/app/views/kyc-idverification/kyc-idverification/kyc-idverification.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "codeMap",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/kyc-idverification/kyc-idverification/kyc-idverification.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "mapEnrollResponse",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/kyc-kbaquestions/example-questions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "formattedQuestions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/kyc-kbaquestions/kyc-kbaquestions-pure/kyc-kbaquestions-pure.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "KycKbaquestionsPureComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/views/kyc-kbaquestions/kyc-kbaquestions-pure/kyc-kbaquestions-pure.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/kyc-kbaquestions/kyc-kbaquestions-pure/kyc-kbaquestions-pure.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "kbas",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/kyc-kbaquestions/kyc-kbaquestions-pure/kyc-kbaquestions-pure.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/kyc-kbaquestions/kyc-kbaquestions/kyc-kbaquestions.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "KycKbaquestionsComponent",
                "coveragePercent": 20,
                "coverageCount": "3/15",
                "status": "low"
            },
            {
                "filePath": "src/app/views/kyc-kbaquestions/kyc-kbaquestions/kyc-kbaquestions.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "KycKbaquestionsPipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/kyc-phonenumber/kyc-phonenumber-pure/kyc-phonenumber-pure.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "KycPhonenumberPureComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/views/kyc-phonenumber/kyc-phonenumber-pure/kyc-phonenumber-pure.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/kyc-phonenumber/kyc-phonenumber-pure/kyc-phonenumber-pure.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/kyc-phonenumber/kyc-phonenumber/kyc-phonenumber.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "KycPhonenumberComponent",
                "coveragePercent": 33,
                "coverageCount": "11/33",
                "status": "medium"
            },
            {
                "filePath": "src/app/views/kyc-phonenumber/kyc-phonenumber/kyc-phonenumber.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "phoneMap",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/kyc-ssn-full/kyc-ssn-full-pure/kyc-ssn-full-pure.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "KycSsnFullPureComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/views/kyc-ssn-full/kyc-ssn-full-pure/kyc-ssn-full-pure.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/kyc-ssn-full/kyc-ssn-full-pure/kyc-ssn-full-pure.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/kyc-ssn-full/kyc-ssn-full/kyc-ssn-full.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "KycSsnFullComponent",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "src/app/views/kyc-ssn-full/kyc-ssn-full/kyc-ssn-full.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ssn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/kyc-ssn/kyc-ssn-pure/kyc-ssn-pure.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "KycSsnPureComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/views/kyc-ssn/kyc-ssn-pure/kyc-ssn-pure.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/kyc-ssn/kyc-ssn-pure/kyc-ssn-pure.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/kyc-ssn/kyc-ssn/kyc-ssn.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "KycSsnComponent",
                "coveragePercent": 23,
                "coverageCount": "3/13",
                "status": "low"
            },
            {
                "filePath": "src/app/views/kyc-ssn/kyc-ssn/kyc-ssn.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ssnMap",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/kyc-welcome/kyc-welcome-pure/kyc-welcome-pure.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "KycWelcomePureComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/views/kyc-welcome/kyc-welcome-pure/kyc-welcome-pure.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/kyc-welcome/kyc-welcome-pure/kyc-welcome-pure.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/kyc-welcome/kyc-welcome/kyc-welcome.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "KycWelcomeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/app/views/kyc-welcome/kyc-welcome/kyc-welcome.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "FlatForm",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/kyc-welcome/kyc-welcome/kyc-welcome.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "dob",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/kyc-welcome/kyc-welcome/kyc-welcome.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "name",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/kyc-welcomeback/kyc-welcomeback-pure/kyc-welcomeback-pure.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "KycWelcomebackPureComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/views/kyc-welcomeback/kyc-welcomeback-pure/kyc-welcomeback-pure.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/kyc-welcomeback/kyc-welcomeback-pure/kyc-welcomeback-pure.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/kyc-welcomeback/kyc-welcomeback/kyc-welcomeback.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "KycWelcomebackComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/views/negative-account/negative-account-initial-pure/negative-account-initial-pure.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NegativeAccountInitialPureComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/views/negative-account/negative-account-initial-pure/negative-account-initial-pure.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "cards",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/negative-account/negative-account-initial-pure/negative-account-initial-pure.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/negative-account/negative-account-initial-pure/negative-account-initial-pure.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/negative-account/negative-account-initial/negative-account-initial.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NegativeAccountInitialComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/views/negative-account/negative-account-initial/negative-tradelines.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "NegativeTradelinesPipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/negative-account/negative-account-initial/negative-tradelines.pipe.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "defaultTradeline",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/signin-forgot/signin-forgot.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SigninForgotComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/views/signin-redirect/signin-redirect.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SigninRedirectComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/views/signin-redirect/signin-redirect.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "navs",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/signin/signin-pure/signin-pure.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SigninPureComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/views/signin/signin/signin.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SigninComponent",
                "coveragePercent": 66,
                "coverageCount": "6/9",
                "status": "good"
            },
            {
                "filePath": "src/app/views/signup-error-validation/signup-error-validation.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SignupErrorValidationComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/views/signup-error-validation/signup-error-validation.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/signup-error-validation/signup-error-validation.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/signup-error/signup-error.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SignupErrorComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/views/signup-error/signup-error.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/signup-error/signup-error.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/signup-knowyou/signup-knowyou.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SignupKnowyouComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/views/signup-knowyou/signup-knowyou.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/signup-knowyou/signup-knowyou.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/signup-resend/signup-resend.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SignupResendComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/views/signup-thankyou/signup-thankyou.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SignupThankyouComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/views/signup-thankyou/signup-thankyou.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/signup-thankyou/signup-thankyou.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/signup/signup-pure/signup-pure.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SignupPureComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/views/signup/signup-pure/signup-pure.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/signup/signup-pure/signup-pure.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/signup/signup/signup.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SignupComponent",
                "coveragePercent": 70,
                "coverageCount": "7/10",
                "status": "good"
            },
            {
                "filePath": "src/app/views/tradelines/tradelines-pure/tradelines-pure.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TradelinesPureComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/views/tradelines/tradelines-pure/tradelines.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "address",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/tradelines/tradelines-pure/tradelines.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/tradelines/tradelines-pure/tradelines.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "installment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/tradelines/tradelines-pure/tradelines.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "remarks",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/tradelines/tradelines-pure/tradelines.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/tradelines/tradelines/tradelines.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TradelinesComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/views/views.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "pipes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/views.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "views",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.dev.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.qa.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}