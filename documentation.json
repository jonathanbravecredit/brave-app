{
    "pipes": [
        {
            "name": "AccountStatusPipe",
            "id": "pipe-AccountStatusPipe-2e730d287f608bfed8272f557d6d9cbd",
            "file": "src/app/shared/components/cards/creditcard-card/account-status.pipe.ts",
            "type": "pipe",
            "description": "",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "value",
                            "type": "Status"
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 8,
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "Status",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "ngname": "accountStatus",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\r\nimport { Status } from '@shared/components/cards/creditcard-card/creditcard-card.component';\r\n\r\n@Pipe({\r\n  name: 'accountStatus',\r\n})\r\nexport class AccountStatusPipe implements PipeTransform {\r\n  transform(value: Status): string {\r\n    return statuses[value];\r\n  }\r\n}\r\n\r\nconst statuses: Record<Status, any> = {\r\n  excellent: 'bg-teal-500',\r\n  good: 'bg-amber-300',\r\n  okay: 'bg-orange-500',\r\n  poor: 'bg-rose-800',\r\n};\r\n"
        },
        {
            "name": "FilledChecktextProgressbarPipe",
            "id": "pipe-FilledChecktextProgressbarPipe-fa46a4e9f97e1da567015233fcd13e2f",
            "file": "src/app/shared/components/progressbars/filled-checktext-progressbar/filled-checktext-progressbar.pipe.ts",
            "type": "pipe",
            "description": "",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "value",
                            "type": "unknown"
                        },
                        {
                            "name": "args",
                            "type": "unknown[]",
                            "dotDotDotToken": true
                        }
                    ],
                    "optional": false,
                    "returnType": "unknown",
                    "typeParameters": [],
                    "line": 8,
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "unknown",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "args",
                            "type": "unknown[]",
                            "dotDotDotToken": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "ngname": "filledChecktextProgressbar",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'filledChecktextProgressbar'\r\n})\r\nexport class FilledChecktextProgressbarPipe implements PipeTransform {\r\n\r\n  transform(value: unknown, ...args: unknown[]): unknown {\r\n    return null;\r\n  }\r\n\r\n}\r\n"
        },
        {
            "name": "FilledClosingAlertPipe",
            "id": "pipe-FilledClosingAlertPipe-1487ea4fc9e327c2e6cb6d3f2b69e435",
            "file": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.pipe.ts",
            "type": "pipe",
            "description": "",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "value",
                            "type": "IFilledClosingAlertConfig"
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 8,
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "IFilledClosingAlertConfig",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "ngname": "filledClosingAlert",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\r\nimport { IFilledClosingAlertConfig } from '@shared/components/alerts/filled-closing-alert/filled-closing-alert.component';\r\n\r\n@Pipe({\r\n  name: 'filledClosingAlert',\r\n})\r\nexport class FilledClosingAlertPipe implements PipeTransform {\r\n  transform(value: IFilledClosingAlertConfig): string {\r\n    let cls = `${value.backgroundColor}`;\r\n    cls = `${cls} ${sizeSpecificClass[value.size]}`;\r\n    return cls;\r\n  }\r\n}\r\n\r\nconst sizeSpecificClass: Record<string, any> = {\r\n  xs: 'max-w-xs',\r\n  sm: 'max-w-sm',\r\n  base: 'max-w-md',\r\n  lg: 'max-w-lg',\r\n  xl: 'max-w-xl',\r\n};\r\n"
        },
        {
            "name": "FilledOnlytextBadgePipe",
            "id": "pipe-FilledOnlytextBadgePipe-aa35c0d50b07b13ea1a7df758f3ec9da",
            "file": "src/app/shared/components/badges/filled-onlytext-badge/filled-onlytext-badge.pipe.ts",
            "type": "pipe",
            "description": "",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "value",
                            "type": "IFilledOnlytextBadgeConfig"
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 8,
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "IFilledOnlytextBadgeConfig",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "ngname": "filledOnlytextBadge",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\r\nimport { IFilledOnlytextBadgeConfig } from '@shared/components/badges/filled-onlytext-badge/filled-onlytext-badge.component';\r\n\r\n@Pipe({\r\n  name: 'filledOnlytextBadge',\r\n})\r\nexport class FilledOnlytextBadgePipe implements PipeTransform {\r\n  transform(value: IFilledOnlytextBadgeConfig): string {\r\n    let cls = `${value.color} ${value.backgroundColor}`;\r\n    cls = `${cls} ${sizeSpecificClass[value.size]}`;\r\n    return cls;\r\n  }\r\n}\r\n\r\nconst sizeSpecificClass: Record<string, any> = {\r\n  sm: 'text-xs px-2 py-1',\r\n  base: 'text-xs px-2 py-1',\r\n  lg: 'text-xs px-2 py-1',\r\n};\r\n"
        },
        {
            "name": "FilledOnlytextButtonPipe",
            "id": "pipe-FilledOnlytextButtonPipe-28236cec001c408c68d7109f6e22daf1",
            "file": "src/app/shared/components/buttons/filled-onlytext-button/filled-onlytext-button.pipe.ts",
            "type": "pipe",
            "description": "",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "value",
                            "type": "IFilledOnlyTextButtonConfig"
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 8,
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "IFilledOnlyTextButtonConfig",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "ngname": "filledOnlytextButton",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\r\nimport { IFilledOnlyTextButtonConfig } from '@shared/components/buttons/filled-onlytext-button/filled-onlytext-button.component';\r\n\r\n@Pipe({\r\n  name: 'filledOnlytextButton',\r\n})\r\nexport class FilledOnlytextButtonPipe implements PipeTransform {\r\n  transform(value: IFilledOnlyTextButtonConfig): string {\r\n    let cls = `${value.backgroundColor} ${value.color} active:${value.activeColor}`;\r\n    cls = `${cls} ${sizeSpecificClass[value.buttonSize]}`;\r\n    return cls;\r\n  }\r\n}\r\n\r\nconst sizeSpecificClass: Record<string, any> = {\r\n  sm: 'text-xs px-4 py-2 hover:shadow-md',\r\n  base: 'text-sm px-6 py-3 hover:shadow-lg',\r\n  lg: 'text-base px-8 py-3 hover:shadow-lg',\r\n};\r\n"
        },
        {
            "name": "KycKbaquestionsPipe",
            "id": "pipe-KycKbaquestionsPipe-1cec27f8bb67607ddb407f25a0525a79",
            "file": "src/app/views/kyc-kbaquestions/kyc-kbaquestions/kyc-kbaquestions.pipe.ts",
            "type": "pipe",
            "description": "",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "xmlString",
                            "type": "string | null | undefined"
                        },
                        {
                            "name": "args",
                            "type": "unknown[]",
                            "dotDotDotToken": true
                        }
                    ],
                    "optional": false,
                    "returnType": "ITransunionKBAQuestion[]",
                    "typeParameters": [],
                    "line": 12,
                    "jsdoctags": [
                        {
                            "name": "xmlString",
                            "type": "string | null | undefined",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "args",
                            "type": "unknown[]",
                            "dotDotDotToken": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "ngname": "kycKbaquestions",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\nimport {\n  ITransunionKBAQuestion,\n  ITransunionKBAQuestions,\n} from '@shared/interfaces/tu-kba-questions.interface';\nimport * as convert from 'xml-js';\n\n@Pipe({\n  name: 'kycKbaquestions',\n})\nexport class KycKbaquestionsPipe implements PipeTransform {\n  transform(\n    xmlString: string | null | undefined,\n    ...args: unknown[]\n  ): ITransunionKBAQuestion[] {\n    if (!xmlString) return [];\n    const xml: ITransunionKBAQuestions = JSON.parse(\n      convert.xml2json(xmlString, { compact: true })\n    );\n    return xml.ChallengeConfigurationType.MultiChoiceQuestion;\n  }\n}\n"
        },
        {
            "name": "LinksOnlytextButtonPipe",
            "id": "pipe-LinksOnlytextButtonPipe-7bc077879ddf479d63d0e9c316067fac",
            "file": "src/app/shared/components/buttons/links-onlytext-button/links-onlytext-button.pipe.ts",
            "type": "pipe",
            "description": "",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "value",
                            "type": "ILinksOnlyTextButtonConfig"
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 8,
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "ILinksOnlyTextButtonConfig",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "ngname": "linksOnlytextButton",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\r\nimport { ILinksOnlyTextButtonConfig } from '@shared/components/buttons/links-onlytext-button/links-onlytext-button.component';\r\n\r\n@Pipe({\r\n  name: 'linksOnlytextButton',\r\n})\r\nexport class LinksOnlytextButtonPipe implements PipeTransform {\r\n  transform(value: ILinksOnlyTextButtonConfig): string {\r\n    let cls = `${value.color}`;\r\n    cls = `${cls} ${sizeSpecificClass[value.buttonSize]}`;\r\n    return cls;\r\n  }\r\n}\r\n\r\nconst sizeSpecificClass: Record<string, any> = {\r\n  sm: 'text-xs px-3 py-1',\r\n  base: 'text-sm px-6 py-2',\r\n  lg: 'text-base px-8 py-3',\r\n};\r\n"
        },
        {
            "name": "OutlineInputPipe",
            "id": "pipe-OutlineInputPipe-7912f45a0a91c925959b75bd72880aff",
            "file": "src/app/shared/components/inputs/outline-input/outline-input.pipe.ts",
            "type": "pipe",
            "description": "",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "value",
                            "type": "IOutlineInputeConfig"
                        },
                        {
                            "name": "args",
                            "type": "unknown[]",
                            "dotDotDotToken": true
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 8,
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "IOutlineInputeConfig",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "args",
                            "type": "unknown[]",
                            "dotDotDotToken": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "ngname": "outlineInput",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\r\nimport { IOutlineInputeConfig } from '@shared/components/inputs/outline-input/outline-input.component';\r\n\r\n@Pipe({\r\n  name: 'outlineInput',\r\n})\r\nexport class OutlineInputPipe implements PipeTransform {\r\n  transform(value: IOutlineInputeConfig, ...args: unknown[]): string {\r\n    let cls = `${sizeSpecificClass[value.size]}`;\r\n    return cls;\r\n  }\r\n}\r\n\r\nconst sizeSpecificClass: Record<string, any> = {\r\n  sm: 'text-sm px-3 py-1',\r\n  base: 'text-sm px-3 py-3',\r\n  lg: 'text-base px-3 py-4',\r\n};\r\n"
        },
        {
            "name": "OutlineOnlytextButtonPipe",
            "id": "pipe-OutlineOnlytextButtonPipe-08f8cb4d1fcb3679ef03b7abd0599b3b",
            "file": "src/app/shared/components/buttons/outline-onlytext-button/outline-onlytext-button.pipe.ts",
            "type": "pipe",
            "description": "",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "value",
                            "type": "IOutlineOnlyTextButtonConfig"
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 8,
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "IOutlineOnlyTextButtonConfig",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "ngname": "outlineOnlytextButton",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\r\nimport { IOutlineOnlyTextButtonConfig } from '@shared/components/buttons/outline-onlytext-button/outline-onlytext-button.component';\r\n\r\n@Pipe({\r\n  name: 'outlineOnlytextButton',\r\n})\r\nexport class OutlineOnlytextButtonPipe implements PipeTransform {\r\n  transform(value: IOutlineOnlyTextButtonConfig): string {\r\n    let cls = `${value.color} ${value.borderColor} hover:${value.hoverColor} active:${value.activeColor}`;\r\n    cls = `${cls} ${sizeSpecificClass[value.buttonSize]}`;\r\n    return cls;\r\n  }\r\n}\r\n\r\nconst sizeSpecificClass: Record<string, any> = {\r\n  sm: 'text-xs px-4 py-2',\r\n  base: 'text-sm px-6 py-3',\r\n  lg: 'text-base px-8 py-3',\r\n};\r\n"
        },
        {
            "name": "OutlineSelectInputPipe",
            "id": "pipe-OutlineSelectInputPipe-be01820c922c58b0b67ab0df355c74a0",
            "file": "src/app/shared/components/inputs/outline-select-input/outline-select-input.pipe.ts",
            "type": "pipe",
            "description": "",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "value",
                            "type": "IOutlineSelectInputConfig"
                        },
                        {
                            "name": "args",
                            "type": "unknown[]",
                            "dotDotDotToken": true
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 8,
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "IOutlineSelectInputConfig",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "args",
                            "type": "unknown[]",
                            "dotDotDotToken": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "ngname": "outlineSelectInput",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\r\nimport { IOutlineSelectInputConfig } from '@shared/components/inputs/outline-select-input/outline-select-input.component';\r\n\r\n@Pipe({\r\n  name: 'outlineSelectInput',\r\n})\r\nexport class OutlineSelectInputPipe implements PipeTransform {\r\n  transform(value: IOutlineSelectInputConfig, ...args: unknown[]): string {\r\n    let cls = `${sizeSpecificClass[value.size]}`;\r\n    return cls;\r\n  }\r\n}\r\n\r\nconst sizeSpecificClass: Record<string, any> = {\r\n  sm: 'text-sm px-1 py-1',\r\n  base: 'text-sm px-1 py-3',\r\n  lg: 'text-base px-1 py-4',\r\n};\r\n"
        },
        {
            "name": "SnapshotLabelPipe",
            "id": "pipe-SnapshotLabelPipe-ddaddf6d76f5e11a765907c6e6a98f5a",
            "file": "src/app/shared/components/cards/snapshot-display-card/snapshot-label.pipe.ts",
            "type": "pipe",
            "description": "",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "value",
                            "type": "LabelOfSnapshot"
                        },
                        {
                            "name": "args",
                            "type": "any[]",
                            "dotDotDotToken": true
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 21,
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "LabelOfSnapshot",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "args",
                            "type": "any[]",
                            "dotDotDotToken": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "ngname": "snapshotLabel",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\n\nexport enum LabelOfSnapshot {\n  Update = 'update',\n  Hidden = 'hidden',\n  New = 'new',\n  NoLabel = 'no-label'\n}\n\nconst enumStrNameOfLabel = {\n  [LabelOfSnapshot.Update]: { text: 'Update', colorClass: 'text-brave-magenta' },\n  [LabelOfSnapshot.Hidden]: { text: 'Hidden', colorClass: 'text-lt-gray' },\n  [LabelOfSnapshot.New]: { text: 'New', colorClass: 'text-brave-blurple' },\n  [LabelOfSnapshot.NoLabel]: { text: '', colorClass: '' }\n};\n\n@Pipe({\n  name: 'snapshotLabel'\n})\nexport class SnapshotLabelPipe implements PipeTransform {\n  transform(value: LabelOfSnapshot, ...args: any[]): string {\n    let result = '';\n    const typeOfOutput: 'color-class' | 'text' | undefined = args[0];\n    if (typeOfOutput !== undefined) {\n      const labelValue = enumStrNameOfLabel[value];\n      result = typeOfOutput === 'text' ? labelValue.text : labelValue.colorClass;\n    }\n    return result;\n  }\n}\n"
        },
        {
            "name": "SnapshotStatusPipe",
            "id": "pipe-SnapshotStatusPipe-666a93cca3ec0295a68f7a653f18cb99",
            "file": "src/app/shared/components/cards/snapshot-display-card/snapshot-status.pipe.ts",
            "type": "pipe",
            "description": "",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "value",
                            "type": "SnapshotStatus"
                        },
                        {
                            "name": "args",
                            "type": "any[]",
                            "dotDotDotToken": true
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 15,
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "SnapshotStatus",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "args",
                            "type": "any[]",
                            "dotDotDotToken": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "ngname": "snapshotStatus",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\nimport { SnapshotStatus } from './snapshot-display-card.component';\n\nconst enumStrColorCLassIndicator = {\n  [SnapshotStatus.Danger]: 'brave-danger',\n  [SnapshotStatus.Safe]: 'brave-safe',\n  [SnapshotStatus.Critical]: 'brave-critical',\n  [SnapshotStatus.Default]: 'lt-gray'\n};\n\n@Pipe({\n  name: 'snapshotStatus'\n})\nexport class SnapshotStatusPipe implements PipeTransform {\n  transform(value: SnapshotStatus, ...args: any[]): string {\n    let result = '';\n    const outputStyle = args[0];\n    if (outerHeight !== undefined) {\n      const prefix = outputStyle === 'text' ? 'text-' : 'bg-';\n      result = prefix + enumStrColorCLassIndicator[value];\n      if (outputStyle === 'text') {\n        result += ' text-3.5';\n      }\n    }\n    return result;\n  }\n}\n"
        }
    ],
    "interfaces": [
        {
            "name": "FlatForm",
            "id": "interface-FlatForm-945e61ea593e2a57824eecd1af40c116",
            "file": "src/app/views/kyc-base/kyc-base.component.ts",
            "type": "interface",
            "sourceCode": "import { Component, EventEmitter, Output } from '@angular/core';\r\nimport { AbstractControl, FormGroup } from '@angular/forms';\r\n\r\nexport interface FlatForm {\r\n  [key: string]: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'brave-kyc-base',\r\n  template: '',\r\n})\r\nexport class KycBaseComponent {\r\n  @Output() nextClick: EventEmitter<void> = new EventEmitter();\r\n  @Output() backClick: EventEmitter<void> = new EventEmitter();\r\n  @Output() formSubmit: EventEmitter<FormGroup> = new EventEmitter();\r\n  @Output()\r\n  formError: EventEmitter<{\r\n    [key: string]: AbstractControl;\r\n  }> = new EventEmitter();\r\n\r\n  constructor() {}\r\n\r\n  formatAttributes(\r\n    form: FormGroup,\r\n    mapObj: Record<string, any>,\r\n    inputType: string = 'input'\r\n  ): FlatForm {\r\n    return this.flattenAttributes(form.value, mapObj, inputType);\r\n  }\r\n\r\n  flattenAttributes(\r\n    formValues: any,\r\n    mapObj: Record<string, any>,\r\n    inputType: string\r\n  ): FlatForm {\r\n    let values: FlatForm = {};\r\n    Object.keys(formValues).forEach((key) => {\r\n      if (mapObj[key]) {\r\n        values[key] = formValues[key][`${inputType}`];\r\n      }\r\n    });\r\n    return values;\r\n  }\r\n}\r\n",
            "properties": [],
            "indexSignatures": [
                {
                    "id": "index-declaration-945e61ea593e2a57824eecd1af40c116",
                    "args": [
                        {
                            "name": "key",
                            "type": "string"
                        }
                    ],
                    "returnType": "string",
                    "line": 4
                }
            ],
            "kind": 159,
            "methods": []
        },
        {
            "name": "FlatForm",
            "id": "interface-FlatForm-450ff2cebf98c85e8ac47724af2046df-1",
            "file": "src/app/views/kyc-welcome/kyc-welcome/kyc-welcome.component.ts",
            "type": "interface",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { AbstractControl, FormGroup } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { UserAttributesInput } from '@shared/services/aws/api.service';\nimport { KycService } from '@shared/services/kyc/kyc.service';\nimport { KycBaseComponent } from '@views/kyc-base/kyc-base.component';\n\ninterface FlatForm {\n  [key: string]: string;\n}\n\n@Component({\n  selector: 'brave-kyc-welcome',\n  templateUrl: './kyc-welcome.component.html',\n})\nexport class KycWelcomeComponent extends KycBaseComponent implements OnInit {\n  stepID = 0;\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n    private kycService: KycService\n  ) {\n    super();\n  }\n\n  ngOnInit(): void {\n    this.kycService.activateStep(this.stepID);\n  }\n\n  goToNext(form: FormGroup): void {\n    if (form.valid) {\n      // write to state...TODO write to DB\n      const attrs = {\n        name: {\n          ...this.formatAttributes(form, name),\n        },\n        dob: {\n          ...this.formatAttributes(form, dob),\n        },\n      } as UserAttributesInput;\n      this.kycService.updateUserAttributes(attrs);\n      this.kycService.completeStep(this.stepID);\n      this.router.navigate(['../address'], { relativeTo: this.route });\n    }\n  }\n\n  handleError(errors: { [key: string]: AbstractControl }): void {\n    console.log('form errors', errors);\n  }\n}\n\nconst name: Record<string, any> = {\n  first: true,\n  middle: true,\n  last: true,\n};\n\nconst dob: Record<string, any> = {\n  year: true,\n  month: true,\n  day: true,\n};\n",
            "properties": [],
            "indexSignatures": [
                {
                    "id": "index-declaration-450ff2cebf98c85e8ac47724af2046df",
                    "args": [
                        {
                            "name": "key",
                            "type": "string"
                        }
                    ],
                    "returnType": "string",
                    "line": 8
                }
            ],
            "kind": 159,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "FlatForm-1"
        },
        {
            "name": "FormFields",
            "id": "interface-FormFields-ab50d4401a0450de3145e2022e3ef15f",
            "file": "src/app/shared/components/auth/sign-up/sign-up.component.ts",
            "type": "interface",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { BraveEmailValidator } from '@shared/validators/email.validator';\r\n\r\ninterface FormFields {\r\n  fullName: string;\r\n  username: string;\r\n  password: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'brave-sign-up',\r\n  templateUrl: './sign-up.component.html',\r\n  styleUrls: ['./sign-up.component.css'],\r\n})\r\nexport class SignUpComponent {\r\n  signUpForm: FormGroup = {} as FormGroup;\r\n\r\n  constructor(private fb: FormBuilder) {\r\n    this.signUpForm = this.fb.group({\r\n      fullName: ['', [Validators.required]],\r\n      username: ['', [Validators.required, BraveEmailValidator]],\r\n      password: ['', [Validators.required, Validators.minLength(8)]],\r\n    });\r\n  }\r\n\r\n  get validForm() {\r\n    return this.signUpForm.valid;\r\n  }\r\n  get signUpValues() {\r\n    return this.signUpForm.value;\r\n  }\r\n\r\n  async signUpUser(formData: FormFields) {\r\n    if (!this.validForm) {\r\n      return;\r\n    }\r\n\r\n    const { username, password, fullName } = this.signUpValues;\r\n\r\n    // Auth.signUp({\r\n    //   username,\r\n    //   password,\r\n    //   attributes: {\r\n    //     email: username,\r\n    //     'custom:fullName': fullName,\r\n    //   },\r\n    // })\r\n    //   .then((_) => {\r\n    //     // fire fb pixel\r\n    //     // this.facebookService.fireCompleteRegistration(0.0, 'USD');\r\n    //     // this.googleService.fireSignUpEvent();\r\n    //     sessionStorage.setItem('userEmail', username);\r\n    //     const unconfirmedUserState = {\r\n    //       userFirstName: 'Guest',\r\n    //       userAttributes: {\r\n    //         'custom:firstName': 'Guest',\r\n    //         'custom:lastName': '',\r\n    //         'custom:legalFullName': '',\r\n    //         'custom:dob': '',\r\n    //         'custom:address': '',\r\n    //         email: username,\r\n    //         email_verified: false,\r\n    //         sub: '',\r\n    //       },\r\n    //       isSignedIn: true,\r\n    //       isAdmin: false,\r\n    //     };\r\n    //     this.accountMgmtService.updateUser(unconfirmedUserState); // signed up not confirmed...manually update state.\r\n    //     this.accountMgmtService.isWaiting$.next(false);\r\n    //     this.router.navigate(['/userportal/stepone']);\r\n    //   })\r\n    //   .catch((err) => {\r\n    //     this.error = true;\r\n    //     this.errorMessage = err.message;\r\n    //     this.accountMgmtService.isWaiting$.next(false);\r\n    //   });\r\n  }\r\n}\r\n",
            "properties": [
                {
                    "name": "fullName",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "password",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "username",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "IBaseModalRegularConfig",
            "id": "interface-IBaseModalRegularConfig-6e4efba795457da78f47287b732dcd1f",
            "file": "src/app/shared/components/modals/base-modal-regular/base-modal-regular.component.ts",
            "type": "interface",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\n\r\nexport interface IBaseModalRegularConfig {\r\n  openButtonText: string;\r\n  title: string;\r\n  body: string;\r\n  actionButtonOneText: string;\r\n  actionButtonTwoText: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'brave-base-modal-regular',\r\n  templateUrl: './base-modal-regular.component.html',\r\n})\r\nexport class BaseModalRegularComponent implements OnInit {\r\n  @Input() config: IBaseModalRegularConfig = {\r\n    openButtonText: 'Open',\r\n    title: 'Message Title',\r\n    body: 'Message Text',\r\n    actionButtonOneText: 'Cancel',\r\n    actionButtonTwoText: 'Continue',\r\n  };\r\n  @Output() actionOne: EventEmitter<any> = new EventEmitter();\r\n  @Output() actionTwo: EventEmitter<any> = new EventEmitter();\r\n\r\n  public showModal = false;\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  toggleModal() {\r\n    this.showModal = !this.showModal;\r\n  }\r\n}\r\n",
            "properties": [
                {
                    "name": "actionButtonOneText",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "actionButtonTwoText",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "body",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "openButtonText",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "title",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "IBaseModalSmallConfig",
            "id": "interface-IBaseModalSmallConfig-07d088325d41189aa5320f9e6e298ee0",
            "file": "src/app/shared/components/modals/base-modal-small/base-modal-small.component.ts",
            "type": "interface",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\n\r\nexport interface IBaseModalSmallConfig {\r\n  openButtonText: string;\r\n  title: string;\r\n  body: string;\r\n  actionButtonOneText: string;\r\n  actionButtonTwoText: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'brave-base-modal-small',\r\n  templateUrl: './base-modal-small.component.html',\r\n})\r\nexport class BaseModalSmallComponent implements OnInit {\r\n  @Input() config: IBaseModalSmallConfig = {\r\n    openButtonText: 'Open',\r\n    title: 'Message Title',\r\n    body: 'Message Text',\r\n    actionButtonOneText: 'Cancel',\r\n    actionButtonTwoText: 'Continue',\r\n  };\r\n  @Output() actionOne: EventEmitter<any> = new EventEmitter();\r\n  @Output() actionTwo: EventEmitter<any> = new EventEmitter();\r\n\r\n  public showModal = false;\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  toggleModal() {\r\n    this.showModal = !this.showModal;\r\n  }\r\n}\r\n",
            "properties": [
                {
                    "name": "actionButtonOneText",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "actionButtonTwoText",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "body",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "openButtonText",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "title",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "IFilledChecktextProgressbarConfig",
            "id": "interface-IFilledChecktextProgressbarConfig-1e639b0664c76125e87f65fa04a97b7b",
            "file": "src/app/shared/components/progressbars/filled-checktext-progressbar/filled-checktext-progressbar.component.ts",
            "type": "interface",
            "sourceCode": "import { Component, Input, OnChanges, OnInit } from '@angular/core';\n\nexport interface IProgressStep {\n  id: number;\n  active: boolean;\n  complete: boolean;\n  name: string;\n}\nexport interface IFilledChecktextProgressbarConfig {\n  size: string;\n}\n\n@Component({\n  selector: 'brave-filled-checktext-progressbar',\n  templateUrl: './filled-checktext-progressbar.component.html',\n})\nexport class FilledChecktextProgressbarComponent {\n  @Input() config: IFilledChecktextProgressbarConfig = { size: 'base' };\n  @Input() steps: IProgressStep[] = [];\n  @Input() activatedStep: number = -1;\n  @Input() completedStep: number = -1;\n\n  constructor() {}\n}\n",
            "properties": [
                {
                    "name": "size",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "IFilledClosingAlertConfig",
            "id": "interface-IFilledClosingAlertConfig-c33172bd449c8697f2e970733e46abbb",
            "file": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.component.ts",
            "type": "interface",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\r\n\r\nexport interface IFilledClosingAlertConfig {\r\n  size: string;\r\n  backgroundColor: string;\r\n  color: string;\r\n  alertTitle: string;\r\n  alertBody: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'brave-filled-closing-alert',\r\n  templateUrl: './filled-closing-alert.component.html',\r\n})\r\nexport class FilledClosingAlertComponent implements OnInit {\r\n  @Input() config: IFilledClosingAlertConfig = {\r\n    size: 'base',\r\n    backgroundColor: 'bg-indigo-800',\r\n    color: 'text-white',\r\n    alertTitle: 'Alert!',\r\n    alertBody: 'Something went wrong. Please try again.',\r\n  };\r\n  constructor() {}\r\n  public showAlert: boolean = false;\r\n  ngOnInit(): void {}\r\n}\r\n",
            "properties": [
                {
                    "name": "alertBody",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "alertTitle",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "backgroundColor",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "color",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "size",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "IFilledOnlytextBadgeConfig",
            "id": "interface-IFilledOnlytextBadgeConfig-cc76390c7f4dbba7f24cd4614fada0a0",
            "file": "src/app/shared/components/badges/filled-onlytext-badge/filled-onlytext-badge.component.ts",
            "type": "interface",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\r\n\r\nexport interface IFilledOnlytextBadgeConfig {\r\n  size: string;\r\n  backgroundColor: string;\r\n  color: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'brave-filled-onlytext-badge',\r\n  templateUrl: './filled-onlytext-badge.component.html',\r\n})\r\nexport class FilledOnlytextBadgeComponent {\r\n  @Input() config: IFilledOnlytextBadgeConfig = {\r\n    size: 'base',\r\n    backgroundColor: 'bg-indigo-200',\r\n    color: 'text-indigo-800',\r\n  };\r\n\r\n  constructor() {}\r\n}\r\n",
            "properties": [
                {
                    "name": "backgroundColor",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "color",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "size",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "IFilledOnlyTextButtonConfig",
            "id": "interface-IFilledOnlyTextButtonConfig-16b5fe9a1071f4eec97ac246e794abf0",
            "file": "src/app/shared/components/buttons/filled-onlytext-button/filled-onlytext-button.component.ts",
            "type": "interface",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\n\r\nexport interface IFilledOnlyTextButtonConfig {\r\n  buttonSize: string;\r\n  backgroundColor: string;\r\n  activeColor: string;\r\n  color: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'brave-filled-onlytext-button',\r\n  templateUrl: './filled-onlytext-button.component.html',\r\n})\r\nexport class FilledOnlytextButtonComponent {\r\n  /**\r\n   * @param config Input objctfor button customization\r\n   * @param config.buttonSize 'sm', 'base', 'lg'\r\n   * @param config.backgroundColor Any global color \"e.g. bg-indigo-800\"\r\n   * @param config.activeColor Any global color \"e.g. bg-indigo-900\"\r\n   * @param config.color Any global color\r\n   */\r\n  @Input() config: IFilledOnlyTextButtonConfig = {\r\n    buttonSize: 'base',\r\n    backgroundColor: 'bg-indigo-800',\r\n    activeColor: 'bg-indigo-900',\r\n    color: 'text-white',\r\n  };\r\n\r\n  @Input() disabled: boolean = false;\r\n\r\n  constructor() {}\r\n}\r\n",
            "properties": [
                {
                    "name": "activeColor",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "backgroundColor",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "buttonSize",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "color",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "IGetAuthenticationQuestionsMsg",
            "id": "interface-IGetAuthenticationQuestionsMsg-cf758b0c66839ad21b94f8d3442fa7f9",
            "file": "src/app/shared/models/get-authorization-questions.ts",
            "type": "interface",
            "sourceCode": "export interface IGetAuthenticationQuestionsMsg {\n  AdditionalInputs?: {\n    Data: {\n      Name: string;\n      Value: string;\n    };\n  };\n  RequestKey: string;\n  ClientKey: string;\n  Customer: {\n    CurrentAddress: {\n      AddressLine1: string;\n      AddressLine2?: string;\n      City: string;\n      State: string;\n      Zipcode: string;\n    };\n    PreviousAddress: {\n      AddressLine1?: string;\n      AddressLine2?: string;\n      City?: string;\n      State?: string;\n      Zipcode?: string;\n    };\n    DateOfBirth: string;\n    FullName: {\n      FirstName: string;\n      LastName: string;\n      MiddleName?: string;\n      Prefix?: string;\n      Suffix?: string;\n    };\n    PhoneNumber?: string;\n    Ssn: string;\n  };\n  Email?: string;\n  Language?: string;\n  ServiceBundleCode: string;\n  TrustSessionId?: string;\n}\n\nexport interface IGetAuthenticationQuestionsResponseSuccess {\n  's:Envelope': {\n    _attributes: {\n      'xmlns:s': string;\n    };\n    's:Body': {\n      GetAuthenticationQuestionsResponse: {\n        _attributes: {\n          xmlns: string;\n        };\n        GetAuthenticationQuestionsResult: {\n          _attributes: {\n            'xmlns:a': string;\n            'xmlns:i': string;\n          };\n          'a:AccountName': {\n            _text: string;\n          };\n          'a:ErrorResponse': {\n            _attributes: {\n              'i:nil': string;\n            };\n          };\n          'a:RequestKey': {\n            _text: string;\n          };\n          'a:ResponseType': {\n            _text: string;\n          };\n          'a:ClientKey': {\n            _text: string;\n          };\n          'a:Questions': {\n            _text: string;\n          };\n          'a:ServiceBundleFulfillmentKey': {\n            _text: string;\n          };\n        };\n      };\n    };\n  };\n}\n",
            "properties": [
                {
                    "name": "AdditionalInputs",
                    "type": "literal type",
                    "optional": true,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "ClientKey",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "Customer",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "Email",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 36
                },
                {
                    "name": "Language",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "RequestKey",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "ServiceBundleCode",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "TrustSessionId",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 39
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "IGetAuthenticationQuestionsResponseSuccess",
            "id": "interface-IGetAuthenticationQuestionsResponseSuccess-cf758b0c66839ad21b94f8d3442fa7f9",
            "file": "src/app/shared/models/get-authorization-questions.ts",
            "type": "interface",
            "sourceCode": "export interface IGetAuthenticationQuestionsMsg {\n  AdditionalInputs?: {\n    Data: {\n      Name: string;\n      Value: string;\n    };\n  };\n  RequestKey: string;\n  ClientKey: string;\n  Customer: {\n    CurrentAddress: {\n      AddressLine1: string;\n      AddressLine2?: string;\n      City: string;\n      State: string;\n      Zipcode: string;\n    };\n    PreviousAddress: {\n      AddressLine1?: string;\n      AddressLine2?: string;\n      City?: string;\n      State?: string;\n      Zipcode?: string;\n    };\n    DateOfBirth: string;\n    FullName: {\n      FirstName: string;\n      LastName: string;\n      MiddleName?: string;\n      Prefix?: string;\n      Suffix?: string;\n    };\n    PhoneNumber?: string;\n    Ssn: string;\n  };\n  Email?: string;\n  Language?: string;\n  ServiceBundleCode: string;\n  TrustSessionId?: string;\n}\n\nexport interface IGetAuthenticationQuestionsResponseSuccess {\n  's:Envelope': {\n    _attributes: {\n      'xmlns:s': string;\n    };\n    's:Body': {\n      GetAuthenticationQuestionsResponse: {\n        _attributes: {\n          xmlns: string;\n        };\n        GetAuthenticationQuestionsResult: {\n          _attributes: {\n            'xmlns:a': string;\n            'xmlns:i': string;\n          };\n          'a:AccountName': {\n            _text: string;\n          };\n          'a:ErrorResponse': {\n            _attributes: {\n              'i:nil': string;\n            };\n          };\n          'a:RequestKey': {\n            _text: string;\n          };\n          'a:ResponseType': {\n            _text: string;\n          };\n          'a:ClientKey': {\n            _text: string;\n          };\n          'a:Questions': {\n            _text: string;\n          };\n          'a:ServiceBundleFulfillmentKey': {\n            _text: string;\n          };\n        };\n      };\n    };\n  };\n}\n",
            "properties": [
                {
                    "name": "s:Envelope",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 43
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "IIndicativeEnrichmentMsg",
            "id": "interface-IIndicativeEnrichmentMsg-f2c87b12c67bd9179d4b75293134278b",
            "file": "src/app/shared/models/indicative-enrichment.ts",
            "type": "interface",
            "sourceCode": "export interface IIndicativeEnrichmentMsg {\n  AdditionalInputs: {\n    Data: {\n      Name: string;\n      Value: string;\n    };\n  };\n  RequestKey: string;\n  ClientKey: string;\n  Customer: {\n    CurrentAddress: {\n      AddressLine1: string;\n      AddressLine2?: string;\n      City: string;\n      State: string;\n      Zipcode: string;\n    };\n    PreviousAddress: {\n      AddressLine1?: string;\n      AddressLine2?: string;\n      City?: string;\n      State?: string;\n      Zipcode?: string;\n    };\n    DateOfBirth: string;\n    FullName: {\n      FirstName: string;\n      LastName: string;\n    };\n    Ssn: string;\n  };\n  ServiceBundleCode: string;\n}\n\nexport interface IIndicativeEnrichmentResponseSuccess {\n  's:Envelope': {\n    _attributes: {\n      'xmlns:s': string;\n    };\n    's:Body': {\n      IndicativeEnrichmentResponse: {\n        _attributes: {\n          xmlns: string;\n        };\n        IndicativeEnrichmentResult: {\n          _attributes: {\n            'xmlns:a': string;\n            'xmlns:i': string;\n          };\n          'a:AccountName': {\n            _text: string;\n          };\n          'a:ErrorResponse': {\n            _attributes: {\n              'i:nil': string;\n            };\n          };\n          'a:RequestKey': {\n            _text: string;\n          };\n          'a:ResponseType': {\n            _text: string;\n          };\n          'a:ClientKey': {\n            _text: string;\n          };\n          'a:Customer': {\n            _text: string;\n          };\n          'a:SSN': {\n            _text: string;\n          };\n        };\n      };\n    };\n  };\n}\n",
            "properties": [
                {
                    "name": "AdditionalInputs",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "ClientKey",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "Customer",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "RequestKey",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "ServiceBundleCode",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 32
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "IIndicativeEnrichmentResponseSuccess",
            "id": "interface-IIndicativeEnrichmentResponseSuccess-f2c87b12c67bd9179d4b75293134278b",
            "file": "src/app/shared/models/indicative-enrichment.ts",
            "type": "interface",
            "sourceCode": "export interface IIndicativeEnrichmentMsg {\n  AdditionalInputs: {\n    Data: {\n      Name: string;\n      Value: string;\n    };\n  };\n  RequestKey: string;\n  ClientKey: string;\n  Customer: {\n    CurrentAddress: {\n      AddressLine1: string;\n      AddressLine2?: string;\n      City: string;\n      State: string;\n      Zipcode: string;\n    };\n    PreviousAddress: {\n      AddressLine1?: string;\n      AddressLine2?: string;\n      City?: string;\n      State?: string;\n      Zipcode?: string;\n    };\n    DateOfBirth: string;\n    FullName: {\n      FirstName: string;\n      LastName: string;\n    };\n    Ssn: string;\n  };\n  ServiceBundleCode: string;\n}\n\nexport interface IIndicativeEnrichmentResponseSuccess {\n  's:Envelope': {\n    _attributes: {\n      'xmlns:s': string;\n    };\n    's:Body': {\n      IndicativeEnrichmentResponse: {\n        _attributes: {\n          xmlns: string;\n        };\n        IndicativeEnrichmentResult: {\n          _attributes: {\n            'xmlns:a': string;\n            'xmlns:i': string;\n          };\n          'a:AccountName': {\n            _text: string;\n          };\n          'a:ErrorResponse': {\n            _attributes: {\n              'i:nil': string;\n            };\n          };\n          'a:RequestKey': {\n            _text: string;\n          };\n          'a:ResponseType': {\n            _text: string;\n          };\n          'a:ClientKey': {\n            _text: string;\n          };\n          'a:Customer': {\n            _text: string;\n          };\n          'a:SSN': {\n            _text: string;\n          };\n        };\n      };\n    };\n  };\n}\n",
            "properties": [
                {
                    "name": "s:Envelope",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 36
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "IKbaMultipleChoiceConfig",
            "id": "interface-IKbaMultipleChoiceConfig-394af9f6f9684d4f48c55063f54d08fa",
            "file": "src/app/shared/components/inputs/kba-multiplechoice-input/kba-multiplechoice-input.component.ts",
            "type": "interface",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ITransunionKBAQuestion } from '@shared/interfaces/tu-kba-questions.interface';\n\nexport interface IKbaMultipleChoiceConfig {\n  size: string;\n  label: string;\n  type: string;\n  placeholder: string;\n  autocomplete: string;\n  value?: string;\n}\n\n@Component({\n  selector: 'brave-kba-multiplechoice-input',\n  templateUrl: './kba-multiplechoice-input.component.html',\n})\nexport class KbaMultiplechoiceInputComponent implements OnInit {\n  private _required: boolean = false;\n  private _asteriskOverride: boolean = false;\n  private _question: ITransunionKBAQuestion | undefined;\n\n  /**\n   * @param Config Object to pass in component params\n   * @param config.size 'sm', 'base', 'lg'\n   * @param config.label Label text (default: 'Input label')\n   * @param config.placeholder Placeholder text (default: 'Input text')\n   * @param config.autocomplete Any HTML Input autocomplete value\n   * @param config.value (optional) Pre-load the input with a value\n   */\n  @Input() config: IKbaMultipleChoiceConfig = {\n    size: 'base',\n    label: 'Input label',\n    type: 'text',\n    placeholder: 'Input text',\n    autocomplete: 'off',\n    value: '',\n  };\n\n  /**\n   * @input Flag to make the input field required for form to be valid\n   */\n  @Input()\n  get required() {\n    return this._required;\n  }\n  set required(value: any) {\n    this._required = !!value;\n  }\n\n  /**\n   * @input Flag to override the display of an asterisk but still make it required\n   */\n  @Input()\n  get asteriskOverride() {\n    return this._asteriskOverride;\n  }\n  set asteriskOverride(value: any) {\n    this._asteriskOverride = !!value;\n  }\n\n  /**\n   * {@input (ITransunionKBAQuestion) Individual question\n   */\n  @Input()\n  get question() {\n    return this._question;\n  }\n  set question(value: ITransunionKBAQuestion | undefined) {\n    this._question = value;\n  }\n\n  @Output() valueChanged: EventEmitter<any> = new EventEmitter();\n  @Output()\n  onComponentReady: EventEmitter<FormGroup> = new EventEmitter<FormGroup>();\n\n  public componentFormGroup: FormGroup = new FormBuilder().group({\n    input: [''],\n  });\n  public locked: boolean = false;\n  public hidden: boolean = false;\n\n  constructor(private fb: FormBuilder) {}\n\n  ngOnInit(): void {\n    const validators = [];\n    if (this.required) {\n      validators.push(Validators.required);\n    }\n    this.componentFormGroup = this.fb.group({\n      input: [this.config.value, validators],\n    });\n    this.componentFormGroup.controls.input.valueChanges.subscribe((value) =>\n      this.valueChanged.emit(value)\n    );\n    this.onComponentReady.emit(this.componentFormGroup);\n  }\n}\n",
            "properties": [
                {
                    "name": "autocomplete",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "label",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "placeholder",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "size",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "type",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "value",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 11
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "ILinksOnlyTextButtonConfig",
            "id": "interface-ILinksOnlyTextButtonConfig-a9ac5dd2271768bbb8cac0161826b04e",
            "file": "src/app/shared/components/buttons/links-onlytext-button/links-onlytext-button.component.ts",
            "type": "interface",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\r\n\r\nexport interface ILinksOnlyTextButtonConfig {\r\n  buttonSize: string;\r\n  color: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'brave-links-onlytext-button',\r\n  templateUrl: './links-onlytext-button.component.html',\r\n})\r\nexport class LinksOnlytextButtonComponent {\r\n  /**\r\n   * @param config Input objctfor button customization\r\n   * @param config.buttonSize 'sm', 'base', 'lg'\r\n   * @param config.color Any global color\r\n   */\r\n  @Input() config: ILinksOnlyTextButtonConfig = {\r\n    buttonSize: 'base',\r\n    color: 'text-indigo-800',\r\n  };\r\n\r\n  constructor() {}\r\n}\r\n",
            "properties": [
                {
                    "name": "buttonSize",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "color",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "IMenuDropdown",
            "id": "interface-IMenuDropdown-d421304dea5e99260627beff85fd68c0",
            "file": "src/app/shared/components/dropdowns/popdowns/menu-dropdown/menu-dropdown.component.ts",
            "type": "interface",
            "sourceCode": "import { Component, ElementRef, Input, OnInit, ViewChild } from '@angular/core';\r\nimport { createPopper } from '@popperjs/core';\r\n\r\nexport interface ISubmenuItem {\r\n  submenu: string;\r\n  route: string;\r\n  group?: string;\r\n  break?: boolean;\r\n}\r\nexport interface IMenuDropdown {\r\n  menu: string;\r\n  submenus?: ISubmenuItem[];\r\n}\r\n\r\n@Component({\r\n  selector: 'brave-menu-dropdown',\r\n  templateUrl: './menu-dropdown.component.html',\r\n})\r\nexport class MenuDropdownComponent implements OnInit {\r\n  @Input() config: IMenuDropdown = {\r\n    menu: 'Menu',\r\n    submenus: [\r\n      { submenu: 'Sub 1', route: '/submenu1', group: 'Group 1' },\r\n      { submenu: 'Sub 2', route: '/submenu2' },\r\n      { submenu: 'Sub 3', route: '/submenu3' },\r\n      { submenu: 'Sub 4', route: '/submenu4' },\r\n      { submenu: 'Sub 5', route: '/submenu5', break: true },\r\n      { submenu: 'Sub 6', route: '/submenu6', group: 'Group 2' },\r\n      { submenu: 'Sub 7', route: '/submenu7' },\r\n      { submenu: 'Sub 8', route: '/submenu8', break: true },\r\n      { submenu: 'Sub 9', route: '/submenu9', group: 'Group 3' },\r\n      { submenu: 'Sub 10', route: '/submenu10' },\r\n    ],\r\n  };\r\n  dropdownPopoverShow = false;\r\n  @ViewChild('btnDropdownRef', { static: false }) btnDropdownRef:\r\n    | ElementRef\r\n    | undefined;\r\n  @ViewChild('popoverDropdownRef', { static: false })\r\n  popoverDropdownRef: ElementRef | undefined;\r\n  ngOnInit() {}\r\n  toggleDropdown(event: { preventDefault: () => void }) {\r\n    event.preventDefault();\r\n    if (this.dropdownPopoverShow) {\r\n      this.dropdownPopoverShow = false;\r\n    } else {\r\n      this.dropdownPopoverShow = true;\r\n      this.createPoppper();\r\n    }\r\n  }\r\n  createPoppper() {\r\n    createPopper(\r\n      this.btnDropdownRef?.nativeElement,\r\n      this.popoverDropdownRef?.nativeElement,\r\n      {\r\n        placement: 'bottom-start',\r\n      }\r\n    );\r\n  }\r\n}\r\n",
            "properties": [
                {
                    "name": "menu",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "submenus",
                    "type": "ISubmenuItem[]",
                    "optional": true,
                    "description": "",
                    "line": 12
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "IOutlineInputeConfig",
            "id": "interface-IOutlineInputeConfig-72ea716466866a3ce9e1723155cf7ca1",
            "file": "src/app/shared/components/inputs/outline-input/outline-input.component.ts",
            "type": "interface",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\nexport interface IOutlineInputeConfig {\r\n  size: string;\r\n  label: string;\r\n  type: string;\r\n  placeholder: string;\r\n  autocomplete: string;\r\n  value?: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'brave-outline-input',\r\n  templateUrl: './outline-input.component.html',\r\n})\r\nexport class OutlineInputComponent implements OnInit {\r\n  private _required: boolean = false;\r\n  private _asteriskOverride: boolean = false;\r\n\r\n  /**\r\n   * @param Config Object to pass in component params\r\n   * @param config.size 'sm', 'base', 'lg'\r\n   * @param config.label Label text (default: 'Input label')\r\n   * @param config.placeholder Placeholder text (default: 'Input text')\r\n   * @param config.autocomplete Any HTML Input autocomplete value\r\n   * @param config.value (optional) Pre-load the input with a value\r\n   */\r\n  @Input() config: IOutlineInputeConfig = {\r\n    size: 'base',\r\n    label: 'Input label',\r\n    type: 'text',\r\n    placeholder: 'Input text',\r\n    autocomplete: 'off',\r\n    value: '',\r\n  };\r\n\r\n  /**\r\n   * @input Flag to make the input field required for form to be valid\r\n   */\r\n  @Input()\r\n  get required() {\r\n    return this._required;\r\n  }\r\n  set required(value: any) {\r\n    this._required = !!value;\r\n  }\r\n\r\n  /**\r\n   * @input Flag to override the display of an asterisk but still make it required\r\n   */\r\n  @Input()\r\n  get asteriskOverride() {\r\n    return this._asteriskOverride;\r\n  }\r\n  set asteriskOverride(value: any) {\r\n    this._asteriskOverride = !!value;\r\n  }\r\n\r\n  @Output() valueChanged: EventEmitter<any> = new EventEmitter();\r\n  @Output()\r\n  onComponentReady: EventEmitter<FormGroup> = new EventEmitter<FormGroup>();\r\n\r\n  public componentFormGroup: FormGroup = new FormBuilder().group({\r\n    input: [''],\r\n  });\r\n  public locked: boolean = false;\r\n  public hidden: boolean = false;\r\n\r\n  constructor(private fb: FormBuilder) {}\r\n\r\n  ngOnInit(): void {\r\n    const validators = [];\r\n    if (this.required) {\r\n      validators.push(Validators.required);\r\n    }\r\n    this.componentFormGroup = this.fb.group({\r\n      input: [this.config.value, validators],\r\n    });\r\n    this.componentFormGroup.controls.input.valueChanges.subscribe((value) =>\r\n      this.valueChanged.emit(value)\r\n    );\r\n    this.onComponentReady.emit(this.componentFormGroup);\r\n  }\r\n}\r\n",
            "properties": [
                {
                    "name": "autocomplete",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "label",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "placeholder",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "size",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "type",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "value",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 10
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "IOutlineOnlyTextButtonConfig",
            "id": "interface-IOutlineOnlyTextButtonConfig-4a2204bb99ba7565cae610f909645abf",
            "file": "src/app/shared/components/buttons/outline-onlytext-button/outline-onlytext-button.component.ts",
            "type": "interface",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\r\n\r\nexport interface IOutlineOnlyTextButtonConfig {\r\n  buttonSize: string;\r\n  borderColor: string;\r\n  activeColor: string;\r\n  hoverColor: string;\r\n  color: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'brave-outline-onlytext-button',\r\n  templateUrl: './outline-onlytext-button.component.html',\r\n})\r\nexport class OutlineOnlytextButtonComponent {\r\n  /**\r\n   * @param config Input object for button customization\r\n   * @param config.buttonSize 'sm', 'base', 'lg'\r\n   * @param config.borderColor Any global color \"e.g. border-indigo-800\"\r\n   * @param config.activeColor Any global color \"e.g. bg-indigo-900\"\r\n   * @param config.hoverColor Any global color \"e.g. bg-indigo-800\"\r\n   * @param config.color Any global color \"e.g. text-indigo-900\"\r\n   */\r\n  @Input() config: IOutlineOnlyTextButtonConfig = {\r\n    buttonSize: 'base',\r\n    borderColor: 'border-indigo-800',\r\n    activeColor: 'bg-indigo-900',\r\n    hoverColor: 'bg-indigo-800',\r\n    color: 'text-indigo-800',\r\n  };\r\n\r\n  constructor() {}\r\n}\r\n",
            "properties": [
                {
                    "name": "activeColor",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "borderColor",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "buttonSize",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "color",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "hoverColor",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "IOutlineOnlyTextItem",
            "id": "interface-IOutlineOnlyTextItem-ebaeb58767d52d8669265bc57735c89d",
            "file": "src/app/shared/components/dropdowns/selects/outline-onlytext-select/outline-onlytext-select.component.ts",
            "type": "interface",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\r\n\r\nexport interface IOutlineOnlyTextItem {\r\n  value: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'brave-outline-onlytext-select',\r\n  templateUrl: './outline-onlytext-select.component.html',\r\n})\r\nexport class OutlineOnlytextSelectComponent implements OnInit {\r\n  @Input() items: IOutlineOnlyTextItem[] = [];\r\n\r\n  public selected: IOutlineOnlyTextItem | undefined;\r\n  public isOpen: boolean = false;\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {\r\n    // this.selected = this.items[0]; // default to first one\r\n  }\r\n}\r\n",
            "properties": [
                {
                    "name": "value",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "IOutlineSelectInputConfig",
            "id": "interface-IOutlineSelectInputConfig-d7534f1c348d740cc4e57c5904f70a94",
            "file": "src/app/shared/components/inputs/outline-select-input/outline-select-input.component.ts",
            "type": "interface",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\nexport interface IOutlineSelectInputConfig {\r\n  size: string;\r\n  label: string;\r\n  autocomplete: string;\r\n  options: string[];\r\n}\r\n\r\n@Component({\r\n  selector: 'brave-outline-select-input',\r\n  templateUrl: './outline-select-input.component.html',\r\n})\r\nexport class OutlineSelectInputComponent implements OnInit {\r\n  private _required: boolean = false;\r\n  private _asteriskOverride: boolean = false;\r\n  public selected: string | undefined;\r\n  public isOpen: boolean = false;\r\n\r\n  /**\r\n   * @param Config Object to pass in component params\r\n   * @param config.size 'sm', 'base', 'lg'\r\n   * @param config.label Label text (default: 'Input label')\r\n   * @param config.options select options to choose from\r\n   */\r\n  @Input() config: IOutlineSelectInputConfig = {\r\n    size: 'base',\r\n    label: 'Input label',\r\n    autocomplete: 'off',\r\n    options: ['one', 'two', 'three'],\r\n  };\r\n\r\n  /**\r\n   * @input Flag to make the input field required for form to be valid\r\n   */\r\n  @Input()\r\n  get required() {\r\n    return this._required;\r\n  }\r\n  set required(value: any) {\r\n    this._required = !!value;\r\n  }\r\n\r\n  /**\r\n   * @input Flag to override the display of an asterisk but still make it required\r\n   */\r\n  @Input()\r\n  get asteriskOverride() {\r\n    return this._asteriskOverride;\r\n  }\r\n  set asteriskOverride(value: any) {\r\n    this._asteriskOverride = !!value;\r\n  }\r\n\r\n  @Output() valueChanged: EventEmitter<any> = new EventEmitter();\r\n  @Output()\r\n  onComponentReady: EventEmitter<FormGroup> = new EventEmitter<FormGroup>();\r\n\r\n  public componentFormGroup: FormGroup = new FormBuilder().group({\r\n    input: [''],\r\n  });\r\n  public locked: boolean = false;\r\n  public hidden: boolean = false;\r\n\r\n  constructor(private fb: FormBuilder) {}\r\n\r\n  ngOnInit(): void {\r\n    const validators = [];\r\n    if (this.required) {\r\n      validators.push(Validators.required);\r\n    }\r\n    this.componentFormGroup = this.fb.group({\r\n      input: [this.config.label, validators], // default to first item in array\r\n    });\r\n    this.componentFormGroup.controls.input.valueChanges.subscribe((value) => {\r\n      this.valueChanged.emit(value);\r\n    });\r\n    this.onComponentReady.emit(this.componentFormGroup);\r\n  }\r\n\r\n  /**\r\n   * Toggles open and close select options\r\n   * @param e MouseEvent to stop propagation.\r\n   */\r\n  toggleOpen(e: MouseEvent): void {\r\n    e.stopPropagation();\r\n    this.isOpen = !this.isOpen;\r\n  }\r\n\r\n  /**\r\n   * Updates the form with the selected option value\r\n   * @param idx index of the select option clicked on\r\n   */\r\n  updateForm(idx: number): void {\r\n    this.componentFormGroup.setValue({ input: this.config.options[idx] });\r\n  }\r\n}\r\n",
            "properties": [
                {
                    "name": "autocomplete",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "label",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "options",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "size",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "IProgressStep",
            "id": "interface-IProgressStep-1e639b0664c76125e87f65fa04a97b7b",
            "file": "src/app/shared/components/progressbars/filled-checktext-progressbar/filled-checktext-progressbar.component.ts",
            "type": "interface",
            "sourceCode": "import { Component, Input, OnChanges, OnInit } from '@angular/core';\n\nexport interface IProgressStep {\n  id: number;\n  active: boolean;\n  complete: boolean;\n  name: string;\n}\nexport interface IFilledChecktextProgressbarConfig {\n  size: string;\n}\n\n@Component({\n  selector: 'brave-filled-checktext-progressbar',\n  templateUrl: './filled-checktext-progressbar.component.html',\n})\nexport class FilledChecktextProgressbarComponent {\n  @Input() config: IFilledChecktextProgressbarConfig = { size: 'base' };\n  @Input() steps: IProgressStep[] = [];\n  @Input() activatedStep: number = -1;\n  @Input() completedStep: number = -1;\n\n  constructor() {}\n}\n",
            "properties": [
                {
                    "name": "active",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "complete",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "id",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "name",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "ISubmenuItem",
            "id": "interface-ISubmenuItem-d421304dea5e99260627beff85fd68c0",
            "file": "src/app/shared/components/dropdowns/popdowns/menu-dropdown/menu-dropdown.component.ts",
            "type": "interface",
            "sourceCode": "import { Component, ElementRef, Input, OnInit, ViewChild } from '@angular/core';\r\nimport { createPopper } from '@popperjs/core';\r\n\r\nexport interface ISubmenuItem {\r\n  submenu: string;\r\n  route: string;\r\n  group?: string;\r\n  break?: boolean;\r\n}\r\nexport interface IMenuDropdown {\r\n  menu: string;\r\n  submenus?: ISubmenuItem[];\r\n}\r\n\r\n@Component({\r\n  selector: 'brave-menu-dropdown',\r\n  templateUrl: './menu-dropdown.component.html',\r\n})\r\nexport class MenuDropdownComponent implements OnInit {\r\n  @Input() config: IMenuDropdown = {\r\n    menu: 'Menu',\r\n    submenus: [\r\n      { submenu: 'Sub 1', route: '/submenu1', group: 'Group 1' },\r\n      { submenu: 'Sub 2', route: '/submenu2' },\r\n      { submenu: 'Sub 3', route: '/submenu3' },\r\n      { submenu: 'Sub 4', route: '/submenu4' },\r\n      { submenu: 'Sub 5', route: '/submenu5', break: true },\r\n      { submenu: 'Sub 6', route: '/submenu6', group: 'Group 2' },\r\n      { submenu: 'Sub 7', route: '/submenu7' },\r\n      { submenu: 'Sub 8', route: '/submenu8', break: true },\r\n      { submenu: 'Sub 9', route: '/submenu9', group: 'Group 3' },\r\n      { submenu: 'Sub 10', route: '/submenu10' },\r\n    ],\r\n  };\r\n  dropdownPopoverShow = false;\r\n  @ViewChild('btnDropdownRef', { static: false }) btnDropdownRef:\r\n    | ElementRef\r\n    | undefined;\r\n  @ViewChild('popoverDropdownRef', { static: false })\r\n  popoverDropdownRef: ElementRef | undefined;\r\n  ngOnInit() {}\r\n  toggleDropdown(event: { preventDefault: () => void }) {\r\n    event.preventDefault();\r\n    if (this.dropdownPopoverShow) {\r\n      this.dropdownPopoverShow = false;\r\n    } else {\r\n      this.dropdownPopoverShow = true;\r\n      this.createPoppper();\r\n    }\r\n  }\r\n  createPoppper() {\r\n    createPopper(\r\n      this.btnDropdownRef?.nativeElement,\r\n      this.popoverDropdownRef?.nativeElement,\r\n      {\r\n        placement: 'bottom-start',\r\n      }\r\n    );\r\n  }\r\n}\r\n",
            "properties": [
                {
                    "name": "break",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "group",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "route",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "submenu",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "ITransunionKBAAnswer",
            "id": "interface-ITransunionKBAAnswer-fd1517eee551eb1d0db6ea044565dbcc",
            "file": "src/app/shared/interfaces/tu-kba-questions.interface.ts",
            "type": "interface",
            "sourceCode": "export interface ITransunionKBAQuestions {\n  _declaration: {\n    _attributes: {\n      version: string;\n      encoding: string;\n    };\n  };\n  ChallengeConfigurationType: {\n    _attributes: {\n      'xmlns:xsd': string;\n      'xmlns:xsi': string;\n      xmlns: string;\n    };\n    RulesApp: {\n      _text: string;\n    };\n    CorrectAnswersNeeded: {\n      _text: string;\n    };\n    AnswerAttemptsAllowed: {\n      _text: string;\n    };\n    MultiChoiceQuestion: ITransunionKBAQuestion[];\n    ApplicantChallengeId: {\n      _text: string;\n    };\n    ApplicantId: {\n      _text: string;\n    };\n  };\n}\n\nexport interface ITransunionKBAQuestion {\n  QuestionType: {\n    _text: string;\n  };\n  SequenceNumber: {\n    _text: string;\n  };\n  LastChanceQuestion: {\n    _text: string;\n  };\n  FakeQuestion: {\n    _text: string;\n  };\n  FullQuestionText: {\n    _text: string;\n  };\n  KeyQuestionText: {\n    PromptDate: {\n      _text: string;\n    };\n  };\n  AnswerChoice: ITransunionKBAAnswer[];\n  Key: {\n    _text: string;\n  };\n  QuestionId: {\n    _text: string;\n  };\n}\n\nexport interface ITransunionKBAAnswer {\n  SequenceNumber: {\n    _text: string;\n  };\n  IsCorrectAnswer: {\n    _text: string;\n  };\n  AnswerChoiceText: {\n    _text: string;\n  };\n  Key: {\n    _text: string;\n  };\n  AnswerChoiceId: {\n    _text: string;\n  };\n}\n",
            "properties": [
                {
                    "name": "AnswerChoiceId",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 76
                },
                {
                    "name": "AnswerChoiceText",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 70
                },
                {
                    "name": "IsCorrectAnswer",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 67
                },
                {
                    "name": "Key",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 73
                },
                {
                    "name": "SequenceNumber",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 64
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "ITransunionKBAQuestion",
            "id": "interface-ITransunionKBAQuestion-fd1517eee551eb1d0db6ea044565dbcc",
            "file": "src/app/shared/interfaces/tu-kba-questions.interface.ts",
            "type": "interface",
            "sourceCode": "export interface ITransunionKBAQuestions {\n  _declaration: {\n    _attributes: {\n      version: string;\n      encoding: string;\n    };\n  };\n  ChallengeConfigurationType: {\n    _attributes: {\n      'xmlns:xsd': string;\n      'xmlns:xsi': string;\n      xmlns: string;\n    };\n    RulesApp: {\n      _text: string;\n    };\n    CorrectAnswersNeeded: {\n      _text: string;\n    };\n    AnswerAttemptsAllowed: {\n      _text: string;\n    };\n    MultiChoiceQuestion: ITransunionKBAQuestion[];\n    ApplicantChallengeId: {\n      _text: string;\n    };\n    ApplicantId: {\n      _text: string;\n    };\n  };\n}\n\nexport interface ITransunionKBAQuestion {\n  QuestionType: {\n    _text: string;\n  };\n  SequenceNumber: {\n    _text: string;\n  };\n  LastChanceQuestion: {\n    _text: string;\n  };\n  FakeQuestion: {\n    _text: string;\n  };\n  FullQuestionText: {\n    _text: string;\n  };\n  KeyQuestionText: {\n    PromptDate: {\n      _text: string;\n    };\n  };\n  AnswerChoice: ITransunionKBAAnswer[];\n  Key: {\n    _text: string;\n  };\n  QuestionId: {\n    _text: string;\n  };\n}\n\nexport interface ITransunionKBAAnswer {\n  SequenceNumber: {\n    _text: string;\n  };\n  IsCorrectAnswer: {\n    _text: string;\n  };\n  AnswerChoiceText: {\n    _text: string;\n  };\n  Key: {\n    _text: string;\n  };\n  AnswerChoiceId: {\n    _text: string;\n  };\n}\n",
            "properties": [
                {
                    "name": "AnswerChoice",
                    "type": "ITransunionKBAAnswer[]",
                    "optional": false,
                    "description": "",
                    "line": 54
                },
                {
                    "name": "FakeQuestion",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "FullQuestionText",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 46
                },
                {
                    "name": "Key",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 55
                },
                {
                    "name": "KeyQuestionText",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 49
                },
                {
                    "name": "LastChanceQuestion",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "QuestionId",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 58
                },
                {
                    "name": "QuestionType",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "SequenceNumber",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 37
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "ITransunionKBAQuestions",
            "id": "interface-ITransunionKBAQuestions-fd1517eee551eb1d0db6ea044565dbcc",
            "file": "src/app/shared/interfaces/tu-kba-questions.interface.ts",
            "type": "interface",
            "sourceCode": "export interface ITransunionKBAQuestions {\n  _declaration: {\n    _attributes: {\n      version: string;\n      encoding: string;\n    };\n  };\n  ChallengeConfigurationType: {\n    _attributes: {\n      'xmlns:xsd': string;\n      'xmlns:xsi': string;\n      xmlns: string;\n    };\n    RulesApp: {\n      _text: string;\n    };\n    CorrectAnswersNeeded: {\n      _text: string;\n    };\n    AnswerAttemptsAllowed: {\n      _text: string;\n    };\n    MultiChoiceQuestion: ITransunionKBAQuestion[];\n    ApplicantChallengeId: {\n      _text: string;\n    };\n    ApplicantId: {\n      _text: string;\n    };\n  };\n}\n\nexport interface ITransunionKBAQuestion {\n  QuestionType: {\n    _text: string;\n  };\n  SequenceNumber: {\n    _text: string;\n  };\n  LastChanceQuestion: {\n    _text: string;\n  };\n  FakeQuestion: {\n    _text: string;\n  };\n  FullQuestionText: {\n    _text: string;\n  };\n  KeyQuestionText: {\n    PromptDate: {\n      _text: string;\n    };\n  };\n  AnswerChoice: ITransunionKBAAnswer[];\n  Key: {\n    _text: string;\n  };\n  QuestionId: {\n    _text: string;\n  };\n}\n\nexport interface ITransunionKBAAnswer {\n  SequenceNumber: {\n    _text: string;\n  };\n  IsCorrectAnswer: {\n    _text: string;\n  };\n  AnswerChoiceText: {\n    _text: string;\n  };\n  Key: {\n    _text: string;\n  };\n  AnswerChoiceId: {\n    _text: string;\n  };\n}\n",
            "properties": [
                {
                    "name": "_declaration",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "ChallengeConfigurationType",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "NewUser",
            "id": "interface-NewUser-2aeb370e08af3ed63984f61c3b9b13c5",
            "file": "src/app/shared/services/auth/auth.service.ts",
            "type": "interface",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport Auth, { CognitoHostedUIIdentityProvider } from '@aws-amplify/auth';\nimport { Hub, ICredentials } from '@aws-amplify/core';\nimport { Subject, Observable, Subscription } from 'rxjs';\nimport {\n  CognitoUser,\n  CognitoUserSession,\n  ISignUpResult,\n} from 'amazon-cognito-identity-js';\nimport { SyncService } from '@shared/services/sync/sync.service';\nimport { Store } from '@ngxs/store';\nimport { Router } from '@angular/router';\n\nexport interface NewUser {\n  username: string;\n  password: string;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  private authState: Subject<CognitoUser | any> = new Subject<\n    CognitoUser | any\n  >();\n  authState$: Observable<CognitoUser | any> = this.authState.asObservable();\n\n  public static SIGN_IN = 'signIn';\n  public static SIGN_OUT = 'signOut';\n  public static FACEBOOK = CognitoHostedUIIdentityProvider.Facebook;\n  public static GOOGLE = CognitoHostedUIIdentityProvider.Google;\n\n  constructor(\n    private store: Store,\n    private sync: SyncService,\n    private router: Router\n  ) {\n    Hub.listen('auth', async (data) => {\n      const { channel, payload } = data;\n      switch (payload.event) {\n        case 'signIn':\n          this.authState.next(payload.data);\n          const creds: ICredentials = await this.getCredentials();\n          this.sync.hallmonitor(creds);\n          break;\n        case 'signOut':\n          // handle sign out\n          break;\n        default:\n          // do something by default\n          break;\n      }\n    });\n\n    Auth.currentAuthenticatedUser()\n      .then((user) => {\n        console.log('authenticated user');\n        this.authState.next(user);\n      })\n      .catch(() => console.log('Not signed in'));\n  }\n\n  /**\n   * This method is designed to help reload the user if the ID ever goes null\n   * will perform the following:\n   *  1. Get current credentials (if the token is still valid)\n   *  2. If no token available, and on a different page...go back to login\n   *  3. If on sign in or sign up...do nothing\n   * @returns\n   */\n  async reloadCredentials(): Promise<void> {\n    const creds = await this.getCredentials();\n    if (creds) {\n      await this.sync.hallmonitor(creds);\n    } else {\n      switch (this.router.url) {\n        case '/auth/signin':\n          break;\n        case '/auth/signup':\n          break;\n        case '/signin':\n          break;\n        case '/signin':\n          break;\n        default:\n          this.router.navigate(['/auth/signin']);\n          break;\n      }\n    }\n  }\n\n  /**\n   * Cognito sign up method\n   * @param {NewUser} user\n   * @returns\n   */\n  signUp(user: NewUser): Promise<ISignUpResult> {\n    return Auth.signUp({\n      username: user.username,\n      password: user.password,\n      attributes: {\n        email: user.username,\n      },\n    });\n  }\n\n  /**\n   * Cognito sign in method\n   * @param {string} username\n   * @param {string} password\n   * @returns\n   */\n  signIn(username: string, password: string): Promise<CognitoUser | any> {\n    return new Promise((resolve, reject) => {\n      Auth.signIn(username, password)\n        .then((user: CognitoUser | any) => {\n          resolve(user);\n        })\n        .catch((error: any) => reject(error));\n    });\n  }\n\n  /**\n   * Simple sign out method\n   * @returns\n   */\n  signOut(): Promise<any> {\n    return Auth.signOut();\n  }\n\n  /**\n   * Social signin (supports facebook and google)\n   * @param {CognitoHostedUIIdentityProvider} provider\n   * @returns\n   */\n  socialSignIn(\n    provider: CognitoHostedUIIdentityProvider\n  ): Promise<ICredentials> {\n    return Auth.federatedSignIn({\n      provider: provider,\n    });\n  }\n\n  /**\n   *\n   * @param {string} email\n   * @returns\n   */\n  resendSignUp(email: string): Promise<string> | undefined {\n    return email ? Auth.resendSignUp(email) : undefined;\n  }\n\n  /**\n   *\n   * @param email\n   * @param code\n   * @param pw\n   * @returns\n   */\n  forgotPasswordSubmit(\n    email: string,\n    code: string,\n    pw: string\n  ): Promise<void> | undefined {\n    return email\n      ? Auth.forgotPasswordSubmit(email.toLowerCase(), code, pw)\n      : undefined;\n  }\n\n  /**\n   *\n   * @returns\n   */\n  getCredentials(): Promise<ICredentials> {\n    return Auth.currentCredentials();\n  }\n\n  /**\n   *\n   * @returns\n   */\n  getCurrentAuthenticatedUser(): Promise<CognitoUser> {\n    return Auth.currentAuthenticatedUser();\n  }\n\n  /**\n   *\n   * @returns\n   */\n  getAuthState(): Observable<CognitoUser | any> {\n    return this.authState$;\n  }\n\n  /**\n   *\n   * @returns\n   */\n  refreshSession(): Promise<CognitoUserSession> {\n    return Auth.currentSession();\n  }\n\n  /**\n   *\n   * @param {CognitoUser} user\n   * @returns\n   */\n  async refreshAuthState(user?: CognitoUser): Promise<void> {\n    if (user) {\n      this.authState.next(user);\n      return;\n    }\n    try {\n      const user = await Auth.currentAuthenticatedUser();\n      this.authState.next(user);\n    } catch (err) {\n      const unconfirmed = await Auth.currentCredentials();\n      this.authState.next(null);\n    }\n  }\n\n  /**\n   *\n   */\n  async getAuthTokens(): Promise<string> {\n    try {\n      const user: CognitoUser = await Auth.currentAuthenticatedUser();\n      let session = user.getSignInUserSession();\n      return session ? session.getIdToken().getJwtToken() : '';\n    } catch (err) {\n      return '';\n    }\n  }\n\n  /**\n   *\n   */\n  async getAuthCredentials(): Promise<ICredentials | null> {\n    try {\n      const creds: ICredentials = await Auth.currentUserCredentials();\n      return creds;\n    } catch (err) {\n      return null;\n    }\n  }\n}\n",
            "properties": [
                {
                    "name": "password",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "username",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "OnboardingStep",
            "id": "interface-OnboardingStep-70b440fbfdfa5d3052dbafe93bf63d15",
            "file": "src/app/store/onboarding/onboarding.model.ts",
            "type": "interface",
            "sourceCode": "import { IProgressStep } from '@shared/components/progressbars/filled-checktext-progressbar/filled-checktext-progressbar.component';\nimport { OnboardingInput } from '@shared/services/aws/api.service';\n\nexport interface OnboardingStep extends IProgressStep {}\ntype typename = 'Onboarding';\nexport class OnboardingStateModel implements OnboardingInput {\n  lastActive: number = -1;\n  lastComplete: number = -1;\n  started?: boolean | null | undefined;\n}\n",
            "properties": [],
            "indexSignatures": [],
            "methods": [],
            "extends": "IProgressStep"
        },
        {
            "name": "SubscriptionResponse",
            "id": "interface-SubscriptionResponse-82bbe1fd97c634ea2395f63be6908318",
            "file": "src/app/shared/services/aws/api.service.ts",
            "type": "interface",
            "sourceCode": "import { Injectable } from \"@angular/core\";\nimport API, { graphqlOperation, GraphQLResult } from \"@aws-amplify/api-graphql\";\nimport { Observable } from \"zen-observable-ts\";\n\nexport interface SubscriptionResponse<T> {\n  value: GraphQLResult<T>;\n}\n\nexport type CreateAppDataInput = {\n  id?: string | null;\n  user: UserInput;\n  agencies: AgenciesInput;\n};\n\nexport type UserInput = {\n  id: string;\n  userAttributes?: UserAttributesInput | null;\n  onboarding?: OnboardingInput | null;\n};\n\nexport type UserAttributesInput = {\n  name?: NameInput | null;\n  address?: AddressInput | null;\n  phone?: PhoneInput | null;\n  dob?: DobInput | null;\n  ssn?: SsnInput | null;\n};\n\nexport type NameInput = {\n  first: string;\n  middle?: string | null;\n  last: string;\n};\n\nexport type AddressInput = {\n  addressOne: string;\n  addressTwo?: string | null;\n  city: string;\n  state: string;\n  zip: string;\n};\n\nexport type PhoneInput = {\n  primary: string;\n};\n\nexport type DobInput = {\n  year: string;\n  month: string;\n  day: string;\n};\n\nexport type SsnInput = {\n  lastfour: string;\n  full?: string | null;\n};\n\nexport type OnboardingInput = {\n  lastActive: number;\n  lastComplete: number;\n  started?: boolean | null;\n};\n\nexport type AgenciesInput = {\n  transunion?: TransunionInput | null;\n  equifax?: EquifaxInput | null;\n  experian?: ExperianInput | null;\n  currentRawQuestions?: string | null;\n};\n\nexport type TransunionInput = {\n  authenticated?: boolean | null;\n  indicativeEnrichmentSuccess?: boolean | null;\n  getAuthenticationQuestionsSuccess?: boolean | null;\n};\n\nexport type EquifaxInput = {\n  authenticated?: boolean | null;\n};\n\nexport type ExperianInput = {\n  authenticated?: boolean | null;\n};\n\nexport type ModelAppDataConditionInput = {\n  and?: Array<ModelAppDataConditionInput | null> | null;\n  or?: Array<ModelAppDataConditionInput | null> | null;\n  not?: ModelAppDataConditionInput | null;\n};\n\nexport type AppData = {\n  __typename: \"AppData\";\n  id?: string;\n  user?: User;\n  agencies?: Agencies;\n  createdAt?: string;\n  updatedAt?: string;\n};\n\nexport type User = {\n  __typename: \"User\";\n  id?: string;\n  userAttributes?: UserAttributes;\n  onboarding?: Onboarding;\n};\n\nexport type UserAttributes = {\n  __typename: \"UserAttributes\";\n  name?: Name;\n  address?: Address;\n  phone?: Phone;\n  dob?: Dob;\n  ssn?: Ssn;\n};\n\nexport type Name = {\n  __typename: \"Name\";\n  first?: string;\n  middle?: string | null;\n  last?: string;\n};\n\nexport type Address = {\n  __typename: \"Address\";\n  addressOne?: string;\n  addressTwo?: string | null;\n  city?: string;\n  state?: string;\n  zip?: string;\n};\n\nexport type Phone = {\n  __typename: \"Phone\";\n  primary?: string;\n};\n\nexport type Dob = {\n  __typename: \"Dob\";\n  year?: string;\n  month?: string;\n  day?: string;\n};\n\nexport type Ssn = {\n  __typename: \"Ssn\";\n  lastfour?: string;\n  full?: string | null;\n};\n\nexport type Onboarding = {\n  __typename: \"Onboarding\";\n  lastActive?: number;\n  lastComplete?: number;\n  started?: boolean | null;\n};\n\nexport type Agencies = {\n  __typename: \"Agencies\";\n  transunion?: Transunion;\n  equifax?: Equifax;\n  experian?: Experian;\n  currentRawQuestions?: string | null;\n};\n\nexport type Transunion = {\n  __typename: \"Transunion\";\n  authenticated?: boolean | null;\n  indicativeEnrichmentSuccess?: boolean | null;\n  getAuthenticationQuestionsSuccess?: boolean | null;\n};\n\nexport type Equifax = {\n  __typename: \"Equifax\";\n  authenticated?: boolean | null;\n};\n\nexport type Experian = {\n  __typename: \"Experian\";\n  authenticated?: boolean | null;\n};\n\nexport type UpdateAppDataInput = {\n  id: string;\n  user?: UserInput | null;\n  agencies?: AgenciesInput | null;\n};\n\nexport type DeleteAppDataInput = {\n  id: string;\n};\n\nexport type ModelAppDataFilterInput = {\n  id?: ModelIDInput | null;\n  and?: Array<ModelAppDataFilterInput | null> | null;\n  or?: Array<ModelAppDataFilterInput | null> | null;\n  not?: ModelAppDataFilterInput | null;\n};\n\nexport type ModelIDInput = {\n  ne?: string | null;\n  eq?: string | null;\n  le?: string | null;\n  lt?: string | null;\n  ge?: string | null;\n  gt?: string | null;\n  contains?: string | null;\n  notContains?: string | null;\n  between?: Array<string | null> | null;\n  beginsWith?: string | null;\n  attributeExists?: boolean | null;\n  attributeType?: ModelAttributeTypes | null;\n  size?: ModelSizeInput | null;\n};\n\nexport enum ModelAttributeTypes {\n  binary = \"binary\",\n  binarySet = \"binarySet\",\n  bool = \"bool\",\n  list = \"list\",\n  map = \"map\",\n  number = \"number\",\n  numberSet = \"numberSet\",\n  string = \"string\",\n  stringSet = \"stringSet\",\n  _null = \"_null\"\n}\n\nexport type ModelSizeInput = {\n  ne?: number | null;\n  eq?: number | null;\n  le?: number | null;\n  lt?: number | null;\n  ge?: number | null;\n  gt?: number | null;\n  between?: Array<number | null> | null;\n};\n\nexport type ModelAppDataConnection = {\n  __typename: \"ModelAppDataConnection\";\n  items?: Array<AppData | null> | null;\n  nextToken?: string | null;\n};\n\nexport type CreateAppDataMutation = {\n  __typename: \"AppData\";\n  id: string;\n  user: {\n    __typename: \"User\";\n    id: string;\n    userAttributes?: {\n      __typename: \"UserAttributes\";\n      name?: {\n        __typename: \"Name\";\n        first: string;\n        middle?: string | null;\n        last: string;\n      } | null;\n      address?: {\n        __typename: \"Address\";\n        addressOne: string;\n        addressTwo?: string | null;\n        city: string;\n        state: string;\n        zip: string;\n      } | null;\n      phone?: {\n        __typename: \"Phone\";\n        primary: string;\n      } | null;\n      dob?: {\n        __typename: \"Dob\";\n        year: string;\n        month: string;\n        day: string;\n      } | null;\n      ssn?: {\n        __typename: \"Ssn\";\n        lastfour: string;\n        full?: string | null;\n      } | null;\n    } | null;\n    onboarding?: {\n      __typename: \"Onboarding\";\n      lastActive: number;\n      lastComplete: number;\n      started?: boolean | null;\n    } | null;\n  };\n  agencies: {\n    __typename: \"Agencies\";\n    transunion?: {\n      __typename: \"Transunion\";\n      authenticated?: boolean | null;\n      indicativeEnrichmentSuccess?: boolean | null;\n      getAuthenticationQuestionsSuccess?: boolean | null;\n    } | null;\n    equifax?: {\n      __typename: \"Equifax\";\n      authenticated?: boolean | null;\n    } | null;\n    experian?: {\n      __typename: \"Experian\";\n      authenticated?: boolean | null;\n    } | null;\n    currentRawQuestions?: string | null;\n  };\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type UpdateAppDataMutation = {\n  __typename: \"AppData\";\n  id: string;\n  user: {\n    __typename: \"User\";\n    id: string;\n    userAttributes?: {\n      __typename: \"UserAttributes\";\n      name?: {\n        __typename: \"Name\";\n        first: string;\n        middle?: string | null;\n        last: string;\n      } | null;\n      address?: {\n        __typename: \"Address\";\n        addressOne: string;\n        addressTwo?: string | null;\n        city: string;\n        state: string;\n        zip: string;\n      } | null;\n      phone?: {\n        __typename: \"Phone\";\n        primary: string;\n      } | null;\n      dob?: {\n        __typename: \"Dob\";\n        year: string;\n        month: string;\n        day: string;\n      } | null;\n      ssn?: {\n        __typename: \"Ssn\";\n        lastfour: string;\n        full?: string | null;\n      } | null;\n    } | null;\n    onboarding?: {\n      __typename: \"Onboarding\";\n      lastActive: number;\n      lastComplete: number;\n      started?: boolean | null;\n    } | null;\n  };\n  agencies: {\n    __typename: \"Agencies\";\n    transunion?: {\n      __typename: \"Transunion\";\n      authenticated?: boolean | null;\n      indicativeEnrichmentSuccess?: boolean | null;\n      getAuthenticationQuestionsSuccess?: boolean | null;\n    } | null;\n    equifax?: {\n      __typename: \"Equifax\";\n      authenticated?: boolean | null;\n    } | null;\n    experian?: {\n      __typename: \"Experian\";\n      authenticated?: boolean | null;\n    } | null;\n    currentRawQuestions?: string | null;\n  };\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type DeleteAppDataMutation = {\n  __typename: \"AppData\";\n  id: string;\n  user: {\n    __typename: \"User\";\n    id: string;\n    userAttributes?: {\n      __typename: \"UserAttributes\";\n      name?: {\n        __typename: \"Name\";\n        first: string;\n        middle?: string | null;\n        last: string;\n      } | null;\n      address?: {\n        __typename: \"Address\";\n        addressOne: string;\n        addressTwo?: string | null;\n        city: string;\n        state: string;\n        zip: string;\n      } | null;\n      phone?: {\n        __typename: \"Phone\";\n        primary: string;\n      } | null;\n      dob?: {\n        __typename: \"Dob\";\n        year: string;\n        month: string;\n        day: string;\n      } | null;\n      ssn?: {\n        __typename: \"Ssn\";\n        lastfour: string;\n        full?: string | null;\n      } | null;\n    } | null;\n    onboarding?: {\n      __typename: \"Onboarding\";\n      lastActive: number;\n      lastComplete: number;\n      started?: boolean | null;\n    } | null;\n  };\n  agencies: {\n    __typename: \"Agencies\";\n    transunion?: {\n      __typename: \"Transunion\";\n      authenticated?: boolean | null;\n      indicativeEnrichmentSuccess?: boolean | null;\n      getAuthenticationQuestionsSuccess?: boolean | null;\n    } | null;\n    equifax?: {\n      __typename: \"Equifax\";\n      authenticated?: boolean | null;\n    } | null;\n    experian?: {\n      __typename: \"Experian\";\n      authenticated?: boolean | null;\n    } | null;\n    currentRawQuestions?: string | null;\n  };\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type GetAppDataQuery = {\n  __typename: \"AppData\";\n  id: string;\n  user: {\n    __typename: \"User\";\n    id: string;\n    userAttributes?: {\n      __typename: \"UserAttributes\";\n      name?: {\n        __typename: \"Name\";\n        first: string;\n        middle?: string | null;\n        last: string;\n      } | null;\n      address?: {\n        __typename: \"Address\";\n        addressOne: string;\n        addressTwo?: string | null;\n        city: string;\n        state: string;\n        zip: string;\n      } | null;\n      phone?: {\n        __typename: \"Phone\";\n        primary: string;\n      } | null;\n      dob?: {\n        __typename: \"Dob\";\n        year: string;\n        month: string;\n        day: string;\n      } | null;\n      ssn?: {\n        __typename: \"Ssn\";\n        lastfour: string;\n        full?: string | null;\n      } | null;\n    } | null;\n    onboarding?: {\n      __typename: \"Onboarding\";\n      lastActive: number;\n      lastComplete: number;\n      started?: boolean | null;\n    } | null;\n  };\n  agencies: {\n    __typename: \"Agencies\";\n    transunion?: {\n      __typename: \"Transunion\";\n      authenticated?: boolean | null;\n      indicativeEnrichmentSuccess?: boolean | null;\n      getAuthenticationQuestionsSuccess?: boolean | null;\n    } | null;\n    equifax?: {\n      __typename: \"Equifax\";\n      authenticated?: boolean | null;\n    } | null;\n    experian?: {\n      __typename: \"Experian\";\n      authenticated?: boolean | null;\n    } | null;\n    currentRawQuestions?: string | null;\n  };\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type ListAppDatasQuery = {\n  __typename: \"ModelAppDataConnection\";\n  items?: Array<{\n    __typename: \"AppData\";\n    id: string;\n    user: {\n      __typename: \"User\";\n      id: string;\n      userAttributes?: {\n        __typename: \"UserAttributes\";\n        name?: {\n          __typename: \"Name\";\n          first: string;\n          middle?: string | null;\n          last: string;\n        } | null;\n        address?: {\n          __typename: \"Address\";\n          addressOne: string;\n          addressTwo?: string | null;\n          city: string;\n          state: string;\n          zip: string;\n        } | null;\n        phone?: {\n          __typename: \"Phone\";\n          primary: string;\n        } | null;\n        dob?: {\n          __typename: \"Dob\";\n          year: string;\n          month: string;\n          day: string;\n        } | null;\n        ssn?: {\n          __typename: \"Ssn\";\n          lastfour: string;\n          full?: string | null;\n        } | null;\n      } | null;\n      onboarding?: {\n        __typename: \"Onboarding\";\n        lastActive: number;\n        lastComplete: number;\n        started?: boolean | null;\n      } | null;\n    };\n    agencies: {\n      __typename: \"Agencies\";\n      transunion?: {\n        __typename: \"Transunion\";\n        authenticated?: boolean | null;\n        indicativeEnrichmentSuccess?: boolean | null;\n        getAuthenticationQuestionsSuccess?: boolean | null;\n      } | null;\n      equifax?: {\n        __typename: \"Equifax\";\n        authenticated?: boolean | null;\n      } | null;\n      experian?: {\n        __typename: \"Experian\";\n        authenticated?: boolean | null;\n      } | null;\n      currentRawQuestions?: string | null;\n    };\n    createdAt: string;\n    updatedAt: string;\n  } | null> | null;\n  nextToken?: string | null;\n};\n\nexport type OnCreateAppDataSubscription = {\n  __typename: \"AppData\";\n  id: string;\n  user: {\n    __typename: \"User\";\n    id: string;\n    userAttributes?: {\n      __typename: \"UserAttributes\";\n      name?: {\n        __typename: \"Name\";\n        first: string;\n        middle?: string | null;\n        last: string;\n      } | null;\n      address?: {\n        __typename: \"Address\";\n        addressOne: string;\n        addressTwo?: string | null;\n        city: string;\n        state: string;\n        zip: string;\n      } | null;\n      phone?: {\n        __typename: \"Phone\";\n        primary: string;\n      } | null;\n      dob?: {\n        __typename: \"Dob\";\n        year: string;\n        month: string;\n        day: string;\n      } | null;\n      ssn?: {\n        __typename: \"Ssn\";\n        lastfour: string;\n        full?: string | null;\n      } | null;\n    } | null;\n    onboarding?: {\n      __typename: \"Onboarding\";\n      lastActive: number;\n      lastComplete: number;\n      started?: boolean | null;\n    } | null;\n  };\n  agencies: {\n    __typename: \"Agencies\";\n    transunion?: {\n      __typename: \"Transunion\";\n      authenticated?: boolean | null;\n      indicativeEnrichmentSuccess?: boolean | null;\n      getAuthenticationQuestionsSuccess?: boolean | null;\n    } | null;\n    equifax?: {\n      __typename: \"Equifax\";\n      authenticated?: boolean | null;\n    } | null;\n    experian?: {\n      __typename: \"Experian\";\n      authenticated?: boolean | null;\n    } | null;\n    currentRawQuestions?: string | null;\n  };\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type OnUpdateAppDataSubscription = {\n  __typename: \"AppData\";\n  id: string;\n  user: {\n    __typename: \"User\";\n    id: string;\n    userAttributes?: {\n      __typename: \"UserAttributes\";\n      name?: {\n        __typename: \"Name\";\n        first: string;\n        middle?: string | null;\n        last: string;\n      } | null;\n      address?: {\n        __typename: \"Address\";\n        addressOne: string;\n        addressTwo?: string | null;\n        city: string;\n        state: string;\n        zip: string;\n      } | null;\n      phone?: {\n        __typename: \"Phone\";\n        primary: string;\n      } | null;\n      dob?: {\n        __typename: \"Dob\";\n        year: string;\n        month: string;\n        day: string;\n      } | null;\n      ssn?: {\n        __typename: \"Ssn\";\n        lastfour: string;\n        full?: string | null;\n      } | null;\n    } | null;\n    onboarding?: {\n      __typename: \"Onboarding\";\n      lastActive: number;\n      lastComplete: number;\n      started?: boolean | null;\n    } | null;\n  };\n  agencies: {\n    __typename: \"Agencies\";\n    transunion?: {\n      __typename: \"Transunion\";\n      authenticated?: boolean | null;\n      indicativeEnrichmentSuccess?: boolean | null;\n      getAuthenticationQuestionsSuccess?: boolean | null;\n    } | null;\n    equifax?: {\n      __typename: \"Equifax\";\n      authenticated?: boolean | null;\n    } | null;\n    experian?: {\n      __typename: \"Experian\";\n      authenticated?: boolean | null;\n    } | null;\n    currentRawQuestions?: string | null;\n  };\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type OnDeleteAppDataSubscription = {\n  __typename: \"AppData\";\n  id: string;\n  user: {\n    __typename: \"User\";\n    id: string;\n    userAttributes?: {\n      __typename: \"UserAttributes\";\n      name?: {\n        __typename: \"Name\";\n        first: string;\n        middle?: string | null;\n        last: string;\n      } | null;\n      address?: {\n        __typename: \"Address\";\n        addressOne: string;\n        addressTwo?: string | null;\n        city: string;\n        state: string;\n        zip: string;\n      } | null;\n      phone?: {\n        __typename: \"Phone\";\n        primary: string;\n      } | null;\n      dob?: {\n        __typename: \"Dob\";\n        year: string;\n        month: string;\n        day: string;\n      } | null;\n      ssn?: {\n        __typename: \"Ssn\";\n        lastfour: string;\n        full?: string | null;\n      } | null;\n    } | null;\n    onboarding?: {\n      __typename: \"Onboarding\";\n      lastActive: number;\n      lastComplete: number;\n      started?: boolean | null;\n    } | null;\n  };\n  agencies: {\n    __typename: \"Agencies\";\n    transunion?: {\n      __typename: \"Transunion\";\n      authenticated?: boolean | null;\n      indicativeEnrichmentSuccess?: boolean | null;\n      getAuthenticationQuestionsSuccess?: boolean | null;\n    } | null;\n    equifax?: {\n      __typename: \"Equifax\";\n      authenticated?: boolean | null;\n    } | null;\n    experian?: {\n      __typename: \"Experian\";\n      authenticated?: boolean | null;\n    } | null;\n    currentRawQuestions?: string | null;\n  };\n  createdAt: string;\n  updatedAt: string;\n};\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class APIService {\n  async CreateAppData(\n    input: CreateAppDataInput,\n    condition?: ModelAppDataConditionInput\n  ): Promise<CreateAppDataMutation> {\n    const statement = `mutation CreateAppData($input: CreateAppDataInput!, $condition: ModelAppDataConditionInput) {\n        createAppData(input: $input, condition: $condition) {\n          __typename\n          id\n          user {\n            __typename\n            id\n            userAttributes {\n              __typename\n              name {\n                __typename\n                first\n                middle\n                last\n              }\n              address {\n                __typename\n                addressOne\n                addressTwo\n                city\n                state\n                zip\n              }\n              phone {\n                __typename\n                primary\n              }\n              dob {\n                __typename\n                year\n                month\n                day\n              }\n              ssn {\n                __typename\n                lastfour\n                full\n              }\n            }\n            onboarding {\n              __typename\n              lastActive\n              lastComplete\n              started\n            }\n          }\n          agencies {\n            __typename\n            transunion {\n              __typename\n              authenticated\n              indicativeEnrichmentSuccess\n              getAuthenticationQuestionsSuccess\n            }\n            equifax {\n              __typename\n              authenticated\n            }\n            experian {\n              __typename\n              authenticated\n            }\n            currentRawQuestions\n          }\n          createdAt\n          updatedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      input\n    };\n    if (condition) {\n      gqlAPIServiceArguments.condition = condition;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return <CreateAppDataMutation>response.data.createAppData;\n  }\n  async UpdateAppData(\n    input: UpdateAppDataInput,\n    condition?: ModelAppDataConditionInput\n  ): Promise<UpdateAppDataMutation> {\n    const statement = `mutation UpdateAppData($input: UpdateAppDataInput!, $condition: ModelAppDataConditionInput) {\n        updateAppData(input: $input, condition: $condition) {\n          __typename\n          id\n          user {\n            __typename\n            id\n            userAttributes {\n              __typename\n              name {\n                __typename\n                first\n                middle\n                last\n              }\n              address {\n                __typename\n                addressOne\n                addressTwo\n                city\n                state\n                zip\n              }\n              phone {\n                __typename\n                primary\n              }\n              dob {\n                __typename\n                year\n                month\n                day\n              }\n              ssn {\n                __typename\n                lastfour\n                full\n              }\n            }\n            onboarding {\n              __typename\n              lastActive\n              lastComplete\n              started\n            }\n          }\n          agencies {\n            __typename\n            transunion {\n              __typename\n              authenticated\n              indicativeEnrichmentSuccess\n              getAuthenticationQuestionsSuccess\n            }\n            equifax {\n              __typename\n              authenticated\n            }\n            experian {\n              __typename\n              authenticated\n            }\n            currentRawQuestions\n          }\n          createdAt\n          updatedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      input\n    };\n    if (condition) {\n      gqlAPIServiceArguments.condition = condition;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return <UpdateAppDataMutation>response.data.updateAppData;\n  }\n  async DeleteAppData(\n    input: DeleteAppDataInput,\n    condition?: ModelAppDataConditionInput\n  ): Promise<DeleteAppDataMutation> {\n    const statement = `mutation DeleteAppData($input: DeleteAppDataInput!, $condition: ModelAppDataConditionInput) {\n        deleteAppData(input: $input, condition: $condition) {\n          __typename\n          id\n          user {\n            __typename\n            id\n            userAttributes {\n              __typename\n              name {\n                __typename\n                first\n                middle\n                last\n              }\n              address {\n                __typename\n                addressOne\n                addressTwo\n                city\n                state\n                zip\n              }\n              phone {\n                __typename\n                primary\n              }\n              dob {\n                __typename\n                year\n                month\n                day\n              }\n              ssn {\n                __typename\n                lastfour\n                full\n              }\n            }\n            onboarding {\n              __typename\n              lastActive\n              lastComplete\n              started\n            }\n          }\n          agencies {\n            __typename\n            transunion {\n              __typename\n              authenticated\n              indicativeEnrichmentSuccess\n              getAuthenticationQuestionsSuccess\n            }\n            equifax {\n              __typename\n              authenticated\n            }\n            experian {\n              __typename\n              authenticated\n            }\n            currentRawQuestions\n          }\n          createdAt\n          updatedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      input\n    };\n    if (condition) {\n      gqlAPIServiceArguments.condition = condition;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return <DeleteAppDataMutation>response.data.deleteAppData;\n  }\n  async Transunion(action: string, message: string): Promise<string | null> {\n    const statement = `query Transunion($action: String!, $message: String!) {\n        transunion(action: $action, message: $message)\n      }`;\n    const gqlAPIServiceArguments: any = {\n      action,\n      message\n    };\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return <string | null>response.data.transunion;\n  }\n  async GetAppData(id: string): Promise<GetAppDataQuery> {\n    const statement = `query GetAppData($id: ID!) {\n        getAppData(id: $id) {\n          __typename\n          id\n          user {\n            __typename\n            id\n            userAttributes {\n              __typename\n              name {\n                __typename\n                first\n                middle\n                last\n              }\n              address {\n                __typename\n                addressOne\n                addressTwo\n                city\n                state\n                zip\n              }\n              phone {\n                __typename\n                primary\n              }\n              dob {\n                __typename\n                year\n                month\n                day\n              }\n              ssn {\n                __typename\n                lastfour\n                full\n              }\n            }\n            onboarding {\n              __typename\n              lastActive\n              lastComplete\n              started\n            }\n          }\n          agencies {\n            __typename\n            transunion {\n              __typename\n              authenticated\n              indicativeEnrichmentSuccess\n              getAuthenticationQuestionsSuccess\n            }\n            equifax {\n              __typename\n              authenticated\n            }\n            experian {\n              __typename\n              authenticated\n            }\n            currentRawQuestions\n          }\n          createdAt\n          updatedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      id\n    };\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return <GetAppDataQuery>response.data.getAppData;\n  }\n  async ListAppDatas(\n    filter?: ModelAppDataFilterInput,\n    limit?: number,\n    nextToken?: string\n  ): Promise<ListAppDatasQuery> {\n    const statement = `query ListAppDatas($filter: ModelAppDataFilterInput, $limit: Int, $nextToken: String) {\n        listAppDatas(filter: $filter, limit: $limit, nextToken: $nextToken) {\n          __typename\n          items {\n            __typename\n            id\n            user {\n              __typename\n              id\n              userAttributes {\n                __typename\n                name {\n                  __typename\n                  first\n                  middle\n                  last\n                }\n                address {\n                  __typename\n                  addressOne\n                  addressTwo\n                  city\n                  state\n                  zip\n                }\n                phone {\n                  __typename\n                  primary\n                }\n                dob {\n                  __typename\n                  year\n                  month\n                  day\n                }\n                ssn {\n                  __typename\n                  lastfour\n                  full\n                }\n              }\n              onboarding {\n                __typename\n                lastActive\n                lastComplete\n                started\n              }\n            }\n            agencies {\n              __typename\n              transunion {\n                __typename\n                authenticated\n                indicativeEnrichmentSuccess\n                getAuthenticationQuestionsSuccess\n              }\n              equifax {\n                __typename\n                authenticated\n              }\n              experian {\n                __typename\n                authenticated\n              }\n              currentRawQuestions\n            }\n            createdAt\n            updatedAt\n          }\n          nextToken\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {};\n    if (filter) {\n      gqlAPIServiceArguments.filter = filter;\n    }\n    if (limit) {\n      gqlAPIServiceArguments.limit = limit;\n    }\n    if (nextToken) {\n      gqlAPIServiceArguments.nextToken = nextToken;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return <ListAppDatasQuery>response.data.listAppDatas;\n  }\n  OnCreateAppDataListener: Observable<\n    SubscriptionResponse<OnCreateAppDataSubscription>\n  > = API.graphql(\n    graphqlOperation(\n      `subscription OnCreateAppData {\n        onCreateAppData {\n          __typename\n          id\n          user {\n            __typename\n            id\n            userAttributes {\n              __typename\n              name {\n                __typename\n                first\n                middle\n                last\n              }\n              address {\n                __typename\n                addressOne\n                addressTwo\n                city\n                state\n                zip\n              }\n              phone {\n                __typename\n                primary\n              }\n              dob {\n                __typename\n                year\n                month\n                day\n              }\n              ssn {\n                __typename\n                lastfour\n                full\n              }\n            }\n            onboarding {\n              __typename\n              lastActive\n              lastComplete\n              started\n            }\n          }\n          agencies {\n            __typename\n            transunion {\n              __typename\n              authenticated\n              indicativeEnrichmentSuccess\n              getAuthenticationQuestionsSuccess\n            }\n            equifax {\n              __typename\n              authenticated\n            }\n            experian {\n              __typename\n              authenticated\n            }\n            currentRawQuestions\n          }\n          createdAt\n          updatedAt\n        }\n      }`\n    )\n  ) as Observable<SubscriptionResponse<OnCreateAppDataSubscription>>;\n\n  OnUpdateAppDataListener: Observable<\n    SubscriptionResponse<OnUpdateAppDataSubscription>\n  > = API.graphql(\n    graphqlOperation(\n      `subscription OnUpdateAppData {\n        onUpdateAppData {\n          __typename\n          id\n          user {\n            __typename\n            id\n            userAttributes {\n              __typename\n              name {\n                __typename\n                first\n                middle\n                last\n              }\n              address {\n                __typename\n                addressOne\n                addressTwo\n                city\n                state\n                zip\n              }\n              phone {\n                __typename\n                primary\n              }\n              dob {\n                __typename\n                year\n                month\n                day\n              }\n              ssn {\n                __typename\n                lastfour\n                full\n              }\n            }\n            onboarding {\n              __typename\n              lastActive\n              lastComplete\n              started\n            }\n          }\n          agencies {\n            __typename\n            transunion {\n              __typename\n              authenticated\n              indicativeEnrichmentSuccess\n              getAuthenticationQuestionsSuccess\n            }\n            equifax {\n              __typename\n              authenticated\n            }\n            experian {\n              __typename\n              authenticated\n            }\n            currentRawQuestions\n          }\n          createdAt\n          updatedAt\n        }\n      }`\n    )\n  ) as Observable<SubscriptionResponse<OnUpdateAppDataSubscription>>;\n\n  OnDeleteAppDataListener: Observable<\n    SubscriptionResponse<OnDeleteAppDataSubscription>\n  > = API.graphql(\n    graphqlOperation(\n      `subscription OnDeleteAppData {\n        onDeleteAppData {\n          __typename\n          id\n          user {\n            __typename\n            id\n            userAttributes {\n              __typename\n              name {\n                __typename\n                first\n                middle\n                last\n              }\n              address {\n                __typename\n                addressOne\n                addressTwo\n                city\n                state\n                zip\n              }\n              phone {\n                __typename\n                primary\n              }\n              dob {\n                __typename\n                year\n                month\n                day\n              }\n              ssn {\n                __typename\n                lastfour\n                full\n              }\n            }\n            onboarding {\n              __typename\n              lastActive\n              lastComplete\n              started\n            }\n          }\n          agencies {\n            __typename\n            transunion {\n              __typename\n              authenticated\n              indicativeEnrichmentSuccess\n              getAuthenticationQuestionsSuccess\n            }\n            equifax {\n              __typename\n              authenticated\n            }\n            experian {\n              __typename\n              authenticated\n            }\n            currentRawQuestions\n          }\n          createdAt\n          updatedAt\n        }\n      }`\n    )\n  ) as Observable<SubscriptionResponse<OnDeleteAppDataSubscription>>;\n}\n",
            "properties": [
                {
                    "name": "value",
                    "type": "GraphQLResult<T>",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        }
    ],
    "injectables": [
        {
            "name": "AgenciesState",
            "id": "injectable-AgenciesState-0aa026f6c9a548ebfb7fae5368bde4e2",
            "file": "src/app/store/agencies/agencies.state.ts",
            "properties": [],
            "methods": [
                {
                    "name": "addAgencies",
                    "args": [
                        {
                            "name": "ctx",
                            "type": "StateContext<AgenciesStateModel>"
                        },
                        {
                            "type": "AgenciesActions.Add"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "decorators": [
                        {
                            "name": "Action",
                            "stringifiedArguments": "AgenciesActions.Add"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "ctx",
                            "type": "StateContext<AgenciesStateModel>",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "type": "AgenciesActions.Add",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "deleteUser",
                    "args": [
                        {
                            "name": "ctx",
                            "type": "StateContext<AgenciesStateModel>"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35,
                    "decorators": [
                        {
                            "name": "Action",
                            "stringifiedArguments": "AgenciesActions.Delete"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "ctx",
                            "type": "StateContext<AgenciesStateModel>",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateAgencies",
                    "args": [
                        {
                            "name": "ctx",
                            "type": "StateContext<AgenciesStateModel>"
                        },
                        {
                            "type": "AgenciesActions.Edit"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "decorators": [
                        {
                            "name": "Action",
                            "stringifiedArguments": "AgenciesActions.Edit"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "ctx",
                            "type": "StateContext<AgenciesStateModel>",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "type": "AgenciesActions.Edit",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateQuestions",
                    "args": [
                        {
                            "name": "ctx",
                            "type": "StateContext<AgenciesStateModel>"
                        },
                        {
                            "type": "AgenciesActions.EditQuestions"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 43,
                    "decorators": [
                        {
                            "name": "Action",
                            "stringifiedArguments": "AgenciesActions.EditQuestions"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "ctx",
                            "type": "StateContext<AgenciesStateModel>",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "type": "AgenciesActions.EditQuestions",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "description": "",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { State, Action, StateContext } from '@ngxs/store';\nimport { AgenciesStateModel } from '@store/agencies/agencies.model';\nimport * as AgenciesActions from '@store/agencies/agencies.actions';\n\n@State<AgenciesStateModel>({\n  name: 'agencies',\n  defaults: {},\n})\n@Injectable()\nexport class AgenciesState {\n  constructor() {}\n\n  @Action(AgenciesActions.Add)\n  addAgencies(\n    ctx: StateContext<AgenciesStateModel>,\n    { payload }: AgenciesActions.Add\n  ) {\n    ctx.patchState({\n      ...payload,\n    });\n  }\n\n  @Action(AgenciesActions.Edit)\n  updateAgencies(\n    ctx: StateContext<AgenciesStateModel>,\n    { payload }: AgenciesActions.Edit\n  ) {\n    ctx.patchState({\n      ...payload,\n    });\n  }\n\n  @Action(AgenciesActions.Delete)\n  deleteUser(ctx: StateContext<AgenciesStateModel>) {\n    const payload = new AgenciesStateModel();\n    ctx.patchState({\n      ...payload,\n    });\n  }\n\n  @Action(AgenciesActions.EditQuestions)\n  updateQuestions(\n    ctx: StateContext<AgenciesStateModel>,\n    { payload }: AgenciesActions.EditQuestions\n  ) {\n    ctx.patchState({\n      ...payload,\n    });\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 11
            },
            "type": "injectable"
        },
        {
            "name": "APIService",
            "id": "injectable-APIService-82bbe1fd97c634ea2395f63be6908318",
            "file": "src/app/shared/services/aws/api.service.ts",
            "properties": [
                {
                    "name": "OnCreateAppDataListener",
                    "defaultValue": "API.graphql(\n    graphqlOperation(\n      `subscription OnCreateAppData {\n        onCreateAppData {\n          __typename\n          id\n          user {\n            __typename\n            id\n            userAttributes {\n              __typename\n              name {\n                __typename\n                first\n                middle\n                last\n              }\n              address {\n                __typename\n                addressOne\n                addressTwo\n                city\n                state\n                zip\n              }\n              phone {\n                __typename\n                primary\n              }\n              dob {\n                __typename\n                year\n                month\n                day\n              }\n              ssn {\n                __typename\n                lastfour\n                full\n              }\n            }\n            onboarding {\n              __typename\n              lastActive\n              lastComplete\n              started\n            }\n          }\n          agencies {\n            __typename\n            transunion {\n              __typename\n              authenticated\n              indicativeEnrichmentSuccess\n              getAuthenticationQuestionsSuccess\n            }\n            equifax {\n              __typename\n              authenticated\n            }\n            experian {\n              __typename\n              authenticated\n            }\n            currentRawQuestions\n          }\n          createdAt\n          updatedAt\n        }\n      }`\n    )\n  ) as Observable<SubscriptionResponse<OnCreateAppDataSubscription>>",
                    "type": "Observable<SubscriptionResponse<OnCreateAppDataSubscription>>",
                    "optional": false,
                    "description": "",
                    "line": 1222
                },
                {
                    "name": "OnDeleteAppDataListener",
                    "defaultValue": "API.graphql(\n    graphqlOperation(\n      `subscription OnDeleteAppData {\n        onDeleteAppData {\n          __typename\n          id\n          user {\n            __typename\n            id\n            userAttributes {\n              __typename\n              name {\n                __typename\n                first\n                middle\n                last\n              }\n              address {\n                __typename\n                addressOne\n                addressTwo\n                city\n                state\n                zip\n              }\n              phone {\n                __typename\n                primary\n              }\n              dob {\n                __typename\n                year\n                month\n                day\n              }\n              ssn {\n                __typename\n                lastfour\n                full\n              }\n            }\n            onboarding {\n              __typename\n              lastActive\n              lastComplete\n              started\n            }\n          }\n          agencies {\n            __typename\n            transunion {\n              __typename\n              authenticated\n              indicativeEnrichmentSuccess\n              getAuthenticationQuestionsSuccess\n            }\n            equifax {\n              __typename\n              authenticated\n            }\n            experian {\n              __typename\n              authenticated\n            }\n            currentRawQuestions\n          }\n          createdAt\n          updatedAt\n        }\n      }`\n    )\n  ) as Observable<SubscriptionResponse<OnDeleteAppDataSubscription>>",
                    "type": "Observable<SubscriptionResponse<OnDeleteAppDataSubscription>>",
                    "optional": false,
                    "description": "",
                    "line": 1372
                },
                {
                    "name": "OnUpdateAppDataListener",
                    "defaultValue": "API.graphql(\n    graphqlOperation(\n      `subscription OnUpdateAppData {\n        onUpdateAppData {\n          __typename\n          id\n          user {\n            __typename\n            id\n            userAttributes {\n              __typename\n              name {\n                __typename\n                first\n                middle\n                last\n              }\n              address {\n                __typename\n                addressOne\n                addressTwo\n                city\n                state\n                zip\n              }\n              phone {\n                __typename\n                primary\n              }\n              dob {\n                __typename\n                year\n                month\n                day\n              }\n              ssn {\n                __typename\n                lastfour\n                full\n              }\n            }\n            onboarding {\n              __typename\n              lastActive\n              lastComplete\n              started\n            }\n          }\n          agencies {\n            __typename\n            transunion {\n              __typename\n              authenticated\n              indicativeEnrichmentSuccess\n              getAuthenticationQuestionsSuccess\n            }\n            equifax {\n              __typename\n              authenticated\n            }\n            experian {\n              __typename\n              authenticated\n            }\n            currentRawQuestions\n          }\n          createdAt\n          updatedAt\n        }\n      }`\n    )\n  ) as Observable<SubscriptionResponse<OnUpdateAppDataSubscription>>",
                    "type": "Observable<SubscriptionResponse<OnUpdateAppDataSubscription>>",
                    "optional": false,
                    "description": "",
                    "line": 1297
                }
            ],
            "methods": [
                {
                    "name": "CreateAppData",
                    "args": [
                        {
                            "name": "input",
                            "type": "CreateAppDataInput"
                        },
                        {
                            "name": "condition",
                            "type": "ModelAppDataConditionInput",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<CreateAppDataMutation>",
                    "typeParameters": [],
                    "line": 791,
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "input",
                            "type": "CreateAppDataInput",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "condition",
                            "type": "ModelAppDataConditionInput",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "DeleteAppData",
                    "args": [
                        {
                            "name": "input",
                            "type": "DeleteAppDataInput"
                        },
                        {
                            "name": "condition",
                            "type": "ModelAppDataConditionInput",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<DeleteAppDataMutation>",
                    "typeParameters": [],
                    "line": 957,
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "input",
                            "type": "DeleteAppDataInput",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "condition",
                            "type": "ModelAppDataConditionInput",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "GetAppData",
                    "args": [
                        {
                            "name": "id",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<GetAppDataQuery>",
                    "typeParameters": [],
                    "line": 1053,
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ListAppDatas",
                    "args": [
                        {
                            "name": "filter",
                            "type": "ModelAppDataFilterInput",
                            "optional": true
                        },
                        {
                            "name": "limit",
                            "type": "number",
                            "optional": true
                        },
                        {
                            "name": "nextToken",
                            "type": "string",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<ListAppDatasQuery>",
                    "typeParameters": [],
                    "line": 1130,
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "filter",
                            "type": "ModelAppDataFilterInput",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "limit",
                            "type": "number",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "nextToken",
                            "type": "string",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "Transunion",
                    "args": [
                        {
                            "name": "action",
                            "type": "string"
                        },
                        {
                            "name": "message",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<string | null>",
                    "typeParameters": [],
                    "line": 1040,
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "action",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "message",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "UpdateAppData",
                    "args": [
                        {
                            "name": "input",
                            "type": "UpdateAppDataInput"
                        },
                        {
                            "name": "condition",
                            "type": "ModelAppDataConditionInput",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<UpdateAppDataMutation>",
                    "typeParameters": [],
                    "line": 874,
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "input",
                            "type": "UpdateAppDataInput",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "condition",
                            "type": "ModelAppDataConditionInput",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "description": "",
            "sourceCode": "import { Injectable } from \"@angular/core\";\nimport API, { graphqlOperation, GraphQLResult } from \"@aws-amplify/api-graphql\";\nimport { Observable } from \"zen-observable-ts\";\n\nexport interface SubscriptionResponse<T> {\n  value: GraphQLResult<T>;\n}\n\nexport type CreateAppDataInput = {\n  id?: string | null;\n  user: UserInput;\n  agencies: AgenciesInput;\n};\n\nexport type UserInput = {\n  id: string;\n  userAttributes?: UserAttributesInput | null;\n  onboarding?: OnboardingInput | null;\n};\n\nexport type UserAttributesInput = {\n  name?: NameInput | null;\n  address?: AddressInput | null;\n  phone?: PhoneInput | null;\n  dob?: DobInput | null;\n  ssn?: SsnInput | null;\n};\n\nexport type NameInput = {\n  first: string;\n  middle?: string | null;\n  last: string;\n};\n\nexport type AddressInput = {\n  addressOne: string;\n  addressTwo?: string | null;\n  city: string;\n  state: string;\n  zip: string;\n};\n\nexport type PhoneInput = {\n  primary: string;\n};\n\nexport type DobInput = {\n  year: string;\n  month: string;\n  day: string;\n};\n\nexport type SsnInput = {\n  lastfour: string;\n  full?: string | null;\n};\n\nexport type OnboardingInput = {\n  lastActive: number;\n  lastComplete: number;\n  started?: boolean | null;\n};\n\nexport type AgenciesInput = {\n  transunion?: TransunionInput | null;\n  equifax?: EquifaxInput | null;\n  experian?: ExperianInput | null;\n  currentRawQuestions?: string | null;\n};\n\nexport type TransunionInput = {\n  authenticated?: boolean | null;\n  indicativeEnrichmentSuccess?: boolean | null;\n  getAuthenticationQuestionsSuccess?: boolean | null;\n};\n\nexport type EquifaxInput = {\n  authenticated?: boolean | null;\n};\n\nexport type ExperianInput = {\n  authenticated?: boolean | null;\n};\n\nexport type ModelAppDataConditionInput = {\n  and?: Array<ModelAppDataConditionInput | null> | null;\n  or?: Array<ModelAppDataConditionInput | null> | null;\n  not?: ModelAppDataConditionInput | null;\n};\n\nexport type AppData = {\n  __typename: \"AppData\";\n  id?: string;\n  user?: User;\n  agencies?: Agencies;\n  createdAt?: string;\n  updatedAt?: string;\n};\n\nexport type User = {\n  __typename: \"User\";\n  id?: string;\n  userAttributes?: UserAttributes;\n  onboarding?: Onboarding;\n};\n\nexport type UserAttributes = {\n  __typename: \"UserAttributes\";\n  name?: Name;\n  address?: Address;\n  phone?: Phone;\n  dob?: Dob;\n  ssn?: Ssn;\n};\n\nexport type Name = {\n  __typename: \"Name\";\n  first?: string;\n  middle?: string | null;\n  last?: string;\n};\n\nexport type Address = {\n  __typename: \"Address\";\n  addressOne?: string;\n  addressTwo?: string | null;\n  city?: string;\n  state?: string;\n  zip?: string;\n};\n\nexport type Phone = {\n  __typename: \"Phone\";\n  primary?: string;\n};\n\nexport type Dob = {\n  __typename: \"Dob\";\n  year?: string;\n  month?: string;\n  day?: string;\n};\n\nexport type Ssn = {\n  __typename: \"Ssn\";\n  lastfour?: string;\n  full?: string | null;\n};\n\nexport type Onboarding = {\n  __typename: \"Onboarding\";\n  lastActive?: number;\n  lastComplete?: number;\n  started?: boolean | null;\n};\n\nexport type Agencies = {\n  __typename: \"Agencies\";\n  transunion?: Transunion;\n  equifax?: Equifax;\n  experian?: Experian;\n  currentRawQuestions?: string | null;\n};\n\nexport type Transunion = {\n  __typename: \"Transunion\";\n  authenticated?: boolean | null;\n  indicativeEnrichmentSuccess?: boolean | null;\n  getAuthenticationQuestionsSuccess?: boolean | null;\n};\n\nexport type Equifax = {\n  __typename: \"Equifax\";\n  authenticated?: boolean | null;\n};\n\nexport type Experian = {\n  __typename: \"Experian\";\n  authenticated?: boolean | null;\n};\n\nexport type UpdateAppDataInput = {\n  id: string;\n  user?: UserInput | null;\n  agencies?: AgenciesInput | null;\n};\n\nexport type DeleteAppDataInput = {\n  id: string;\n};\n\nexport type ModelAppDataFilterInput = {\n  id?: ModelIDInput | null;\n  and?: Array<ModelAppDataFilterInput | null> | null;\n  or?: Array<ModelAppDataFilterInput | null> | null;\n  not?: ModelAppDataFilterInput | null;\n};\n\nexport type ModelIDInput = {\n  ne?: string | null;\n  eq?: string | null;\n  le?: string | null;\n  lt?: string | null;\n  ge?: string | null;\n  gt?: string | null;\n  contains?: string | null;\n  notContains?: string | null;\n  between?: Array<string | null> | null;\n  beginsWith?: string | null;\n  attributeExists?: boolean | null;\n  attributeType?: ModelAttributeTypes | null;\n  size?: ModelSizeInput | null;\n};\n\nexport enum ModelAttributeTypes {\n  binary = \"binary\",\n  binarySet = \"binarySet\",\n  bool = \"bool\",\n  list = \"list\",\n  map = \"map\",\n  number = \"number\",\n  numberSet = \"numberSet\",\n  string = \"string\",\n  stringSet = \"stringSet\",\n  _null = \"_null\"\n}\n\nexport type ModelSizeInput = {\n  ne?: number | null;\n  eq?: number | null;\n  le?: number | null;\n  lt?: number | null;\n  ge?: number | null;\n  gt?: number | null;\n  between?: Array<number | null> | null;\n};\n\nexport type ModelAppDataConnection = {\n  __typename: \"ModelAppDataConnection\";\n  items?: Array<AppData | null> | null;\n  nextToken?: string | null;\n};\n\nexport type CreateAppDataMutation = {\n  __typename: \"AppData\";\n  id: string;\n  user: {\n    __typename: \"User\";\n    id: string;\n    userAttributes?: {\n      __typename: \"UserAttributes\";\n      name?: {\n        __typename: \"Name\";\n        first: string;\n        middle?: string | null;\n        last: string;\n      } | null;\n      address?: {\n        __typename: \"Address\";\n        addressOne: string;\n        addressTwo?: string | null;\n        city: string;\n        state: string;\n        zip: string;\n      } | null;\n      phone?: {\n        __typename: \"Phone\";\n        primary: string;\n      } | null;\n      dob?: {\n        __typename: \"Dob\";\n        year: string;\n        month: string;\n        day: string;\n      } | null;\n      ssn?: {\n        __typename: \"Ssn\";\n        lastfour: string;\n        full?: string | null;\n      } | null;\n    } | null;\n    onboarding?: {\n      __typename: \"Onboarding\";\n      lastActive: number;\n      lastComplete: number;\n      started?: boolean | null;\n    } | null;\n  };\n  agencies: {\n    __typename: \"Agencies\";\n    transunion?: {\n      __typename: \"Transunion\";\n      authenticated?: boolean | null;\n      indicativeEnrichmentSuccess?: boolean | null;\n      getAuthenticationQuestionsSuccess?: boolean | null;\n    } | null;\n    equifax?: {\n      __typename: \"Equifax\";\n      authenticated?: boolean | null;\n    } | null;\n    experian?: {\n      __typename: \"Experian\";\n      authenticated?: boolean | null;\n    } | null;\n    currentRawQuestions?: string | null;\n  };\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type UpdateAppDataMutation = {\n  __typename: \"AppData\";\n  id: string;\n  user: {\n    __typename: \"User\";\n    id: string;\n    userAttributes?: {\n      __typename: \"UserAttributes\";\n      name?: {\n        __typename: \"Name\";\n        first: string;\n        middle?: string | null;\n        last: string;\n      } | null;\n      address?: {\n        __typename: \"Address\";\n        addressOne: string;\n        addressTwo?: string | null;\n        city: string;\n        state: string;\n        zip: string;\n      } | null;\n      phone?: {\n        __typename: \"Phone\";\n        primary: string;\n      } | null;\n      dob?: {\n        __typename: \"Dob\";\n        year: string;\n        month: string;\n        day: string;\n      } | null;\n      ssn?: {\n        __typename: \"Ssn\";\n        lastfour: string;\n        full?: string | null;\n      } | null;\n    } | null;\n    onboarding?: {\n      __typename: \"Onboarding\";\n      lastActive: number;\n      lastComplete: number;\n      started?: boolean | null;\n    } | null;\n  };\n  agencies: {\n    __typename: \"Agencies\";\n    transunion?: {\n      __typename: \"Transunion\";\n      authenticated?: boolean | null;\n      indicativeEnrichmentSuccess?: boolean | null;\n      getAuthenticationQuestionsSuccess?: boolean | null;\n    } | null;\n    equifax?: {\n      __typename: \"Equifax\";\n      authenticated?: boolean | null;\n    } | null;\n    experian?: {\n      __typename: \"Experian\";\n      authenticated?: boolean | null;\n    } | null;\n    currentRawQuestions?: string | null;\n  };\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type DeleteAppDataMutation = {\n  __typename: \"AppData\";\n  id: string;\n  user: {\n    __typename: \"User\";\n    id: string;\n    userAttributes?: {\n      __typename: \"UserAttributes\";\n      name?: {\n        __typename: \"Name\";\n        first: string;\n        middle?: string | null;\n        last: string;\n      } | null;\n      address?: {\n        __typename: \"Address\";\n        addressOne: string;\n        addressTwo?: string | null;\n        city: string;\n        state: string;\n        zip: string;\n      } | null;\n      phone?: {\n        __typename: \"Phone\";\n        primary: string;\n      } | null;\n      dob?: {\n        __typename: \"Dob\";\n        year: string;\n        month: string;\n        day: string;\n      } | null;\n      ssn?: {\n        __typename: \"Ssn\";\n        lastfour: string;\n        full?: string | null;\n      } | null;\n    } | null;\n    onboarding?: {\n      __typename: \"Onboarding\";\n      lastActive: number;\n      lastComplete: number;\n      started?: boolean | null;\n    } | null;\n  };\n  agencies: {\n    __typename: \"Agencies\";\n    transunion?: {\n      __typename: \"Transunion\";\n      authenticated?: boolean | null;\n      indicativeEnrichmentSuccess?: boolean | null;\n      getAuthenticationQuestionsSuccess?: boolean | null;\n    } | null;\n    equifax?: {\n      __typename: \"Equifax\";\n      authenticated?: boolean | null;\n    } | null;\n    experian?: {\n      __typename: \"Experian\";\n      authenticated?: boolean | null;\n    } | null;\n    currentRawQuestions?: string | null;\n  };\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type GetAppDataQuery = {\n  __typename: \"AppData\";\n  id: string;\n  user: {\n    __typename: \"User\";\n    id: string;\n    userAttributes?: {\n      __typename: \"UserAttributes\";\n      name?: {\n        __typename: \"Name\";\n        first: string;\n        middle?: string | null;\n        last: string;\n      } | null;\n      address?: {\n        __typename: \"Address\";\n        addressOne: string;\n        addressTwo?: string | null;\n        city: string;\n        state: string;\n        zip: string;\n      } | null;\n      phone?: {\n        __typename: \"Phone\";\n        primary: string;\n      } | null;\n      dob?: {\n        __typename: \"Dob\";\n        year: string;\n        month: string;\n        day: string;\n      } | null;\n      ssn?: {\n        __typename: \"Ssn\";\n        lastfour: string;\n        full?: string | null;\n      } | null;\n    } | null;\n    onboarding?: {\n      __typename: \"Onboarding\";\n      lastActive: number;\n      lastComplete: number;\n      started?: boolean | null;\n    } | null;\n  };\n  agencies: {\n    __typename: \"Agencies\";\n    transunion?: {\n      __typename: \"Transunion\";\n      authenticated?: boolean | null;\n      indicativeEnrichmentSuccess?: boolean | null;\n      getAuthenticationQuestionsSuccess?: boolean | null;\n    } | null;\n    equifax?: {\n      __typename: \"Equifax\";\n      authenticated?: boolean | null;\n    } | null;\n    experian?: {\n      __typename: \"Experian\";\n      authenticated?: boolean | null;\n    } | null;\n    currentRawQuestions?: string | null;\n  };\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type ListAppDatasQuery = {\n  __typename: \"ModelAppDataConnection\";\n  items?: Array<{\n    __typename: \"AppData\";\n    id: string;\n    user: {\n      __typename: \"User\";\n      id: string;\n      userAttributes?: {\n        __typename: \"UserAttributes\";\n        name?: {\n          __typename: \"Name\";\n          first: string;\n          middle?: string | null;\n          last: string;\n        } | null;\n        address?: {\n          __typename: \"Address\";\n          addressOne: string;\n          addressTwo?: string | null;\n          city: string;\n          state: string;\n          zip: string;\n        } | null;\n        phone?: {\n          __typename: \"Phone\";\n          primary: string;\n        } | null;\n        dob?: {\n          __typename: \"Dob\";\n          year: string;\n          month: string;\n          day: string;\n        } | null;\n        ssn?: {\n          __typename: \"Ssn\";\n          lastfour: string;\n          full?: string | null;\n        } | null;\n      } | null;\n      onboarding?: {\n        __typename: \"Onboarding\";\n        lastActive: number;\n        lastComplete: number;\n        started?: boolean | null;\n      } | null;\n    };\n    agencies: {\n      __typename: \"Agencies\";\n      transunion?: {\n        __typename: \"Transunion\";\n        authenticated?: boolean | null;\n        indicativeEnrichmentSuccess?: boolean | null;\n        getAuthenticationQuestionsSuccess?: boolean | null;\n      } | null;\n      equifax?: {\n        __typename: \"Equifax\";\n        authenticated?: boolean | null;\n      } | null;\n      experian?: {\n        __typename: \"Experian\";\n        authenticated?: boolean | null;\n      } | null;\n      currentRawQuestions?: string | null;\n    };\n    createdAt: string;\n    updatedAt: string;\n  } | null> | null;\n  nextToken?: string | null;\n};\n\nexport type OnCreateAppDataSubscription = {\n  __typename: \"AppData\";\n  id: string;\n  user: {\n    __typename: \"User\";\n    id: string;\n    userAttributes?: {\n      __typename: \"UserAttributes\";\n      name?: {\n        __typename: \"Name\";\n        first: string;\n        middle?: string | null;\n        last: string;\n      } | null;\n      address?: {\n        __typename: \"Address\";\n        addressOne: string;\n        addressTwo?: string | null;\n        city: string;\n        state: string;\n        zip: string;\n      } | null;\n      phone?: {\n        __typename: \"Phone\";\n        primary: string;\n      } | null;\n      dob?: {\n        __typename: \"Dob\";\n        year: string;\n        month: string;\n        day: string;\n      } | null;\n      ssn?: {\n        __typename: \"Ssn\";\n        lastfour: string;\n        full?: string | null;\n      } | null;\n    } | null;\n    onboarding?: {\n      __typename: \"Onboarding\";\n      lastActive: number;\n      lastComplete: number;\n      started?: boolean | null;\n    } | null;\n  };\n  agencies: {\n    __typename: \"Agencies\";\n    transunion?: {\n      __typename: \"Transunion\";\n      authenticated?: boolean | null;\n      indicativeEnrichmentSuccess?: boolean | null;\n      getAuthenticationQuestionsSuccess?: boolean | null;\n    } | null;\n    equifax?: {\n      __typename: \"Equifax\";\n      authenticated?: boolean | null;\n    } | null;\n    experian?: {\n      __typename: \"Experian\";\n      authenticated?: boolean | null;\n    } | null;\n    currentRawQuestions?: string | null;\n  };\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type OnUpdateAppDataSubscription = {\n  __typename: \"AppData\";\n  id: string;\n  user: {\n    __typename: \"User\";\n    id: string;\n    userAttributes?: {\n      __typename: \"UserAttributes\";\n      name?: {\n        __typename: \"Name\";\n        first: string;\n        middle?: string | null;\n        last: string;\n      } | null;\n      address?: {\n        __typename: \"Address\";\n        addressOne: string;\n        addressTwo?: string | null;\n        city: string;\n        state: string;\n        zip: string;\n      } | null;\n      phone?: {\n        __typename: \"Phone\";\n        primary: string;\n      } | null;\n      dob?: {\n        __typename: \"Dob\";\n        year: string;\n        month: string;\n        day: string;\n      } | null;\n      ssn?: {\n        __typename: \"Ssn\";\n        lastfour: string;\n        full?: string | null;\n      } | null;\n    } | null;\n    onboarding?: {\n      __typename: \"Onboarding\";\n      lastActive: number;\n      lastComplete: number;\n      started?: boolean | null;\n    } | null;\n  };\n  agencies: {\n    __typename: \"Agencies\";\n    transunion?: {\n      __typename: \"Transunion\";\n      authenticated?: boolean | null;\n      indicativeEnrichmentSuccess?: boolean | null;\n      getAuthenticationQuestionsSuccess?: boolean | null;\n    } | null;\n    equifax?: {\n      __typename: \"Equifax\";\n      authenticated?: boolean | null;\n    } | null;\n    experian?: {\n      __typename: \"Experian\";\n      authenticated?: boolean | null;\n    } | null;\n    currentRawQuestions?: string | null;\n  };\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type OnDeleteAppDataSubscription = {\n  __typename: \"AppData\";\n  id: string;\n  user: {\n    __typename: \"User\";\n    id: string;\n    userAttributes?: {\n      __typename: \"UserAttributes\";\n      name?: {\n        __typename: \"Name\";\n        first: string;\n        middle?: string | null;\n        last: string;\n      } | null;\n      address?: {\n        __typename: \"Address\";\n        addressOne: string;\n        addressTwo?: string | null;\n        city: string;\n        state: string;\n        zip: string;\n      } | null;\n      phone?: {\n        __typename: \"Phone\";\n        primary: string;\n      } | null;\n      dob?: {\n        __typename: \"Dob\";\n        year: string;\n        month: string;\n        day: string;\n      } | null;\n      ssn?: {\n        __typename: \"Ssn\";\n        lastfour: string;\n        full?: string | null;\n      } | null;\n    } | null;\n    onboarding?: {\n      __typename: \"Onboarding\";\n      lastActive: number;\n      lastComplete: number;\n      started?: boolean | null;\n    } | null;\n  };\n  agencies: {\n    __typename: \"Agencies\";\n    transunion?: {\n      __typename: \"Transunion\";\n      authenticated?: boolean | null;\n      indicativeEnrichmentSuccess?: boolean | null;\n      getAuthenticationQuestionsSuccess?: boolean | null;\n    } | null;\n    equifax?: {\n      __typename: \"Equifax\";\n      authenticated?: boolean | null;\n    } | null;\n    experian?: {\n      __typename: \"Experian\";\n      authenticated?: boolean | null;\n    } | null;\n    currentRawQuestions?: string | null;\n  };\n  createdAt: string;\n  updatedAt: string;\n};\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class APIService {\n  async CreateAppData(\n    input: CreateAppDataInput,\n    condition?: ModelAppDataConditionInput\n  ): Promise<CreateAppDataMutation> {\n    const statement = `mutation CreateAppData($input: CreateAppDataInput!, $condition: ModelAppDataConditionInput) {\n        createAppData(input: $input, condition: $condition) {\n          __typename\n          id\n          user {\n            __typename\n            id\n            userAttributes {\n              __typename\n              name {\n                __typename\n                first\n                middle\n                last\n              }\n              address {\n                __typename\n                addressOne\n                addressTwo\n                city\n                state\n                zip\n              }\n              phone {\n                __typename\n                primary\n              }\n              dob {\n                __typename\n                year\n                month\n                day\n              }\n              ssn {\n                __typename\n                lastfour\n                full\n              }\n            }\n            onboarding {\n              __typename\n              lastActive\n              lastComplete\n              started\n            }\n          }\n          agencies {\n            __typename\n            transunion {\n              __typename\n              authenticated\n              indicativeEnrichmentSuccess\n              getAuthenticationQuestionsSuccess\n            }\n            equifax {\n              __typename\n              authenticated\n            }\n            experian {\n              __typename\n              authenticated\n            }\n            currentRawQuestions\n          }\n          createdAt\n          updatedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      input\n    };\n    if (condition) {\n      gqlAPIServiceArguments.condition = condition;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return <CreateAppDataMutation>response.data.createAppData;\n  }\n  async UpdateAppData(\n    input: UpdateAppDataInput,\n    condition?: ModelAppDataConditionInput\n  ): Promise<UpdateAppDataMutation> {\n    const statement = `mutation UpdateAppData($input: UpdateAppDataInput!, $condition: ModelAppDataConditionInput) {\n        updateAppData(input: $input, condition: $condition) {\n          __typename\n          id\n          user {\n            __typename\n            id\n            userAttributes {\n              __typename\n              name {\n                __typename\n                first\n                middle\n                last\n              }\n              address {\n                __typename\n                addressOne\n                addressTwo\n                city\n                state\n                zip\n              }\n              phone {\n                __typename\n                primary\n              }\n              dob {\n                __typename\n                year\n                month\n                day\n              }\n              ssn {\n                __typename\n                lastfour\n                full\n              }\n            }\n            onboarding {\n              __typename\n              lastActive\n              lastComplete\n              started\n            }\n          }\n          agencies {\n            __typename\n            transunion {\n              __typename\n              authenticated\n              indicativeEnrichmentSuccess\n              getAuthenticationQuestionsSuccess\n            }\n            equifax {\n              __typename\n              authenticated\n            }\n            experian {\n              __typename\n              authenticated\n            }\n            currentRawQuestions\n          }\n          createdAt\n          updatedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      input\n    };\n    if (condition) {\n      gqlAPIServiceArguments.condition = condition;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return <UpdateAppDataMutation>response.data.updateAppData;\n  }\n  async DeleteAppData(\n    input: DeleteAppDataInput,\n    condition?: ModelAppDataConditionInput\n  ): Promise<DeleteAppDataMutation> {\n    const statement = `mutation DeleteAppData($input: DeleteAppDataInput!, $condition: ModelAppDataConditionInput) {\n        deleteAppData(input: $input, condition: $condition) {\n          __typename\n          id\n          user {\n            __typename\n            id\n            userAttributes {\n              __typename\n              name {\n                __typename\n                first\n                middle\n                last\n              }\n              address {\n                __typename\n                addressOne\n                addressTwo\n                city\n                state\n                zip\n              }\n              phone {\n                __typename\n                primary\n              }\n              dob {\n                __typename\n                year\n                month\n                day\n              }\n              ssn {\n                __typename\n                lastfour\n                full\n              }\n            }\n            onboarding {\n              __typename\n              lastActive\n              lastComplete\n              started\n            }\n          }\n          agencies {\n            __typename\n            transunion {\n              __typename\n              authenticated\n              indicativeEnrichmentSuccess\n              getAuthenticationQuestionsSuccess\n            }\n            equifax {\n              __typename\n              authenticated\n            }\n            experian {\n              __typename\n              authenticated\n            }\n            currentRawQuestions\n          }\n          createdAt\n          updatedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      input\n    };\n    if (condition) {\n      gqlAPIServiceArguments.condition = condition;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return <DeleteAppDataMutation>response.data.deleteAppData;\n  }\n  async Transunion(action: string, message: string): Promise<string | null> {\n    const statement = `query Transunion($action: String!, $message: String!) {\n        transunion(action: $action, message: $message)\n      }`;\n    const gqlAPIServiceArguments: any = {\n      action,\n      message\n    };\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return <string | null>response.data.transunion;\n  }\n  async GetAppData(id: string): Promise<GetAppDataQuery> {\n    const statement = `query GetAppData($id: ID!) {\n        getAppData(id: $id) {\n          __typename\n          id\n          user {\n            __typename\n            id\n            userAttributes {\n              __typename\n              name {\n                __typename\n                first\n                middle\n                last\n              }\n              address {\n                __typename\n                addressOne\n                addressTwo\n                city\n                state\n                zip\n              }\n              phone {\n                __typename\n                primary\n              }\n              dob {\n                __typename\n                year\n                month\n                day\n              }\n              ssn {\n                __typename\n                lastfour\n                full\n              }\n            }\n            onboarding {\n              __typename\n              lastActive\n              lastComplete\n              started\n            }\n          }\n          agencies {\n            __typename\n            transunion {\n              __typename\n              authenticated\n              indicativeEnrichmentSuccess\n              getAuthenticationQuestionsSuccess\n            }\n            equifax {\n              __typename\n              authenticated\n            }\n            experian {\n              __typename\n              authenticated\n            }\n            currentRawQuestions\n          }\n          createdAt\n          updatedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      id\n    };\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return <GetAppDataQuery>response.data.getAppData;\n  }\n  async ListAppDatas(\n    filter?: ModelAppDataFilterInput,\n    limit?: number,\n    nextToken?: string\n  ): Promise<ListAppDatasQuery> {\n    const statement = `query ListAppDatas($filter: ModelAppDataFilterInput, $limit: Int, $nextToken: String) {\n        listAppDatas(filter: $filter, limit: $limit, nextToken: $nextToken) {\n          __typename\n          items {\n            __typename\n            id\n            user {\n              __typename\n              id\n              userAttributes {\n                __typename\n                name {\n                  __typename\n                  first\n                  middle\n                  last\n                }\n                address {\n                  __typename\n                  addressOne\n                  addressTwo\n                  city\n                  state\n                  zip\n                }\n                phone {\n                  __typename\n                  primary\n                }\n                dob {\n                  __typename\n                  year\n                  month\n                  day\n                }\n                ssn {\n                  __typename\n                  lastfour\n                  full\n                }\n              }\n              onboarding {\n                __typename\n                lastActive\n                lastComplete\n                started\n              }\n            }\n            agencies {\n              __typename\n              transunion {\n                __typename\n                authenticated\n                indicativeEnrichmentSuccess\n                getAuthenticationQuestionsSuccess\n              }\n              equifax {\n                __typename\n                authenticated\n              }\n              experian {\n                __typename\n                authenticated\n              }\n              currentRawQuestions\n            }\n            createdAt\n            updatedAt\n          }\n          nextToken\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {};\n    if (filter) {\n      gqlAPIServiceArguments.filter = filter;\n    }\n    if (limit) {\n      gqlAPIServiceArguments.limit = limit;\n    }\n    if (nextToken) {\n      gqlAPIServiceArguments.nextToken = nextToken;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return <ListAppDatasQuery>response.data.listAppDatas;\n  }\n  OnCreateAppDataListener: Observable<\n    SubscriptionResponse<OnCreateAppDataSubscription>\n  > = API.graphql(\n    graphqlOperation(\n      `subscription OnCreateAppData {\n        onCreateAppData {\n          __typename\n          id\n          user {\n            __typename\n            id\n            userAttributes {\n              __typename\n              name {\n                __typename\n                first\n                middle\n                last\n              }\n              address {\n                __typename\n                addressOne\n                addressTwo\n                city\n                state\n                zip\n              }\n              phone {\n                __typename\n                primary\n              }\n              dob {\n                __typename\n                year\n                month\n                day\n              }\n              ssn {\n                __typename\n                lastfour\n                full\n              }\n            }\n            onboarding {\n              __typename\n              lastActive\n              lastComplete\n              started\n            }\n          }\n          agencies {\n            __typename\n            transunion {\n              __typename\n              authenticated\n              indicativeEnrichmentSuccess\n              getAuthenticationQuestionsSuccess\n            }\n            equifax {\n              __typename\n              authenticated\n            }\n            experian {\n              __typename\n              authenticated\n            }\n            currentRawQuestions\n          }\n          createdAt\n          updatedAt\n        }\n      }`\n    )\n  ) as Observable<SubscriptionResponse<OnCreateAppDataSubscription>>;\n\n  OnUpdateAppDataListener: Observable<\n    SubscriptionResponse<OnUpdateAppDataSubscription>\n  > = API.graphql(\n    graphqlOperation(\n      `subscription OnUpdateAppData {\n        onUpdateAppData {\n          __typename\n          id\n          user {\n            __typename\n            id\n            userAttributes {\n              __typename\n              name {\n                __typename\n                first\n                middle\n                last\n              }\n              address {\n                __typename\n                addressOne\n                addressTwo\n                city\n                state\n                zip\n              }\n              phone {\n                __typename\n                primary\n              }\n              dob {\n                __typename\n                year\n                month\n                day\n              }\n              ssn {\n                __typename\n                lastfour\n                full\n              }\n            }\n            onboarding {\n              __typename\n              lastActive\n              lastComplete\n              started\n            }\n          }\n          agencies {\n            __typename\n            transunion {\n              __typename\n              authenticated\n              indicativeEnrichmentSuccess\n              getAuthenticationQuestionsSuccess\n            }\n            equifax {\n              __typename\n              authenticated\n            }\n            experian {\n              __typename\n              authenticated\n            }\n            currentRawQuestions\n          }\n          createdAt\n          updatedAt\n        }\n      }`\n    )\n  ) as Observable<SubscriptionResponse<OnUpdateAppDataSubscription>>;\n\n  OnDeleteAppDataListener: Observable<\n    SubscriptionResponse<OnDeleteAppDataSubscription>\n  > = API.graphql(\n    graphqlOperation(\n      `subscription OnDeleteAppData {\n        onDeleteAppData {\n          __typename\n          id\n          user {\n            __typename\n            id\n            userAttributes {\n              __typename\n              name {\n                __typename\n                first\n                middle\n                last\n              }\n              address {\n                __typename\n                addressOne\n                addressTwo\n                city\n                state\n                zip\n              }\n              phone {\n                __typename\n                primary\n              }\n              dob {\n                __typename\n                year\n                month\n                day\n              }\n              ssn {\n                __typename\n                lastfour\n                full\n              }\n            }\n            onboarding {\n              __typename\n              lastActive\n              lastComplete\n              started\n            }\n          }\n          agencies {\n            __typename\n            transunion {\n              __typename\n              authenticated\n              indicativeEnrichmentSuccess\n              getAuthenticationQuestionsSuccess\n            }\n            equifax {\n              __typename\n              authenticated\n            }\n            experian {\n              __typename\n              authenticated\n            }\n            currentRawQuestions\n          }\n          createdAt\n          updatedAt\n        }\n      }`\n    )\n  ) as Observable<SubscriptionResponse<OnDeleteAppDataSubscription>>;\n}\n",
            "type": "injectable"
        },
        {
            "name": "AppDataState",
            "id": "injectable-AppDataState-a97e278d9b8247d66320bad6e25c6715",
            "file": "src/app/store/app-data/app-data.state.ts",
            "properties": [],
            "methods": [
                {
                    "name": "addAppData",
                    "args": [
                        {
                            "name": "ctx",
                            "type": "StateContext<AppDataStateModel>"
                        },
                        {
                            "type": "AppDataActions.Add"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "decorators": [
                        {
                            "name": "Action",
                            "stringifiedArguments": "AppDataActions.Add"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "ctx",
                            "type": "StateContext<AppDataStateModel>",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "type": "AppDataActions.Add",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "deleteAppData",
                    "args": [
                        {
                            "name": "ctx",
                            "type": "StateContext<AppDataStateModel>"
                        },
                        {
                            "type": "AppDataActions.Delete"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 40,
                    "decorators": [
                        {
                            "name": "Action",
                            "stringifiedArguments": "AppDataActions.Delete"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "ctx",
                            "type": "StateContext<AppDataStateModel>",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "type": "AppDataActions.Delete",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateAppData",
                    "args": [
                        {
                            "name": "ctx",
                            "type": "StateContext<AppDataStateModel>"
                        },
                        {
                            "type": "AppDataActions.Edit"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "decorators": [
                        {
                            "name": "Action",
                            "stringifiedArguments": "AppDataActions.Edit"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "ctx",
                            "type": "StateContext<AppDataStateModel>",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "type": "AppDataActions.Edit",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "description": "",
            "sourceCode": "import { State, Action, StateContext } from '@ngxs/store';\nimport * as AppDataActions from './app-data.actions';\nimport { Injectable } from '@angular/core';\nimport { AppDataStateModel } from '@store/app-data/app-data.model';\nimport { UserState } from '@store/user';\nimport { AgenciesState } from '@store/agencies';\n\n@State<AppDataStateModel>({\n  name: 'appData',\n  defaults: {\n    id: '',\n  },\n  children: [UserState, AgenciesState],\n})\n@Injectable()\nexport class AppDataState {\n  constructor() {}\n\n  @Action(AppDataActions.Add)\n  addAppData(\n    ctx: StateContext<AppDataStateModel>,\n    { payload }: AppDataActions.Add\n  ): void {\n    ctx.patchState({\n      ...payload,\n    });\n  }\n\n  @Action(AppDataActions.Edit)\n  updateAppData(\n    ctx: StateContext<AppDataStateModel>,\n    { payload }: AppDataActions.Edit\n  ): void {\n    ctx.patchState({\n      ...payload,\n    });\n  }\n\n  @Action(AppDataActions.Delete)\n  deleteAppData(\n    ctx: StateContext<AppDataStateModel>,\n    {}: AppDataActions.Delete\n  ): void {\n    const state = ctx.getState();\n    const payload = new AppDataStateModel();\n    ctx.setState({\n      ...state,\n      ...payload,\n    });\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 16
            },
            "type": "injectable"
        },
        {
            "name": "AuthService",
            "id": "injectable-AuthService-2aeb370e08af3ed63984f61c3b9b13c5",
            "file": "src/app/shared/services/auth/auth.service.ts",
            "properties": [
                {
                    "name": "authState",
                    "defaultValue": "new Subject<\r\n    CognitoUser | any\r\n  >()",
                    "type": "Subject<CognitoUser | any>",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "authState$",
                    "defaultValue": "this.authState.asObservable()",
                    "type": "Observable<CognitoUser | any>",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "FACEBOOK",
                    "defaultValue": "CognitoHostedUIIdentityProvider.Facebook",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "modifierKind": [
                        115
                    ]
                },
                {
                    "name": "GOOGLE",
                    "defaultValue": "CognitoHostedUIIdentityProvider.Google",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "modifierKind": [
                        115
                    ]
                },
                {
                    "name": "SIGN_IN",
                    "defaultValue": "'signIn'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        115
                    ]
                },
                {
                    "name": "SIGN_OUT",
                    "defaultValue": "'signOut'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "modifierKind": [
                        115
                    ]
                }
            ],
            "methods": [
                {
                    "name": "forgotPasswordSubmit",
                    "args": [
                        {
                            "name": "email",
                            "type": "string"
                        },
                        {
                            "name": "code",
                            "type": "string"
                        },
                        {
                            "name": "pw",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise | undefined",
                    "typeParameters": [],
                    "line": 160,
                    "description": "",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 3876,
                                "end": 3881,
                                "flags": 0,
                                "escapedText": "email"
                            },
                            "type": "string",
                            "tagName": {
                                "pos": 3870,
                                "end": 3875,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": ""
                        },
                        {
                            "name": {
                                "pos": 3894,
                                "end": 3898,
                                "flags": 0,
                                "escapedText": "code"
                            },
                            "type": "string",
                            "tagName": {
                                "pos": 3888,
                                "end": 3893,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": ""
                        },
                        {
                            "name": {
                                "pos": 3911,
                                "end": 3913,
                                "flags": 0,
                                "escapedText": "pw"
                            },
                            "type": "string",
                            "tagName": {
                                "pos": 3905,
                                "end": 3910,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": ""
                        },
                        {
                            "tagName": {
                                "pos": 3920,
                                "end": 3927,
                                "flags": 0,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ]
                },
                {
                    "name": "getAuthCredentials",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<ICredentials | null>",
                    "typeParameters": [],
                    "line": 237,
                    "description": "",
                    "modifierKind": [
                        120
                    ]
                },
                {
                    "name": "getAuthState",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<CognitoUser | any>",
                    "typeParameters": [],
                    "line": 190,
                    "description": "",
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 4420,
                                "end": 4427,
                                "flags": 0,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ]
                },
                {
                    "name": "getAuthTokens",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<string>",
                    "typeParameters": [],
                    "line": 224,
                    "description": "",
                    "modifierKind": [
                        120
                    ]
                },
                {
                    "name": "getCredentials",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<ICredentials>",
                    "typeParameters": [],
                    "line": 174,
                    "description": "",
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 4166,
                                "end": 4173,
                                "flags": 0,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ]
                },
                {
                    "name": "getCurrentAuthenticatedUser",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<CognitoUser>",
                    "typeParameters": [],
                    "line": 182,
                    "description": "",
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 4284,
                                "end": 4291,
                                "flags": 0,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ]
                },
                {
                    "name": "refreshAuthState",
                    "args": [
                        {
                            "name": "user",
                            "type": "CognitoUser",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<void>",
                    "typeParameters": [],
                    "line": 207,
                    "description": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 4674,
                                "end": 4678,
                                "flags": 0,
                                "escapedText": "user"
                            },
                            "type": "CognitoUser",
                            "optional": true,
                            "tagName": {
                                "pos": 4654,
                                "end": 4659,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": "",
                            "typeExpression": {
                                "pos": 4660,
                                "end": 4673,
                                "flags": 0,
                                "kind": 277,
                                "type": {
                                    "pos": 4661,
                                    "end": 4672,
                                    "flags": 2097152,
                                    "kind": 161,
                                    "typeName": {
                                        "pos": 4661,
                                        "end": 4672,
                                        "flags": 2097152,
                                        "escapedText": "CognitoUser"
                                    }
                                }
                            }
                        },
                        {
                            "tagName": {
                                "pos": 4685,
                                "end": 4692,
                                "flags": 0,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ]
                },
                {
                    "name": "refreshSession",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<CognitoUserSession>",
                    "typeParameters": [],
                    "line": 198,
                    "description": "",
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 4534,
                                "end": 4541,
                                "flags": 0,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ]
                },
                {
                    "name": "reloadCredentials",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<void>",
                    "typeParameters": [],
                    "line": 71,
                    "description": "<p>This method is designed to help reload the user if the ID ever goes null\nwill perform the following:</p>\n<ol>\n<li>Get current credentials (if the token is still valid)</li>\n<li>If no token available, and on a different page...go back to login</li>\n<li>If on sign in or sign up...do nothing</li>\n</ol>\n",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 2071,
                                "end": 2078,
                                "flags": 0,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ]
                },
                {
                    "name": "resendSignUp",
                    "args": [
                        {
                            "name": "email",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise | undefined",
                    "typeParameters": [],
                    "line": 149,
                    "description": "",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 3704,
                                "end": 3709,
                                "flags": 0,
                                "escapedText": "email"
                            },
                            "type": "string",
                            "tagName": {
                                "pos": 3689,
                                "end": 3694,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": "",
                            "typeExpression": {
                                "pos": 3695,
                                "end": 3703,
                                "flags": 0,
                                "kind": 277,
                                "type": {
                                    "pos": 3696,
                                    "end": 3702,
                                    "flags": 2097152,
                                    "kind": 137
                                }
                            }
                        },
                        {
                            "tagName": {
                                "pos": 3716,
                                "end": 3723,
                                "flags": 0,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ]
                },
                {
                    "name": "signIn",
                    "args": [
                        {
                            "name": "username",
                            "type": "string"
                        },
                        {
                            "name": "password",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<CognitoUser | any>",
                    "typeParameters": [],
                    "line": 113,
                    "description": "<p>Cognito sign in method</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 2904,
                                "end": 2912,
                                "flags": 0,
                                "escapedText": "username"
                            },
                            "type": "string",
                            "tagName": {
                                "pos": 2889,
                                "end": 2894,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": "",
                            "typeExpression": {
                                "pos": 2895,
                                "end": 2903,
                                "flags": 0,
                                "kind": 277,
                                "type": {
                                    "pos": 2896,
                                    "end": 2902,
                                    "flags": 2097152,
                                    "kind": 137
                                }
                            }
                        },
                        {
                            "name": {
                                "pos": 2934,
                                "end": 2942,
                                "flags": 0,
                                "escapedText": "password"
                            },
                            "type": "string",
                            "tagName": {
                                "pos": 2919,
                                "end": 2924,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": "",
                            "typeExpression": {
                                "pos": 2925,
                                "end": 2933,
                                "flags": 0,
                                "kind": 277,
                                "type": {
                                    "pos": 2926,
                                    "end": 2932,
                                    "flags": 2097152,
                                    "kind": 137
                                }
                            }
                        },
                        {
                            "tagName": {
                                "pos": 2949,
                                "end": 2956,
                                "flags": 0,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ]
                },
                {
                    "name": "signOut",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<any>",
                    "typeParameters": [],
                    "line": 127,
                    "description": "<p>Simple sign out method</p>\n",
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 3303,
                                "end": 3310,
                                "flags": 0,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ]
                },
                {
                    "name": "signUp",
                    "args": [
                        {
                            "name": "user",
                            "type": "NewUser"
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<ISignUpResult>",
                    "typeParameters": [],
                    "line": 97,
                    "description": "<p>Cognito sign up method</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 2615,
                                "end": 2619,
                                "flags": 0,
                                "escapedText": "user"
                            },
                            "type": "NewUser",
                            "tagName": {
                                "pos": 2599,
                                "end": 2604,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": "",
                            "typeExpression": {
                                "pos": 2605,
                                "end": 2614,
                                "flags": 0,
                                "kind": 277,
                                "type": {
                                    "pos": 2606,
                                    "end": 2613,
                                    "flags": 2097152,
                                    "kind": 161,
                                    "typeName": {
                                        "pos": 2606,
                                        "end": 2613,
                                        "flags": 2097152,
                                        "escapedText": "NewUser"
                                    }
                                }
                            }
                        },
                        {
                            "tagName": {
                                "pos": 2626,
                                "end": 2633,
                                "flags": 0,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ]
                },
                {
                    "name": "socialSignIn",
                    "args": [
                        {
                            "name": "provider",
                            "type": "CognitoHostedUIIdentityProvider"
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<ICredentials>",
                    "typeParameters": [],
                    "line": 136,
                    "description": "<p>Social signin (supports facebook and google)</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 3479,
                                "end": 3487,
                                "flags": 0,
                                "escapedText": "provider"
                            },
                            "type": "CognitoHostedUIIdentityProvider",
                            "tagName": {
                                "pos": 3439,
                                "end": 3444,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": "",
                            "typeExpression": {
                                "pos": 3445,
                                "end": 3478,
                                "flags": 0,
                                "kind": 277,
                                "type": {
                                    "pos": 3446,
                                    "end": 3477,
                                    "flags": 2097152,
                                    "kind": 161,
                                    "typeName": {
                                        "pos": 3446,
                                        "end": 3477,
                                        "flags": 2097152,
                                        "escapedText": "CognitoHostedUIIdentityProvider"
                                    }
                                }
                            }
                        },
                        {
                            "tagName": {
                                "pos": 3494,
                                "end": 3501,
                                "flags": 0,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ]
                }
            ],
            "description": "",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport Auth, { CognitoHostedUIIdentityProvider } from '@aws-amplify/auth';\nimport { Hub, ICredentials } from '@aws-amplify/core';\nimport { Subject, Observable, Subscription } from 'rxjs';\nimport {\n  CognitoUser,\n  CognitoUserSession,\n  ISignUpResult,\n} from 'amazon-cognito-identity-js';\nimport { SyncService } from '@shared/services/sync/sync.service';\nimport { Store } from '@ngxs/store';\nimport { Router } from '@angular/router';\n\nexport interface NewUser {\n  username: string;\n  password: string;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  private authState: Subject<CognitoUser | any> = new Subject<\n    CognitoUser | any\n  >();\n  authState$: Observable<CognitoUser | any> = this.authState.asObservable();\n\n  public static SIGN_IN = 'signIn';\n  public static SIGN_OUT = 'signOut';\n  public static FACEBOOK = CognitoHostedUIIdentityProvider.Facebook;\n  public static GOOGLE = CognitoHostedUIIdentityProvider.Google;\n\n  constructor(\n    private store: Store,\n    private sync: SyncService,\n    private router: Router\n  ) {\n    Hub.listen('auth', async (data) => {\n      const { channel, payload } = data;\n      switch (payload.event) {\n        case 'signIn':\n          this.authState.next(payload.data);\n          const creds: ICredentials = await this.getCredentials();\n          this.sync.hallmonitor(creds);\n          break;\n        case 'signOut':\n          // handle sign out\n          break;\n        default:\n          // do something by default\n          break;\n      }\n    });\n\n    Auth.currentAuthenticatedUser()\n      .then((user) => {\n        console.log('authenticated user');\n        this.authState.next(user);\n      })\n      .catch(() => console.log('Not signed in'));\n  }\n\n  /**\n   * This method is designed to help reload the user if the ID ever goes null\n   * will perform the following:\n   *  1. Get current credentials (if the token is still valid)\n   *  2. If no token available, and on a different page...go back to login\n   *  3. If on sign in or sign up...do nothing\n   * @returns\n   */\n  async reloadCredentials(): Promise<void> {\n    const creds = await this.getCredentials();\n    if (creds) {\n      await this.sync.hallmonitor(creds);\n    } else {\n      switch (this.router.url) {\n        case '/auth/signin':\n          break;\n        case '/auth/signup':\n          break;\n        case '/signin':\n          break;\n        case '/signin':\n          break;\n        default:\n          this.router.navigate(['/auth/signin']);\n          break;\n      }\n    }\n  }\n\n  /**\n   * Cognito sign up method\n   * @param {NewUser} user\n   * @returns\n   */\n  signUp(user: NewUser): Promise<ISignUpResult> {\n    return Auth.signUp({\n      username: user.username,\n      password: user.password,\n      attributes: {\n        email: user.username,\n      },\n    });\n  }\n\n  /**\n   * Cognito sign in method\n   * @param {string} username\n   * @param {string} password\n   * @returns\n   */\n  signIn(username: string, password: string): Promise<CognitoUser | any> {\n    return new Promise((resolve, reject) => {\n      Auth.signIn(username, password)\n        .then((user: CognitoUser | any) => {\n          resolve(user);\n        })\n        .catch((error: any) => reject(error));\n    });\n  }\n\n  /**\n   * Simple sign out method\n   * @returns\n   */\n  signOut(): Promise<any> {\n    return Auth.signOut();\n  }\n\n  /**\n   * Social signin (supports facebook and google)\n   * @param {CognitoHostedUIIdentityProvider} provider\n   * @returns\n   */\n  socialSignIn(\n    provider: CognitoHostedUIIdentityProvider\n  ): Promise<ICredentials> {\n    return Auth.federatedSignIn({\n      provider: provider,\n    });\n  }\n\n  /**\n   *\n   * @param {string} email\n   * @returns\n   */\n  resendSignUp(email: string): Promise<string> | undefined {\n    return email ? Auth.resendSignUp(email) : undefined;\n  }\n\n  /**\n   *\n   * @param email\n   * @param code\n   * @param pw\n   * @returns\n   */\n  forgotPasswordSubmit(\n    email: string,\n    code: string,\n    pw: string\n  ): Promise<void> | undefined {\n    return email\n      ? Auth.forgotPasswordSubmit(email.toLowerCase(), code, pw)\n      : undefined;\n  }\n\n  /**\n   *\n   * @returns\n   */\n  getCredentials(): Promise<ICredentials> {\n    return Auth.currentCredentials();\n  }\n\n  /**\n   *\n   * @returns\n   */\n  getCurrentAuthenticatedUser(): Promise<CognitoUser> {\n    return Auth.currentAuthenticatedUser();\n  }\n\n  /**\n   *\n   * @returns\n   */\n  getAuthState(): Observable<CognitoUser | any> {\n    return this.authState$;\n  }\n\n  /**\n   *\n   * @returns\n   */\n  refreshSession(): Promise<CognitoUserSession> {\n    return Auth.currentSession();\n  }\n\n  /**\n   *\n   * @param {CognitoUser} user\n   * @returns\n   */\n  async refreshAuthState(user?: CognitoUser): Promise<void> {\n    if (user) {\n      this.authState.next(user);\n      return;\n    }\n    try {\n      const user = await Auth.currentAuthenticatedUser();\n      this.authState.next(user);\n    } catch (err) {\n      const unconfirmed = await Auth.currentCredentials();\n      this.authState.next(null);\n    }\n  }\n\n  /**\n   *\n   */\n  async getAuthTokens(): Promise<string> {\n    try {\n      const user: CognitoUser = await Auth.currentAuthenticatedUser();\n      let session = user.getSignInUserSession();\n      return session ? session.getIdToken().getJwtToken() : '';\n    } catch (err) {\n      return '';\n    }\n  }\n\n  /**\n   *\n   */\n  async getAuthCredentials(): Promise<ICredentials | null> {\n    try {\n      const creds: ICredentials = await Auth.currentUserCredentials();\n      return creds;\n    } catch (err) {\n      return null;\n    }\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store"
                    },
                    {
                        "name": "sync",
                        "type": "SyncService"
                    },
                    {
                        "name": "router",
                        "type": "Router"
                    }
                ],
                "line": 31,
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "sync",
                        "type": "SyncService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "GuestService",
            "id": "injectable-GuestService-da2ba0c62c4477fd45ee972e4bf7c1d0",
            "file": "src/app/shared/services/auth/guest.service.ts",
            "properties": [
                {
                    "name": "guestState",
                    "defaultValue": "new Subject<ICredentials | any>()",
                    "type": "Subject<ICredentials | any>",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "guestState$",
                    "defaultValue": "this.guestState.asObservable()",
                    "type": "Observable<ICredentials | any>",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methods": [
                {
                    "name": "initGuestState",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<void>",
                    "typeParameters": [],
                    "line": 17,
                    "modifierKind": [
                        120
                    ]
                },
                {
                    "name": "refreshGuestState",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<void>",
                    "typeParameters": [],
                    "line": 21,
                    "modifierKind": [
                        120
                    ]
                }
            ],
            "description": "",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { ICredentials } from '@aws-amplify/core';\r\nimport { Auth } from 'aws-amplify';\r\nimport { Subject, Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class GuestService {\r\n  private guestState: Subject<ICredentials | any> = new Subject<ICredentials | any>();\r\n  guestState$: Observable<ICredentials | any> = this.guestState.asObservable();\r\n\r\n  constructor() {\r\n    this.initGuestState();\r\n  }\r\n\r\n  async initGuestState(): Promise<void> {\r\n    await this.refreshGuestState();\r\n  }\r\n\r\n  async refreshGuestState(): Promise<void> {\r\n    try {\r\n      const guest = await Auth.currentCredentials();\r\n      this.guestState.next(guest);\r\n    } catch (err) {\r\n      this.guestState.next(null);\r\n    }\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 11
            },
            "type": "injectable"
        },
        {
            "name": "IamService",
            "id": "injectable-IamService-6c1a2dcedbe1c6b42e5a8cec15198ab2",
            "file": "src/app/shared/services/auth/iam.service.ts",
            "properties": [],
            "methods": [],
            "description": "",
            "sourceCode": "import { Injectable } from '@angular/core';\r\n// import Auth from '@aws-amplify/auth';\r\n// import { ISigV4Config, SigV4 } from '@shared/models/signatureV4.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class IamService {\r\n  constructor() {}\r\n\r\n  // signRequest(\r\n  //   endpoint: string,\r\n  //   method: string,\r\n  //   body: any,\r\n  //   queryParams: any\r\n  // ): Promise<any> {\r\n  //   return Auth.currentCredentials()\r\n  //     .then((credentials) => {\r\n  //       let cred = Auth.essentialCredentials(credentials);\r\n  //       return Promise.resolve(cred);\r\n  //     })\r\n  //     .then((essentialCredentials) => {\r\n  //       let config: ISigV4Config = {\r\n  //         accessKey: essentialCredentials.accessKeyId,\r\n  //         secretKey: essentialCredentials.secretAccessKey,\r\n  //         sessionToken: essentialCredentials.sessionToken,\r\n  //         serviceName: 'execute-api',\r\n  //         defaultAcceptType: 'application/json',\r\n  //         defaultContentType: 'application/json',\r\n  //         region: 'us-east-2',\r\n  //         endpoint: endpoint,\r\n  //       };\r\n\r\n  //       let request = {\r\n  //         method,\r\n  //         path: '',\r\n  //         headers: {},\r\n  //         queryParams,\r\n  //         body,\r\n  //       };\r\n\r\n  //       let signedRequest = new SigV4(config).signRequest(request);\r\n\r\n  //       return Promise.resolve(signedRequest);\r\n  //     });\r\n  // }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "type": "injectable"
        },
        {
            "name": "KycService",
            "id": "injectable-KycService-e6f80bb5f8310ffdc011f278e267cbad",
            "file": "src/app/shared/services/kyc/kyc.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "activateStep",
                    "args": [
                        {
                            "name": "step",
                            "type": "number"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36,
                    "description": "<p>Takes a progress step ID and sets the status to true\nThen updates the state</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1255,
                                "end": 1259,
                                "flags": 0,
                                "escapedText": "step"
                            },
                            "type": "number",
                            "tagName": {
                                "pos": 1240,
                                "end": 1245,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": "<p>the progress step ID</p>\n",
                            "typeExpression": {
                                "pos": 1246,
                                "end": 1254,
                                "flags": 0,
                                "kind": 277,
                                "type": {
                                    "pos": 1247,
                                    "end": 1253,
                                    "flags": 2097152,
                                    "kind": 134
                                }
                            }
                        }
                    ]
                },
                {
                    "name": "completeStep",
                    "args": [
                        {
                            "name": "step",
                            "type": "number"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 74,
                    "description": "<p>Takes a progress step ID and sets the complete status to true\nThen updates the state</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 2468,
                                "end": 2472,
                                "flags": 0,
                                "escapedText": "step"
                            },
                            "type": "number",
                            "tagName": {
                                "pos": 2453,
                                "end": 2458,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": "<p>the progress step ID</p>\n",
                            "typeExpression": {
                                "pos": 2459,
                                "end": 2467,
                                "flags": 0,
                                "kind": 277,
                                "type": {
                                    "pos": 2460,
                                    "end": 2466,
                                    "flags": 2097152,
                                    "kind": 134
                                }
                            }
                        }
                    ]
                },
                {
                    "name": "inactivateStep",
                    "args": [
                        {
                            "name": "step",
                            "type": "number"
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<void>",
                    "typeParameters": [],
                    "line": 55,
                    "description": "<p>Takes a progress step ID and sets the status to false\nThen updates the state</p>\n",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1849,
                                "end": 1853,
                                "flags": 0,
                                "escapedText": "step"
                            },
                            "type": "number",
                            "tagName": {
                                "pos": 1834,
                                "end": 1839,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": "<p>the progress step ID</p>\n",
                            "typeExpression": {
                                "pos": 1840,
                                "end": 1848,
                                "flags": 0,
                                "kind": 277,
                                "type": {
                                    "pos": 1841,
                                    "end": 1847,
                                    "flags": 2097152,
                                    "kind": 134
                                }
                            }
                        }
                    ]
                },
                {
                    "name": "incompleteStep",
                    "args": [
                        {
                            "name": "step",
                            "type": "number"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 93,
                    "description": "<p>Takes a progress step ID and sets the complete status to false\nThen updates the state</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 3073,
                                "end": 3077,
                                "flags": 0,
                                "escapedText": "step"
                            },
                            "type": "number",
                            "tagName": {
                                "pos": 3058,
                                "end": 3063,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": "<p>the progress step ID</p>\n",
                            "typeExpression": {
                                "pos": 3064,
                                "end": 3072,
                                "flags": 0,
                                "kind": 277,
                                "type": {
                                    "pos": 3065,
                                    "end": 3071,
                                    "flags": 2097152,
                                    "kind": 134
                                }
                            }
                        }
                    ]
                },
                {
                    "name": "processGetAutthenticationQuestionsResponse",
                    "args": [
                        {
                            "name": "resp",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<IGetAuthenticationQuestionsResponseSuccess | undefined>",
                    "typeParameters": [],
                    "line": 296,
                    "description": "<p>Process and clean the indicative enrichment response back from Transunion</p>\n",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 9494,
                                "end": 9498,
                                "flags": 0,
                                "escapedText": "resp"
                            },
                            "type": "string",
                            "tagName": {
                                "pos": 9479,
                                "end": 9484,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": "<p>this is the JSON string back from the Transunion service</p>\n",
                            "typeExpression": {
                                "pos": 9485,
                                "end": 9493,
                                "flags": 0,
                                "kind": 277,
                                "type": {
                                    "pos": 9486,
                                    "end": 9492,
                                    "flags": 2097152,
                                    "kind": 137
                                }
                            }
                        },
                        {
                            "tagName": {
                                "pos": 9562,
                                "end": 9569,
                                "flags": 0,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ]
                },
                {
                    "name": "processIndicativeEnrichmentResponse",
                    "args": [
                        {
                            "name": "resp",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<IIndicativeEnrichmentResponseSuccess | undefined>",
                    "typeParameters": [],
                    "line": 266,
                    "description": "<p>Process and clean the indicative enrichment response back from Transunion</p>\n",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 8530,
                                "end": 8534,
                                "flags": 0,
                                "escapedText": "resp"
                            },
                            "type": "string",
                            "tagName": {
                                "pos": 8515,
                                "end": 8520,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": "<p>this is the JSON string back from the Transunion service</p>\n",
                            "typeExpression": {
                                "pos": 8521,
                                "end": 8529,
                                "flags": 0,
                                "kind": 277,
                                "type": {
                                    "pos": 8522,
                                    "end": 8528,
                                    "flags": 2097152,
                                    "kind": 137
                                }
                            }
                        },
                        {
                            "tagName": {
                                "pos": 8598,
                                "end": 8605,
                                "flags": 0,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ]
                },
                {
                    "name": "sendGetAuthenticationQuestions",
                    "args": [
                        {
                            "name": "data",
                            "type": "UpdateAppDataInput"
                        },
                        {
                            "name": "ssn",
                            "type": "string",
                            "defaultValue": "''"
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<any | undefined>",
                    "typeParameters": [],
                    "line": 240,
                    "description": "<p>Send the full ssn to the Transunion backend and await the KBA questions</p>\n<ul>\n<li>questions can be actual questions or a passcode for the phone</li>\n</ul>\n",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 7887,
                                "end": 7891,
                                "flags": 0,
                                "escapedText": "data"
                            },
                            "type": "UpdateAppDataInput",
                            "tagName": {
                                "pos": 7860,
                                "end": 7865,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": "<p>AppData state</p>\n",
                            "typeExpression": {
                                "pos": 7866,
                                "end": 7886,
                                "flags": 0,
                                "kind": 277,
                                "type": {
                                    "pos": 7867,
                                    "end": 7885,
                                    "flags": 2097152,
                                    "kind": 161,
                                    "typeName": {
                                        "pos": 7867,
                                        "end": 7885,
                                        "flags": 2097152,
                                        "escapedText": "UpdateAppDataInput"
                                    }
                                }
                            }
                        },
                        {
                            "name": "ssn",
                            "type": "string",
                            "defaultValue": "''",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "tagName": {
                                "pos": 7912,
                                "end": 7919,
                                "flags": 0,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ]
                },
                {
                    "name": "sendIndicativeEnrichment",
                    "args": [
                        {
                            "name": "data",
                            "type": "UpdateAppDataInput"
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<any | undefined>",
                    "typeParameters": [],
                    "line": 218,
                    "description": "<p>Send the indicative enrichment message to the Transunion backend and await a response</p>\n",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 7254,
                                "end": 7258,
                                "flags": 0,
                                "escapedText": "data"
                            },
                            "type": "UpdateAppDataInput",
                            "tagName": {
                                "pos": 7227,
                                "end": 7232,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": "<p>AppData state</p>\n",
                            "typeExpression": {
                                "pos": 7233,
                                "end": 7253,
                                "flags": 0,
                                "kind": 277,
                                "type": {
                                    "pos": 7234,
                                    "end": 7252,
                                    "flags": 2097152,
                                    "kind": 161,
                                    "typeName": {
                                        "pos": 7234,
                                        "end": 7252,
                                        "flags": 2097152,
                                        "escapedText": "UpdateAppDataInput"
                                    }
                                }
                            }
                        },
                        {
                            "tagName": {
                                "pos": 7279,
                                "end": 7286,
                                "flags": 0,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ]
                },
                {
                    "name": "updateCurrentRawQuestions",
                    "args": [
                        {
                            "name": "questions",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 187,
                    "description": "<p>Takes the string of KBA questions returned by the agency service and stores them in state</p>\n<ul>\n<li>Does not store in the database as there is no need to.</li>\n</ul>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 6132,
                                "end": 6141,
                                "flags": 0,
                                "escapedText": "questions"
                            },
                            "type": "string",
                            "tagName": {
                                "pos": 6117,
                                "end": 6122,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": "<p>the string of xml questions returned by Transunion or other agency</p>\n",
                            "typeExpression": {
                                "pos": 6123,
                                "end": 6131,
                                "flags": 0,
                                "kind": 277,
                                "type": {
                                    "pos": 6124,
                                    "end": 6130,
                                    "flags": 2097152,
                                    "kind": 137
                                }
                            }
                        }
                    ]
                },
                {
                    "name": "updateCurrentRawQuestionsAsync",
                    "args": [
                        {
                            "name": "questions",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<UpdateAppDataInput>",
                    "typeParameters": [],
                    "line": 198,
                    "description": "<p>(Synchronous) Takes the string of KBA questions returned by the agency service and stores them in state</p>\n<ul>\n<li>Does not store in the database as there is no need to.</li>\n</ul>\n",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 6583,
                                "end": 6592,
                                "flags": 0,
                                "escapedText": "questions"
                            },
                            "type": "string",
                            "tagName": {
                                "pos": 6568,
                                "end": 6573,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": "<p>the string of xml questions returned by Transunion or other agency</p>\n",
                            "typeExpression": {
                                "pos": 6574,
                                "end": 6582,
                                "flags": 0,
                                "kind": 277,
                                "type": {
                                    "pos": 6575,
                                    "end": 6581,
                                    "flags": 2097152,
                                    "kind": 137
                                }
                            }
                        }
                    ]
                },
                {
                    "name": "updateStep",
                    "args": [
                        {
                            "name": "lastActive",
                            "type": "number"
                        },
                        {
                            "name": "lastComplete",
                            "type": "number"
                        },
                        {
                            "name": "started",
                            "type": "boolean",
                            "defaultValue": "true"
                        }
                    ],
                    "optional": false,
                    "returnType": "OnboardingStateModel | undefined | void",
                    "typeParameters": [],
                    "line": 113,
                    "description": "<p>Takes the id of the step and updates the state of the step to either active or complete</p>\n",
                    "jsdoctags": [
                        {
                            "name": "lastActive",
                            "type": "number",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "lastComplete",
                            "type": "number",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "started",
                            "type": "boolean",
                            "defaultValue": "true",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "tagName": {
                                "pos": 3825,
                                "end": 3832,
                                "flags": 0,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ]
                },
                {
                    "name": "updateTransunionIndicativeEnrichment",
                    "args": [
                        {
                            "name": "agency",
                            "type": "AgenciesInput"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 168,
                    "description": "<p>Takes the agency status and updates the state with them</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 5452,
                                "end": 5458,
                                "flags": 0,
                                "escapedText": "agency"
                            },
                            "type": "AgenciesInput",
                            "tagName": {
                                "pos": 5430,
                                "end": 5435,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": "<p>the new agency input data to write to db and state</p>\n",
                            "typeExpression": {
                                "pos": 5436,
                                "end": 5451,
                                "flags": 0,
                                "kind": 277,
                                "type": {
                                    "pos": 5437,
                                    "end": 5450,
                                    "flags": 2097152,
                                    "kind": 161,
                                    "typeName": {
                                        "pos": 5437,
                                        "end": 5450,
                                        "flags": 2097152,
                                        "escapedText": "AgenciesInput"
                                    }
                                }
                            }
                        }
                    ]
                },
                {
                    "name": "updateUserAttributes",
                    "args": [
                        {
                            "name": "attrs",
                            "type": "UserAttributesInput"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 126,
                    "description": "<p>Takes the attributes and updates the state with them</p>\n",
                    "jsdoctags": [
                        {
                            "name": "attrs",
                            "type": "UserAttributesInput",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateUserAttributesAsync",
                    "args": [
                        {
                            "name": "attrs",
                            "type": "UserAttributesInput"
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<UpdateAppDataInput>",
                    "typeParameters": [],
                    "line": 144,
                    "description": "<p>Takes the attributes and updates the state with them</p>\n",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "attrs",
                            "type": "UserAttributesInput",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "description": "",
            "sourceCode": "import { Injectable, OnDestroy } from '@angular/core';\nimport { Store } from '@ngxs/store';\nimport { OnboardingStateModel } from '@store/onboarding';\nimport * as OnboardingActions from '@store/onboarding/onboarding.actions';\nimport * as UserActions from '@store/user/user.actions';\nimport * as AgenciesActions from '@store/agencies/agencies.actions';\nimport {\n  AgenciesInput,\n  APIService,\n  UpdateAppDataInput,\n  UserAttributesInput,\n} from '@shared/services/aws/api.service';\nimport { AppDataStateModel } from '@store/app-data';\nimport { AuthService } from '@shared/services/auth/auth.service';\nimport { state } from '@angular/animations';\nimport { IGetAuthenticationQuestionsResponseSuccess } from '@shared/models/get-authorization-questions';\nimport { IIndicativeEnrichmentResponseSuccess } from '@shared/models/indicative-enrichment';\nimport { TransunionService } from '@shared/services/transunion/transunion.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class KycService {\n  constructor(\n    private api: APIService,\n    private store: Store,\n    private auth: AuthService,\n    private transunion: TransunionService\n  ) {}\n\n  /**\n   * Takes a progress step ID and sets the status to true\n   * Then updates the state\n   * @param {number} step the progress step ID\n   */\n  activateStep(step: number): void {\n    this.store\n      .dispatch(new OnboardingActions.UpdateLastActive(step))\n      .subscribe((state: { appData: AppDataStateModel }) => {\n        const input = { ...state.appData } as UpdateAppDataInput;\n        if (!input.id) {\n          this.auth.reloadCredentials();\n          return;\n        } else {\n          this.api.UpdateAppData(input); // the listener will update the state.\n        }\n      });\n  }\n\n  /**\n   * Takes a progress step ID and sets the status to false\n   * Then updates the state\n   * @param {number} step the progress step ID\n   */\n  async inactivateStep(step: number): Promise<void> {\n    this.store\n      .dispatch(new OnboardingActions.UpdateLastActive(step))\n      .subscribe((state: { appData: AppDataStateModel }) => {\n        const input = { ...state.appData } as UpdateAppDataInput;\n        if (!input.id) {\n          this.auth.reloadCredentials();\n          return;\n        } else {\n          this.api.UpdateAppData(input); // the listener will update the state.\n        }\n      });\n  }\n\n  /**\n   * Takes a progress step ID and sets the complete status to true\n   * Then updates the state\n   * @param {number} step the progress step ID\n   */\n  completeStep(step: number): void {\n    this.store\n      .dispatch(new OnboardingActions.UpdateLastComplete(step))\n      .subscribe((state: { appData: AppDataStateModel }) => {\n        const input = { ...state.appData } as UpdateAppDataInput;\n        if (!input.id) {\n          this.auth.reloadCredentials();\n          return;\n        } else {\n          this.api.UpdateAppData(input); // the listener will update the state.\n        }\n      });\n  }\n\n  /**\n   * Takes a progress step ID and sets the complete status to false\n   * Then updates the state\n   * @param {number} step the progress step ID\n   */\n  incompleteStep(step: number): void {\n    this.store\n      .dispatch(new OnboardingActions.UpdateLastComplete(step))\n      .subscribe((state: { appData: AppDataStateModel }) => {\n        const input = { ...state.appData } as UpdateAppDataInput;\n        if (!input.id) {\n          this.auth.reloadCredentials();\n          return;\n        } else {\n          this.api.UpdateAppData(input); // the listener will update the state.\n        }\n      });\n  }\n\n  /**\n   * Takes the id of the step and updates the state of the step to either active or complete\n   * @param {number} id the progress step ID\n   * @param {{ active: boolean } | { complete: boolean }}  state the state of the step to update (active or complete)\n   * @returns\n   */\n  updateStep(\n    lastActive: number,\n    lastComplete: number,\n    started: boolean = true\n  ): OnboardingStateModel | undefined | void {\n    const state = this.store.snapshot();\n    return { ...state.user?.onboarding, lastActive, lastComplete, started };\n  }\n\n  /**\n   * Takes the attributes and updates the state with them\n   * @param {UserAttributesInput} attributes\n   */\n  updateUserAttributes(attrs: UserAttributesInput): void {\n    this.store\n      .dispatch(new UserActions.UpdateAttributes(attrs))\n      .subscribe((state: { appData: AppDataStateModel }) => {\n        const input = { ...state.appData } as UpdateAppDataInput;\n        if (!input.id) {\n          this.auth.reloadCredentials();\n          return;\n        } else {\n          this.api.UpdateAppData(input);\n        }\n      });\n  }\n\n  /**\n   * Takes the attributes and updates the state with them\n   * @param {UserAttributesInput} attributes\n   */\n  async updateUserAttributesAsync(\n    attrs: UserAttributesInput\n  ): Promise<UpdateAppDataInput> {\n    return await new Promise((resolve, reject) => {\n      this.store\n        .dispatch(new UserActions.UpdateAttributes(attrs))\n        .subscribe((state: { appData: AppDataStateModel }) => {\n          const input = { ...state.appData } as UpdateAppDataInput;\n          if (!input.id) {\n            this.auth.reloadCredentials();\n            reject();\n            return;\n          } else {\n            this.api.UpdateAppData(input);\n            resolve(input);\n          }\n        });\n    });\n  }\n\n  /**\n   * Takes the agency status and updates the state with them\n   * @param {AgenciesInput} agency the new agency input data to write to db and state\n   */\n  updateTransunionIndicativeEnrichment(agency: AgenciesInput): void {\n    this.store\n      .dispatch(new AgenciesActions.Edit(agency))\n      .subscribe((state: { appData: AppDataStateModel }) => {\n        const input = { ...state.appData } as UpdateAppDataInput;\n        if (!input.id) {\n          this.auth.reloadCredentials();\n          return;\n        } else {\n          this.api.UpdateAppData(input);\n        }\n      });\n  }\n\n  /**\n   * Takes the string of KBA questions returned by the agency service and stores them in state\n   *   - Does not store in the database as there is no need to.\n   * @param {string} questions the string of xml questions returned by Transunion or other agency\n   */\n  updateCurrentRawQuestions(questions: string): void {\n    this.store.dispatch(\n      new AgenciesActions.EditQuestions({ currentRawQuestions: questions })\n    );\n  }\n\n  /**\n   * (Synchronous) Takes the string of KBA questions returned by the agency service and stores them in state\n   *   - Does not store in the database as there is no need to.\n   * @param {string} questions the string of xml questions returned by Transunion or other agency\n   */\n  async updateCurrentRawQuestionsAsync(\n    questions: string\n  ): Promise<UpdateAppDataInput> {\n    return await new Promise((resolve, reject) => {\n      this.store\n        .dispatch(\n          new AgenciesActions.EditQuestions({ currentRawQuestions: questions })\n        )\n        .subscribe((state: { appData: AppDataStateModel }) => {\n          const input = { ...state.appData } as UpdateAppDataInput;\n          resolve(input);\n        });\n    });\n  }\n\n  /**\n   * Send the indicative enrichment message to the Transunion backend and await a response\n   * @param {UpdateAppDataInput} data AppData state\n   * @returns\n   */\n  async sendIndicativeEnrichment(\n    data: UpdateAppDataInput\n  ): Promise<any | undefined> {\n    try {\n      const msg = this.transunion.createIndicativeEnrichmentPayload(data);\n      const res = await this.api.Transunion(\n        'IndicativeEnrichment',\n        JSON.stringify(msg)\n      );\n      return res ? res : undefined;\n    } catch (err) {\n      console.log('err ', err);\n      return;\n    }\n  }\n\n  /**\n   * Send the full ssn to the Transunion backend and await the KBA questions\n   *   - questions can be actual questions or a passcode for the phone\n   * @param {UpdateAppDataInput} data AppData state\n   * @returns\n   */\n  async sendGetAuthenticationQuestions(\n    data: UpdateAppDataInput,\n    ssn: string = ''\n  ): Promise<any | undefined> {\n    if (!ssn) return;\n    try {\n      const msg = this.transunion.createGetAuthenticationQuestionsPayload(\n        data,\n        ssn\n      );\n      const res = await this.api.Transunion(\n        'GetAuthenticationQuestions',\n        JSON.stringify(msg)\n      );\n      return res ? res : undefined;\n    } catch (err) {\n      console.log('err ', err);\n      return;\n    }\n  }\n\n  /**\n   * Process and clean the indicative enrichment response back from Transunion\n   * @param {string} resp this is the JSON string back from the Transunion service\n   * @returns\n   */\n  async processIndicativeEnrichmentResponse(\n    resp: string\n  ): Promise<IIndicativeEnrichmentResponseSuccess | undefined> {\n    console.log('resp', resp);\n    const enrichment: IIndicativeEnrichmentResponseSuccess = JSON.parse(\n      JSON.parse(resp)['IndicativeEnrichmentResults']\n    );\n    if (\n      enrichment['s:Envelope']['s:Body'].IndicativeEnrichmentResponse\n        .IndicativeEnrichmentResult['a:ResponseType']._text === 'Success'\n    ) {\n      // update indicative enrichment as success\n      await this.updateTransunionIndicativeEnrichment({\n        transunion: {\n          authenticated: false,\n          indicativeEnrichmentSuccess: true,\n        },\n      });\n      // now do the authentication\n      return enrichment;\n    } else {\n      return;\n    }\n  }\n\n  /**\n   * Process and clean the indicative enrichment response back from Transunion\n   * @param {string} resp this is the JSON string back from the Transunion service\n   * @returns\n   */\n  async processGetAutthenticationQuestionsResponse(\n    resp: string\n  ): Promise<IGetAuthenticationQuestionsResponseSuccess | undefined> {\n    const questions: IGetAuthenticationQuestionsResponseSuccess = JSON.parse(\n      JSON.parse(resp)['GetAuthenticationQuestions']\n    );\n    if (\n      questions['s:Envelope']['s:Body'].GetAuthenticationQuestionsResponse\n        .GetAuthenticationQuestionsResult['a:ResponseType']._text === 'Success'\n    ) {\n      // update indicative enrichment as success\n      await this.updateTransunionIndicativeEnrichment({\n        transunion: {\n          authenticated: false,\n          indicativeEnrichmentSuccess: true,\n          getAuthenticationQuestionsSuccess: true,\n        },\n      });\n      // now do the authentication\n      return questions;\n    } else {\n      return;\n    }\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "api",
                        "type": "APIService"
                    },
                    {
                        "name": "store",
                        "type": "Store"
                    },
                    {
                        "name": "auth",
                        "type": "AuthService"
                    },
                    {
                        "name": "transunion",
                        "type": "TransunionService"
                    }
                ],
                "line": 23,
                "jsdoctags": [
                    {
                        "name": "api",
                        "type": "APIService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "store",
                        "type": "Store",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "auth",
                        "type": "AuthService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "transunion",
                        "type": "TransunionService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "OnboardingService",
            "id": "injectable-OnboardingService-c0c6cd28410ed2957ae9bd4faa0088dc",
            "file": "src/app/layouts/onboarding/onboarding.service.ts",
            "properties": [
                {
                    "name": "onboarding",
                    "defaultValue": "{} as OnboardingStateModel",
                    "type": "OnboardingStateModel",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "onboarding$",
                    "defaultValue": "this.store.select(\n    OnboardingSelectors.getOnboarding\n  )",
                    "type": "Observable<OnboardingStateModel>",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "onboardingSub$",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        112
                    ]
                }
            ],
            "methods": [
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28
                }
            ],
            "description": "",
            "sourceCode": "import { Injectable, OnDestroy } from '@angular/core';\nimport { Store } from '@ngxs/store';\nimport { Observable, Subscription } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport { OnboardingStateModel } from '@store/onboarding';\nimport { OnboardingSelectors } from '@store/onboarding/onboarding.selectors';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OnboardingService implements OnDestroy {\n  private onboarding: OnboardingStateModel = {} as OnboardingStateModel;\n  private onboarding$: Observable<OnboardingStateModel> = this.store.select(\n    OnboardingSelectors.getOnboarding\n  );\n  private onboardingSub$: Subscription;\n\n  constructor(private store: Store) {\n    this.onboardingSub$ = this.onboarding$\n      .pipe(\n        filter((onboarding: OnboardingStateModel) => onboarding !== undefined)\n      )\n      .subscribe((onboarding: OnboardingStateModel) => {\n        this.onboarding = onboarding;\n      });\n  }\n\n  ngOnDestroy(): void {\n    if (this.onboardingSub$) this.onboardingSub$.unsubscribe();\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store"
                    }
                ],
                "line": 16,
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "OnboardingState",
            "id": "injectable-OnboardingState-252eefafd37b799c05572c2c685228d3",
            "file": "src/app/store/onboarding/onboarding.state.ts",
            "properties": [],
            "methods": [
                {
                    "name": "addOnboarding",
                    "args": [
                        {
                            "name": "ctx",
                            "type": "StateContext<OnboardingStateModel>"
                        },
                        {
                            "type": "OnboardingActions.Add"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "decorators": [
                        {
                            "name": "Action",
                            "stringifiedArguments": "OnboardingActions.Add"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "ctx",
                            "type": "StateContext<OnboardingStateModel>",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "type": "OnboardingActions.Add",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "deleteOnboarding",
                    "args": [
                        {
                            "name": "ctx",
                            "type": "StateContext<OnboardingStateModel>"
                        },
                        {
                            "type": "OnboardingActions.Delete"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "decorators": [
                        {
                            "name": "Action",
                            "stringifiedArguments": "OnboardingActions.Delete"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "ctx",
                            "type": "StateContext<OnboardingStateModel>",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "type": "OnboardingActions.Delete",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateLastActive",
                    "args": [
                        {
                            "name": "ctx",
                            "type": "StateContext<OnboardingStateModel>"
                        },
                        {
                            "type": "OnboardingActions.UpdateLastActive"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 50,
                    "decorators": [
                        {
                            "name": "Action",
                            "stringifiedArguments": "OnboardingActions.UpdateLastActive"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "ctx",
                            "type": "StateContext<OnboardingStateModel>",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "type": "OnboardingActions.UpdateLastActive",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateLastComplete",
                    "args": [
                        {
                            "name": "ctx",
                            "type": "StateContext<OnboardingStateModel>"
                        },
                        {
                            "type": "OnboardingActions.UpdateLastComplete"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 60,
                    "decorators": [
                        {
                            "name": "Action",
                            "stringifiedArguments": "OnboardingActions.UpdateLastComplete"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "ctx",
                            "type": "StateContext<OnboardingStateModel>",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "type": "OnboardingActions.UpdateLastComplete",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateOnboaring",
                    "args": [
                        {
                            "name": "ctx",
                            "type": "StateContext<OnboardingStateModel>"
                        },
                        {
                            "type": "OnboardingActions.Edit"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "decorators": [
                        {
                            "name": "Action",
                            "stringifiedArguments": "OnboardingActions.Edit"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "ctx",
                            "type": "StateContext<OnboardingStateModel>",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "type": "OnboardingActions.Edit",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "description": "",
            "sourceCode": "import { State, Action, StateContext } from '@ngxs/store';\nimport { Injectable } from '@angular/core';\nimport * as OnboardingActions from './onboarding.actions';\nimport { OnboardingStateModel } from '@store/onboarding/onboarding.model';\n\n@State<OnboardingStateModel>({\n  name: 'onboarding',\n  defaults: {\n    lastActive: -1,\n    lastComplete: -1,\n    started: false,\n  },\n})\n@Injectable()\nexport class OnboardingState {\n  constructor() {}\n\n  @Action(OnboardingActions.Add)\n  addOnboarding(\n    ctx: StateContext<OnboardingStateModel>,\n    { payload }: OnboardingActions.Add\n  ): void {\n    ctx.patchState({\n      ...payload,\n    });\n  }\n\n  @Action(OnboardingActions.Edit)\n  updateOnboaring(\n    ctx: StateContext<OnboardingStateModel>,\n    { payload }: OnboardingActions.Edit\n  ): void {\n    ctx.patchState({\n      ...payload,\n    });\n  }\n\n  @Action(OnboardingActions.Delete)\n  deleteOnboarding(\n    ctx: StateContext<OnboardingStateModel>,\n    {}: OnboardingActions.Delete\n  ): void {\n    const payload = new OnboardingStateModel();\n    ctx.patchState({\n      ...payload,\n    });\n  }\n\n  @Action(OnboardingActions.UpdateLastActive)\n  updateLastActive(\n    ctx: StateContext<OnboardingStateModel>,\n    { payload }: OnboardingActions.UpdateLastActive\n  ): void {\n    ctx.patchState({\n      lastActive: payload,\n    });\n  }\n\n  @Action(OnboardingActions.UpdateLastComplete)\n  updateLastComplete(\n    ctx: StateContext<OnboardingStateModel>,\n    { payload }: OnboardingActions.UpdateLastComplete\n  ): void {\n    ctx.patchState({\n      lastComplete: payload,\n    });\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 15
            },
            "type": "injectable"
        },
        {
            "name": "SyncService",
            "id": "injectable-SyncService-8f0622d94cb04a78acf3d30dae353498",
            "file": "src/app/shared/services/sync/sync.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "cleanBackendData",
                    "args": [
                        {
                            "name": "data",
                            "type": "GetAppDataQuery"
                        }
                    ],
                    "optional": false,
                    "returnType": "AppDataStateModel",
                    "typeParameters": [],
                    "line": 105,
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "GetAppDataQuery",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "hallmonitor",
                    "args": [
                        {
                            "name": "creds",
                            "type": "ICredentials"
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<void>",
                    "typeParameters": [],
                    "line": 30,
                    "description": "<p>Hall monitor. Checks the user and tells them where to go when they come back\n   to the app for the first and subsequent times.</p>\n",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "creds",
                            "type": "ICredentials",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "tagName": {
                                "pos": 807,
                                "end": 814,
                                "flags": 0,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ]
                },
                {
                    "name": "initAppData",
                    "args": [
                        {
                            "name": "creds",
                            "type": "ICredentials"
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<CreateAppDataMutation | undefined>",
                    "typeParameters": [],
                    "line": 77,
                    "description": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 2357,
                                "end": 2362,
                                "flags": 0,
                                "escapedText": "creds"
                            },
                            "type": "ICredentials",
                            "tagName": {
                                "pos": 2336,
                                "end": 2341,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": "",
                            "typeExpression": {
                                "pos": 2342,
                                "end": 2356,
                                "flags": 0,
                                "kind": 277,
                                "type": {
                                    "pos": 2343,
                                    "end": 2355,
                                    "flags": 2097152,
                                    "kind": 161,
                                    "typeName": {
                                        "pos": 2343,
                                        "end": 2355,
                                        "flags": 2097152,
                                        "escapedText": "ICredentials"
                                    }
                                }
                            }
                        }
                    ]
                }
            ],
            "description": "",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ICredentials } from '@aws-amplify/core';\nimport { Store } from '@ngxs/store';\nimport {\n  APIService,\n  CreateAppDataInput,\n  CreateAppDataMutation,\n  GetAppDataQuery,\n} from '@shared/services/aws/api.service';\nimport * as AppDataActions from '@store/app-data/app-data.actions';\nimport { AppDataStateModel } from '@store/app-data';\nimport { deleteKeyNestedObject } from '@shared/utils/utils';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SyncService {\n  constructor(\n    private api: APIService,\n    private store: Store,\n    private router: Router\n  ) {}\n\n  /**\n   * Hall monitor. Checks the user and tells them where to go when they come back\n   *   to the app for the first and subsequent times.\n   * @returns\n   */\n  async hallmonitor(creds: ICredentials): Promise<void> {\n    console.log('calling hallmonitor');\n    const { identityId: id } = creds;\n    // check if db has data\n    const data = await this.api.GetAppData(id);\n    const clean = this.cleanBackendData(data);\n\n    if (!data) {\n      // new user...seed database\n      await this.initAppData({ identityId: id } as ICredentials);\n      this.router.navigate(['/onboarding/name']);\n      return;\n    } else {\n      // existing user...check where last left off\n      const payload: AppDataStateModel = { ...clean } as AppDataStateModel;\n      this.store\n        .dispatch(new AppDataActions.Add(payload))\n        .subscribe((state: { appData: AppDataStateModel }) => {\n          if (state.appData.user?.onboarding?.lastComplete === 3) {\n            this.router.navigate(['/dashboard/']);\n          } else {\n            switch (state.appData.user?.onboarding?.lastComplete) {\n              case 0:\n                this.router.navigate(['/onboarding/name']);\n                break;\n              case 1:\n                this.router.navigate(['/onboarding/address']);\n                break;\n              case 2:\n                this.router.navigate(['/onboarding/identity']);\n                break;\n              case 3:\n                this.router.navigate(['/onboarding/verify']);\n                break;\n              default:\n                this.router.navigate(['/dashboard/']);\n                break;\n            }\n          }\n        });\n    }\n  }\n\n  /**\n   *\n   * @param {ICredentials} creds\n   */\n  async initAppData(\n    creds: ICredentials\n  ): Promise<CreateAppDataMutation | undefined> {\n    const input: CreateAppDataInput = {\n      id: creds.identityId,\n      user: {\n        id: creds.identityId,\n        onboarding: {\n          lastActive: 0,\n          lastComplete: -1,\n          started: true,\n        },\n      },\n      agencies: {\n        transunion: { authenticated: false },\n        experian: { authenticated: false },\n        equifax: { authenticated: false },\n      },\n    };\n    try {\n      const data = await this.api.CreateAppData(input);\n      return data;\n    } catch (err) {\n      console.log('initApp error', err);\n      return;\n    }\n  }\n\n  cleanBackendData(data: GetAppDataQuery): AppDataStateModel {\n    let clean = deleteKeyNestedObject(data, '__typename');\n    delete clean.createdAt; // this is a graphql managed field\n    delete clean.updatedAt; // this is a graphql managed field\n    return clean;\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "api",
                        "type": "APIService"
                    },
                    {
                        "name": "store",
                        "type": "Store"
                    },
                    {
                        "name": "router",
                        "type": "Router"
                    }
                ],
                "line": 18,
                "jsdoctags": [
                    {
                        "name": "api",
                        "type": "APIService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "store",
                        "type": "Store",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "TransunionService",
            "id": "injectable-TransunionService-65dd308d6e0011c127b63d2a977948a6",
            "file": "src/app/shared/services/transunion/transunion.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "createGetAuthenticationQuestionsPayload",
                    "args": [
                        {
                            "name": "data",
                            "type": "AppDataStateModel"
                        },
                        {
                            "name": "ssn",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 59,
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "AppDataStateModel",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "ssn",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "createIndicativeEnrichmentPayload",
                    "args": [
                        {
                            "name": "data",
                            "type": "AppDataStateModel"
                        }
                    ],
                    "optional": false,
                    "returnType": "IIndicativeEnrichmentMsg | undefined",
                    "typeParameters": [],
                    "line": 12,
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "AppDataStateModel",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "description": "",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { IGetAuthenticationQuestionsMsg } from '@shared/models/get-authorization-questions';\nimport { IIndicativeEnrichmentMsg } from '@shared/models/indicative-enrichment';\nimport { AppDataStateModel } from '@store/app-data';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TransunionService {\n  constructor() {}\n\n  createIndicativeEnrichmentPayload(\n    data: AppDataStateModel\n  ): IIndicativeEnrichmentMsg | undefined {\n    const id = data.id.split(':').pop();\n    const attrs = data.user?.userAttributes;\n    const dob = attrs?.dob;\n\n    if (!attrs || !id || !dob) {\n      console.log(`no attrs, id, or dob: attrs=${attrs}; id=${id}; dob=${dob}`);\n      return;\n    }\n\n    return {\n      AdditionalInputs: {\n        Data: {\n          Name: 'CreditReportVersion',\n          Value: '1',\n        },\n      },\n      RequestKey: '',\n      ClientKey: id,\n      Customer: {\n        CurrentAddress: {\n          AddressLine1: attrs.address?.addressOne || '',\n          AddressLine2: attrs.address?.addressTwo || '',\n          City: attrs.address?.city || '',\n          State: attrs.address?.state || '',\n          Zipcode: attrs.address?.zip || '',\n        },\n        PreviousAddress: {},\n        DateOfBirth:\n          `${attrs.dob?.year}-${\n            monthMap[dob.month.toLowerCase()]\n          }-${`0${dob.day}`.slice(-2)}` || '',\n        FullName: {\n          FirstName: attrs.name?.first || '',\n          LastName: attrs.name?.last || '',\n          MiddleName: attrs.name?.middle || '',\n          Prefix: null,\n          Suffix: null,\n        },\n        Ssn: `000000000${attrs.ssn?.lastfour}`.slice(-9) || '',\n      },\n      ServiceBundleCode: 'CC2BraveCreditIndicativeEnrichment',\n    } as IIndicativeEnrichmentMsg;\n  }\n\n  createGetAuthenticationQuestionsPayload(\n    data: AppDataStateModel,\n    ssn: string\n  ) {\n    const id = data.id.split(':').pop();\n    const attrs = data.user?.userAttributes;\n    const dob = attrs?.dob;\n\n    if (!attrs || !id || !dob) {\n      console.log(`no attrs, id, or dob: attrs=${attrs}; id=${id}; dob=${dob}`);\n      return;\n    }\n\n    return {\n      AdditionalInputs: {\n        Data: {\n          Name: 'CreditReportVersion',\n          Value: '1',\n        },\n      },\n      RequestKey: '',\n      ClientKey: id,\n      Customer: {\n        CurrentAddress: {\n          AddressLine1: attrs.address?.addressOne || '',\n          AddressLine2: attrs.address?.addressTwo || '',\n          City: attrs.address?.city || '',\n          State: attrs.address?.state || '',\n          Zipcode: attrs.address?.zip || '',\n        },\n        PreviousAddress: {},\n        DateOfBirth:\n          `${attrs.dob?.year}-${\n            monthMap[dob.month.toLowerCase()]\n          }-${`0${dob.day}`.slice(-2)}` || '',\n        FullName: {\n          FirstName: attrs.name?.first || '',\n          LastName: attrs.name?.last || '',\n          MiddleName: attrs.name?.middle || '',\n        },\n        Ssn: ssn || '',\n      },\n      ServiceBundleCode: 'CC2BraveCreditAuthentication',\n    } as IGetAuthenticationQuestionsMsg;\n  }\n}\n\nconst monthMap: Record<string, any> = {\n  jan: '01',\n  feb: '02',\n  mar: '03',\n  apr: '04',\n  may: '05',\n  jun: '06',\n  jul: '07',\n  aug: '08',\n  sep: '09',\n  oct: '10',\n  nov: '11',\n  dec: '12',\n};\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 9
            },
            "type": "injectable"
        },
        {
            "name": "UserState",
            "id": "injectable-UserState-09538d2dad6a526d8c2d9c0f049dfd74",
            "file": "src/app/store/user/user.state.ts",
            "properties": [],
            "methods": [
                {
                    "name": "addUser",
                    "args": [
                        {
                            "name": "ctx",
                            "type": "StateContext<UserStateModel>"
                        },
                        {
                            "type": "UserActions.Add"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "decorators": [
                        {
                            "name": "Action",
                            "stringifiedArguments": "UserActions.Add"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "ctx",
                            "type": "StateContext<UserStateModel>",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "type": "UserActions.Add",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "deleteUser",
                    "args": [
                        {
                            "name": "ctx",
                            "type": "StateContext<UserStateModel>"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "decorators": [
                        {
                            "name": "Action",
                            "stringifiedArguments": "UserActions.Delete"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "ctx",
                            "type": "StateContext<UserStateModel>",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateAttributes",
                    "args": [
                        {
                            "name": "ctx",
                            "type": "StateContext<UserStateModel>"
                        },
                        {
                            "type": "UserActions.UpdateAttributes"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 42,
                    "decorators": [
                        {
                            "name": "Action",
                            "stringifiedArguments": "UserActions.UpdateAttributes"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "ctx",
                            "type": "StateContext<UserStateModel>",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "type": "UserActions.UpdateAttributes",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateUser",
                    "args": [
                        {
                            "name": "ctx",
                            "type": "StateContext<UserStateModel>"
                        },
                        {
                            "type": "UserActions.Edit"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "decorators": [
                        {
                            "name": "Action",
                            "stringifiedArguments": "UserActions.Edit"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "ctx",
                            "type": "StateContext<UserStateModel>",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "type": "UserActions.Edit",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "description": "",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { State, Action, StateContext } from '@ngxs/store';\nimport * as UserActions from './user.actions';\nimport { UserStateModel } from '@store/user/user.model';\nimport { OnboardingState } from '@store/onboarding';\n\n@State<UserStateModel>({\n  name: 'user',\n  defaults: {\n    id: '',\n  },\n  children: [OnboardingState],\n})\n@Injectable()\nexport class UserState {\n  constructor() {}\n\n  @Action(UserActions.Add)\n  addUser(ctx: StateContext<UserStateModel>, { payload }: UserActions.Add) {\n    const state = ctx.getState();\n    ctx.patchState({\n      ...payload,\n    });\n  }\n\n  @Action(UserActions.Edit)\n  updateUser(ctx: StateContext<UserStateModel>, { payload }: UserActions.Edit) {\n    ctx.patchState({\n      ...payload,\n    });\n  }\n\n  @Action(UserActions.Delete)\n  deleteUser(ctx: StateContext<UserStateModel>) {\n    const payload = new UserStateModel();\n    ctx.patchState({\n      ...payload,\n    });\n  }\n\n  @Action(UserActions.UpdateAttributes)\n  updateAttributes(\n    ctx: StateContext<UserStateModel>,\n    { payload }: UserActions.UpdateAttributes\n  ): void {\n    const state = ctx.getState();\n    ctx.patchState({\n      userAttributes: {\n        ...state.userAttributes,\n        ...payload,\n      },\n    });\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 15
            },
            "type": "injectable"
        }
    ],
    "classes": [
        {
            "name": "Add",
            "id": "class-Add-2858b75b1f959e20714e29a6a29b1872",
            "file": "src/app/store/agencies/agencies.actions.ts",
            "type": "class",
            "sourceCode": "import { AgenciesStateModel } from '@store/agencies';\n\nexport class Add {\n  static readonly type = '[Agencies] Add';\n  constructor(public payload: AgenciesStateModel) {}\n}\n\nexport class Edit {\n  static readonly type = '[Agencies] Edit';\n  constructor(\n    public payload: AgenciesStateModel | Partial<AgenciesStateModel>\n  ) {}\n}\n\nexport class Delete {\n  static readonly type = '[Agencies] Delete';\n  constructor() {}\n}\n\nexport class EditQuestions {\n  static readonly type = '[Agencies] EditQuestions';\n  constructor(public payload: Partial<AgenciesStateModel>) {}\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "payload",
                        "type": "AgenciesStateModel"
                    }
                ],
                "line": 4,
                "jsdoctags": [
                    {
                        "name": "payload",
                        "type": "AgenciesStateModel",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "payload",
                    "type": "AgenciesStateModel",
                    "optional": false,
                    "description": "",
                    "line": 5,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "type",
                    "defaultValue": "'[Agencies] Add'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4,
                    "modifierKind": [
                        115,
                        132
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "Add",
            "id": "class-Add-1edc300a9f216b0d10eb50c51640290e-1",
            "file": "src/app/store/app-data/app-data.actions.ts",
            "type": "class",
            "sourceCode": "import { AppDataStateModel } from '@store/app-data/app-data.model';\n\nexport class Fetch {\n  static readonly type = '[AppData] Fetch';\n  constructor() {}\n}\n\nexport class Add {\n  static readonly type = '[AppData] Add';\n  constructor(public payload: AppDataStateModel) {}\n}\n\nexport class Edit {\n  static readonly type = '[AppData] Edit';\n  constructor(public payload: AppDataStateModel) {}\n}\n\nexport class Delete {\n  static readonly type = '[AppData] Delete';\n  constructor() {}\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "payload",
                        "type": "AppDataStateModel"
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "payload",
                        "type": "AppDataStateModel",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "payload",
                    "type": "AppDataStateModel",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "type",
                    "defaultValue": "'[AppData] Add'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        115,
                        132
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "Add-1"
        },
        {
            "name": "Add",
            "id": "class-Add-9bac12d32d1effb057ce16af1f3528b4-2",
            "file": "src/app/store/user/user.actions.ts",
            "type": "class",
            "sourceCode": "import { UserAttributesInput } from '@shared/services/aws/api.service';\nimport { UserStateModel } from '@store/user/user.model';\n\nexport class Add {\n  static readonly type = '[User] Add';\n  constructor(public payload: UserStateModel) {}\n}\n\nexport class Edit {\n  static readonly type = '[User] Edit';\n  constructor(public payload: UserStateModel | Partial<UserStateModel>) {}\n}\n\nexport class Delete {\n  static readonly type = '[User] Delete';\n  constructor() {}\n}\n\nexport class UpdateAttributes {\n  static readonly type = '[UserAttributes] Edit';\n  constructor(public payload: UserAttributesInput) {}\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "payload",
                        "type": "UserStateModel"
                    }
                ],
                "line": 5,
                "jsdoctags": [
                    {
                        "name": "payload",
                        "type": "UserStateModel",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "payload",
                    "type": "UserStateModel",
                    "optional": false,
                    "description": "",
                    "line": 6,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "type",
                    "defaultValue": "'[User] Add'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5,
                    "modifierKind": [
                        115,
                        132
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "isDuplicate": true,
            "duplicateId": 2,
            "duplicateName": "Add-2"
        },
        {
            "name": "Add",
            "id": "class-Add-d646ed2ff7178c40d66a420585673988-3",
            "file": "src/app/store/onboarding/onboarding.actions.ts",
            "type": "class",
            "sourceCode": "import { OnboardingStateModel } from '@store/onboarding';\n\nexport class Add {\n  static readonly type = '[Onboarding] Add';\n  constructor(public payload: OnboardingStateModel) {}\n}\n\nexport class Edit {\n  static readonly type = '[Onboarding] Edit';\n  constructor(public payload: OnboardingStateModel) {}\n}\n\nexport class Delete {\n  static readonly type = '[Onboarding] Delete';\n  constructor() {}\n}\n\nexport class UpdateLastActive {\n  static readonly type = '[Onboarding] UpdateLastActive';\n  constructor(public payload: number) {}\n}\n\nexport class UpdateLastComplete {\n  static readonly type = '[Onboarding] UpdateLastComplete';\n  constructor(public payload: number) {}\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "payload",
                        "type": "OnboardingStateModel"
                    }
                ],
                "line": 4,
                "jsdoctags": [
                    {
                        "name": "payload",
                        "type": "OnboardingStateModel",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "payload",
                    "type": "OnboardingStateModel",
                    "optional": false,
                    "description": "",
                    "line": 5,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "type",
                    "defaultValue": "'[Onboarding] Add'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4,
                    "modifierKind": [
                        115,
                        132
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "isDuplicate": true,
            "duplicateId": 3,
            "duplicateName": "Add-3"
        },
        {
            "name": "AgenciesSelectors",
            "id": "class-AgenciesSelectors-f1f3f8f6cb014b6c33d379675f163ff8",
            "file": "src/app/store/agencies/agencies.selectors.ts",
            "type": "class",
            "sourceCode": "import { Selector } from '@ngxs/store';\nimport { AgenciesStateModel } from '@store/agencies/agencies.model';\n\nexport class AgenciesSelectors {\n  @Selector([AgenciesStateModel])\n  static getAgencies(state: AgenciesStateModel): AgenciesStateModel {\n    return state;\n  }\n\n  @Selector([AgenciesStateModel])\n  static getRawQuestions(state: AgenciesStateModel): string {\n    return state.currentRawQuestions || 'test';\n  }\n}\n",
            "properties": [],
            "methods": [
                {
                    "name": "getAgencies",
                    "args": [
                        {
                            "name": "state",
                            "type": "AgenciesStateModel"
                        }
                    ],
                    "optional": false,
                    "returnType": "AgenciesStateModel",
                    "typeParameters": [],
                    "line": 6,
                    "decorators": [
                        {
                            "name": "Selector",
                            "stringifiedArguments": "undefined"
                        }
                    ],
                    "modifierKind": [
                        115
                    ],
                    "jsdoctags": [
                        {
                            "name": "state",
                            "type": "AgenciesStateModel",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getRawQuestions",
                    "args": [
                        {
                            "name": "state",
                            "type": "AgenciesStateModel"
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 11,
                    "decorators": [
                        {
                            "name": "Selector",
                            "stringifiedArguments": "undefined"
                        }
                    ],
                    "modifierKind": [
                        115
                    ],
                    "jsdoctags": [
                        {
                            "name": "state",
                            "type": "AgenciesStateModel",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "AgenciesStateModel",
            "id": "class-AgenciesStateModel-b050dde4d01eebe314321d9b86272ebb",
            "file": "src/app/store/agencies/agencies.model.ts",
            "type": "class",
            "sourceCode": "import {\n  AgenciesInput,\n  EquifaxInput,\n  ExperianInput,\n  TransunionInput,\n} from '@shared/services/aws/api.service';\n\nexport class AgenciesStateModel implements AgenciesInput {\n  transunion?: TransunionInput | null | undefined;\n  equifax?: EquifaxInput | null | undefined;\n  experian?: ExperianInput | null | undefined;\n  currentRawQuestions?: string | null | undefined;\n}\n",
            "properties": [
                {
                    "name": "currentRawQuestions",
                    "type": "string | null | undefined",
                    "optional": true,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "equifax",
                    "type": "EquifaxInput | null | undefined",
                    "optional": true,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "experian",
                    "type": "ExperianInput | null | undefined",
                    "optional": true,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "transunion",
                    "type": "TransunionInput | null | undefined",
                    "optional": true,
                    "description": "",
                    "line": 9
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "implements": [
                "AgenciesInput"
            ]
        },
        {
            "name": "AppDataSelectors",
            "id": "class-AppDataSelectors-f219ed8992d673721532b5cb74f8ef75",
            "file": "src/app/store/app-data/app-data.selectors.ts",
            "type": "class",
            "sourceCode": "import { Selector } from '@ngxs/store';\r\nimport { AppDataStateModel } from '@store/app-data/app-data.model';\r\nimport { AppDataState } from '@store/app-data/app-data.state';\r\n\r\nexport class AppDataSelectors {\r\n  @Selector([AppDataState])\r\n  static getAppData(state: AppDataStateModel): AppDataStateModel {\r\n    return state;\r\n  }\r\n}\r\n",
            "properties": [],
            "methods": [
                {
                    "name": "getAppData",
                    "args": [
                        {
                            "name": "state",
                            "type": "AppDataStateModel"
                        }
                    ],
                    "optional": false,
                    "returnType": "AppDataStateModel",
                    "typeParameters": [],
                    "line": 7,
                    "decorators": [
                        {
                            "name": "Selector",
                            "stringifiedArguments": "undefined"
                        }
                    ],
                    "modifierKind": [
                        115
                    ],
                    "jsdoctags": [
                        {
                            "name": "state",
                            "type": "AppDataStateModel",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "AppDataStateModel",
            "id": "class-AppDataStateModel-0da05c8d1407966a490b7e213f03ccf9",
            "file": "src/app/store/app-data/app-data.model.ts",
            "type": "class",
            "sourceCode": "import {\n  AgenciesInput,\n  UpdateAppDataInput,\n  UserInput,\n} from '@shared/services/aws/api.service';\n\ntype typename = 'AppData';\n\nexport class AppDataStateModel implements UpdateAppDataInput {\n  id: string = 'AppData';\n  user?: UserInput | null | undefined;\n  agencies?: AgenciesInput | null | undefined;\n}\n",
            "properties": [
                {
                    "name": "agencies",
                    "type": "AgenciesInput | null | undefined",
                    "optional": true,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "id",
                    "defaultValue": "'AppData'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "user",
                    "type": "UserInput | null | undefined",
                    "optional": true,
                    "description": "",
                    "line": 11
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "implements": [
                "UpdateAppDataInput"
            ]
        },
        {
            "name": "Delete",
            "id": "class-Delete-2858b75b1f959e20714e29a6a29b1872",
            "file": "src/app/store/agencies/agencies.actions.ts",
            "type": "class",
            "sourceCode": "import { AgenciesStateModel } from '@store/agencies';\n\nexport class Add {\n  static readonly type = '[Agencies] Add';\n  constructor(public payload: AgenciesStateModel) {}\n}\n\nexport class Edit {\n  static readonly type = '[Agencies] Edit';\n  constructor(\n    public payload: AgenciesStateModel | Partial<AgenciesStateModel>\n  ) {}\n}\n\nexport class Delete {\n  static readonly type = '[Agencies] Delete';\n  constructor() {}\n}\n\nexport class EditQuestions {\n  static readonly type = '[Agencies] EditQuestions';\n  constructor(public payload: Partial<AgenciesStateModel>) {}\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 16
            },
            "properties": [
                {
                    "name": "type",
                    "defaultValue": "'[Agencies] Delete'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        115,
                        132
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "Delete",
            "id": "class-Delete-1edc300a9f216b0d10eb50c51640290e-1",
            "file": "src/app/store/app-data/app-data.actions.ts",
            "type": "class",
            "sourceCode": "import { AppDataStateModel } from '@store/app-data/app-data.model';\n\nexport class Fetch {\n  static readonly type = '[AppData] Fetch';\n  constructor() {}\n}\n\nexport class Add {\n  static readonly type = '[AppData] Add';\n  constructor(public payload: AppDataStateModel) {}\n}\n\nexport class Edit {\n  static readonly type = '[AppData] Edit';\n  constructor(public payload: AppDataStateModel) {}\n}\n\nexport class Delete {\n  static readonly type = '[AppData] Delete';\n  constructor() {}\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 19
            },
            "properties": [
                {
                    "name": "type",
                    "defaultValue": "'[AppData] Delete'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        115,
                        132
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "Delete-1"
        },
        {
            "name": "Delete",
            "id": "class-Delete-9bac12d32d1effb057ce16af1f3528b4-2",
            "file": "src/app/store/user/user.actions.ts",
            "type": "class",
            "sourceCode": "import { UserAttributesInput } from '@shared/services/aws/api.service';\nimport { UserStateModel } from '@store/user/user.model';\n\nexport class Add {\n  static readonly type = '[User] Add';\n  constructor(public payload: UserStateModel) {}\n}\n\nexport class Edit {\n  static readonly type = '[User] Edit';\n  constructor(public payload: UserStateModel | Partial<UserStateModel>) {}\n}\n\nexport class Delete {\n  static readonly type = '[User] Delete';\n  constructor() {}\n}\n\nexport class UpdateAttributes {\n  static readonly type = '[UserAttributes] Edit';\n  constructor(public payload: UserAttributesInput) {}\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 15
            },
            "properties": [
                {
                    "name": "type",
                    "defaultValue": "'[User] Delete'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        115,
                        132
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "isDuplicate": true,
            "duplicateId": 2,
            "duplicateName": "Delete-2"
        },
        {
            "name": "Delete",
            "id": "class-Delete-d646ed2ff7178c40d66a420585673988-3",
            "file": "src/app/store/onboarding/onboarding.actions.ts",
            "type": "class",
            "sourceCode": "import { OnboardingStateModel } from '@store/onboarding';\n\nexport class Add {\n  static readonly type = '[Onboarding] Add';\n  constructor(public payload: OnboardingStateModel) {}\n}\n\nexport class Edit {\n  static readonly type = '[Onboarding] Edit';\n  constructor(public payload: OnboardingStateModel) {}\n}\n\nexport class Delete {\n  static readonly type = '[Onboarding] Delete';\n  constructor() {}\n}\n\nexport class UpdateLastActive {\n  static readonly type = '[Onboarding] UpdateLastActive';\n  constructor(public payload: number) {}\n}\n\nexport class UpdateLastComplete {\n  static readonly type = '[Onboarding] UpdateLastComplete';\n  constructor(public payload: number) {}\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 14
            },
            "properties": [
                {
                    "name": "type",
                    "defaultValue": "'[Onboarding] Delete'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        115,
                        132
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "isDuplicate": true,
            "duplicateId": 3,
            "duplicateName": "Delete-3"
        },
        {
            "name": "DOMHelper",
            "id": "class-DOMHelper-f0080b0ad0f85da90785a109cdcb40ea",
            "file": "src/app/testing/dom-helper.ts",
            "type": "class",
            "sourceCode": "import { DebugElement } from '@angular/core';\r\nimport { ComponentFixture } from '@angular/core/testing';\r\nimport { By } from '@angular/platform-browser';\r\n\r\nexport class DOMHelper<T> {\r\n  private fixture: ComponentFixture<T>;\r\n  constructor(fixture: ComponentFixture<T>) {\r\n    this.fixture = fixture;\r\n  }\r\n\r\n  singleText(tagName: string): string | undefined {\r\n    const el = this.fixture.debugElement.query(By.css(tagName));\r\n    return el ? el.nativeElement.textContent : undefined;\r\n  }\r\n\r\n  querySelector(query: string): string | undefined {\r\n    const el = this.fixture.nativeElement;\r\n    return el ? el.querySelector(query).textContent : undefined;\r\n  }\r\n\r\n  count(tagName: string): number {\r\n    const elements = this.fixture.debugElement.queryAll(By.css(tagName));\r\n    return elements.length;\r\n  }\r\n\r\n  countText(tagName: string, text: string): number {\r\n    const elements = this.fixture.debugElement.queryAll(By.css(tagName));\r\n    return elements.filter(\r\n      (element) => element.nativeElement.textContent === text\r\n    ).length;\r\n  }\r\n\r\n  hasAttr(tagName: string, attrName: string): boolean {\r\n    const el = this.fixture.debugElement.query(By.css(tagName));\r\n    return el.nativeElement.hasAttribute(attrName);\r\n  }\r\n\r\n  hasAttrValue(tagName: string, attrName: string, value: string): boolean {\r\n    const el = this.fixture.debugElement.query(By.css(tagName));\r\n    if (!el.attributes[attrName]) {\r\n      return false;\r\n    }\r\n    return el.attributes[attrName] === value;\r\n  }\r\n\r\n  hasPropValue(tagName: string, attrName: string, value: any): boolean {\r\n    const el = this.fixture.debugElement.query(By.css(tagName));\r\n    if (!el.properties[attrName]) {\r\n      return false;\r\n    }\r\n    return el.properties[attrName] === value;\r\n  }\r\n\r\n  clickButton(buttonText: string): void {\r\n    this.findAll('button').forEach((button) => {\r\n      const buttonElement: HTMLButtonElement = button.nativeElement;\r\n      if (buttonElement.textContent === buttonText) {\r\n        buttonElement.click();\r\n      }\r\n    });\r\n  }\r\n\r\n  findAll(tagName: string): DebugElement[] {\r\n    return this.fixture.debugElement.queryAll(By.css(tagName));\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "fixture",
                        "type": "ComponentFixture<T>"
                    }
                ],
                "line": 6,
                "jsdoctags": [
                    {
                        "name": "fixture",
                        "type": "ComponentFixture<T>",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "fixture",
                    "type": "ComponentFixture<T>",
                    "optional": false,
                    "description": "",
                    "line": 6,
                    "modifierKind": [
                        112
                    ]
                }
            ],
            "methods": [
                {
                    "name": "clickButton",
                    "args": [
                        {
                            "name": "buttonText",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "jsdoctags": [
                        {
                            "name": "buttonText",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "count",
                    "args": [
                        {
                            "name": "tagName",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 21,
                    "jsdoctags": [
                        {
                            "name": "tagName",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "countText",
                    "args": [
                        {
                            "name": "tagName",
                            "type": "string"
                        },
                        {
                            "name": "text",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 26,
                    "jsdoctags": [
                        {
                            "name": "tagName",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "text",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "findAll",
                    "args": [
                        {
                            "name": "tagName",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "DebugElement[]",
                    "typeParameters": [],
                    "line": 63,
                    "jsdoctags": [
                        {
                            "name": "tagName",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "hasAttr",
                    "args": [
                        {
                            "name": "tagName",
                            "type": "string"
                        },
                        {
                            "name": "attrName",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 33,
                    "jsdoctags": [
                        {
                            "name": "tagName",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "attrName",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "hasAttrValue",
                    "args": [
                        {
                            "name": "tagName",
                            "type": "string"
                        },
                        {
                            "name": "attrName",
                            "type": "string"
                        },
                        {
                            "name": "value",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 38,
                    "jsdoctags": [
                        {
                            "name": "tagName",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "attrName",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "value",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "hasPropValue",
                    "args": [
                        {
                            "name": "tagName",
                            "type": "string"
                        },
                        {
                            "name": "attrName",
                            "type": "string"
                        },
                        {
                            "name": "value",
                            "type": "any"
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 46,
                    "jsdoctags": [
                        {
                            "name": "tagName",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "attrName",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "value",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "querySelector",
                    "args": [
                        {
                            "name": "query",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "string | undefined",
                    "typeParameters": [],
                    "line": 16,
                    "jsdoctags": [
                        {
                            "name": "query",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "singleText",
                    "args": [
                        {
                            "name": "tagName",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "string | undefined",
                    "typeParameters": [],
                    "line": 11,
                    "jsdoctags": [
                        {
                            "name": "tagName",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "Edit",
            "id": "class-Edit-2858b75b1f959e20714e29a6a29b1872",
            "file": "src/app/store/agencies/agencies.actions.ts",
            "type": "class",
            "sourceCode": "import { AgenciesStateModel } from '@store/agencies';\n\nexport class Add {\n  static readonly type = '[Agencies] Add';\n  constructor(public payload: AgenciesStateModel) {}\n}\n\nexport class Edit {\n  static readonly type = '[Agencies] Edit';\n  constructor(\n    public payload: AgenciesStateModel | Partial<AgenciesStateModel>\n  ) {}\n}\n\nexport class Delete {\n  static readonly type = '[Agencies] Delete';\n  constructor() {}\n}\n\nexport class EditQuestions {\n  static readonly type = '[Agencies] EditQuestions';\n  constructor(public payload: Partial<AgenciesStateModel>) {}\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "payload",
                        "type": "AgenciesStateModel | Partial<AgenciesStateModel>"
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "payload",
                        "type": "AgenciesStateModel | Partial<AgenciesStateModel>",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "payload",
                    "type": "AgenciesStateModel | Partial<AgenciesStateModel>",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "type",
                    "defaultValue": "'[Agencies] Edit'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        115,
                        132
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "Edit",
            "id": "class-Edit-1edc300a9f216b0d10eb50c51640290e-1",
            "file": "src/app/store/app-data/app-data.actions.ts",
            "type": "class",
            "sourceCode": "import { AppDataStateModel } from '@store/app-data/app-data.model';\n\nexport class Fetch {\n  static readonly type = '[AppData] Fetch';\n  constructor() {}\n}\n\nexport class Add {\n  static readonly type = '[AppData] Add';\n  constructor(public payload: AppDataStateModel) {}\n}\n\nexport class Edit {\n  static readonly type = '[AppData] Edit';\n  constructor(public payload: AppDataStateModel) {}\n}\n\nexport class Delete {\n  static readonly type = '[AppData] Delete';\n  constructor() {}\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "payload",
                        "type": "AppDataStateModel"
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "payload",
                        "type": "AppDataStateModel",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "payload",
                    "type": "AppDataStateModel",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "type",
                    "defaultValue": "'[AppData] Edit'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        115,
                        132
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "Edit-1"
        },
        {
            "name": "Edit",
            "id": "class-Edit-9bac12d32d1effb057ce16af1f3528b4-2",
            "file": "src/app/store/user/user.actions.ts",
            "type": "class",
            "sourceCode": "import { UserAttributesInput } from '@shared/services/aws/api.service';\nimport { UserStateModel } from '@store/user/user.model';\n\nexport class Add {\n  static readonly type = '[User] Add';\n  constructor(public payload: UserStateModel) {}\n}\n\nexport class Edit {\n  static readonly type = '[User] Edit';\n  constructor(public payload: UserStateModel | Partial<UserStateModel>) {}\n}\n\nexport class Delete {\n  static readonly type = '[User] Delete';\n  constructor() {}\n}\n\nexport class UpdateAttributes {\n  static readonly type = '[UserAttributes] Edit';\n  constructor(public payload: UserAttributesInput) {}\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "payload",
                        "type": "UserStateModel | Partial<UserStateModel>"
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "payload",
                        "type": "UserStateModel | Partial<UserStateModel>",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "payload",
                    "type": "UserStateModel | Partial<UserStateModel>",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "type",
                    "defaultValue": "'[User] Edit'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        115,
                        132
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "isDuplicate": true,
            "duplicateId": 2,
            "duplicateName": "Edit-2"
        },
        {
            "name": "Edit",
            "id": "class-Edit-d646ed2ff7178c40d66a420585673988-3",
            "file": "src/app/store/onboarding/onboarding.actions.ts",
            "type": "class",
            "sourceCode": "import { OnboardingStateModel } from '@store/onboarding';\n\nexport class Add {\n  static readonly type = '[Onboarding] Add';\n  constructor(public payload: OnboardingStateModel) {}\n}\n\nexport class Edit {\n  static readonly type = '[Onboarding] Edit';\n  constructor(public payload: OnboardingStateModel) {}\n}\n\nexport class Delete {\n  static readonly type = '[Onboarding] Delete';\n  constructor() {}\n}\n\nexport class UpdateLastActive {\n  static readonly type = '[Onboarding] UpdateLastActive';\n  constructor(public payload: number) {}\n}\n\nexport class UpdateLastComplete {\n  static readonly type = '[Onboarding] UpdateLastComplete';\n  constructor(public payload: number) {}\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "payload",
                        "type": "OnboardingStateModel"
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "payload",
                        "type": "OnboardingStateModel",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "payload",
                    "type": "OnboardingStateModel",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "type",
                    "defaultValue": "'[Onboarding] Edit'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        115,
                        132
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "isDuplicate": true,
            "duplicateId": 3,
            "duplicateName": "Edit-3"
        },
        {
            "name": "EditQuestions",
            "id": "class-EditQuestions-2858b75b1f959e20714e29a6a29b1872",
            "file": "src/app/store/agencies/agencies.actions.ts",
            "type": "class",
            "sourceCode": "import { AgenciesStateModel } from '@store/agencies';\n\nexport class Add {\n  static readonly type = '[Agencies] Add';\n  constructor(public payload: AgenciesStateModel) {}\n}\n\nexport class Edit {\n  static readonly type = '[Agencies] Edit';\n  constructor(\n    public payload: AgenciesStateModel | Partial<AgenciesStateModel>\n  ) {}\n}\n\nexport class Delete {\n  static readonly type = '[Agencies] Delete';\n  constructor() {}\n}\n\nexport class EditQuestions {\n  static readonly type = '[Agencies] EditQuestions';\n  constructor(public payload: Partial<AgenciesStateModel>) {}\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "payload",
                        "type": "Partial<AgenciesStateModel>"
                    }
                ],
                "line": 21,
                "jsdoctags": [
                    {
                        "name": "payload",
                        "type": "Partial<AgenciesStateModel>",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "payload",
                    "type": "Partial<AgenciesStateModel>",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "type",
                    "defaultValue": "'[Agencies] EditQuestions'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        115,
                        132
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "Fetch",
            "id": "class-Fetch-1edc300a9f216b0d10eb50c51640290e",
            "file": "src/app/store/app-data/app-data.actions.ts",
            "type": "class",
            "sourceCode": "import { AppDataStateModel } from '@store/app-data/app-data.model';\n\nexport class Fetch {\n  static readonly type = '[AppData] Fetch';\n  constructor() {}\n}\n\nexport class Add {\n  static readonly type = '[AppData] Add';\n  constructor(public payload: AppDataStateModel) {}\n}\n\nexport class Edit {\n  static readonly type = '[AppData] Edit';\n  constructor(public payload: AppDataStateModel) {}\n}\n\nexport class Delete {\n  static readonly type = '[AppData] Delete';\n  constructor() {}\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 4
            },
            "properties": [
                {
                    "name": "type",
                    "defaultValue": "'[AppData] Fetch'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4,
                    "modifierKind": [
                        115,
                        132
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "Helper",
            "id": "class-Helper-b9b47e0553ae4141a86dfb7298fb59fe",
            "file": "src/app/testing/test-helper.ts",
            "type": "class",
            "sourceCode": "export class Helper<T> {\r\n  private component: T;\r\n\r\n  constructor(component: T) {\r\n    this.component = component;\r\n  }\r\n\r\n  hasProperty(component: T, prop: string): boolean {\r\n    return Object.keys(component).filter((key) => key === prop).length > 0;\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "component",
                        "type": "T"
                    }
                ],
                "line": 2,
                "jsdoctags": [
                    {
                        "name": "component",
                        "type": "T",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "component",
                    "type": "T",
                    "optional": false,
                    "description": "",
                    "line": 2,
                    "modifierKind": [
                        112
                    ]
                }
            ],
            "methods": [
                {
                    "name": "hasProperty",
                    "args": [
                        {
                            "name": "component",
                            "type": "T"
                        },
                        {
                            "name": "prop",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 8,
                    "jsdoctags": [
                        {
                            "name": "component",
                            "type": "T",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "prop",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "OnboardingSelectors",
            "id": "class-OnboardingSelectors-c551eae651305d8eb31d8c2ddbb895e2",
            "file": "src/app/store/onboarding/onboarding.selectors.ts",
            "type": "class",
            "sourceCode": "import { Selector } from '@ngxs/store';\nimport { OnboardingStateModel } from '@store/onboarding/onboarding.model';\nimport { OnboardingState } from '@store/onboarding/onboarding.state';\n\nexport class OnboardingSelectors {\n  @Selector([OnboardingState])\n  static getOnboarding(state: OnboardingStateModel): OnboardingStateModel {\n    return state;\n  }\n}\n",
            "properties": [],
            "methods": [
                {
                    "name": "getOnboarding",
                    "args": [
                        {
                            "name": "state",
                            "type": "OnboardingStateModel"
                        }
                    ],
                    "optional": false,
                    "returnType": "OnboardingStateModel",
                    "typeParameters": [],
                    "line": 7,
                    "decorators": [
                        {
                            "name": "Selector",
                            "stringifiedArguments": "undefined"
                        }
                    ],
                    "modifierKind": [
                        115
                    ],
                    "jsdoctags": [
                        {
                            "name": "state",
                            "type": "OnboardingStateModel",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "OnboardingStateModel",
            "id": "class-OnboardingStateModel-70b440fbfdfa5d3052dbafe93bf63d15",
            "file": "src/app/store/onboarding/onboarding.model.ts",
            "type": "class",
            "sourceCode": "import { IProgressStep } from '@shared/components/progressbars/filled-checktext-progressbar/filled-checktext-progressbar.component';\nimport { OnboardingInput } from '@shared/services/aws/api.service';\n\nexport interface OnboardingStep extends IProgressStep {}\ntype typename = 'Onboarding';\nexport class OnboardingStateModel implements OnboardingInput {\n  lastActive: number = -1;\n  lastComplete: number = -1;\n  started?: boolean | null | undefined;\n}\n",
            "properties": [
                {
                    "name": "lastActive",
                    "defaultValue": "-1",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "lastComplete",
                    "defaultValue": "-1",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "started",
                    "type": "boolean | null | undefined",
                    "optional": true,
                    "description": "",
                    "line": 9
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "implements": [
                "OnboardingInput"
            ]
        },
        {
            "name": "UpdateAttributes",
            "id": "class-UpdateAttributes-9bac12d32d1effb057ce16af1f3528b4",
            "file": "src/app/store/user/user.actions.ts",
            "type": "class",
            "sourceCode": "import { UserAttributesInput } from '@shared/services/aws/api.service';\nimport { UserStateModel } from '@store/user/user.model';\n\nexport class Add {\n  static readonly type = '[User] Add';\n  constructor(public payload: UserStateModel) {}\n}\n\nexport class Edit {\n  static readonly type = '[User] Edit';\n  constructor(public payload: UserStateModel | Partial<UserStateModel>) {}\n}\n\nexport class Delete {\n  static readonly type = '[User] Delete';\n  constructor() {}\n}\n\nexport class UpdateAttributes {\n  static readonly type = '[UserAttributes] Edit';\n  constructor(public payload: UserAttributesInput) {}\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "payload",
                        "type": "UserAttributesInput"
                    }
                ],
                "line": 20,
                "jsdoctags": [
                    {
                        "name": "payload",
                        "type": "UserAttributesInput",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "payload",
                    "type": "UserAttributesInput",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "type",
                    "defaultValue": "'[UserAttributes] Edit'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        115,
                        132
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "UpdateLastActive",
            "id": "class-UpdateLastActive-d646ed2ff7178c40d66a420585673988",
            "file": "src/app/store/onboarding/onboarding.actions.ts",
            "type": "class",
            "sourceCode": "import { OnboardingStateModel } from '@store/onboarding';\n\nexport class Add {\n  static readonly type = '[Onboarding] Add';\n  constructor(public payload: OnboardingStateModel) {}\n}\n\nexport class Edit {\n  static readonly type = '[Onboarding] Edit';\n  constructor(public payload: OnboardingStateModel) {}\n}\n\nexport class Delete {\n  static readonly type = '[Onboarding] Delete';\n  constructor() {}\n}\n\nexport class UpdateLastActive {\n  static readonly type = '[Onboarding] UpdateLastActive';\n  constructor(public payload: number) {}\n}\n\nexport class UpdateLastComplete {\n  static readonly type = '[Onboarding] UpdateLastComplete';\n  constructor(public payload: number) {}\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "payload",
                        "type": "number"
                    }
                ],
                "line": 19,
                "jsdoctags": [
                    {
                        "name": "payload",
                        "type": "number",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "payload",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "type",
                    "defaultValue": "'[Onboarding] UpdateLastActive'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        115,
                        132
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "UpdateLastComplete",
            "id": "class-UpdateLastComplete-d646ed2ff7178c40d66a420585673988",
            "file": "src/app/store/onboarding/onboarding.actions.ts",
            "type": "class",
            "sourceCode": "import { OnboardingStateModel } from '@store/onboarding';\n\nexport class Add {\n  static readonly type = '[Onboarding] Add';\n  constructor(public payload: OnboardingStateModel) {}\n}\n\nexport class Edit {\n  static readonly type = '[Onboarding] Edit';\n  constructor(public payload: OnboardingStateModel) {}\n}\n\nexport class Delete {\n  static readonly type = '[Onboarding] Delete';\n  constructor() {}\n}\n\nexport class UpdateLastActive {\n  static readonly type = '[Onboarding] UpdateLastActive';\n  constructor(public payload: number) {}\n}\n\nexport class UpdateLastComplete {\n  static readonly type = '[Onboarding] UpdateLastComplete';\n  constructor(public payload: number) {}\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "payload",
                        "type": "number"
                    }
                ],
                "line": 24,
                "jsdoctags": [
                    {
                        "name": "payload",
                        "type": "number",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "payload",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "type",
                    "defaultValue": "'[Onboarding] UpdateLastComplete'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        115,
                        132
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "UserSelectors",
            "id": "class-UserSelectors-d15904cb6b84b1b0682bf4e5cb208ac0",
            "file": "src/app/store/user/user.selectors.ts",
            "type": "class",
            "sourceCode": "import { Selector } from '@ngxs/store';\r\nimport { UserStateModel } from '@store/user/user.model';\r\nimport { UserState } from '@store/user/user.state';\r\n\r\nexport class UserSelectors {\r\n  @Selector([UserState])\r\n  static getUser(state: UserStateModel): UserStateModel {\r\n    return state;\r\n  }\r\n\r\n  @Selector([UserState])\r\n  static getUserId(state: UserStateModel): string | undefined {\r\n    return state.id;\r\n  }\r\n}\r\n",
            "properties": [],
            "methods": [
                {
                    "name": "getUser",
                    "args": [
                        {
                            "name": "state",
                            "type": "UserStateModel"
                        }
                    ],
                    "optional": false,
                    "returnType": "UserStateModel",
                    "typeParameters": [],
                    "line": 7,
                    "decorators": [
                        {
                            "name": "Selector",
                            "stringifiedArguments": "undefined"
                        }
                    ],
                    "modifierKind": [
                        115
                    ],
                    "jsdoctags": [
                        {
                            "name": "state",
                            "type": "UserStateModel",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getUserId",
                    "args": [
                        {
                            "name": "state",
                            "type": "UserStateModel"
                        }
                    ],
                    "optional": false,
                    "returnType": "string | undefined",
                    "typeParameters": [],
                    "line": 12,
                    "decorators": [
                        {
                            "name": "Selector",
                            "stringifiedArguments": "undefined"
                        }
                    ],
                    "modifierKind": [
                        115
                    ],
                    "jsdoctags": [
                        {
                            "name": "state",
                            "type": "UserStateModel",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "UserStateModel",
            "id": "class-UserStateModel-134184ad5a4cbda5b2e2e6a7ce727ea0",
            "file": "src/app/store/user/user.model.ts",
            "type": "class",
            "sourceCode": "import {\n  UserInput,\n  OnboardingInput,\n  UserAttributesInput,\n} from '@shared/services/aws/api.service';\n\ntype typename = 'User';\n\nexport class UserStateModel implements UserInput {\n  id!: string;\n  userAttributes?: UserAttributesInput | null | undefined;\n  onboarding?: OnboardingInput | null | undefined;\n}\n",
            "properties": [
                {
                    "name": "id",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "onboarding",
                    "type": "OnboardingInput | null | undefined",
                    "optional": true,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "userAttributes",
                    "type": "UserAttributesInput | null | undefined",
                    "optional": true,
                    "description": "",
                    "line": 11
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "implements": [
                "UserInput"
            ]
        }
    ],
    "directives": [
        {
            "name": "HiddenAsteriskInputDirective",
            "id": "directive-HiddenAsteriskInputDirective-e75b9e47bff4f3df6e42e432000a5b05",
            "file": "src/app/shared/components/inputs/hidden-asterisk-input/hidden-asterisk-input.directive.ts",
            "type": "directive",
            "description": "",
            "sourceCode": "import {\r\n  AfterViewInit,\r\n  Directive,\r\n  ElementRef,\r\n  HostListener,\r\n  Input,\r\n  Renderer2,\r\n} from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[braveHiddenAsteriskInput]',\r\n})\r\nexport class HiddenAsteriskInputDirective {\r\n  private _host: HTMLInputElement | undefined;\r\n  private _mask: HTMLDivElement | undefined;\r\n\r\n  get host() {\r\n    return this._host;\r\n  }\r\n  set host(value: HTMLInputElement | undefined) {\r\n    this._host = value;\r\n  }\r\n\r\n  get mask() {\r\n    return this._mask;\r\n  }\r\n  set mask(value: HTMLDivElement | undefined) {\r\n    this._mask = value;\r\n  }\r\n\r\n  constructor(el: ElementRef, private renderer: Renderer2) {\r\n    this.host = el.nativeElement;\r\n  }\r\n\r\n  @HostListener('focus') onFocus() {\r\n    if (this.mask && this.host) {\r\n      this.removeMaskElement(this.host);\r\n    }\r\n  }\r\n\r\n  @HostListener('click') onClick() {\r\n    if (this.mask && this.host) {\r\n      this.removeMaskElement(this.host);\r\n    }\r\n  }\r\n\r\n  @HostListener('blur') onBlur() {\r\n    if (this.host?.value?.length) this.appendMaskElement(this.host);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    /** create the wrapping div and assign relative */\r\n    const div = this.renderer.createElement('div');\r\n    this.renderer.setStyle(div, 'position', 'relative');\r\n    /** wrap the host in the div */\r\n    const el = this.host;\r\n    const parent = el?.parentNode;\r\n    this.renderer.insertBefore(parent, div, el);\r\n    /** insert the element into the div */\r\n    this.renderer.appendChild(div, el);\r\n  }\r\n\r\n  //TODO refactor to iterate over styles and classes to add\r\n  /**\r\n   * Appends the new mask element (asterisk) to the input to hide it\r\n   * @param el\r\n   */\r\n  appendMaskElement(el: HTMLInputElement) {\r\n    /** set the input value color to transparent */\r\n    this.renderer.setStyle(el, 'opacity', '0');\r\n    /** create the elements to attach */\r\n    let div = this.renderer.createElement('div');\r\n    let div2 = this.renderer.createElement('div');\r\n    let p = this.renderer.createElement('p');\r\n    let asterisk = this.renderer.createText('*');\r\n    /** set the style/classes of the elements */\r\n    this.renderer.setStyle(div, 'position', 'absolute');\r\n    this.renderer.setStyle(div, 'top', '0');\r\n    this.renderer.setStyle(div, 'left', '0');\r\n    this.renderer.setStyle(div, 'width', '100%');\r\n    this.renderer.setStyle(div, 'height', '100%');\r\n    this.renderer.setStyle(div, 'z-index', '2');\r\n    this.renderer.addClass(div, 'flex');\r\n    this.renderer.addClass(div, 'justify-center');\r\n    this.renderer.addClass(div, 'items-center');\r\n    /* use tailwind utility classes */\r\n    this.renderer.addClass(div2, 'flex');\r\n    this.renderer.addClass(div2, 'justify-center');\r\n    // this.renderer.addClass(div2, 'bg-coolGray-100');\r\n    this.renderer.addClass(div2, 'text-blueGray-600');\r\n    this.renderer.addClass(div2, 'text-3xl');\r\n    this.renderer.setStyle(div2, 'height', '100%');\r\n    /** attach the new elements to the DOM */\r\n    this.renderer.appendChild(p, asterisk);\r\n    this.renderer.appendChild(div2, p);\r\n    this.renderer.appendChild(div, div2);\r\n    el.insertAdjacentElement('afterend', div);\r\n    /** keep track of the mask element */\r\n    this.mask = div;\r\n    this.mask?.addEventListener('click', (event) => {\r\n      this.removeMaskElement(el);\r\n      el.focus();\r\n    });\r\n  }\r\n\r\n  removeMaskElement(el: HTMLInputElement) {\r\n    /** remove and rest the input element when the mask is clicked */\r\n    let parent: HTMLElement = this.renderer.parentNode(el);\r\n    let child: HTMLElement | null = parent.querySelector('div');\r\n    this.renderer.removeChild(parent, child);\r\n    this.renderer.setStyle(el, 'opacity', '1');\r\n    this.mask = undefined;\r\n  }\r\n}\r\n",
            "selector": "[braveHiddenAsteriskInput]",
            "providers": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "blur",
                    "args": [],
                    "argsDecorator": [],
                    "line": 47
                },
                {
                    "name": "click",
                    "args": [],
                    "argsDecorator": [],
                    "line": 41
                },
                {
                    "name": "focus",
                    "args": [],
                    "argsDecorator": [],
                    "line": 35
                }
            ],
            "propertiesClass": [
                {
                    "name": "_host",
                    "type": "HTMLInputElement | undefined",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "_mask",
                    "type": "HTMLDivElement | undefined",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        112
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "appendMaskElement",
                    "args": [
                        {
                            "name": "el",
                            "type": "HTMLInputElement"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 68,
                    "description": "<p>Appends the new mask element (asterisk) to the input to hide it</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1638,
                                "end": 1640,
                                "flags": 0,
                                "escapedText": "el"
                            },
                            "type": "HTMLInputElement",
                            "tagName": {
                                "pos": 1632,
                                "end": 1637,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": ""
                        }
                    ]
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 51
                },
                {
                    "name": "removeMaskElement",
                    "args": [
                        {
                            "name": "el",
                            "type": "HTMLInputElement"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 106,
                    "jsdoctags": [
                        {
                            "name": "el",
                            "type": "HTMLInputElement",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "el",
                        "type": "ElementRef"
                    },
                    {
                        "name": "renderer",
                        "type": "Renderer2"
                    }
                ],
                "line": 29,
                "jsdoctags": [
                    {
                        "name": "el",
                        "type": "ElementRef",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "host": {
                    "name": "host",
                    "setSignature": {
                        "name": "host",
                        "type": "void",
                        "args": [
                            {
                                "name": "value",
                                "type": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 20,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "host",
                        "type": "",
                        "returnType": "",
                        "line": 17
                    }
                },
                "mask": {
                    "name": "mask",
                    "setSignature": {
                        "name": "mask",
                        "type": "void",
                        "args": [
                            {
                                "name": "value",
                                "type": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 27,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "mask",
                        "type": "",
                        "returnType": "",
                        "line": 24
                    }
                }
            }
        },
        {
            "name": "OutlineTooltipDirective",
            "id": "directive-OutlineTooltipDirective-f0037f6d4e1adc55b6de76fb95b4f67c",
            "file": "src/app/shared/components/tooltips/outline-tooltip/outline-tooltip.directive.ts",
            "type": "directive",
            "description": "",
            "sourceCode": "import { Directive, ElementRef, HostListener, Input } from '@angular/core';\r\nimport { createPopper, Placement } from '@popperjs/core';\r\n\r\n@Directive({\r\n  selector: '[braveOutlineTooltip]',\r\n})\r\nexport class OutlineTooltipDirective {\r\n  @Input() title: string = 'Message title';\r\n  @Input() body: string = 'Message body';\r\n  @Input() position: Placement = 'top';\r\n\r\n  private _host: HTMLElement | undefined;\r\n  private _tooltip: HTMLDivElement | undefined;\r\n  private popoverShow: boolean = false;\r\n\r\n  get host() {\r\n    return this._host;\r\n  }\r\n  set host(value: HTMLElement | undefined) {\r\n    this._host = value;\r\n  }\r\n\r\n  get tooltip() {\r\n    return this._tooltip;\r\n  }\r\n  set tooltip(value: HTMLDivElement | undefined) {\r\n    this._tooltip = value;\r\n  }\r\n\r\n  constructor(el: ElementRef) {\r\n    this.host = el.nativeElement;\r\n    this.tooltip = document.createElement('div');\r\n  }\r\n\r\n  @HostListener('mouseenter') onMouseEnter() {\r\n    this.toggleTooltip();\r\n  }\r\n\r\n  @HostListener('mouseleave') onMouseLeave() {\r\n    this.toggleTooltip();\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.tooltip) {\r\n      this.tooltip.innerHTML = `\r\n      <div class=\"bg-white border border-solid border-blueGray-300 m-4 block z-50 font-normal leading-normal max-w-xs text-left no-underline break-words rounded-lg\">\r\n        <div>\r\n          <p class=\"bg-white font-sans font-semibold text-sm text-coolGray-700 p-3 mb-0 border-b border-solid border-blueGray-300 rounded-t-lg\">\r\n            ${this.title}\r\n          </p>\r\n          <p class=\"font-sans text-sm text-coolGray-700 p-3 mb-4\">\r\n          ${this.body}\r\n          </p>\r\n        </div>\r\n      </div>\r\n      `;\r\n    }\r\n  }\r\n\r\n  toggleTooltip() {\r\n    if (this.popoverShow) {\r\n      this.popoverShow = false;\r\n      this.destroyPopper();\r\n    } else {\r\n      this.popoverShow = true;\r\n      this.createPoppper();\r\n    }\r\n  }\r\n  destroyPopper() {\r\n    this.tooltip?.parentNode?.removeChild(this.tooltip);\r\n  }\r\n  createPoppper() {\r\n    if (this.host && this.tooltip) {\r\n      createPopper(this.host, this.tooltip, {\r\n        placement: this.position,\r\n      });\r\n      this.host.parentNode?.insertBefore(this.tooltip, this.host.nextSibling);\r\n    }\r\n  }\r\n}\r\n",
            "selector": "[braveOutlineTooltip]",
            "providers": [],
            "inputsClass": [
                {
                    "name": "body",
                    "defaultValue": "'Message body'",
                    "line": 9,
                    "type": "string"
                },
                {
                    "name": "position",
                    "defaultValue": "'top'",
                    "line": 10,
                    "type": "Placement"
                },
                {
                    "name": "title",
                    "defaultValue": "'Message title'",
                    "line": 8,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "mouseenter",
                    "args": [],
                    "argsDecorator": [],
                    "line": 35
                },
                {
                    "name": "mouseleave",
                    "args": [],
                    "argsDecorator": [],
                    "line": 39
                }
            ],
            "propertiesClass": [
                {
                    "name": "_host",
                    "type": "HTMLElement | undefined",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "_tooltip",
                    "type": "HTMLDivElement | undefined",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "popoverShow",
                    "defaultValue": "false",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        112
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "createPoppper",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 72
                },
                {
                    "name": "destroyPopper",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 69
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 43
                },
                {
                    "name": "toggleTooltip",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 60
                }
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "el",
                        "type": "ElementRef"
                    }
                ],
                "line": 28,
                "jsdoctags": [
                    {
                        "name": "el",
                        "type": "ElementRef",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "host": {
                    "name": "host",
                    "setSignature": {
                        "name": "host",
                        "type": "void",
                        "args": [
                            {
                                "name": "value",
                                "type": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 19,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "host",
                        "type": "",
                        "returnType": "",
                        "line": 16
                    }
                },
                "tooltip": {
                    "name": "tooltip",
                    "setSignature": {
                        "name": "tooltip",
                        "type": "void",
                        "args": [
                            {
                                "name": "value",
                                "type": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 26,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "tooltip",
                        "type": "",
                        "returnType": "",
                        "line": 23
                    }
                }
            }
        }
    ],
    "components": [
        {
            "name": "AdminNavbarComponent",
            "id": "component-AdminNavbarComponent-eb797e54c47c49c50c6abbdaf9d2a762",
            "file": "src/app/shared/components/navbars/admin-navbar/admin-navbar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-admin-navbar",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./admin-navbar.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 10
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'brave-admin-navbar',\r\n  templateUrl: './admin-navbar.component.html',\r\n})\r\nexport class AdminNavbarComponent implements OnInit {\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 7
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<!-- Navbar -->\r\n<nav\r\n  class=\"absolute top-0 left-0 w-full z-10 bg-transparent md:flex-row md:flex-nowrap md:justify-start flex items-center p-4\"\r\n>\r\n  <div\r\n    class=\"w-full mx-autp items-center flex justify-between md:flex-nowrap flex-wrap md:px-10 px-4\"\r\n  >\r\n    <!-- Brand -->\r\n    <a\r\n      class=\"text-white text-sm uppercase hidden lg:inline-block font-semibold\"\r\n      href=\"#pablo\"\r\n      >Dashboard</a\r\n    >\r\n    <!-- Form -->\r\n    <form\r\n      class=\"md:flex hidden flex-row flex-wrap items-center lg:ml-auto mr-3\"\r\n    >\r\n      <div class=\"relative flex w-full flex-wrap items-stretch\">\r\n        <span\r\n          class=\"z-10 h-full leading-snug font-normal absolute text-center text-blueGray-300 absolute bg-transparent rounded text-base items-center justify-center w-8 pl-3 py-3\"\r\n          ><i class=\"fas fa-search\"></i\r\n        ></span>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search here...\"\r\n          class=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 relative bg-white bg-white rounded text-sm shadow outline-none focus:outline-none focus:ring w-full pl-10\"\r\n        />\r\n      </div>\r\n    </form>\r\n    <!-- User -->\r\n    <ul class=\"flex-col md:flex-row list-none items-center hidden md:flex\">\r\n      <brave-user-dropdown class=\"block\"></brave-user-dropdown>\r\n    </ul>\r\n  </div>\r\n</nav>\r\n"
        },
        {
            "name": "AppComponent",
            "id": "component-AppComponent-8d790d3663cd40fcd7618a39662ef3e1",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-root",
            "styleUrls": [
                "./app.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "'brave-app'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'brave-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent {\n  title = 'brave-app';\n\n  // user: CognitoUserInterface | undefined;\n  // authState: AuthState = {} as AuthState;\n  // apiCreateListener$: ZenObservable.Subscription;\n  // apiUpdateListener$: ZenObservable.Subscription;\n  // apiDeleteListener$: ZenObservable.Subscription;\n\n  constructor() {}\n\n  ngOnDestroy() {\n    // if (this.apiCreateListener$) this.apiCreateListener$.unsubscribe();\n    // if (this.apiUpdateListener$) this.apiUpdateListener$.unsubscribe();\n    // if (this.apiDeleteListener$) this.apiDeleteListener$.unsubscribe();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./app.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 9
            },
            "templateData": "<!-- <amplify-authenticator *ngIf=\"authState !== 'signedin'\"></amplify-authenticator>\n<brave-authentication *ngIf=\"authState !== 'signedin'\"></brave-authentication>\n\n<div *ngIf=\"authState === 'signedin' && user\" class=\"App\">\n  <amplify-sign-out></amplify-sign-out>\n  <div>Hello, {{ user.username }}</div>\n  <router-outlet></router-outlet>\n\n</div> -->\n<router-outlet></router-outlet>\n"
        },
        {
            "name": "AuthenticationComponent",
            "id": "component-AuthenticationComponent-6044939ad2b3981bc8aa4ff01539e9be",
            "file": "src/app/layouts/authentication/authentication.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-authentication",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./authentication.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<void>",
                    "typeParameters": [],
                    "line": 11,
                    "modifierKind": [
                        120
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '@shared/services/auth/auth.service';\n\n@Component({\n  selector: 'brave-authentication',\n  templateUrl: './authentication.component.html',\n})\nexport class AuthenticationComponent implements OnInit {\n  constructor(private auth: AuthService) {}\n\n  async ngOnInit(): Promise<void> {\n    await this.auth.reloadCredentials();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "auth",
                        "type": "AuthService"
                    }
                ],
                "line": 8,
                "jsdoctags": [
                    {
                        "name": "auth",
                        "type": "AuthService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div>\r\n  <main>\r\n    <section\r\n      class=\"\r\n        relative\r\n        flex\r\n        justify-center\r\n        items-center\r\n        w-full\r\n        h-full\r\n        min-h-screen\r\n      \"\r\n    >\r\n      <router-outlet></router-outlet>\r\n    </section>\r\n  </main>\r\n</div>\r\n"
        },
        {
            "name": "AuthNavbarComponent",
            "id": "component-AuthNavbarComponent-1a3d80ac7463eff71c7d45c7e2bedfc5",
            "file": "src/app/shared/components/navbars/auth-navbar/auth-navbar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-auth-navbar",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./auth-navbar.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "navbarOpen",
                    "defaultValue": "false",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12
                },
                {
                    "name": "setNavbarOpen",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'brave-auth-navbar',\r\n  templateUrl: './auth-navbar.component.html',\r\n})\r\nexport class AuthNavbarComponent implements OnInit {\r\n  navbarOpen = false;\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  setNavbarOpen() {\r\n    this.navbarOpen = !this.navbarOpen;\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<nav\r\n  class=\"top-0 absolute z-50 w-full flex flex-wrap items-center justify-between px-2 py-3 navbar-expand-lg\"\r\n>\r\n  <div\r\n    class=\"container px-4 mx-auto flex flex-wrap items-center justify-between\"\r\n  >\r\n    <div\r\n      class=\"w-full relative flex justify-between lg:w-auto lg:static lg:block lg:justify-start\"\r\n    >\r\n      <a\r\n        [routerLink]=\"['/']\"\r\n        class=\"text-white text-sm font-bold leading-relaxed inline-block mr-4 py-2 whitespace-nowrap uppercase\"\r\n      >\r\n        Notus Angular\r\n      </a>\r\n      <button\r\n        class=\"cursor-pointer text-xl leading-none px-3 py-1 border border-solid border-transparent rounded bg-transparent block lg:hidden outline-none focus:outline-none\"\r\n        type=\"button\"\r\n        (click)=\"setNavbarOpen()\"\r\n      >\r\n        <i class=\"text-white fas fa-bars\"></i>\r\n      </button>\r\n    </div>\r\n    <div\r\n      class=\"lg:flex flex-grow items-center bg-white lg:bg-opacity-0 lg:shadow-none\"\r\n      [ngClass]=\"{ hidden: !navbarOpen, 'block rounded shadow-lg': navbarOpen }\"\r\n      id=\"example-navbar-warning\"\r\n    >\r\n      <ul class=\"flex flex-col lg:flex-row list-none mr-auto\">\r\n        <li class=\"flex items-center\">\r\n          <a\r\n            class=\"lg:text-white lg:hover:text-blueGray-200 text-blueGray-700 px-3 py-4 lg:py-2 flex items-center text-xs uppercase font-bold\"\r\n            href=\"https://www.creative-tim.com/learning-lab/tailwind/angular/overview/notus?ref=na-auth-navbar\"\r\n          >\r\n            <i\r\n              class=\"lg:text-blueGray-200 text-blueGray-400 far fa-file-alt text-lg leading-lg mr-2\"\r\n            ></i>\r\n            Docs\r\n          </a>\r\n        </li>\r\n      </ul>\r\n      <ul class=\"flex flex-col lg:flex-row list-none lg:ml-auto\">\r\n        <li class=\"flex items-center\">\r\n          <brave-pages-dropdown class=\"block\"></brave-pages-dropdown>\r\n        </li>\r\n        <li class=\"flex items-center\">\r\n          <a\r\n            class=\"lg:text-white lg:hover:text-blueGray-200 text-blueGray-700 px-3 py-4 lg:py-2 flex items-center text-xs uppercase font-bold\"\r\n            href=\"https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fdemos.creative-tim.com%2Fnotus-angular%2F\"\r\n            target=\"_blank\"\r\n          >\r\n            <i\r\n              class=\"lg:text-blueGray-200 text-blueGray-400 fab fa-facebook text-lg leading-lg\"\r\n            ></i>\r\n            <span class=\"lg:hidden inline-block ml-2\">Share</span>\r\n          </a>\r\n        </li>\r\n\r\n        <li class=\"flex items-center\">\r\n          <a\r\n            class=\"lg:text-white lg:hover:text-blueGray-200 text-blueGray-700 px-3 py-4 lg:py-2 flex items-center text-xs uppercase font-bold\"\r\n            href=\"https://twitter.com/intent/tweet?url=https%3A%2F%2Fdemos.creative-tim.com%2Fnotus-angular%2F&text=Start%20your%20development%20with%20a%20Free%20Tailwind%20CSS%20and%20Angular%20UI%20Kit%20and%20Admin.%20Let%20Notus%20Angular%20amaze%20you%20with%20its%20cool%20features%20and%20build%20tools%20and%20get%20your%20project%20to%20a%20whole%20new%20level.\"\r\n            target=\"_blank\"\r\n          >\r\n            <i\r\n              class=\"lg:text-blueGray-200 text-blueGray-400 fab fa-twitter text-lg leading-lg\"\r\n            ></i>\r\n            <span class=\"lg:hidden inline-block ml-2\">Tweet</span>\r\n          </a>\r\n        </li>\r\n\r\n        <li class=\"flex items-center\">\r\n          <a\r\n            class=\"lg:text-white lg:hover:text-blueGray-200 text-blueGray-700 px-3 py-4 lg:py-2 flex items-center text-xs uppercase font-bold\"\r\n            href=\"https://github.com/creativetimofficial/notus-angular?ref=na-auth-navbar\"\r\n            target=\"_blank\"\r\n          >\r\n            <i\r\n              class=\"lg:text-blueGray-200 text-blueGray-400 fab fa-github text-lg leading-lg\"\r\n            ></i>\r\n            <span class=\"lg:hidden inline-block ml-2\">Star</span>\r\n          </a>\r\n        </li>\r\n\r\n        <li class=\"flex items-center\">\r\n          <button\r\n            class=\"bg-white text-blueGray-700 active:bg-blueGray-50 text-xs font-bold uppercase px-4 py-2 rounded shadow hover:shadow-md outline-none focus:outline-none lg:mr-1 lg:mb-0 ml-3 mb-3 ease-linear transition-all duration-150\"\r\n            type=\"button\"\r\n          >\r\n            <i class=\"fas fa-arrow-alt-circle-down\"></i> Download\r\n          </button>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</nav>\r\n"
        },
        {
            "name": "BaseFormComponent",
            "id": "component-BaseFormComponent-df878bf42413c1cf38f4f58fb5fb142a",
            "file": "src/app/shared/components/forms/base-form/base-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-base-form",
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "hideHint",
                    "defaultValue": "false",
                    "line": 16,
                    "type": "boolean"
                }
            ],
            "outputsClass": [
                {
                    "name": "onChanges",
                    "defaultValue": "new EventEmitter()",
                    "line": 9,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "onSubmit",
                    "defaultValue": "new EventEmitter()",
                    "line": 10,
                    "type": "EventEmitter<FormGroup>"
                },
                {
                    "name": "onSubmitError",
                    "defaultValue": "new EventEmitter()",
                    "line": 12,
                    "type": "EventEmitter<literal type>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "parentForm",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 18
                }
            ],
            "methodsClass": [
                {
                    "name": "addChild",
                    "args": [
                        {
                            "name": "childName",
                            "type": "string"
                        },
                        {
                            "name": "childGroup",
                            "type": "FormGroup"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "jsdoctags": [
                        {
                            "name": "childName",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "childGroup",
                            "type": "FormGroup",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "submitForm",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Inject, Input, Output } from '@angular/core';\r\nimport { AbstractControl, FormBuilder, FormGroup } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'brave-base-form',\r\n  template: '',\r\n})\r\nexport class BaseFormComponent {\r\n  @Output() onChanges: EventEmitter<any> = new EventEmitter();\r\n  @Output() onSubmit: EventEmitter<FormGroup> = new EventEmitter();\r\n  @Output()\r\n  onSubmitError: EventEmitter<{\r\n    [key: string]: AbstractControl;\r\n  }> = new EventEmitter();\r\n\r\n  @Input() hideHint: boolean = false;\r\n\r\n  parentForm: FormGroup;\r\n  constructor(fb: FormBuilder, @Inject('name') private name: string) {\r\n    this.parentForm = fb.group({\r\n      name: [name],\r\n    }); // simple parent form with name of form\r\n  }\r\n\r\n  addChild(childName: string, childGroup: FormGroup) {\r\n    this.parentForm.addControl(childName, childGroup);\r\n  }\r\n\r\n  submitForm(): void {\r\n    this.parentForm.valid\r\n      ? this.onSubmit.emit(this.parentForm)\r\n      : this.onSubmitError.emit(this.parentForm.controls);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "fb",
                        "type": "FormBuilder"
                    },
                    {
                        "name": "name",
                        "type": "string"
                    }
                ],
                "line": 18,
                "jsdoctags": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "name",
                        "type": "string",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "BaseModalRegularComponent",
            "id": "component-BaseModalRegularComponent-6e4efba795457da78f47287b732dcd1f",
            "file": "src/app/shared/components/modals/base-modal-regular/base-modal-regular.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-base-modal-regular",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./base-modal-regular.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "config",
                    "defaultValue": "{\r\n    openButtonText: 'Open',\r\n    title: 'Message Title',\r\n    body: 'Message Text',\r\n    actionButtonOneText: 'Cancel',\r\n    actionButtonTwoText: 'Continue',\r\n  }",
                    "line": 16,
                    "type": "IBaseModalRegularConfig"
                }
            ],
            "outputsClass": [
                {
                    "name": "actionOne",
                    "defaultValue": "new EventEmitter()",
                    "line": 23,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "actionTwo",
                    "defaultValue": "new EventEmitter()",
                    "line": 24,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "showModal",
                    "defaultValue": "false",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29
                },
                {
                    "name": "toggleModal",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\n\r\nexport interface IBaseModalRegularConfig {\r\n  openButtonText: string;\r\n  title: string;\r\n  body: string;\r\n  actionButtonOneText: string;\r\n  actionButtonTwoText: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'brave-base-modal-regular',\r\n  templateUrl: './base-modal-regular.component.html',\r\n})\r\nexport class BaseModalRegularComponent implements OnInit {\r\n  @Input() config: IBaseModalRegularConfig = {\r\n    openButtonText: 'Open',\r\n    title: 'Message Title',\r\n    body: 'Message Text',\r\n    actionButtonOneText: 'Cancel',\r\n    actionButtonTwoText: 'Continue',\r\n  };\r\n  @Output() actionOne: EventEmitter<any> = new EventEmitter();\r\n  @Output() actionTwo: EventEmitter<any> = new EventEmitter();\r\n\r\n  public showModal = false;\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  toggleModal() {\r\n    this.showModal = !this.showModal;\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 26
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<brave-filled-onlytext-button (click)=\"toggleModal()\">\r\n  {{ config.openButtonText }}\r\n</brave-filled-onlytext-button>\r\n<div\r\n  *ngIf=\"showModal\"\r\n  class=\"overflow-x-hidden overflow-y-auto fixed inset-0 z-50 outline-none focus:outline-none justify-center items-center flex\"\r\n>\r\n  <div class=\"relative w-auto my-6 mx-auto max-w-3xl\">\r\n    <!--content-->\r\n    <div\r\n      class=\"border-0 rounded-lg shadow-lg relative flex flex-col w-full bg-white outline-none focus:outline-none\"\r\n    >\r\n      <!--header-->\r\n      <div\r\n        class=\"flex items-center justify-between px-5 py-3 border-b border-solid border-blueGray-200 rounded-t\"\r\n      >\r\n        <p class=\"font-sans font-semibold text-base text-coolGray-700\">\r\n          {{ config.title }}\r\n        </p>\r\n        <button\r\n          class=\"p-1 ml-auto bg-transparent border-0 text-indigo-800 float-right text-3xl leading-none font-semibold outline-none focus:outline-none\"\r\n          (click)=\"toggleModal()\"\r\n        >\r\n          <span class=\"material-icons text-indigo-800\">close</span>\r\n        </button>\r\n      </div>\r\n      <!--body-->\r\n      <div class=\"relative p-5 flex-auto\">\r\n        <p class=\"my-4 font-sans text-sm text-coolGray-700\">\r\n          {{ config.body }}\r\n        </p>\r\n      </div>\r\n      <!--footer-->\r\n      <div class=\"flex items-center justify-end px-5 pt-5 pb-8 rounded-b\">\r\n        <brave-links-onlytext-button (click)=\"actionOne.emit($event)\">\r\n          {{ config.actionButtonOneText }}\r\n        </brave-links-onlytext-button>\r\n        <brave-filled-onlytext-button (click)=\"actionTwo.emit($event)\">{{\r\n          config.actionButtonTwoText\r\n        }}</brave-filled-onlytext-button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div *ngIf=\"showModal\" class=\"opacity-20 fixed inset-0 z-40 bg-black\"></div>\r\n"
        },
        {
            "name": "BaseModalSmallComponent",
            "id": "component-BaseModalSmallComponent-07d088325d41189aa5320f9e6e298ee0",
            "file": "src/app/shared/components/modals/base-modal-small/base-modal-small.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-base-modal-small",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./base-modal-small.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "config",
                    "defaultValue": "{\r\n    openButtonText: 'Open',\r\n    title: 'Message Title',\r\n    body: 'Message Text',\r\n    actionButtonOneText: 'Cancel',\r\n    actionButtonTwoText: 'Continue',\r\n  }",
                    "line": 16,
                    "type": "IBaseModalSmallConfig"
                }
            ],
            "outputsClass": [
                {
                    "name": "actionOne",
                    "defaultValue": "new EventEmitter()",
                    "line": 23,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "actionTwo",
                    "defaultValue": "new EventEmitter()",
                    "line": 24,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "showModal",
                    "defaultValue": "false",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29
                },
                {
                    "name": "toggleModal",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\n\r\nexport interface IBaseModalSmallConfig {\r\n  openButtonText: string;\r\n  title: string;\r\n  body: string;\r\n  actionButtonOneText: string;\r\n  actionButtonTwoText: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'brave-base-modal-small',\r\n  templateUrl: './base-modal-small.component.html',\r\n})\r\nexport class BaseModalSmallComponent implements OnInit {\r\n  @Input() config: IBaseModalSmallConfig = {\r\n    openButtonText: 'Open',\r\n    title: 'Message Title',\r\n    body: 'Message Text',\r\n    actionButtonOneText: 'Cancel',\r\n    actionButtonTwoText: 'Continue',\r\n  };\r\n  @Output() actionOne: EventEmitter<any> = new EventEmitter();\r\n  @Output() actionTwo: EventEmitter<any> = new EventEmitter();\r\n\r\n  public showModal = false;\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  toggleModal() {\r\n    this.showModal = !this.showModal;\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 26
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<brave-filled-onlytext-button (click)=\"toggleModal()\">\r\n  {{ config.openButtonText }}\r\n</brave-filled-onlytext-button>\r\n<div\r\n  *ngIf=\"showModal\"\r\n  class=\"overflow-x-hidden overflow-y-auto fixed inset-0 z-50 outline-none focus:outline-none justify-center items-center flex\"\r\n>\r\n  <div class=\"relative w-auto my-6 mx-auto max-w-sm\">\r\n    <!--content-->\r\n    <div\r\n      class=\"border-0 rounded-lg shadow-lg relative flex flex-col w-full bg-white outline-none focus:outline-none\"\r\n    >\r\n      <!--header-->\r\n      <div\r\n        class=\"flex items-center justify-between px-5 py-3 border-b border-solid border-blueGray-200 rounded-t\"\r\n      >\r\n        <p class=\"font-sans font-semibold text-base text-coolGray-700\">\r\n          {{ config.title }}\r\n        </p>\r\n        <button\r\n          class=\"p-1 ml-auto bg-transparent border-0 text-indigo-800 float-right text-3xl leading-none font-semibold outline-none focus:outline-none\"\r\n          (click)=\"toggleModal()\"\r\n        >\r\n          <span class=\"material-icons text-indigo-800\">close</span>\r\n        </button>\r\n      </div>\r\n      <!--body-->\r\n      <div class=\"relative p-5 flex-auto\">\r\n        <p class=\"my-4 font-sans text-sm text-coolGray-700\">\r\n          {{ config.body }}\r\n        </p>\r\n      </div>\r\n      <!--footer-->\r\n      <div class=\"flex items-center justify-end px-5 pt-5 pb-8 rounded-b\">\r\n        <brave-links-onlytext-button (click)=\"actionOne.emit($event)\">\r\n          {{ config.actionButtonOneText }}\r\n        </brave-links-onlytext-button>\r\n        <brave-filled-onlytext-button (click)=\"actionTwo.emit($event)\">{{\r\n          config.actionButtonTwoText\r\n        }}</brave-filled-onlytext-button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div *ngIf=\"showModal\" class=\"opacity-20 fixed inset-0 z-40 bg-black\"></div>\r\n"
        },
        {
            "name": "ComplianceComponent",
            "id": "component-ComplianceComponent-16dc857a811c83e337cd1fda6207dc10",
            "file": "src/app/layouts/compliance/compliance.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-compliance",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./compliance.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 10
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'brave-compliance',\r\n  templateUrl: './compliance.component.html',\r\n})\r\nexport class ComplianceComponent implements OnInit {\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 7
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>compliance works!</p>\r\n"
        },
        {
            "name": "CompliancePrivacyComponent",
            "id": "component-CompliancePrivacyComponent-73d29f50a770223600e5b8bfa42598dd",
            "file": "src/app/views/compliance-privacy/compliance-privacy.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-compliance-privacy",
            "styleUrls": [
                "./compliance-privacy.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./compliance-privacy.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'brave-compliance-privacy',\r\n  templateUrl: './compliance-privacy.component.html',\r\n  styleUrls: ['./compliance-privacy.component.css']\r\n})\r\nexport class CompliancePrivacyComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./compliance-privacy.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>compliance-privacy works!</p>\r\n"
        },
        {
            "name": "ComplianceTosComponent",
            "id": "component-ComplianceTosComponent-7b799d8c05b041a9a5ffdedf29de3c2b",
            "file": "src/app/views/compliance-tos/compliance-tos.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-compliance-tos",
            "styleUrls": [
                "./compliance-tos.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./compliance-tos.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'brave-compliance-tos',\r\n  templateUrl: './compliance-tos.component.html',\r\n  styleUrls: ['./compliance-tos.component.css']\r\n})\r\nexport class ComplianceTosComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./compliance-tos.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>compliance-tos works!</p>\r\n"
        },
        {
            "name": "CreditcardCardComponent",
            "id": "component-CreditcardCardComponent-748c5578fa778813bb91038fe4e095e5",
            "file": "src/app/shared/components/cards/creditcard-card/creditcard-card.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-creditcard-card",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./creditcard-card.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "status",
                    "defaultValue": "'good'",
                    "line": 15,
                    "type": "Status"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "open$",
                    "defaultValue": "of(false)",
                    "type": "Observable<boolean> | undefined",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "viewDetail",
                    "type": "ViewdetailButtonComponent | undefined",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "ViewdetailButtonComponent"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { AfterViewInit, Component, ViewChild, Input } from '@angular/core';\r\nimport { ViewdetailButtonComponent } from '@shared/components/buttons/viewdetail-button/viewdetail-button.component';\r\nimport { Observable, of } from 'rxjs';\r\n\r\nexport type Status = 'excellent' | 'good' | 'okay' | 'poor';\r\n\r\n@Component({\r\n  selector: 'brave-creditcard-card',\r\n  templateUrl: './creditcard-card.component.html',\r\n})\r\nexport class CreditcardCardComponent implements AfterViewInit {\r\n  @ViewChild(ViewdetailButtonComponent)\r\n  viewDetail: ViewdetailButtonComponent | undefined;\r\n  open$: Observable<boolean> | undefined = of(false);\r\n  @Input() status: Status = 'good';\r\n\r\n  constructor() {}\r\n\r\n  ngAfterViewInit(): void {\r\n    this.open$ = this.viewDetail?.open$.asObservable();\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 15
            },
            "implements": [
                "AfterViewInit"
            ],
            "templateData": "<div\r\n  class=\"relative flex flex-col break-words w-full py-5 rounded-lg border border-blueGray-300\"\r\n>\r\n  <div class=\"flex pr-5\">\r\n    <div class=\"px-4 w-13\">\r\n      <!-- left column  section 1 -->\r\n      <div\r\n        class=\"rounded-full border-none w-5 h-5\"\r\n        [ngClass]=\"status | accountStatus\"\r\n      ></div>\r\n    </div>\r\n    <div class=\"flex flex-col w-full\">\r\n      <!--  right column section 2 -->\r\n      <div class=\"flex flex-row justify-between p-0 -mt-1 mb-1\">\r\n        <!-- header  -->\r\n        <span><p class=\"brave-body1-semibold\">CITI</p></span>\r\n        <span\r\n          ><p class=\"brave-body1-semibold\"></p>\r\n          80%</span\r\n        >\r\n      </div>\r\n\r\n      <div class=\"flex flex-row\">\r\n        <!-- credit balance  -->\r\n        <span><p class=\"brave-body1\">Credit Balance:&nbsp;</p></span>\r\n        <span><p class=\"brave-body1\">$800</p></span>\r\n      </div>\r\n\r\n      <div class=\"flex flex-row\">\r\n        <!-- credit limit  -->\r\n        <span><p class=\"brave-body1\">Credit Limit:&nbsp;</p></span>\r\n        <span><p class=\"brave-body1\">$2000</p></span>\r\n      </div>\r\n\r\n      <div class=\"mt-1\">\r\n        <!-- buttons goes here -->\r\n        <brave-viewdetail-button>View Details</brave-viewdetail-button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div *ngIf=\"open$ | async as open\" class=\"flex flex-col w-full py-5 px-4\">\r\n    <div class=\"border-t border-blueGray-300\"></div>\r\n  </div>\r\n\r\n  <div *ngIf=\"open$ | async as open\" class=\"flex flex-row pr-5\">\r\n    <div class=\"px-4 w-13\">\r\n      <!-- left column  section 1 -->\r\n      <div class=\"w-5 h-5\"></div>\r\n    </div>\r\n    <div class=\"flex flex-col w-full pr-1\">\r\n      <!--  right column section 2 -->\r\n\r\n      <div class=\"flex flex-row justify-between\">\r\n        <!-- min payment  -->\r\n        <span><p class=\"brave-body1\">Minimum Payment:&nbsp;</p></span>\r\n        <span><p class=\"brave-body1\">$50</p></span>\r\n      </div>\r\n\r\n      <div class=\"flex flex-row justify-between\">\r\n        <!-- date opened TODO swith to pipe  -->\r\n        <span><p class=\"brave-body1\">Date Opened:&nbsp;</p></span>\r\n        <span><p class=\"brave-body1\">02/01/2020</p></span>\r\n      </div>\r\n\r\n      <div class=\"flex flex-row justify-between\">\r\n        <!-- account status  -->\r\n        <span><p class=\"brave-body1\">Account Status:&nbsp;</p></span>\r\n        <span><p class=\"brave-body1\">In good standing</p></span>\r\n      </div>\r\n\r\n      <div class=\"flex flex-row justify-between\">\r\n        <!-- ownership of account  -->\r\n        <span><p class=\"brave-body1\">Ownership of account:&nbsp;</p></span>\r\n        <span><p class=\"brave-body1\">Self</p></span>\r\n      </div>\r\n\r\n      <div class=\"flex flex-row justify-between\">\r\n        <!-- credit limit  -->\r\n        <span><p class=\"brave-body1\">Days 30/60/90 Late:&nbsp;</p></span>\r\n        <span><p class=\"brave-body1\">1/0/0</p></span>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "DashboardComponent",
            "id": "component-DashboardComponent-f86aceb8416f3ed40d6fa93302fb1df6",
            "file": "src/app/layouts/dashboard/dashboard.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-dashboard",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./dashboard.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 10
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'brave-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 7
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>dashboard works!</p>\r\n"
        },
        {
            "name": "DashboardInitComponent",
            "id": "component-DashboardInitComponent-102660e050f8825ecae7434c1fee2d0b",
            "file": "src/app/views/dashboard-init/dashboard-init.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-dashboard-init",
            "styleUrls": [
                "./dashboard-init.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./dashboard-init.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "critical",
                    "defaultValue": "'critical ' as SnapshotStatus",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "danger",
                    "defaultValue": "'danger ' as SnapshotStatus",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "hidden",
                    "defaultValue": "'hidden' as LabelOfSnapshot",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "new",
                    "defaultValue": "'new' as LabelOfSnapshot",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "safe",
                    "defaultValue": "'safe ' as SnapshotStatus",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "update",
                    "defaultValue": "'update' as LabelOfSnapshot",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { SnapshotStatus } from '@shared/components/cards/snapshot-display-card/snapshot-display-card.component';\r\nimport { LabelOfSnapshot } from '@shared/components/cards/snapshot-display-card/snapshot-label.pipe';\r\n\r\n@Component({\r\n  selector: 'brave-dashboard-init',\r\n  templateUrl: './dashboard-init.component.html',\r\n  styleUrls: ['./dashboard-init.component.css'],\r\n})\r\nexport class DashboardInitComponent implements OnInit {\r\n  hidden = 'hidden' as LabelOfSnapshot;\r\n  update = 'update' as LabelOfSnapshot;\r\n  new = 'new' as LabelOfSnapshot;\r\n  critical = 'critical ' as SnapshotStatus;\r\n  safe = 'safe ' as SnapshotStatus;\r\n  danger = 'danger ' as SnapshotStatus;\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./dashboard-init.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 16
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"container mx-auto max-w-xs h-full\">\r\n  <brave-admin-navbar></brave-admin-navbar>\r\n  <div style=\"margin-top: 3.5rem; padding-bottom: 4.5rem\">\r\n    <h2 class=\"mb-1 text-lg font-semibold\">Your Credit Snapshot</h2>\r\n    <p class=\"text-xs mb-1\">Last Updated Today</p>\r\n    <brave-snapshot-display-card\r\n      tendency=\"up\"\r\n      [label]=\"hidden\"\r\n      [status]=\"critical\"\r\n      title=\"New Negative Accounts\"\r\n      typeOfSnapshot=\"time\"\r\n      value=\"5\"\r\n    ></brave-snapshot-display-card>\r\n    <brave-snapshot-display-card\r\n      tendency=\"down\"\r\n      [label]=\"update\"\r\n      [status]=\"safe\"\r\n      title=\"Age of Credit\"\r\n      typeOfSnapshot=\"time\"\r\n      value=\"3\"\r\n      typeOfDate=\"Years\"\r\n    ></brave-snapshot-display-card>\r\n    <brave-snapshot-display-card\r\n      tendency=\"down\"\r\n      [label]=\"update\"\r\n      [status]=\"danger\"\r\n      title=\"Credit Mix\"\r\n      typeOfSnapshot=\"tag\"\r\n      value=\"Not Bad\"\r\n      typeOfDate=\"Years\"\r\n    ></brave-snapshot-display-card>\r\n    <brave-snapshot-display-card\r\n      tendency=\"no-tendency\"\r\n      [label]=\"new\"\r\n      [status]=\"safe\"\r\n      title=\"Credit Card Utilization\"\r\n      typeOfSnapshot=\"percentage\"\r\n      value=\"40\"\r\n    ></brave-snapshot-display-card>\r\n    <brave-links-onlytext-button class=\"w-full\"\r\n      >View Full Credit Report</brave-links-onlytext-button\r\n    >\r\n    <h5 class=\"mb-2 font-semibold text-lg\">Take Control</h5>\r\n    <h6 class=\"text-sm\">\r\n      Trusted, affordable products no matter your credit situation\r\n    </h6>\r\n    <brave-credit-builder-card class=\"mt-2\"></brave-credit-builder-card>\r\n  </div>\r\n  <brave-navigation-tabs></brave-navigation-tabs>\r\n</div>\r\n"
        },
        {
            "name": "DashboardNavbarComponent",
            "id": "component-DashboardNavbarComponent-743511bd381a72433841d92479d83e63",
            "file": "src/app/shared/components/navbars/dashboard-navbar/dashboard-navbar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-dashboard-navbar",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./dashboard-navbar.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "menuOne",
                    "defaultValue": "{\r\n    menu: 'Discover',\r\n    submenus: [\r\n      { submenu: 'Sub 1', route: '/', group: 'Group 1' },\r\n      { submenu: 'Sub 2', route: '/' },\r\n      { submenu: 'Sub 3', route: '/' },\r\n      { submenu: 'Sub 4', route: '/' },\r\n      { submenu: 'Sub 5', route: '/', break: true },\r\n      { submenu: 'Sub 6', route: '/', group: 'Group 2' },\r\n      { submenu: 'Sub 7', route: '/' },\r\n      { submenu: 'Sub 8', route: '/', break: true },\r\n      { submenu: 'Sub 9', route: '/', group: 'Group 3' },\r\n      { submenu: 'Sub 10', route: '/' },\r\n    ],\r\n  }",
                    "type": "IMenuDropdown",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "menuThree",
                    "defaultValue": "{\r\n    menu: 'Settings',\r\n    submenus: [\r\n      { submenu: 'Sub 1', route: '/', group: 'Group 1' },\r\n      { submenu: 'Sub 2', route: '/' },\r\n      { submenu: 'Sub 3', route: '/' },\r\n      { submenu: 'Sub 4', route: '/' },\r\n      { submenu: 'Sub 5', route: '/', break: true },\r\n      { submenu: 'Sub 6', route: '/', group: 'Group 2' },\r\n      { submenu: 'Sub 7', route: '/' },\r\n      { submenu: 'Sub 8', route: '/', break: true },\r\n      { submenu: 'Sub 9', route: '/', group: 'Group 3' },\r\n      { submenu: 'Sub 10', route: '/' },\r\n    ],\r\n  }",
                    "type": "IMenuDropdown",
                    "optional": false,
                    "description": "",
                    "line": 42,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "menuTwo",
                    "defaultValue": "{\r\n    menu: 'Profile',\r\n    submenus: [\r\n      { submenu: 'Sub 1', route: '/', group: 'Group 1' },\r\n      { submenu: 'Sub 2', route: '/' },\r\n      { submenu: 'Sub 3', route: '/' },\r\n      { submenu: 'Sub 4', route: '/' },\r\n      { submenu: 'Sub 5', route: '/', break: true },\r\n      { submenu: 'Sub 6', route: '/', group: 'Group 2' },\r\n      { submenu: 'Sub 7', route: '/' },\r\n      { submenu: 'Sub 8', route: '/', break: true },\r\n      { submenu: 'Sub 9', route: '/', group: 'Group 3' },\r\n      { submenu: 'Sub 10', route: '/' },\r\n    ],\r\n  }",
                    "type": "IMenuDropdown",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "navbarOpen",
                    "defaultValue": "false",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 60
                },
                {
                    "name": "setNavbarOpen",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 62
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { IMenuDropdown } from '@shared/components/dropdowns/popdowns/menu-dropdown/menu-dropdown.component';\r\n\r\n@Component({\r\n  selector: 'brave-dashboard-navbar',\r\n  templateUrl: './dashboard-navbar.component.html',\r\n})\r\nexport class DashboardNavbarComponent implements OnInit {\r\n  public navbarOpen = false;\r\n  public menuOne: IMenuDropdown = {\r\n    menu: 'Discover',\r\n    submenus: [\r\n      { submenu: 'Sub 1', route: '/', group: 'Group 1' },\r\n      { submenu: 'Sub 2', route: '/' },\r\n      { submenu: 'Sub 3', route: '/' },\r\n      { submenu: 'Sub 4', route: '/' },\r\n      { submenu: 'Sub 5', route: '/', break: true },\r\n      { submenu: 'Sub 6', route: '/', group: 'Group 2' },\r\n      { submenu: 'Sub 7', route: '/' },\r\n      { submenu: 'Sub 8', route: '/', break: true },\r\n      { submenu: 'Sub 9', route: '/', group: 'Group 3' },\r\n      { submenu: 'Sub 10', route: '/' },\r\n    ],\r\n  };\r\n\r\n  public menuTwo: IMenuDropdown = {\r\n    menu: 'Profile',\r\n    submenus: [\r\n      { submenu: 'Sub 1', route: '/', group: 'Group 1' },\r\n      { submenu: 'Sub 2', route: '/' },\r\n      { submenu: 'Sub 3', route: '/' },\r\n      { submenu: 'Sub 4', route: '/' },\r\n      { submenu: 'Sub 5', route: '/', break: true },\r\n      { submenu: 'Sub 6', route: '/', group: 'Group 2' },\r\n      { submenu: 'Sub 7', route: '/' },\r\n      { submenu: 'Sub 8', route: '/', break: true },\r\n      { submenu: 'Sub 9', route: '/', group: 'Group 3' },\r\n      { submenu: 'Sub 10', route: '/' },\r\n    ],\r\n  };\r\n\r\n  public menuThree: IMenuDropdown = {\r\n    menu: 'Settings',\r\n    submenus: [\r\n      { submenu: 'Sub 1', route: '/', group: 'Group 1' },\r\n      { submenu: 'Sub 2', route: '/' },\r\n      { submenu: 'Sub 3', route: '/' },\r\n      { submenu: 'Sub 4', route: '/' },\r\n      { submenu: 'Sub 5', route: '/', break: true },\r\n      { submenu: 'Sub 6', route: '/', group: 'Group 2' },\r\n      { submenu: 'Sub 7', route: '/' },\r\n      { submenu: 'Sub 8', route: '/', break: true },\r\n      { submenu: 'Sub 9', route: '/', group: 'Group 3' },\r\n      { submenu: 'Sub 10', route: '/' },\r\n    ],\r\n  };\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  setNavbarOpen() {\r\n    this.navbarOpen = !this.navbarOpen;\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 56
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<nav\r\n  class=\"top-0 fixed z-50 w-full flex flex-wrap items-center justify-between px-2 py-3 navbar-expand-lg bg-white shadow\"\r\n>\r\n  <div\r\n    class=\"container px-4 mx-auto flex flex-wrap items-center justify-between\"\r\n  >\r\n    <div\r\n      class=\"w-full relative flex justify-between lg:w-auto lg:static lg:block lg:justify-start\"\r\n    >\r\n      <a\r\n        [routerLink]=\"['/']\"\r\n        class=\"font-sans text-sm text-coolGray-700 leading-relaxed inline-block mr-4 py-2 whitespace-nowrap uppercase\"\r\n        href=\"#\"\r\n      >\r\n        Logo\r\n      </a>\r\n      <button\r\n        class=\"cursor-pointer text-xl leading-none px-3 py-1 border-none rounded bg-transparent block lg:hidden outline-none focus:outline-none\"\r\n        type=\"button\"\r\n        (click)=\"setNavbarOpen()\"\r\n      >\r\n        <span class=\"material-icons\">menu</span>\r\n      </button>\r\n    </div>\r\n    <div\r\n      class=\"lg:flex flex-grow items-center\"\r\n      [ngClass]=\"{ hidden: !navbarOpen, block: navbarOpen }\"\r\n      id=\"example-navbar-warning\"\r\n    >\r\n      <!-- left portion menu items -->\r\n      <ul class=\"flex flex-col lg:flex-row list-none mr-auto\">\r\n        <li class=\"flex items-center\">\r\n          <!-- additional left hand menu items go here -->\r\n        </li>\r\n      </ul>\r\n      <!-- right portion menu items -->\r\n      <ul class=\"flex flex-col lg:flex-row list-none lg:ml-auto\">\r\n        <li class=\"flex items-center\">\r\n          <brave-menu-dropdown\r\n            class=\"block\"\r\n            [config]=\"menuOne\"\r\n          ></brave-menu-dropdown>\r\n        </li>\r\n        <li class=\"flex items-center\">\r\n          <brave-menu-dropdown\r\n            class=\"block\"\r\n            [config]=\"menuTwo\"\r\n          ></brave-menu-dropdown>\r\n        </li>\r\n        <li class=\"flex items-center\">\r\n          <brave-menu-dropdown\r\n            class=\"block\"\r\n            [config]=\"menuThree\"\r\n          ></brave-menu-dropdown>\r\n        </li>\r\n\r\n        <li class=\"flex items-center\">\r\n          <brave-outline-onlytext-button\r\n            >Register</brave-outline-onlytext-button\r\n          >\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</nav>\r\n"
        },
        {
            "name": "FacebookOnlytextsigninButtonComponent",
            "id": "component-FacebookOnlytextsigninButtonComponent-fe455236124d794c92ce75102abadf26",
            "file": "src/app/shared/components/buttons/facebook-onlytextsignin-button/facebook-onlytextsignin-button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-facebook-onlytextsignin-button",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./facebook-onlytextsignin-button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 10
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'brave-facebook-onlytextsignin-button',\r\n  templateUrl: './facebook-onlytextsignin-button.component.html',\r\n})\r\nexport class FacebookOnlytextsigninButtonComponent implements OnInit {\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 7
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<button\r\n  class=\"\r\n    bg-white\r\n    active:bg-blueGray-50\r\n    text-blueGray-700\r\n    font-bold\r\n    h-12\r\n    w-full\r\n    px-4\r\n    py-2\r\n    rounded\r\n    outline-none\r\n    focus:outline-none\r\n    mr-2\r\n    mb-1\r\n    uppercase\r\n    shadow\r\n    hover:shadow-md\r\n    inline-flex\r\n    items-center\r\n    text-xs text-center\r\n    ease-linear\r\n    transition-all\r\n    duration-150\r\n  \"\r\n  type=\"button\"\r\n>\r\n  <span class=\"material-icons w-5 mr-1\">facebook</span>\r\n  Facebook\r\n</button>\r\n"
        },
        {
            "name": "FilledChecktextProgressbarComponent",
            "id": "component-FilledChecktextProgressbarComponent-1e639b0664c76125e87f65fa04a97b7b",
            "file": "src/app/shared/components/progressbars/filled-checktext-progressbar/filled-checktext-progressbar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-filled-checktext-progressbar",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./filled-checktext-progressbar.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "activatedStep",
                    "defaultValue": "-1",
                    "line": 20,
                    "type": "number"
                },
                {
                    "name": "completedStep",
                    "defaultValue": "-1",
                    "line": 21,
                    "type": "number"
                },
                {
                    "name": "config",
                    "defaultValue": "{ size: 'base' }",
                    "line": 18,
                    "type": "IFilledChecktextProgressbarConfig"
                },
                {
                    "name": "steps",
                    "defaultValue": "[]",
                    "line": 19,
                    "type": "IProgressStep[]"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnChanges, OnInit } from '@angular/core';\n\nexport interface IProgressStep {\n  id: number;\n  active: boolean;\n  complete: boolean;\n  name: string;\n}\nexport interface IFilledChecktextProgressbarConfig {\n  size: string;\n}\n\n@Component({\n  selector: 'brave-filled-checktext-progressbar',\n  templateUrl: './filled-checktext-progressbar.component.html',\n})\nexport class FilledChecktextProgressbarComponent {\n  @Input() config: IFilledChecktextProgressbarConfig = { size: 'base' };\n  @Input() steps: IProgressStep[] = [];\n  @Input() activatedStep: number = -1;\n  @Input() completedStep: number = -1;\n\n  constructor() {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 21
            },
            "templateData": "<div>\n  <div class=\"py-6\">\n    <div class=\"flex items-center\">\n      <ng-container\n        *ngFor=\"let step of steps; index as i; first as isFirst; last as isLast\"\n      >\n        <div\n          [ngClass]=\"{\n            rounded: isFirst,\n            'bg-lightBlue-100': i <= activatedStep,\n            'bg-coolGray-200': i > activatedStep\n          }\"\n          class=\"flex-auto h-2 w-1/5 rounded-r-none transition duration-500 ease-in-out\"\n        ></div>\n        <div class=\"flex items-center text-white relative\">\n          <div\n            [ngClass]=\"{\n              'bg-lightBlue-100': i <= activatedStep,\n              'bg-coolGray-200': i > activatedStep\n            }\"\n            class=\"flex justify-center items-center text-center rounded-full transition duration-500 ease-in-out h-8 w-8 -ml-0.5\"\n          >\n            <span\n              class=\"material-icons text-coolGray-700\"\n              *ngIf=\"i <= completedStep\"\n              >done</span\n            >\n          </div>\n          <div\n            [ngClass]=\"{\n              'text-coolGray-700': i <= completedStep,\n              'text-coolGray-200': i > completedStep\n            }\"\n            class=\"absolute top-0 -ml-12 text-center mt-9 w-32 font-sans text-xs\"\n          >\n            <!-- {{ config.steps.length }} -->\n            {{ step.name }}\n          </div>\n        </div>\n        <div\n          *ngIf=\"isLast\"\n          [ngClass]=\"{\n            'bg-lightBlue-100': i <= activatedStep,\n            'bg-coolGray-200': i > activatedStep\n          }\"\n          class=\"flex-auto h-2 w-1/5 rounded rounded-l-none transition duration-500 ease-in-out\"\n        ></div>\n      </ng-container>\n    </div>\n  </div>\n</div>\n"
        },
        {
            "name": "FilledClosingAlertComponent",
            "id": "component-FilledClosingAlertComponent-c33172bd449c8697f2e970733e46abbb",
            "file": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-filled-closing-alert",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./filled-closing-alert.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "config",
                    "defaultValue": "{\r\n    size: 'base',\r\n    backgroundColor: 'bg-indigo-800',\r\n    color: 'text-white',\r\n    alertTitle: 'Alert!',\r\n    alertBody: 'Something went wrong. Please try again.',\r\n  }",
                    "line": 16,
                    "type": "IFilledClosingAlertConfig"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "showAlert",
                    "defaultValue": "false",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\r\n\r\nexport interface IFilledClosingAlertConfig {\r\n  size: string;\r\n  backgroundColor: string;\r\n  color: string;\r\n  alertTitle: string;\r\n  alertBody: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'brave-filled-closing-alert',\r\n  templateUrl: './filled-closing-alert.component.html',\r\n})\r\nexport class FilledClosingAlertComponent implements OnInit {\r\n  @Input() config: IFilledClosingAlertConfig = {\r\n    size: 'base',\r\n    backgroundColor: 'bg-indigo-800',\r\n    color: 'text-white',\r\n    alertTitle: 'Alert!',\r\n    alertBody: 'Something went wrong. Please try again.',\r\n  };\r\n  constructor() {}\r\n  public showAlert: boolean = false;\r\n  ngOnInit(): void {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 22
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div\r\n  *ngIf=\"showAlert\"\r\n  [ngClass]=\"config | filledClosingAlert\"\r\n  class=\"font-sans text-sm text-white px-6 py-4 border-0 rounded relative mb-4\"\r\n>\r\n  <span class=\"font-sans text-sm text-white inline-block mr-5 align-middle\">\r\n    {{ config.alertTitle }}\r\n  </span>\r\n  <span class=\"inline-block align-left mr-8\">\r\n    {{ config.alertBody }}\r\n  </span>\r\n  <button\r\n    class=\"absolute bg-transparent text-2xl font-semibold leading-none right-0 top-0 mt-4 mr-4 outline-none focus:outline-none\"\r\n    (click)=\"showAlert = false\"\r\n  >\r\n    <span class=\"material-icons text-white\">close</span>\r\n  </button>\r\n</div>\r\n"
        },
        {
            "name": "FilledOnlytextBadgeComponent",
            "id": "component-FilledOnlytextBadgeComponent-cc76390c7f4dbba7f24cd4614fada0a0",
            "file": "src/app/shared/components/badges/filled-onlytext-badge/filled-onlytext-badge.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-filled-onlytext-badge",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./filled-onlytext-badge.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "config",
                    "defaultValue": "{\r\n    size: 'base',\r\n    backgroundColor: 'bg-indigo-200',\r\n    color: 'text-indigo-800',\r\n  }",
                    "line": 14,
                    "type": "IFilledOnlytextBadgeConfig"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\r\n\r\nexport interface IFilledOnlytextBadgeConfig {\r\n  size: string;\r\n  backgroundColor: string;\r\n  color: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'brave-filled-onlytext-badge',\r\n  templateUrl: './filled-onlytext-badge.component.html',\r\n})\r\nexport class FilledOnlytextBadgeComponent {\r\n  @Input() config: IFilledOnlytextBadgeConfig = {\r\n    size: 'base',\r\n    backgroundColor: 'bg-indigo-200',\r\n    color: 'text-indigo-800',\r\n  };\r\n\r\n  constructor() {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 18
            },
            "templateData": "<span\r\n  [ngClass]=\"config | filledOnlytextBadge\"\r\n  class=\"font-semibold inline-block uppercase rounded uppercase last:mr-0 mr-1\"\r\n>\r\n  <ng-content></ng-content>\r\n</span>\r\n"
        },
        {
            "name": "FilledOnlytextButtonComponent",
            "id": "component-FilledOnlytextButtonComponent-16b5fe9a1071f4eec97ac246e794abf0",
            "file": "src/app/shared/components/buttons/filled-onlytext-button/filled-onlytext-button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-filled-onlytext-button",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./filled-onlytext-button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "config",
                    "defaultValue": "{\r\n    buttonSize: 'base',\r\n    backgroundColor: 'bg-indigo-800',\r\n    activeColor: 'bg-indigo-900',\r\n    color: 'text-white',\r\n  }",
                    "line": 22,
                    "type": "IFilledOnlyTextButtonConfig"
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "line": 29,
                    "type": "boolean"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\n\r\nexport interface IFilledOnlyTextButtonConfig {\r\n  buttonSize: string;\r\n  backgroundColor: string;\r\n  activeColor: string;\r\n  color: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'brave-filled-onlytext-button',\r\n  templateUrl: './filled-onlytext-button.component.html',\r\n})\r\nexport class FilledOnlytextButtonComponent {\r\n  /**\r\n   * @param config Input objctfor button customization\r\n   * @param config.buttonSize 'sm', 'base', 'lg'\r\n   * @param config.backgroundColor Any global color \"e.g. bg-indigo-800\"\r\n   * @param config.activeColor Any global color \"e.g. bg-indigo-900\"\r\n   * @param config.color Any global color\r\n   */\r\n  @Input() config: IFilledOnlyTextButtonConfig = {\r\n    buttonSize: 'base',\r\n    backgroundColor: 'bg-indigo-800',\r\n    activeColor: 'bg-indigo-900',\r\n    color: 'text-white',\r\n  };\r\n\r\n  @Input() disabled: boolean = false;\r\n\r\n  constructor() {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 29
            },
            "templateData": "<button\r\n  [disabled]=\"disabled\"\r\n  [ngClass]=\"config | filledOnlytextButton\"\r\n  class=\"\r\n    font-bold\r\n    rounded\r\n    shadow\r\n    outline-none\r\n    focus:outline-none\r\n    mr-1\r\n    mb-1\r\n    ease-linear\r\n    transition-all\r\n    duration-150\r\n  \"\r\n  type=\"button\"\r\n>\r\n  <ng-content></ng-content>\r\n</button>\r\n"
        },
        {
            "name": "FilledOnlytextTabsComponent",
            "id": "component-FilledOnlytextTabsComponent-92f0de82ce10a1c7bdc6f4ecd4512940",
            "file": "src/app/shared/components/tabs/filled-onlytext-tabs/filled-onlytext-tabs.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-filled-onlytext-tabs",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./filled-onlytext-tabs.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "openTab",
                    "defaultValue": "1",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 11
                },
                {
                    "name": "toggleTabs",
                    "args": [
                        {
                            "name": "$tabNumber",
                            "type": "number"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13,
                    "jsdoctags": [
                        {
                            "name": "$tabNumber",
                            "type": "number",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'brave-filled-onlytext-tabs',\r\n  templateUrl: './filled-onlytext-tabs.component.html',\r\n})\r\nexport class FilledOnlytextTabsComponent implements OnInit {\r\n  openTab = 1;\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  toggleTabs($tabNumber: number) {\r\n    this.openTab = $tabNumber;\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"flex flex-wrap\">\r\n  <div class=\"w-full\">\r\n\r\n    <ul class=\"flex mb-0 list-none flex-wrap pt-3 pb-4 flex-row\">\r\n      <li class=\"-mb-px mr-2 last:mr-0 flex-auto text-center\">\r\n        <a\r\n          class=\"font-sans text-sm px-5 py-3 rounded block leading-normal\"\r\n          (click)=\"toggleTabs(1)\"\r\n          [ngClass]=\"{\r\n            'bg-coolGray-200 text-coolGray-700': openTab !== 1,\r\n            'text-white font-bold bg-indigo-800 shadow-lg': openTab === 1\r\n          }\"\r\n        >\r\n          Tab 1\r\n        </a>\r\n      </li>\r\n      <li class=\"-mb-px mr-2 last:mr-0 flex-auto text-center\">\r\n        <a\r\n          class=\"font-sans text-sm px-5 py-3 rounded block leading-normal\"\r\n          (click)=\"toggleTabs(2)\"\r\n          [ngClass]=\"{\r\n            'bg-coolGray-200 text-coolGray-700': openTab !== 2,\r\n            'text-white font-bold bg-indigo-800 shadow-lg': openTab === 2\r\n          }\"\r\n        >\r\n          Tab 2\r\n        </a>\r\n      </li>\r\n      <li class=\"-mb-px mr-2 last:mr-0 flex-auto text-center\">\r\n        <a\r\n          class=\"font-sans text-sm px-5 py-3 rounded block leading-normal\"\r\n          (click)=\"toggleTabs(3)\"\r\n          [ngClass]=\"{\r\n            'bg-coolGray-200 text-coolGray-700': openTab !== 3,\r\n            'text-white font-bold bg-indigo-800 shadow-lg': openTab === 3\r\n          }\"\r\n        >\r\n          Tab 3\r\n        </a>\r\n      </li>\r\n    </ul>\r\n    <div\r\n      class=\"relative flex flex-col min-w-0 break-words bg-white w-full mb-6 rounded\"\r\n    >\r\n      <div class=\"px-4 py-5 flex-auto\">\r\n        <div class=\"tab-content tab-space\">\r\n          <div [ngClass]=\"{ hidden: openTab !== 1, block: openTab === 1 }\">\r\n            <p>\r\n              Hello World\r\n            </p>\r\n          </div>\r\n          <div [ngClass]=\"{ hidden: openTab !== 2, block: openTab === 2 }\">\r\n            <p>\r\n              ACDC FOR LIFE\r\n            </p>\r\n          </div>\r\n          <div [ngClass]=\"{ hidden: openTab !== 3, block: openTab === 3 }\">\r\n            <p>\r\n              Efficiently unleash cross-media information without cross-media\r\n              value. Quickly maximize timely deliverables for real-time schemas.\r\n              <br />\r\n              <br />\r\n              Dramatically maintain clicks-and-mortar solutions without\r\n              functional solutions.\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "FooterAdminComponent",
            "id": "component-FooterAdminComponent-0d5514c998ff9cbff215d0ad1df7c819",
            "file": "src/app/shared/components/footers/footer-admin/footer-admin.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-footer-admin",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./footer-admin.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "date",
                    "defaultValue": "new Date().getFullYear()",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 11
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'brave-footer-admin',\r\n  templateUrl: './footer-admin.component.html',\r\n})\r\nexport class FooterAdminComponent implements OnInit {\r\n  date = new Date().getFullYear();\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<footer class=\"block py-4\">\r\n  <div class=\"container mx-auto px-4\">\r\n    <hr class=\"mb-4 border-b-1 border-blueGray-200\" />\r\n    <div class=\"flex flex-wrap items-center md:justify-between justify-center\">\r\n      <div class=\"w-full md:w-4/12 px-4\">\r\n        <div\r\n          class=\"text-sm text-blueGray-500 font-semibold py-1 text-center md:text-left\"\r\n        >\r\n          Copyright © {{ date }}\r\n          <a\r\n            href=\"https://www.creative-tim.com?ref=na-footer-admin\"\r\n            class=\"text-blueGray-500 hover:text-blueGray-700 text-sm font-semibold py-1\"\r\n          >\r\n            Creative Tim\r\n          </a>\r\n        </div>\r\n      </div>\r\n      <div class=\"w-full md:w-8/12 px-4\">\r\n        <ul class=\"flex flex-wrap list-none md:justify-end justify-center\">\r\n          <li>\r\n            <a\r\n              href=\"https://www.creative-tim.com?ref=na-footer-admin\"\r\n              class=\"text-blueGray-600 hover:text-blueGray-800 text-sm font-semibold block py-1 px-3\"\r\n            >\r\n              Creative Tim\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <a\r\n              href=\"https://www.creative-tim.com/presentation?ref=na-footer-admin\"\r\n              class=\"text-blueGray-600 hover:text-blueGray-800 text-sm font-semibold block py-1 px-3\"\r\n            >\r\n              About Us\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <a\r\n              href=\"http://blog.creative-tim.com?ref=na-footer-admin\"\r\n              class=\"text-blueGray-600 hover:text-blueGray-800 text-sm font-semibold block py-1 px-3\"\r\n            >\r\n              Blog\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <a\r\n              href=\"https://github.com/creativetimofficial/notus-angular/blob/main/LICENSE.md?ref=creativetim\"\r\n              class=\"text-blueGray-600 hover:text-blueGray-800 text-sm font-semibold block py-1 px-3\"\r\n            >\r\n              MIT License\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</footer>\r\n"
        },
        {
            "name": "FooterComponent",
            "id": "component-FooterComponent-f8aca5c89e878e20180bd4508cbca007",
            "file": "src/app/shared/components/footers/footer/footer.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-footer",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./footer.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "date",
                    "defaultValue": "new Date().getFullYear()",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 11
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'brave-footer',\r\n  templateUrl: './footer.component.html',\r\n})\r\nexport class FooterComponent implements OnInit {\r\n  date = new Date().getFullYear();\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<footer class=\"relative bg-blueGray-200 pt-8 pb-6\">\r\n  <div\r\n    class=\"bottom-auto top-0 left-0 right-0 w-full absolute pointer-events-none overflow-hidden -mt-20 h-20\"\r\n    style=\"transform: translateZ(0)\"\r\n  >\r\n    <svg\r\n      class=\"absolute bottom-0 overflow-hidden\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      preserveAspectRatio=\"none\"\r\n      version=\"1.1\"\r\n      viewBox=\"0 0 2560 100\"\r\n      x=\"0\"\r\n      y=\"0\"\r\n    >\r\n      <polygon\r\n        class=\"text-blueGray-200 fill-current\"\r\n        points=\"2560 0 2560 100 0 100\"\r\n      ></polygon>\r\n    </svg>\r\n  </div>\r\n  <div class=\"container mx-auto px-4\">\r\n    <div class=\"flex flex-wrap text-center lg:text-left\">\r\n      <div class=\"w-full lg:w-6/12 px-4\">\r\n        <h4 class=\"text-3xl font-semibold\">Let's keep in touch!</h4>\r\n        <h5 class=\"text-lg mt-0 mb-2 text-blueGray-600\">\r\n          Find us on any of these platforms, we respond 1-2 business days.\r\n        </h5>\r\n        <div class=\"mt-6 lg:mb-0 mb-6\">\r\n          <button\r\n            class=\"bg-white text-lightBlue-400 shadow-lg font-normal h-10 w-10 items-center justify-center align-center rounded-full outline-none focus:outline-none mr-2\"\r\n            type=\"button\"\r\n          >\r\n            <i class=\"fab fa-twitter\"></i>\r\n          </button>\r\n          <button\r\n            class=\"bg-white text-lightBlue-600 shadow-lg font-normal h-10 w-10 items-center justify-center align-center rounded-full outline-none focus:outline-none mr-2\"\r\n            type=\"button\"\r\n          >\r\n            <i class=\"fab fa-facebook-square\"></i>\r\n          </button>\r\n          <button\r\n            class=\"bg-white text-pink-400 shadow-lg font-normal h-10 w-10 items-center justify-center align-center rounded-full outline-none focus:outline-none mr-2\"\r\n            type=\"button\"\r\n          >\r\n            <i class=\"fab fa-dribbble\"></i>\r\n          </button>\r\n          <button\r\n            class=\"bg-white text-blueGray-800 shadow-lg font-normal h-10 w-10 items-center justify-center align-center rounded-full outline-none focus:outline-none mr-2\"\r\n            type=\"button\"\r\n          >\r\n            <i class=\"fab fa-github\"></i>\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div class=\"w-full lg:w-6/12 px-4\">\r\n        <div class=\"flex flex-wrap items-top mb-6\">\r\n          <div class=\"w-full lg:w-4/12 px-4 ml-auto\">\r\n            <span\r\n              class=\"block uppercase text-blueGray-500 text-sm font-semibold mb-2\"\r\n            >\r\n              Useful Links\r\n            </span>\r\n            <ul class=\"list-unstyled\">\r\n              <li>\r\n                <a\r\n                  class=\"text-blueGray-600 hover:text-blueGray-800 font-semibold block pb-2 text-sm\"\r\n                  href=\"https://www.creative-tim.com/presentation?ref=na-footer\"\r\n                >\r\n                  About Us\r\n                </a>\r\n              </li>\r\n              <li>\r\n                <a\r\n                  class=\"text-blueGray-600 hover:text-blueGray-800 font-semibold block pb-2 text-sm\"\r\n                  href=\"https://blog.creative-tim.com?ref=na-footer\"\r\n                >\r\n                  Blog\r\n                </a>\r\n              </li>\r\n              <li>\r\n                <a\r\n                  class=\"text-blueGray-600 hover:text-blueGray-800 font-semibold block pb-2 text-sm\"\r\n                  href=\"https://www.github.com/creativetimofficial?ref=na-footer\"\r\n                >\r\n                  Github\r\n                </a>\r\n              </li>\r\n              <li>\r\n                <a\r\n                  class=\"text-blueGray-600 hover:text-blueGray-800 font-semibold block pb-2 text-sm\"\r\n                  href=\"https://www.creative-tim.com/bootstrap-themes/free?ref=na-footer\"\r\n                >\r\n                  Free Products\r\n                </a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          <div class=\"w-full lg:w-4/12 px-4\">\r\n            <span\r\n              class=\"block uppercase text-blueGray-500 text-sm font-semibold mb-2\"\r\n            >\r\n              Other Resources\r\n            </span>\r\n            <ul class=\"list-unstyled\">\r\n              <li>\r\n                <a\r\n                  class=\"text-blueGray-600 hover:text-blueGray-800 font-semibold block pb-2 text-sm\"\r\n                  href=\"https://github.com/creativetimofficial/notus-angular/blob/main/LICENSE.md?ref=creativetim\"\r\n                >\r\n                  MIT License\r\n                </a>\r\n              </li>\r\n              <li>\r\n                <a\r\n                  class=\"text-blueGray-600 hover:text-blueGray-800 font-semibold block pb-2 text-sm\"\r\n                  href=\"https://creative-tim.com/terms?ref=na-footer\"\r\n                >\r\n                  Terms & Conditions\r\n                </a>\r\n              </li>\r\n              <li>\r\n                <a\r\n                  class=\"text-blueGray-600 hover:text-blueGray-800 font-semibold block pb-2 text-sm\"\r\n                  href=\"https://creative-tim.com/privacy?ref=na-footer\"\r\n                >\r\n                  Privacy Policy\r\n                </a>\r\n              </li>\r\n              <li>\r\n                <a\r\n                  class=\"text-blueGray-600 hover:text-blueGray-800 font-semibold block pb-2 text-sm\"\r\n                  href=\"https://creative-tim.com/contact-us?ref=na-footer\"\r\n                >\r\n                  Contact Us\r\n                </a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <hr class=\"my-6 border-blueGray-300\" />\r\n    <div class=\"flex flex-wrap items-center md:justify-between justify-center\">\r\n      <div class=\"w-full md:w-4/12 px-4 mx-auto text-center\">\r\n        <div class=\"text-sm text-blueGray-500 font-semibold py-1\">\r\n          Copyright © {{ date }} Notus Angular by\r\n          <a\r\n            href=\"https://www.creative-tim.com?ref=na-footer\"\r\n            class=\"text-blueGray-500 hover:text-blueGray-800\"\r\n          >\r\n            Creative Tim\r\n          </a>\r\n          .\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</footer>\r\n"
        },
        {
            "name": "FooterSmallComponent",
            "id": "component-FooterSmallComponent-dd6c57cff01bdf02eb1ac37edf2bb314",
            "file": "src/app/shared/components/footers/footer-small/footer-small.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-footer-small",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./footer-small.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "absolute",
                    "line": 11,
                    "type": "boolean"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_absolute",
                    "defaultValue": "false",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "date",
                    "defaultValue": "new Date().getFullYear()",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'brave-footer-small',\r\n  templateUrl: './footer-small.component.html',\r\n})\r\nexport class FooterSmallComponent implements OnInit {\r\n  date = new Date().getFullYear();\r\n\r\n  @Input()\r\n  get absolute(): boolean {\r\n    return this._absolute;\r\n  }\r\n  set absolute(absolute: boolean) {\r\n    this._absolute = absolute === undefined ? false : absolute;\r\n  }\r\n  private _absolute = false;\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 17
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "absolute": {
                    "name": "absolute",
                    "setSignature": {
                        "name": "absolute",
                        "type": "void",
                        "args": [
                            {
                                "name": "absolute",
                                "type": "boolean"
                            }
                        ],
                        "returnType": "void",
                        "line": 14,
                        "jsdoctags": [
                            {
                                "name": "absolute",
                                "type": "boolean",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                }
            },
            "templateData": "<footer\r\n  class=\"pb-6\"\r\n  [ngClass]=\"absolute ? 'absolute w-full bottom-0 bg-blueGray-800' : 'relative'\"\r\n>\r\n  <div class=\"container mx-auto px-4\">\r\n    <hr class=\"mb-6 border-b-1 border-blueGray-600\" />\r\n    <div class=\"flex flex-wrap items-center md:justify-between justify-center\">\r\n      <div class=\"w-full md:w-4/12 px-4\">\r\n        <div\r\n          class=\"text-sm text-white font-semibold py-1 text-center md:text-left\"\r\n        >\r\n          Copyright © {{ date }}\r\n          <a\r\n            href=\"https://www.creative-tim.com?ref=na-footer-small\"\r\n            class=\"text-white hover:text-blueGray-300 text-sm font-semibold py-1\"\r\n          >\r\n            Creative Tim\r\n          </a>\r\n        </div>\r\n      </div>\r\n      <div class=\"w-full md:w-8/12 px-4\">\r\n        <ul class=\"flex flex-wrap list-none md:justify-end justify-center\">\r\n          <li>\r\n            <a\r\n              href=\"https://www.creative-tim.com?ref=na-footer-small\"\r\n              class=\"text-white hover:text-blueGray-300 text-sm font-semibold block py-1 px-3\"\r\n            >\r\n              Creative Tim\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <a\r\n              href=\"https://www.creative-tim.com/presentation?ref=na-footer-small\"\r\n              class=\"text-white hover:text-blueGray-300 text-sm font-semibold block py-1 px-3\"\r\n            >\r\n              About Us\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <a\r\n              href=\"http://blog.creative-tim.com?ref=na-footer-small\"\r\n              class=\"text-white hover:text-blueGray-300 text-sm font-semibold block py-1 px-3\"\r\n            >\r\n              Blog\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <a\r\n              href=\"https://github.com/creativetimofficial/notus-angular/blob/main/LICENSE.md?ref=creativetim\"\r\n              class=\"text-white hover:text-blueGray-300 text-sm font-semibold block py-1 px-3\"\r\n            >\r\n              MIT License\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</footer>\r\n"
        },
        {
            "name": "GoogleIconsigninButtonComponent",
            "id": "component-GoogleIconsigninButtonComponent-b8ad608b96d394f70c9f8d645a096483",
            "file": "src/app/shared/components/buttons/google-iconsignin-button/google-iconsignin-button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-google-iconsignin-button",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./google-iconsignin-button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 10
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'brave-google-iconsignin-button',\r\n  templateUrl: './google-iconsignin-button.component.html',\r\n})\r\nexport class GoogleIconsigninButtonComponent implements OnInit {\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 7
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<button\r\n  class=\"\r\n    bg-white\r\n    active:bg-blueGray-50\r\n    text-blueGray-700\r\n    h-12\r\n    w-full\r\n    px-4\r\n    py-2\r\n    rounded\r\n    outline-none\r\n    focus:outline-none\r\n    mr-1\r\n    mb-1\r\n    uppercase\r\n    shadow\r\n    hover:shadow-md\r\n    inline-flex\r\n    items-center\r\n    font-bold\r\n    text-xs text-center\r\n    ease-linear\r\n    transition-all\r\n    duration-150\r\n  \"\r\n  type=\"button\"\r\n>\r\n  <img alt=\"...\" class=\"w-5 mr-1\" src=\"assets/img/google.svg\" />\r\n  Google\r\n</button>\r\n"
        },
        {
            "name": "HiddenAsteriskInputComponent",
            "id": "component-HiddenAsteriskInputComponent-bbd75d8a6ca3e67ff90ca80742213466",
            "file": "src/app/shared/components/inputs/hidden-asterisk-input/hidden-asterisk-input.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-hidden-asterisk-input",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./hidden-asterisk-input.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "index",
                    "defaultValue": "0",
                    "line": 25,
                    "type": "number"
                },
                {
                    "name": "size",
                    "defaultValue": "'text-sm'",
                    "line": 24,
                    "type": "string"
                },
                {
                    "name": "value",
                    "defaultValue": "''",
                    "line": 26,
                    "type": "string"
                }
            ],
            "outputsClass": [
                {
                    "name": "onComponentReady",
                    "defaultValue": "new EventEmitter<FormGroup>()",
                    "line": 31,
                    "type": "EventEmitter<FormGroup>"
                },
                {
                    "name": "onMoveNext",
                    "defaultValue": "new EventEmitter()",
                    "line": 29,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "valueChanged",
                    "defaultValue": "new EventEmitter()",
                    "line": 28,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "_masked",
                    "defaultValue": "false",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "componentFormGroup",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 34,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "formSub$",
                    "type": "Subscription | undefined",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "hiddenInput",
                    "type": "ElementRef | undefined",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'hiddenInput'"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "clearMe",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 74,
                    "description": "<p>Removes any value stored in the input element</p>\n"
                },
                {
                    "name": "focusMe",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 66,
                    "description": "<p>Sets the focus to the hiddien input native element</p>\n"
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 59
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>For use within hidden code form.\nOnly works in a form.</p>\n",
            "rawdescription": "For use within hidden code form.\r\nOnly works in a form.",
            "type": "component",
            "sourceCode": "import {\r\n  Component,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Input,\r\n  OnInit,\r\n  Output,\r\n  ViewChild,\r\n} from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\n\r\n/**\r\n * For use within hidden code form.\r\n * Only works in a form.\r\n */\r\n@Component({\r\n  selector: 'brave-hidden-asterisk-input',\r\n  templateUrl: './hidden-asterisk-input.component.html',\r\n})\r\nexport class HiddenAsteriskInputComponent implements OnInit {\r\n  @ViewChild('hiddenInput') hiddenInput: ElementRef | undefined;\r\n\r\n  @Input() size: string = 'text-sm';\r\n  @Input() index: number = 0;\r\n  @Input() value: string = '';\r\n\r\n  @Output() valueChanged: EventEmitter<any> = new EventEmitter();\r\n  @Output() onMoveNext: EventEmitter<any> = new EventEmitter();\r\n  @Output()\r\n  onComponentReady: EventEmitter<FormGroup> = new EventEmitter<FormGroup>();\r\n\r\n  private _masked: boolean = false;\r\n  public componentFormGroup!: FormGroup;\r\n  public formSub$: Subscription | undefined;\r\n\r\n  get masked() {\r\n    return this._masked;\r\n  }\r\n  set masked(value: boolean) {\r\n    this._masked = value;\r\n  }\r\n\r\n  constructor(private fb: FormBuilder) {}\r\n\r\n  ngOnInit(): void {\r\n    this.componentFormGroup = this.fb.group({\r\n      input: [this.value, Validators.required],\r\n    });\r\n    this.formSub$ = this.componentFormGroup.controls.input.valueChanges.subscribe(\r\n      (value) => {\r\n        this.valueChanged.emit(value);\r\n        if (value?.length) this.onMoveNext.emit();\r\n      }\r\n    );\r\n    this.onComponentReady.emit(this.componentFormGroup);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.formSub$) this.formSub$.unsubscribe();\r\n  }\r\n\r\n  /**\r\n   * Sets the focus to the hiddien input native element\r\n   */\r\n  focusMe() {\r\n    const el: HTMLInputElement = this.hiddenInput?.nativeElement;\r\n    if (el) el.focus();\r\n  }\r\n\r\n  /**\r\n   * Removes any value stored in the input element\r\n   */\r\n  clearMe() {\r\n    const el: HTMLInputElement = this.hiddenInput?.nativeElement;\r\n    if (el) {\r\n      el.value = '';\r\n      el.click();\r\n    }\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "fb",
                        "type": "FormBuilder"
                    }
                ],
                "line": 42,
                "jsdoctags": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "masked": {
                    "name": "masked",
                    "setSignature": {
                        "name": "masked",
                        "type": "void",
                        "args": [
                            {
                                "name": "value",
                                "type": "boolean"
                            }
                        ],
                        "returnType": "void",
                        "line": 40,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "boolean",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "masked",
                        "type": "",
                        "returnType": "",
                        "line": 37
                    }
                }
            },
            "templateData": "<form [formGroup]=\"componentFormGroup\">\r\n  <span class=\"flex flex-shrink p-1\">\r\n    <input\r\n      #hiddenInput\r\n      [ngClass]=\"size\"\r\n      class=\"w-6 h-8 p-0 border-0 border-b-2 text-center text-sm text-blueGray-600 whitespace-nowrap bg-coolGray-100\"\r\n      braveHiddenAsteriskInput\r\n      formControlName=\"input\"\r\n      type=\"text\"\r\n      maxLength=\"1\"\r\n      autocorrect=\"off\"\r\n      autocapitalize=\"off\"\r\n      autocomplete=\"off\"\r\n      spellcheck=\"false\"\r\n    />\r\n  </span>\r\n</form>\r\n"
        },
        {
            "name": "IndexDropdownComponent",
            "id": "component-IndexDropdownComponent-6e17c5bd7559bfad7ae094d1a332ea8d",
            "file": "src/app/shared/components/dropdowns/popdowns/index-dropdown/index-dropdown.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-index-dropdown",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./index-dropdown.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "btnDropdownRef",
                    "type": "ElementRef | undefined",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'btnDropdownRef', {static: false}"
                        }
                    ]
                },
                {
                    "name": "dropdownPopoverShow",
                    "defaultValue": "false",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "popoverDropdownRef",
                    "type": "ElementRef | undefined",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'popoverDropdownRef', {static: false}"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "createPoppper",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15
                },
                {
                    "name": "toggleDropdown",
                    "args": [
                        {
                            "name": "event",
                            "type": "literal type"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "literal type",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\r\nimport { createPopper } from '@popperjs/core';\r\n\r\n@Component({\r\n  selector: 'brave-index-dropdown',\r\n  templateUrl: './index-dropdown.component.html',\r\n})\r\nexport class IndexDropdownComponent implements OnInit {\r\n  dropdownPopoverShow = false;\r\n  @ViewChild('btnDropdownRef', { static: false }) btnDropdownRef:\r\n    | ElementRef\r\n    | undefined;\r\n  @ViewChild('popoverDropdownRef', { static: false })\r\n  popoverDropdownRef: ElementRef | undefined;\r\n  ngOnInit() {}\r\n\r\n  toggleDropdown(event: { preventDefault: () => void }) {\r\n    event.preventDefault();\r\n    if (this.dropdownPopoverShow) {\r\n      this.dropdownPopoverShow = false;\r\n    } else {\r\n      this.dropdownPopoverShow = true;\r\n      this.createPoppper();\r\n    }\r\n  }\r\n  createPoppper() {\r\n    createPopper(\r\n      this.btnDropdownRef?.nativeElement,\r\n      this.popoverDropdownRef?.nativeElement,\r\n      {\r\n        placement: 'bottom-start',\r\n      }\r\n    );\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<a\r\n  class=\"hover:text-blueGray-500 text-blueGray-700 px-3 py-2 flex items-center text-xs uppercase font-bold\"\r\n  href=\"#pablo\"\r\n  (click)=\"toggleDropdown($event)\"\r\n  #btnDropdownRef\r\n>\r\n  Demo Pages\r\n</a>\r\n<div\r\n  class=\"bg-white text-base z-50 float-left py-2 list-none text-left rounded shadow-lg min-w-48\"\r\n  [ngClass]=\"dropdownPopoverShow ? 'block' : 'hidden'\"\r\n  #popoverDropdownRef\r\n>\r\n  <span\r\n    class=\"text-sm pt-2 pb-0 px-4 font-bold block w-full whitespace-nowrap bg-transparent text-blueGray-400\"\r\n  >\r\n    Admin Layout\r\n  </span>\r\n  <a\r\n    [routerLink]=\"['/admin/dashboard']\"\r\n    class=\"text-sm py-2 px-4 font-normal block w-full whitespace-nowrap bg-transparent text-blueGray-700\"\r\n  >\r\n    Dashboard\r\n  </a>\r\n  <a\r\n    [routerLink]=\"['/admin/settings']\"\r\n    class=\"text-sm py-2 px-4 font-normal block w-full whitespace-nowrap bg-transparent text-blueGray-700\"\r\n  >\r\n    Settings\r\n  </a>\r\n  <a\r\n    [routerLink]=\"['/admin/tables']\"\r\n    class=\"text-sm py-2 px-4 font-normal block w-full whitespace-nowrap bg-transparent text-blueGray-700\"\r\n  >\r\n    Tables\r\n  </a>\r\n  <a\r\n    [routerLink]=\"['/admin/maps']\"\r\n    class=\"text-sm py-2 px-4 font-normal block w-full whitespace-nowrap bg-transparent text-blueGray-700\"\r\n  >\r\n    Maps\r\n  </a>\r\n  <div class=\"h-0 mx-4 my-2 border border-solid border-blueGray-100\"></div>\r\n  <span\r\n    class=\"text-sm pt-2 pb-0 px-4 font-bold block w-full whitespace-nowrap bg-transparent text-blueGray-400\"\r\n  >\r\n    Auth Layout\r\n  </span>\r\n  <a\r\n    [routerLink]=\"['/auth/login']\"\r\n    class=\"text-sm py-2 px-4 font-normal block w-full whitespace-nowrap bg-transparent text-blueGray-700\"\r\n  >\r\n    Login\r\n  </a>\r\n  <a\r\n    [routerLink]=\"['/auth/register']\"\r\n    class=\"text-sm py-2 px-4 font-normal block w-full whitespace-nowrap bg-transparent text-blueGray-700\"\r\n  >\r\n    Register\r\n  </a>\r\n  <div class=\"h-0 mx-4 my-2 border border-solid border-blueGray-100\"></div>\r\n  <span\r\n    class=\"text-sm pt-2 pb-0 px-4 font-bold block w-full whitespace-nowrap bg-transparent text-blueGray-400\"\r\n  >\r\n    No Layout\r\n  </span>\r\n  <a\r\n    [routerLink]=\"['/landing']\"\r\n    class=\"text-sm py-2 px-4 font-normal block w-full whitespace-nowrap bg-transparent text-blueGray-700\"\r\n  >\r\n    Landing\r\n  </a>\r\n  <a\r\n    [routerLink]=\"['/profile']\"\r\n    class=\"text-sm py-2 px-4 font-normal block w-full whitespace-nowrap bg-transparent text-blueGray-700\"\r\n  >\r\n    Profile\r\n  </a>\r\n</div>\r\n"
        },
        {
            "name": "IndexNavbarComponent",
            "id": "component-IndexNavbarComponent-f76d3d48d9306708aaa16ec0ffef8a66",
            "file": "src/app/shared/components/navbars/index-navbar/index-navbar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-index-navbar",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./index-navbar.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "navbarOpen",
                    "defaultValue": "false",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12
                },
                {
                    "name": "setNavbarOpen",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'brave-index-navbar',\r\n  templateUrl: './index-navbar.component.html',\r\n})\r\nexport class IndexNavbarComponent implements OnInit {\r\n  navbarOpen = false;\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  setNavbarOpen() {\r\n    this.navbarOpen = !this.navbarOpen;\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<nav\r\n  class=\"top-0 fixed z-50 w-full flex flex-wrap items-center justify-between px-2 py-3 navbar-expand-lg bg-white shadow\"\r\n>\r\n  <div\r\n    class=\"container px-4 mx-auto flex flex-wrap items-center justify-between\"\r\n  >\r\n    <div\r\n      class=\"w-full relative flex justify-between lg:w-auto lg:static lg:block lg:justify-start\"\r\n    >\r\n      <a\r\n        [routerLink]=\"['/']\"\r\n        class=\"text-blueGray-700 text-sm font-bold leading-relaxed inline-block mr-4 py-2 whitespace-nowrap uppercase\"\r\n        href=\"#pablo\"\r\n      >\r\n        Notus Angular\r\n      </a>\r\n      <button\r\n        class=\"cursor-pointer text-xl leading-none px-3 py-1 border border-solid border-transparent rounded bg-transparent block lg:hidden outline-none focus:outline-none\"\r\n        type=\"button\"\r\n        (click)=\"setNavbarOpen()\"\r\n      >\r\n        <i class=\"fas fa-bars\"></i>\r\n      </button>\r\n    </div>\r\n    <div\r\n      class=\"lg:flex flex-grow items-center\"\r\n      [ngClass]=\"{ hidden: !navbarOpen, block: navbarOpen }\"\r\n      id=\"example-navbar-warning\"\r\n    >\r\n      <ul class=\"flex flex-col lg:flex-row list-none mr-auto\">\r\n        <li class=\"flex items-center\">\r\n          <a\r\n            class=\"hover:text-blueGray-500 text-blueGray-700 px-3 py-2 flex items-center text-xs uppercase font-bold\"\r\n            href=\"https://www.creative-tim.com/learning-lab/tailwind/angular/overview/notus?ref=na-index-navbar\"\r\n          >\r\n            <i\r\n              class=\"text-blueGray-400 far fa-file-alt text-lg leading-lg mr-2\"\r\n            ></i>\r\n            Docs\r\n          </a>\r\n        </li>\r\n      </ul>\r\n      <ul class=\"flex flex-col lg:flex-row list-none lg:ml-auto\">\r\n        <li class=\"flex items-center\">\r\n          <brave-index-dropdown class=\"block\"></brave-index-dropdown>\r\n        </li>\r\n        <li class=\"flex items-center\">\r\n          <a\r\n            class=\"hover:text-blueGray-500 text-blueGray-700 px-3 py-2 flex items-center text-xs uppercase font-bold\"\r\n            href=\"https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fdemos.creative-tim.com%2Fnotus-angular%2F\"\r\n            target=\"_blank\"\r\n          >\r\n            <i class=\"text-blueGray-400 fab fa-facebook text-lg leading-lg\"></i>\r\n            <span class=\"lg:hidden inline-block ml-2\">Share</span>\r\n          </a>\r\n        </li>\r\n\r\n        <li class=\"flex items-center\">\r\n          <a\r\n            class=\"hover:text-blueGray-500 text-blueGray-700 px-3 py-2 flex items-center text-xs uppercase font-bold\"\r\n            href=\"https://twitter.com/intent/tweet?url=https%3A%2F%2Fdemos.creative-tim.com%2Fnotus-angular%2F&text=Start%20your%20development%20with%20a%20Free%20Tailwind%20CSS%20and%20Angular%20UI%20Kit%20and%20Admin.%20Let%20Notus%20Angular%20amaze%20you%20with%20its%20cool%20features%20and%20build%20tools%20and%20get%20your%20project%20to%20a%20whole%20new%20level.\"\r\n            target=\"_blank\"\r\n          >\r\n            <i class=\"text-blueGray-400 fab fa-twitter text-lg leading-lg\"></i>\r\n            <span class=\"lg:hidden inline-block ml-2\">Tweet</span>\r\n          </a>\r\n        </li>\r\n\r\n        <li class=\"flex items-center\">\r\n          <a\r\n            class=\"hover:text-blueGray-500 text-blueGray-700 px-3 py-2 flex items-center text-xs uppercase font-bold\"\r\n            href=\"https://github.com/creativetimofficial/notus-angular?ref=na-index-navbar\"\r\n            target=\"_blank\"\r\n          >\r\n            <i class=\"text-blueGray-400 fab fa-github text-lg leading-lg\"></i>\r\n            <span class=\"lg:hidden inline-block ml-2\">Star</span>\r\n          </a>\r\n        </li>\r\n\r\n        <li class=\"flex items-center\">\r\n          <button\r\n            class=\"bg-red-600 text-white active:bg-red-700 text-xs font-bold uppercase px-4 py-2 rounded shadow hover:shadow-lg outline-none focus:outline-none lg:mr-1 lg:mb-0 ml-3 mb-3 ease-linear transition-all duration-150\"\r\n            type=\"button\"\r\n          >\r\n            <i class=\"fas fa-arrow-alt-circle-down\"></i> Download\r\n          </button>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</nav>\r\n"
        },
        {
            "name": "KbaMultiplechoiceInputComponent",
            "id": "component-KbaMultiplechoiceInputComponent-394af9f6f9684d4f48c55063f54d08fa",
            "file": "src/app/shared/components/inputs/kba-multiplechoice-input/kba-multiplechoice-input.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-kba-multiplechoice-input",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./kba-multiplechoice-input.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "asteriskOverride",
                    "line": 55
                },
                {
                    "name": "config",
                    "defaultValue": "{\n    size: 'base',\n    label: 'Input label',\n    type: 'text',\n    placeholder: 'Input text',\n    autocomplete: 'off',\n    value: '',\n  }",
                    "line": 31,
                    "type": "IKbaMultipleChoiceConfig"
                },
                {
                    "name": "question",
                    "description": "<p>{@input (ITransunionKBAQuestion) Individual question</p>\n",
                    "line": 66
                },
                {
                    "name": "required",
                    "line": 44
                }
            ],
            "outputsClass": [
                {
                    "name": "onComponentReady",
                    "defaultValue": "new EventEmitter<FormGroup>()",
                    "line": 75,
                    "type": "EventEmitter<FormGroup>"
                },
                {
                    "name": "valueChanged",
                    "defaultValue": "new EventEmitter()",
                    "line": 73,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "_asteriskOverride",
                    "defaultValue": "false",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "_question",
                    "type": "ITransunionKBAQuestion | undefined",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "_required",
                    "defaultValue": "false",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "componentFormGroup",
                    "defaultValue": "new FormBuilder().group({\n    input: [''],\n  })",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 77,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "hidden",
                    "defaultValue": "false",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 81,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "locked",
                    "defaultValue": "false",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 80,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 85
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ITransunionKBAQuestion } from '@shared/interfaces/tu-kba-questions.interface';\n\nexport interface IKbaMultipleChoiceConfig {\n  size: string;\n  label: string;\n  type: string;\n  placeholder: string;\n  autocomplete: string;\n  value?: string;\n}\n\n@Component({\n  selector: 'brave-kba-multiplechoice-input',\n  templateUrl: './kba-multiplechoice-input.component.html',\n})\nexport class KbaMultiplechoiceInputComponent implements OnInit {\n  private _required: boolean = false;\n  private _asteriskOverride: boolean = false;\n  private _question: ITransunionKBAQuestion | undefined;\n\n  /**\n   * @param Config Object to pass in component params\n   * @param config.size 'sm', 'base', 'lg'\n   * @param config.label Label text (default: 'Input label')\n   * @param config.placeholder Placeholder text (default: 'Input text')\n   * @param config.autocomplete Any HTML Input autocomplete value\n   * @param config.value (optional) Pre-load the input with a value\n   */\n  @Input() config: IKbaMultipleChoiceConfig = {\n    size: 'base',\n    label: 'Input label',\n    type: 'text',\n    placeholder: 'Input text',\n    autocomplete: 'off',\n    value: '',\n  };\n\n  /**\n   * @input Flag to make the input field required for form to be valid\n   */\n  @Input()\n  get required() {\n    return this._required;\n  }\n  set required(value: any) {\n    this._required = !!value;\n  }\n\n  /**\n   * @input Flag to override the display of an asterisk but still make it required\n   */\n  @Input()\n  get asteriskOverride() {\n    return this._asteriskOverride;\n  }\n  set asteriskOverride(value: any) {\n    this._asteriskOverride = !!value;\n  }\n\n  /**\n   * {@input (ITransunionKBAQuestion) Individual question\n   */\n  @Input()\n  get question() {\n    return this._question;\n  }\n  set question(value: ITransunionKBAQuestion | undefined) {\n    this._question = value;\n  }\n\n  @Output() valueChanged: EventEmitter<any> = new EventEmitter();\n  @Output()\n  onComponentReady: EventEmitter<FormGroup> = new EventEmitter<FormGroup>();\n\n  public componentFormGroup: FormGroup = new FormBuilder().group({\n    input: [''],\n  });\n  public locked: boolean = false;\n  public hidden: boolean = false;\n\n  constructor(private fb: FormBuilder) {}\n\n  ngOnInit(): void {\n    const validators = [];\n    if (this.required) {\n      validators.push(Validators.required);\n    }\n    this.componentFormGroup = this.fb.group({\n      input: [this.config.value, validators],\n    });\n    this.componentFormGroup.controls.input.valueChanges.subscribe((value) =>\n      this.valueChanged.emit(value)\n    );\n    this.onComponentReady.emit(this.componentFormGroup);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "fb",
                        "type": "FormBuilder"
                    }
                ],
                "line": 81,
                "jsdoctags": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "required": {
                    "name": "required",
                    "setSignature": {
                        "name": "required",
                        "type": "void",
                        "args": [
                            {
                                "name": "value",
                                "type": "any"
                            }
                        ],
                        "returnType": "void",
                        "line": 47,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "any",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "asteriskOverride": {
                    "name": "asteriskOverride",
                    "setSignature": {
                        "name": "asteriskOverride",
                        "type": "void",
                        "args": [
                            {
                                "name": "value",
                                "type": "any"
                            }
                        ],
                        "returnType": "void",
                        "line": 58,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "any",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "question": {
                    "name": "question",
                    "setSignature": {
                        "name": "question",
                        "type": "void",
                        "args": [
                            {
                                "name": "value",
                                "type": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 69,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                }
            },
            "templateData": "<form [formGroup]=\"componentFormGroup\">\n  <div class=\"mt-4\">\n    <div class=\"pl-1 mt-2\">\n      <p class=\"font-sans mb-4 font-semibold text-base text-coolGray-700\">\n        {{ question?.FullQuestionText?._text }}\n      </p>\n      <fieldset>\n        <div *ngFor=\"let choice of question?.AnswerChoice; index as i\">\n          <label class=\"inline-flex items-center\">\n            <input\n              name=\"input\"\n              type=\"radio\"\n              formControlName=\"input\"\n              class=\"form-radio text-indigo-800 shadow-sm focus:border-indigo-300 focus:ring focus:ring-offset-0 focus:ring-indigo-200 focus:ring-opacity-50\"\n              [value]=\"choice.SequenceNumber._text\"\n            />\n            <span class=\"font-sans text-sm text-coolGray-700 ml-4\">{{\n              choice.AnswerChoiceText._text\n            }}</span>\n          </label>\n        </div>\n      </fieldset>\n    </div>\n  </div>\n</form>\n"
        },
        {
            "name": "KbaquestionsFormComponent",
            "id": "component-KbaquestionsFormComponent-d9eabfe0d17bb63d8232434e6e7174f0",
            "file": "src/app/shared/components/forms/kbaquestions-form/kbaquestions-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{ provide: , useValue:  }"
                }
            ],
            "selector": "brave-kbaquestions-form",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./kbaquestions-form.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "kbas",
                    "defaultValue": "[]",
                    "line": 25,
                    "type": "ITransunionKBAQuestion[]"
                },
                {
                    "name": "hideHint",
                    "defaultValue": "false",
                    "line": 16,
                    "type": "boolean",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "onChanges",
                    "defaultValue": "new EventEmitter()",
                    "line": 9,
                    "type": "EventEmitter<any>",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "onSubmit",
                    "defaultValue": "new EventEmitter()",
                    "line": 10,
                    "type": "EventEmitter<FormGroup>",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "onSubmitError",
                    "defaultValue": "new EventEmitter()",
                    "line": 12,
                    "type": "EventEmitter<literal type>",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "carouselXAxis",
                    "defaultValue": "0",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "itemWidth",
                    "defaultValue": "300",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "kbaConfig",
                    "defaultValue": "{\n    size: 'sm',\n    type: 'text',\n    label: '',\n    placeholder: '',\n    autocomplete: 'off',\n  }",
                    "type": "IKbaMultipleChoiceConfig",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "slider",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'slider'"
                        }
                    ]
                },
                {
                    "name": "sliderWidth",
                    "defaultValue": "1200",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "sliderWindow",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'sliderWindow'"
                        }
                    ]
                },
                {
                    "name": "tracker",
                    "defaultValue": "[0]",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "parentForm",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "formatChildName",
                    "args": [
                        {
                            "name": "childName",
                            "type": "string"
                        },
                        {
                            "name": "digit",
                            "type": "number"
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 54,
                    "jsdoctags": [
                        {
                            "name": "childName",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "digit",
                            "type": "number",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 44
                },
                {
                    "name": "scroll",
                    "args": [
                        {
                            "name": "value",
                            "type": "number"
                        },
                        {
                            "name": "min",
                            "type": "number"
                        },
                        {
                            "name": "max",
                            "type": "number"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 86,
                    "description": "<p>Method to scroll the carousel by a percentage value</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 2316,
                                "end": 2321,
                                "flags": 0,
                                "escapedText": "value"
                            },
                            "type": "number",
                            "tagName": {
                                "pos": 2310,
                                "end": 2315,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": "<p>percentage to move the carousel over by</p>\n"
                        },
                        {
                            "name": {
                                "pos": 2374,
                                "end": 2377,
                                "flags": 0,
                                "escapedText": "min"
                            },
                            "type": "number",
                            "tagName": {
                                "pos": 2368,
                                "end": 2373,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": "<p>the floor that the scroll should go to (i.e. 0)</p>\n"
                        },
                        {
                            "name": {
                                "pos": 2438,
                                "end": 2441,
                                "flags": 0,
                                "escapedText": "max"
                            },
                            "type": "number",
                            "tagName": {
                                "pos": 2432,
                                "end": 2437,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": "<p>the max translation the scrill should go to (e.g. -75...if 4 items)</p>\n"
                        }
                    ]
                },
                {
                    "name": "setSliderWidth",
                    "args": [
                        {
                            "name": "width",
                            "type": "number"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 75,
                    "description": "<p>Sets the slider width to hold all the items</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 2040,
                                "end": 2045,
                                "flags": 0,
                                "escapedText": "width"
                            },
                            "type": "number",
                            "tagName": {
                                "pos": 2034,
                                "end": 2039,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": ""
                        }
                    ]
                },
                {
                    "name": "setSliderWindowWidth",
                    "args": [
                        {
                            "name": "width",
                            "type": "number"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 62,
                    "description": "<p>Sets the slider window width so only a portion is showing</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1740,
                                "end": 1745,
                                "flags": 0,
                                "escapedText": "width"
                            },
                            "type": "number",
                            "tagName": {
                                "pos": 1734,
                                "end": 1739,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": ""
                        }
                    ]
                },
                {
                    "name": "addChild",
                    "args": [
                        {
                            "name": "childName",
                            "type": "string"
                        },
                        {
                            "name": "childGroup",
                            "type": "FormGroup"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "jsdoctags": [
                        {
                            "name": "childName",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "childGroup",
                            "type": "FormGroup",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "submitForm",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  Input,\n  Renderer2,\n  ViewChild,\n} from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { BaseFormComponent } from '@shared/components/forms/base-form/base-form.component';\nimport { IKbaMultipleChoiceConfig } from '@shared/components/inputs/kba-multiplechoice-input/kba-multiplechoice-input.component';\nimport { ITransunionKBAQuestion } from '@shared/interfaces/tu-kba-questions.interface';\n\n@Component({\n  selector: 'brave-kbaquestions-form',\n  templateUrl: './kbaquestions-form.component.html',\n  providers: [{ provide: 'name', useValue: 'kba-form' }],\n})\nexport class KbaquestionsFormComponent\n  extends BaseFormComponent\n  implements AfterViewInit {\n  @ViewChild('slider') slider!: ElementRef;\n  @ViewChild('sliderWindow') sliderWindow!: ElementRef;\n\n  @Input() kbas: ITransunionKBAQuestion[] = [];\n\n  sliderWidth: number = 1200;\n  itemWidth: number = 300;\n  carouselXAxis: number = 0;\n  tracker: any[] = [0];\n\n  public kbaConfig: IKbaMultipleChoiceConfig = {\n    size: 'sm',\n    type: 'text',\n    label: '',\n    placeholder: '',\n    autocomplete: 'off',\n  };\n\n  constructor(fb: FormBuilder, private renderer: Renderer2) {\n    super(fb, 'kba-form');\n  }\n\n  ngAfterViewInit(): void {\n    console.log('init parent form', this.parentForm);\n    this.setSliderWindowWidth(this.itemWidth);\n    this.setSliderWidth(this.sliderWidth);\n    this.parentForm.valueChanges.subscribe((value) => {\n      console.log('form', this.parentForm);\n      console.log('value', value);\n    });\n  }\n\n  formatChildName(childName: string, digit: number): string {\n    return `${childName}-${digit}`;\n  }\n\n  /**\n   * Sets the slider window width so only a portion is showing\n   * @param width\n   */\n  setSliderWindowWidth(width: number): void {\n    // TODO need to set floor to width of containing elements\n    this.renderer.setStyle(\n      this.sliderWindow.nativeElement,\n      'width',\n      `${width}px`\n    );\n  }\n\n  /**\n   * Sets the slider width to hold all the items\n   * @param width\n   */\n  setSliderWidth(width: number): void {\n    // TODO need to set floor to width of containing elements x 3\n    this.renderer.setStyle(this.slider.nativeElement, 'width', `${width}px`);\n  }\n\n  /**\n   * Method to scroll the carousel by a percentage value\n   * @param value percentage to move the carousel over by\n   * @param min the floor that the scroll should go to (i.e. 0)\n   * @param max the max translation the scrill should go to (e.g. -75...if 4 items)\n   */\n  scroll(value: number, min: number, max: number): void {\n    console.log('scorll called', value, this.carouselXAxis);\n    if (this.carouselXAxis + value > min || this.carouselXAxis + value < max) {\n      return;\n    }\n    // pop and push tracker to know which question we are on\n    if (value < 0) {\n      this.tracker = [...this.tracker, 0];\n    }\n    if (value > 0) {\n      this.tracker = [...this.tracker.slice(1)];\n    }\n\n    this.carouselXAxis += value;\n    this.renderer.setStyle(\n      this.slider.nativeElement,\n      'transform',\n      `translateX(${this.carouselXAxis}%)`\n    );\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "fb",
                        "type": "FormBuilder"
                    },
                    {
                        "name": "renderer",
                        "type": "Renderer2"
                    }
                ],
                "line": 38,
                "jsdoctags": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "BaseFormComponent",
            "implements": [
                "AfterViewInit"
            ],
            "templateData": "<!-- Display Container (not part of component) START -->\n<div class=\"window-wrapper flex justify-center items-center w-full\">\n  <!-- Carousel Body -->\n  <div #sliderWindow class=\"window justify-center overflow-hidden\">\n    <div #slider class=\"slider transition-all\">\n      <!-- put the questions here -->\n      <form [formGroup]=\"parentForm\">\n        <div class=\"items flex overflow-x-hidden\">\n          <div *ngFor=\"let question of kbas; index as i\">\n            <div class=\"item\" [ngStyle]=\"{ 'width.px': itemWidth }\">\n              <brave-kba-multiplechoice-input\n                (onComponentReady)=\"\n                  addChild(formatChildName('question', i), $event)\n                \"\n                [required]=\"true\"\n                [question]=\"question\"\n              ></brave-kba-multiplechoice-input>\n            </div>\n          </div>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n<div class=\"flex justify-center\">\n  <!-- put the # / 4 here -->\n  <p class=\"text-center\">{{ tracker.length }} / {{ kbas?.length }}</p>\n</div>\n"
        },
        {
            "name": "KycAddressComponent",
            "id": "component-KycAddressComponent-00b1e87c9046f30a391e77aedbe2191e",
            "file": "src/app/views/kyc-address/kyc-address/kyc-address.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-kyc-address",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./kyc-address.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "backClick",
                    "defaultValue": "new EventEmitter()",
                    "line": 14,
                    "type": "EventEmitter<void>",
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                },
                {
                    "name": "formError",
                    "defaultValue": "new EventEmitter()",
                    "line": 17,
                    "type": "EventEmitter<literal type>",
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                },
                {
                    "name": "formSubmit",
                    "defaultValue": "new EventEmitter()",
                    "line": 15,
                    "type": "EventEmitter<FormGroup>",
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                },
                {
                    "name": "nextClick",
                    "defaultValue": "new EventEmitter()",
                    "line": 13,
                    "type": "EventEmitter<void>",
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "stepID",
                    "defaultValue": "1",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "goBack",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26
                },
                {
                    "name": "goToNext",
                    "args": [
                        {
                            "name": "form",
                            "type": "FormGroup"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "jsdoctags": [
                        {
                            "name": "form",
                            "type": "FormGroup",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleError",
                    "args": [
                        {
                            "name": "errors",
                            "type": "literal type"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45,
                    "jsdoctags": [
                        {
                            "name": "errors",
                            "type": "literal type",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22
                },
                {
                    "name": "flattenAttributes",
                    "args": [
                        {
                            "name": "formValues",
                            "type": "any"
                        },
                        {
                            "name": "mapObj",
                            "type": "Record<string | any>"
                        },
                        {
                            "name": "inputType",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "FlatForm",
                    "typeParameters": [],
                    "line": 31,
                    "jsdoctags": [
                        {
                            "name": "formValues",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "mapObj",
                            "type": "Record<string | any>",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "inputType",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                },
                {
                    "name": "formatAttributes",
                    "args": [
                        {
                            "name": "form",
                            "type": "FormGroup"
                        },
                        {
                            "name": "mapObj",
                            "type": "Record<string | any>"
                        },
                        {
                            "name": "inputType",
                            "type": "string",
                            "defaultValue": "'input'"
                        }
                    ],
                    "optional": false,
                    "returnType": "FlatForm",
                    "typeParameters": [],
                    "line": 23,
                    "jsdoctags": [
                        {
                            "name": "form",
                            "type": "FormGroup",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "mapObj",
                            "type": "Record<string | any>",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "inputType",
                            "type": "string",
                            "defaultValue": "'input'",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { KycService } from '@shared/services/kyc/kyc.service';\nimport { AbstractControl, FormGroup } from '@angular/forms';\nimport { KycBaseComponent } from '@views/kyc-base/kyc-base.component';\nimport { UserAttributesInput } from '@shared/services/aws/api.service';\n\n@Component({\n  selector: 'brave-kyc-address',\n  templateUrl: './kyc-address.component.html',\n})\nexport class KycAddressComponent extends KycBaseComponent implements OnInit {\n  stepID = 1;\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n    private kycService: KycService\n  ) {\n    super();\n  }\n\n  ngOnInit(): void {\n    this.kycService.activateStep(this.stepID);\n  }\n\n  goBack(): void {\n    this.kycService.inactivateStep(this.stepID);\n    this.router.navigate(['../name'], { relativeTo: this.route });\n  }\n\n  goToNext(form: FormGroup): void {\n    // need to add form validation before moving forward\n    if (form.valid) {\n      const attrs = {\n        address: {\n          ...this.formatAttributes(form, address),\n        },\n      } as UserAttributesInput;\n      this.kycService.updateUserAttributes(attrs);\n      this.kycService.completeStep(this.stepID);\n      this.router.navigate(['../identity'], { relativeTo: this.route });\n    }\n  }\n\n  handleError(errors: { [key: string]: AbstractControl }): void {\n    console.log('form errors', errors);\n  }\n}\n\nconst address: Record<string, any> = {\n  addressOne: true,\n  addressTwo: true,\n  city: true,\n  state: true,\n  zip: true,\n};\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router"
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute"
                    },
                    {
                        "name": "kycService",
                        "type": "KycService"
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "kycService",
                        "type": "KycService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "KycBaseComponent",
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"container mx-auto max-w-xs h-full\">\r\n  <brave-kyc-address-pure\r\n    (formSubmit)=\"goToNext($event)\"\r\n    (formError)=\"handleError($event)\"\r\n    (backClick)=\"goBack()\"\r\n  ></brave-kyc-address-pure>\r\n</div>\r\n"
        },
        {
            "name": "KycAddressPureComponent",
            "id": "component-KycAddressPureComponent-54f4161067d26b5c2c66bbbdaef716e1",
            "file": "src/app/views/kyc-address/kyc-address-pure/kyc-address-pure.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-kyc-address-pure",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./kyc-address-pure.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "backClick",
                    "defaultValue": "new EventEmitter()",
                    "line": 14,
                    "type": "EventEmitter<void>",
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                },
                {
                    "name": "formError",
                    "defaultValue": "new EventEmitter()",
                    "line": 17,
                    "type": "EventEmitter<literal type>",
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                },
                {
                    "name": "formSubmit",
                    "defaultValue": "new EventEmitter()",
                    "line": 15,
                    "type": "EventEmitter<FormGroup>",
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                },
                {
                    "name": "nextClick",
                    "defaultValue": "new EventEmitter()",
                    "line": 13,
                    "type": "EventEmitter<void>",
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "flattenAttributes",
                    "args": [
                        {
                            "name": "formValues",
                            "type": "any"
                        },
                        {
                            "name": "mapObj",
                            "type": "Record<string | any>"
                        },
                        {
                            "name": "inputType",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "FlatForm",
                    "typeParameters": [],
                    "line": 31,
                    "jsdoctags": [
                        {
                            "name": "formValues",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "mapObj",
                            "type": "Record<string | any>",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "inputType",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                },
                {
                    "name": "formatAttributes",
                    "args": [
                        {
                            "name": "form",
                            "type": "FormGroup"
                        },
                        {
                            "name": "mapObj",
                            "type": "Record<string | any>"
                        },
                        {
                            "name": "inputType",
                            "type": "string",
                            "defaultValue": "'input'"
                        }
                    ],
                    "optional": false,
                    "returnType": "FlatForm",
                    "typeParameters": [],
                    "line": 23,
                    "jsdoctags": [
                        {
                            "name": "form",
                            "type": "FormGroup",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "mapObj",
                            "type": "Record<string | any>",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "inputType",
                            "type": "string",
                            "defaultValue": "'input'",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { KycBaseComponent } from '@views/kyc-base/kyc-base.component';\r\n\r\n@Component({\r\n  selector: 'brave-kyc-address-pure',\r\n  templateUrl: './kyc-address-pure.component.html',\r\n})\r\nexport class KycAddressPureComponent extends KycBaseComponent {\r\n  constructor() {\r\n    super();\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "extends": "KycBaseComponent",
            "templateData": "<div class=\"flex content-center items-center justify-center h-full\">\r\n  <div class=\"w-full max-w-xs\">\r\n    <div class=\"relative flex flex-col min-w-0 w-full mb-6 border-0\">\r\n      <!-- header -->\r\n      <div class=\"py-3\">\r\n        <h4 class=\"brave-h4 text-indigo-800\">Your Address</h4>\r\n      </div>\r\n\r\n      <!-- subheader -->\r\n      <div class=\"py-3\">\r\n        <div class=\"text-base\">\r\n          <p class=\"mb-6 text-blueGray-600\">\r\n            What is your most recent home address?\r\n          </p>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- form -->\r\n      <div class=\"py-3 pt-0\">\r\n        <brave-outline-address-form\r\n          #form\r\n          (onSubmit)=\"formSubmit.emit($event)\"\r\n          (onSubmitError)=\"formError.emit($event)\"\r\n        ></brave-outline-address-form>\r\n      </div>\r\n\r\n      <div class=\"mt-5\">\r\n        <div class=\"flex justify-between items-center\">\r\n          <brave-links-onlytext-button\r\n            (click)=\"backClick.emit()\"\r\n            [config]=\"{ buttonSize: 'sm', color: 'text-blueGray-600' }\"\r\n          >\r\n            <span class=\"flex items-center\">\r\n              <span class=\"material-icons px-1\">arrow_back</span>&nbsp;Back\r\n            </span>\r\n          </brave-links-onlytext-button>\r\n          <brave-filled-onlytext-button (click)=\"form.submitForm()\"\r\n            ><span class=\"flex items-center\"\r\n              >Continue<span class=\"material-icons px-1\"\r\n                >arrow_forward</span\r\n              ></span\r\n            ></brave-filled-onlytext-button\r\n          >\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "KycBaseComponent",
            "id": "component-KycBaseComponent-945e61ea593e2a57824eecd1af40c116",
            "file": "src/app/views/kyc-base/kyc-base.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-kyc-base",
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "backClick",
                    "defaultValue": "new EventEmitter()",
                    "line": 14,
                    "type": "EventEmitter<void>"
                },
                {
                    "name": "formError",
                    "defaultValue": "new EventEmitter()",
                    "line": 17,
                    "type": "EventEmitter<literal type>"
                },
                {
                    "name": "formSubmit",
                    "defaultValue": "new EventEmitter()",
                    "line": 15,
                    "type": "EventEmitter<FormGroup>"
                },
                {
                    "name": "nextClick",
                    "defaultValue": "new EventEmitter()",
                    "line": 13,
                    "type": "EventEmitter<void>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "flattenAttributes",
                    "args": [
                        {
                            "name": "formValues",
                            "type": "any"
                        },
                        {
                            "name": "mapObj",
                            "type": "Record<string | any>"
                        },
                        {
                            "name": "inputType",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "FlatForm",
                    "typeParameters": [],
                    "line": 31,
                    "jsdoctags": [
                        {
                            "name": "formValues",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "mapObj",
                            "type": "Record<string | any>",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "inputType",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "formatAttributes",
                    "args": [
                        {
                            "name": "form",
                            "type": "FormGroup"
                        },
                        {
                            "name": "mapObj",
                            "type": "Record<string | any>"
                        },
                        {
                            "name": "inputType",
                            "type": "string",
                            "defaultValue": "'input'"
                        }
                    ],
                    "optional": false,
                    "returnType": "FlatForm",
                    "typeParameters": [],
                    "line": 23,
                    "jsdoctags": [
                        {
                            "name": "form",
                            "type": "FormGroup",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "mapObj",
                            "type": "Record<string | any>",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "inputType",
                            "type": "string",
                            "defaultValue": "'input'",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Output } from '@angular/core';\r\nimport { AbstractControl, FormGroup } from '@angular/forms';\r\n\r\nexport interface FlatForm {\r\n  [key: string]: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'brave-kyc-base',\r\n  template: '',\r\n})\r\nexport class KycBaseComponent {\r\n  @Output() nextClick: EventEmitter<void> = new EventEmitter();\r\n  @Output() backClick: EventEmitter<void> = new EventEmitter();\r\n  @Output() formSubmit: EventEmitter<FormGroup> = new EventEmitter();\r\n  @Output()\r\n  formError: EventEmitter<{\r\n    [key: string]: AbstractControl;\r\n  }> = new EventEmitter();\r\n\r\n  constructor() {}\r\n\r\n  formatAttributes(\r\n    form: FormGroup,\r\n    mapObj: Record<string, any>,\r\n    inputType: string = 'input'\r\n  ): FlatForm {\r\n    return this.flattenAttributes(form.value, mapObj, inputType);\r\n  }\r\n\r\n  flattenAttributes(\r\n    formValues: any,\r\n    mapObj: Record<string, any>,\r\n    inputType: string\r\n  ): FlatForm {\r\n    let values: FlatForm = {};\r\n    Object.keys(formValues).forEach((key) => {\r\n      if (mapObj[key]) {\r\n        values[key] = formValues[key][`${inputType}`];\r\n      }\r\n    });\r\n    return values;\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 19
            }
        },
        {
            "name": "KycCongratulationsComponent",
            "id": "component-KycCongratulationsComponent-72071a8cf5abc9aa4b1af2a7eee07026",
            "file": "src/app/views/kyc-congratulations/kyc-congratulations/kyc-congratulations.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-kyc-congratulations",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./kyc-congratulations.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "goToNext",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 11
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'brave-kyc-congratulations',\r\n  templateUrl: './kyc-congratulations.component.html',\r\n})\r\nexport class KycCongratulationsComponent implements OnInit {\r\n  constructor(private router: Router) {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  goToNext(): void {\r\n    this.router.navigate(['/dashboard']);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router"
                    }
                ],
                "line": 8,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"container mx-auto max-w-xs h-full\">\r\n  <brave-kyc-congratulations-pure\r\n    (nextClick)=\"goToNext()\"\r\n  ></brave-kyc-congratulations-pure>\r\n</div>\r\n"
        },
        {
            "name": "KycCongratulationsPureComponent",
            "id": "component-KycCongratulationsPureComponent-494f6da15d7a631b2874f14ffebce339",
            "file": "src/app/views/kyc-congratulations/kyc-congratulations-pure/kyc-congratulations-pure.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-kyc-congratulations-pure",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./kyc-congratulations-pure.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "backClick",
                    "defaultValue": "new EventEmitter()",
                    "line": 14,
                    "type": "EventEmitter<void>",
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                },
                {
                    "name": "formError",
                    "defaultValue": "new EventEmitter()",
                    "line": 17,
                    "type": "EventEmitter<literal type>",
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                },
                {
                    "name": "formSubmit",
                    "defaultValue": "new EventEmitter()",
                    "line": 15,
                    "type": "EventEmitter<FormGroup>",
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                },
                {
                    "name": "nextClick",
                    "defaultValue": "new EventEmitter()",
                    "line": 13,
                    "type": "EventEmitter<void>",
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "flattenAttributes",
                    "args": [
                        {
                            "name": "formValues",
                            "type": "any"
                        },
                        {
                            "name": "mapObj",
                            "type": "Record<string | any>"
                        },
                        {
                            "name": "inputType",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "FlatForm",
                    "typeParameters": [],
                    "line": 31,
                    "jsdoctags": [
                        {
                            "name": "formValues",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "mapObj",
                            "type": "Record<string | any>",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "inputType",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                },
                {
                    "name": "formatAttributes",
                    "args": [
                        {
                            "name": "form",
                            "type": "FormGroup"
                        },
                        {
                            "name": "mapObj",
                            "type": "Record<string | any>"
                        },
                        {
                            "name": "inputType",
                            "type": "string",
                            "defaultValue": "'input'"
                        }
                    ],
                    "optional": false,
                    "returnType": "FlatForm",
                    "typeParameters": [],
                    "line": 23,
                    "jsdoctags": [
                        {
                            "name": "form",
                            "type": "FormGroup",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "mapObj",
                            "type": "Record<string | any>",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "inputType",
                            "type": "string",
                            "defaultValue": "'input'",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { KycBaseComponent } from '@views/kyc-base/kyc-base.component';\r\n\r\n@Component({\r\n  selector: 'brave-kyc-congratulations-pure',\r\n  templateUrl: './kyc-congratulations-pure.component.html',\r\n})\r\nexport class KycCongratulationsPureComponent extends KycBaseComponent {\r\n  constructor() {\r\n    super();\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "extends": "KycBaseComponent",
            "templateData": "<div class=\"flex content-center items-center justify-center h-full\">\r\n  <div class=\"w-full max-w-xs\">\r\n    <div class=\"relative flex flex-col min-w-0 w-full mb-6 border-0\">\r\n      <!-- image -->\r\n      <div class=\"flex justify-center mb-6\">\r\n        <img class=\"w-full\" src=\"assets/img/undraw_welcoming_xvuq.svg\" />\r\n      </div>\r\n\r\n      <!-- header -->\r\n      <div class=\"py-3\">\r\n        <h4 class=\"brave-h4\">Congratulations!</h4>\r\n      </div>\r\n\r\n      <!-- subheader -->\r\n      <div class=\"py-3\">\r\n        <div class=\"text-base\">\r\n          <p class=\"mb-6 text-blueGray-600\">You are verified.</p>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- subheader -->\r\n      <div class=\"py-3\">\r\n        <div class=\"text-base\">\r\n          <p class=\"mb-6 text-blueGray-600\">\r\n            You are being redirected to the BraveCredit dashboard.\r\n          </p>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"py-3 pt-0\">\r\n        <div class=\"-ml-3\">\r\n          <brave-links-onlytext-button\r\n            (click)=\"nextClick.emit()\"\r\n            [config]=\"{ buttonSize: 'sm', color: 'text-blueGray-600' }\"\r\n            ><span class=\"underline\"\r\n              >Not being redirected? Click here</span\r\n            ></brave-links-onlytext-button\r\n          >\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "KycIdverificationComponent",
            "id": "component-KycIdverificationComponent-3784cc1c3a87de1238cc22df223ea2e6",
            "file": "src/app/views/kyc-idverification/kyc-idverification/kyc-idverification.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-kyc-idverification",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./kyc-idverification.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "state",
                    "defaultValue": "'init'",
                    "line": 15,
                    "type": "KycIdverificationState"
                }
            ],
            "outputsClass": [
                {
                    "name": "backClick",
                    "defaultValue": "new EventEmitter()",
                    "line": 14,
                    "type": "EventEmitter<void>",
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                },
                {
                    "name": "formError",
                    "defaultValue": "new EventEmitter()",
                    "line": 17,
                    "type": "EventEmitter<literal type>",
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                },
                {
                    "name": "formSubmit",
                    "defaultValue": "new EventEmitter()",
                    "line": 15,
                    "type": "EventEmitter<FormGroup>",
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                },
                {
                    "name": "nextClick",
                    "defaultValue": "new EventEmitter()",
                    "line": 13,
                    "type": "EventEmitter<void>",
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "stepID",
                    "defaultValue": "3",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "methodsClass": [
                {
                    "name": "goBack",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32
                },
                {
                    "name": "goToNext",
                    "args": [
                        {
                            "name": "form",
                            "type": "FormGroup"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37,
                    "jsdoctags": [
                        {
                            "name": "form",
                            "type": "FormGroup",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleError",
                    "args": [
                        {
                            "name": "errors",
                            "type": "literal type"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45,
                    "jsdoctags": [
                        {
                            "name": "errors",
                            "type": "literal type",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "resendCode",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27
                },
                {
                    "name": "flattenAttributes",
                    "args": [
                        {
                            "name": "formValues",
                            "type": "any"
                        },
                        {
                            "name": "mapObj",
                            "type": "Record<string | any>"
                        },
                        {
                            "name": "inputType",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "FlatForm",
                    "typeParameters": [],
                    "line": 31,
                    "jsdoctags": [
                        {
                            "name": "formValues",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "mapObj",
                            "type": "Record<string | any>",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "inputType",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                },
                {
                    "name": "formatAttributes",
                    "args": [
                        {
                            "name": "form",
                            "type": "FormGroup"
                        },
                        {
                            "name": "mapObj",
                            "type": "Record<string | any>"
                        },
                        {
                            "name": "inputType",
                            "type": "string",
                            "defaultValue": "'input'"
                        }
                    ],
                    "optional": false,
                    "returnType": "FlatForm",
                    "typeParameters": [],
                    "line": 23,
                    "jsdoctags": [
                        {
                            "name": "form",
                            "type": "FormGroup",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "mapObj",
                            "type": "Record<string | any>",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "inputType",
                            "type": "string",
                            "defaultValue": "'input'",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { AfterViewInit, Component, Input, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { KycService } from '@shared/services/kyc/kyc.service';\nimport { KycBaseComponent } from '@views/kyc-base/kyc-base.component';\nimport { FormGroup, AbstractControl } from '@angular/forms';\nimport { SyncService } from '@shared/services/sync/sync.service';\n\nexport type KycIdverificationState = 'init' | 'sent' | 'error';\n\n@Component({\n  selector: 'brave-kyc-idverification',\n  templateUrl: './kyc-idverification.component.html',\n})\nexport class KycIdverificationComponent extends KycBaseComponent {\n  @Input() state: KycIdverificationState = 'init';\n  stepID = 3;\n\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n    private kycService: KycService,\n    private syncService: SyncService\n  ) {\n    super();\n  }\n\n  resendCode(): void {\n    // TODO resubmit code to backend\n    this.state = 'sent';\n  }\n\n  goBack(): void {\n    this.kycService.inactivateStep(this.stepID);\n    this.router.navigate(['../verify'], { relativeTo: this.route });\n  }\n\n  goToNext(form: FormGroup): void {\n    if (form.valid) {\n      const { code } = this.formatAttributes(form, codeMap);\n      // TODO submit code to backed\n      this.kycService.completeStep(this.stepID);\n      // this.router.navigate(['../congratulations'], { relativeTo: this.route });\n    }\n  }\n  handleError(errors: { [key: string]: AbstractControl }): void {\n    console.log('form errors', errors);\n  }\n}\n\nconst codeMap: Record<string, any> = {\n  code: true,\n};\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router"
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute"
                    },
                    {
                        "name": "kycService",
                        "type": "KycService"
                    },
                    {
                        "name": "syncService",
                        "type": "SyncService"
                    }
                ],
                "line": 16,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "kycService",
                        "type": "KycService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "syncService",
                        "type": "SyncService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "KycBaseComponent",
            "templateData": "<div class=\"container mx-auto max-w-xs h-full\">\n  <brave-kyc-idverification-pure\n    [state]=\"state\"\n    (formSubmit)=\"goToNext($event)\"\n    (formError)=\"handleError($event)\"\n    (backClick)=\"goBack()\"\n    (resendClick)=\"resendCode()\"\n  ></brave-kyc-idverification-pure>\n</div>\n"
        },
        {
            "name": "KycIdverificationPureComponent",
            "id": "component-KycIdverificationPureComponent-8d942f5794b9f57d8675a632c3c3f171",
            "file": "src/app/views/kyc-idverification/kyc-idverification-pure/kyc-idverification-pure.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-kyc-idverification-pure",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./kyc-idverification-pure.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "state",
                    "defaultValue": "'init'",
                    "line": 10,
                    "type": "KycIdverificationState"
                }
            ],
            "outputsClass": [
                {
                    "name": "resendClick",
                    "defaultValue": "new EventEmitter()",
                    "line": 11,
                    "type": "EventEmitter<void>"
                },
                {
                    "name": "backClick",
                    "defaultValue": "new EventEmitter()",
                    "line": 14,
                    "type": "EventEmitter<void>",
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                },
                {
                    "name": "formError",
                    "defaultValue": "new EventEmitter()",
                    "line": 17,
                    "type": "EventEmitter<literal type>",
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                },
                {
                    "name": "formSubmit",
                    "defaultValue": "new EventEmitter()",
                    "line": 15,
                    "type": "EventEmitter<FormGroup>",
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                },
                {
                    "name": "nextClick",
                    "defaultValue": "new EventEmitter()",
                    "line": 13,
                    "type": "EventEmitter<void>",
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "flattenAttributes",
                    "args": [
                        {
                            "name": "formValues",
                            "type": "any"
                        },
                        {
                            "name": "mapObj",
                            "type": "Record<string | any>"
                        },
                        {
                            "name": "inputType",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "FlatForm",
                    "typeParameters": [],
                    "line": 31,
                    "jsdoctags": [
                        {
                            "name": "formValues",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "mapObj",
                            "type": "Record<string | any>",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "inputType",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                },
                {
                    "name": "formatAttributes",
                    "args": [
                        {
                            "name": "form",
                            "type": "FormGroup"
                        },
                        {
                            "name": "mapObj",
                            "type": "Record<string | any>"
                        },
                        {
                            "name": "inputType",
                            "type": "string",
                            "defaultValue": "'input'"
                        }
                    ],
                    "optional": false,
                    "returnType": "FlatForm",
                    "typeParameters": [],
                    "line": 23,
                    "jsdoctags": [
                        {
                            "name": "form",
                            "type": "FormGroup",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "mapObj",
                            "type": "Record<string | any>",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "inputType",
                            "type": "string",
                            "defaultValue": "'input'",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { KycBaseComponent } from '@views/kyc-base/kyc-base.component';\r\nimport { KycIdverificationState } from '@views/kyc-idverification/kyc-idverification/kyc-idverification.component';\r\n\r\n@Component({\r\n  selector: 'brave-kyc-idverification-pure',\r\n  templateUrl: './kyc-idverification-pure.component.html',\r\n})\r\nexport class KycIdverificationPureComponent extends KycBaseComponent {\r\n  @Input() state: KycIdverificationState = 'init';\r\n  @Output() resendClick: EventEmitter<void> = new EventEmitter();\r\n  constructor() {\r\n    super();\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 11
            },
            "extends": "KycBaseComponent",
            "templateData": "<div class=\"flex content-center items-center justify-center h-full\">\r\n  <div class=\"w-full max-w-xs\">\r\n    <div class=\"relative flex flex-col min-w-0 w-full mb-6 border-0\">\r\n      <!-- header -->\r\n      <div class=\"py-3\">\r\n        <h4 class=\"brave-h4 text-indigo-800\">ID Verification</h4>\r\n      </div>\r\n\r\n      <!-- subheader -->\r\n      <div *ngIf=\"state === 'init'\" class=\"py-3\">\r\n        <div class=\"text-base\">\r\n          <p class=\"mb-6 text-blueGray-600\">\r\n            Please enter the 5-digit code you just received to the phone number\r\n            you provided in the box below.\r\n          </p>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- subheader -->\r\n      <div *ngIf=\"state === 'sent'\" class=\"py-3\">\r\n        <div class=\"text-base\">\r\n          <p class=\"mb-6 text-blueGray-600\">\r\n            We have texted you a new code. Please enter the new code in the box\r\n            below.\r\n          </p>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- subheader -->\r\n      <div *ngIf=\"state === 'error'\" class=\"py-3\">\r\n        <div class=\"text-base\">\r\n          <p class=\"mb-6 text-blueGray-600\">\r\n            The code you entered was incorrect, please try again.\r\n          </p>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- subheader -->\r\n      <div class=\"py-3\">\r\n        <div class=\"text-sm\">\r\n          <p class=\"mb-6 text-blueGray-600\">Code will expire in 15 minutes.</p>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- form -->\r\n      <div class=\"py-3 pt-0\">\r\n        <brave-outline-verificationcode-form\r\n          #form\r\n          (onSubmit)=\"formSubmit.emit($event)\"\r\n          (onSubmitError)=\"formError.emit($event)\"\r\n        ></brave-outline-verificationcode-form>\r\n      </div>\r\n\r\n      <div class=\"py-3 pt-0\">\r\n        <div class=\"-ml-3\">\r\n          <brave-links-onlytext-button\r\n            (click)=\"resendClick.emit()\"\r\n            [config]=\"{ buttonSize: 'sm', color: 'text-blueGray-600' }\"\r\n            ><span class=\"underline\"\r\n              >Resend code</span\r\n            ></brave-links-onlytext-button\r\n          >\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"mt-5\">\r\n        <div class=\"flex justify-between items-center\">\r\n          <brave-links-onlytext-button\r\n            (click)=\"backClick.emit()\"\r\n            [config]=\"{ buttonSize: 'sm', color: 'text-blueGray-600' }\"\r\n          >\r\n            <span class=\"flex items-center\">\r\n              <span class=\"material-icons px-1\">arrow_back</span>&nbsp;Back\r\n            </span>\r\n          </brave-links-onlytext-button>\r\n          <brave-filled-onlytext-button (click)=\"form.submitForm()\"\r\n            ><span class=\"flex items-center\"\r\n              >Continue<span class=\"material-icons px-1\"\r\n                >arrow_forward</span\r\n              ></span\r\n            ></brave-filled-onlytext-button\r\n          >\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "KycKbaquestionsComponent",
            "id": "component-KycKbaquestionsComponent-5ae346f6c7c02774b12c1fc94900c2d5",
            "file": "src/app/views/kyc-kbaquestions/kyc-kbaquestions/kyc-kbaquestions.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-kyc-kbaquestions",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./kyc-kbaquestions.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "agencies$",
                    "type": "Observable<AgenciesStateModel>",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "decorators": [
                        {
                            "name": "Select",
                            "stringifiedArguments": "AgenciesState"
                        }
                    ]
                },
                {
                    "name": "agenciesSub$",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "answers",
                    "defaultValue": "[]",
                    "type": "(ITransunionKBAQuestion | ITransunionKBAAnswer | undefined)[]",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "kba",
                    "type": "KycKbaquestionsPureComponent | undefined",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "KycKbaquestionsPureComponent"
                        }
                    ]
                },
                {
                    "name": "numberOfQuestions",
                    "defaultValue": "0",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "questions",
                    "defaultValue": "[]",
                    "type": "(ITransunionKBAQuestion | ITransunionKBAAnswer | undefined)[]",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "stepID",
                    "defaultValue": "3",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 30
                }
            ],
            "methodsClass": [
                {
                    "name": "goBack",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 60
                },
                {
                    "name": "goToNext",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 77
                },
                {
                    "name": "handleError",
                    "args": [
                        {
                            "name": "errors",
                            "type": "literal type"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 99,
                    "jsdoctags": [
                        {
                            "name": "errors",
                            "type": "literal type",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleSubmit",
                    "args": [
                        {
                            "name": "form",
                            "type": "FormGroup"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 93,
                    "jsdoctags": [
                        {
                            "name": "form",
                            "type": "FormGroup",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 56
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 52
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { KbaquestionsFormComponent } from '@shared/components/forms/kbaquestions-form/kbaquestions-form.component';\nimport { KycService } from '@shared/services/kyc/kyc.service';\nimport { AbstractControl, FormGroup } from '@angular/forms';\nimport { Select, Store } from '@ngxs/store';\nimport { AgenciesState, AgenciesStateModel } from '@store/agencies';\nimport { Observable, Subscription } from 'rxjs';\nimport {\n  ITransunionKBAQuestion,\n  ITransunionKBAAnswer,\n  ITransunionKBAQuestions,\n} from '@shared/interfaces/tu-kba-questions.interface';\nimport { take } from 'rxjs/operators';\nimport * as convert from 'xml-js';\nimport { KycKbaquestionsPureComponent } from '@views/kyc-kbaquestions/kyc-kbaquestions-pure/kyc-kbaquestions-pure.component';\n\n@Component({\n  selector: 'brave-kyc-kbaquestions',\n  templateUrl: './kyc-kbaquestions.component.html',\n})\nexport class KycKbaquestionsComponent implements OnInit {\n  @ViewChild(KycKbaquestionsPureComponent) kba:\n    | KycKbaquestionsPureComponent\n    | undefined;\n\n  questions: (ITransunionKBAQuestion | ITransunionKBAAnswer | undefined)[] = []; // TODO replace with KBA question interface\n  answers: (ITransunionKBAQuestion | ITransunionKBAAnswer | undefined)[] = []; // TODO replace with KBA answers interface\n  numberOfQuestions: number = 0;\n  stepID = 3;\n\n  @Select(AgenciesState) agencies$!: Observable<AgenciesStateModel>;\n  agenciesSub$: Subscription;\n\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n    private kycService: KycService\n  ) {\n    this.agenciesSub$ = this.agencies$\n      .pipe(take(1))\n      .subscribe((agencies: AgenciesStateModel) => {\n        if (!agencies.currentRawQuestions) return;\n        const xml: ITransunionKBAQuestions = JSON.parse(\n          convert.xml2json(agencies.currentRawQuestions, { compact: true })\n        );\n        this.questions = xml.ChallengeConfigurationType.MultiChoiceQuestion;\n        this.numberOfQuestions = this.questions.length;\n      });\n  }\n\n  ngOnInit(): void {\n    this.kycService.activateStep(this.stepID);\n  }\n\n  ngOnDestroy(): void {\n    if (this.agenciesSub$) this.agenciesSub$.unsubscribe();\n  }\n\n  goBack(): void {\n    if (this.answers.length) {\n      const question = this.answers.pop();\n      this.answers = [...this.answers];\n      this.questions = [question, ...this.questions];\n      const scroll = parseFloat(\n        ((1 / this.numberOfQuestions) * 100).toFixed(2)\n      );\n      const max = scroll - 100;\n      this.kba?.kba?.scroll(scroll, 0, max);\n    } else {\n      this.kycService.inactivateStep(this.stepID);\n      this.router.navigate(['../identity'], { relativeTo: this.route });\n      return;\n    }\n  }\n\n  goToNext(): void {\n    console.log('next called');\n    // TODO need to extract the answers and save\n    this.answers = [...this.answers, this.questions[0]];\n    this.questions = [...this.questions.slice(1)];\n    console.log('questions', this.questions);\n    console.log('kba', this.kba);\n    const scroll = parseFloat(((-1 / this.numberOfQuestions) * 100).toFixed(2));\n    const max = scroll * -1 - 100;\n    if (this.questions.length) {\n      this.kba?.kba?.scroll(scroll, 0, max);\n    } else {\n      this.kba?.kba?.submitForm();\n    }\n  }\n\n  handleSubmit(form: FormGroup) {\n    // need to submit the answers back to TU.\n    this.kycService.completeStep(this.stepID);\n    this.router.navigate(['../congratulations'], { relativeTo: this.route });\n  }\n\n  handleError(errors: { [key: string]: AbstractControl }): void {\n    console.log('form errors', errors);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router"
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute"
                    },
                    {
                        "name": "kycService",
                        "type": "KycService"
                    }
                ],
                "line": 33,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "kycService",
                        "type": "KycService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"container mx-auto max-w-xs h-full\">\n  <div *ngIf=\"agencies$ | async as agencies\">\n    <brave-kyc-kbaquestions-pure\n      (formSubmit)=\"handleSubmit($event)\"\n      (formError)=\"handleError($event)\"\n      (nextClick)=\"goToNext()\"\n      (backClick)=\"goBack()\"\n      [kbas]=\"agencies.currentRawQuestions | kycKbaquestions\"\n    ></brave-kyc-kbaquestions-pure>\n  </div>\n</div>\n"
        },
        {
            "name": "KycKbaquestionsPureComponent",
            "id": "component-KycKbaquestionsPureComponent-bc853c56d7f86011129af4a6295c6dd8",
            "file": "src/app/views/kyc-kbaquestions/kyc-kbaquestions-pure/kyc-kbaquestions-pure.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-kyc-kbaquestions-pure",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./kyc-kbaquestions-pure.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "kbas",
                    "defaultValue": "[]",
                    "line": 14,
                    "type": "ITransunionKBAQuestion[]"
                }
            ],
            "outputsClass": [
                {
                    "name": "backClick",
                    "defaultValue": "new EventEmitter()",
                    "line": 14,
                    "type": "EventEmitter<void>",
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                },
                {
                    "name": "formError",
                    "defaultValue": "new EventEmitter()",
                    "line": 17,
                    "type": "EventEmitter<literal type>",
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                },
                {
                    "name": "formSubmit",
                    "defaultValue": "new EventEmitter()",
                    "line": 15,
                    "type": "EventEmitter<FormGroup>",
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                },
                {
                    "name": "nextClick",
                    "defaultValue": "new EventEmitter()",
                    "line": 13,
                    "type": "EventEmitter<void>",
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "kba",
                    "type": "KbaquestionsFormComponent | undefined",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "KbaquestionsFormComponent"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "flattenAttributes",
                    "args": [
                        {
                            "name": "formValues",
                            "type": "any"
                        },
                        {
                            "name": "mapObj",
                            "type": "Record<string | any>"
                        },
                        {
                            "name": "inputType",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "FlatForm",
                    "typeParameters": [],
                    "line": 31,
                    "jsdoctags": [
                        {
                            "name": "formValues",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "mapObj",
                            "type": "Record<string | any>",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "inputType",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                },
                {
                    "name": "formatAttributes",
                    "args": [
                        {
                            "name": "form",
                            "type": "FormGroup"
                        },
                        {
                            "name": "mapObj",
                            "type": "Record<string | any>"
                        },
                        {
                            "name": "inputType",
                            "type": "string",
                            "defaultValue": "'input'"
                        }
                    ],
                    "optional": false,
                    "returnType": "FlatForm",
                    "typeParameters": [],
                    "line": 23,
                    "jsdoctags": [
                        {
                            "name": "form",
                            "type": "FormGroup",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "mapObj",
                            "type": "Record<string | any>",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "inputType",
                            "type": "string",
                            "defaultValue": "'input'",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, ViewChild } from '@angular/core';\nimport { KbaquestionsFormComponent } from '@shared/components/forms/kbaquestions-form/kbaquestions-form.component';\nimport { ITransunionKBAQuestion } from '@shared/interfaces/tu-kba-questions.interface';\nimport { KycBaseComponent } from '@views/kyc-base/kyc-base.component';\n\n@Component({\n  selector: 'brave-kyc-kbaquestions-pure',\n  templateUrl: './kyc-kbaquestions-pure.component.html',\n})\nexport class KycKbaquestionsPureComponent extends KycBaseComponent {\n  @ViewChild(KbaquestionsFormComponent) kba:\n    | KbaquestionsFormComponent\n    | undefined;\n  @Input() kbas: ITransunionKBAQuestion[] = [];\n  constructor() {\n    super();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 14
            },
            "extends": "KycBaseComponent",
            "templateData": "<div class=\"flex content-center items-center justify-center h-full\">\n  <div class=\"w-full max-w-xs\">\n    <div class=\"relative flex flex-col min-w-0 w-full mb-6 border-0\">\n      <!-- header -->\n      <div class=\"py-3\">\n        <h4 class=\"brave-h4 text-indigo-800\">Verify Your Identity</h4>\n      </div>\n\n      <!-- subheader -->\n      <div class=\"py-3\">\n        <div class=\"text-base\">\n          <p class=\"mb-6 text-blueGray-600\">\n            These questions are from the credit bureaus to verify your identiy.\n            Please answer them to the best of your knowledge\n          </p>\n        </div>\n      </div>\n\n      <!-- form -->\n      <div class=\"py-3 pt-0 h-1/3\">\n        <div class=\"flex justify-center items-center\">\n          <brave-kbaquestions-form\n            #form\n            (onSubmit)=\"formSubmit.emit($event)\"\n            (onSubmitError)=\"formError.emit($event)\"\n            [kbas]=\"kbas\"\n          ></brave-kbaquestions-form>\n        </div>\n      </div>\n\n      <div class=\"mt-5\">\n        <div class=\"flex justify-between items-center\">\n          <brave-links-onlytext-button\n            (click)=\"backClick.emit()\"\n            [config]=\"{ buttonSize: 'sm', color: 'text-blueGray-600' }\"\n          >\n            <span class=\"flex items-center\">\n              <span class=\"material-icons px-1\">arrow_back</span>&nbsp;Back\n            </span>\n          </brave-links-onlytext-button>\n          <brave-filled-onlytext-button (click)=\"nextClick.emit()\"\n            ><span class=\"flex items-center\"\n              >Next<span class=\"material-icons px-1\">arrow_forward</span></span\n            ></brave-filled-onlytext-button\n          >\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n"
        },
        {
            "name": "KycPhonenumberComponent",
            "id": "component-KycPhonenumberComponent-955bba5957abc697c57c0c738d48fa73",
            "file": "src/app/views/kyc-phonenumber/kyc-phonenumber/kyc-phonenumber.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-kyc-phonenumber",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./kyc-phonenumber.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "backClick",
                    "defaultValue": "new EventEmitter()",
                    "line": 14,
                    "type": "EventEmitter<void>",
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                },
                {
                    "name": "formError",
                    "defaultValue": "new EventEmitter()",
                    "line": 17,
                    "type": "EventEmitter<literal type>",
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                },
                {
                    "name": "formSubmit",
                    "defaultValue": "new EventEmitter()",
                    "line": 15,
                    "type": "EventEmitter<FormGroup>",
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                },
                {
                    "name": "nextClick",
                    "defaultValue": "new EventEmitter()",
                    "line": 13,
                    "type": "EventEmitter<void>",
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "stepID",
                    "defaultValue": "3",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "methodsClass": [
                {
                    "name": "goBack",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28
                },
                {
                    "name": "goToNext",
                    "args": [
                        {
                            "name": "form",
                            "type": "FormGroup"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "jsdoctags": [
                        {
                            "name": "form",
                            "type": "FormGroup",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleError",
                    "args": [
                        {
                            "name": "errors",
                            "type": "literal type"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "jsdoctags": [
                        {
                            "name": "errors",
                            "type": "literal type",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24
                },
                {
                    "name": "flattenAttributes",
                    "args": [
                        {
                            "name": "formValues",
                            "type": "any"
                        },
                        {
                            "name": "mapObj",
                            "type": "Record<string | any>"
                        },
                        {
                            "name": "inputType",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "FlatForm",
                    "typeParameters": [],
                    "line": 31,
                    "jsdoctags": [
                        {
                            "name": "formValues",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "mapObj",
                            "type": "Record<string | any>",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "inputType",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                },
                {
                    "name": "formatAttributes",
                    "args": [
                        {
                            "name": "form",
                            "type": "FormGroup"
                        },
                        {
                            "name": "mapObj",
                            "type": "Record<string | any>"
                        },
                        {
                            "name": "inputType",
                            "type": "string",
                            "defaultValue": "'input'"
                        }
                    ],
                    "optional": false,
                    "returnType": "FlatForm",
                    "typeParameters": [],
                    "line": 23,
                    "jsdoctags": [
                        {
                            "name": "form",
                            "type": "FormGroup",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "mapObj",
                            "type": "Record<string | any>",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "inputType",
                            "type": "string",
                            "defaultValue": "'input'",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { KycService } from '@shared/services/kyc/kyc.service';\nimport { AbstractControl, FormGroup } from '@angular/forms';\nimport { KycBaseComponent } from '@views/kyc-base/kyc-base.component';\nimport { UserAttributesInput } from '@shared/services/aws/api.service';\n\n@Component({\n  selector: 'brave-kyc-phonenumber',\n  templateUrl: './kyc-phonenumber.component.html',\n})\nexport class KycPhonenumberComponent\n  extends KycBaseComponent\n  implements OnInit {\n  stepID = 3;\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n    private kycService: KycService\n  ) {\n    super();\n  }\n\n  ngOnInit(): void {\n    this.kycService.activateStep(this.stepID);\n  }\n\n  goBack(): void {\n    this.kycService.inactivateStep(this.stepID);\n    this.router.navigate(['../identity'], { relativeTo: this.route });\n  }\n  goToNext(form: FormGroup): void {\n    if (form.valid) {\n      console.log('form', form);\n      const { phone } = this.formatAttributes(form, phoneMap);\n      const attrs = {\n        phone: {\n          primary: phone,\n        },\n      } as UserAttributesInput;\n      console.log('attrs', attrs);\n      this.kycService.updateUserAttributes(attrs);\n      this.router.navigate(['../code'], { relativeTo: this.route });\n    }\n  }\n  handleError(errors: { [key: string]: AbstractControl }): void {\n    console.log('form errors', errors);\n  }\n}\n\nconst phoneMap: Record<string, any> = {\n  phone: true,\n};\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router"
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute"
                    },
                    {
                        "name": "kycService",
                        "type": "KycService"
                    }
                ],
                "line": 15,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "kycService",
                        "type": "KycService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "KycBaseComponent",
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"container mx-auto max-w-xs h-full\">\r\n  <brave-kyc-phonenumber-pure\r\n    (formSubmit)=\"goToNext($event)\"\r\n    (formError)=\"handleError($event)\"\r\n    (backClick)=\"goBack()\"\r\n  ></brave-kyc-phonenumber-pure>\r\n</div>\r\n"
        },
        {
            "name": "KycPhonenumberPureComponent",
            "id": "component-KycPhonenumberPureComponent-fcbe7a66e65be1f35d850936d0356cfc",
            "file": "src/app/views/kyc-phonenumber/kyc-phonenumber-pure/kyc-phonenumber-pure.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-kyc-phonenumber-pure",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./kyc-phonenumber-pure.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "backClick",
                    "defaultValue": "new EventEmitter()",
                    "line": 14,
                    "type": "EventEmitter<void>",
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                },
                {
                    "name": "formError",
                    "defaultValue": "new EventEmitter()",
                    "line": 17,
                    "type": "EventEmitter<literal type>",
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                },
                {
                    "name": "formSubmit",
                    "defaultValue": "new EventEmitter()",
                    "line": 15,
                    "type": "EventEmitter<FormGroup>",
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                },
                {
                    "name": "nextClick",
                    "defaultValue": "new EventEmitter()",
                    "line": 13,
                    "type": "EventEmitter<void>",
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "flattenAttributes",
                    "args": [
                        {
                            "name": "formValues",
                            "type": "any"
                        },
                        {
                            "name": "mapObj",
                            "type": "Record<string | any>"
                        },
                        {
                            "name": "inputType",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "FlatForm",
                    "typeParameters": [],
                    "line": 31,
                    "jsdoctags": [
                        {
                            "name": "formValues",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "mapObj",
                            "type": "Record<string | any>",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "inputType",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                },
                {
                    "name": "formatAttributes",
                    "args": [
                        {
                            "name": "form",
                            "type": "FormGroup"
                        },
                        {
                            "name": "mapObj",
                            "type": "Record<string | any>"
                        },
                        {
                            "name": "inputType",
                            "type": "string",
                            "defaultValue": "'input'"
                        }
                    ],
                    "optional": false,
                    "returnType": "FlatForm",
                    "typeParameters": [],
                    "line": 23,
                    "jsdoctags": [
                        {
                            "name": "form",
                            "type": "FormGroup",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "mapObj",
                            "type": "Record<string | any>",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "inputType",
                            "type": "string",
                            "defaultValue": "'input'",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { KycBaseComponent } from '@views/kyc-base/kyc-base.component';\r\n\r\n@Component({\r\n  selector: 'brave-kyc-phonenumber-pure',\r\n  templateUrl: './kyc-phonenumber-pure.component.html',\r\n})\r\nexport class KycPhonenumberPureComponent extends KycBaseComponent {\r\n  constructor() {\r\n    super();\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "extends": "KycBaseComponent",
            "templateData": "<div class=\"flex content-center items-center justify-center h-full\">\r\n  <div class=\"w-full max-w-xs\">\r\n    <div class=\"relative flex flex-col min-w-0 w-full mb-6 border-0\">\r\n      <!-- header -->\r\n      <div class=\"py-3\">\r\n        <h4 class=\"brave-h4 text-indigo-800\">Phone Number</h4>\r\n      </div>\r\n\r\n      <!-- subheader -->\r\n      <div class=\"py-3\">\r\n        <div class=\"text-base\">\r\n          <p class=\"mb-6 text-blueGray-600\">\r\n            To complete your authentication, we need to confirm your phone\r\n            number. We will text a 5-digit code to the number below.\r\n          </p>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- subheader -->\r\n      <div class=\"py-3\">\r\n        <div class=\"text-sm\">\r\n          <p class=\"mb-6 text-blueGray-600\">\r\n            Standard data and messaging rates may apply.\r\n          </p>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- form -->\r\n      <div class=\"py-3 pt-0\">\r\n        <brave-outline-phone-form\r\n          #form\r\n          (onSubmit)=\"formSubmit.emit($event)\"\r\n          (onSubmitError)=\"formError.emit($event)\"\r\n        ></brave-outline-phone-form>\r\n      </div>\r\n\r\n      <div class=\"mt-5\">\r\n        <div class=\"flex justify-between items-center\">\r\n          <brave-links-onlytext-button\r\n            (click)=\"backClick.emit()\"\r\n            [config]=\"{ buttonSize: 'sm', color: 'text-blueGray-600' }\"\r\n          >\r\n            <span class=\"flex items-center\">\r\n              <span class=\"material-icons px-1\">arrow_back</span>&nbsp;Back\r\n            </span>\r\n          </brave-links-onlytext-button>\r\n          <brave-filled-onlytext-button (click)=\"form.submitForm()\"\r\n            ><span class=\"flex items-center\"\r\n              >Continue<span class=\"material-icons px-1\"\r\n                >arrow_forward</span\r\n              ></span\r\n            ></brave-filled-onlytext-button\r\n          >\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "KycSsnComponent",
            "id": "component-KycSsnComponent-a7ca5a7b8a017bb0c2ff036d0128a3f4",
            "file": "src/app/views/kyc-ssn/kyc-ssn/kyc-ssn.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-kyc-ssn",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./kyc-ssn.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "backClick",
                    "defaultValue": "new EventEmitter()",
                    "line": 14,
                    "type": "EventEmitter<void>",
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                },
                {
                    "name": "formError",
                    "defaultValue": "new EventEmitter()",
                    "line": 17,
                    "type": "EventEmitter<literal type>",
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                },
                {
                    "name": "formSubmit",
                    "defaultValue": "new EventEmitter()",
                    "line": 15,
                    "type": "EventEmitter<FormGroup>",
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                },
                {
                    "name": "nextClick",
                    "defaultValue": "new EventEmitter()",
                    "line": 13,
                    "type": "EventEmitter<void>",
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "stepID",
                    "defaultValue": "2",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "goBack",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "description": "<p>Method to navigate back one step</p>\n"
                },
                {
                    "name": "goToNext",
                    "args": [
                        {
                            "name": "form",
                            "type": "FormGroup"
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<void>",
                    "typeParameters": [],
                    "line": 39,
                    "description": "<p>TODO !!!!! THIS NEEDS MAJOR REFACTORING !!!! USE A RxJS PIPE\nMethod to take the form inputs and move to the next step</p>\n",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1102,
                                "end": 1106,
                                "flags": 0,
                                "escapedText": "form"
                            },
                            "type": "FormGroup",
                            "tagName": {
                                "pos": 1096,
                                "end": 1101,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": ""
                        }
                    ]
                },
                {
                    "name": "handleError",
                    "args": [
                        {
                            "name": "errors",
                            "type": "literal type"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 104,
                    "description": "<p>Handle the form errors gracefully</p>\n",
                    "jsdoctags": [
                        {
                            "name": "errors",
                            "type": "literal type",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22
                },
                {
                    "name": "flattenAttributes",
                    "args": [
                        {
                            "name": "formValues",
                            "type": "any"
                        },
                        {
                            "name": "mapObj",
                            "type": "Record<string | any>"
                        },
                        {
                            "name": "inputType",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "FlatForm",
                    "typeParameters": [],
                    "line": 31,
                    "jsdoctags": [
                        {
                            "name": "formValues",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "mapObj",
                            "type": "Record<string | any>",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "inputType",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                },
                {
                    "name": "formatAttributes",
                    "args": [
                        {
                            "name": "form",
                            "type": "FormGroup"
                        },
                        {
                            "name": "mapObj",
                            "type": "Record<string | any>"
                        },
                        {
                            "name": "inputType",
                            "type": "string",
                            "defaultValue": "'input'"
                        }
                    ],
                    "optional": false,
                    "returnType": "FlatForm",
                    "typeParameters": [],
                    "line": 23,
                    "jsdoctags": [
                        {
                            "name": "form",
                            "type": "FormGroup",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "mapObj",
                            "type": "Record<string | any>",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "inputType",
                            "type": "string",
                            "defaultValue": "'input'",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { KycService } from '@shared/services/kyc/kyc.service';\nimport { AbstractControl, FormGroup } from '@angular/forms';\nimport { KycBaseComponent } from '@views/kyc-base/kyc-base.component';\nimport { UserAttributesInput } from '@shared/services/aws/api.service';\n\n@Component({\n  selector: 'brave-kyc-ssn',\n  templateUrl: './kyc-ssn.component.html',\n})\nexport class KycSsnComponent extends KycBaseComponent implements OnInit {\n  stepID = 2;\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n    private kycService: KycService\n  ) {\n    super();\n  }\n\n  ngOnInit(): void {\n    this.kycService.activateStep(this.stepID);\n  }\n\n  /**\n   * Method to navigate back one step\n   */\n  goBack(): void {\n    this.kycService.inactivateStep(this.stepID);\n    this.router.navigate(['../address'], { relativeTo: this.route });\n  }\n\n  /**\n   * TODO !!!!! THIS NEEDS MAJOR REFACTORING !!!! USE A RxJS PIPE\n   * Method to take the form inputs and move to the next step\n   * @param form\n   */\n  async goToNext(form: FormGroup): Promise<void> {\n    // ssn is a little different as each code is one input\n    if (form.valid) {\n      const temp = this.formatAttributes(form, ssnMap);\n      const lastFour = `${temp['input-0']}${temp['input-1']}${temp['input-2']}${temp['input-3']}`;\n      const attrs = {\n        ssn: {\n          lastfour: lastFour,\n        },\n      } as UserAttributesInput;\n      const data = await this.kycService.updateUserAttributesAsync(attrs);\n\n      // IndicativeEnrichment response from TU service\n      const enrichmentResponse = await this.kycService.sendIndicativeEnrichment(\n        data\n      );\n      if (!enrichmentResponse)\n        this.router.navigate(['../identityfull'], { relativeTo: this.route });\n\n      // parsed enrichment data (contains ssn)\n      const enrichment = await this.kycService.processIndicativeEnrichmentResponse(\n        enrichmentResponse\n      );\n      if (!enrichment)\n        this.router.navigate(['../identityfull'], { relativeTo: this.route });\n\n      // parse ssn for getting the authentication questions (NEVER STORE IN DB or STATE!!!);\n      const ssn =\n        enrichment?.['s:Envelope']['s:Body'].IndicativeEnrichmentResponse\n          .IndicativeEnrichmentResult['a:SSN'];\n      if (!ssn?._text)\n        this.router.navigate(['../identityfull'], { relativeTo: this.route });\n\n      // GetAuthorizationQuestions response from TU service\n      const questionResponse = await this.kycService.sendGetAuthenticationQuestions(\n        data,\n        ssn?._text\n      );\n      if (!questionResponse)\n        this.router.navigate(['../identityfull'], { relativeTo: this.route });\n\n      // parse authorization data (contains questions)\n      const questions = await this.kycService.processGetAutthenticationQuestionsResponse(\n        questionResponse\n      );\n      if (!questions)\n        this.router.navigate(['../identityfull'], { relativeTo: this.route });\n\n      // Sucess...parse questions and pass to question component\n      const xml =\n        questions?.['s:Envelope']['s:Body'].GetAuthenticationQuestionsResponse\n          .GetAuthenticationQuestionsResult['a:Questions'];\n      if (!xml?._text)\n        this.router.navigate(['../identityfull'], { relativeTo: this.route });\n\n      await this.kycService.updateCurrentRawQuestionsAsync(xml?._text || '');\n      this.kycService.completeStep(this.stepID);\n      this.router.navigate(['../kba'], { relativeTo: this.route });\n    }\n  }\n\n  /**\n   * Handle the form errors gracefully\n   * @param { [key: string]: AbstractControl } errors\n   */\n  handleError(errors: { [key: string]: AbstractControl }): void {\n    console.log('form errors', errors);\n  }\n}\n\nconst ssnMap: Record<string, any> = {\n  'input-0': true,\n  'input-1': true,\n  'input-2': true,\n  'input-3': true,\n};\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router"
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute"
                    },
                    {
                        "name": "kycService",
                        "type": "KycService"
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "kycService",
                        "type": "KycService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "KycBaseComponent",
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"container mx-auto max-w-xs h-full\">\r\n  <brave-kyc-ssn-pure\r\n    (formSubmit)=\"goToNext($event)\"\r\n    (formError)=\"handleError($event)\"\r\n    (backClick)=\"goBack()\"\r\n  ></brave-kyc-ssn-pure>\r\n</div>\r\n"
        },
        {
            "name": "KycSsnFullComponent",
            "id": "component-KycSsnFullComponent-587139a8d374f10872b3417133e057ef",
            "file": "src/app/views/kyc-ssn-full/kyc-ssn-full/kyc-ssn-full.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-kyc-ssn-full",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./kyc-ssn-full.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "backClick",
                    "defaultValue": "new EventEmitter()",
                    "line": 14,
                    "type": "EventEmitter<void>",
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                },
                {
                    "name": "formError",
                    "defaultValue": "new EventEmitter()",
                    "line": 17,
                    "type": "EventEmitter<literal type>",
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                },
                {
                    "name": "formSubmit",
                    "defaultValue": "new EventEmitter()",
                    "line": 15,
                    "type": "EventEmitter<FormGroup>",
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                },
                {
                    "name": "nextClick",
                    "defaultValue": "new EventEmitter()",
                    "line": 13,
                    "type": "EventEmitter<void>",
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "stepID",
                    "defaultValue": "2",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [
                {
                    "name": "formatCode",
                    "args": [
                        {
                            "name": "values",
                            "type": "FlatForm"
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 50,
                    "jsdoctags": [
                        {
                            "name": "values",
                            "type": "FlatForm",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "goBack",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28
                },
                {
                    "name": "goToNext",
                    "args": [
                        {
                            "name": "form",
                            "type": "FormGroup"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "jsdoctags": [
                        {
                            "name": "form",
                            "type": "FormGroup",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleError",
                    "args": [
                        {
                            "name": "errors",
                            "type": "literal type"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 58,
                    "jsdoctags": [
                        {
                            "name": "errors",
                            "type": "literal type",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24
                },
                {
                    "name": "flattenAttributes",
                    "args": [
                        {
                            "name": "formValues",
                            "type": "any"
                        },
                        {
                            "name": "mapObj",
                            "type": "Record<string | any>"
                        },
                        {
                            "name": "inputType",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "FlatForm",
                    "typeParameters": [],
                    "line": 31,
                    "jsdoctags": [
                        {
                            "name": "formValues",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "mapObj",
                            "type": "Record<string | any>",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "inputType",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                },
                {
                    "name": "formatAttributes",
                    "args": [
                        {
                            "name": "form",
                            "type": "FormGroup"
                        },
                        {
                            "name": "mapObj",
                            "type": "Record<string | any>"
                        },
                        {
                            "name": "inputType",
                            "type": "string",
                            "defaultValue": "'input'"
                        }
                    ],
                    "optional": false,
                    "returnType": "FlatForm",
                    "typeParameters": [],
                    "line": 23,
                    "jsdoctags": [
                        {
                            "name": "form",
                            "type": "FormGroup",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "mapObj",
                            "type": "Record<string | any>",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "inputType",
                            "type": "string",
                            "defaultValue": "'input'",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { AfterViewInit, Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { KycService } from '@shared/services/kyc/kyc.service';\nimport { FlatForm, KycBaseComponent } from '@views/kyc-base/kyc-base.component';\nimport { AbstractControl, FormGroup } from '@angular/forms';\nimport { UserAttributesInput } from '@shared/services/aws/api.service';\nimport { SyncService } from '@shared/services/sync/sync.service';\n\n@Component({\n  selector: 'brave-kyc-ssn-full',\n  templateUrl: './kyc-ssn-full.component.html',\n})\nexport class KycSsnFullComponent extends KycBaseComponent implements OnInit {\n  stepID = 2;\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n    private kycService: KycService,\n    private syncService: SyncService\n  ) {\n    super();\n  }\n\n  ngOnInit(): void {\n    this.kycService.activateStep(this.stepID);\n  }\n\n  goBack(): void {\n    this.kycService.inactivateStep(this.stepID);\n    this.router.navigate(['../address'], { relativeTo: this.route });\n  }\n\n  goToNext(form: FormGroup): void {\n    // TODO !!!Important!!! consider how to handle full SSN. Don't want to keep in db\n    if (form.valid) {\n      const temp = this.formatAttributes(form, ssn);\n      const full = this.formatCode(temp);\n      const attrs = {\n        ssn: {\n          lastfour: `${temp['input-0']}${temp['input-1']}${temp['input-2']}${temp['input-3']}`,\n          full: full,\n        },\n      } as UserAttributesInput;\n      this.kycService.updateUserAttributes(attrs);\n      this.kycService.completeStep(this.stepID);\n      this.router.navigate(['../verify'], { relativeTo: this.route });\n    }\n  }\n\n  formatCode(values: FlatForm): string {\n    let str = '';\n    for (let i = 0; i < 9; i++) {\n      str += values[`input-${i}`];\n    }\n    return str;\n  }\n\n  handleError(errors: { [key: string]: AbstractControl }): void {\n    console.log('form errors', errors);\n  }\n}\n\nconst ssn: Record<string, any> = {\n  'input-0': true,\n  'input-1': true,\n  'input-2': true,\n  'input-3': true,\n  'input-4': true,\n  'input-5': true,\n  'input-6': true,\n  'input-7': true,\n  'input-8': true,\n};\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router"
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute"
                    },
                    {
                        "name": "kycService",
                        "type": "KycService"
                    },
                    {
                        "name": "syncService",
                        "type": "SyncService"
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "kycService",
                        "type": "KycService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "syncService",
                        "type": "SyncService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "KycBaseComponent",
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"container mx-auto max-w-xs h-full\">\r\n  <brave-kyc-ssn-full-pure\r\n    (formSubmit)=\"goToNext($event)\"\r\n    (formError)=\"handleError($event)\"\r\n    (backClick)=\"goBack()\"\r\n  ></brave-kyc-ssn-full-pure>\r\n</div>\r\n"
        },
        {
            "name": "KycSsnFullPureComponent",
            "id": "component-KycSsnFullPureComponent-6dc6c972e578e2c22892a03df09e429f",
            "file": "src/app/views/kyc-ssn-full/kyc-ssn-full-pure/kyc-ssn-full-pure.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-kyc-ssn-full-pure",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./kyc-ssn-full-pure.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "backClick",
                    "defaultValue": "new EventEmitter()",
                    "line": 14,
                    "type": "EventEmitter<void>",
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                },
                {
                    "name": "formError",
                    "defaultValue": "new EventEmitter()",
                    "line": 17,
                    "type": "EventEmitter<literal type>",
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                },
                {
                    "name": "formSubmit",
                    "defaultValue": "new EventEmitter()",
                    "line": 15,
                    "type": "EventEmitter<FormGroup>",
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                },
                {
                    "name": "nextClick",
                    "defaultValue": "new EventEmitter()",
                    "line": 13,
                    "type": "EventEmitter<void>",
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "flattenAttributes",
                    "args": [
                        {
                            "name": "formValues",
                            "type": "any"
                        },
                        {
                            "name": "mapObj",
                            "type": "Record<string | any>"
                        },
                        {
                            "name": "inputType",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "FlatForm",
                    "typeParameters": [],
                    "line": 31,
                    "jsdoctags": [
                        {
                            "name": "formValues",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "mapObj",
                            "type": "Record<string | any>",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "inputType",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                },
                {
                    "name": "formatAttributes",
                    "args": [
                        {
                            "name": "form",
                            "type": "FormGroup"
                        },
                        {
                            "name": "mapObj",
                            "type": "Record<string | any>"
                        },
                        {
                            "name": "inputType",
                            "type": "string",
                            "defaultValue": "'input'"
                        }
                    ],
                    "optional": false,
                    "returnType": "FlatForm",
                    "typeParameters": [],
                    "line": 23,
                    "jsdoctags": [
                        {
                            "name": "form",
                            "type": "FormGroup",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "mapObj",
                            "type": "Record<string | any>",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "inputType",
                            "type": "string",
                            "defaultValue": "'input'",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, OnInit, Output } from '@angular/core';\r\nimport { KycBaseComponent } from '@views/kyc-base/kyc-base.component';\r\n\r\n@Component({\r\n  selector: 'brave-kyc-ssn-full-pure',\r\n  templateUrl: './kyc-ssn-full-pure.component.html',\r\n})\r\nexport class KycSsnFullPureComponent extends KycBaseComponent {\r\n  constructor() {\r\n    super();\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "extends": "KycBaseComponent",
            "templateData": "<div class=\"flex content-center items-center justify-center h-full\">\r\n  <div class=\"w-full max-w-xs\">\r\n    <div class=\"relative flex flex-col min-w-0 w-full mb-6 border-0\">\r\n      <!-- header -->\r\n      <div class=\"py-3\">\r\n        <h4 class=\"brave-h4 text-indigo-800\">Social Security</h4>\r\n      </div>\r\n\r\n      <!-- subheader -->\r\n      <div class=\"py-3\">\r\n        <div class=\"text-base\">\r\n          <p class=\"mb-6 text-blueGray-600\">\r\n            We weren’t able to verify your identiy with the last 4 digits of\r\n            your SSN. We will need to verify your full SSN.\r\n          </p>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- items -->\r\n      <div class=\"py-3 pt-0\">\r\n        <div class=\"flex mb-6\">\r\n          <span class=\"material-icons justify-end ml-6 mr-2 text-blueGray-600\"\r\n            >lock_outline</span\r\n          >\r\n          <span class=\"text-base\">\r\n            <p class=\"text-blueGray-600\">\r\n              This will not impact your credit score\r\n            </p>\r\n          </span>\r\n        </div>\r\n        <div class=\"flex mb-6\">\r\n          <span class=\"material-icons justify-end ml-6 mr-2 text-blueGray-600\"\r\n            >lock_outline</span\r\n          >\r\n          <span class=\"text-base\">\r\n            <p class=\"text-blueGray-600\">\r\n              Your SSN will be encrypted and transmitted to us via a secure\r\n              connection\r\n            </p>\r\n          </span>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- form -->\r\n      <div class=\"py-3 pt-0\">\r\n        <brave-ssn-full-form\r\n          #form\r\n          (onSubmit)=\"formSubmit.emit($event)\"\r\n          (onSubmitError)=\"formError.emit($event)\"\r\n        ></brave-ssn-full-form>\r\n      </div>\r\n\r\n      <div class=\"mt-5\">\r\n        <div class=\"flex justify-between items-center\">\r\n          <brave-links-onlytext-button\r\n            (click)=\"backClick.emit()\"\r\n            [config]=\"{ buttonSize: 'sm', color: 'text-blueGray-600' }\"\r\n          >\r\n            <span class=\"flex items-center\">\r\n              <span class=\"material-icons px-1\">arrow_back</span>&nbsp;Back\r\n            </span>\r\n          </brave-links-onlytext-button>\r\n          <brave-filled-onlytext-button (click)=\"form.submitForm()\"\r\n            ><span class=\"flex items-center\"\r\n              >Continue<span class=\"material-icons px-1\"\r\n                >arrow_forward</span\r\n              ></span\r\n            ></brave-filled-onlytext-button\r\n          >\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "KycSsnPureComponent",
            "id": "component-KycSsnPureComponent-36aa7f53a674a3dc4d377fe03b8e7279",
            "file": "src/app/views/kyc-ssn/kyc-ssn-pure/kyc-ssn-pure.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-kyc-ssn-pure",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./kyc-ssn-pure.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "backClick",
                    "defaultValue": "new EventEmitter()",
                    "line": 14,
                    "type": "EventEmitter<void>",
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                },
                {
                    "name": "formError",
                    "defaultValue": "new EventEmitter()",
                    "line": 17,
                    "type": "EventEmitter<literal type>",
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                },
                {
                    "name": "formSubmit",
                    "defaultValue": "new EventEmitter()",
                    "line": 15,
                    "type": "EventEmitter<FormGroup>",
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                },
                {
                    "name": "nextClick",
                    "defaultValue": "new EventEmitter()",
                    "line": 13,
                    "type": "EventEmitter<void>",
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "flattenAttributes",
                    "args": [
                        {
                            "name": "formValues",
                            "type": "any"
                        },
                        {
                            "name": "mapObj",
                            "type": "Record<string | any>"
                        },
                        {
                            "name": "inputType",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "FlatForm",
                    "typeParameters": [],
                    "line": 31,
                    "jsdoctags": [
                        {
                            "name": "formValues",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "mapObj",
                            "type": "Record<string | any>",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "inputType",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                },
                {
                    "name": "formatAttributes",
                    "args": [
                        {
                            "name": "form",
                            "type": "FormGroup"
                        },
                        {
                            "name": "mapObj",
                            "type": "Record<string | any>"
                        },
                        {
                            "name": "inputType",
                            "type": "string",
                            "defaultValue": "'input'"
                        }
                    ],
                    "optional": false,
                    "returnType": "FlatForm",
                    "typeParameters": [],
                    "line": 23,
                    "jsdoctags": [
                        {
                            "name": "form",
                            "type": "FormGroup",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "mapObj",
                            "type": "Record<string | any>",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "inputType",
                            "type": "string",
                            "defaultValue": "'input'",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { KycBaseComponent } from '@views/kyc-base/kyc-base.component';\r\n\r\n@Component({\r\n  selector: 'brave-kyc-ssn-pure',\r\n  templateUrl: './kyc-ssn-pure.component.html',\r\n})\r\nexport class KycSsnPureComponent extends KycBaseComponent {\r\n  constructor() {\r\n    super();\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "extends": "KycBaseComponent",
            "templateData": "<div class=\"flex content-center items-center justify-center h-full\">\r\n  <div class=\"w-full max-w-xs\">\r\n    <div class=\"relative flex flex-col min-w-0 w-full mb-6 border-0\">\r\n      <!-- header -->\r\n      <div class=\"py-3\">\r\n        <h4 class=\"brave-h4 text-indigo-800\">Social Security</h4>\r\n      </div>\r\n\r\n      <!-- subheader -->\r\n      <div class=\"py-3\">\r\n        <div class=\"text-base\">\r\n          <p class=\"mb-6 text-blueGray-600\">\r\n            We need the last 4 digits of your SSN to confirm your identity for\r\n            your credit report and score. This information will not be used for\r\n            anything else.\r\n          </p>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- items -->\r\n      <div class=\"py-3 pt-0\">\r\n        <div class=\"flex mb-6\">\r\n          <span class=\"material-icons justify-end ml-6 mr-2 text-blueGray-600\"\r\n            >lock_outline</span\r\n          >\r\n          <span class=\"text-base\">\r\n            <p class=\"text-blueGray-600\">\r\n              This will not impact your credit score\r\n            </p>\r\n          </span>\r\n        </div>\r\n        <div class=\"flex mb-6\">\r\n          <span class=\"material-icons justify-end ml-6 mr-2 text-blueGray-600\"\r\n            >lock_outline</span\r\n          >\r\n          <span class=\"text-base\">\r\n            <p class=\"text-blueGray-600\">\r\n              Your SSN will be encrypted and transmitted to us via a secure\r\n              connection\r\n            </p>\r\n          </span>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- form -->\r\n      <div class=\"py-3 pt-0\">\r\n        <brave-ssn-lastfour-form\r\n          #form\r\n          (onSubmit)=\"formSubmit.emit($event)\"\r\n          (onSubmitError)=\"formError.emit($event)\"\r\n        ></brave-ssn-lastfour-form>\r\n      </div>\r\n\r\n      <div class=\"mt-5\">\r\n        <div class=\"flex justify-between items-center\">\r\n          <brave-links-onlytext-button\r\n            (click)=\"backClick.emit()\"\r\n            [config]=\"{ buttonSize: 'sm', color: 'text-blueGray-600' }\"\r\n          >\r\n            <span class=\"flex items-center\">\r\n              <span class=\"material-icons px-1\">arrow_back</span>&nbsp;Back\r\n            </span>\r\n          </brave-links-onlytext-button>\r\n          <brave-filled-onlytext-button (click)=\"form.submitForm()\"\r\n            ><span class=\"flex items-center\"\r\n              >Continue<span class=\"material-icons px-1\"\r\n                >arrow_forward</span\r\n              ></span\r\n            ></brave-filled-onlytext-button\r\n          >\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "KycWelcomebackComponent",
            "id": "component-KycWelcomebackComponent-9eba135241d0cec28be6d924d3552490",
            "file": "src/app/views/kyc-welcomeback/kyc-welcomeback/kyc-welcomeback.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-kyc-welcomeback",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./kyc-welcomeback.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "goBack",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12
                },
                {
                    "name": "goToNext",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 10
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'brave-kyc-welcomeback',\r\n  templateUrl: './kyc-welcomeback.component.html',\r\n})\r\nexport class KycWelcomebackComponent implements OnInit {\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  goBack(): void {\r\n    // need to add state to pick up where left off\r\n  }\r\n\r\n  goToNext(): void {\r\n    // need to add state to pick up where left off\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 7
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"container mx-auto max-w-xs h-full\">\r\n  <brave-kyc-welcomeback-pure\r\n    (nextClick)=\"goToNext()\"\r\n    (backClick)=\"goBack()\"\r\n  ></brave-kyc-welcomeback-pure>\r\n</div>\r\n"
        },
        {
            "name": "KycWelcomebackPureComponent",
            "id": "component-KycWelcomebackPureComponent-d2a5889ae849ff2f3fddcf97f2f37de9",
            "file": "src/app/views/kyc-welcomeback/kyc-welcomeback-pure/kyc-welcomeback-pure.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-kyc-welcomeback-pure",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./kyc-welcomeback-pure.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "backClick",
                    "defaultValue": "new EventEmitter()",
                    "line": 14,
                    "type": "EventEmitter<void>",
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                },
                {
                    "name": "formError",
                    "defaultValue": "new EventEmitter()",
                    "line": 17,
                    "type": "EventEmitter<literal type>",
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                },
                {
                    "name": "formSubmit",
                    "defaultValue": "new EventEmitter()",
                    "line": 15,
                    "type": "EventEmitter<FormGroup>",
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                },
                {
                    "name": "nextClick",
                    "defaultValue": "new EventEmitter()",
                    "line": 13,
                    "type": "EventEmitter<void>",
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "flattenAttributes",
                    "args": [
                        {
                            "name": "formValues",
                            "type": "any"
                        },
                        {
                            "name": "mapObj",
                            "type": "Record<string | any>"
                        },
                        {
                            "name": "inputType",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "FlatForm",
                    "typeParameters": [],
                    "line": 31,
                    "jsdoctags": [
                        {
                            "name": "formValues",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "mapObj",
                            "type": "Record<string | any>",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "inputType",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                },
                {
                    "name": "formatAttributes",
                    "args": [
                        {
                            "name": "form",
                            "type": "FormGroup"
                        },
                        {
                            "name": "mapObj",
                            "type": "Record<string | any>"
                        },
                        {
                            "name": "inputType",
                            "type": "string",
                            "defaultValue": "'input'"
                        }
                    ],
                    "optional": false,
                    "returnType": "FlatForm",
                    "typeParameters": [],
                    "line": 23,
                    "jsdoctags": [
                        {
                            "name": "form",
                            "type": "FormGroup",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "mapObj",
                            "type": "Record<string | any>",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "inputType",
                            "type": "string",
                            "defaultValue": "'input'",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { KycBaseComponent } from '@views/kyc-base/kyc-base.component';\r\n\r\n@Component({\r\n  selector: 'brave-kyc-welcomeback-pure',\r\n  templateUrl: './kyc-welcomeback-pure.component.html',\r\n})\r\nexport class KycWelcomebackPureComponent extends KycBaseComponent {\r\n  constructor() {\r\n    super();\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "extends": "KycBaseComponent",
            "templateData": "<div class=\"flex content-center items-center justify-center h-full\">\r\n  <div class=\"w-full max-w-xs\">\r\n    <div class=\"relative flex flex-col min-w-0 w-full mb-6 border-0\">\r\n      <!-- image -->\r\n      <div class=\"flex justify-center mb-6\">\r\n        <img class=\"w-full\" src=\"assets/img/undraw_welcoming_xvuq.svg\" />\r\n      </div>\r\n\r\n      <!-- header -->\r\n      <div class=\"py-3\">\r\n        <h4 class=\"brave-h4\">Welcome Back</h4>\r\n      </div>\r\n\r\n      <!-- subheader -->\r\n      <div class=\"py-3\">\r\n        <div class=\"text-base\">\r\n          <p class=\"mb-6 text-blueGray-600\">Let's start where you left off</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"mt-5\">\r\n        <div class=\"flex justify-between items-center\">\r\n          <brave-links-onlytext-button\r\n            (click)=\"backClick.emit()\"\r\n            [config]=\"{ buttonSize: 'sm', color: 'text-blueGray-600' }\"\r\n          >\r\n            <span class=\"flex items-center\">\r\n              <span class=\"material-icons px-1\">arrow_back</span>&nbsp;Back\r\n            </span>\r\n          </brave-links-onlytext-button>\r\n          <brave-filled-onlytext-button (click)=\"nextClick.emit()\"\r\n            ><span class=\"flex items-center\"\r\n              >Continue<span class=\"material-icons px-1\"\r\n                >arrow_forward</span\r\n              ></span\r\n            ></brave-filled-onlytext-button\r\n          >\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "KycWelcomeComponent",
            "id": "component-KycWelcomeComponent-450ff2cebf98c85e8ac47724af2046df",
            "file": "src/app/views/kyc-welcome/kyc-welcome/kyc-welcome.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-kyc-welcome",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./kyc-welcome.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "backClick",
                    "defaultValue": "new EventEmitter()",
                    "line": 14,
                    "type": "EventEmitter<void>",
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                },
                {
                    "name": "formError",
                    "defaultValue": "new EventEmitter()",
                    "line": 17,
                    "type": "EventEmitter<literal type>",
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                },
                {
                    "name": "formSubmit",
                    "defaultValue": "new EventEmitter()",
                    "line": 15,
                    "type": "EventEmitter<FormGroup>",
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                },
                {
                    "name": "nextClick",
                    "defaultValue": "new EventEmitter()",
                    "line": 13,
                    "type": "EventEmitter<void>",
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "stepID",
                    "defaultValue": "0",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 17
                }
            ],
            "methodsClass": [
                {
                    "name": "goToNext",
                    "args": [
                        {
                            "name": "form",
                            "type": "FormGroup"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "jsdoctags": [
                        {
                            "name": "form",
                            "type": "FormGroup",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleError",
                    "args": [
                        {
                            "name": "errors",
                            "type": "literal type"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 47,
                    "jsdoctags": [
                        {
                            "name": "errors",
                            "type": "literal type",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26
                },
                {
                    "name": "flattenAttributes",
                    "args": [
                        {
                            "name": "formValues",
                            "type": "any"
                        },
                        {
                            "name": "mapObj",
                            "type": "Record<string | any>"
                        },
                        {
                            "name": "inputType",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "FlatForm",
                    "typeParameters": [],
                    "line": 31,
                    "jsdoctags": [
                        {
                            "name": "formValues",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "mapObj",
                            "type": "Record<string | any>",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "inputType",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                },
                {
                    "name": "formatAttributes",
                    "args": [
                        {
                            "name": "form",
                            "type": "FormGroup"
                        },
                        {
                            "name": "mapObj",
                            "type": "Record<string | any>"
                        },
                        {
                            "name": "inputType",
                            "type": "string",
                            "defaultValue": "'input'"
                        }
                    ],
                    "optional": false,
                    "returnType": "FlatForm",
                    "typeParameters": [],
                    "line": 23,
                    "jsdoctags": [
                        {
                            "name": "form",
                            "type": "FormGroup",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "mapObj",
                            "type": "Record<string | any>",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "inputType",
                            "type": "string",
                            "defaultValue": "'input'",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { AbstractControl, FormGroup } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { UserAttributesInput } from '@shared/services/aws/api.service';\nimport { KycService } from '@shared/services/kyc/kyc.service';\nimport { KycBaseComponent } from '@views/kyc-base/kyc-base.component';\n\ninterface FlatForm {\n  [key: string]: string;\n}\n\n@Component({\n  selector: 'brave-kyc-welcome',\n  templateUrl: './kyc-welcome.component.html',\n})\nexport class KycWelcomeComponent extends KycBaseComponent implements OnInit {\n  stepID = 0;\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n    private kycService: KycService\n  ) {\n    super();\n  }\n\n  ngOnInit(): void {\n    this.kycService.activateStep(this.stepID);\n  }\n\n  goToNext(form: FormGroup): void {\n    if (form.valid) {\n      // write to state...TODO write to DB\n      const attrs = {\n        name: {\n          ...this.formatAttributes(form, name),\n        },\n        dob: {\n          ...this.formatAttributes(form, dob),\n        },\n      } as UserAttributesInput;\n      this.kycService.updateUserAttributes(attrs);\n      this.kycService.completeStep(this.stepID);\n      this.router.navigate(['../address'], { relativeTo: this.route });\n    }\n  }\n\n  handleError(errors: { [key: string]: AbstractControl }): void {\n    console.log('form errors', errors);\n  }\n}\n\nconst name: Record<string, any> = {\n  first: true,\n  middle: true,\n  last: true,\n};\n\nconst dob: Record<string, any> = {\n  year: true,\n  month: true,\n  day: true,\n};\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router"
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute"
                    },
                    {
                        "name": "kycService",
                        "type": "KycService"
                    }
                ],
                "line": 17,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "kycService",
                        "type": "KycService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "KycBaseComponent",
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"container mx-auto max-w-xs h-full\">\r\n  <brave-kyc-welcome-pure\r\n    (formSubmit)=\"goToNext($event)\"\r\n    (formError)=\"handleError($event)\"\r\n  ></brave-kyc-welcome-pure>\r\n</div>\r\n"
        },
        {
            "name": "KycWelcomePureComponent",
            "id": "component-KycWelcomePureComponent-67c34773070ad0f2956f4c36e7545c11",
            "file": "src/app/views/kyc-welcome/kyc-welcome-pure/kyc-welcome-pure.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-kyc-welcome-pure",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./kyc-welcome-pure.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "backClick",
                    "defaultValue": "new EventEmitter()",
                    "line": 14,
                    "type": "EventEmitter<void>",
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                },
                {
                    "name": "formError",
                    "defaultValue": "new EventEmitter()",
                    "line": 17,
                    "type": "EventEmitter<literal type>",
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                },
                {
                    "name": "formSubmit",
                    "defaultValue": "new EventEmitter()",
                    "line": 15,
                    "type": "EventEmitter<FormGroup>",
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                },
                {
                    "name": "nextClick",
                    "defaultValue": "new EventEmitter()",
                    "line": 13,
                    "type": "EventEmitter<void>",
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "flattenAttributes",
                    "args": [
                        {
                            "name": "formValues",
                            "type": "any"
                        },
                        {
                            "name": "mapObj",
                            "type": "Record<string | any>"
                        },
                        {
                            "name": "inputType",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "FlatForm",
                    "typeParameters": [],
                    "line": 31,
                    "jsdoctags": [
                        {
                            "name": "formValues",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "mapObj",
                            "type": "Record<string | any>",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "inputType",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                },
                {
                    "name": "formatAttributes",
                    "args": [
                        {
                            "name": "form",
                            "type": "FormGroup"
                        },
                        {
                            "name": "mapObj",
                            "type": "Record<string | any>"
                        },
                        {
                            "name": "inputType",
                            "type": "string",
                            "defaultValue": "'input'"
                        }
                    ],
                    "optional": false,
                    "returnType": "FlatForm",
                    "typeParameters": [],
                    "line": 23,
                    "jsdoctags": [
                        {
                            "name": "form",
                            "type": "FormGroup",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "mapObj",
                            "type": "Record<string | any>",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "inputType",
                            "type": "string",
                            "defaultValue": "'input'",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "KycBaseComponent"
                    }
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { KycBaseComponent } from '@views/kyc-base/kyc-base.component';\r\n\r\n@Component({\r\n  selector: 'brave-kyc-welcome-pure',\r\n  templateUrl: './kyc-welcome-pure.component.html',\r\n})\r\nexport class KycWelcomePureComponent extends KycBaseComponent {\r\n  constructor() {\r\n    super();\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "extends": "KycBaseComponent",
            "templateData": "<div class=\"flex content-center items-center justify-center h-full\">\r\n  <div class=\"w-full max-w-xs\">\r\n    <div class=\"relative flex flex-col min-w-0 w-full mb-6 border-0\">\r\n      <!-- image -->\r\n      <div class=\"flex justify-center mb-6\">\r\n        <img class=\"w-full\" src=\"assets/img/undraw_welcoming_xvuq.svg\" />\r\n      </div>\r\n\r\n      <!-- header -->\r\n      <div class=\"py-3\">\r\n        <h4 class=\"brave-h4 text-indigo-800\">Welcome!</h4>\r\n      </div>\r\n\r\n      <!-- subheader -->\r\n      <div class=\"py-3\">\r\n        <div class=\"text-base\">\r\n          <p class=\"mb-6 text-blueGray-600\">Let's start with some basic info</p>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- form -->\r\n      <div>\r\n        <brave-outline-namedob-form\r\n          #form\r\n          (onSubmit)=\"formSubmit.emit($event)\"\r\n          (onSubmitError)=\"formError.emit($event)\"\r\n          [hideHint]=\"true\"\r\n        ></brave-outline-namedob-form>\r\n      </div>\r\n\r\n      <!-- form -->\r\n      <!-- <div class=\"py-3 pt-0\">\r\n        <brave-dateofbirth-form\r\n          #form\r\n          (onChanges)\r\n          (onSubmit)=\"formSubmit.emit($event)\"\r\n          (onSubmitError)=\"formError.emit($event)\"\r\n        ></brave-dateofbirth-form>\r\n      </div> -->\r\n\r\n      <!-- can place error messages here maybe? -->\r\n\r\n      <div class=\"mt-5\">\r\n        <div class=\"flex justify-end items-center\">\r\n          <brave-filled-onlytext-button (click)=\"form.submitForm()\"\r\n            ><span class=\"flex items-center\"\r\n              >Continue<span class=\"material-icons px-1\"\r\n                >arrow_forward</span\r\n              ></span\r\n            ></brave-filled-onlytext-button\r\n          >\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "LinksOnlytextButtonComponent",
            "id": "component-LinksOnlytextButtonComponent-a9ac5dd2271768bbb8cac0161826b04e",
            "file": "src/app/shared/components/buttons/links-onlytext-button/links-onlytext-button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-links-onlytext-button",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./links-onlytext-button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "config",
                    "defaultValue": "{\r\n    buttonSize: 'base',\r\n    color: 'text-indigo-800',\r\n  }",
                    "line": 18,
                    "type": "ILinksOnlyTextButtonConfig"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\r\n\r\nexport interface ILinksOnlyTextButtonConfig {\r\n  buttonSize: string;\r\n  color: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'brave-links-onlytext-button',\r\n  templateUrl: './links-onlytext-button.component.html',\r\n})\r\nexport class LinksOnlytextButtonComponent {\r\n  /**\r\n   * @param config Input objctfor button customization\r\n   * @param config.buttonSize 'sm', 'base', 'lg'\r\n   * @param config.color Any global color\r\n   */\r\n  @Input() config: ILinksOnlyTextButtonConfig = {\r\n    buttonSize: 'base',\r\n    color: 'text-indigo-800',\r\n  };\r\n\r\n  constructor() {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 21
            },
            "templateData": "<button\r\n  [ngClass]=\"config | linksOnlytextButton\"\r\n  class=\"\r\n    background-transparent\r\n    font-bold\r\n    outline-none\r\n    focus:outline-none\r\n    mr-1\r\n    w-full\r\n    mb-1\r\n    ease-linear\r\n    transition-all\r\n    duration-150\r\n  \"\r\n  type=\"button\"\r\n>\r\n  <ng-content></ng-content>\r\n</button>\r\n"
        },
        {
            "name": "LoanCardComponent",
            "id": "component-LoanCardComponent-cfa7ff890b177c3b4b8c0643291455c4",
            "file": "src/app/shared/components/cards/loan-card/loan-card.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-loan-card",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./loan-card.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "status",
                    "defaultValue": "'good'",
                    "line": 15,
                    "type": "Status"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "open$",
                    "defaultValue": "of(false)",
                    "type": "Observable<boolean> | undefined",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "viewDetail",
                    "type": "ViewdetailButtonComponent | undefined",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "ViewdetailButtonComponent"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, AfterViewInit, ViewChild, Input } from '@angular/core';\r\nimport { ViewdetailButtonComponent } from '@shared/components/buttons/viewdetail-button/viewdetail-button.component';\r\nimport { Observable, of } from 'rxjs';\r\n\r\nexport type Status = 'excellent' | 'good' | 'okay' | 'poor';\r\n\r\n@Component({\r\n  selector: 'brave-loan-card',\r\n  templateUrl: './loan-card.component.html',\r\n})\r\nexport class LoanCardComponent implements AfterViewInit {\r\n  @ViewChild(ViewdetailButtonComponent)\r\n  viewDetail: ViewdetailButtonComponent | undefined;\r\n  open$: Observable<boolean> | undefined = of(false);\r\n  @Input() status: Status = 'good';\r\n\r\n  constructor() {}\r\n\r\n  ngAfterViewInit(): void {\r\n    this.open$ = this.viewDetail?.open$.asObservable();\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 15
            },
            "implements": [
                "AfterViewInit"
            ],
            "templateData": "<div\r\n  class=\"relative flex flex-col break-words w-full py-5 rounded-lg border border-blueGray-300\"\r\n>\r\n  <div class=\"flex pr-5\">\r\n    <div class=\"px-4 w-13\">\r\n      <!-- left column  section 1 -->\r\n      <div\r\n        class=\"rounded-full border-none w-5 h-5\"\r\n        [ngClass]=\"status | accountStatus\"\r\n      ></div>\r\n    </div>\r\n    <div class=\"flex flex-col w-full\">\r\n      <!--  right column section 2 -->\r\n      <div class=\"flex flex-row justify-between p-0 -mt-1 mb-1\">\r\n        <!-- header  -->\r\n        <span><p class=\"brave-body1-semibold\">CITI</p></span>\r\n        <span\r\n          ><p class=\"brave-body1-semibold\"></p>\r\n          80%</span\r\n        >\r\n      </div>\r\n\r\n      <div class=\"flex flex-row\">\r\n        <!-- credit balance  -->\r\n        <span><p class=\"brave-body1\">Current Balance:&nbsp;</p></span>\r\n        <span><p class=\"brave-body1\">$800</p></span>\r\n      </div>\r\n\r\n      <div class=\"flex flex-row\">\r\n        <!-- credit limit  -->\r\n        <span><p class=\"brave-body1\">Initial Loan Amount:&nbsp;</p></span>\r\n        <span><p class=\"brave-body1\">$2000</p></span>\r\n      </div>\r\n\r\n      <div class=\"mt-1\">\r\n        <!-- buttons goes here -->\r\n        <brave-viewdetail-button>View Details</brave-viewdetail-button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div *ngIf=\"open$ | async as open\" class=\"flex flex-col w-full py-5 px-4\">\r\n    <div class=\"border-t border-blueGray-300\"></div>\r\n  </div>\r\n\r\n  <div *ngIf=\"open$ | async as open\" class=\"flex flex-row pr-5\">\r\n    <div class=\"px-4 w-13\">\r\n      <!-- left column  section 1 -->\r\n      <div class=\"w-5 h-5\"></div>\r\n    </div>\r\n    <div class=\"flex flex-col w-full pr-1\">\r\n      <!--  right column section 2 -->\r\n\r\n      <div class=\"flex flex-row justify-between\">\r\n        <!-- min payment  -->\r\n        <span><p class=\"brave-body1\">Minimum Payment:&nbsp;</p></span>\r\n        <span><p class=\"brave-body1\">$50</p></span>\r\n      </div>\r\n\r\n      <div class=\"flex flex-row justify-between\">\r\n        <!-- date opened TODO swith to pipe  -->\r\n        <span><p class=\"brave-body1\">Date Opened:&nbsp;</p></span>\r\n        <span><p class=\"brave-body1\">02/01/2020</p></span>\r\n      </div>\r\n\r\n      <div class=\"flex flex-row justify-between\">\r\n        <!-- account status  -->\r\n        <span><p class=\"brave-body1\">Account Status:&nbsp;</p></span>\r\n        <span><p class=\"brave-body1\">In good standing</p></span>\r\n      </div>\r\n\r\n      <div class=\"flex flex-row justify-between\">\r\n        <!-- ownership of account  -->\r\n        <span><p class=\"brave-body1\">Ownership of account:&nbsp;</p></span>\r\n        <span><p class=\"brave-body1\">Self</p></span>\r\n      </div>\r\n\r\n      <div class=\"flex flex-row justify-between\">\r\n        <!-- credit limit  -->\r\n        <span><p class=\"brave-body1\">Days 30/60/90 Late:&nbsp;</p></span>\r\n        <span><p class=\"brave-body1\">1/0/0</p></span>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "MenuDropdownComponent",
            "id": "component-MenuDropdownComponent-d421304dea5e99260627beff85fd68c0",
            "file": "src/app/shared/components/dropdowns/popdowns/menu-dropdown/menu-dropdown.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-menu-dropdown",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./menu-dropdown.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "config",
                    "defaultValue": "{\r\n    menu: 'Menu',\r\n    submenus: [\r\n      { submenu: 'Sub 1', route: '/submenu1', group: 'Group 1' },\r\n      { submenu: 'Sub 2', route: '/submenu2' },\r\n      { submenu: 'Sub 3', route: '/submenu3' },\r\n      { submenu: 'Sub 4', route: '/submenu4' },\r\n      { submenu: 'Sub 5', route: '/submenu5', break: true },\r\n      { submenu: 'Sub 6', route: '/submenu6', group: 'Group 2' },\r\n      { submenu: 'Sub 7', route: '/submenu7' },\r\n      { submenu: 'Sub 8', route: '/submenu8', break: true },\r\n      { submenu: 'Sub 9', route: '/submenu9', group: 'Group 3' },\r\n      { submenu: 'Sub 10', route: '/submenu10' },\r\n    ],\r\n  }",
                    "line": 20,
                    "type": "IMenuDropdown"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "btnDropdownRef",
                    "type": "ElementRef | undefined",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'btnDropdownRef', {static: false}"
                        }
                    ]
                },
                {
                    "name": "dropdownPopoverShow",
                    "defaultValue": "false",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "popoverDropdownRef",
                    "type": "ElementRef | undefined",
                    "optional": false,
                    "description": "",
                    "line": 40,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'popoverDropdownRef', {static: false}"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "createPoppper",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 51
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 41
                },
                {
                    "name": "toggleDropdown",
                    "args": [
                        {
                            "name": "event",
                            "type": "literal type"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 42,
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "literal type",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, ElementRef, Input, OnInit, ViewChild } from '@angular/core';\r\nimport { createPopper } from '@popperjs/core';\r\n\r\nexport interface ISubmenuItem {\r\n  submenu: string;\r\n  route: string;\r\n  group?: string;\r\n  break?: boolean;\r\n}\r\nexport interface IMenuDropdown {\r\n  menu: string;\r\n  submenus?: ISubmenuItem[];\r\n}\r\n\r\n@Component({\r\n  selector: 'brave-menu-dropdown',\r\n  templateUrl: './menu-dropdown.component.html',\r\n})\r\nexport class MenuDropdownComponent implements OnInit {\r\n  @Input() config: IMenuDropdown = {\r\n    menu: 'Menu',\r\n    submenus: [\r\n      { submenu: 'Sub 1', route: '/submenu1', group: 'Group 1' },\r\n      { submenu: 'Sub 2', route: '/submenu2' },\r\n      { submenu: 'Sub 3', route: '/submenu3' },\r\n      { submenu: 'Sub 4', route: '/submenu4' },\r\n      { submenu: 'Sub 5', route: '/submenu5', break: true },\r\n      { submenu: 'Sub 6', route: '/submenu6', group: 'Group 2' },\r\n      { submenu: 'Sub 7', route: '/submenu7' },\r\n      { submenu: 'Sub 8', route: '/submenu8', break: true },\r\n      { submenu: 'Sub 9', route: '/submenu9', group: 'Group 3' },\r\n      { submenu: 'Sub 10', route: '/submenu10' },\r\n    ],\r\n  };\r\n  dropdownPopoverShow = false;\r\n  @ViewChild('btnDropdownRef', { static: false }) btnDropdownRef:\r\n    | ElementRef\r\n    | undefined;\r\n  @ViewChild('popoverDropdownRef', { static: false })\r\n  popoverDropdownRef: ElementRef | undefined;\r\n  ngOnInit() {}\r\n  toggleDropdown(event: { preventDefault: () => void }) {\r\n    event.preventDefault();\r\n    if (this.dropdownPopoverShow) {\r\n      this.dropdownPopoverShow = false;\r\n    } else {\r\n      this.dropdownPopoverShow = true;\r\n      this.createPoppper();\r\n    }\r\n  }\r\n  createPoppper() {\r\n    createPopper(\r\n      this.btnDropdownRef?.nativeElement,\r\n      this.popoverDropdownRef?.nativeElement,\r\n      {\r\n        placement: 'bottom-start',\r\n      }\r\n    );\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<a\r\n  class=\"font-sans text-sm uppercase hover:text-coolGray-500 text-coolGray-700 px-3 py-2 flex items-center\"\r\n  href=\"#\"\r\n  (click)=\"toggleDropdown($event)\"\r\n  #btnDropdownRef\r\n>\r\n  {{ config.menu }}\r\n</a>\r\n<div\r\n  class=\"bg-white text-base z-50 float-left py-2 list-none text-left rounded shadow-lg min-w-48\"\r\n  [ngClass]=\"dropdownPopoverShow ? 'block' : 'hidden'\"\r\n  #popoverDropdownRef\r\n>\r\n  <ng-container *ngFor=\"let submenu of config.submenus\">\r\n    <span\r\n      *ngIf=\"submenu.group\"\r\n      class=\"text-sm pt-2 pb-0 px-4 font-bold block w-full whitespace-nowrap bg-transparent text-blueGray-400\"\r\n    >\r\n      {{ submenu.group }}\r\n    </span>\r\n    <a\r\n      [routerLink]=\"[submenu.route]\"\r\n      class=\"text-sm py-2 px-4 font-normal block w-full whitespace-nowrap bg-transparent text-blueGray-700\"\r\n    >\r\n      {{ submenu.submenu }}\r\n    </a>\r\n    <div\r\n      *ngIf=\"submenu.break\"\r\n      class=\"h-0 mx-4 my-2 border border-solid border-blueGray-100\"\r\n    ></div>\r\n  </ng-container>\r\n</div>\r\n"
        },
        {
            "name": "NavigationTabsComponent",
            "id": "component-NavigationTabsComponent-73a4b481aed1aa6382e61d277d287abf",
            "file": "src/app/shared/components/tabs/navigation-tabs/navigation-tabs.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-navigation-tabs",
            "styleUrls": [
                "./navigation-tabs.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./navigation-tabs.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "openTab",
                    "defaultValue": "1",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12
                },
                {
                    "name": "toggleTabs",
                    "args": [
                        {
                            "name": "$tabNumber",
                            "type": "number"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "jsdoctags": [
                        {
                            "name": "$tabNumber",
                            "type": "number",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'brave-navigation-tabs',\n  templateUrl: './navigation-tabs.component.html',\n  styleUrls: ['./navigation-tabs.component.css']\n})\nexport class NavigationTabsComponent implements OnInit {\n  openTab = 1;\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  toggleTabs($tabNumber: number) {\n    this.openTab = $tabNumber;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./navigation-tabs.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 9
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"flex flex-wrap\">\n  <div class=\"w-full bottom-0 left-0 upper-shadow bg-white\">\n    <ul class=\"flex mb-0 list-none flex-wrap pt-3 pb-4 flex-row\">\n      <li class=\"-mb-px mr-1 last:mr-0 flex-auto text-center\">\n        <a\n          class=\"text-coolGray-700 flex flex-col items-center font-sans text-sm px-2 py-1 rounded block leading-normal\"\n          (click)=\"toggleTabs(1)\">\n          <span class=\"material-icons\">home</span>\n          <span class=\"text-2.5\">Home</span>\n        </a>\n      </li>\n      <li class=\"-mb-px mr-1 last:mr-0 flex-auto text-center\">\n        <a\n          class=\"text-coolGray-700 flex flex-col items-center font-sans text-sm px-2 py-1 rounded block leading-normal\"\n          (click)=\"toggleTabs(2)\">\n\t        <span class=\"material-icons\">credit_card</span>\n\t        <span class=\"text-2.5\">Credit</span>\n        </a>\n      </li>\n      <li class=\"-mb-px mr-1 last:mr-0 flex-auto text-center\">\n        <a\n          class=\"text-coolGray-700 flex flex-col items-center font-sans text-sm px-2 py-1 rounded block leading-normal\"\n          (click)=\"toggleTabs(3)\">\n\t\t    \t<span class=\"material-icons\">store</span>\n\t\t    \t<span class=\"text-2.5\">Marketplace</span>\n        </a>\n      </li>\n      <li class=\"-mb-px mr-1 last:mr-0 flex-auto text-center\">\n        <a\n          class=\"text-coolGray-700 flex flex-col items-center font-sans text-sm px-2 py-1 rounded block leading-normal\"\n          (click)=\"toggleTabs(3)\">\n\t        <span class=\"material-icons\">account_box</span>\n\t        <span class=\"text-2.5\">Account</span>\n        </a>\n      </li>\n    </ul>\n  </div>\n</div>\n"
        },
        {
            "name": "NotificationDropdownComponent",
            "id": "component-NotificationDropdownComponent-2233a9e8745e145726043ef183361edf",
            "file": "src/app/shared/components/dropdowns/popdowns/notification-dropdown/notification-dropdown.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-notification-dropdown",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./notification-dropdown.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "btnDropdownRef",
                    "type": "ElementRef | undefined",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'btnDropdownRef', {static: false}"
                        }
                    ]
                },
                {
                    "name": "dropdownPopoverShow",
                    "defaultValue": "false",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "popoverDropdownRef",
                    "type": "ElementRef | undefined",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'popoverDropdownRef', {static: false}"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15
                },
                {
                    "name": "toggleDropdown",
                    "args": [
                        {
                            "name": "event",
                            "type": "literal type"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "literal type",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, AfterViewInit, ViewChild, ElementRef } from '@angular/core';\r\nimport { createPopper } from '@popperjs/core';\r\n\r\n@Component({\r\n  selector: 'brave-notification-dropdown',\r\n  templateUrl: './notification-dropdown.component.html',\r\n})\r\nexport class NotificationDropdownComponent implements AfterViewInit {\r\n  dropdownPopoverShow = false;\r\n  @ViewChild('btnDropdownRef', { static: false }) btnDropdownRef:\r\n    | ElementRef\r\n    | undefined;\r\n  @ViewChild('popoverDropdownRef', { static: false })\r\n  popoverDropdownRef: ElementRef | undefined;\r\n  ngAfterViewInit() {\r\n    createPopper(\r\n      this.btnDropdownRef?.nativeElement,\r\n      this.popoverDropdownRef?.nativeElement,\r\n      {\r\n        placement: 'bottom-start',\r\n      }\r\n    );\r\n  }\r\n  toggleDropdown(event: { preventDefault: () => void }) {\r\n    event.preventDefault();\r\n    if (this.dropdownPopoverShow) {\r\n      this.dropdownPopoverShow = false;\r\n    } else {\r\n      this.dropdownPopoverShow = true;\r\n    }\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "implements": [
                "AfterViewInit"
            ],
            "templateData": "<a\r\n  class=\"text-blueGray-500 block py-1 px-3\"\r\n  href=\"#pablo\"\r\n  (click)=\"toggleDropdown($event)\"\r\n  #btnDropdownRef\r\n>\r\n  <i class=\"fas fa-bell\"></i>\r\n</a>\r\n<div class=\"min-w-48 z-50\" #popoverDropdownRef>\r\n  <div\r\n    class=\"bg-white text-base z-50 float-left py-2 list-none text-left rounded shadow-lg mt-1 min-w-48\"\r\n    [ngClass]=\"dropdownPopoverShow ? 'block' : 'hidden'\"\r\n  >\r\n    <a\r\n      href=\"#pablo\"\r\n      class=\"text-sm py-2 px-4 font-normal block w-full whitespace-nowrap bg-transparent text-blueGray-700\"\r\n    >\r\n      Action\r\n    </a>\r\n    <a\r\n      href=\"#pablo\"\r\n      class=\"text-sm py-2 px-4 font-normal block w-full whitespace-nowrap bg-transparent text-blueGray-700\"\r\n    >\r\n      Another action\r\n    </a>\r\n    <a\r\n      href=\"#pablo\"\r\n      class=\"text-sm py-2 px-4 font-normal block w-full whitespace-nowrap bg-transparent text-blueGray-700\"\r\n    >\r\n      Something else here\r\n    </a>\r\n    <div class=\"h-0 my-2 border border-solid border-blueGray-100\"></div>\r\n    <a\r\n      href=\"#pablo\"\r\n      class=\"text-sm py-2 px-4 font-normal block w-full whitespace-nowrap bg-transparent text-blueGray-700\"\r\n    >\r\n      Seprated link\r\n    </a>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "OnboardingComponent",
            "id": "component-OnboardingComponent-6b49286baddf75f9f4321fdcf3ee8a5f",
            "file": "src/app/layouts/onboarding/onboarding.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-onboarding",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./onboarding.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "onboarding",
                    "defaultValue": "{} as OnboardingStateModel",
                    "type": "OnboardingStateModel",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "onboarding$",
                    "defaultValue": "this.store.select(\n    OnboardingSelectors.getOnboarding\n  )",
                    "type": "Observable<OnboardingStateModel>",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "onboardingSub$",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "progressBar",
                    "type": "FilledChecktextProgressbarComponent | undefined",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "FilledChecktextProgressbarComponent"
                        }
                    ]
                },
                {
                    "name": "progressConfig",
                    "defaultValue": "{\r\n    size: 'base',\r\n  }",
                    "type": "IFilledChecktextProgressbarConfig",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "steps",
                    "defaultValue": "[\n    { id: 0, active: false, complete: false, name: 'Name' },\n    { id: 1, active: false, complete: false, name: 'Address' },\n    { id: 2, active: false, complete: false, name: 'Identity' },\n    { id: 3, active: false, complete: false, name: 'Verify' },\n  ]",
                    "type": "OnboardingStep[]",
                    "optional": false,
                    "description": "",
                    "line": 30
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<void>",
                    "typeParameters": [],
                    "line": 47,
                    "modifierKind": [
                        120
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { OnboardingService } from '@layouts/onboarding/onboarding.service';\nimport {\n  FilledChecktextProgressbarComponent,\n  IFilledChecktextProgressbarConfig,\n} from '@shared/components/progressbars/filled-checktext-progressbar/filled-checktext-progressbar.component';\nimport { OnboardingStateModel, OnboardingStep } from '@store/onboarding';\nimport { OnboardingSelectors } from '@store/onboarding/onboarding.selectors';\nimport { Store } from '@ngxs/store';\nimport { filter } from 'rxjs/operators';\nimport { Observable, Subscription } from 'rxjs';\nimport { AuthService } from '@shared/services/auth/auth.service';\n\n@Component({\n  selector: 'brave-onboarding',\n  templateUrl: './onboarding.component.html',\n})\nexport class OnboardingComponent {\n  @ViewChild(FilledChecktextProgressbarComponent)\n  progressBar: FilledChecktextProgressbarComponent | undefined;\n  progressConfig: IFilledChecktextProgressbarConfig = {\n    size: 'base',\n  };\n\n  onboarding: OnboardingStateModel = {} as OnboardingStateModel;\n  onboarding$: Observable<OnboardingStateModel> = this.store.select(\n    OnboardingSelectors.getOnboarding\n  );\n  onboardingSub$: Subscription;\n  steps: OnboardingStep[] = [\n    { id: 0, active: false, complete: false, name: 'Name' },\n    { id: 1, active: false, complete: false, name: 'Address' },\n    { id: 2, active: false, complete: false, name: 'Identity' },\n    { id: 3, active: false, complete: false, name: 'Verify' },\n  ];\n\n  constructor(private auth: AuthService, private store: Store) {\n    this.onboardingSub$ = this.onboarding$\n      .pipe(\n        filter((onboarding: OnboardingStateModel) => onboarding !== undefined)\n      )\n      .subscribe((onboarding: OnboardingStateModel) => {\n        this.onboarding = onboarding;\n      });\n  }\n\n  async ngOnInit(): Promise<void> {\n    await this.auth.reloadCredentials();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "auth",
                        "type": "AuthService"
                    },
                    {
                        "name": "store",
                        "type": "Store"
                    }
                ],
                "line": 35,
                "jsdoctags": [
                    {
                        "name": "auth",
                        "type": "AuthService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "store",
                        "type": "Store",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div>\n  <div\n    *ngIf=\"onboarding$ | async as data\"\n    class=\"container mx-auto max-w-xs h-full\"\n  >\n    <brave-filled-checktext-progressbar\n      [steps]=\"steps\"\n      [activatedStep]=\"data.lastActive\"\n      [completedStep]=\"data.lastComplete\"\n    ></brave-filled-checktext-progressbar>\n  </div>\n  <main>\n    <section class=\"relative w-full h-full min-h-screen\">\n      <router-outlet></router-outlet>\n    </section>\n  </main>\n</div>\n"
        },
        {
            "name": "OutlineAddressFormComponent",
            "id": "component-OutlineAddressFormComponent-1aea4b99d6d7989d25641601229caab3",
            "file": "src/app/shared/components/forms/outline-address-form/outline-address-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{ provide: , useValue:  }"
                }
            ],
            "selector": "brave-outline-address-form",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./outline-address-form.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "hideHint",
                    "defaultValue": "false",
                    "line": 16,
                    "type": "boolean",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "onChanges",
                    "defaultValue": "new EventEmitter()",
                    "line": 9,
                    "type": "EventEmitter<any>",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "onSubmit",
                    "defaultValue": "new EventEmitter()",
                    "line": 10,
                    "type": "EventEmitter<FormGroup>",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "onSubmitError",
                    "defaultValue": "new EventEmitter()",
                    "line": 12,
                    "type": "EventEmitter<literal type>",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "addressOneConfig",
                    "defaultValue": "{\r\n    size: 'sm',\r\n    type: 'text',\r\n    label: 'Street Address',\r\n    placeholder: 'Street Address',\r\n    autocomplete: 'address-line1',\r\n  }",
                    "type": "IOutlineInputeConfig",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "addressTwoConfig",
                    "defaultValue": "{\r\n    size: 'sm',\r\n    type: 'text',\r\n    label: '',\r\n    placeholder: 'Apt, Suite, Building, etc.',\r\n    autocomplete: 'address-line2',\r\n  }",
                    "type": "IOutlineInputeConfig",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "cityConfig",
                    "defaultValue": "{\r\n    size: 'sm',\r\n    type: 'text',\r\n    label: 'City',\r\n    placeholder: 'City',\r\n    autocomplete: 'address-level2',\r\n  }",
                    "type": "IOutlineInputeConfig",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "stateConfig",
                    "defaultValue": "{\r\n    size: 'sm',\r\n    label: 'State',\r\n    autocomplete: 'address-level3',\r\n    options: states,\r\n  }",
                    "type": "IOutlineSelectInputConfig",
                    "optional": false,
                    "description": "",
                    "line": 34,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "zipConfig",
                    "defaultValue": "{\r\n    size: 'sm',\r\n    type: 'text',\r\n    label: 'Zip',\r\n    placeholder: 'Zip',\r\n    autocomplete: 'postal-code',\r\n  }",
                    "type": "IOutlineInputeConfig",
                    "optional": false,
                    "description": "",
                    "line": 40,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "parentForm",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "addChild",
                    "args": [
                        {
                            "name": "childName",
                            "type": "string"
                        },
                        {
                            "name": "childGroup",
                            "type": "FormGroup"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "jsdoctags": [
                        {
                            "name": "childName",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "childGroup",
                            "type": "FormGroup",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "submitForm",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { BaseFormComponent } from '@shared/components/forms/base-form/base-form.component';\nimport { IOutlineInputeConfig } from '@shared/components/inputs/outline-input/outline-input.component';\nimport { IOutlineSelectInputConfig } from '@shared/components/inputs/outline-select-input/outline-select-input.component';\n\n@Component({\n  selector: 'brave-outline-address-form',\n  templateUrl: './outline-address-form.component.html',\n  providers: [{ provide: 'name', useValue: 'address-form' }],\n})\nexport class OutlineAddressFormComponent extends BaseFormComponent {\n  public addressOneConfig: IOutlineInputeConfig = {\n    size: 'sm',\n    type: 'text',\n    label: 'Street Address',\n    placeholder: 'Street Address',\n    autocomplete: 'address-line1',\n  };\n  public addressTwoConfig: IOutlineInputeConfig = {\n    size: 'sm',\n    type: 'text',\n    label: '',\n    placeholder: 'Apt, Suite, Building, etc.',\n    autocomplete: 'address-line2',\n  };\n  public cityConfig: IOutlineInputeConfig = {\n    size: 'sm',\n    type: 'text',\n    label: 'City',\n    placeholder: 'City',\n    autocomplete: 'address-level2',\n  };\n  public stateConfig: IOutlineSelectInputConfig = {\n    size: 'sm',\n    label: 'State',\n    autocomplete: 'address-level3',\n    options: states,\n  };\n  public zipConfig: IOutlineInputeConfig = {\n    size: 'sm',\n    type: 'text',\n    label: 'Zip',\n    placeholder: 'Zip',\n    autocomplete: 'postal-code',\n  };\n\n  constructor(fb: FormBuilder) {\n    super(fb, 'address-form');\n  }\n}\n\n// TODO ensure you have all states\nconst states = [\n  'AL',\n  'AK',\n  'AZ',\n  'AR',\n  'CA',\n  'CO',\n  'CT',\n  'DE',\n  'FL',\n  'GA',\n  'HI',\n  'ID',\n  'IL',\n  'IN',\n  'IA',\n  'KS',\n  'KY',\n  'LA',\n  'ME',\n  'MD',\n  'MA',\n  'MI',\n  'MN',\n  'MS',\n  'MO',\n  'MT',\n  'NE',\n  'NV',\n  'NH',\n  'NJ',\n  'NM',\n  'NY',\n  'NC',\n  'ND',\n  'OH',\n  'OK',\n  'OR',\n  'PA',\n  'RI',\n  'SC',\n  'SD',\n  'TN',\n  'TX',\n  'UT',\n  'VT',\n  'VA',\n  'WA',\n  'WV',\n  'WI',\n  'WY',\n];\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "fb",
                        "type": "FormBuilder"
                    }
                ],
                "line": 46,
                "jsdoctags": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "BaseFormComponent",
            "templateData": "<form [formGroup]=\"parentForm\">\r\n  <div class=\"grid grid-cols-3 gap-4\">\r\n    <div class=\"col-span-3\">\r\n      <brave-outline-input\r\n        [config]=\"addressOneConfig\"\r\n        (onComponentReady)=\"addChild('addressOne', $event)\"\r\n        [required]=\"true\"\r\n      >\r\n      </brave-outline-input>\r\n      <brave-outline-input\r\n        [config]=\"addressTwoConfig\"\r\n        (onComponentReady)=\"addChild('addressTwo', $event)\"\r\n        [required]=\"false\"\r\n      >\r\n      </brave-outline-input>\r\n    </div>\r\n    <div class=\"col-span-1\">\r\n      <brave-outline-input\r\n        [config]=\"cityConfig\"\r\n        (onComponentReady)=\"addChild('city', $event)\"\r\n        [required]=\"true\"\r\n      >\r\n      </brave-outline-input>\r\n      <div class=\"-mt-2\">\r\n        <div class=\"flex justify-start items-start text-xs text-blueGray-600\">\r\n          <span class=\"-mt-1\">&#42;</span>&nbsp;Required\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-span-1\">\r\n      <brave-outline-select-input\r\n        [config]=\"stateConfig\"\r\n        (onComponentReady)=\"addChild('state', $event)\"\r\n        [required]=\"true\"\r\n      >\r\n      </brave-outline-select-input>\r\n    </div>\r\n    <div class=\"col-span-1\">\r\n      <brave-outline-input\r\n        [config]=\"zipConfig\"\r\n        (onComponentReady)=\"addChild('zip', $event)\"\r\n        [required]=\"true\"\r\n      >\r\n      </brave-outline-input>\r\n    </div>\r\n  </div>\r\n</form>\r\n"
        },
        {
            "name": "OutlineInputComponent",
            "id": "component-OutlineInputComponent-72ea716466866a3ce9e1723155cf7ca1",
            "file": "src/app/shared/components/inputs/outline-input/outline-input.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-outline-input",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./outline-input.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "asteriskOverride",
                    "line": 53
                },
                {
                    "name": "config",
                    "defaultValue": "{\r\n    size: 'base',\r\n    label: 'Input label',\r\n    type: 'text',\r\n    placeholder: 'Input text',\r\n    autocomplete: 'off',\r\n    value: '',\r\n  }",
                    "line": 29,
                    "type": "IOutlineInputeConfig"
                },
                {
                    "name": "required",
                    "line": 42
                }
            ],
            "outputsClass": [
                {
                    "name": "onComponentReady",
                    "defaultValue": "new EventEmitter<FormGroup>()",
                    "line": 62,
                    "type": "EventEmitter<FormGroup>"
                },
                {
                    "name": "valueChanged",
                    "defaultValue": "new EventEmitter()",
                    "line": 60,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "_asteriskOverride",
                    "defaultValue": "false",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "_required",
                    "defaultValue": "false",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "componentFormGroup",
                    "defaultValue": "new FormBuilder().group({\r\n    input: [''],\r\n  })",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 64,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "hidden",
                    "defaultValue": "false",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 68,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "locked",
                    "defaultValue": "false",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 67,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 72
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\nexport interface IOutlineInputeConfig {\r\n  size: string;\r\n  label: string;\r\n  type: string;\r\n  placeholder: string;\r\n  autocomplete: string;\r\n  value?: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'brave-outline-input',\r\n  templateUrl: './outline-input.component.html',\r\n})\r\nexport class OutlineInputComponent implements OnInit {\r\n  private _required: boolean = false;\r\n  private _asteriskOverride: boolean = false;\r\n\r\n  /**\r\n   * @param Config Object to pass in component params\r\n   * @param config.size 'sm', 'base', 'lg'\r\n   * @param config.label Label text (default: 'Input label')\r\n   * @param config.placeholder Placeholder text (default: 'Input text')\r\n   * @param config.autocomplete Any HTML Input autocomplete value\r\n   * @param config.value (optional) Pre-load the input with a value\r\n   */\r\n  @Input() config: IOutlineInputeConfig = {\r\n    size: 'base',\r\n    label: 'Input label',\r\n    type: 'text',\r\n    placeholder: 'Input text',\r\n    autocomplete: 'off',\r\n    value: '',\r\n  };\r\n\r\n  /**\r\n   * @input Flag to make the input field required for form to be valid\r\n   */\r\n  @Input()\r\n  get required() {\r\n    return this._required;\r\n  }\r\n  set required(value: any) {\r\n    this._required = !!value;\r\n  }\r\n\r\n  /**\r\n   * @input Flag to override the display of an asterisk but still make it required\r\n   */\r\n  @Input()\r\n  get asteriskOverride() {\r\n    return this._asteriskOverride;\r\n  }\r\n  set asteriskOverride(value: any) {\r\n    this._asteriskOverride = !!value;\r\n  }\r\n\r\n  @Output() valueChanged: EventEmitter<any> = new EventEmitter();\r\n  @Output()\r\n  onComponentReady: EventEmitter<FormGroup> = new EventEmitter<FormGroup>();\r\n\r\n  public componentFormGroup: FormGroup = new FormBuilder().group({\r\n    input: [''],\r\n  });\r\n  public locked: boolean = false;\r\n  public hidden: boolean = false;\r\n\r\n  constructor(private fb: FormBuilder) {}\r\n\r\n  ngOnInit(): void {\r\n    const validators = [];\r\n    if (this.required) {\r\n      validators.push(Validators.required);\r\n    }\r\n    this.componentFormGroup = this.fb.group({\r\n      input: [this.config.value, validators],\r\n    });\r\n    this.componentFormGroup.controls.input.valueChanges.subscribe((value) =>\r\n      this.valueChanged.emit(value)\r\n    );\r\n    this.onComponentReady.emit(this.componentFormGroup);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "fb",
                        "type": "FormBuilder"
                    }
                ],
                "line": 68,
                "jsdoctags": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "required": {
                    "name": "required",
                    "setSignature": {
                        "name": "required",
                        "type": "void",
                        "args": [
                            {
                                "name": "value",
                                "type": "any"
                            }
                        ],
                        "returnType": "void",
                        "line": 45,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "any",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "asteriskOverride": {
                    "name": "asteriskOverride",
                    "setSignature": {
                        "name": "asteriskOverride",
                        "type": "void",
                        "args": [
                            {
                                "name": "value",
                                "type": "any"
                            }
                        ],
                        "returnType": "void",
                        "line": 56,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "any",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                }
            },
            "templateData": "<form [formGroup]=\"componentFormGroup\">\r\n  <div class=\"mb-5 pt-0\">\r\n    <label\r\n      for=\"input_field\"\r\n      class=\"block mb-2.5 text-sm text-blueGray-600 whitespace-nowrap\"\r\n      >{{ config?.label\r\n      }}<span *ngIf=\"required && !asteriskOverride\" class=\"-mt-1\"\r\n        >&#42;</span\r\n      ></label\r\n    >\r\n    <input\r\n      name=\"input_field\"\r\n      [type]=\"config?.type || 'text'\"\r\n      formControlName=\"input\"\r\n      [placeholder]=\"config?.placeholder || ''\"\r\n      [autocomplete]=\"config?.autocomplete || 'off'\"\r\n      [ngClass]=\"config | outlineInput\"\r\n      class=\"\r\n        placeholder-blueGray-300\r\n        text-blueGray-600\r\n        relative\r\n        bg-white\r\n        rounded\r\n        border border-blueGray-300\r\n        outline-none\r\n        focus:ring-0 focus:ring-indigo-800\r\n        w-full\r\n      \"\r\n    />\r\n  </div>\r\n</form>\r\n"
        },
        {
            "name": "OutlineNamedobFormComponent",
            "id": "component-OutlineNamedobFormComponent-ef4f292ff31566705c0eb11ee79b7e56",
            "file": "src/app/shared/components/forms/outline-namedob-form/outline-namedob-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{ provide: , useValue:  }"
                }
            ],
            "selector": "brave-outline-namedob-form",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./outline-namedob-form.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "hideHint",
                    "defaultValue": "false",
                    "line": 16,
                    "type": "boolean",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "onChanges",
                    "defaultValue": "new EventEmitter()",
                    "line": 9,
                    "type": "EventEmitter<any>",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "onSubmit",
                    "defaultValue": "new EventEmitter()",
                    "line": 10,
                    "type": "EventEmitter<FormGroup>",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "onSubmitError",
                    "defaultValue": "new EventEmitter()",
                    "line": 12,
                    "type": "EventEmitter<literal type>",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "dayConfig",
                    "defaultValue": "{\r\n    size: 'sm',\r\n    label: 'Day',\r\n    autocomplete: 'off',\r\n    options: this.addDays(31),\r\n  }",
                    "type": "IOutlineSelectInputConfig",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "firstNameConfig",
                    "defaultValue": "{\r\n    size: 'sm',\r\n    label: 'First Name',\r\n    type: 'text',\r\n    placeholder: 'First Name',\r\n    autocomplete: 'give-name',\r\n  }",
                    "type": "IOutlineInputeConfig",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "lastNameConfig",
                    "defaultValue": "{\r\n    size: 'sm',\r\n    label: 'Last Name',\r\n    type: 'text',\r\n    placeholder: 'Last Name',\r\n    autocomplete: 'family-name',\r\n  }",
                    "type": "IOutlineInputeConfig",
                    "optional": false,
                    "description": "",
                    "line": 47
                },
                {
                    "name": "middleNameConfig",
                    "defaultValue": "{\r\n    size: 'sm',\r\n    label: 'Middle Name',\r\n    type: 'text',\r\n    placeholder: 'Middle',\r\n    autocomplete: 'additional-name',\r\n  }",
                    "type": "IOutlineInputeConfig",
                    "optional": false,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "monthConfig",
                    "defaultValue": "{\r\n    size: 'sm',\r\n    label: 'Month',\r\n    autocomplete: 'off',\r\n    options: months,\r\n  }",
                    "type": "IOutlineSelectInputConfig",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "yearConfig",
                    "defaultValue": "{\r\n    size: 'sm',\r\n    label: 'Year',\r\n    autocomplete: 'off',\r\n    options: this.addYears(new Date().getFullYear()),\r\n  }",
                    "type": "IOutlineSelectInputConfig",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "parentForm",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "addDays",
                    "args": [
                        {
                            "name": "x",
                            "type": "number"
                        }
                    ],
                    "optional": false,
                    "returnType": "string[]",
                    "typeParameters": [],
                    "line": 62,
                    "jsdoctags": [
                        {
                            "name": "x",
                            "type": "number",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "addYears",
                    "args": [
                        {
                            "name": "x",
                            "type": "number"
                        }
                    ],
                    "optional": false,
                    "returnType": "string[]",
                    "typeParameters": [],
                    "line": 70,
                    "jsdoctags": [
                        {
                            "name": "x",
                            "type": "number",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 60
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 59
                },
                {
                    "name": "addChild",
                    "args": [
                        {
                            "name": "childName",
                            "type": "string"
                        },
                        {
                            "name": "childGroup",
                            "type": "FormGroup"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "jsdoctags": [
                        {
                            "name": "childName",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "childGroup",
                            "type": "FormGroup",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "submitForm",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder } from '@angular/forms';\r\nimport { BaseFormComponent } from '@shared/components/forms/base-form/base-form.component';\r\nimport { IOutlineInputeConfig } from '@shared/components/inputs/outline-input/outline-input.component';\r\nimport { IOutlineSelectInputConfig } from '@shared/components/inputs/outline-select-input/outline-select-input.component';\r\n\r\n@Component({\r\n  selector: 'brave-outline-namedob-form',\r\n  templateUrl: './outline-namedob-form.component.html',\r\n  providers: [{ provide: 'name', useValue: 'namedob-form' }],\r\n})\r\nexport class OutlineNamedobFormComponent\r\n  extends BaseFormComponent\r\n  implements OnInit {\r\n  monthConfig: IOutlineSelectInputConfig = {\r\n    size: 'sm',\r\n    label: 'Month',\r\n    autocomplete: 'off',\r\n    options: months,\r\n  };\r\n  dayConfig: IOutlineSelectInputConfig = {\r\n    size: 'sm',\r\n    label: 'Day',\r\n    autocomplete: 'off',\r\n    options: this.addDays(31),\r\n  };\r\n  yearConfig: IOutlineSelectInputConfig = {\r\n    size: 'sm',\r\n    label: 'Year',\r\n    autocomplete: 'off',\r\n    options: this.addYears(new Date().getFullYear()),\r\n  };\r\n  firstNameConfig: IOutlineInputeConfig = {\r\n    size: 'sm',\r\n    label: 'First Name',\r\n    type: 'text',\r\n    placeholder: 'First Name',\r\n    autocomplete: 'give-name',\r\n  };\r\n  middleNameConfig: IOutlineInputeConfig = {\r\n    size: 'sm',\r\n    label: 'Middle Name',\r\n    type: 'text',\r\n    placeholder: 'Middle',\r\n    autocomplete: 'additional-name',\r\n  };\r\n  lastNameConfig: IOutlineInputeConfig = {\r\n    size: 'sm',\r\n    label: 'Last Name',\r\n    type: 'text',\r\n    placeholder: 'Last Name',\r\n    autocomplete: 'family-name',\r\n  };\r\n\r\n  constructor(fb: FormBuilder) {\r\n    super(fb, 'namedob-form');\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n  ngOnDestroy(): void {}\r\n\r\n  addDays(x: number): string[] {\r\n    let days: string[] = [];\r\n    for (let i = x; i > 0; i--) {\r\n      days = [i.toString(), ...days];\r\n    }\r\n    return days;\r\n  }\r\n\r\n  addYears(x: number): string[] {\r\n    let years: string[] = [];\r\n    for (let i = x; i > x - 100; i--) {\r\n      years = [...years, i.toString()];\r\n    }\r\n    return years;\r\n  }\r\n}\r\n\r\nconst months: string[] = [\r\n  'Jan',\r\n  'Feb',\r\n  'Mar',\r\n  'Apr',\r\n  'May',\r\n  'Jun',\r\n  'Jul',\r\n  'Aug',\r\n  'Sep',\r\n  'Oct',\r\n  'Nov',\r\n  'Dec',\r\n];\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "fb",
                        "type": "FormBuilder"
                    }
                ],
                "line": 53,
                "jsdoctags": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "BaseFormComponent",
            "implements": [
                "OnInit"
            ],
            "templateData": "<form [formGroup]=\"parentForm\" class=\"m-0 p-0\">\r\n  <div class=\"py-3\">\r\n    <h6 class=\"brave-h6\">Full Legal Name</h6>\r\n  </div>\r\n\r\n  <div class=\"py-3 pt-0\">\r\n    <div class=\"grid grid-cols-3 gap-4\">\r\n      <div class=\"col-span-2\">\r\n        <brave-outline-input\r\n          [config]=\"firstNameConfig\"\r\n          (onComponentReady)=\"addChild('first', $event)\"\r\n          [required]=\"true\"\r\n        >\r\n        </brave-outline-input>\r\n      </div>\r\n      <div>\r\n        <brave-outline-input\r\n          [config]=\"middleNameConfig\"\r\n          (onComponentReady)=\"addChild('middle', $event)\"\r\n          [required]=\"false\"\r\n        >\r\n        </brave-outline-input>\r\n      </div>\r\n      <div class=\"col-span-3\">\r\n        <div>\r\n          <brave-outline-input\r\n            [config]=\"lastNameConfig\"\r\n            (onComponentReady)=\"addChild('last', $event)\"\r\n            [required]=\"true\"\r\n          >\r\n          </brave-outline-input>\r\n          <div *ngIf=\"!hideHint\" class=\"-mt-2\">\r\n            <div\r\n              class=\"flex justify-start items-start text-xs text-blueGray-600\"\r\n            >\r\n              <span class=\"-mt-1\">&#42;</span>&nbsp;Required\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- section 2 header -->\r\n  <div class=\"py-3\">\r\n    <h6 class=\"brave-h6\">Date of Birth<span class=\"-mt-1\">&#42;</span></h6>\r\n  </div>\r\n\r\n  <div class=\"py-3-pt-0\">\r\n    <div class=\"grid grid-cols-3 gap-2\">\r\n      <div>\r\n        <brave-outline-select-input\r\n          [config]=\"monthConfig\"\r\n          (onComponentReady)=\"addChild('month', $event)\"\r\n          [required]=\"true\"\r\n          [asteriskOverride]=\"true\"\r\n        >\r\n        </brave-outline-select-input>\r\n        <div class=\"-mt-2\">\r\n          <div class=\"flex justify-start items-start text-xs text-blueGray-600\">\r\n            <span class=\"-mt-1\">&#42;</span>&nbsp;Required\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <brave-outline-select-input\r\n          [config]=\"dayConfig\"\r\n          (onComponentReady)=\"addChild('day', $event)\"\r\n          [required]=\"true\"\r\n          [asteriskOverride]=\"true\"\r\n        >\r\n        </brave-outline-select-input>\r\n      </div>\r\n      <div>\r\n        <div>\r\n          <brave-outline-select-input\r\n            [config]=\"yearConfig\"\r\n            (onComponentReady)=\"addChild('year', $event)\"\r\n            [required]=\"true\"\r\n            [asteriskOverride]=\"true\"\r\n          >\r\n          </brave-outline-select-input>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</form>\r\n"
        },
        {
            "name": "OutlineNameFormComponent",
            "id": "component-OutlineNameFormComponent-fa7d472a3f44e1f5d06d2bc4e4134428",
            "file": "src/app/shared/components/forms/outline-name-form/outline-name-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{ provide: , useValue:  }"
                }
            ],
            "selector": "brave-outline-name-form",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./outline-name-form.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "hideHint",
                    "defaultValue": "false",
                    "line": 16,
                    "type": "boolean",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "onChanges",
                    "defaultValue": "new EventEmitter()",
                    "line": 9,
                    "type": "EventEmitter<any>",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "onSubmit",
                    "defaultValue": "new EventEmitter()",
                    "line": 10,
                    "type": "EventEmitter<FormGroup>",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "onSubmitError",
                    "defaultValue": "new EventEmitter()",
                    "line": 12,
                    "type": "EventEmitter<literal type>",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "firstNameConfig",
                    "defaultValue": "{\r\n    size: 'sm',\r\n    label: 'First Name',\r\n    type: 'text',\r\n    placeholder: 'First Name',\r\n    autocomplete: 'give-name',\r\n  }",
                    "type": "IOutlineInputeConfig",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "lastNameConfig",
                    "defaultValue": "{\r\n    size: 'sm',\r\n    label: 'Last Name',\r\n    type: 'text',\r\n    placeholder: 'Last Name',\r\n    autocomplete: 'family-name',\r\n  }",
                    "type": "IOutlineInputeConfig",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "middleNameConfig",
                    "defaultValue": "{\r\n    size: 'sm',\r\n    label: 'Middle Name',\r\n    type: 'text',\r\n    placeholder: 'Middle',\r\n    autocomplete: 'additional-name',\r\n  }",
                    "type": "IOutlineInputeConfig",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "parentForm",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "addChild",
                    "args": [
                        {
                            "name": "childName",
                            "type": "string"
                        },
                        {
                            "name": "childGroup",
                            "type": "FormGroup"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "jsdoctags": [
                        {
                            "name": "childName",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "childGroup",
                            "type": "FormGroup",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "submitForm",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { FormBuilder } from '@angular/forms';\r\nimport { BaseFormComponent } from '@shared/components/forms/base-form/base-form.component';\r\nimport { IOutlineInputeConfig } from '@shared/components/inputs/outline-input/outline-input.component';\r\n\r\n@Component({\r\n  selector: 'brave-outline-name-form',\r\n  templateUrl: './outline-name-form.component.html',\r\n  providers: [{ provide: 'name', useValue: 'address-form' }],\r\n})\r\nexport class OutlineNameFormComponent extends BaseFormComponent {\r\n  firstNameConfig: IOutlineInputeConfig = {\r\n    size: 'sm',\r\n    label: 'First Name',\r\n    type: 'text',\r\n    placeholder: 'First Name',\r\n    autocomplete: 'give-name',\r\n  };\r\n  middleNameConfig: IOutlineInputeConfig = {\r\n    size: 'sm',\r\n    label: 'Middle Name',\r\n    type: 'text',\r\n    placeholder: 'Middle',\r\n    autocomplete: 'additional-name',\r\n  };\r\n  lastNameConfig: IOutlineInputeConfig = {\r\n    size: 'sm',\r\n    label: 'Last Name',\r\n    type: 'text',\r\n    placeholder: 'Last Name',\r\n    autocomplete: 'family-name',\r\n  };\r\n\r\n  constructor(fb: FormBuilder) {\r\n    super(fb, 'name-form');\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "fb",
                        "type": "FormBuilder"
                    }
                ],
                "line": 32,
                "jsdoctags": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "BaseFormComponent",
            "templateData": "<form [formGroup]=\"parentForm\">\r\n  <div class=\"grid grid-cols-3 gap-4\">\r\n    <div class=\"col-span-2\">\r\n      <brave-outline-input\r\n        [config]=\"firstNameConfig\"\r\n        (onComponentReady)=\"addChild('first', $event)\"\r\n        [required]=\"true\"\r\n      >\r\n      </brave-outline-input>\r\n    </div>\r\n    <div>\r\n      <brave-outline-input\r\n        [config]=\"middleNameConfig\"\r\n        (onComponentReady)=\"addChild('middle', $event)\"\r\n        [required]=\"false\"\r\n      >\r\n      </brave-outline-input>\r\n    </div>\r\n    <div class=\"col-span-3\">\r\n      <div>\r\n        <brave-outline-input\r\n          [config]=\"lastNameConfig\"\r\n          (onComponentReady)=\"addChild('last', $event)\"\r\n          [required]=\"true\"\r\n        >\r\n        </brave-outline-input>\r\n        <div *ngIf=\"!hideHint\" class=\"-mt-2\">\r\n          <div class=\"flex justify-start items-start text-xs text-blueGray-600\">\r\n            <span class=\"-mt-1\">&#42;</span>&nbsp;Required\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</form>\r\n"
        },
        {
            "name": "OutlineOnecolumnFormComponent",
            "id": "component-OutlineOnecolumnFormComponent-9bab5b9b073de04037abec95346b4093",
            "file": "src/app/shared/components/forms/outline-onecolumn-form/outline-onecolumn-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-outline-onecolumn-form",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./outline-onecolumn-form.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "childFieldConfig",
                    "defaultValue": "{\r\n    size: 'sm',\r\n    label: 'Input Label',\r\n    type: 'text',\r\n    placeholder: 'Input text',\r\n    autocomplete: 'off',\r\n  }",
                    "type": "IOutlineInputeConfig",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "parentForm",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methodsClass": [
                {
                    "name": "addChild",
                    "args": [
                        {
                            "name": "childName",
                            "type": "string"
                        },
                        {
                            "name": "childGroup",
                            "type": "FormGroup"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "jsdoctags": [
                        {
                            "name": "childName",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "childGroup",
                            "type": "FormGroup",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from '@angular/forms';\r\nimport { IOutlineInputeConfig } from '@shared/components/inputs/outline-input/outline-input.component';\r\n\r\n@Component({\r\n  selector: 'brave-outline-onecolumn-form',\r\n  templateUrl: './outline-onecolumn-form.component.html',\r\n})\r\nexport class OutlineOnecolumnFormComponent implements OnInit {\r\n  parentForm: FormGroup;\r\n  childFieldConfig: IOutlineInputeConfig = {\r\n    size: 'sm',\r\n    label: 'Input Label',\r\n    type: 'text',\r\n    placeholder: 'Input text',\r\n    autocomplete: 'off',\r\n  };\r\n\r\n  constructor(private fb: FormBuilder) {\r\n    this.parentForm = fb.group({\r\n      name: ['outline-onecolumn-form'],\r\n    }); // simple parent form with name of form\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  addChild(childName: string, childGroup: FormGroup) {\r\n    this.parentForm.addControl(childName, childGroup);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "fb",
                        "type": "FormBuilder"
                    }
                ],
                "line": 17,
                "jsdoctags": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<form [formGroup]=\"parentForm\">\r\n  <brave-outline-input\r\n    [config]=\"childFieldConfig\"\r\n    (onComponentReady)=\"addChild('inputGroup', $event)\"\r\n    required=\"true\"\r\n  >\r\n  </brave-outline-input>\r\n  <brave-outline-input\r\n    [config]=\"childFieldConfig\"\r\n    (onComponentReady)=\"addChild('inputGroup', $event)\"\r\n    required=\"true\"\r\n  >\r\n  </brave-outline-input>\r\n  <brave-outline-input\r\n    [config]=\"childFieldConfig\"\r\n    (onComponentReady)=\"addChild('inputGroup', $event)\"\r\n    required=\"true\"\r\n  >\r\n  </brave-outline-input>\r\n  <div>\r\n    <div class=\"flex justify-end items-end\">\r\n      <brave-links-onlytext-button>Cancel</brave-links-onlytext-button>\r\n      <brave-filled-onlytext-button>Continue</brave-filled-onlytext-button>\r\n    </div>\r\n  </div>\r\n</form>\r\n"
        },
        {
            "name": "OutlineOnlytextButtonComponent",
            "id": "component-OutlineOnlytextButtonComponent-4a2204bb99ba7565cae610f909645abf",
            "file": "src/app/shared/components/buttons/outline-onlytext-button/outline-onlytext-button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-outline-onlytext-button",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./outline-onlytext-button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "config",
                    "defaultValue": "{\r\n    buttonSize: 'base',\r\n    borderColor: 'border-indigo-800',\r\n    activeColor: 'bg-indigo-900',\r\n    hoverColor: 'bg-indigo-800',\r\n    color: 'text-indigo-800',\r\n  }",
                    "line": 24,
                    "type": "IOutlineOnlyTextButtonConfig"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\r\n\r\nexport interface IOutlineOnlyTextButtonConfig {\r\n  buttonSize: string;\r\n  borderColor: string;\r\n  activeColor: string;\r\n  hoverColor: string;\r\n  color: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'brave-outline-onlytext-button',\r\n  templateUrl: './outline-onlytext-button.component.html',\r\n})\r\nexport class OutlineOnlytextButtonComponent {\r\n  /**\r\n   * @param config Input object for button customization\r\n   * @param config.buttonSize 'sm', 'base', 'lg'\r\n   * @param config.borderColor Any global color \"e.g. border-indigo-800\"\r\n   * @param config.activeColor Any global color \"e.g. bg-indigo-900\"\r\n   * @param config.hoverColor Any global color \"e.g. bg-indigo-800\"\r\n   * @param config.color Any global color \"e.g. text-indigo-900\"\r\n   */\r\n  @Input() config: IOutlineOnlyTextButtonConfig = {\r\n    buttonSize: 'base',\r\n    borderColor: 'border-indigo-800',\r\n    activeColor: 'bg-indigo-900',\r\n    hoverColor: 'bg-indigo-800',\r\n    color: 'text-indigo-800',\r\n  };\r\n\r\n  constructor() {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 30
            },
            "templateData": "<button\r\n  [ngClass]=\"config | outlineOnlytextButton\"\r\n  class=\"\r\n    bg-transparent\r\n    border border-solid\r\n    font-bold\r\n    rounded\r\n    outline-none\r\n    focus:outline-none\r\n    mr-1\r\n    mb-1\r\n    ease-linear\r\n    transition-all\r\n    duration-150\r\n  \"\r\n  type=\"button\"\r\n>\r\n  <ng-content></ng-content>\r\n</button>\r\n"
        },
        {
            "name": "OutlineOnlytextSelectComponent",
            "id": "component-OutlineOnlytextSelectComponent-ebaeb58767d52d8669265bc57735c89d",
            "file": "src/app/shared/components/dropdowns/selects/outline-onlytext-select/outline-onlytext-select.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-outline-onlytext-select",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./outline-onlytext-select.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "items",
                    "defaultValue": "[]",
                    "line": 12,
                    "type": "IOutlineOnlyTextItem[]"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "isOpen",
                    "defaultValue": "false",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "selected",
                    "type": "IOutlineOnlyTextItem | undefined",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\r\n\r\nexport interface IOutlineOnlyTextItem {\r\n  value: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'brave-outline-onlytext-select',\r\n  templateUrl: './outline-onlytext-select.component.html',\r\n})\r\nexport class OutlineOnlytextSelectComponent implements OnInit {\r\n  @Input() items: IOutlineOnlyTextItem[] = [];\r\n\r\n  public selected: IOutlineOnlyTextItem | undefined;\r\n  public isOpen: boolean = false;\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {\r\n    // this.selected = this.items[0]; // default to first one\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 15
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<button\r\n  type=\"button\"\r\n  class=\"relative w-full bg-white border border-gray-300 rounded-md shadow-sm pl-3 pr-10 py-2 text-left cursor-default focus:outline-none focus:ring-1 focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n  aria-haspopup=\"listbox\"\r\n  aria-expanded=\"true\"\r\n  aria-labelledby=\"listbox-label\"\r\n  (click)=\"isOpen = !isOpen\"\r\n>\r\n  <span class=\"flex items-center\">\r\n    <span class=\"ml-3 block truncate\">\r\n      {{ selected?.value || \"Select item\" }}\r\n    </span>\r\n  </span>\r\n  <span\r\n    class=\"ml-3 absolute inset-y-0 right-0 flex items-center pr-2 pointer-events-none\"\r\n  >\r\n    <svg\r\n      class=\"h-5 w-5 text-gray-400\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      viewBox=\"0 0 20 20\"\r\n      fill=\"currentColor\"\r\n      aria-hidden=\"true\"\r\n    >\r\n      <path\r\n        fill-rule=\"evenodd\"\r\n        d=\"M10 3a1 1 0 01.707.293l3 3a1 1 0 01-1.414 1.414L10 5.414 7.707 7.707a1 1 0 01-1.414-1.414l3-3A1 1 0 0110 3zm-3.707 9.293a1 1 0 011.414 0L10 14.586l2.293-2.293a1 1 0 011.414 1.414l-3 3a1 1 0 01-1.414 0l-3-3a1 1 0 010-1.414z\"\r\n        clip-rule=\"evenodd\"\r\n      />\r\n    </svg>\r\n  </span>\r\n</button>\r\n<ul\r\n  *ngIf=\"isOpen\"\r\n  class=\"absolute z-10 mt-1 w-full bg-white shadow-lg max-h-56 rounded-md py-1 text-base ring-1 ring-black ring-opacity-5 overflow-auto focus:outline-none sm:text-sm\"\r\n  tabindex=\"-1\"\r\n  role=\"listbox\"\r\n  aria-labelledby=\"listbox-label\"\r\n  aria-activedescendant=\"listbox-option-3\"\r\n>\r\n  <li\r\n    *ngFor=\"let item of items; index as i\"\r\n    (click)=\"isOpen = !isOpen; selected = items[i]\"\r\n    class=\"text-gray-900 cursor-default select-none relative py-2 pl-3 pr-9\"\r\n    id=\"listbox-option-0\"\r\n    role=\"option\"\r\n  >\r\n    <div class=\"flex items-center\">\r\n      <span class=\"font-normal ml-3 block truncate\"> {{ item.value }}</span>\r\n    </div>\r\n    <span\r\n      class=\"text-indigo-600 absolute inset-y-0 right-0 flex items-center pr-4\"\r\n    ></span>\r\n  </li>\r\n</ul>\r\n"
        },
        {
            "name": "OutlinePhoneFormComponent",
            "id": "component-OutlinePhoneFormComponent-a34cc0a71a32a65b0af24ba6f84bf959",
            "file": "src/app/shared/components/forms/outline-phone-form/outline-phone-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{ provide: , useValue:  }"
                }
            ],
            "selector": "brave-outline-phone-form",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./outline-phone-form.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "hideHint",
                    "defaultValue": "false",
                    "line": 16,
                    "type": "boolean",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "onChanges",
                    "defaultValue": "new EventEmitter()",
                    "line": 9,
                    "type": "EventEmitter<any>",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "onSubmit",
                    "defaultValue": "new EventEmitter()",
                    "line": 10,
                    "type": "EventEmitter<FormGroup>",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "onSubmitError",
                    "defaultValue": "new EventEmitter()",
                    "line": 12,
                    "type": "EventEmitter<literal type>",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "phoneConfig",
                    "defaultValue": "{\r\n    size: 'sm',\r\n    type: 'text',\r\n    label: 'Phone Number',\r\n    placeholder: 'Phone Number',\r\n    autocomplete: 'phone',\r\n  }",
                    "type": "IOutlineInputeConfig",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "parentForm",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "addChild",
                    "args": [
                        {
                            "name": "childName",
                            "type": "string"
                        },
                        {
                            "name": "childGroup",
                            "type": "FormGroup"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "jsdoctags": [
                        {
                            "name": "childName",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "childGroup",
                            "type": "FormGroup",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "submitForm",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { FormBuilder } from '@angular/forms';\r\nimport { BaseFormComponent } from '@shared/components/forms/base-form/base-form.component';\r\nimport { IOutlineInputeConfig } from '@shared/components/inputs/outline-input/outline-input.component';\r\n\r\n@Component({\r\n  selector: 'brave-outline-phone-form',\r\n  templateUrl: './outline-phone-form.component.html',\r\n  providers: [{ provide: 'name', useValue: 'phone-form' }],\r\n})\r\nexport class OutlinePhoneFormComponent extends BaseFormComponent {\r\n  public phoneConfig: IOutlineInputeConfig = {\r\n    size: 'sm',\r\n    type: 'text',\r\n    label: 'Phone Number',\r\n    placeholder: 'Phone Number',\r\n    autocomplete: 'phone',\r\n  };\r\n\r\n  constructor(fb: FormBuilder) {\r\n    super(fb, 'phone-form');\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "fb",
                        "type": "FormBuilder"
                    }
                ],
                "line": 18,
                "jsdoctags": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "BaseFormComponent",
            "templateData": "<form [formGroup]=\"parentForm\">\r\n  <div class=\"grid grid-cols-3 gap-4\">\r\n    <div class=\"col-span-3\">\r\n      <brave-outline-input\r\n        [config]=\"phoneConfig\"\r\n        (onComponentReady)=\"addChild('phone', $event)\"\r\n        [required]=\"true\"\r\n      >\r\n      </brave-outline-input>\r\n      <div *ngIf=\"!hideHint\" class=\"-mt-2\">\r\n        <div class=\"flex justify-start items-start text-xs text-blueGray-600\">\r\n          <span class=\"-mt-1\">&#42;</span>&nbsp;Required\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</form>\r\n"
        },
        {
            "name": "OutlinePrevnextPaginationComponent",
            "id": "component-OutlinePrevnextPaginationComponent-993d1e8f9cb98e55a33811e698a73472",
            "file": "src/app/shared/components/paginations/outline-prevnext-pagination/outline-prevnext-pagination.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-outline-prevnext-pagination",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./outline-prevnext-pagination.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 10
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'brave-outline-prevnext-pagination',\r\n  templateUrl: './outline-prevnext-pagination.component.html',\r\n})\r\nexport class OutlinePrevnextPaginationComponent implements OnInit {\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 7
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div\r\n  class=\"bg-white px-4 py-3 flex items-center justify-between border-t border-gray-200 sm:px-6\"\r\n>\r\n  <div class=\"flex-1 flex justify-between sm:hidden\">\r\n    <a\r\n      href=\"#\"\r\n      class=\"relative inline-flex items-center px-4 py-2 border border-indigo-800 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50\"\r\n    >\r\n      Previous\r\n    </a>\r\n    <a\r\n      href=\"#\"\r\n      class=\"ml-3 relative inline-flex items-center px-4 py-2 border border-indigo-800 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50\"\r\n    >\r\n      Next\r\n    </a>\r\n  </div>\r\n  <div class=\"hidden sm:flex-1 sm:flex sm:items-center sm:justify-between\">\r\n    <div></div>\r\n    <div>\r\n      <nav class=\"relative z-0 inline-flex\" aria-label=\"Pagination\">\r\n        <a\r\n          href=\"#\"\r\n          class=\"relative inline-flex items-center m-1 px-2 py-2 rounded-l-md border-none bg-white text-sm font-medium hover:bg-gray-50\"\r\n        >\r\n          <span class=\"sr-only\">Previous</span>\r\n          <!-- Heroicon name: solid/chevron-left -->\r\n          <span class=\"material-icons text-indigo-800\">navigate_before</span>\r\n          <!-- <svg\r\n            class=\"h-5 w-5\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            viewBox=\"0 0 20 20\"\r\n            fill=\"currentColor\"\r\n            aria-hidden=\"true\"\r\n          >\r\n            <path\r\n              fill-rule=\"evenodd\"\r\n              d=\"M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z\"\r\n              clip-rule=\"evenodd\"\r\n            />\r\n          </svg> -->\r\n        </a>\r\n        <!-- Current: \"z-10 bg-indigo-50 border-indigo-500 text-indigo-600\", Default: \"bg-white border-gray-300 text-gray-500 hover:bg-gray-50\" -->\r\n        <a\r\n          href=\"#\"\r\n          aria-current=\"page\"\r\n          class=\"z-10 bg-indigo-800 border-indigo-800 rounded-md text-white relative inline-flex items-center m-1 px-2 py-2 border text-sm font-medium\"\r\n        >\r\n          <div class=\"w-4 h-4 flex justify-center items-center\">1</div>\r\n        </a>\r\n        <a\r\n          href=\"#\"\r\n          class=\"bg-white border-indigo-800 font-sans rounded-md font-semibold text-sm text-indigo-800 hover:bg-gray-50 relative inline-flex items-center m-1 px-2 py-2 border\"\r\n        >\r\n          <div class=\"w-4 h-4 flex justify-center items-center\">2</div>\r\n        </a>\r\n        <a\r\n          href=\"#\"\r\n          class=\"bg-white border-indigo-800 font-sans rounded-md font-semibold text-sm text-indigo-800 hover:bg-gray-50 hidden md:inline-flex relative items-center m-1 px-2 py-2 border\"\r\n        >\r\n          <div class=\"w-4 h-4 flex justify-center items-center\">3</div>\r\n        </a>\r\n        <span\r\n          class=\"relative inline-flex items-center m-1 px-2 py-2 border border-indigo-800 rounded-md bg-white text-sm font-medium text-gray-700\"\r\n        >\r\n          <div class=\"w-4 h-4 flex justify-center items-center\">...</div>\r\n        </span>\r\n        <a\r\n          href=\"#\"\r\n          class=\"bg-white border-indigo-800 font-sans rounded-md font-semibold text-sm text-indigo-800 hover:bg-gray-50 hidden md:inline-flex relative items-center m-1 px-2 py-2 border\"\r\n        >\r\n          <div class=\"w-4 h-4 flex justify-center items-center\">8</div>\r\n        </a>\r\n        <a\r\n          href=\"#\"\r\n          class=\"bg-white border-indigo-800 font-sans rounded-md font-semibold text-sm text-indigo-800 hover:bg-gray-50 relative inline-flex items-center m-1 px-2 py-2 border\"\r\n        >\r\n          <div class=\"w-4 h-4 flex justify-center items-center\">9</div>\r\n        </a>\r\n        <a\r\n          href=\"#\"\r\n          class=\"bg-white border-indigo-800 font-sans rounded-md font-semibold text-sm text-indigo-800 hover:bg-gray-50 relative inline-flex items-center m-1 px-2 py-2 border\"\r\n        >\r\n          <div class=\"w-4 h-4 flex justify-center items-center\">10</div>\r\n        </a>\r\n        <a\r\n          href=\"#\"\r\n          class=\"relative inline-flex items-center m-1 px-2 py-2 rounded-r-md border-none bg-white text-sm font-medium hover:bg-gray-50\"\r\n        >\r\n          <span class=\"sr-only\">Next</span>\r\n          <!-- Heroicon name: solid/chevron-right -->\r\n          <span class=\"material-icons text-indigo-800\">navigate_next</span>\r\n          <!-- <svg\r\n            class=\"h-5 w-5\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            viewBox=\"0 0 20 20\"\r\n            fill=\"currentColor\"\r\n            aria-hidden=\"true\"\r\n          >\r\n            <path\r\n              fill-rule=\"evenodd\"\r\n              d=\"M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z\"\r\n              clip-rule=\"evenodd\"\r\n            />\r\n          </svg> -->\r\n        </a>\r\n      </nav>\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "OutlineSelectInputComponent",
            "id": "component-OutlineSelectInputComponent-d7534f1c348d740cc4e57c5904f70a94",
            "file": "src/app/shared/components/inputs/outline-select-input/outline-select-input.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-outline-select-input",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./outline-select-input.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "asteriskOverride",
                    "line": 49
                },
                {
                    "name": "config",
                    "defaultValue": "{\r\n    size: 'base',\r\n    label: 'Input label',\r\n    autocomplete: 'off',\r\n    options: ['one', 'two', 'three'],\r\n  }",
                    "line": 27,
                    "type": "IOutlineSelectInputConfig"
                },
                {
                    "name": "required",
                    "line": 38
                }
            ],
            "outputsClass": [
                {
                    "name": "onComponentReady",
                    "defaultValue": "new EventEmitter<FormGroup>()",
                    "line": 58,
                    "type": "EventEmitter<FormGroup>"
                },
                {
                    "name": "valueChanged",
                    "defaultValue": "new EventEmitter()",
                    "line": 56,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "_asteriskOverride",
                    "defaultValue": "false",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "_required",
                    "defaultValue": "false",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "componentFormGroup",
                    "defaultValue": "new FormBuilder().group({\r\n    input: [''],\r\n  })",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 60,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "hidden",
                    "defaultValue": "false",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 64,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "isOpen",
                    "defaultValue": "false",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "locked",
                    "defaultValue": "false",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 63,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "selected",
                    "type": "string | undefined",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 68
                },
                {
                    "name": "toggleOpen",
                    "args": [
                        {
                            "name": "e",
                            "type": "MouseEvent"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 86,
                    "description": "<p>Toggles open and close select options</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 2403,
                                "end": 2404,
                                "flags": 0,
                                "escapedText": "e"
                            },
                            "type": "MouseEvent",
                            "tagName": {
                                "pos": 2397,
                                "end": 2402,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": "<p>MouseEvent to stop propagation.</p>\n"
                        }
                    ]
                },
                {
                    "name": "updateForm",
                    "args": [
                        {
                            "name": "idx",
                            "type": "number"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 95,
                    "description": "<p>Updates the form with the selected option value</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 2621,
                                "end": 2624,
                                "flags": 0,
                                "escapedText": "idx"
                            },
                            "type": "number",
                            "tagName": {
                                "pos": 2615,
                                "end": 2620,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": "<p>index of the select option clicked on</p>\n"
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\nexport interface IOutlineSelectInputConfig {\r\n  size: string;\r\n  label: string;\r\n  autocomplete: string;\r\n  options: string[];\r\n}\r\n\r\n@Component({\r\n  selector: 'brave-outline-select-input',\r\n  templateUrl: './outline-select-input.component.html',\r\n})\r\nexport class OutlineSelectInputComponent implements OnInit {\r\n  private _required: boolean = false;\r\n  private _asteriskOverride: boolean = false;\r\n  public selected: string | undefined;\r\n  public isOpen: boolean = false;\r\n\r\n  /**\r\n   * @param Config Object to pass in component params\r\n   * @param config.size 'sm', 'base', 'lg'\r\n   * @param config.label Label text (default: 'Input label')\r\n   * @param config.options select options to choose from\r\n   */\r\n  @Input() config: IOutlineSelectInputConfig = {\r\n    size: 'base',\r\n    label: 'Input label',\r\n    autocomplete: 'off',\r\n    options: ['one', 'two', 'three'],\r\n  };\r\n\r\n  /**\r\n   * @input Flag to make the input field required for form to be valid\r\n   */\r\n  @Input()\r\n  get required() {\r\n    return this._required;\r\n  }\r\n  set required(value: any) {\r\n    this._required = !!value;\r\n  }\r\n\r\n  /**\r\n   * @input Flag to override the display of an asterisk but still make it required\r\n   */\r\n  @Input()\r\n  get asteriskOverride() {\r\n    return this._asteriskOverride;\r\n  }\r\n  set asteriskOverride(value: any) {\r\n    this._asteriskOverride = !!value;\r\n  }\r\n\r\n  @Output() valueChanged: EventEmitter<any> = new EventEmitter();\r\n  @Output()\r\n  onComponentReady: EventEmitter<FormGroup> = new EventEmitter<FormGroup>();\r\n\r\n  public componentFormGroup: FormGroup = new FormBuilder().group({\r\n    input: [''],\r\n  });\r\n  public locked: boolean = false;\r\n  public hidden: boolean = false;\r\n\r\n  constructor(private fb: FormBuilder) {}\r\n\r\n  ngOnInit(): void {\r\n    const validators = [];\r\n    if (this.required) {\r\n      validators.push(Validators.required);\r\n    }\r\n    this.componentFormGroup = this.fb.group({\r\n      input: [this.config.label, validators], // default to first item in array\r\n    });\r\n    this.componentFormGroup.controls.input.valueChanges.subscribe((value) => {\r\n      this.valueChanged.emit(value);\r\n    });\r\n    this.onComponentReady.emit(this.componentFormGroup);\r\n  }\r\n\r\n  /**\r\n   * Toggles open and close select options\r\n   * @param e MouseEvent to stop propagation.\r\n   */\r\n  toggleOpen(e: MouseEvent): void {\r\n    e.stopPropagation();\r\n    this.isOpen = !this.isOpen;\r\n  }\r\n\r\n  /**\r\n   * Updates the form with the selected option value\r\n   * @param idx index of the select option clicked on\r\n   */\r\n  updateForm(idx: number): void {\r\n    this.componentFormGroup.setValue({ input: this.config.options[idx] });\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "fb",
                        "type": "FormBuilder"
                    }
                ],
                "line": 64,
                "jsdoctags": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "required": {
                    "name": "required",
                    "setSignature": {
                        "name": "required",
                        "type": "void",
                        "args": [
                            {
                                "name": "value",
                                "type": "any"
                            }
                        ],
                        "returnType": "void",
                        "line": 41,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "any",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "asteriskOverride": {
                    "name": "asteriskOverride",
                    "setSignature": {
                        "name": "asteriskOverride",
                        "type": "void",
                        "args": [
                            {
                                "name": "value",
                                "type": "any"
                            }
                        ],
                        "returnType": "void",
                        "line": 52,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "any",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                }
            },
            "templateData": "<form [formGroup]=\"componentFormGroup\">\r\n  <div class=\"mb-5 pt-0\">\r\n    <label\r\n      for=\"select_field\"\r\n      class=\"block mb-2.5 text-sm text-blueGray-600 whitespace-nowrap\"\r\n      >{{ config?.label\r\n      }}<span *ngIf=\"required && !asteriskOverride\" class=\"-mt-1\"\r\n        >&#42;</span\r\n      ></label\r\n    >\r\n    <div\r\n      [ngClass]=\"config | outlineSelectInput\"\r\n      class=\"relative bg-white rounded border border-blueGray-300 outline-none w-full\"\r\n      (click)=\"toggleOpen($event)\"\r\n    >\r\n      <input\r\n        #selectInput\r\n        name=\"select_field\"\r\n        formControlName=\"input\"\r\n        [autocomplete]=\"config?.autocomplete || 'off'\"\r\n        style=\"width: 0px; height: 0px\"\r\n        class=\"absolute\"\r\n      />\r\n      <div\r\n        class=\"flex justify-between items-center w-full hover:cursor-pointer\"\r\n      >\r\n        <span\r\n          [ngClass]=\"{\r\n            'text-blueGray-300': selectInput.value === config.label,\r\n            'text-blueGray-600': selectInput.value !== config.label\r\n          }\"\r\n          >{{ selectInput.value || \"Select item\" }}</span\r\n        >\r\n        <span class=\"material-icons text-blueGray-600\">expand_more</span>\r\n      </div>\r\n      <ul\r\n        *ngIf=\"isOpen\"\r\n        class=\"absolute z-10 mt-2 -ml-1 w-full bg-white text-blueGray-600 shadow-lg max-h-56 rounded-md py-1 text-base ring-1 ring-black ring-opacity-5 overflow-auto focus:outline-none sm:text-sm\"\r\n      >\r\n        <li\r\n          *ngFor=\"let opt of config.options; index as i\"\r\n          (click)=\"toggleOpen($event); updateForm(i)\"\r\n          class=\"bg-white hover:bg-gray-50 hover:cursor-pointer my-2\"\r\n        >\r\n          <div class=\"flex items-center\">\r\n            <span class=\"font-normal ml-3 block truncate\"> {{ opt }}</span>\r\n          </div>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</form>\r\n"
        },
        {
            "name": "OutlineTooltipComponent",
            "id": "component-OutlineTooltipComponent-589fc5455d94309a82b660cbfe21ba54",
            "file": "src/app/shared/components/tooltips/outline-tooltip/outline-tooltip.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-outline-tooltip",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./outline-tooltip.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "body",
                    "defaultValue": "'Body'",
                    "line": 10,
                    "type": "string"
                },
                {
                    "name": "position",
                    "defaultValue": "'top'",
                    "line": 11,
                    "type": "Placement"
                },
                {
                    "name": "title",
                    "defaultValue": "'Title'",
                    "line": 9,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\r\nimport { Placement } from '@popperjs/core';\r\n\r\n@Component({\r\n  selector: 'brave-outline-tooltip',\r\n  templateUrl: './outline-tooltip.component.html',\r\n})\r\nexport class OutlineTooltipComponent implements OnInit {\r\n  @Input() title: string = 'Title';\r\n  @Input() body: string = 'Body';\r\n  @Input() position: Placement = 'top';\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 11
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"flex flex-wrap\">\r\n  <div class=\"w-full text-center\" style=\"margin-top: 40vh\">\r\n    <button\r\n      braveOutlineTooltip\r\n      [title]=\"title\"\r\n      [body]=\"body\"\r\n      [position]=\"position\"\r\n      class=\"bg-red-500 text-white active:bg-red-600 font-bold uppercase text-sm px-6 py-3 rounded shadow hover:shadow-lg outline-none focus:outline-none mr-1 mb-1 ease-linear transition-all duration-150\"\r\n      type=\"button\"\r\n    >\r\n      top red\r\n    </button>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "OutlineVerificationcodeFormComponent",
            "id": "component-OutlineVerificationcodeFormComponent-ec99e3d43be9c018996798e97260b0ac",
            "file": "src/app/shared/components/forms/outline-verificationcode-form/outline-verificationcode-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{ provide: , useValue:  }"
                }
            ],
            "selector": "brave-outline-verificationcode-form",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./outline-verificationcode-form.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "hideHint",
                    "defaultValue": "false",
                    "line": 16,
                    "type": "boolean",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "onChanges",
                    "defaultValue": "new EventEmitter()",
                    "line": 9,
                    "type": "EventEmitter<any>",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "onSubmit",
                    "defaultValue": "new EventEmitter()",
                    "line": 10,
                    "type": "EventEmitter<FormGroup>",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "onSubmitError",
                    "defaultValue": "new EventEmitter()",
                    "line": 12,
                    "type": "EventEmitter<literal type>",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "codeConfig",
                    "defaultValue": "{\r\n    size: 'sm',\r\n    type: 'text',\r\n    label: 'Code',\r\n    placeholder: '5-digit Code',\r\n    autocomplete: 'off',\r\n  }",
                    "type": "IOutlineInputeConfig",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "parentForm",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "addChild",
                    "args": [
                        {
                            "name": "childName",
                            "type": "string"
                        },
                        {
                            "name": "childGroup",
                            "type": "FormGroup"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "jsdoctags": [
                        {
                            "name": "childName",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "childGroup",
                            "type": "FormGroup",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "submitForm",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { FormBuilder } from '@angular/forms';\r\nimport { BaseFormComponent } from '@shared/components/forms/base-form/base-form.component';\r\nimport { IOutlineInputeConfig } from '@shared/components/inputs/outline-input/outline-input.component';\r\n\r\n@Component({\r\n  selector: 'brave-outline-verificationcode-form',\r\n  templateUrl: './outline-verificationcode-form.component.html',\r\n  providers: [{ provide: 'name', useValue: 'code-form' }],\r\n})\r\nexport class OutlineVerificationcodeFormComponent extends BaseFormComponent {\r\n  public codeConfig: IOutlineInputeConfig = {\r\n    size: 'sm',\r\n    type: 'text',\r\n    label: 'Code',\r\n    placeholder: '5-digit Code',\r\n    autocomplete: 'off',\r\n  };\r\n\r\n  constructor(fb: FormBuilder) {\r\n    super(fb, 'code-form');\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "fb",
                        "type": "FormBuilder"
                    }
                ],
                "line": 18,
                "jsdoctags": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "BaseFormComponent",
            "templateData": "<form [formGroup]=\"parentForm\">\r\n  <div class=\"grid grid-cols-3 gap-4\">\r\n    <div class=\"col-span-3\">\r\n      <brave-outline-input\r\n        [config]=\"codeConfig\"\r\n        (onComponentReady)=\"addChild('code', $event)\"\r\n        [required]=\"true\"\r\n      >\r\n      </brave-outline-input>\r\n      <div *ngIf=\"!hideHint\" class=\"-mt-2\">\r\n        <div class=\"flex justify-start items-start text-xs text-blueGray-600\">\r\n          <span class=\"-mt-1\">&#42;</span>&nbsp;Required\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</form>\r\n"
        },
        {
            "name": "PagesDropdownComponent",
            "id": "component-PagesDropdownComponent-4cfc47792d00678067b737a3465f8225",
            "file": "src/app/shared/components/dropdowns/popdowns/pages-dropdown/pages-dropdown.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-pages-dropdown",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./pages-dropdown.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "btnDropdownRef",
                    "type": "ElementRef | undefined",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'btnDropdownRef', {static: false}"
                        }
                    ]
                },
                {
                    "name": "dropdownPopoverShow",
                    "defaultValue": "false",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "popoverDropdownRef",
                    "type": "ElementRef | undefined",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'popoverDropdownRef', {static: false}"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "createPoppper",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15
                },
                {
                    "name": "toggleDropdown",
                    "args": [
                        {
                            "name": "event",
                            "type": "literal type"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "literal type",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\r\nimport { createPopper } from '@popperjs/core';\r\n\r\n@Component({\r\n  selector: 'brave-pages-dropdown',\r\n  templateUrl: './pages-dropdown.component.html',\r\n})\r\nexport class PagesDropdownComponent implements OnInit {\r\n  dropdownPopoverShow = false;\r\n  @ViewChild('btnDropdownRef', { static: false }) btnDropdownRef:\r\n    | ElementRef\r\n    | undefined;\r\n  @ViewChild('popoverDropdownRef', { static: false })\r\n  popoverDropdownRef: ElementRef | undefined;\r\n  ngOnInit() {}\r\n  toggleDropdown(event: { preventDefault: () => void }) {\r\n    event.preventDefault();\r\n    if (this.dropdownPopoverShow) {\r\n      this.dropdownPopoverShow = false;\r\n    } else {\r\n      this.dropdownPopoverShow = true;\r\n      this.createPoppper();\r\n    }\r\n  }\r\n  createPoppper() {\r\n    createPopper(\r\n      this.btnDropdownRef?.nativeElement,\r\n      this.popoverDropdownRef?.nativeElement,\r\n      {\r\n        placement: 'bottom-start',\r\n      }\r\n    );\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<a\r\n  class=\"lg:text-white lg:hover:text-blueGray-200 text-blueGray-700 px-3 py-4 lg:py-2 flex items-center text-xs uppercase font-bold\"\r\n  href=\"#pablo\"\r\n  (click)=\"toggleDropdown($event)\"\r\n  #btnDropdownRef\r\n>\r\n  Demo Pages\r\n</a>\r\n<div\r\n  class=\"bg-white text-base z-50 float-left py-2 list-none text-left rounded shadow-lg min-w-48\"\r\n  [ngClass]=\"dropdownPopoverShow ? 'block' : 'hidden'\"\r\n  #popoverDropdownRef\r\n>\r\n  <span\r\n    class=\"text-sm pt-2 pb-0 px-4 font-bold block w-full whitespace-nowrap bg-transparent text-blueGray-400\"\r\n  >\r\n    Admin Layout\r\n  </span>\r\n  <a\r\n    [routerLink]=\"['/admin/dashboard']\"\r\n    class=\"text-sm py-2 px-4 font-normal block w-full whitespace-nowrap bg-transparent text-blueGray-700\"\r\n  >\r\n    Dashboard\r\n  </a>\r\n  <a\r\n    [routerLink]=\"['/admin/settings']\"\r\n    class=\"text-sm py-2 px-4 font-normal block w-full whitespace-nowrap bg-transparent text-blueGray-700\"\r\n  >\r\n    Settings\r\n  </a>\r\n  <a\r\n    [routerLink]=\"['/admin/tables']\"\r\n    class=\"text-sm py-2 px-4 font-normal block w-full whitespace-nowrap bg-transparent text-blueGray-700\"\r\n  >\r\n    Tables\r\n  </a>\r\n  <a\r\n    [routerLink]=\"['/admin/maps']\"\r\n    class=\"text-sm py-2 px-4 font-normal block w-full whitespace-nowrap bg-transparent text-blueGray-700\"\r\n  >\r\n    Maps\r\n  </a>\r\n  <div class=\"h-0 mx-4 my-2 border border-solid border-blueGray-100\"></div>\r\n  <span\r\n    class=\"text-sm pt-2 pb-0 px-4 font-bold block w-full whitespace-nowrap bg-transparent text-blueGray-400\"\r\n  >\r\n    Auth Layout\r\n  </span>\r\n  <a\r\n    [routerLink]=\"['/auth/login']\"\r\n    class=\"text-sm py-2 px-4 font-normal block w-full whitespace-nowrap bg-transparent text-blueGray-700\"\r\n  >\r\n    Login\r\n  </a>\r\n  <a\r\n    [routerLink]=\"['/auth/register']\"\r\n    class=\"text-sm py-2 px-4 font-normal block w-full whitespace-nowrap bg-transparent text-blueGray-700\"\r\n  >\r\n    Register\r\n  </a>\r\n  <div class=\"h-0 mx-4 my-2 border border-solid border-blueGray-100\"></div>\r\n  <span\r\n    class=\"text-sm pt-2 pb-0 px-4 font-bold block w-full whitespace-nowrap bg-transparent text-blueGray-400\"\r\n  >\r\n    No Layout\r\n  </span>\r\n  <a\r\n    [routerLink]=\"['/landing']\"\r\n    class=\"text-sm py-2 px-4 font-normal block w-full whitespace-nowrap bg-transparent text-blueGray-700\"\r\n  >\r\n    Landing\r\n  </a>\r\n  <a\r\n    [routerLink]=\"['/profile']\"\r\n    class=\"text-sm py-2 px-4 font-normal block w-full whitespace-nowrap bg-transparent text-blueGray-700\"\r\n  >\r\n    Profile\r\n  </a>\r\n</div>\r\n"
        },
        {
            "name": "SelectDobFormComponent",
            "id": "component-SelectDobFormComponent-b4b61dc994120b4b7f845e94a28c01dc",
            "file": "src/app/shared/components/forms/select-dob-form/select-dob-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{ provide: , useValue:  }"
                }
            ],
            "selector": "brave-select-dob-form",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./select-dob-form.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "hideHint",
                    "defaultValue": "false",
                    "line": 16,
                    "type": "boolean",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "onChanges",
                    "defaultValue": "new EventEmitter()",
                    "line": 9,
                    "type": "EventEmitter<any>",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "onSubmit",
                    "defaultValue": "new EventEmitter()",
                    "line": 10,
                    "type": "EventEmitter<FormGroup>",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "onSubmitError",
                    "defaultValue": "new EventEmitter()",
                    "line": 12,
                    "type": "EventEmitter<literal type>",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "dayConfig",
                    "defaultValue": "{\r\n    size: 'sm',\r\n    label: 'Day',\r\n    autocomplete: 'off',\r\n    options: this.addDays(31),\r\n  }",
                    "type": "IOutlineSelectInputConfig",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "monthConfig",
                    "defaultValue": "{\r\n    size: 'sm',\r\n    label: 'Month',\r\n    autocomplete: 'off',\r\n    options: months,\r\n  }",
                    "type": "IOutlineSelectInputConfig",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "yearConfig",
                    "defaultValue": "{\r\n    size: 'sm',\r\n    label: 'Year',\r\n    autocomplete: 'off',\r\n    options: this.addYears(new Date().getFullYear()),\r\n  }",
                    "type": "IOutlineSelectInputConfig",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "parentForm",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "addDays",
                    "args": [
                        {
                            "name": "x",
                            "type": "number"
                        }
                    ],
                    "optional": false,
                    "returnType": "string[]",
                    "typeParameters": [],
                    "line": 34,
                    "jsdoctags": [
                        {
                            "name": "x",
                            "type": "number",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "addYears",
                    "args": [
                        {
                            "name": "x",
                            "type": "number"
                        }
                    ],
                    "optional": false,
                    "returnType": "string[]",
                    "typeParameters": [],
                    "line": 42,
                    "jsdoctags": [
                        {
                            "name": "x",
                            "type": "number",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "addChild",
                    "args": [
                        {
                            "name": "childName",
                            "type": "string"
                        },
                        {
                            "name": "childGroup",
                            "type": "FormGroup"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "jsdoctags": [
                        {
                            "name": "childName",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "childGroup",
                            "type": "FormGroup",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "submitForm",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { FormBuilder } from '@angular/forms';\r\nimport { BaseFormComponent } from '@shared/components/forms/base-form/base-form.component';\r\nimport { IOutlineSelectInputConfig } from '@shared/components/inputs/outline-select-input/outline-select-input.component';\r\n\r\n@Component({\r\n  selector: 'brave-select-dob-form',\r\n  templateUrl: './select-dob-form.component.html',\r\n  providers: [{ provide: 'name', useValue: 'dob-form' }],\r\n})\r\nexport class SelectDobFormComponent extends BaseFormComponent {\r\n  monthConfig: IOutlineSelectInputConfig = {\r\n    size: 'sm',\r\n    label: 'Month',\r\n    autocomplete: 'off',\r\n    options: months,\r\n  };\r\n  dayConfig: IOutlineSelectInputConfig = {\r\n    size: 'sm',\r\n    label: 'Day',\r\n    autocomplete: 'off',\r\n    options: this.addDays(31),\r\n  };\r\n  yearConfig: IOutlineSelectInputConfig = {\r\n    size: 'sm',\r\n    label: 'Year',\r\n    autocomplete: 'off',\r\n    options: this.addYears(new Date().getFullYear()),\r\n  };\r\n  constructor(fb: FormBuilder) {\r\n    super(fb, 'dob-form');\r\n  }\r\n\r\n  addDays(x: number): string[] {\r\n    let days: string[] = [];\r\n    for (let i = x; i > 0; i--) {\r\n      days = [i.toString(), ...days];\r\n    }\r\n    return days;\r\n  }\r\n\r\n  addYears(x: number): string[] {\r\n    let years: string[] = [];\r\n    for (let i = x; i > x - 100; i--) {\r\n      years = [...years, i.toString()];\r\n    }\r\n    return years;\r\n  }\r\n}\r\n\r\nconst months: string[] = [\r\n  'Jan',\r\n  'Feb',\r\n  'Mar',\r\n  'Apr',\r\n  'May',\r\n  'Jun',\r\n  'Jul',\r\n  'Aug',\r\n  'Sep',\r\n  'Oct',\r\n  'Nov',\r\n  'Dec',\r\n];\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "fb",
                        "type": "FormBuilder"
                    }
                ],
                "line": 29,
                "jsdoctags": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "BaseFormComponent",
            "templateData": "<form [formGroup]=\"parentForm\">\r\n  <div class=\"grid grid-cols-3 gap-2\">\r\n    <div>\r\n      <brave-outline-select-input\r\n        [config]=\"monthConfig\"\r\n        (onComponentReady)=\"addChild('month', $event)\"\r\n        [required]=\"true\"\r\n        [asteriskOverride]=\"true\"\r\n      >\r\n      </brave-outline-select-input>\r\n      <div class=\"-mt-2\">\r\n        <div class=\"flex justify-start items-start text-xs text-blueGray-600\">\r\n          <span class=\"-mt-1\">&#42;</span>&nbsp;Required\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div>\r\n      <brave-outline-select-input\r\n        [config]=\"dayConfig\"\r\n        (onComponentReady)=\"addChild('day', $event)\"\r\n        [required]=\"true\"\r\n        [asteriskOverride]=\"true\"\r\n      >\r\n      </brave-outline-select-input>\r\n    </div>\r\n    <div>\r\n      <div>\r\n        <brave-outline-select-input\r\n          [config]=\"yearConfig\"\r\n          (onComponentReady)=\"addChild('year', $event)\"\r\n          [required]=\"true\"\r\n          [asteriskOverride]=\"true\"\r\n        >\r\n        </brave-outline-select-input>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</form>\r\n"
        },
        {
            "name": "SidebarComponent",
            "id": "component-SidebarComponent-6ddec9e2424d160da873e687a28a6929",
            "file": "src/app/shared/components/sidebar/sidebar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-sidebar",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./sidebar.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "collapseShow",
                    "defaultValue": "'hidden'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 11
                },
                {
                    "name": "toggleCollapseShow",
                    "args": [
                        {
                            "name": "classes",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "jsdoctags": [
                        {
                            "name": "classes",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'brave-sidebar',\r\n  templateUrl: './sidebar.component.html',\r\n})\r\nexport class SidebarComponent implements OnInit {\r\n  collapseShow = 'hidden';\r\n  constructor() {}\r\n\r\n  ngOnInit() {}\r\n  toggleCollapseShow(classes: string) {\r\n    this.collapseShow = classes;\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<nav\r\n  class=\"md:left-0 md:block md:fixed md:top-0 md:bottom-0 md:overflow-y-auto md:flex-row md:flex-nowrap md:overflow-hidden shadow-xl bg-white flex flex-wrap items-center justify-between relative md:w-64 z-10 py-4 px-6\"\r\n>\r\n  <div\r\n    class=\"md:flex-col md:items-stretch md:min-h-full md:flex-nowrap px-0 flex flex-wrap items-center justify-between w-full mx-auto\"\r\n  >\r\n    <!-- Toggler -->\r\n    <button\r\n      class=\"cursor-pointer text-black opacity-50 md:hidden px-3 py-1 text-xl leading-none bg-transparent rounded border border-solid border-transparent\"\r\n      type=\"button\"\r\n      (click)=\"toggleCollapseShow('bg-white m-2 py-3 px-6')\"\r\n    >\r\n      <i class=\"fas fa-bars\"></i>\r\n    </button>\r\n    <!-- Brand -->\r\n    <a\r\n      [routerLink]=\"['/']\"\r\n      class=\"md:block text-left md:pb-2 text-blueGray-600 mr-0 inline-block whitespace-nowrap text-sm uppercase font-bold p-4 px-0\"\r\n    >\r\n      <span class=\"block sm:hidden\"> Tailwind Angular </span>\r\n      <span class=\"hidden sm:block\"> Notus Angular </span>\r\n    </a>\r\n    <!-- User -->\r\n    <ul class=\"md:hidden items-center flex flex-wrap list-none\">\r\n      <li class=\"inline-block relative\">\r\n        <brave-notification-dropdown\r\n          class=\"block\"\r\n        ></brave-notification-dropdown>\r\n      </li>\r\n      <li class=\"inline-block relative\">\r\n        <brave-user-dropdown class=\"block\"></brave-user-dropdown>\r\n      </li>\r\n    </ul>\r\n    <!-- Collapse -->\r\n    <div\r\n      class=\"md:flex md:flex-col md:items-stretch md:opacity-100 md:relative md:mt-4 md:shadow-none shadow absolute top-0 left-0 right-0 z-40 overflow-y-auto overflow-x-hidden h-auto items-center flex-1 rounded\"\r\n      [ngClass]=\"collapseShow\"\r\n    >\r\n      <!-- Collapse header -->\r\n      <div\r\n        class=\"md:min-w-full md:hidden block pb-4 mb-4 border-b border-solid border-blueGray-200\"\r\n      >\r\n        <div class=\"flex flex-wrap\">\r\n          <div class=\"w-6/12\">\r\n            <a\r\n              [routerLink]=\"['/']\"\r\n              class=\"md:block text-left md:pb-2 text-blueGray-600 mr-0 inline-block whitespace-nowrap text-sm uppercase font-bold p-4 px-0\"\r\n            >\r\n              Notus Angular\r\n            </a>\r\n          </div>\r\n          <div class=\"w-6/12 flex justify-end\">\r\n            <button\r\n              type=\"button\"\r\n              class=\"cursor-pointer text-black opacity-50 md:hidden px-3 py-1 text-xl leading-none bg-transparent rounded border border-solid border-transparent\"\r\n              (click)=\"toggleCollapseShow('hidden')\"\r\n            >\r\n              <i class=\"fas fa-times\"></i>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <!-- Form -->\r\n      <form class=\"mt-6 mb-4 md:hidden\">\r\n        <div class=\"mb-3 pt-0\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Search\"\r\n            class=\"border-0 px-3 py-2 h-12 border border-solid border-blueGray-500 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-base leading-snug shadow-none outline-none focus:outline-none w-full font-normal\"\r\n          />\r\n        </div>\r\n      </form>\r\n\r\n      <!-- Divider -->\r\n      <hr class=\"my-4 md:min-w-full\" />\r\n      <!-- Heading -->\r\n      <h6\r\n        class=\"md:min-w-full text-blueGray-500 text-xs uppercase font-bold block pt-1 pb-4 no-underline\"\r\n      >\r\n        Admin Layout Pages\r\n      </h6>\r\n      <!-- Navigation -->\r\n\r\n      <ul class=\"md:flex-col md:min-w-full flex flex-col list-none\">\r\n        <li class=\"items-center\">\r\n          <a\r\n            [routerLink]=\"['/admin/dashboard']\"\r\n            class=\"text-xs uppercase py-3 font-bold block\"\r\n            routerLinkActive\r\n            #adminDashboard=\"routerLinkActive\"\r\n            [ngClass]=\"\r\n              adminDashboard.isActive\r\n                ? 'text-red-600 hover:text-red-700'\r\n                : 'text-blueGray-700 hover:text-blueGray-500'\r\n            \"\r\n          >\r\n            <i\r\n              class=\"fas fa-tv mr-2 text-sm\"\r\n              [ngClass]=\"\r\n                adminDashboard.isActive ? 'opacity-75' : 'text-blueGray-300'\r\n              \"\r\n            ></i>\r\n            Dashboard\r\n          </a>\r\n        </li>\r\n\r\n        <li class=\"items-center\">\r\n          <a\r\n            [routerLink]=\"['/admin/settings']\"\r\n            class=\"text-xs uppercase py-3 font-bold block\"\r\n            routerLinkActive\r\n            #adminSettings=\"routerLinkActive\"\r\n            [ngClass]=\"\r\n              adminSettings.isActive\r\n                ? 'text-red-600 hover:text-red-700'\r\n                : 'text-blueGray-700 hover:text-blueGray-500'\r\n            \"\r\n          >\r\n            <i\r\n              class=\"fas fa-tools mr-2 text-sm\"\r\n              [ngClass]=\"\r\n                adminSettings.isActive ? 'opacity-75' : 'text-blueGray-300'\r\n              \"\r\n            ></i>\r\n            Settings\r\n          </a>\r\n        </li>\r\n\r\n        <li class=\"items-center\">\r\n          <a\r\n            [routerLink]=\"['/admin/tables']\"\r\n            class=\"text-xs uppercase py-3 font-bold block\"\r\n            routerLinkActive\r\n            #adminTables=\"routerLinkActive\"\r\n            [ngClass]=\"\r\n              adminTables.isActive\r\n                ? 'text-red-600 hover:text-red-700'\r\n                : 'text-blueGray-700 hover:text-blueGray-500'\r\n            \"\r\n          >\r\n            <i\r\n              class=\"fas fa-table mr-2 text-sm\"\r\n              [ngClass]=\"\r\n                adminTables.isActive ? 'opacity-75' : 'text-blueGray-300'\r\n              \"\r\n            ></i>\r\n            Tables\r\n          </a>\r\n        </li>\r\n\r\n        <li class=\"items-center\">\r\n          <a\r\n            [routerLink]=\"['/admin/maps']\"\r\n            class=\"text-xs uppercase py-3 font-bold block\"\r\n            routerLinkActive\r\n            #adminMaps=\"routerLinkActive\"\r\n            [ngClass]=\"\r\n              adminMaps.isActive\r\n                ? 'text-red-600 hover:text-red-700'\r\n                : 'text-blueGray-700 hover:text-blueGray-500'\r\n            \"\r\n          >\r\n            <i\r\n              class=\"fas fa-map-marked mr-2 text-sm\"\r\n              [ngClass]=\"\r\n                adminMaps.isActive ? 'opacity-75' : 'text-blueGray-300'\r\n              \"\r\n            ></i>\r\n            Maps\r\n          </a>\r\n        </li>\r\n      </ul>\r\n\r\n      <!-- Divider -->\r\n      <hr class=\"my-4 md:min-w-full\" />\r\n      <!-- Heading -->\r\n      <h6\r\n        class=\"md:min-w-full text-blueGray-500 text-xs uppercase font-bold block pt-1 pb-4 no-underline\"\r\n      >\r\n        Auth Layout Pages\r\n      </h6>\r\n      <!-- Navigation -->\r\n\r\n      <ul class=\"md:flex-col md:min-w-full flex flex-col list-none md:mb-4\">\r\n        <li class=\"items-center\">\r\n          <a\r\n            [routerLink]=\"['/auth/login']\"\r\n            class=\"text-blueGray-700 hover:text-blueGray-500 text-xs uppercase py-3 font-bold block\"\r\n          >\r\n            <i class=\"fas fa-fingerprint text-blueGray-300 mr-2 text-sm\"></i>\r\n            Login\r\n          </a>\r\n        </li>\r\n\r\n        <li class=\"items-center\">\r\n          <a\r\n            [routerLink]=\"['/auth/register']\"\r\n            class=\"text-blueGray-700 hover:text-blueGray-500 text-xs uppercase py-3 font-bold block\"\r\n          >\r\n            <i class=\"fas fa-clipboard-list text-blueGray-300 mr-2 text-sm\"></i>\r\n            Register\r\n          </a>\r\n        </li>\r\n      </ul>\r\n\r\n      <!-- Divider -->\r\n      <hr class=\"my-4 md:min-w-full\" />\r\n      <!-- Heading -->\r\n      <h6\r\n        class=\"md:min-w-full text-blueGray-500 text-xs uppercase font-bold block pt-1 pb-4 no-underline\"\r\n      >\r\n        No Layout Pages\r\n      </h6>\r\n      <!-- Navigation -->\r\n\r\n      <ul class=\"md:flex-col md:min-w-full flex flex-col list-none md:mb-4\">\r\n        <li class=\"items-center\">\r\n          <a\r\n            [routerLink]=\"['/landing']\"\r\n            class=\"text-blueGray-700 hover:text-blueGray-500 text-xs uppercase py-3 font-bold block\"\r\n          >\r\n            <i class=\"fas fa-newspaper text-blueGray-300 mr-2 text-sm\"></i>\r\n            Landing Page\r\n          </a>\r\n        </li>\r\n\r\n        <li class=\"items-center\">\r\n          <a\r\n            [routerLink]=\"['/profile']\"\r\n            class=\"text-blueGray-700 hover:text-blueGray-500 text-xs uppercase py-3 font-bold block\"\r\n          >\r\n            <i class=\"fas fa-user-circle text-blueGray-300 mr-2 text-sm\"></i>\r\n            Profile Page\r\n          </a>\r\n        </li>\r\n      </ul>\r\n\r\n      <!-- Divider -->\r\n      <hr class=\"my-4 md:min-w-full\" />\r\n      <!-- Heading -->\r\n      <h6\r\n        class=\"md:min-w-full text-blueGray-500 text-xs uppercase font-bold block pt-1 pb-4 no-underline\"\r\n      >\r\n        Documentation\r\n      </h6>\r\n      <!-- Navigation -->\r\n      <ul class=\"md:flex-col md:min-w-full flex flex-col list-none md:mb-4\">\r\n        <li class=\"inline-flex\">\r\n          <a\r\n            href=\"https://www.creative-tim.com/learning-lab/tailwind/angular/colors/notus\"\r\n            target=\"_blank\"\r\n            class=\"text-blueGray-700 hover:text-blueGray-500 text-sm block mb-4 no-underline font-semibold\"\r\n          >\r\n            <i class=\"fas fa-paint-brush mr-2 text-blueGray-300 text-base\"></i>\r\n            Styles\r\n          </a>\r\n        </li>\r\n\r\n        <li class=\"inline-flex\">\r\n          <a\r\n            href=\"https://www.creative-tim.com/learning-lab/tailwind/angular/alerts/notus\"\r\n            target=\"_blank\"\r\n            class=\"text-blueGray-700 hover:text-blueGray-500 text-sm block mb-4 no-underline font-semibold\"\r\n          >\r\n            <i class=\"fab fa-css3-alt mr-2 text-blueGray-300 text-base\"></i>\r\n            CSS Components\r\n          </a>\r\n        </li>\r\n\r\n        <li class=\"inline-flex\">\r\n          <a\r\n            href=\"https://www.creative-tim.com/learning-lab/tailwind/angular/overview/notus\"\r\n            target=\"_blank\"\r\n            class=\"text-blueGray-700 hover:text-blueGray-500 text-sm block mb-4 no-underline font-semibold\"\r\n          >\r\n            <i class=\"fab fa-angular mr-2 text-blueGray-300 text-base\"></i>\r\n            Angular\r\n          </a>\r\n        </li>\r\n\r\n        <li class=\"inline-flex\">\r\n          <a\r\n            href=\"https://www.creative-tim.com/learning-lab/tailwind/js/overview/notus\"\r\n            target=\"_blank\"\r\n            class=\"text-blueGray-700 hover:text-blueGray-500 text-sm block mb-4 no-underline font-semibold\"\r\n          >\r\n            <i class=\"fab fa-js-square mr-2 text-blueGray-300 text-base\"></i>\r\n            Javascript\r\n          </a>\r\n        </li>\r\n\r\n        <li class=\"inline-flex\">\r\n          <a\r\n            href=\"https://www.creative-tim.com/learning-lab/tailwind/nextjs/overview/notus\"\r\n            target=\"_blank\"\r\n            class=\"text-blueGray-700 hover:text-blueGray-500 text-sm block mb-4 no-underline font-semibold\"\r\n          >\r\n            <i class=\"fab fa-react mr-2 text-blueGray-300 text-base\"></i>\r\n            NextJS\r\n          </a>\r\n        </li>\r\n\r\n        <li class=\"inline-flex\">\r\n          <a\r\n            href=\"https://www.creative-tim.com/learning-lab/tailwind/react/overview/notus\"\r\n            target=\"_blank\"\r\n            class=\"text-blueGray-700 hover:text-blueGray-500 text-sm block mb-4 no-underline font-semibold\"\r\n          >\r\n            <i class=\"fab fa-react mr-2 text-blueGray-300 text-base\"></i>\r\n            React\r\n          </a>\r\n        </li>\r\n\r\n        <li class=\"inline-flex\">\r\n          <a\r\n            href=\"https://www.creative-tim.com/learning-lab/tailwind/svelte/overview/notus\"\r\n            target=\"_blank\"\r\n            class=\"text-blueGray-700 hover:text-blueGray-500 text-sm block mb-4 no-underline font-semibold\"\r\n          >\r\n            <i class=\"fas fa-link mr-2 text-blueGray-300 text-base\"></i>\r\n            Svelte\r\n          </a>\r\n        </li>\r\n\r\n        <li class=\"inline-flex\">\r\n          <a\r\n            href=\"https://www.creative-tim.com/learning-lab/tailwind/vue/overview/notus\"\r\n            target=\"_blank\"\r\n            class=\"text-blueGray-700 hover:text-blueGray-500 text-sm block mb-4 no-underline font-semibold\"\r\n          >\r\n            <i class=\"fab fa-vuejs mr-2 text-blueGray-300 text-base\"></i>\r\n            VueJS\r\n          </a>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</nav>\r\n"
        },
        {
            "name": "SigninComponent",
            "id": "component-SigninComponent-580f96a9bcd13ab04cceec6f3feb0263",
            "file": "src/app/views/signin/signin/signin.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-signin",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./signin.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "goToForgot",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 113,
                    "description": "<p>Method to route user to forgot</p>\n"
                },
                {
                    "name": "goToPrivacy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 120,
                    "description": "<p>Method to route user to privacy policy</p>\n"
                },
                {
                    "name": "goToTerms",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 127,
                    "description": "<p>Method to route user to terms of service</p>\n"
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24
                },
                {
                    "name": "signInWithCognito",
                    "args": [
                        {
                            "name": "user",
                            "type": "NewUser"
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<void>",
                    "typeParameters": [],
                    "line": 29,
                    "description": "<p>Method to sign user up</p>\n",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "user",
                            "type": "NewUser",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "signInWithFacebook",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 97,
                    "description": "<p>Method to sign user up/in with Facebook</p>\n"
                },
                {
                    "name": "signInWithGoogle",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 105,
                    "description": "<p>Method to sign user up/in with Google</p>\n"
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AuthService, NewUser } from '@shared/services/auth/auth.service';\nimport { ICredentials } from '@aws-amplify/core';\nimport { CognitoHostedUIIdentityProvider } from '@aws-amplify/auth';\nimport { APIService } from '@shared/services/aws/api.service';\nimport { Store } from '@ngxs/store';\nimport * as AppDataActions from '@store/app-data/app-data.actions';\nimport * as UserActions from '@store/user/user.actions';\n\n@Component({\n  selector: 'brave-signin',\n  templateUrl: './signin.component.html',\n})\nexport class SigninComponent {\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n    private store: Store,\n    private auth: AuthService,\n    private api: APIService\n  ) {}\n\n  ngOnInit(): void {}\n\n  /**\n   * Method to sign user up\n   */\n  async signInWithCognito(user: NewUser): Promise<void> {\n    if (!user) return;\n    // add email validation here // const isValid = await this.accountMgmtService.isEmailValid(formData.username);\n    let isValid = true;\n    if (isValid) {\n      try {\n        const cognitorUser = await this.auth.signIn(\n          user.username,\n          user.password\n        );\n        // TODO need to get data from backend and find out what last step was\n        if (\n          cognitorUser?.challengeName === 'SMS_MFA' ||\n          cognitorUser.challengeName === 'SOFTWARE_TOKEN_MFA'\n        ) {\n          console.log('MFA challenge');\n          // this.router.navigate(['/account/submitmfa']);\n        } else if (cognitorUser?.challengeName === 'NEW_PASSWORD_REQUIRED') {\n          const { requiredAttributes } = cognitorUser?.challengeParam;\n        } else if (cognitorUser?.challengeName === 'MFA_SETUP') {\n          console.log('OTP setup');\n          // this.auth.setupTOTP(user);\n        } else {\n          // TODO go to dashboard...default to assume no data for now\n          // handled by auth listener for SignIn event\n\n          const creds = await this.auth.getAuthCredentials();\n          if (creds) {\n            // await this.store\n            //   .dispatch(new AppDataActions.Edit({ id: creds.identityId }))\n            //   .toPromise();\n            // await this.store\n            //   .dispatch(new UserActions.Edit({ id: creds.identityId }))\n            //   .toPromise();\n            // this.auth.seedAppData(creds); //possibly update to async\n          }\n          // TODO add condition to check if onboarding is complete\n          // need to get the results from the database\n          //   ...check onboarding status and then route accordingly\n          this.router.navigate(['/onboarding/name']);\n        }\n      } catch (err) {\n        if (err.code === 'UserNotConfirmedException') {\n          const unconfirmedUserState = {};\n          // TODO go to dashboard with an unconfirmed state (can't do anything)\n        } else if (err.code === 'PasswordResetRequiredException') {\n          // TODO handle error\n          this.router.navigate(['../error'], { relativeTo: this.route });\n        } else if (err.code === 'NotAuthorizedException') {\n          // TODO handle error\n          this.router.navigate(['../error'], { relativeTo: this.route });\n        } else if (err.code === 'UserNotFoundException') {\n          // TODO handle error\n          this.router.navigate(['../error'], { relativeTo: this.route });\n        } else {\n          // TODO handle error\n        }\n        this.router.navigate(['../error'], { relativeTo: this.route });\n      }\n    } else {\n      // TODO: need to provide feedback to the user on the invalid email\n      this.router.navigate(['../error'], { relativeTo: this.route });\n    }\n  }\n\n  /**\n   * Method to sign user up/in with Facebook\n   */\n  signInWithFacebook(): void {\n    let provider = CognitoHostedUIIdentityProvider.Facebook;\n    this.auth.socialSignIn(provider);\n  }\n\n  /**\n   * Method to sign user up/in with Google\n   */\n  signInWithGoogle(): void {\n    let provider = CognitoHostedUIIdentityProvider.Google;\n    this.auth.socialSignIn(provider);\n  }\n\n  /**\n   * Method to route user to forgot\n   */\n  goToForgot(): void {\n    this.router.navigate(['../forgot'], { relativeTo: this.route });\n  }\n\n  /**\n   * Method to route user to privacy policy\n   */\n  goToPrivacy(): void {\n    this.router.navigate(['/legal/privacy']);\n  }\n\n  /**\n   * Method to route user to terms of service\n   */\n  goToTerms(): void {\n    this.router.navigate(['/legal/tos']);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router"
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute"
                    },
                    {
                        "name": "store",
                        "type": "Store"
                    },
                    {
                        "name": "auth",
                        "type": "AuthService"
                    },
                    {
                        "name": "api",
                        "type": "APIService"
                    }
                ],
                "line": 15,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "store",
                        "type": "Store",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "auth",
                        "type": "AuthService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "api",
                        "type": "APIService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div class=\"container mx-auto max-w-xs h-full\">\n  <brave-signin-pure\n    (clickGoogle)=\"signInWithGoogle()\"\n    (clickFacebook)=\"signInWithFacebook()\"\n    (clickSignup)=\"signInWithCognito($event)\"\n    (clickForgot)=\"goToForgot()\"\n    (clickPrivacy)=\"goToPrivacy()\"\n    (clickTerms)=\"goToTerms()\"\n  ></brave-signin-pure>\n</div>\n"
        },
        {
            "name": "SignInComponent",
            "id": "component-SignInComponent-e4f7c95aaf70741836c8ff9690e8dcf5",
            "file": "src/app/shared/components/auth/sign-in/sign-in.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-sign-in",
            "styleUrls": [
                "./sign-in.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./sign-in.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 11
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'brave-sign-in',\r\n  templateUrl: './sign-in.component.html',\r\n  styleUrls: ['./sign-in.component.css'],\r\n})\r\nexport class SignInComponent implements OnInit {\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./sign-in.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>sign-in works!</p>\r\n"
        },
        {
            "name": "SigninForgotComponent",
            "id": "component-SigninForgotComponent-e54ff0718335b7000033cf88222e44ca",
            "file": "src/app/views/signin-forgot/signin-forgot.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-signin-forgot",
            "styleUrls": [
                "./signin-forgot.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./signin-forgot.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'brave-signin-forgot',\r\n  templateUrl: './signin-forgot.component.html',\r\n  styleUrls: ['./signin-forgot.component.css']\r\n})\r\nexport class SigninForgotComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./signin-forgot.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>signin-forgot works!</p>\r\n"
        },
        {
            "name": "SigninPureComponent",
            "id": "component-SigninPureComponent-9677e778e38694e70bb1a58c54d01825",
            "file": "src/app/views/signin/signin-pure/signin-pure.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-signin-pure",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./signin-pure.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "clickFacebook",
                    "defaultValue": "new EventEmitter()",
                    "line": 10,
                    "type": "EventEmitter<void>"
                },
                {
                    "name": "clickForgot",
                    "defaultValue": "new EventEmitter()",
                    "line": 12,
                    "type": "EventEmitter<void>"
                },
                {
                    "name": "clickGoogle",
                    "defaultValue": "new EventEmitter()",
                    "line": 9,
                    "type": "EventEmitter<void>"
                },
                {
                    "name": "clickLogin",
                    "defaultValue": "new EventEmitter()",
                    "line": 13,
                    "type": "EventEmitter<void>"
                },
                {
                    "name": "clickPrivacy",
                    "defaultValue": "new EventEmitter()",
                    "line": 14,
                    "type": "EventEmitter<void>"
                },
                {
                    "name": "clickSignup",
                    "defaultValue": "new EventEmitter()",
                    "line": 11,
                    "type": "EventEmitter<NewUser>"
                },
                {
                    "name": "clickTerms",
                    "defaultValue": "new EventEmitter()",
                    "line": 15,
                    "type": "EventEmitter<void>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { NewUser } from '@shared/services/auth/auth.service';\n\n@Component({\n  selector: 'brave-signin-pure',\n  templateUrl: './signin-pure.component.html',\n})\nexport class SigninPureComponent implements OnInit {\n  @Output() clickGoogle: EventEmitter<void> = new EventEmitter();\n  @Output() clickFacebook: EventEmitter<void> = new EventEmitter();\n  @Output() clickSignup: EventEmitter<NewUser> = new EventEmitter();\n  @Output() clickForgot: EventEmitter<void> = new EventEmitter();\n  @Output() clickLogin: EventEmitter<void> = new EventEmitter();\n  @Output() clickPrivacy: EventEmitter<void> = new EventEmitter();\n  @Output() clickTerms: EventEmitter<void> = new EventEmitter();\n\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 15
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"flex content-center items-center justify-center h-full p-2\">\n  <div class=\"w-full max-w-xs\">\n    <div\n      class=\"relative flex flex-col min-w-0 break-words w-full mb-6 border-0\"\n    >\n      <!-- logo -->\n      <div class=\"flex justify-center\">\n        <img class=\"w-32 h-32\" src=\"assets/img/brave-teal-512x512.jpg\" />\n      </div>\n\n      <!-- Social sign up buttons -->\n      <div class=\"rounded-t mb-0 py-6\">\n        <div class=\"text-center mb-3\">\n          <h4 class=\"brave-h4\">Create Account</h4>\n        </div>\n        <div class=\"btn-wrapper text-center\">\n          <div class=\"mb-1\">\n            <brave-google-iconsignin-button\n              (click)=\"clickGoogle.emit()\"\n            ></brave-google-iconsignin-button>\n          </div>\n          <div>\n            <brave-facebook-onlytextsignin-button\n              (click)=\"clickFacebook.emit()\"\n            ></brave-facebook-onlytextsignin-button>\n          </div>\n        </div>\n      </div>\n      <div class=\"flex-auto py-6 pt-0\">\n        <div class=\"brave-body1 text-center mb-3\">\n          <small>- Or -</small>\n        </div>\n        <brave-simple-signup-form\n          (signupClick)=\"clickSignup.emit($event)\"\n          (forgotClick)=\"clickForgot.emit()\"\n        ></brave-simple-signup-form>\n      </div>\n\n      <!-- Already have an account -->\n      <div class=\"flex justify-center\">\n        <div class=\"text-sm text-blueGray-600\">\n          <span>Already have an account?&nbsp;</span>\n          <span>\n            <a (click)=\"clickLogin.emit()\" class=\"hover:cursor-pointer\">\n              Login here.\n            </a>\n          </span>\n        </div>\n      </div>\n\n      <!--  terms of service -->\n      <div class=\"flex justify-center mt-10\">\n        <div class=\"text-sm text-blueGray-600 text-center\">\n          <small>\n            By joining you are agreeing to our&nbsp;<span\n              ><a\n                (click)=\"clickPrivacy.emit()\"\n                class=\"underline hover:cursor-pointer\"\n                >Privacy Policy</a\n              ></span\n            >&nbsp;and&nbsp;<span\n              ><a\n                (click)=\"clickTerms.emit()\"\n                class=\"underline hover:cursor-pointer\"\n                >TOS</a\n              ></span\n            >\n          </small>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n"
        },
        {
            "name": "SigninRedirectComponent",
            "id": "component-SigninRedirectComponent-544aa8c75f5b955d2c61f7699fe2e055",
            "file": "src/app/views/signin-redirect/signin-redirect.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-signin-redirect",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./signin-redirect.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<void>",
                    "typeParameters": [],
                    "line": 13,
                    "modifierKind": [
                        120
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '@shared/services/auth/auth.service';\nimport { SyncService } from '@shared/services/sync/sync.service';\nimport { ICredentials } from '@aws-amplify/core';\n\n@Component({\n  selector: 'brave-signin-redirect',\n  templateUrl: './signin-redirect.component.html',\n})\nexport class SigninRedirectComponent implements OnInit {\n  constructor(private sync: SyncService, private auth: AuthService) {}\n\n  async ngOnInit(): Promise<void> {\n    try {\n      const creds: ICredentials = await this.auth.getCredentials();\n      await this.sync.hallmonitor(creds);\n    } catch (err) {\n      console.log('hall monitor error', err);\n    }\n  }\n}\n\nconst navs: Record<string, any> = {};\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "sync",
                        "type": "SyncService"
                    },
                    {
                        "name": "auth",
                        "type": "AuthService"
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "sync",
                        "type": "SyncService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "auth",
                        "type": "AuthService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>Redirecting you</p>\n"
        },
        {
            "name": "SignupComponent",
            "id": "component-SignupComponent-e26898a9cbc3927221abc6b8d41200ba",
            "file": "src/app/views/signup/signup/signup.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-signup",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./signup.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "goToForgot",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 64,
                    "description": "<p>Method to route user to forgot</p>\n"
                },
                {
                    "name": "goToLogin",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 71,
                    "description": "<p>Method to route user to login</p>\n"
                },
                {
                    "name": "goToPrivacy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 78,
                    "description": "<p>Method to route user to privacy policy</p>\n"
                },
                {
                    "name": "goToTerms",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 85,
                    "description": "<p>Method to route user to terms of service</p>\n"
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23
                },
                {
                    "name": "signUpWithCognito",
                    "args": [
                        {
                            "name": "user",
                            "type": "NewUser"
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<void>",
                    "typeParameters": [],
                    "line": 28,
                    "description": "<p>Method to sign user up</p>\n",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "user",
                            "type": "NewUser",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "signUpWithFacebook",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 48,
                    "description": "<p>Method to sign user up/in with Facebook</p>\n"
                },
                {
                    "name": "signUpWithGoogle",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 56,
                    "description": "<p>Method to sign user up/in with Google</p>\n"
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AuthService, NewUser } from '@shared/services/auth/auth.service';\nimport { CognitoHostedUIIdentityProvider } from '@aws-amplify/auth';\nimport { ICredentials } from '@aws-amplify/core';\nimport {\n  APIService,\n  CreateAppDataInput,\n} from '@shared/services/aws/api.service';\n\n@Component({\n  selector: 'brave-signup',\n  templateUrl: './signup.component.html',\n})\nexport class SignupComponent implements OnInit {\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n    private auth: AuthService,\n    private api: APIService\n  ) {}\n\n  ngOnInit(): void {}\n\n  /**\n   * Method to sign user up\n   */\n  async signUpWithCognito(user: NewUser): Promise<void> {\n    if (!user) return;\n    // add email validation here // const isValid = await this.accountMgmtService.isEmailValid(formData.username);\n    let isValid = true;\n    if (isValid) {\n      try {\n        await this.auth.signUp(user);\n        this.router.navigate(['/onboarding/name'], { relativeTo: this.route });\n      } catch (err) {\n        this.router.navigate(['../error'], { relativeTo: this.route });\n      }\n    } else {\n      // TODO: need to provide feedback to the user on the invalid email\n      this.router.navigate(['../error'], { relativeTo: this.route });\n    }\n  }\n\n  /**\n   * Method to sign user up/in with Facebook\n   */\n  signUpWithFacebook(): void {\n    let provider = CognitoHostedUIIdentityProvider.Facebook;\n    this.auth.socialSignIn(provider);\n  }\n\n  /**\n   * Method to sign user up/in with Google\n   */\n  signUpWithGoogle(): void {\n    let provider = CognitoHostedUIIdentityProvider.Google;\n    this.auth.socialSignIn(provider);\n  }\n\n  /**\n   * Method to route user to forgot\n   */\n  goToForgot(): void {\n    this.router.navigate(['../forgot'], { relativeTo: this.route });\n  }\n\n  /**\n   * Method to route user to login\n   */\n  goToLogin(): void {\n    this.router.navigate(['../signin'], { relativeTo: this.route });\n  }\n\n  /**\n   * Method to route user to privacy policy\n   */\n  goToPrivacy(): void {\n    this.router.navigate(['/legal/privacy']);\n  }\n\n  /**\n   * Method to route user to terms of service\n   */\n  goToTerms(): void {\n    this.router.navigate(['/legal/tos']);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router"
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute"
                    },
                    {
                        "name": "auth",
                        "type": "AuthService"
                    },
                    {
                        "name": "api",
                        "type": "APIService"
                    }
                ],
                "line": 15,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "auth",
                        "type": "AuthService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "api",
                        "type": "APIService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"container mx-auto max-w-xs h-full\">\r\n  <brave-signup-pure\r\n    (clickGoogle)=\"signUpWithGoogle()\"\r\n    (clickFacebook)=\"signUpWithFacebook()\"\r\n    (clickSignup)=\"signUpWithCognito($event)\"\r\n    (clickForgot)=\"goToForgot()\"\r\n    (clickLogin)=\"goToLogin()\"\r\n    (clickPrivacy)=\"goToPrivacy()\"\r\n    (clickTerms)=\"goToTerms()\"\r\n  ></brave-signup-pure>\r\n</div>\r\n"
        },
        {
            "name": "SignUpComponent",
            "id": "component-SignUpComponent-ab50d4401a0450de3145e2022e3ef15f",
            "file": "src/app/shared/components/auth/sign-up/sign-up.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-sign-up",
            "styleUrls": [
                "./sign-up.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./sign-up.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "signUpForm",
                    "defaultValue": "{} as FormGroup",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 17
                }
            ],
            "methodsClass": [
                {
                    "name": "signUpUser",
                    "args": [
                        {
                            "name": "formData",
                            "type": "FormFields"
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 34,
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "formData",
                            "type": "FormFields",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { BraveEmailValidator } from '@shared/validators/email.validator';\r\n\r\ninterface FormFields {\r\n  fullName: string;\r\n  username: string;\r\n  password: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'brave-sign-up',\r\n  templateUrl: './sign-up.component.html',\r\n  styleUrls: ['./sign-up.component.css'],\r\n})\r\nexport class SignUpComponent {\r\n  signUpForm: FormGroup = {} as FormGroup;\r\n\r\n  constructor(private fb: FormBuilder) {\r\n    this.signUpForm = this.fb.group({\r\n      fullName: ['', [Validators.required]],\r\n      username: ['', [Validators.required, BraveEmailValidator]],\r\n      password: ['', [Validators.required, Validators.minLength(8)]],\r\n    });\r\n  }\r\n\r\n  get validForm() {\r\n    return this.signUpForm.valid;\r\n  }\r\n  get signUpValues() {\r\n    return this.signUpForm.value;\r\n  }\r\n\r\n  async signUpUser(formData: FormFields) {\r\n    if (!this.validForm) {\r\n      return;\r\n    }\r\n\r\n    const { username, password, fullName } = this.signUpValues;\r\n\r\n    // Auth.signUp({\r\n    //   username,\r\n    //   password,\r\n    //   attributes: {\r\n    //     email: username,\r\n    //     'custom:fullName': fullName,\r\n    //   },\r\n    // })\r\n    //   .then((_) => {\r\n    //     // fire fb pixel\r\n    //     // this.facebookService.fireCompleteRegistration(0.0, 'USD');\r\n    //     // this.googleService.fireSignUpEvent();\r\n    //     sessionStorage.setItem('userEmail', username);\r\n    //     const unconfirmedUserState = {\r\n    //       userFirstName: 'Guest',\r\n    //       userAttributes: {\r\n    //         'custom:firstName': 'Guest',\r\n    //         'custom:lastName': '',\r\n    //         'custom:legalFullName': '',\r\n    //         'custom:dob': '',\r\n    //         'custom:address': '',\r\n    //         email: username,\r\n    //         email_verified: false,\r\n    //         sub: '',\r\n    //       },\r\n    //       isSignedIn: true,\r\n    //       isAdmin: false,\r\n    //     };\r\n    //     this.accountMgmtService.updateUser(unconfirmedUserState); // signed up not confirmed...manually update state.\r\n    //     this.accountMgmtService.isWaiting$.next(false);\r\n    //     this.router.navigate(['/userportal/stepone']);\r\n    //   })\r\n    //   .catch((err) => {\r\n    //     this.error = true;\r\n    //     this.errorMessage = err.message;\r\n    //     this.accountMgmtService.isWaiting$.next(false);\r\n    //   });\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./sign-up.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "fb",
                        "type": "FormBuilder"
                    }
                ],
                "line": 17,
                "jsdoctags": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "validForm": {
                    "name": "validForm",
                    "getSignature": {
                        "name": "validForm",
                        "type": "",
                        "returnType": "",
                        "line": 27
                    }
                },
                "signUpValues": {
                    "name": "signUpValues",
                    "getSignature": {
                        "name": "signUpValues",
                        "type": "",
                        "returnType": "",
                        "line": 30
                    }
                }
            },
            "templateData": "<!-- <div class=\"c-flex flex-center\">\r\n  <div class=\"form-container\">\r\n    <form action=\"\" [formGroup]=\"signUpForm\">\r\n      <div>\r\n        <span class=\"brave-font-1\">Start taking control of your credit!</span>\r\n      </div>\r\n      <h5 class=\"brave-font-0 m-0\">\r\n        <span>Complete the information below to get started</span>\r\n      </h5>\r\n      <div>\r\n        <div class=\"brave-font-0 m-t-15 m-b-15\">\r\n          <input\r\n            matInput\r\n            name=\"fullName\"\r\n            [formControl]=\"signUpForm.controls['fullName']\"\r\n            placeholder=\"\"\r\n          />\r\n          <small\r\n            *ngIf=\"\r\n              signUpForm?.controls?.fullName?.touched &&\r\n              signUpForm.controls.fullName.errors?.required\r\n            \"\r\n            class=\"form-error-msg\"\r\n            >Name is required</small\r\n          >\r\n        </div>\r\n        <div class=\"brave-font-0 m-t-15 m-b-15\">\r\n          <input\r\n            #userEmail\r\n            matInput\r\n            name=\"username\"\r\n            [formControl]=\"signUpForm.controls['username']\"\r\n            placeholder=\"Username\"\r\n            autocorrect=\"off\"\r\n            autocapitalize=\"off\"\r\n            spellcheck=\"false\"\r\n          />\r\n          <small\r\n            *ngIf=\"\r\n              signUpForm?.controls?.email?.touched &&\r\n              signUpForm.controls.email.errors?.required\r\n            \"\r\n            class=\"form-error-msg\"\r\n            >Email is required</small\r\n          >\r\n        </div>\r\n        <div class=\"brave-font-0 m-t-15 m-b-15\">\r\n          <input\r\n            matInput\r\n            name=\"username\"\r\n            [formControl]=\"signUpForm.controls['password']\"\r\n            placeholder=\"Create a strong password\"\r\n            [type]=\"hide ? 'password' : 'text'\"\r\n            autocorrect=\"off\"\r\n            autocapitalize=\"off\"\r\n            spellcheck=\"false\"\r\n          />\r\n        </div>\r\n        <div class=\"brave-font-5 warning-text\">\r\n          <p *ngIf=\"error\">&#9888;&nbsp;{{ errorMessage }}</p>\r\n          <p *ngIf=\"success\">{{ successMessage }}</p>\r\n        </div>\r\n        <div>\r\n          <div>\r\n            <button\r\n              class=\"brave-btn-accent-raised brave-lgbtn\"\r\n              type=\"submit\"\r\n              [disabled]=\"!signUpForm.valid\"\r\n              (click)=\"completeStep()\"\r\n            >\r\n              Submit\r\n            </button>\r\n          </div>\r\n          <p class=\"brave-font-5 disclaimer\">\r\n            <small\r\n              >By joining you are agreeing to our\r\n              <a [routerLink]=\"['/privacy/info']\">Privacy Policy</a> and\r\n              <a [routerLink]=\"['/terms/info']\">TOS</a></small\r\n            >\r\n          </p>\r\n          <p class=\"brave-font-0 signin-text\">\r\n            Already a member? <a [routerLink]=\"['../signin']\">Log in.</a>\r\n          </p>\r\n          <p class=\"brave-font-0 signin-text\">\r\n            Forgot your password?\r\n            <a [routerLink]=\"['../forgot']\">Click here.</a>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div> -->\r\n"
        },
        {
            "name": "SignupErrorComponent",
            "id": "component-SignupErrorComponent-5d3773fc89b8ccfdfecc8deaa23c6c3c",
            "file": "src/app/views/signup-error/signup-error.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-signup-error",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./signup-error.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 10
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'brave-signup-error',\r\n  templateUrl: './signup-error.component.html',\r\n})\r\nexport class SignupErrorComponent implements OnInit {\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 7
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"container mx-auto max-w-xs h-full\">\r\n  <div class=\"flex content-center items-center justify-center h-full\">\r\n    <div class=\"w-full max-w-xs\">\r\n      <div class=\"relative flex flex-col min-w-0 w-full mb-6 border-0\">\r\n        <!-- image -->\r\n        <div class=\"flex justify-center mb-6\">\r\n          <img class=\"w-full\" src=\"assets/img/undraw_welcoming_xvuq.svg\" />\r\n        </div>\r\n\r\n        <!-- header -->\r\n        <div class=\"py-3\">\r\n          <h4 class=\"brave-h4\">Verification Error</h4>\r\n        </div>\r\n\r\n        <!-- message -->\r\n        <div class=\"py-3\">\r\n          <div class=\"text-base text-blueGray-600\">\r\n            <p class=\"mb-0\">\r\n              Unfortunately there was a connection issue and you need to\r\n              re-enter your information.\r\n            </p>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- action -->\r\n        <div class=\"mt-5\">\r\n          <div class=\"flex justify-center items-center\">\r\n            <brave-filled-onlytext-button [routerLink]=\"['/']\"\r\n              >Retry</brave-filled-onlytext-button\r\n            >\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "SignupErrorValidationComponent",
            "id": "component-SignupErrorValidationComponent-c6ff2366c6ae88cebd0e6c7331ea5733",
            "file": "src/app/views/signup-error-validation/signup-error-validation.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-signup-error-validation",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./signup-error-validation.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 10
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'brave-signup-error-validation',\r\n  templateUrl: './signup-error-validation.component.html',\r\n})\r\nexport class SignupErrorValidationComponent implements OnInit {\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 7
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"container mx-auto max-w-xs h-full\">\r\n  <div class=\"flex content-center items-center justify-center h-full\">\r\n    <div class=\"w-full max-w-xs\">\r\n      <div class=\"relative flex flex-col min-w-0 w-full mb-6 border-0\">\r\n        <!-- image -->\r\n        <div class=\"flex justify-center mb-6\">\r\n          <img class=\"w-full\" src=\"assets/img/undraw_welcoming_xvuq.svg\" />\r\n        </div>\r\n\r\n        <!-- header -->\r\n        <div class=\"py-3\">\r\n          <h4 class=\"brave-h4\">Verification Error</h4>\r\n        </div>\r\n\r\n        <!-- message -->\r\n        <div class=\"py-3\">\r\n          <div class=\"text-base\">\r\n            <p class=\"mb-6 text-blueGray-600\">\r\n              Unfortunately there we were unable to verify your identity with\r\n              the answers provided.\r\n            </p>\r\n            <p class=\"mb-6 text-blueGray-600\">Please try again in 30 days.</p>\r\n            <p class=\"mb-6 text-fuchsia-500\">\r\n              Why was my ID unable to be verified?\r\n            </p>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- action -->\r\n        <div class=\"mt-5\">\r\n          <div class=\"flex justify-center items-center\">\r\n            <brave-filled-onlytext-button [routerLink]=\"['/']\"\r\n              >Return to Dashboard</brave-filled-onlytext-button\r\n            >\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "SignupKnowyouComponent",
            "id": "component-SignupKnowyouComponent-4a8fc6e5e56df33ff20d42a4bf84e0dd",
            "file": "src/app/views/signup-knowyou/signup-knowyou.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-signup-knowyou",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./signup-knowyou.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 10
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'brave-signup-knowyou',\r\n  templateUrl: './signup-knowyou.component.html',\r\n})\r\nexport class SignupKnowyouComponent implements OnInit {\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 7
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"container mx-auto max-w-xs h-full\">\r\n  <div class=\"flex content-center items-center justify-center h-full\">\r\n    <div class=\"w-full max-w-xs\">\r\n      <div class=\"relative flex flex-col min-w-0 w-full mb-6 border-0\">\r\n        <!-- image -->\r\n        <div class=\"flex justify-center mb-6\">\r\n          <img class=\"w-full\" src=\"assets/img/undraw_welcoming_xvuq.svg\" />\r\n        </div>\r\n\r\n        <!-- header -->\r\n        <div class=\"py-3\">\r\n          <h4 class=\"brave-h4\">Let's get to know you!</h4>\r\n        </div>\r\n\r\n        <!-- form -->\r\n        <div class=\"py-3\">\r\n          <brave-outline-name-form></brave-outline-name-form>\r\n        </div>\r\n\r\n        <div class=\"mt-5\">\r\n          <div class=\"flex justify-center items-center\">\r\n            <brave-filled-onlytext-button\r\n              ><span class=\"flex items-center\"\r\n                >Continue<span class=\"material-icons px-1\"\r\n                  >arrow_forward</span\r\n                ></span\r\n              ></brave-filled-onlytext-button\r\n            >\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "SignupPureComponent",
            "id": "component-SignupPureComponent-88ad5d0b4e0bf6f8decf91b23f52bc1c",
            "file": "src/app/views/signup/signup-pure/signup-pure.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-signup-pure",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./signup-pure.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "clickFacebook",
                    "defaultValue": "new EventEmitter()",
                    "line": 10,
                    "type": "EventEmitter<void>"
                },
                {
                    "name": "clickForgot",
                    "defaultValue": "new EventEmitter()",
                    "line": 12,
                    "type": "EventEmitter<void>"
                },
                {
                    "name": "clickGoogle",
                    "defaultValue": "new EventEmitter()",
                    "line": 9,
                    "type": "EventEmitter<void>"
                },
                {
                    "name": "clickLogin",
                    "defaultValue": "new EventEmitter()",
                    "line": 13,
                    "type": "EventEmitter<void>"
                },
                {
                    "name": "clickPrivacy",
                    "defaultValue": "new EventEmitter()",
                    "line": 14,
                    "type": "EventEmitter<void>"
                },
                {
                    "name": "clickSignup",
                    "defaultValue": "new EventEmitter()",
                    "line": 11,
                    "type": "EventEmitter<NewUser>"
                },
                {
                    "name": "clickTerms",
                    "defaultValue": "new EventEmitter()",
                    "line": 15,
                    "type": "EventEmitter<void>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Output } from '@angular/core';\r\nimport { NewUser } from '@shared/services/auth/auth.service';\r\n\r\n@Component({\r\n  selector: 'brave-signup-pure',\r\n  templateUrl: './signup-pure.component.html',\r\n})\r\nexport class SignupPureComponent {\r\n  @Output() clickGoogle: EventEmitter<void> = new EventEmitter();\r\n  @Output() clickFacebook: EventEmitter<void> = new EventEmitter();\r\n  @Output() clickSignup: EventEmitter<NewUser> = new EventEmitter();\r\n  @Output() clickForgot: EventEmitter<void> = new EventEmitter();\r\n  @Output() clickLogin: EventEmitter<void> = new EventEmitter();\r\n  @Output() clickPrivacy: EventEmitter<void> = new EventEmitter();\r\n  @Output() clickTerms: EventEmitter<void> = new EventEmitter();\r\n\r\n  constructor() {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 15
            },
            "templateData": "<div class=\"flex content-center items-center justify-center h-full p-2\">\r\n  <div class=\"w-full max-w-xs\">\r\n    <div\r\n      class=\"relative flex flex-col min-w-0 break-words w-full mb-6 border-0\"\r\n    >\r\n      <!-- logo -->\r\n      <div class=\"flex justify-center\">\r\n        <img class=\"w-32 h-32\" src=\"assets/img/brave-teal-512x512.jpg\" />\r\n      </div>\r\n\r\n      <!-- Social sign up buttons -->\r\n      <div class=\"rounded-t mb-0 py-6\">\r\n        <div class=\"text-center mb-3\">\r\n          <h4 class=\"brave-h4\">Create Account</h4>\r\n        </div>\r\n        <div class=\"btn-wrapper text-center\">\r\n          <div class=\"mb-1\">\r\n            <brave-google-iconsignin-button\r\n              (click)=\"clickGoogle.emit()\"\r\n            ></brave-google-iconsignin-button>\r\n          </div>\r\n          <div>\r\n            <brave-facebook-onlytextsignin-button\r\n              (click)=\"clickFacebook.emit()\"\r\n            ></brave-facebook-onlytextsignin-button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"flex-auto py-6 pt-0\">\r\n        <div class=\"brave-body1 text-center mb-3\">\r\n          <small>- Or -</small>\r\n        </div>\r\n        <brave-simple-signup-form\r\n          (signupClick)=\"clickSignup.emit($event)\"\r\n          (forgotClick)=\"clickForgot.emit()\"\r\n        ></brave-simple-signup-form>\r\n      </div>\r\n\r\n      <!-- Already have an account -->\r\n      <div class=\"flex justify-center\">\r\n        <div class=\"text-sm text-blueGray-600\">\r\n          <span>Already have an account?&nbsp;</span>\r\n          <span>\r\n            <a (click)=\"clickLogin.emit()\" class=\"hover:cursor-pointer\">\r\n              Login here.\r\n            </a>\r\n          </span>\r\n        </div>\r\n      </div>\r\n\r\n      <!--  terms of service -->\r\n      <div class=\"flex justify-center mt-10\">\r\n        <div class=\"text-sm text-blueGray-600 text-center\">\r\n          <small>\r\n            By joining you are agreeing to our&nbsp;<span\r\n              ><a\r\n                (click)=\"clickPrivacy.emit()\"\r\n                class=\"underline hover:cursor-pointer\"\r\n                >Privacy Policy</a\r\n              ></span\r\n            >&nbsp;and&nbsp;<span\r\n              ><a\r\n                (click)=\"clickTerms.emit()\"\r\n                class=\"underline hover:cursor-pointer\"\r\n                >TOS</a\r\n              ></span\r\n            >\r\n          </small>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "SignupResendComponent",
            "id": "component-SignupResendComponent-ecccfe1bfe795e968d6ead8e22fdef4b",
            "file": "src/app/views/signup-resend/signup-resend.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-signup-resend",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./signup-resend.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 10
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'brave-signup-resend',\r\n  templateUrl: './signup-resend.component.html',\r\n})\r\nexport class SignupResendComponent implements OnInit {\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 7
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>signup-resend works!</p>\r\n"
        },
        {
            "name": "SignupThankyouComponent",
            "id": "component-SignupThankyouComponent-d4c79d89471d21714a4093847871113c",
            "file": "src/app/views/signup-thankyou/signup-thankyou.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-signup-thankyou",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./signup-thankyou.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 10
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'brave-signup-thankyou',\r\n  templateUrl: './signup-thankyou.component.html',\r\n})\r\nexport class SignupThankyouComponent implements OnInit {\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 7
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"container mx-auto max-w-xs h-full\">\r\n  <div class=\"flex content-center items-center justify-center h-full\">\r\n    <div class=\"w-full max-w-xs\">\r\n      <div class=\"relative flex flex-col min-w-0 w-full mb-6 border-0\">\r\n        <!-- image -->\r\n        <div class=\"flex justify-center mb-6\">\r\n          <img class=\"w-full\" src=\"assets/img/undraw_welcoming_xvuq.svg\" />\r\n        </div>\r\n\r\n        <!-- header -->\r\n        <div class=\"py-3\">\r\n          <h4 class=\"brave-h4\">Thanks for signing up!</h4>\r\n        </div>\r\n\r\n        <!-- message -->\r\n        <div class=\"py-3\">\r\n          <div class=\"text-base text-blueGray-600\">\r\n            <p class=\"mb-0\">Check your email for a verification link.</p>\r\n            <p>Click on it to continue.</p>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- footer -->\r\n        <div class=\"mt-10 py-3\">\r\n          <div class=\"text-sm text-blueGray-600\">\r\n            <p>\r\n              Didn't receive an email?&nbsp;<span\r\n                ><a [routerLink]=\"['../resend']\">Click here to resend.</a></span\r\n              >\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "SimpleSignupFormComponent",
            "id": "component-SimpleSignupFormComponent-90713c03c9b24fb1e91c9987ed23f344",
            "file": "src/app/shared/components/forms/simple-signup-form/simple-signup-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-simple-signup-form",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./simple-signup-form.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "forgotClick",
                    "defaultValue": "new EventEmitter()",
                    "line": 11,
                    "type": "EventEmitter<MouseEvent>"
                },
                {
                    "name": "signupClick",
                    "defaultValue": "new EventEmitter()",
                    "line": 12,
                    "type": "EventEmitter<NewUser>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "emailConfig",
                    "defaultValue": "{\r\n    size: 'sm',\r\n    label: 'Email',\r\n    type: 'email',\r\n    placeholder: 'Email address',\r\n    autocomplete: 'email',\r\n  }",
                    "type": "IOutlineInputeConfig",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "parentForm",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "passwordConfig",
                    "defaultValue": "{\r\n    size: 'sm',\r\n    label: 'Password',\r\n    type: 'password',\r\n    placeholder: 'Password',\r\n    autocomplete: 'off',\r\n  }",
                    "type": "IOutlineInputeConfig",
                    "optional": false,
                    "description": "",
                    "line": 22
                }
            ],
            "methodsClass": [
                {
                    "name": "addChild",
                    "args": [
                        {
                            "name": "childName",
                            "type": "string"
                        },
                        {
                            "name": "childGroup",
                            "type": "FormGroup"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 41,
                    "description": "<p>Add a new child form control using the child form group</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1203,
                                "end": 1212,
                                "flags": 0,
                                "escapedText": "childName"
                            },
                            "type": "string",
                            "tagName": {
                                "pos": 1197,
                                "end": 1202,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": ""
                        },
                        {
                            "name": {
                                "pos": 1226,
                                "end": 1236,
                                "flags": 0,
                                "escapedText": "childGroup"
                            },
                            "type": "FormGroup",
                            "tagName": {
                                "pos": 1220,
                                "end": 1225,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": ""
                        }
                    ]
                },
                {
                    "name": "signupUser",
                    "args": [
                        {
                            "name": "form",
                            "type": "FormGroup"
                        }
                    ],
                    "optional": false,
                    "returnType": "NewUser",
                    "typeParameters": [],
                    "line": 50,
                    "description": "<p>Take the sign up form and transform into NewUser object</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1451,
                                "end": 1455,
                                "flags": 0,
                                "escapedText": "form"
                            },
                            "type": "FormGroup",
                            "tagName": {
                                "pos": 1445,
                                "end": 1450,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": ""
                        },
                        {
                            "tagName": {
                                "pos": 1463,
                                "end": 1470,
                                "flags": 0,
                                "escapedText": "returns"
                            },
                            "comment": "",
                            "returnType": ""
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Output } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from '@angular/forms';\r\nimport { IOutlineInputeConfig } from '@shared/components/inputs/outline-input/outline-input.component';\r\nimport { NewUser } from '@shared/services/auth/auth.service';\r\n\r\n@Component({\r\n  selector: 'brave-simple-signup-form',\r\n  templateUrl: './simple-signup-form.component.html',\r\n})\r\nexport class SimpleSignupFormComponent {\r\n  @Output() forgotClick: EventEmitter<MouseEvent> = new EventEmitter();\r\n  @Output() signupClick: EventEmitter<NewUser> = new EventEmitter();\r\n\r\n  parentForm: FormGroup;\r\n  emailConfig: IOutlineInputeConfig = {\r\n    size: 'sm',\r\n    label: 'Email',\r\n    type: 'email',\r\n    placeholder: 'Email address',\r\n    autocomplete: 'email',\r\n  };\r\n  passwordConfig: IOutlineInputeConfig = {\r\n    size: 'sm',\r\n    label: 'Password',\r\n    type: 'password',\r\n    placeholder: 'Password',\r\n    autocomplete: 'off',\r\n  };\r\n\r\n  constructor(fb: FormBuilder) {\r\n    this.parentForm = fb.group({\r\n      name: ['simple-signup-form'],\r\n    }); // simple parent form with name of form\r\n  }\r\n\r\n  /**\r\n   * Add a new child form control using the child form group\r\n   * @param childName\r\n   * @param childGroup\r\n   */\r\n  addChild(childName: string, childGroup: FormGroup): void {\r\n    this.parentForm.addControl(childName, childGroup);\r\n  }\r\n\r\n  /**\r\n   * Take the sign up form and transform into NewUser object\r\n   * @param form\r\n   * @returns {NewUser}\r\n   */\r\n  signupUser(form: FormGroup): NewUser {\r\n    const { email, password } = form.value;\r\n    return {\r\n      username: email.input,\r\n      password: password.input,\r\n    };\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "fb",
                        "type": "FormBuilder"
                    }
                ],
                "line": 28,
                "jsdoctags": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<form [formGroup]=\"parentForm\">\r\n  <brave-outline-input\r\n    [config]=\"emailConfig\"\r\n    (onComponentReady)=\"addChild('email', $event)\"\r\n    [required]=\"true\"\r\n    [asteriskOverride]=\"true\"\r\n  >\r\n  </brave-outline-input>\r\n  <brave-outline-input\r\n    [config]=\"passwordConfig\"\r\n    (onComponentReady)=\"addChild('password', $event)\"\r\n    [required]=\"true\"\r\n    [asteriskOverride]=\"true\"\r\n  >\r\n  </brave-outline-input>\r\n  <div class=\"-mt-2\">\r\n    <div class=\"flex justify-end items-end\">\r\n      <a\r\n        class=\"text-xs text-blueGray-600 hover:cursor-pointer\"\r\n        (click)=\"forgotClick.emit($event)\"\r\n        >Forgot password?</a\r\n      >\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"mt-5\">\r\n    <div class=\"flex justify-center items-center\">\r\n      <brave-filled-onlytext-button\r\n        [disabled]=\"!parentForm.valid\"\r\n        (click)=\"signupClick.emit(signupUser(parentForm))\"\r\n        >Sign Up</brave-filled-onlytext-button\r\n      >\r\n    </div>\r\n  </div>\r\n</form>\r\n"
        },
        {
            "name": "SnapshotDisplayCardComponent",
            "id": "component-SnapshotDisplayCardComponent-18fe7442c1c3276cc04220f0cc9117be",
            "file": "src/app/shared/components/cards/snapshot-display-card/snapshot-display-card.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-snapshot-display-card",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./snapshot-display-card.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "label",
                    "defaultValue": "LabelOfSnapshot.NoLabel",
                    "line": 26,
                    "type": "LabelOfSnapshot"
                },
                {
                    "name": "status",
                    "defaultValue": "SnapshotStatus.Default",
                    "line": 20,
                    "type": "SnapshotStatus"
                },
                {
                    "name": "tendency",
                    "defaultValue": "'no-tendency'",
                    "line": 22,
                    "type": "SnapshotTendency"
                },
                {
                    "name": "title",
                    "defaultValue": "''",
                    "line": 21
                },
                {
                    "name": "typeOfDate",
                    "defaultValue": "'Years'",
                    "line": 25,
                    "type": "TypeOfDate"
                },
                {
                    "name": "typeOfSnapshot",
                    "defaultValue": "'tag'",
                    "line": 23,
                    "type": "TypeOfSnapshot"
                },
                {
                    "name": "value",
                    "defaultValue": "''",
                    "line": 24,
                    "type": "string | number"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\r\nimport { LabelOfSnapshot } from './snapshot-label.pipe';\r\nexport type Status = 'excellent' | 'good' | 'okay' | 'poor';\r\nexport type TypeOfSnapshot = 'date' | 'percentage' | 'digit' | 'tag' | 'time';\r\nexport type TypeOfDate = 'Years' | 'Months' | 'Days';\r\nexport type SnapshotTendency = 'up' | 'down' | 'no-tendency';\r\n\r\nexport enum SnapshotStatus {\r\n  Critical = 'critical',\r\n  Danger = 'danger',\r\n  Safe = 'safe',\r\n  Default = 'default',\r\n}\r\n\r\n@Component({\r\n  selector: 'brave-snapshot-display-card',\r\n  templateUrl: './snapshot-display-card.component.html',\r\n})\r\nexport class SnapshotDisplayCardComponent implements OnInit {\r\n  @Input() status: SnapshotStatus = SnapshotStatus.Default;\r\n  @Input() title = '';\r\n  @Input() tendency: SnapshotTendency = 'no-tendency';\r\n  @Input() typeOfSnapshot: TypeOfSnapshot = 'tag';\r\n  @Input() value: string | number = '';\r\n  @Input() typeOfDate: TypeOfDate = 'Years';\r\n  @Input() label: LabelOfSnapshot = LabelOfSnapshot.NoLabel;\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 26
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<!-- no-purge for component -->\n<div class=\"text-brave-danger bg-brave-danger bg-brave-critical bg-brave-safe text-brave-danger text-brave-critical text-brave-safe mt-4 mt-3\" *ngIf=\"false\"></div>\n\n<div class=\"relative flex break-words w-full py-2 rounded-lg border border-blueGray-300 min-h-14 max-h-14 mt-3\">\n  <!-- tag div: Display of current type of snapshot -->\n  <div class=\"absolute -mt-5 ml-3 px-1 font-semibold bg-white\" *ngIf=\"label !== undefined\"><span class=\"font-sans\" [ngClass]=\"label | snapshotLabel:'color-class'\">{{ label | snapshotLabel:'text' }}</span></div>\n  <!-- left column  section 1: Display of current snapshot status indicator-->\n  <div class=\"flex items-center ml-3 mr-6\">\n    <div class=\"rounded-full border-none w-4 h-4\" [ngClass]=\"status | snapshotStatus:'background'\"></div>\n  </div>\n  <div class=\"flex flex-col mr-auto justify-center\">\n    <!--  center column section 2: Display of snapshot card information -->\n    <div class=\"flex flex-row items-center\">\n      <p class=\"text-base font-semibold font-sans text-dk-gray\">{{ title }}</p>\n      <div class=\"ml-2\" *ngIf=\"tendency !== 'no-tendency'\">\n        <span class=\"transform rotate-45\"  *ngIf=\"tendency === 'down'\">&darr;</span>\n        <span *ngIf=\"tendency === 'up'\">&uarr;</span>\n      </div>\n    </div>\n    <div class=\"flex flex-row items-center\">\n      <p class=\"text-2.5 text-opacity-50 font-sans text-dk-gray\">Learn More</p>\n      <span class=\"ml-2 text-little-card-icon text-md-gray\">&#10095;</span>\n    </div>\n  </div>\n  <!-- right column section 3: Display of values -->\n  <div class=\"flex flex-col items-center mr-8 text-center\">\n    <span class=\"text-xl m-auto\">\n      <p class=\"font-bold font-headings\" *ngIf=\"typeOfSnapshot === 'tag'\" [ngClass]=\"status | snapshotStatus: 'text'\">{{ value }}</p>\n      <p class=\"font-bold font-headings text-dk-gray\" *ngIf=\"typeOfSnapshot !== 'tag'\">{{ value }}<span *ngIf=\"typeOfSnapshot === 'percentage'\">%</span></p>\n    </span>\n    <span class=\"text-2.5 -mt-1\" *ngIf=\"typeOfSnapshot === 'date'\">\n      <p class=\"font-sans text-dk-gray\">{{ typeOfDate }}</p>\n    </span>\n  </div>\n</div>\n\n"
        },
        {
            "name": "SsnFullFormComponent",
            "id": "component-SsnFullFormComponent-50667ee8e26b25749fa9d54b7a129086",
            "file": "src/app/shared/components/forms/ssn-full-form/ssn-full-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{ provide: , useValue:  }"
                }
            ],
            "selector": "brave-ssn-full-form",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./ssn-full-form.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "hideHint",
                    "defaultValue": "false",
                    "line": 16,
                    "type": "boolean",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "onChanges",
                    "defaultValue": "new EventEmitter()",
                    "line": 9,
                    "type": "EventEmitter<any>",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "onSubmit",
                    "defaultValue": "new EventEmitter()",
                    "line": 10,
                    "type": "EventEmitter<FormGroup>",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "onSubmitError",
                    "defaultValue": "new EventEmitter()",
                    "line": 12,
                    "type": "EventEmitter<literal type>",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "childName",
                    "defaultValue": "'input'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "hiddenFields",
                    "type": "QueryList<HiddenAsteriskInputComponent> | undefined",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "decorators": [
                        {
                            "name": "ViewChildren",
                            "stringifiedArguments": "HiddenAsteriskInputComponent"
                        }
                    ]
                },
                {
                    "name": "parentForm",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "clearForm",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 41,
                    "description": "<p>Clears out all the values from the form</p>\n"
                },
                {
                    "name": "formatChildName",
                    "args": [
                        {
                            "name": "childName",
                            "type": "string"
                        },
                        {
                            "name": "digit",
                            "type": "number"
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 21,
                    "jsdoctags": [
                        {
                            "name": "childName",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "digit",
                            "type": "number",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "moveNext",
                    "args": [
                        {
                            "name": "idx",
                            "type": "number"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "description": "<p>Moves to the component located at the index</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 972,
                                "end": 975,
                                "flags": 0,
                                "escapedText": "idx"
                            },
                            "type": "number",
                            "tagName": {
                                "pos": 966,
                                "end": 971,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": ""
                        }
                    ]
                },
                {
                    "name": "addChild",
                    "args": [
                        {
                            "name": "childName",
                            "type": "string"
                        },
                        {
                            "name": "childGroup",
                            "type": "FormGroup"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "jsdoctags": [
                        {
                            "name": "childName",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "childGroup",
                            "type": "FormGroup",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "submitForm",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, QueryList, ViewChildren } from '@angular/core';\r\nimport { FormBuilder } from '@angular/forms';\r\nimport { BaseFormComponent } from '@shared/components/forms/base-form/base-form.component';\r\nimport { HiddenAsteriskInputComponent } from '@shared/components/inputs/hidden-asterisk-input/hidden-asterisk-input.component';\r\n\r\n@Component({\r\n  selector: 'brave-ssn-full-form',\r\n  templateUrl: './ssn-full-form.component.html',\r\n  providers: [{ provide: 'name', useValue: 'ssnfull-form' }],\r\n})\r\nexport class SsnFullFormComponent extends BaseFormComponent {\r\n  @ViewChildren(HiddenAsteriskInputComponent)\r\n  hiddenFields: QueryList<HiddenAsteriskInputComponent> | undefined;\r\n\r\n  childName: string = 'input';\r\n\r\n  constructor(fb: FormBuilder) {\r\n    super(fb, 'ssnfull-form');\r\n  }\r\n\r\n  formatChildName(childName: string, digit: number): string {\r\n    return `${childName}-${digit}`;\r\n  }\r\n\r\n  /**\r\n   * Moves to the component located at the index\r\n   * @param idx\r\n   */\r\n  moveNext(idx: number): void {\r\n    const comp = this.hiddenFields?.find((c, i) => i === idx + 1);\r\n    if (comp) {\r\n      setTimeout(() => {\r\n        comp.focusMe();\r\n      }, 500);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Clears out all the values from the form\r\n   */\r\n  clearForm(): void {\r\n    this.hiddenFields?.forEach((c) => {\r\n      c.clearMe();\r\n    });\r\n    this.hiddenFields?.first.focusMe(); // set the cursor to the first one\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "fb",
                        "type": "FormBuilder"
                    }
                ],
                "line": 15,
                "jsdoctags": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "BaseFormComponent",
            "templateData": "<!-- first three digits -->\r\n<form [formGroup]=\"parentForm\">\r\n  <div class=\"flex\">\r\n    <!-- first three digits -->\r\n    <span\r\n      class=\"flex justify-center items-center p-1 border-0 rounded bg-coolGray-100\"\r\n    >\r\n      <!-- Passing parent form to the child component -->\r\n      <div *ngFor=\"let x of [0, 1, 2]; index as idx\" class=\"flex mr-1\">\r\n        <brave-hidden-asterisk-input\r\n          [index]=\"idx\"\r\n          (onComponentReady)=\"addChild(formatChildName(childName, x), $event)\"\r\n          (onMoveNext)=\"moveNext(x)\"\r\n        >\r\n        </brave-hidden-asterisk-input>\r\n      </div>\r\n    </span>\r\n\r\n    <!-- hyphen -->\r\n    <span class=\"flex justify-center items-center -mt-2 p-1\">&#8212; </span>\r\n\r\n    <!-- second two digits -->\r\n    <span\r\n      class=\"flex justify-center items-center p-1 border-0 rounded bg-coolGray-100\"\r\n    >\r\n      <!-- Passing parent form to the child component -->\r\n      <div *ngFor=\"let x of [3, 4]; index as idx\" class=\"flex mr-1\">\r\n        <brave-hidden-asterisk-input\r\n          [index]=\"idx\"\r\n          (onComponentReady)=\"addChild(formatChildName(childName, x), $event)\"\r\n          (onMoveNext)=\"moveNext(x)\"\r\n        >\r\n        </brave-hidden-asterisk-input>\r\n      </div>\r\n    </span>\r\n\r\n    <!-- hyphen -->\r\n    <span class=\"flex justify-center items-center -mt-2 p-1\">&#8212; </span>\r\n\r\n    <!-- last four to populate -->\r\n    <span\r\n      class=\"flex justify-center items-center p-1 border-0 rounded bg-coolGray-100\"\r\n    >\r\n      <!-- Passing parent form to the child component -->\r\n      <div *ngFor=\"let x of [5, 6, 7, 8]; index as idx\" class=\"flex mr-1\">\r\n        <brave-hidden-asterisk-input\r\n          [index]=\"idx\"\r\n          (onComponentReady)=\"addChild(formatChildName(childName, x), $event)\"\r\n          (onMoveNext)=\"moveNext(x)\"\r\n        >\r\n        </brave-hidden-asterisk-input>\r\n      </div>\r\n    </span>\r\n  </div>\r\n</form>\r\n"
        },
        {
            "name": "SsnLastfourFormComponent",
            "id": "component-SsnLastfourFormComponent-2bee1ceac703fa6cada14790ad15fbd0",
            "file": "src/app/shared/components/forms/ssn-lastfour-form/ssn-lastfour-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{ provide: , useValue:  }"
                }
            ],
            "selector": "brave-ssn-lastfour-form",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./ssn-lastfour-form.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "hideHint",
                    "defaultValue": "false",
                    "line": 16,
                    "type": "boolean",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "onChanges",
                    "defaultValue": "new EventEmitter()",
                    "line": 9,
                    "type": "EventEmitter<any>",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "onSubmit",
                    "defaultValue": "new EventEmitter()",
                    "line": 10,
                    "type": "EventEmitter<FormGroup>",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "onSubmitError",
                    "defaultValue": "new EventEmitter()",
                    "line": 12,
                    "type": "EventEmitter<literal type>",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "childName",
                    "defaultValue": "'input'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "hiddenFields",
                    "type": "QueryList<HiddenAsteriskInputComponent> | undefined",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "decorators": [
                        {
                            "name": "ViewChildren",
                            "stringifiedArguments": "HiddenAsteriskInputComponent"
                        }
                    ]
                },
                {
                    "name": "parentForm",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "clearForm",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 41,
                    "description": "<p>Clears out all the values from the form</p>\n"
                },
                {
                    "name": "formatChildName",
                    "args": [
                        {
                            "name": "childName",
                            "type": "string"
                        },
                        {
                            "name": "digit",
                            "type": "number"
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 21,
                    "jsdoctags": [
                        {
                            "name": "childName",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "digit",
                            "type": "number",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "moveNext",
                    "args": [
                        {
                            "name": "idx",
                            "type": "number"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "description": "<p>Moves to the component located at the index</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 992,
                                "end": 995,
                                "flags": 0,
                                "escapedText": "idx"
                            },
                            "type": "number",
                            "tagName": {
                                "pos": 986,
                                "end": 991,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": ""
                        }
                    ]
                },
                {
                    "name": "addChild",
                    "args": [
                        {
                            "name": "childName",
                            "type": "string"
                        },
                        {
                            "name": "childGroup",
                            "type": "FormGroup"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "jsdoctags": [
                        {
                            "name": "childName",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "childGroup",
                            "type": "FormGroup",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "submitForm",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, QueryList, ViewChildren } from '@angular/core';\r\nimport { FormBuilder } from '@angular/forms';\r\nimport { BaseFormComponent } from '@shared/components/forms/base-form/base-form.component';\r\nimport { HiddenAsteriskInputComponent } from '@shared/components/inputs/hidden-asterisk-input/hidden-asterisk-input.component';\r\n\r\n@Component({\r\n  selector: 'brave-ssn-lastfour-form',\r\n  templateUrl: './ssn-lastfour-form.component.html',\r\n  providers: [{ provide: 'name', useValue: 'address-form' }],\r\n})\r\nexport class SsnLastfourFormComponent extends BaseFormComponent {\r\n  @ViewChildren(HiddenAsteriskInputComponent)\r\n  hiddenFields: QueryList<HiddenAsteriskInputComponent> | undefined;\r\n\r\n  childName: string = 'input';\r\n\r\n  constructor(fb: FormBuilder) {\r\n    super(fb, 'lastfour-form');\r\n  }\r\n\r\n  formatChildName(childName: string, digit: number): string {\r\n    return `${childName}-${digit}`;\r\n  }\r\n\r\n  /**\r\n   * Moves to the component located at the index\r\n   * @param idx\r\n   */\r\n  moveNext(idx: number): void {\r\n    const comp = this.hiddenFields?.find((c) => c.index === idx + 1);\r\n    if (comp) {\r\n      setTimeout(() => {\r\n        comp.focusMe();\r\n      }, 500);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Clears out all the values from the form\r\n   */\r\n  clearForm(): void {\r\n    this.hiddenFields?.forEach((c) => {\r\n      c.clearMe();\r\n    });\r\n    this.hiddenFields?.first.focusMe(); // set the cursor to the first one\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "fb",
                        "type": "FormBuilder"
                    }
                ],
                "line": 15,
                "jsdoctags": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "BaseFormComponent",
            "templateData": "<div class=\"flex\">\r\n  <!-- first three digits -->\r\n  <span *ngFor=\"let number of [0, 1, 2]\" class=\"flex justify-center p-1\">\r\n    <div style=\"position: relative\">\r\n      <div\r\n        class=\"flex text-3xl w-4 h-full pt-1 justify-center items-center text-blueGray-600\"\r\n      >\r\n        <p>&#42;</p>\r\n      </div>\r\n    </div>\r\n  </span>\r\n\r\n  <!-- hyphen -->\r\n  <span class=\"flex justify-center items-center -mt-2 p-1\">&#8212; </span>\r\n\r\n  <!-- second two digits -->\r\n  <span *ngFor=\"let number of [0, 1]\" class=\"flex justify-center p-1\">\r\n    <div style=\"position: relative\">\r\n      <div\r\n        class=\"flex text-3xl w-4 h-full pt-1 justify-center items-center text-blueGray-600\"\r\n      >\r\n        <p>&#42;</p>\r\n      </div>\r\n    </div>\r\n  </span>\r\n\r\n  <!-- hyphen -->\r\n  <span class=\"flex justify-center items-center -mt-2 p-1\">&#8212; </span>\r\n\r\n  <!-- last four to populate -->\r\n  <span class=\"flex flex-shrink border-0 rounded bg-coolGray-100\">\r\n    <form [formGroup]=\"parentForm\" class=\"flex justify-center items-center\">\r\n      <!-- Passing parent form to the child component -->\r\n      <div *ngFor=\"let x of [0, 1, 2, 3]; index as idx\" class=\"flex\">\r\n        <brave-hidden-asterisk-input\r\n          [index]=\"idx\"\r\n          (onComponentReady)=\"addChild(formatChildName(childName, x), $event)\"\r\n          (onMoveNext)=\"moveNext(idx)\"\r\n        >\r\n        </brave-hidden-asterisk-input>\r\n      </div>\r\n    </form>\r\n  </span>\r\n</div>\r\n"
        },
        {
            "name": "TableDropdownComponent",
            "id": "component-TableDropdownComponent-22072efb0c03c738639bdcd97397b77f",
            "file": "src/app/shared/components/dropdowns/popdowns/table-dropdown/table-dropdown.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-table-dropdown",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./table-dropdown.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "btnDropdownRef",
                    "type": "ElementRef | undefined",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'btnDropdownRef', {static: false}"
                        }
                    ]
                },
                {
                    "name": "dropdownPopoverShow",
                    "defaultValue": "false",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "popoverDropdownRef",
                    "type": "ElementRef | undefined",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'popoverDropdownRef', {static: false}"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15
                },
                {
                    "name": "toggleDropdown",
                    "args": [
                        {
                            "name": "event",
                            "type": "literal type"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "literal type",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, AfterViewInit, ViewChild, ElementRef } from '@angular/core';\r\nimport { createPopper } from '@popperjs/core';\r\n\r\n@Component({\r\n  selector: 'brave-table-dropdown',\r\n  templateUrl: './table-dropdown.component.html',\r\n})\r\nexport class TableDropdownComponent implements AfterViewInit {\r\n  dropdownPopoverShow = false;\r\n  @ViewChild('btnDropdownRef', { static: false }) btnDropdownRef:\r\n    | ElementRef\r\n    | undefined;\r\n  @ViewChild('popoverDropdownRef', { static: false })\r\n  popoverDropdownRef: ElementRef | undefined;\r\n  ngAfterViewInit() {\r\n    createPopper(\r\n      this.btnDropdownRef?.nativeElement,\r\n      this.popoverDropdownRef?.nativeElement,\r\n      {\r\n        placement: 'bottom-start',\r\n      }\r\n    );\r\n  }\r\n  toggleDropdown(event: { preventDefault: () => void }) {\r\n    event.preventDefault();\r\n    if (this.dropdownPopoverShow) {\r\n      this.dropdownPopoverShow = false;\r\n    } else {\r\n      this.dropdownPopoverShow = true;\r\n    }\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "implements": [
                "AfterViewInit"
            ],
            "templateData": "<a\r\n  class=\"text-blueGray-500 block py-1 px-3\"\r\n  href=\"#pablo\"\r\n  (click)=\"toggleDropdown($event)\"\r\n  #btnDropdownRef\r\n>\r\n  <i class=\"fas fa-ellipsis-v\"></i>\r\n</a>\r\n<div class=\"min-w-48 z-50\" #popoverDropdownRef>\r\n  <div\r\n    class=\"bg-white text-base float-left py-2 list-none text-left rounded shadow-lg mt-1 min-w-48\"\r\n    [ngClass]=\"dropdownPopoverShow ? 'block' : 'hidden'\"\r\n  >\r\n    <a\r\n      href=\"#pablo\"\r\n      class=\"text-sm py-2 px-4 font-normal block w-full whitespace-nowrap bg-transparent text-blueGray-700\"\r\n    >\r\n      Action\r\n    </a>\r\n    <a\r\n      href=\"#pablo\"\r\n      class=\"text-sm py-2 px-4 font-normal block w-full whitespace-nowrap bg-transparent text-blueGray-700\"\r\n    >\r\n      Another action\r\n    </a>\r\n    <a\r\n      href=\"#pablo\"\r\n      class=\"text-sm py-2 px-4 font-normal block w-full whitespace-nowrap bg-transparent text-blueGray-700\"\r\n    >\r\n      Something else here\r\n    </a>\r\n    <div class=\"h-0 my-2 border border-solid border-blueGray-100\"></div>\r\n    <a\r\n      href=\"#pablo\"\r\n      class=\"text-sm py-2 px-4 font-normal block w-full whitespace-nowrap bg-transparent text-blueGray-700\"\r\n    >\r\n      Seprated link\r\n    </a>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "UserDropdownComponent",
            "id": "component-UserDropdownComponent-13e13b121f81361ef81dcdf18efac5c5",
            "file": "src/app/shared/components/dropdowns/popdowns/user-dropdown/user-dropdown.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-user-dropdown",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./user-dropdown.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "btnDropdownRef",
                    "type": "ElementRef | undefined",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'btnDropdownRef', {static: false}"
                        }
                    ]
                },
                {
                    "name": "dropdownPopoverShow",
                    "defaultValue": "false",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "popoverDropdownRef",
                    "type": "ElementRef | undefined",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'popoverDropdownRef', {static: false}"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15
                },
                {
                    "name": "toggleDropdown",
                    "args": [
                        {
                            "name": "event",
                            "type": "literal type"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "literal type",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, AfterViewInit, ViewChild, ElementRef } from '@angular/core';\r\nimport { createPopper } from '@popperjs/core';\r\n\r\n@Component({\r\n  selector: 'brave-user-dropdown',\r\n  templateUrl: './user-dropdown.component.html',\r\n})\r\nexport class UserDropdownComponent implements AfterViewInit {\r\n  dropdownPopoverShow = false;\r\n  @ViewChild('btnDropdownRef', { static: false }) btnDropdownRef:\r\n    | ElementRef\r\n    | undefined;\r\n  @ViewChild('popoverDropdownRef', { static: false })\r\n  popoverDropdownRef: ElementRef | undefined;\r\n  ngAfterViewInit() {\r\n    createPopper(\r\n      this.btnDropdownRef?.nativeElement,\r\n      this.popoverDropdownRef?.nativeElement,\r\n      {\r\n        placement: 'bottom-start',\r\n      }\r\n    );\r\n  }\r\n  toggleDropdown(event: { preventDefault: () => void }) {\r\n    event.preventDefault();\r\n    if (this.dropdownPopoverShow) {\r\n      this.dropdownPopoverShow = false;\r\n    } else {\r\n      this.dropdownPopoverShow = true;\r\n    }\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "implements": [
                "AfterViewInit"
            ],
            "templateData": "<a\r\n  class=\"text-blueGray-500 block\"\r\n  href=\"#pablo\"\r\n  (click)=\"toggleDropdown($event)\"\r\n  #btnDropdownRef\r\n>\r\n  <div class=\"items-center flex\">\r\n    <span\r\n      class=\"w-12 h-12 text-sm text-white bg-blueGray-200 inline-flex items-center justify-center rounded-full\"\r\n    >\r\n      <img\r\n        alt=\"...\"\r\n        class=\"w-full rounded-full align-middle border-none shadow-lg\"\r\n        src=\"assets/img/team-1-800x800.jpg\"\r\n      />\r\n    </span>\r\n  </div>\r\n</a>\r\n<div class=\"min-w-48 z-50\" #popoverDropdownRef>\r\n  <div\r\n    class=\"bg-white text-base z-50 float-left py-2 list-none text-left rounded shadow-lg mt-1 min-w-48\"\r\n    [ngClass]=\"dropdownPopoverShow ? 'block' : 'hidden'\"\r\n  >\r\n    <a\r\n      href=\"#pablo\"\r\n      class=\"text-sm py-2 px-4 font-normal block w-full whitespace-nowrap bg-transparent text-blueGray-700\"\r\n    >\r\n      Action\r\n    </a>\r\n    <a\r\n      href=\"#pablo\"\r\n      class=\"text-sm py-2 px-4 font-normal block w-full whitespace-nowrap bg-transparent text-blueGray-700\"\r\n    >\r\n      Another action\r\n    </a>\r\n    <a\r\n      href=\"#pablo\"\r\n      class=\"text-sm py-2 px-4 font-normal block w-full whitespace-nowrap bg-transparent text-blueGray-700\"\r\n    >\r\n      Something else here\r\n    </a>\r\n    <div class=\"h-0 my-2 border border-solid border-blueGray-100\"></div>\r\n    <a\r\n      href=\"#pablo\"\r\n      class=\"text-sm py-2 px-4 font-normal block w-full whitespace-nowrap bg-transparent text-blueGray-700\"\r\n    >\r\n      Seprated link\r\n    </a>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "ViewdetailButtonComponent",
            "id": "component-ViewdetailButtonComponent-894c398856aa68eef195c3cde5fbd0f1",
            "file": "src/app/shared/components/buttons/viewdetail-button/viewdetail-button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-viewdetail-button",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./viewdetail-button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "open",
                    "defaultValue": "false",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "open$",
                    "defaultValue": "new Subject()",
                    "type": "Subject<boolean>",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'brave-viewdetail-button',\r\n  templateUrl: './viewdetail-button.component.html',\r\n})\r\nexport class ViewdetailButtonComponent implements OnInit {\r\n  open: boolean = false;\r\n  open$: Subject<boolean> = new Subject();\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 10
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<button\r\n  type=\"button\"\r\n  class=\"relative flex bg-transparent font-sans text-sm text-coolGray-700 text-left hover:cursor-pointer focus:outline-none\"\r\n  (click)=\"open = !open; open$.next(open)\"\r\n>\r\n  <span class=\"flex items-center mr-2\">\r\n    <p *ngIf=\"!open\"><ng-content></ng-content></p>\r\n    <p *ngIf=\"open\">Close</p>\r\n  </span>\r\n  <!-- TODO replace with material icon and add transform rotation-->\r\n  <span *ngIf=\"!open\" style=\"transform: rotate(90deg)\"> &#10095; </span>\r\n  <span *ngIf=\"open\" style=\"transform: rotate(270deg)\"> &#10095; </span>\r\n</button>\r\n"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        },
                        {
                            "name": "AuthenticationModule"
                        },
                        {
                            "name": "OnboardingModule"
                        },
                        {
                            "name": "SharedDirectivesModule"
                        },
                        {
                            "name": "SharedServicesModule"
                        },
                        {
                            "name": "ViewsModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AuthenticationModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "DashboardComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AuthenticationRoutingModule"
                        },
                        {
                            "name": "ViewsModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "DashboardComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AuthenticationRoutingModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ComplianceModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "DashboardComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "ComplianceRoutingModule"
                        },
                        {
                            "name": "ViewsModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "DashboardComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ComplianceRoutingModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "DashboardModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "DashboardComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "DashboardRoutingModule"
                        },
                        {
                            "name": "ViewsModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "DashboardComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "DashboardRoutingModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "OnboardingModule",
            "children": [
                {
                    "type": "providers",
                    "elements": [
                        {
                            "name": "OnboardingService"
                        }
                    ]
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "DashboardComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "OnboardingRoutingModule"
                        },
                        {
                            "name": "ViewsModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "DashboardComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "OnboardingRoutingModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SharedComponentsModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "DashboardComponent"
                        },
                        {
                            "name": "HiddenAsteriskInputDirective"
                        },
                        {
                            "name": "KbaMultiplechoiceInputComponent"
                        },
                        {
                            "name": "KycKbaquestionsPipe"
                        },
                        {
                            "name": "OutlineTooltipDirective"
                        },
                        {
                            "name": "SnapshotLabelPipe"
                        },
                        {
                            "name": "SnapshotStatusPipe"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "DashboardComponent"
                        },
                        {
                            "name": "HiddenAsteriskInputDirective"
                        },
                        {
                            "name": "KycKbaquestionsPipe"
                        },
                        {
                            "name": "OutlineTooltipDirective"
                        },
                        {
                            "name": "SnapshotLabelPipe"
                        },
                        {
                            "name": "SnapshotStatusPipe"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SharedDirectivesModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SharedPipesModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SharedServicesModule",
            "children": [
                {
                    "type": "providers",
                    "elements": [
                        {
                            "name": "APIService"
                        },
                        {
                            "name": "AuthService"
                        },
                        {
                            "name": "GuestService"
                        },
                        {
                            "name": "IamService"
                        },
                        {
                            "name": "KycService"
                        },
                        {
                            "name": "SyncService"
                        },
                        {
                            "name": "TransunionService"
                        }
                    ]
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ViewsModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "CompliancePrivacyComponent"
                        },
                        {
                            "name": "ComplianceTosComponent"
                        },
                        {
                            "name": "DashboardInitComponent"
                        },
                        {
                            "name": "KycAddressComponent"
                        },
                        {
                            "name": "KycAddressPureComponent"
                        },
                        {
                            "name": "KycBaseComponent"
                        },
                        {
                            "name": "KycCongratulationsComponent"
                        },
                        {
                            "name": "KycCongratulationsPureComponent"
                        },
                        {
                            "name": "KycIdverificationComponent"
                        },
                        {
                            "name": "KycIdverificationPureComponent"
                        },
                        {
                            "name": "KycKbaquestionsComponent"
                        },
                        {
                            "name": "KycKbaquestionsPipe"
                        },
                        {
                            "name": "KycKbaquestionsPureComponent"
                        },
                        {
                            "name": "KycPhonenumberComponent"
                        },
                        {
                            "name": "KycPhonenumberPureComponent"
                        },
                        {
                            "name": "KycSsnComponent"
                        },
                        {
                            "name": "KycSsnFullComponent"
                        },
                        {
                            "name": "KycSsnFullPureComponent"
                        },
                        {
                            "name": "KycSsnPureComponent"
                        },
                        {
                            "name": "KycWelcomeComponent"
                        },
                        {
                            "name": "KycWelcomePureComponent"
                        },
                        {
                            "name": "KycWelcomebackComponent"
                        },
                        {
                            "name": "KycWelcomebackPureComponent"
                        },
                        {
                            "name": "SigninComponent"
                        },
                        {
                            "name": "SigninForgotComponent"
                        },
                        {
                            "name": "SigninPureComponent"
                        },
                        {
                            "name": "SigninRedirectComponent"
                        },
                        {
                            "name": "SignupComponent"
                        },
                        {
                            "name": "SignupErrorComponent"
                        },
                        {
                            "name": "SignupErrorValidationComponent"
                        },
                        {
                            "name": "SignupKnowyouComponent"
                        },
                        {
                            "name": "SignupPureComponent"
                        },
                        {
                            "name": "SignupResendComponent"
                        },
                        {
                            "name": "SignupThankyouComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "CompliancePrivacyComponent"
                        },
                        {
                            "name": "ComplianceTosComponent"
                        },
                        {
                            "name": "DashboardInitComponent"
                        },
                        {
                            "name": "KycAddressComponent"
                        },
                        {
                            "name": "KycAddressPureComponent"
                        },
                        {
                            "name": "KycBaseComponent"
                        },
                        {
                            "name": "KycCongratulationsComponent"
                        },
                        {
                            "name": "KycCongratulationsPureComponent"
                        },
                        {
                            "name": "KycIdverificationComponent"
                        },
                        {
                            "name": "KycIdverificationPureComponent"
                        },
                        {
                            "name": "KycKbaquestionsComponent"
                        },
                        {
                            "name": "KycKbaquestionsPipe"
                        },
                        {
                            "name": "KycKbaquestionsPureComponent"
                        },
                        {
                            "name": "KycPhonenumberComponent"
                        },
                        {
                            "name": "KycPhonenumberPureComponent"
                        },
                        {
                            "name": "KycSsnComponent"
                        },
                        {
                            "name": "KycSsnFullComponent"
                        },
                        {
                            "name": "KycSsnFullPureComponent"
                        },
                        {
                            "name": "KycSsnPureComponent"
                        },
                        {
                            "name": "KycWelcomeComponent"
                        },
                        {
                            "name": "KycWelcomePureComponent"
                        },
                        {
                            "name": "KycWelcomebackComponent"
                        },
                        {
                            "name": "KycWelcomebackPureComponent"
                        },
                        {
                            "name": "SigninComponent"
                        },
                        {
                            "name": "SigninForgotComponent"
                        },
                        {
                            "name": "SigninPureComponent"
                        },
                        {
                            "name": "SigninRedirectComponent"
                        },
                        {
                            "name": "SignupComponent"
                        },
                        {
                            "name": "SignupErrorComponent"
                        },
                        {
                            "name": "SignupErrorValidationComponent"
                        },
                        {
                            "name": "SignupKnowyouComponent"
                        },
                        {
                            "name": "SignupPureComponent"
                        },
                        {
                            "name": "SignupResendComponent"
                        },
                        {
                            "name": "SignupThankyouComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "_deleteKeyNestedObject",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/utils/utils.ts",
                "type": "",
                "defaultValue": "(o: any, k: string) => {\n  // console.log('delete', o, o[k], k);\n  if (!o) return;\n  delete o[k];\n  Object.keys(o).forEach((key) => {\n    if (typeof o[key] === 'object') {\n      _deleteKeyNestedObject(o[key], k);\n    }\n  });\n}"
            },
            {
                "name": "_updateNestedRecurse",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/utils/utils.ts",
                "type": "",
                "defaultValue": "(o: any, k: string, v: any) => {\n  if (!o) return;\n  Object.keys(o).forEach((key) => {\n    if (key == k) o[k] = v;\n    if (typeof o[key] === 'object') {\n      _updateNestedRecurse(o[key], k, v);\n    }\n  });\n}"
            },
            {
                "name": "Accent",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Accent",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/buttons/filled-onlytext-button/filled-onlytext-button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Accent",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/buttons/filled-onlytext-button/filled-onlytext-button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Accent",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/badges/filled-onlytext-badge/filled-onlytext-badge.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "accentConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.stories.ts",
                "type": "IFilledClosingAlertConfig",
                "defaultValue": "{\r\n  size: 'base',\r\n  backgroundColor: 'bg-fuchsia-500',\r\n  color: 'text-white',\r\n  alertTitle: 'Alert!',\r\n  alertBody: 'Something went wrong. Please try again.',\r\n}"
            },
            {
                "name": "accentConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/buttons/filled-onlytext-button/filled-onlytext-button.stories.ts",
                "type": "IFilledOnlyTextButtonConfig",
                "defaultValue": "{\n  buttonSize: 'base',\n  backgroundColor: 'bg-fuchsia-500',\n  activeColor: 'bg-fuchsia-600',\n  color: 'text-white',\n}"
            },
            {
                "name": "accentConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/buttons/filled-onlytext-button/filled-onlytext-button.stories.ts",
                "type": "IFilledOnlyTextButtonConfig",
                "defaultValue": "{\n  buttonSize: 'base',\n  backgroundColor: 'bg-fuchsia-500',\n  activeColor: 'bg-fuchsia-600',\n  color: 'text-white',\n}"
            },
            {
                "name": "accentConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/badges/filled-onlytext-badge/filled-onlytext-badge.stories.ts",
                "type": "IFilledOnlytextBadgeConfig",
                "defaultValue": "{\n  size: 'base',\n  backgroundColor: 'bg-fuchsia-200',\n  color: 'text-fuchsia-500',\n}"
            },
            {
                "name": "address",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/kyc-address/kyc-address/kyc-address.component.ts",
                "type": "Record<string, any>",
                "defaultValue": "{\r\n  addressOne: true,\r\n  addressTwo: true,\r\n  city: true,\r\n  state: true,\r\n  zip: true,\r\n}"
            },
            {
                "name": "Bottom",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/tooltips/outline-tooltip/outline-tooltip.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "braveState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/index.ts",
                "type": "[]",
                "defaultValue": "[\n  AppDataState,\n  UserState,\n  OnboardingState,\n  AgenciesState,\n]"
            },
            {
                "name": "codeMap",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/kyc-idverification/kyc-idverification/kyc-idverification.component.ts",
                "type": "Record<string, any>",
                "defaultValue": "{\r\n  code: true,\r\n}"
            },
            {
                "name": "components",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layouts/dashboard/dashboard.module.ts",
                "type": "[]",
                "defaultValue": "[DashboardComponent]"
            },
            {
                "name": "components",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layouts/compliance/compliance.module.ts",
                "type": "[]",
                "defaultValue": "[ComplianceComponent]"
            },
            {
                "name": "components",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layouts/onboarding/onboarding.module.ts",
                "type": "[]",
                "defaultValue": "[OnboardingComponent]"
            },
            {
                "name": "components",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/shared-components.module.ts",
                "type": "[]",
                "defaultValue": "[\n  BaseFormComponent,\n  SignInComponent,\n  SignUpComponent,\n  FilledOnlytextButtonComponent,\n  LinksOnlytextButtonComponent,\n  OutlineOnlytextButtonComponent,\n  OutlineInputComponent,\n  OutlineOnecolumnFormComponent,\n  GoogleIconsigninButtonComponent,\n  FacebookOnlytextsigninButtonComponent,\n  SimpleSignupFormComponent,\n  OutlineSelectInputComponent,\n  FilledClosingAlertComponent,\n  FilledOnlytextBadgeComponent,\n  IndexDropdownComponent,\n  MenuDropdownComponent,\n  NotificationDropdownComponent,\n  PagesDropdownComponent,\n  TableDropdownComponent,\n  UserDropdownComponent,\n  OutlineOnlytextSelectComponent,\n  FooterComponent,\n  FooterAdminComponent,\n  FooterSmallComponent,\n  HiddenAsteriskInputComponent,\n  OutlineAddressFormComponent,\n  OutlinePhoneFormComponent,\n  OutlineVerificationcodeFormComponent,\n  SsnFullFormComponent,\n  SsnLastfourFormComponent,\n  HiddenAsteriskInputComponent,\n  BaseModalRegularComponent,\n  BaseModalSmallComponent,\n  AdminNavbarComponent,\n  AuthNavbarComponent,\n  DashboardNavbarComponent,\n  IndexNavbarComponent,\n  OutlinePrevnextPaginationComponent,\n  FilledChecktextProgressbarComponent,\n  SidebarComponent,\n  FilledOnlytextTabsComponent,\n  OutlineTooltipComponent,\n  KbaquestionsFormComponent,\n  OutlineNamedobFormComponent,\n  SelectDobFormComponent,\n  OutlineNameFormComponent,\n  CreditcardCardComponent,\n  ViewdetailButtonComponent,\n  LoanCardComponent,\n]"
            },
            {
                "name": "components",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layouts/authentication/authentication.module.ts",
                "type": "[]",
                "defaultValue": "[AuthenticationComponent]"
            },
            {
                "name": "components",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layouts/onboarding/onboarding.module.ts",
                "type": "[]",
                "defaultValue": "[OnboardingComponent]"
            },
            {
                "name": "config",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/modals/base-modal-small/base-modal-small.stories.ts",
                "type": "IBaseModalSmallConfig",
                "defaultValue": "{\r\n  openButtonText: 'Open',\r\n  title: 'Message Title',\r\n  body:\r\n    'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec ultrices est in dolor feugiat, et consequat urna imperdiet. Nam a purus elit. In eu dui fermentum, tincidunt nisi a, pulvinar nulla. Morbi justo lectus, pellentesque ut dignissim at, varius at erat. Nullam porta libero justo, non facilisis urna elementum quis. Sed cursus lacinia faucibus. Nulla at elit erat. Ut at pharetra est. In dictum fringilla odio sed fringilla.',\r\n  actionButtonOneText: 'Cancel',\r\n  actionButtonTwoText: 'Continue',\r\n}"
            },
            {
                "name": "config",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/progressbars/filled-checktext-progressbar/filled-checktext-progressbar.stories.ts",
                "type": "IFilledChecktextProgressbarConfig",
                "defaultValue": "{\r\n  size: 'base',\r\n}"
            },
            {
                "name": "config",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/modals/base-modal-regular/base-modal-regular.stories.ts",
                "type": "IBaseModalRegularConfig",
                "defaultValue": "{\r\n  openButtonText: 'Open',\r\n  title: 'Message Title',\r\n  body:\r\n    'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec ultrices est in dolor feugiat, et consequat urna imperdiet. Nam a purus elit. In eu dui fermentum, tincidunt nisi a, pulvinar nulla. Morbi justo lectus, pellentesque ut dignissim at, varius at erat. Nullam porta libero justo, non facilisis urna elementum quis. Sed cursus lacinia faucibus. Nulla at elit erat. Ut at pharetra est. In dictum fringilla odio sed fringilla.',\r\n  actionButtonOneText: 'Cancel',\r\n  actionButtonTwoText: 'Continue',\r\n}"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/dashboard-init/dashboard-init.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/signup-error/signup-error.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/signup-knowyou/signup-knowyou.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/signup-error-validation/signup-error-validation.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/signup-knowyou/signup-knowyou.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/typography/typography-accent-bg-cooltext.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/typography/typography-accent-bg.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/typography/typography-primary-bg-cooltext.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/typography/typography-primary-bg.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/typography/typography-transparent-bg.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/kyc-address/kyc-address-pure/kyc-address-pure.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/kyc-idverification/kyc-idverification-pure/kyc-idverification-pure.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/kyc-congratulations/kyc-congratulations-pure/kyc-congratulations-pure.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/kyc-phonenumber/kyc-phonenumber-pure/kyc-phonenumber-pure.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/kyc-kbaquestions/kyc-kbaquestions-pure/kyc-kbaquestions-pure.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/kyc-ssn-full/kyc-ssn-full-pure/kyc-ssn-full-pure.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/kyc-welcomeback/kyc-welcomeback-pure/kyc-welcomeback-pure.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/signup/signup-pure/signup-pure.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/kyc-welcomeback/kyc-welcomeback-pure/kyc-welcomeback-pure.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/kyc-ssn/kyc-ssn-pure/kyc-ssn-pure.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/buttons/filled-onlytext-button/filled-onlytext-button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/buttons/links-onlytext-button/links-onlytext-button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/buttons/outline-onlytext-button/outline-onlytext-button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/buttons/viewdetail-button/viewdetail-button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/badges/filled-onlytext-badge/filled-onlytext-badge.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/inputs/kba-multiplechoice-input/kba-multiplechoice-input.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/cards/loan-card/loan-card.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/cards/snapshot-display-card/snapshot-display-card.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/cards/creditcard-card/creditcard-card.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/cards/loan-card/loan-card.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/navbars/dashboard-navbar/dashboard-navbar.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/modals/base-modal-regular/base-modal-regular.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/modals/base-modal-small/base-modal-small.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/paginations/outline-prevnext-pagination/outline-prevnext-pagination.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/progressbars/filled-checktext-progressbar/filled-checktext-progressbar.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/tabs/filled-onlytext-tabs/filled-onlytext-tabs.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/tooltips/outline-tooltip/outline-tooltip.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/forms/kbaquestions-form/kbaquestions-form.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/forms/outline-address-form/outline-address-form.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/forms/outline-name-form/outline-name-form.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/forms/outline-onecolumn-form/outline-onecolumn-form.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/forms/outline-phone-form/outline-phone-form.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/forms/select-dob-form/select-dob-form.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/forms/outline-verificationcode-form/outline-verificationcode-form.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/forms/ssn-full-form/ssn-full-form.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/forms/simple-signup-form/simple-signup-form.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/forms/ssn-lastfour-form/ssn-lastfour-form.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/inputs/outline-select-input/outline-select-input.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/dropdowns/popdowns/notification-dropdown/notification-dropdown.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/dropdowns/popdowns/table-dropdown/table-dropdown.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/dropdowns/popdowns/user-dropdown/user-dropdown.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/dropdowns/selects/outline-onlytext-select/outline-onlytext-select.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "deleteKeyNestedObject",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/utils/utils.ts",
                "type": "",
                "defaultValue": "(o: any, k: string) => {\n  const obj = Object.assign({}, o);\n  _deleteKeyNestedObject(obj, k);\n  return obj;\n}",
                "description": "<p>A utility function to remove unwanted fields by key\nWill delete all keys of the name you specify</p>\n"
            },
            {
                "name": "directives",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/shared-components.module.ts",
                "type": "[]",
                "defaultValue": "[HiddenAsteriskInputDirective, OutlineTooltipDirective]"
            },
            {
                "name": "dob",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/kyc-welcome/kyc-welcome/kyc-welcome.component.ts",
                "type": "Record<string, any>",
                "defaultValue": "{\r\n  year: true,\r\n  month: true,\r\n  day: true,\r\n}"
            },
            {
                "name": "enumStrColorCLassIndicator",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/cards/snapshot-display-card/snapshot-status.pipe.ts",
                "type": "object",
                "defaultValue": "{\n  [SnapshotStatus.Danger]: 'brave-danger',\n  [SnapshotStatus.Safe]: 'brave-safe',\n  [SnapshotStatus.Critical]: 'brave-critical',\n  [SnapshotStatus.Default]: 'lt-gray'\n}"
            },
            {
                "name": "enumStrNameOfLabel",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/cards/snapshot-display-card/snapshot-label.pipe.ts",
                "type": "object",
                "defaultValue": "{\n  [LabelOfSnapshot.Update]: { text: 'Update', colorClass: 'text-brave-magenta' },\n  [LabelOfSnapshot.Hidden]: { text: 'Hidden', colorClass: 'text-lt-gray' },\n  [LabelOfSnapshot.New]: { text: 'New', colorClass: 'text-brave-blurple' },\n  [LabelOfSnapshot.NoLabel]: { text: '', colorClass: '' }\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.dev.ts",
                "type": "object",
                "defaultValue": "{\r\n  production: false,\r\n  API: 'https://jokbs4tpn3.execute-api.us-east-2.amazonaws.com/dev',\r\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "type": "object",
                "defaultValue": "{\r\n  production: true\r\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.qa.ts",
                "type": "object",
                "defaultValue": "{\r\n  production: false,\r\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "type": "object",
                "defaultValue": "{\r\n  production: false\r\n}"
            },
            {
                "name": "ExtraLarge",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "extraLargeConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.stories.ts",
                "type": "IFilledClosingAlertConfig",
                "defaultValue": "{\r\n  size: 'xl',\r\n  backgroundColor: 'bg-indigo-800',\r\n  color: 'text-white',\r\n  alertTitle: 'Alert!',\r\n  alertBody: 'Something went wrong. Please try again.',\r\n}"
            },
            {
                "name": "ExtraSmall",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "extraSmallConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.stories.ts",
                "type": "IFilledClosingAlertConfig",
                "defaultValue": "{\r\n  size: 'xs',\r\n  backgroundColor: 'bg-indigo-800',\r\n  color: 'text-white',\r\n  alertTitle: 'Alert!',\r\n  alertBody: 'Something went wrong. Please try again.',\r\n}"
            },
            {
                "name": "formattedQuestions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/kyc-kbaquestions/example-questions.ts",
                "type": "[]",
                "defaultValue": "[\n  {\n      \"QuestionType\": {\n          \"_text\": \"IDMA\"\n      },\n      \"SequenceNumber\": {\n          \"_text\": \"1\"\n      },\n      \"LastChanceQuestion\": {\n          \"_text\": \"false\"\n      },\n      \"FakeQuestion\": {\n          \"_text\": \"false\"\n      },\n      \"FullQuestionText\": {\n          \"_text\": \"What was the original amount of your most recent mortgage?\"\n      },\n      \"KeyQuestionText\": {\n          \"PromptDate\": {\n              \"_text\": \"2021-06-06T20:07:05-07:00\"\n          }\n      },\n      \"AnswerChoice\": [\n          {\n              \"SequenceNumber\": {\n                  \"_text\": \"1\"\n              },\n              \"IsCorrectAnswer\": {\n                  \"_text\": \"false\"\n              },\n              \"AnswerChoiceText\": {\n                  \"_text\": \"$ 1 - $ 50000\"\n              },\n              \"Key\": {\n                  \"_text\": \"$ 1 - $ 50000\"\n              },\n              \"AnswerChoiceId\": {\n                  \"_text\": \"3076837406\"\n              }\n          },\n          {\n              \"SequenceNumber\": {\n                  \"_text\": \"2\"\n              },\n              \"IsCorrectAnswer\": {\n                  \"_text\": \"false\"\n              },\n              \"AnswerChoiceText\": {\n                  \"_text\": \"$ 150001 - $ 200000\"\n              },\n              \"Key\": {\n                  \"_text\": \"$ 150001 - $ 200000\"\n              },\n              \"AnswerChoiceId\": {\n                  \"_text\": \"3076837408\"\n              }\n          },\n          {\n              \"SequenceNumber\": {\n                  \"_text\": \"3\"\n              },\n              \"IsCorrectAnswer\": {\n                  \"_text\": \"false\"\n              },\n              \"AnswerChoiceText\": {\n                  \"_text\": \"$ 200001 - $ 250000\"\n              },\n              \"Key\": {\n                  \"_text\": \"$ 200001 - $ 250000\"\n              },\n              \"AnswerChoiceId\": {\n                  \"_text\": \"3076837410\"\n              }\n          },\n          {\n              \"SequenceNumber\": {\n                  \"_text\": \"4\"\n              },\n              \"IsCorrectAnswer\": {\n                  \"_text\": \"false\"\n              },\n              \"AnswerChoiceText\": {\n                  \"_text\": \"$ 50001 - $ 100000\"\n              },\n              \"Key\": {\n                  \"_text\": \"$ 50001 - $ 100000\"\n              },\n              \"AnswerChoiceId\": {\n                  \"_text\": \"3076837412\"\n              }\n          },\n          {\n              \"SequenceNumber\": {\n                  \"_text\": \"5\"\n              },\n              \"IsCorrectAnswer\": {\n                  \"_text\": \"false\"\n              },\n              \"AnswerChoiceText\": {\n                  \"_text\": \"None of the Above\"\n              },\n              \"Key\": {\n                  \"_text\": \"!($ 1 - $ 50000^$ 150001 - $ 200000^$ 200001 - $ 250000^$ 50001 - $ 100000)\"\n              },\n              \"AnswerChoiceId\": {\n                  \"_text\": \"3076837414\"\n              }\n          }\n      ],\n      \"Key\": {\n          \"_text\": \"MTG_ORIG_AMT\"\n      },\n      \"QuestionId\": {\n          \"_text\": \"48442696\"\n      }\n  },\n  {\n      \"QuestionType\": {\n          \"_text\": \"IDMA\"\n      },\n      \"SequenceNumber\": {\n          \"_text\": \"2\"\n      },\n      \"LastChanceQuestion\": {\n          \"_text\": \"false\"\n      },\n      \"FakeQuestion\": {\n          \"_text\": \"false\"\n      },\n      \"FullQuestionText\": {\n          \"_text\": \"Which of the following is a current or previous employer?\"\n      },\n      \"KeyQuestionText\": {\n          \"PromptDate\": {\n              \"_text\": \"2021-06-06T20:07:05-07:00\"\n          }\n      },\n      \"AnswerChoice\": [\n          {\n              \"SequenceNumber\": {\n                  \"_text\": \"1\"\n              },\n              \"IsCorrectAnswer\": {\n                  \"_text\": \"false\"\n              },\n              \"AnswerChoiceText\": {\n                  \"_text\": \"American Express\"\n              },\n              \"Key\": {\n                  \"_text\": \"American Express\"\n              },\n              \"AnswerChoiceId\": {\n                  \"_text\": \"3076837416\"\n              }\n          },\n          {\n              \"SequenceNumber\": {\n                  \"_text\": \"2\"\n              },\n              \"IsCorrectAnswer\": {\n                  \"_text\": \"false\"\n              },\n              \"AnswerChoiceText\": {\n                  \"_text\": \"Astrazeneca\"\n              },\n              \"Key\": {\n                  \"_text\": \"Astrazeneca\"\n              },\n              \"AnswerChoiceId\": {\n                  \"_text\": \"3076837418\"\n              }\n          },\n          {\n              \"SequenceNumber\": {\n                  \"_text\": \"3\"\n              },\n              \"IsCorrectAnswer\": {\n                  \"_text\": \"false\"\n              },\n              \"AnswerChoiceText\": {\n                  \"_text\": \"Iec\"\n              },\n              \"Key\": {\n                  \"_text\": \"Iec\"\n              },\n              \"AnswerChoiceId\": {\n                  \"_text\": \"3076837420\"\n              }\n          },\n          {\n              \"SequenceNumber\": {\n                  \"_text\": \"4\"\n              },\n              \"IsCorrectAnswer\": {\n                  \"_text\": \"false\"\n              },\n              \"AnswerChoiceText\": {\n                  \"_text\": \"Milliken\"\n              },\n              \"Key\": {\n                  \"_text\": \"Milliken\"\n              },\n              \"AnswerChoiceId\": {\n                  \"_text\": \"3076837422\"\n              }\n          },\n          {\n              \"SequenceNumber\": {\n                  \"_text\": \"5\"\n              },\n              \"IsCorrectAnswer\": {\n                  \"_text\": \"false\"\n              },\n              \"AnswerChoiceText\": {\n                  \"_text\": \"None of the Above\"\n              },\n              \"Key\": {\n                  \"_text\": \"!(American Express^Astrazeneca^Iec^Milliken)\"\n              },\n              \"AnswerChoiceId\": {\n                  \"_text\": \"3076837424\"\n              }\n          }\n      ],\n      \"Key\": {\n          \"_text\": \"EMPLOYER\"\n      },\n      \"QuestionId\": {\n          \"_text\": \"48442698\"\n      }\n  },\n  {\n      \"QuestionType\": {\n          \"_text\": \"IDMA\"\n      },\n      \"SequenceNumber\": {\n          \"_text\": \"3\"\n      },\n      \"LastChanceQuestion\": {\n          \"_text\": \"false\"\n      },\n      \"FakeQuestion\": {\n          \"_text\": \"false\"\n      },\n      \"FullQuestionText\": {\n          \"_text\": \"What year was your most recent auto loan or lease established?\"\n      },\n      \"KeyQuestionText\": {\n          \"PromptDate\": {\n              \"_text\": \"2021-06-06T20:07:05-07:00\"\n          }\n      },\n      \"AnswerChoice\": [\n          {\n              \"SequenceNumber\": {\n                  \"_text\": \"1\"\n              },\n              \"IsCorrectAnswer\": {\n                  \"_text\": \"false\"\n              },\n              \"AnswerChoiceText\": {\n                  \"_text\": \"1998\"\n              },\n              \"Key\": {\n                  \"_text\": \"1998\"\n              },\n              \"AnswerChoiceId\": {\n                  \"_text\": \"3076837426\"\n              }\n          },\n          {\n              \"SequenceNumber\": {\n                  \"_text\": \"2\"\n              },\n              \"IsCorrectAnswer\": {\n                  \"_text\": \"false\"\n              },\n              \"AnswerChoiceText\": {\n                  \"_text\": \"1999\"\n              },\n              \"Key\": {\n                  \"_text\": \"1999\"\n              },\n              \"AnswerChoiceId\": {\n                  \"_text\": \"3076837428\"\n              }\n          },\n          {\n              \"SequenceNumber\": {\n                  \"_text\": \"3\"\n              },\n              \"IsCorrectAnswer\": {\n                  \"_text\": \"false\"\n              },\n              \"AnswerChoiceText\": {\n                  \"_text\": \"2001\"\n              },\n              \"Key\": {\n                  \"_text\": \"2001\"\n              },\n              \"AnswerChoiceId\": {\n                  \"_text\": \"3076837430\"\n              }\n          },\n          {\n              \"SequenceNumber\": {\n                  \"_text\": \"4\"\n              },\n              \"IsCorrectAnswer\": {\n                  \"_text\": \"false\"\n              },\n              \"AnswerChoiceText\": {\n                  \"_text\": \"2002\"\n              },\n              \"Key\": {\n                  \"_text\": \"2002\"\n              },\n              \"AnswerChoiceId\": {\n                  \"_text\": \"3076837432\"\n              }\n          },\n          {\n              \"SequenceNumber\": {\n                  \"_text\": \"5\"\n              },\n              \"IsCorrectAnswer\": {\n                  \"_text\": \"false\"\n              },\n              \"AnswerChoiceText\": {\n                  \"_text\": \"None of the Above\"\n              },\n              \"Key\": {\n                  \"_text\": \"!(1998^1999^2001^2002)\"\n              },\n              \"AnswerChoiceId\": {\n                  \"_text\": \"3076837434\"\n              }\n          }\n      ],\n      \"Key\": {\n          \"_text\": \"AUTO_YR\"\n      },\n      \"QuestionId\": {\n          \"_text\": \"48442700\"\n      }\n  },\n  {\n      \"QuestionType\": {\n          \"_text\": \"IDMA\"\n      },\n      \"SequenceNumber\": {\n          \"_text\": \"4\"\n      },\n      \"LastChanceQuestion\": {\n          \"_text\": \"false\"\n      },\n      \"FakeQuestion\": {\n          \"_text\": \"false\"\n      },\n      \"FullQuestionText\": {\n          \"_text\": \"What state was your social security number issued (this could be the state in which you were born or had your first job)?\"\n      },\n      \"KeyQuestionText\": {\n          \"PromptDate\": {\n              \"_text\": \"2021-06-06T20:07:05-07:00\"\n          }\n      },\n      \"AnswerChoice\": [\n          {\n              \"SequenceNumber\": {\n                  \"_text\": \"1\"\n              },\n              \"IsCorrectAnswer\": {\n                  \"_text\": \"false\"\n              },\n              \"AnswerChoiceText\": {\n                  \"_text\": \"Arizona\"\n              },\n              \"Key\": {\n                  \"_text\": \"Arizona\"\n              },\n              \"AnswerChoiceId\": {\n                  \"_text\": \"3076837436\"\n              }\n          },\n          {\n              \"SequenceNumber\": {\n                  \"_text\": \"2\"\n              },\n              \"IsCorrectAnswer\": {\n                  \"_text\": \"false\"\n              },\n              \"AnswerChoiceText\": {\n                  \"_text\": \"Florida\"\n              },\n              \"Key\": {\n                  \"_text\": \"Florida\"\n              },\n              \"AnswerChoiceId\": {\n                  \"_text\": \"3076837438\"\n              }\n          },\n          {\n              \"SequenceNumber\": {\n                  \"_text\": \"3\"\n              },\n              \"IsCorrectAnswer\": {\n                  \"_text\": \"false\"\n              },\n              \"AnswerChoiceText\": {\n                  \"_text\": \"Kansas\"\n              },\n              \"Key\": {\n                  \"_text\": \"Kansas\"\n              },\n              \"AnswerChoiceId\": {\n                  \"_text\": \"3076837440\"\n              }\n          },\n          {\n              \"SequenceNumber\": {\n                  \"_text\": \"4\"\n              },\n              \"IsCorrectAnswer\": {\n                  \"_text\": \"false\"\n              },\n              \"AnswerChoiceText\": {\n                  \"_text\": \"New Hampshire\"\n              },\n              \"Key\": {\n                  \"_text\": \"New Hampshire\"\n              },\n              \"AnswerChoiceId\": {\n                  \"_text\": \"3076837442\"\n              }\n          },\n          {\n              \"SequenceNumber\": {\n                  \"_text\": \"5\"\n              },\n              \"IsCorrectAnswer\": {\n                  \"_text\": \"false\"\n              },\n              \"AnswerChoiceText\": {\n                  \"_text\": \"None of the Above\"\n              },\n              \"Key\": {\n                  \"_text\": \"!(Arizona^Florida^Kansas^New Hampshire)\"\n              },\n              \"AnswerChoiceId\": {\n                  \"_text\": \"3076837444\"\n              }\n          }\n      ],\n      \"Key\": {\n          \"_text\": \"SSN_ISSUED\"\n      },\n      \"QuestionId\": {\n          \"_text\": \"48442702\"\n      }\n  }\n]"
            },
            {
                "name": "isLocalhost",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.module.ts",
                "type": "",
                "defaultValue": "Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    window.location.hostname === '[::1]' ||\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)"
            },
            {
                "name": "items",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/dropdowns/selects/outline-onlytext-select/outline-onlytext-select.stories.ts",
                "type": "IOutlineOnlyTextItem[]",
                "defaultValue": "[\r\n  { value: 'Item 1' },\r\n  { value: 'Item 2' },\r\n  { value: 'Item 3' },\r\n  { value: 'Item 4' },\r\n  { value: 'Item 5' },\r\n]"
            },
            {
                "name": "kbas",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/kyc-kbaquestions/kyc-kbaquestions-pure/kyc-kbaquestions-pure.stories.ts",
                "type": "ITransunionKBAQuestion[]",
                "defaultValue": "[\n  {\n    QuestionType: {\n      _text: 'IDMA',\n    },\n    SequenceNumber: {\n      _text: '1',\n    },\n    LastChanceQuestion: {\n      _text: 'false',\n    },\n    FakeQuestion: {\n      _text: 'false',\n    },\n    FullQuestionText: {\n      _text: 'What was the original amount of your most recent mortgage?',\n    },\n    KeyQuestionText: {\n      PromptDate: {\n        _text: '2021-06-06T20:07:05-07:00',\n      },\n    },\n    AnswerChoice: [\n      {\n        SequenceNumber: {\n          _text: '1',\n        },\n        IsCorrectAnswer: {\n          _text: 'false',\n        },\n        AnswerChoiceText: {\n          _text: '$ 1 - $ 50000',\n        },\n        Key: {\n          _text: '$ 1 - $ 50000',\n        },\n        AnswerChoiceId: {\n          _text: '3076837406',\n        },\n      },\n      {\n        SequenceNumber: {\n          _text: '2',\n        },\n        IsCorrectAnswer: {\n          _text: 'false',\n        },\n        AnswerChoiceText: {\n          _text: '$ 150001 - $ 200000',\n        },\n        Key: {\n          _text: '$ 150001 - $ 200000',\n        },\n        AnswerChoiceId: {\n          _text: '3076837408',\n        },\n      },\n      {\n        SequenceNumber: {\n          _text: '3',\n        },\n        IsCorrectAnswer: {\n          _text: 'false',\n        },\n        AnswerChoiceText: {\n          _text: '$ 200001 - $ 250000',\n        },\n        Key: {\n          _text: '$ 200001 - $ 250000',\n        },\n        AnswerChoiceId: {\n          _text: '3076837410',\n        },\n      },\n      {\n        SequenceNumber: {\n          _text: '4',\n        },\n        IsCorrectAnswer: {\n          _text: 'false',\n        },\n        AnswerChoiceText: {\n          _text: '$ 50001 - $ 100000',\n        },\n        Key: {\n          _text: '$ 50001 - $ 100000',\n        },\n        AnswerChoiceId: {\n          _text: '3076837412',\n        },\n      },\n      {\n        SequenceNumber: {\n          _text: '5',\n        },\n        IsCorrectAnswer: {\n          _text: 'false',\n        },\n        AnswerChoiceText: {\n          _text: 'None of the Above',\n        },\n        Key: {\n          _text:\n            '!($ 1 - $ 50000^$ 150001 - $ 200000^$ 200001 - $ 250000^$ 50001 - $ 100000)',\n        },\n        AnswerChoiceId: {\n          _text: '3076837414',\n        },\n      },\n    ],\n    Key: {\n      _text: 'MTG_ORIG_AMT',\n    },\n    QuestionId: {\n      _text: '48442696',\n    },\n  },\n  {\n    QuestionType: {\n      _text: 'IDMA',\n    },\n    SequenceNumber: {\n      _text: '2',\n    },\n    LastChanceQuestion: {\n      _text: 'false',\n    },\n    FakeQuestion: {\n      _text: 'false',\n    },\n    FullQuestionText: {\n      _text: 'Which of the following is a current or previous employer?',\n    },\n    KeyQuestionText: {\n      PromptDate: {\n        _text: '2021-06-06T20:07:05-07:00',\n      },\n    },\n    AnswerChoice: [\n      {\n        SequenceNumber: {\n          _text: '1',\n        },\n        IsCorrectAnswer: {\n          _text: 'false',\n        },\n        AnswerChoiceText: {\n          _text: 'American Express',\n        },\n        Key: {\n          _text: 'American Express',\n        },\n        AnswerChoiceId: {\n          _text: '3076837416',\n        },\n      },\n      {\n        SequenceNumber: {\n          _text: '2',\n        },\n        IsCorrectAnswer: {\n          _text: 'false',\n        },\n        AnswerChoiceText: {\n          _text: 'Astrazeneca',\n        },\n        Key: {\n          _text: 'Astrazeneca',\n        },\n        AnswerChoiceId: {\n          _text: '3076837418',\n        },\n      },\n      {\n        SequenceNumber: {\n          _text: '3',\n        },\n        IsCorrectAnswer: {\n          _text: 'false',\n        },\n        AnswerChoiceText: {\n          _text: 'Iec',\n        },\n        Key: {\n          _text: 'Iec',\n        },\n        AnswerChoiceId: {\n          _text: '3076837420',\n        },\n      },\n      {\n        SequenceNumber: {\n          _text: '4',\n        },\n        IsCorrectAnswer: {\n          _text: 'false',\n        },\n        AnswerChoiceText: {\n          _text: 'Milliken',\n        },\n        Key: {\n          _text: 'Milliken',\n        },\n        AnswerChoiceId: {\n          _text: '3076837422',\n        },\n      },\n      {\n        SequenceNumber: {\n          _text: '5',\n        },\n        IsCorrectAnswer: {\n          _text: 'false',\n        },\n        AnswerChoiceText: {\n          _text: 'None of the Above',\n        },\n        Key: {\n          _text: '!(American Express^Astrazeneca^Iec^Milliken)',\n        },\n        AnswerChoiceId: {\n          _text: '3076837424',\n        },\n      },\n    ],\n    Key: {\n      _text: 'EMPLOYER',\n    },\n    QuestionId: {\n      _text: '48442698',\n    },\n  },\n  {\n    QuestionType: {\n      _text: 'IDMA',\n    },\n    SequenceNumber: {\n      _text: '3',\n    },\n    LastChanceQuestion: {\n      _text: 'false',\n    },\n    FakeQuestion: {\n      _text: 'false',\n    },\n    FullQuestionText: {\n      _text: 'What year was your most recent auto loan or lease established?',\n    },\n    KeyQuestionText: {\n      PromptDate: {\n        _text: '2021-06-06T20:07:05-07:00',\n      },\n    },\n    AnswerChoice: [\n      {\n        SequenceNumber: {\n          _text: '1',\n        },\n        IsCorrectAnswer: {\n          _text: 'false',\n        },\n        AnswerChoiceText: {\n          _text: '1998',\n        },\n        Key: {\n          _text: '1998',\n        },\n        AnswerChoiceId: {\n          _text: '3076837426',\n        },\n      },\n      {\n        SequenceNumber: {\n          _text: '2',\n        },\n        IsCorrectAnswer: {\n          _text: 'false',\n        },\n        AnswerChoiceText: {\n          _text: '1999',\n        },\n        Key: {\n          _text: '1999',\n        },\n        AnswerChoiceId: {\n          _text: '3076837428',\n        },\n      },\n      {\n        SequenceNumber: {\n          _text: '3',\n        },\n        IsCorrectAnswer: {\n          _text: 'false',\n        },\n        AnswerChoiceText: {\n          _text: '2001',\n        },\n        Key: {\n          _text: '2001',\n        },\n        AnswerChoiceId: {\n          _text: '3076837430',\n        },\n      },\n      {\n        SequenceNumber: {\n          _text: '4',\n        },\n        IsCorrectAnswer: {\n          _text: 'false',\n        },\n        AnswerChoiceText: {\n          _text: '2002',\n        },\n        Key: {\n          _text: '2002',\n        },\n        AnswerChoiceId: {\n          _text: '3076837432',\n        },\n      },\n      {\n        SequenceNumber: {\n          _text: '5',\n        },\n        IsCorrectAnswer: {\n          _text: 'false',\n        },\n        AnswerChoiceText: {\n          _text: 'None of the Above',\n        },\n        Key: {\n          _text: '!(1998^1999^2001^2002)',\n        },\n        AnswerChoiceId: {\n          _text: '3076837434',\n        },\n      },\n    ],\n    Key: {\n      _text: 'AUTO_YR',\n    },\n    QuestionId: {\n      _text: '48442700',\n    },\n  },\n  {\n    QuestionType: {\n      _text: 'IDMA',\n    },\n    SequenceNumber: {\n      _text: '4',\n    },\n    LastChanceQuestion: {\n      _text: 'false',\n    },\n    FakeQuestion: {\n      _text: 'false',\n    },\n    FullQuestionText: {\n      _text:\n        'What state was your social security number issued (this could be the state in which you were born or had your first job)?',\n    },\n    KeyQuestionText: {\n      PromptDate: {\n        _text: '2021-06-06T20:07:05-07:00',\n      },\n    },\n    AnswerChoice: [\n      {\n        SequenceNumber: {\n          _text: '1',\n        },\n        IsCorrectAnswer: {\n          _text: 'false',\n        },\n        AnswerChoiceText: {\n          _text: 'Arizona',\n        },\n        Key: {\n          _text: 'Arizona',\n        },\n        AnswerChoiceId: {\n          _text: '3076837436',\n        },\n      },\n      {\n        SequenceNumber: {\n          _text: '2',\n        },\n        IsCorrectAnswer: {\n          _text: 'false',\n        },\n        AnswerChoiceText: {\n          _text: 'Florida',\n        },\n        Key: {\n          _text: 'Florida',\n        },\n        AnswerChoiceId: {\n          _text: '3076837438',\n        },\n      },\n      {\n        SequenceNumber: {\n          _text: '3',\n        },\n        IsCorrectAnswer: {\n          _text: 'false',\n        },\n        AnswerChoiceText: {\n          _text: 'Kansas',\n        },\n        Key: {\n          _text: 'Kansas',\n        },\n        AnswerChoiceId: {\n          _text: '3076837440',\n        },\n      },\n      {\n        SequenceNumber: {\n          _text: '4',\n        },\n        IsCorrectAnswer: {\n          _text: 'false',\n        },\n        AnswerChoiceText: {\n          _text: 'New Hampshire',\n        },\n        Key: {\n          _text: 'New Hampshire',\n        },\n        AnswerChoiceId: {\n          _text: '3076837442',\n        },\n      },\n      {\n        SequenceNumber: {\n          _text: '5',\n        },\n        IsCorrectAnswer: {\n          _text: 'false',\n        },\n        AnswerChoiceText: {\n          _text: 'None of the Above',\n        },\n        Key: {\n          _text: '!(Arizona^Florida^Kansas^New Hampshire)',\n        },\n        AnswerChoiceId: {\n          _text: '3076837444',\n        },\n      },\n    ],\n    Key: {\n      _text: 'SSN_ISSUED',\n    },\n    QuestionId: {\n      _text: '48442702',\n    },\n  },\n]"
            },
            {
                "name": "kbas",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/forms/kbaquestions-form/kbaquestions-form.stories.ts",
                "type": "ITransunionKBAQuestion[]",
                "defaultValue": "[\n  {\n    QuestionType: {\n      _text: 'IDMA',\n    },\n    SequenceNumber: {\n      _text: '1',\n    },\n    LastChanceQuestion: {\n      _text: 'false',\n    },\n    FakeQuestion: {\n      _text: 'false',\n    },\n    FullQuestionText: {\n      _text: 'What was the original amount of your most recent mortgage?',\n    },\n    KeyQuestionText: {\n      PromptDate: {\n        _text: '2021-06-06T20:07:05-07:00',\n      },\n    },\n    AnswerChoice: [\n      {\n        SequenceNumber: {\n          _text: '1',\n        },\n        IsCorrectAnswer: {\n          _text: 'false',\n        },\n        AnswerChoiceText: {\n          _text: '$ 1 - $ 50000',\n        },\n        Key: {\n          _text: '$ 1 - $ 50000',\n        },\n        AnswerChoiceId: {\n          _text: '3076837406',\n        },\n      },\n      {\n        SequenceNumber: {\n          _text: '2',\n        },\n        IsCorrectAnswer: {\n          _text: 'false',\n        },\n        AnswerChoiceText: {\n          _text: '$ 150001 - $ 200000',\n        },\n        Key: {\n          _text: '$ 150001 - $ 200000',\n        },\n        AnswerChoiceId: {\n          _text: '3076837408',\n        },\n      },\n      {\n        SequenceNumber: {\n          _text: '3',\n        },\n        IsCorrectAnswer: {\n          _text: 'false',\n        },\n        AnswerChoiceText: {\n          _text: '$ 200001 - $ 250000',\n        },\n        Key: {\n          _text: '$ 200001 - $ 250000',\n        },\n        AnswerChoiceId: {\n          _text: '3076837410',\n        },\n      },\n      {\n        SequenceNumber: {\n          _text: '4',\n        },\n        IsCorrectAnswer: {\n          _text: 'false',\n        },\n        AnswerChoiceText: {\n          _text: '$ 50001 - $ 100000',\n        },\n        Key: {\n          _text: '$ 50001 - $ 100000',\n        },\n        AnswerChoiceId: {\n          _text: '3076837412',\n        },\n      },\n      {\n        SequenceNumber: {\n          _text: '5',\n        },\n        IsCorrectAnswer: {\n          _text: 'false',\n        },\n        AnswerChoiceText: {\n          _text: 'None of the Above',\n        },\n        Key: {\n          _text:\n            '!($ 1 - $ 50000^$ 150001 - $ 200000^$ 200001 - $ 250000^$ 50001 - $ 100000)',\n        },\n        AnswerChoiceId: {\n          _text: '3076837414',\n        },\n      },\n    ],\n    Key: {\n      _text: 'MTG_ORIG_AMT',\n    },\n    QuestionId: {\n      _text: '48442696',\n    },\n  },\n  {\n    QuestionType: {\n      _text: 'IDMA',\n    },\n    SequenceNumber: {\n      _text: '2',\n    },\n    LastChanceQuestion: {\n      _text: 'false',\n    },\n    FakeQuestion: {\n      _text: 'false',\n    },\n    FullQuestionText: {\n      _text: 'Which of the following is a current or previous employer?',\n    },\n    KeyQuestionText: {\n      PromptDate: {\n        _text: '2021-06-06T20:07:05-07:00',\n      },\n    },\n    AnswerChoice: [\n      {\n        SequenceNumber: {\n          _text: '1',\n        },\n        IsCorrectAnswer: {\n          _text: 'false',\n        },\n        AnswerChoiceText: {\n          _text: 'American Express',\n        },\n        Key: {\n          _text: 'American Express',\n        },\n        AnswerChoiceId: {\n          _text: '3076837416',\n        },\n      },\n      {\n        SequenceNumber: {\n          _text: '2',\n        },\n        IsCorrectAnswer: {\n          _text: 'false',\n        },\n        AnswerChoiceText: {\n          _text: 'Astrazeneca',\n        },\n        Key: {\n          _text: 'Astrazeneca',\n        },\n        AnswerChoiceId: {\n          _text: '3076837418',\n        },\n      },\n      {\n        SequenceNumber: {\n          _text: '3',\n        },\n        IsCorrectAnswer: {\n          _text: 'false',\n        },\n        AnswerChoiceText: {\n          _text: 'Iec',\n        },\n        Key: {\n          _text: 'Iec',\n        },\n        AnswerChoiceId: {\n          _text: '3076837420',\n        },\n      },\n      {\n        SequenceNumber: {\n          _text: '4',\n        },\n        IsCorrectAnswer: {\n          _text: 'false',\n        },\n        AnswerChoiceText: {\n          _text: 'Milliken',\n        },\n        Key: {\n          _text: 'Milliken',\n        },\n        AnswerChoiceId: {\n          _text: '3076837422',\n        },\n      },\n      {\n        SequenceNumber: {\n          _text: '5',\n        },\n        IsCorrectAnswer: {\n          _text: 'false',\n        },\n        AnswerChoiceText: {\n          _text: 'None of the Above',\n        },\n        Key: {\n          _text: '!(American Express^Astrazeneca^Iec^Milliken)',\n        },\n        AnswerChoiceId: {\n          _text: '3076837424',\n        },\n      },\n    ],\n    Key: {\n      _text: 'EMPLOYER',\n    },\n    QuestionId: {\n      _text: '48442698',\n    },\n  },\n  {\n    QuestionType: {\n      _text: 'IDMA',\n    },\n    SequenceNumber: {\n      _text: '3',\n    },\n    LastChanceQuestion: {\n      _text: 'false',\n    },\n    FakeQuestion: {\n      _text: 'false',\n    },\n    FullQuestionText: {\n      _text: 'What year was your most recent auto loan or lease established?',\n    },\n    KeyQuestionText: {\n      PromptDate: {\n        _text: '2021-06-06T20:07:05-07:00',\n      },\n    },\n    AnswerChoice: [\n      {\n        SequenceNumber: {\n          _text: '1',\n        },\n        IsCorrectAnswer: {\n          _text: 'false',\n        },\n        AnswerChoiceText: {\n          _text: '1998',\n        },\n        Key: {\n          _text: '1998',\n        },\n        AnswerChoiceId: {\n          _text: '3076837426',\n        },\n      },\n      {\n        SequenceNumber: {\n          _text: '2',\n        },\n        IsCorrectAnswer: {\n          _text: 'false',\n        },\n        AnswerChoiceText: {\n          _text: '1999',\n        },\n        Key: {\n          _text: '1999',\n        },\n        AnswerChoiceId: {\n          _text: '3076837428',\n        },\n      },\n      {\n        SequenceNumber: {\n          _text: '3',\n        },\n        IsCorrectAnswer: {\n          _text: 'false',\n        },\n        AnswerChoiceText: {\n          _text: '2001',\n        },\n        Key: {\n          _text: '2001',\n        },\n        AnswerChoiceId: {\n          _text: '3076837430',\n        },\n      },\n      {\n        SequenceNumber: {\n          _text: '4',\n        },\n        IsCorrectAnswer: {\n          _text: 'false',\n        },\n        AnswerChoiceText: {\n          _text: '2002',\n        },\n        Key: {\n          _text: '2002',\n        },\n        AnswerChoiceId: {\n          _text: '3076837432',\n        },\n      },\n      {\n        SequenceNumber: {\n          _text: '5',\n        },\n        IsCorrectAnswer: {\n          _text: 'false',\n        },\n        AnswerChoiceText: {\n          _text: 'None of the Above',\n        },\n        Key: {\n          _text: '!(1998^1999^2001^2002)',\n        },\n        AnswerChoiceId: {\n          _text: '3076837434',\n        },\n      },\n    ],\n    Key: {\n      _text: 'AUTO_YR',\n    },\n    QuestionId: {\n      _text: '48442700',\n    },\n  },\n  {\n    QuestionType: {\n      _text: 'IDMA',\n    },\n    SequenceNumber: {\n      _text: '4',\n    },\n    LastChanceQuestion: {\n      _text: 'false',\n    },\n    FakeQuestion: {\n      _text: 'false',\n    },\n    FullQuestionText: {\n      _text:\n        'What state was your social security number issued (this could be the state in which you were born or had your first job)?',\n    },\n    KeyQuestionText: {\n      PromptDate: {\n        _text: '2021-06-06T20:07:05-07:00',\n      },\n    },\n    AnswerChoice: [\n      {\n        SequenceNumber: {\n          _text: '1',\n        },\n        IsCorrectAnswer: {\n          _text: 'false',\n        },\n        AnswerChoiceText: {\n          _text: 'Arizona',\n        },\n        Key: {\n          _text: 'Arizona',\n        },\n        AnswerChoiceId: {\n          _text: '3076837436',\n        },\n      },\n      {\n        SequenceNumber: {\n          _text: '2',\n        },\n        IsCorrectAnswer: {\n          _text: 'false',\n        },\n        AnswerChoiceText: {\n          _text: 'Florida',\n        },\n        Key: {\n          _text: 'Florida',\n        },\n        AnswerChoiceId: {\n          _text: '3076837438',\n        },\n      },\n      {\n        SequenceNumber: {\n          _text: '3',\n        },\n        IsCorrectAnswer: {\n          _text: 'false',\n        },\n        AnswerChoiceText: {\n          _text: 'Kansas',\n        },\n        Key: {\n          _text: 'Kansas',\n        },\n        AnswerChoiceId: {\n          _text: '3076837440',\n        },\n      },\n      {\n        SequenceNumber: {\n          _text: '4',\n        },\n        IsCorrectAnswer: {\n          _text: 'false',\n        },\n        AnswerChoiceText: {\n          _text: 'New Hampshire',\n        },\n        Key: {\n          _text: 'New Hampshire',\n        },\n        AnswerChoiceId: {\n          _text: '3076837442',\n        },\n      },\n      {\n        SequenceNumber: {\n          _text: '5',\n        },\n        IsCorrectAnswer: {\n          _text: 'false',\n        },\n        AnswerChoiceText: {\n          _text: 'None of the Above',\n        },\n        Key: {\n          _text: '!(Arizona^Florida^Kansas^New Hampshire)',\n        },\n        AnswerChoiceId: {\n          _text: '3076837444',\n        },\n      },\n    ],\n    Key: {\n      _text: 'SSN_ISSUED',\n    },\n    QuestionId: {\n      _text: '48442702',\n    },\n  },\n]"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/buttons/filled-onlytext-button/filled-onlytext-button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/buttons/links-onlytext-button/links-onlytext-button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/buttons/outline-onlytext-button/outline-onlytext-button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/inputs/hidden-asterisk-input/hidden-asterisk-input.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/inputs/outline-input/outline-input.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/inputs/outline-select-input/outline-select-input.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "largeConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.stories.ts",
                "type": "IFilledClosingAlertConfig",
                "defaultValue": "{\r\n  size: 'lg',\r\n  backgroundColor: 'bg-indigo-800',\r\n  color: 'text-white',\r\n  alertTitle: 'Alert!',\r\n  alertBody: 'Something went wrong. Please try again.',\r\n}"
            },
            {
                "name": "largeConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/buttons/filled-onlytext-button/filled-onlytext-button.stories.ts",
                "type": "IFilledOnlyTextButtonConfig",
                "defaultValue": "{\r\n  buttonSize: 'lg',\r\n  backgroundColor: 'bg-fuchsia-500',\r\n  activeColor: 'bg-fuchsia-600',\r\n  color: 'text-white',\r\n}"
            },
            {
                "name": "largeConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/buttons/links-onlytext-button/links-onlytext-button.stories.ts",
                "type": "ILinksOnlyTextButtonConfig",
                "defaultValue": "{\r\n  buttonSize: 'lg',\r\n  color: 'text-indigo-800',\r\n}"
            },
            {
                "name": "largeConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/buttons/outline-onlytext-button/outline-onlytext-button.stories.ts",
                "type": "IOutlineOnlyTextButtonConfig",
                "defaultValue": "{\r\n  buttonSize: 'lg',\r\n  borderColor: 'border-indigo-800',\r\n  activeColor: 'bg-indigo-900',\r\n  hoverColor: 'bg-indigo-800',\r\n  color: 'text-indigo-800',\r\n}"
            },
            {
                "name": "largeConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/inputs/outline-input/outline-input.stories.ts",
                "type": "IOutlineInputeConfig",
                "defaultValue": "{\r\n  size: 'lg',\r\n  type: 'text',\r\n  label: 'Input label',\r\n  placeholder: 'Input text',\r\n  autocomplete: 'off',\r\n  value: '',\r\n}"
            },
            {
                "name": "largeConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/inputs/outline-select-input/outline-select-input.stories.ts",
                "type": "IOutlineSelectInputConfig",
                "defaultValue": "{\r\n  size: 'lg',\r\n  label: 'Input label',\r\n  autocomplete: 'off',\r\n  options: ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l'],\r\n}"
            },
            {
                "name": "Left",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/tooltips/outline-tooltip/outline-tooltip.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "monthMap",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/services/transunion/transunion.service.ts",
                "type": "Record<string, any>",
                "defaultValue": "{\n  jan: '01',\n  feb: '02',\n  mar: '03',\n  apr: '04',\n  may: '05',\n  jun: '06',\n  jul: '07',\n  aug: '08',\n  sep: '09',\n  oct: '10',\n  nov: '11',\n  dec: '12',\n}"
            },
            {
                "name": "months",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/forms/outline-namedob-form/outline-namedob-form.component.ts",
                "type": "string[]",
                "defaultValue": "[\r\n  'Jan',\r\n  'Feb',\r\n  'Mar',\r\n  'Apr',\r\n  'May',\r\n  'Jun',\r\n  'Jul',\r\n  'Aug',\r\n  'Sep',\r\n  'Oct',\r\n  'Nov',\r\n  'Dec',\r\n]"
            },
            {
                "name": "months",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/forms/select-dob-form/select-dob-form.component.ts",
                "type": "string[]",
                "defaultValue": "[\r\n  'Jan',\r\n  'Feb',\r\n  'Mar',\r\n  'Apr',\r\n  'May',\r\n  'Jun',\r\n  'Jul',\r\n  'Aug',\r\n  'Sep',\r\n  'Oct',\r\n  'Nov',\r\n  'Dec',\r\n]"
            },
            {
                "name": "name",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/kyc-welcome/kyc-welcome/kyc-welcome.component.ts",
                "type": "Record<string, any>",
                "defaultValue": "{\r\n  first: true,\r\n  middle: true,\r\n  last: true,\r\n}"
            },
            {
                "name": "navs",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/signin-redirect/signin-redirect.component.ts",
                "type": "Record<string, any>",
                "defaultValue": "{}"
            },
            {
                "name": "phoneMap",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/kyc-phonenumber/kyc-phonenumber/kyc-phonenumber.component.ts",
                "type": "Record<string, any>",
                "defaultValue": "{\r\n  phone: true,\r\n}"
            },
            {
                "name": "pipes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/views.module.ts",
                "type": "[]",
                "defaultValue": "[KycKbaquestionsPipe]"
            },
            {
                "name": "pipes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/shared-components.module.ts",
                "type": "[]",
                "defaultValue": "[\n  FilledOnlytextButtonPipe,\n  LinksOnlytextButtonPipe,\n  OutlineOnlytextButtonPipe,\n  OutlineInputPipe,\n  OutlineSelectInputPipe,\n  FilledClosingAlertPipe,\n  FilledOnlytextBadgePipe,\n  FilledChecktextProgressbarPipe,\n  AccountStatusPipe,\n]"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/buttons/filled-onlytext-button/filled-onlytext-button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/buttons/filled-onlytext-button/filled-onlytext-button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/buttons/outline-onlytext-button/outline-onlytext-button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/badges/filled-onlytext-badge/filled-onlytext-badge.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "primaryConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.stories.ts",
                "type": "IFilledClosingAlertConfig",
                "defaultValue": "{\r\n  size: 'base',\r\n  backgroundColor: 'bg-indigo-800',\r\n  color: 'text-white',\r\n  alertTitle: 'Alert!',\r\n  alertBody: 'Something went wrong. Please try again.',\r\n}"
            },
            {
                "name": "primaryConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/buttons/filled-onlytext-button/filled-onlytext-button.stories.ts",
                "type": "IFilledOnlyTextButtonConfig",
                "defaultValue": "{\n  buttonSize: 'base',\n  backgroundColor: 'bg-indigo-800',\n  activeColor: 'bg-indigo-900',\n  color: 'text-white',\n}"
            },
            {
                "name": "primaryConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/buttons/filled-onlytext-button/filled-onlytext-button.stories.ts",
                "type": "IFilledOnlyTextButtonConfig",
                "defaultValue": "{\n  buttonSize: 'base',\n  backgroundColor: 'bg-indigo-800',\n  activeColor: 'bg-indigo-900',\n  color: 'text-white',\n}"
            },
            {
                "name": "primaryConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/buttons/outline-onlytext-button/outline-onlytext-button.stories.ts",
                "type": "IOutlineOnlyTextButtonConfig",
                "defaultValue": "{\r\n  buttonSize: 'base',\r\n  borderColor: 'border-indigo-800',\r\n  activeColor: 'bg-indigo-900',\r\n  hoverColor: 'bg-indigo-800',\r\n  color: 'text-indigo-800',\r\n}"
            },
            {
                "name": "primaryConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/badges/filled-onlytext-badge/filled-onlytext-badge.stories.ts",
                "type": "IFilledOnlytextBadgeConfig",
                "defaultValue": "{\n  size: 'base',\n  backgroundColor: 'bg-indigo-200',\n  color: 'text-indigo-800',\n}"
            },
            {
                "name": "question",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/inputs/kba-multiplechoice-input/kba-multiplechoice-input.stories.ts",
                "type": "ITransunionKBAQuestion",
                "defaultValue": "{\n  QuestionType: {\n    _text: 'IDMA',\n  },\n  SequenceNumber: {\n    _text: '1',\n  },\n  LastChanceQuestion: {\n    _text: 'false',\n  },\n  FakeQuestion: {\n    _text: 'false',\n  },\n  FullQuestionText: {\n    _text: 'What was the original amount of your most recent mortgage?',\n  },\n  KeyQuestionText: {\n    PromptDate: {\n      _text: '2021-06-06T20:07:05-07:00',\n    },\n  },\n  AnswerChoice: [\n    {\n      SequenceNumber: {\n        _text: '1',\n      },\n      IsCorrectAnswer: {\n        _text: 'false',\n      },\n      AnswerChoiceText: {\n        _text: '$ 1 - $ 50000',\n      },\n      Key: {\n        _text: '$ 1 - $ 50000',\n      },\n      AnswerChoiceId: {\n        _text: '3076837406',\n      },\n    },\n    {\n      SequenceNumber: {\n        _text: '2',\n      },\n      IsCorrectAnswer: {\n        _text: 'false',\n      },\n      AnswerChoiceText: {\n        _text: '$ 150001 - $ 200000',\n      },\n      Key: {\n        _text: '$ 150001 - $ 200000',\n      },\n      AnswerChoiceId: {\n        _text: '3076837408',\n      },\n    },\n    {\n      SequenceNumber: {\n        _text: '3',\n      },\n      IsCorrectAnswer: {\n        _text: 'false',\n      },\n      AnswerChoiceText: {\n        _text: '$ 200001 - $ 250000',\n      },\n      Key: {\n        _text: '$ 200001 - $ 250000',\n      },\n      AnswerChoiceId: {\n        _text: '3076837410',\n      },\n    },\n    {\n      SequenceNumber: {\n        _text: '4',\n      },\n      IsCorrectAnswer: {\n        _text: 'false',\n      },\n      AnswerChoiceText: {\n        _text: '$ 50001 - $ 100000',\n      },\n      Key: {\n        _text: '$ 50001 - $ 100000',\n      },\n      AnswerChoiceId: {\n        _text: '3076837412',\n      },\n    },\n    {\n      SequenceNumber: {\n        _text: '5',\n      },\n      IsCorrectAnswer: {\n        _text: 'false',\n      },\n      AnswerChoiceText: {\n        _text: 'None of the Above',\n      },\n      Key: {\n        _text:\n          '!($ 1 - $ 50000^$ 150001 - $ 200000^$ 200001 - $ 250000^$ 50001 - $ 100000)',\n      },\n      AnswerChoiceId: {\n        _text: '3076837414',\n      },\n    },\n  ],\n  Key: {\n    _text: 'MTG_ORIG_AMT',\n  },\n  QuestionId: {\n    _text: '48442696',\n  },\n} as ITransunionKBAQuestion"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "type": "literal type"
            },
            {
                "name": "Right",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/tooltips/outline-tooltip/outline-tooltip.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/buttons/filled-onlytext-button/filled-onlytext-button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/badges/filled-onlytext-badge/filled-onlytext-badge.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "secondaryConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/buttons/filled-onlytext-button/filled-onlytext-button.stories.ts",
                "type": "IFilledOnlyTextButtonConfig",
                "defaultValue": "{\n  buttonSize: 'base',\n  backgroundColor: 'bg-lightBlue-100',\n  activeColor: 'bg-lightBlue-200',\n  color: 'text-indigo-800',\n}"
            },
            {
                "name": "secondaryConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/badges/filled-onlytext-badge/filled-onlytext-badge.stories.ts",
                "type": "IFilledOnlytextBadgeConfig",
                "defaultValue": "{\n  size: 'base',\n  backgroundColor: 'bg-lightBlue-100',\n  color: 'text-indigo-800',\n}"
            },
            {
                "name": "services",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/services/shared-services.module.ts",
                "type": "[]",
                "defaultValue": "[\n  AuthService,\n  APIService,\n  SyncService,\n  GuestService,\n  IamService,\n  KycService,\n  TransunionService,\n]"
            },
            {
                "name": "sizeSpecificClass",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.pipe.ts",
                "type": "Record<string, any>",
                "defaultValue": "{\r\n  xs: 'max-w-xs',\r\n  sm: 'max-w-sm',\r\n  base: 'max-w-md',\r\n  lg: 'max-w-lg',\r\n  xl: 'max-w-xl',\r\n}"
            },
            {
                "name": "sizeSpecificClass",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/buttons/filled-onlytext-button/filled-onlytext-button.pipe.ts",
                "type": "Record<string, any>",
                "defaultValue": "{\n  sm: 'text-xs px-3 py-1',\n  base: 'text-sm px-6 py-2',\n  lg: 'text-base px-8 py-3',\n}"
            },
            {
                "name": "sizeSpecificClass",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/inputs/outline-input/outline-input.pipe.ts",
                "type": "Record<string, any>",
                "defaultValue": "{\n  sm: 'text-sm px-3 py-1',\n  base: 'text-sm px-3 py-3',\n  lg: 'text-base px-3 py-4',\n}"
            },
            {
                "name": "sizeSpecificClass",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/inputs/outline-select-input/outline-select-input.pipe.ts",
                "type": "Record<string, any>",
                "defaultValue": "{\n  sm: 'text-sm px-1 py-1',\n  base: 'text-sm px-1 py-3',\n  lg: 'text-base px-1 py-4',\n}"
            },
            {
                "name": "sizeSpecificClass",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/badges/filled-onlytext-badge/filled-onlytext-badge.pipe.ts",
                "type": "Record<string, any>",
                "defaultValue": "{\n  sm: 'text-xs px-2 py-1',\n  base: 'text-xs px-2 py-1',\n  lg: 'text-xs px-2 py-1',\n}"
            },
            {
                "name": "sizeSpecificClass",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/inputs/outline-input/outline-input.pipe.ts",
                "type": "Record<string, any>",
                "defaultValue": "{\r\n  sm: 'text-sm px-3 py-1',\r\n  base: 'text-sm px-3 py-3',\r\n  lg: 'text-base px-3 py-4',\r\n}"
            },
            {
                "name": "sizeSpecificClass",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/inputs/outline-select-input/outline-select-input.pipe.ts",
                "type": "Record<string, any>",
                "defaultValue": "{\r\n  sm: 'text-sm px-1 py-1',\r\n  base: 'text-sm px-1 py-3',\r\n  lg: 'text-base px-1 py-4',\r\n}"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/buttons/filled-onlytext-button/filled-onlytext-button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/buttons/links-onlytext-button/links-onlytext-button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/buttons/outline-onlytext-button/outline-onlytext-button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/inputs/hidden-asterisk-input/hidden-asterisk-input.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/inputs/outline-input/outline-input.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/inputs/outline-select-input/outline-select-input.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "smallConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.stories.ts",
                "type": "IFilledClosingAlertConfig",
                "defaultValue": "{\r\n  size: 'sm',\r\n  backgroundColor: 'bg-indigo-800',\r\n  color: 'text-white',\r\n  alertTitle: 'Alert!',\r\n  alertBody: 'Something went wrong. Please try again.',\r\n}"
            },
            {
                "name": "smallConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/buttons/filled-onlytext-button/filled-onlytext-button.stories.ts",
                "type": "IFilledOnlyTextButtonConfig",
                "defaultValue": "{\r\n  buttonSize: 'sm',\r\n  backgroundColor: 'bg-fuchsia-500',\r\n  activeColor: 'bg-fuchsia-600',\r\n  color: 'text-white',\r\n}"
            },
            {
                "name": "smallConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/buttons/links-onlytext-button/links-onlytext-button.stories.ts",
                "type": "ILinksOnlyTextButtonConfig",
                "defaultValue": "{\r\n  buttonSize: 'sm',\r\n  color: 'text-indigo-800',\r\n}"
            },
            {
                "name": "smallConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/buttons/outline-onlytext-button/outline-onlytext-button.stories.ts",
                "type": "IOutlineOnlyTextButtonConfig",
                "defaultValue": "{\r\n  buttonSize: 'sm',\r\n  borderColor: 'border-indigo-800',\r\n  activeColor: 'bg-indigo-900',\r\n  hoverColor: 'bg-indigo-800',\r\n  color: 'text-indigo-800',\r\n}"
            },
            {
                "name": "smallConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/inputs/outline-input/outline-input.stories.ts",
                "type": "IOutlineInputeConfig",
                "defaultValue": "{\r\n  size: 'sm',\r\n  type: 'text',\r\n  label: 'Input label',\r\n  placeholder: 'Input text',\r\n  autocomplete: 'off',\r\n  value: '',\r\n}"
            },
            {
                "name": "smallConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/inputs/outline-select-input/outline-select-input.stories.ts",
                "type": "IOutlineSelectInputConfig",
                "defaultValue": "{\r\n  size: 'sm',\r\n  label: 'Input label',\r\n  autocomplete: 'off',\r\n  options: ['one', 'two', 'three'],\r\n}"
            },
            {
                "name": "ssn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/kyc-ssn-full/kyc-ssn-full/kyc-ssn-full.component.ts",
                "type": "Record<string, any>",
                "defaultValue": "{\n  'input-0': true,\n  'input-1': true,\n  'input-2': true,\n  'input-3': true,\n  'input-4': true,\n  'input-5': true,\n  'input-6': true,\n  'input-7': true,\n  'input-8': true,\n}"
            },
            {
                "name": "ssnMap",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/kyc-ssn/kyc-ssn/kyc-ssn.component.ts",
                "type": "Record<string, any>",
                "defaultValue": "{\n  'input-0': true,\n  'input-1': true,\n  'input-2': true,\n  'input-3': true,\n}"
            },
            {
                "name": "stack",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/progressbars/filled-checktext-progressbar/filled-checktext-progressbar.stories.ts",
                "type": "IProgressStep[]",
                "defaultValue": "[\r\n  { id: 0, active: true, complete: true, name: 'step 1' },\r\n  { id: 1, active: true, complete: true, name: 'step 2' },\r\n  { id: 2, active: true, complete: false, name: 'step 3' },\r\n]"
            },
            {
                "name": "states",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/forms/outline-address-form/outline-address-form.component.ts",
                "type": "[]",
                "defaultValue": "[\n  'AL',\n  'AK',\n  'AZ',\n  'AR',\n  'CA',\n  'CO',\n  'CT',\n  'DE',\n  'FL',\n  'GA',\n  'HI',\n  'ID',\n  'IL',\n  'IN',\n  'IA',\n  'KS',\n  'KY',\n  'LA',\n  'ME',\n  'MD',\n  'MA',\n  'MI',\n  'MN',\n  'MS',\n  'MO',\n  'MT',\n  'NE',\n  'NV',\n  'NH',\n  'NJ',\n  'NM',\n  'NY',\n  'NC',\n  'ND',\n  'OH',\n  'OK',\n  'OR',\n  'PA',\n  'RI',\n  'SC',\n  'SD',\n  'TN',\n  'TX',\n  'UT',\n  'VT',\n  'VA',\n  'WA',\n  'WV',\n  'WI',\n  'WY',\n]"
            },
            {
                "name": "statuses",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/cards/creditcard-card/account-status.pipe.ts",
                "type": "Record<Status, any>",
                "defaultValue": "{\r\n  excellent: 'bg-teal-500',\r\n  good: 'bg-amber-300',\r\n  okay: 'bg-orange-500',\r\n  poor: 'bg-rose-800',\r\n}"
            },
            {
                "name": "steps",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/progressbars/filled-checktext-progressbar/filled-checktext-progressbar.stories.ts",
                "type": "IProgressStep[]",
                "defaultValue": "[\r\n  { id: 0, active: true, complete: true, name: 'step 1' },\r\n  { id: 1, active: true, complete: true, name: 'step 2' },\r\n  { id: 2, active: true, complete: false, name: 'step 3' },\r\n  { id: 3, active: false, complete: false, name: 'step 4' },\r\n  { id: 4, active: false, complete: false, name: 'step 5' },\r\n]"
            },
            {
                "name": "Strong",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/badges/filled-onlytext-badge/filled-onlytext-badge.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "strongConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/badges/filled-onlytext-badge/filled-onlytext-badge.stories.ts",
                "type": "IFilledOnlytextBadgeConfig",
                "defaultValue": "{\r\n  size: 'base',\r\n  backgroundColor: 'bg-indigo-800',\r\n  color: 'text-lightBlue-100',\r\n}"
            },
            {
                "name": "Tag",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/cards/snapshot-display-card/snapshot-display-card.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/dashboard-init/dashboard-init.stories.ts",
                "type": "Story<DashboardInitComponent>",
                "defaultValue": "(args: any) => ({\r\n  component: DashboardInitComponent,\r\n  props: {\r\n    ...args,\r\n  },\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/signup-error/signup-error.stories.ts",
                "type": "Story<SignupErrorComponent>",
                "defaultValue": "(args: any) => ({\r\n  component: SignupErrorComponent,\r\n  props: {\r\n    ...args,\r\n  },\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/signup-knowyou/signup-knowyou.stories.ts",
                "type": "Story<SignupKnowyouComponent>",
                "defaultValue": "(args: any) => ({\n  component: SignupKnowyouComponent,\n  props: {\n    ...args,\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/signup-error-validation/signup-error-validation.stories.ts",
                "type": "Story<SignupErrorValidationComponent>",
                "defaultValue": "(args: any) => ({\n  component: SignupErrorValidationComponent,\n  props: {\n    ...args,\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/signup-knowyou/signup-knowyou.stories.ts",
                "type": "Story<SignupKnowyouComponent>",
                "defaultValue": "(args: any) => ({\r\n  component: SignupKnowyouComponent,\r\n  props: {\r\n    ...args,\r\n  },\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/typography/typography-accent-bg-cooltext.stories.ts",
                "type": "Story<any>",
                "defaultValue": "(args: any) => ({\r\n  props: {\r\n    ...args,\r\n  },\r\n  template: `\r\n  <div class=\"bg-fuchsia-500 p-4\">\r\n    <h1 class='font-headings font-extrabold text-5xl text-lightBlue-100'>H1 Heading</h1>\r\n    <h2 class='font-headings font-extrabold text-4xl text-lightBlue-100'>H2 Heading</h2>\r\n    <h3 class='font-headings font-extrabold text-3xl text-lightBlue-100'>H3 Heading</h3>\r\n    <h4 class='font-headings font-extrabold text-2xl text-lightBlue-100'>H4 Heading</h4>\r\n    <h5 class='font-headings font-extrabold text-xl text-lightBlue-100'>H5 Heading</h5>\r\n    <h6 class='font-headings font-extrabold text-lg text-lightBlue-100'>H6 Heading</h6>\r\n    <div style=\"margin: 10px 0px\"></div>\r\n    <p class='font-sans text-base text-lightBlue-100'>Body 1</p>\r\n    <p class='font-sans font-semibold text-base text-lightBlue-100'>Body 1-semibold</p>\r\n    <p class='font-sans text-sm text-lightBlue-100'>Body 2</p>\r\n    <p class='font-sans font-semibold text-sm text-lightBlue-100'>Body 2-semibold</p>\r\n  </div>\r\n    `,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/typography/typography-accent-bg.stories.ts",
                "type": "Story<any>",
                "defaultValue": "(args: any) => ({\r\n  props: {\r\n    ...args,\r\n  },\r\n  template: `\r\n  <div class=\"bg-fuchsia-500 p-4\">\r\n    <h1 class='font-headings font-extrabold text-5xl text-white'>H1 Heading</h1>\r\n    <h2 class='font-headings font-extrabold text-4xl text-white'>H2 Heading</h2>\r\n    <h3 class='font-headings font-extrabold text-3xl text-white'>H3 Heading</h3>\r\n    <h4 class='font-headings font-extrabold text-2xl text-white'>H4 Heading</h4>\r\n    <h5 class='font-headings font-extrabold text-xl text-white'>H5 Heading</h5>\r\n    <h6 class='font-headings font-extrabold text-lg text-white'>H6 Heading</h6>\r\n    <div style=\"margin: 10px 0px\"></div>\r\n    <p class='font-sans text-base text-white'>Body 1</p>\r\n    <p class='font-sans font-semibold text-base text-white'>Body 1-semibold</p>\r\n    <p class='font-sans text-sm text-white'>Body 2</p>\r\n    <p class='font-sans font-semibold text-sm text-white'>Body 2-semibold</p>\r\n  </div>\r\n    `,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/typography/typography-primary-bg-cooltext.stories.ts",
                "type": "Story<any>",
                "defaultValue": "(args: any) => ({\r\n  props: {\r\n    ...args,\r\n  },\r\n  template: `\r\n  <div class=\"bg-indigo-800 p-4\">\r\n    <h1 class='font-headings font-extrabold text-5xl text-lightBlue-100'>H1 Heading</h1>\r\n    <h2 class='font-headings font-extrabold text-4xl text-lightBlue-100'>H2 Heading</h2>\r\n    <h3 class='font-headings font-extrabold text-3xl text-lightBlue-100'>H3 Heading</h3>\r\n    <h4 class='font-headings font-extrabold text-2xl text-lightBlue-100'>H4 Heading</h4>\r\n    <h5 class='font-headings font-extrabold text-xl text-lightBlue-100'>H5 Heading</h5>\r\n    <h6 class='font-headings font-extrabold text-lg text-lightBlue-100'>H6 Heading</h6>\r\n    <div style=\"margin: 10px 0px\"></div>\r\n    <p class='font-sans text-base text-lightBlue-100'>Body 1</p>\r\n    <p class='font-sans font-semibold text-base text-lightBlue-100'>Body 1-semibold</p>\r\n    <p class='font-sans text-sm text-lightBlue-100'>Body 2</p>\r\n    <p class='font-sans font-semibold text-sm text-lightBlue-100'>Body 2-semibold</p>\r\n  </div>\r\n    `,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/typography/typography-primary-bg.stories.ts",
                "type": "Story<any>",
                "defaultValue": "(args: any) => ({\r\n  props: {\r\n    ...args,\r\n  },\r\n  template: `\r\n  <div class=\"bg-indigo-800 p-4\">\r\n    <h1 class='font-headings font-extrabold text-5xl text-white'>H1 Heading</h1>\r\n    <h2 class='font-headings font-extrabold text-4xl text-white'>H2 Heading</h2>\r\n    <h3 class='font-headings font-extrabold text-3xl text-white'>H3 Heading</h3>\r\n    <h4 class='font-headings font-extrabold text-2xl text-white'>H4 Heading</h4>\r\n    <h5 class='font-headings font-extrabold text-xl text-white'>H5 Heading</h5>\r\n    <h6 class='font-headings font-extrabold text-lg text-white'>H6 Heading</h6>\r\n    <div style=\"margin: 10px 0px\"></div>\r\n    <p class='font-sans text-base text-white'>Body 1</p>\r\n    <p class='font-sans font-semibold text-base text-white'>Body 1-semibold</p>\r\n    <p class='font-sans text-sm text-white'>Body 2</p>\r\n    <p class='font-sans font-semibold text-sm text-white'>Body 2-semibold</p>\r\n  </div>\r\n    `,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/typography/typography-transparent-bg.stories.ts",
                "type": "Story<any>",
                "defaultValue": "(args: any) => ({\r\n  props: {\r\n    ...args,\r\n  },\r\n  template: `\r\n    <h1 class='font-headings font-extrabold text-5xl text-coolGray-900'>H1 Heading</h1>\r\n    <h2 class='font-headings font-extrabold text-4xl text-coolGray-900'>H2 Heading</h2>\r\n    <h3 class='font-headings font-extrabold text-3xl text-coolGray-900'>H3 Heading</h3>\r\n    <h4 class='font-headings font-extrabold text-2xl text-coolGray-900'>H4 Heading</h4>\r\n    <h5 class='font-headings font-extrabold text-xl text-coolGray-900'>H5 Heading</h5>\r\n    <h6 class='font-headings font-extrabold text-lg text-coolGray-900'>H6 Heading</h6>\r\n    <div style=\"margin: 10px 0px\"></div>\r\n    <p class='font-sans text-base text-coolGray-700'>Body 1</p>\r\n    <p class='font-sans font-semibold text-base text-coolGray-700'>Body 1-semibold</p>\r\n    <p class='font-sans text-sm text-coolGray-700'>Body 2</p>\r\n    <p class='font-sans font-semibold text-sm text-coolGray-700'>Body 2-semibold</p>\r\n    `,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/kyc-address/kyc-address-pure/kyc-address-pure.stories.ts",
                "type": "Story<KycAddressPureComponent>",
                "defaultValue": "(args: any) => ({\r\n  component: KycAddressPureComponent,\r\n  props: {\r\n    ...args,\r\n  },\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/kyc-idverification/kyc-idverification-pure/kyc-idverification-pure.stories.ts",
                "type": "Story<KycIdverificationPureComponent>",
                "defaultValue": "(args: any) => ({\r\n  component: KycIdverificationPureComponent,\r\n  props: {\r\n    ...args,\r\n  },\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/kyc-congratulations/kyc-congratulations-pure/kyc-congratulations-pure.stories.ts",
                "type": "Story<KycCongratulationsPureComponent>",
                "defaultValue": "(args: any) => ({\r\n  component: KycCongratulationsPureComponent,\r\n  props: {\r\n    ...args,\r\n  },\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/kyc-kbaquestions/kyc-kbaquestions-pure/kyc-kbaquestions-pure.stories.ts",
                "type": "Story<KycKbaquestionsPureComponent>",
                "defaultValue": "(args: any) => ({\r\n  component: KycKbaquestionsPureComponent,\r\n  props: {\r\n    ...args,\r\n  },\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/kyc-phonenumber/kyc-phonenumber-pure/kyc-phonenumber-pure.stories.ts",
                "type": "Story<KycPhonenumberPureComponent>",
                "defaultValue": "(args: any) => ({\r\n  component: KycPhonenumberPureComponent,\r\n  props: {\r\n    ...args,\r\n  },\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/kyc-phonenumber/kyc-phonenumber-pure/kyc-phonenumber-pure.stories.ts",
                "type": "Story<KycPhonenumberPureComponent>",
                "defaultValue": "(args: any) => ({\n  component: KycPhonenumberPureComponent,\n  props: {\n    ...args,\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/kyc-kbaquestions/kyc-kbaquestions-pure/kyc-kbaquestions-pure.stories.ts",
                "type": "Story<KycKbaquestionsPureComponent>",
                "defaultValue": "(args: any) => ({\n  component: KycKbaquestionsPureComponent,\n  props: {\n    ...args,\n    kbas,\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/kyc-welcomeback/kyc-welcomeback-pure/kyc-welcomeback-pure.stories.ts",
                "type": "Story<KycWelcomebackPureComponent>",
                "defaultValue": "(args: any) => ({\n  component: KycWelcomebackPureComponent,\n  props: {\n    ...args,\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/kyc-welcomeback/kyc-welcomeback-pure/kyc-welcomeback-pure.stories.ts",
                "type": "Story<KycWelcomebackPureComponent>",
                "defaultValue": "(args: any) => ({\r\n  component: KycWelcomebackPureComponent,\r\n  props: {\r\n    ...args,\r\n  },\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/signup/signup-pure/signup-pure.stories.ts",
                "type": "Story<SignupPureComponent>",
                "defaultValue": "(args: any) => ({\n  component: SignupPureComponent,\n  props: {\n    ...args,\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/kyc-welcome/kyc-welcome-pure/kyc-welcome-pure.stories.ts",
                "type": "Story<KycWelcomePureComponent>",
                "defaultValue": "(args: any) => ({\n  props: {\n    ...args,\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/kyc-ssn/kyc-ssn-pure/kyc-ssn-pure.stories.ts",
                "type": "Story<KycSsnPureComponent>",
                "defaultValue": "(args: any) => ({\n  component: KycSsnPureComponent,\n  props: {\n    ...args,\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.stories.ts",
                "type": "Story<FilledClosingAlertComponent>",
                "defaultValue": "(args: any) => ({\r\n  component: FilledClosingAlertComponent,\r\n  props: {\r\n    ...args,\r\n    showAlert: true,\r\n  },\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/buttons/filled-onlytext-button/filled-onlytext-button.stories.ts",
                "type": "Story<FilledOnlytextButtonComponent>",
                "defaultValue": "(args: any) => ({\n  props: {\n    ...args,\n  },\n  template: `<brave-filled-onlytext-button>Default</brave-filled-onlytext-button>`,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/cards/creditcard-card/creditcard-card.stories.ts",
                "type": "Story<CreditcardCardComponent>",
                "defaultValue": "(args: any) => ({\n  component: CreditcardCardComponent,\n  props: {\n    ...args,\n    status: 'excellent',\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/buttons/outline-onlytext-button/outline-onlytext-button.stories.ts",
                "type": "Story<OutlineOnlytextButtonComponent>",
                "defaultValue": "(args: any) => ({\r\n  props: {\r\n    ...args,\r\n  },\r\n  template: `<brave-outline-onlytext-button>Default</brave-outline-onlytext-button>`,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/buttons/viewdetail-button/viewdetail-button.stories.ts",
                "type": "Story<ViewdetailButtonComponent>",
                "defaultValue": "(args: any) => ({\r\n  props: {\r\n    ...args,\r\n  },\r\n  template: `\r\n  <span style=\"p-6 width: 120px\">\r\n    <brave-viewdetail-button>View Details</brave-viewdetail-button>\r\n  </span>\r\n  `,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/cards/credit-builder-card/credit-builder-card.stories.ts",
                "type": "Story<CreditBuilderCardComponent>",
                "defaultValue": "(args: any) => ({\r\n  component: CreditBuilderCardComponent,\r\n  props: {\r\n    ...args\r\n  },\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/cards/creditcard-card/creditcard-card.stories.ts",
                "type": "Story<CreditcardCardComponent>",
                "defaultValue": "(args: any) => ({\r\n  component: CreditcardCardComponent,\r\n  props: {\r\n    ...args,\r\n    status: 'excellent',\r\n  },\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/buttons/viewdetail-button/viewdetail-button.stories.ts",
                "type": "Story<ViewdetailButtonComponent>",
                "defaultValue": "(args: any) => ({\n  props: {\n    ...args,\n  },\n  template: `\n  <span style=\"p-6 width: 120px\">\n    <brave-viewdetail-button>View Details</brave-viewdetail-button>\n  </span>\n  `,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/badges/filled-onlytext-badge/filled-onlytext-badge.stories.ts",
                "type": "Story<FilledOnlytextBadgeComponent>",
                "defaultValue": "(args: any) => ({\n  props: {\n    ...args,\n  },\n  template: `<brave-filled-onlytext-badge>Badge</brave-filled-onlytext-badge>`,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/inputs/kba-multiplechoice-input/kba-multiplechoice-input.stories.ts",
                "type": "Story<KbaMultiplechoiceInputComponent>",
                "defaultValue": "(args: any) => ({\n  props: {\n    ...args,\n    question,\n  },\n  template: `<brave-kba-multiplechoice-input [question]=\"question\"></brave-kba-multiplechoice-input>`,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/inputs/hidden-asterisk-input/hidden-asterisk-input.stories.ts",
                "type": "Story<HiddenAsteriskInputComponent>",
                "defaultValue": "(args: any) => ({\n  component: HiddenAsteriskInputComponent,\n  props: {\n    ...args,\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/inputs/outline-input/outline-input.stories.ts",
                "type": "Story<OutlineInputComponent>",
                "defaultValue": "(args: any) => ({\n  component: OutlineInputComponent,\n  props: {\n    ...args,\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/cards/creditcard-card/creditcard-card.stories.ts",
                "type": "Story<CreditcardCardComponent>",
                "defaultValue": "(args: any) => ({\n  component: CreditcardCardComponent,\n  props: {\n    ...args,\n    status: 'excellent',\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/cards/loan-card/loan-card.stories.ts",
                "type": "Story<LoanCardComponent>",
                "defaultValue": "(args: any) => ({\n  component: LoanCardComponent,\n  props: {\n    ...args,\n    status: 'good',\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/navbars/dashboard-navbar/dashboard-navbar.stories.ts",
                "type": "Story<DashboardNavbarComponent>",
                "defaultValue": "(args: any) => ({\n  props: {\n    ...args,\n  },\n  template: `<brave-dashboard-navbar><brave-dashboard-navbar>`,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/modals/base-modal-regular/base-modal-regular.stories.ts",
                "type": "Story<BaseModalRegularComponent>",
                "defaultValue": "(args: any) => ({\n  props: {\n    ...args,\n    config,\n  },\n  template: `<brave-base-modal-regular [config]=\"config\"></brave-base-modal-regular>`,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/modals/base-modal-small/base-modal-small.stories.ts",
                "type": "Story<BaseModalSmallComponent>",
                "defaultValue": "(args: any) => ({\n  props: {\n    ...args,\n    config,\n  },\n  template: `<brave-base-modal-small [config]=\"config\"></brave-base-modal-small>`,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/paginations/outline-prevnext-pagination/outline-prevnext-pagination.stories.ts",
                "type": "Story<any>",
                "defaultValue": "(args: any) => ({\n  component: OutlinePrevnextPaginationComponent,\n  props: {\n    ...args,\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/progressbars/filled-checktext-progressbar/filled-checktext-progressbar.stories.ts",
                "type": "Story<FilledChecktextProgressbarComponent>",
                "defaultValue": "(args: any) => ({\n  props: {\n    ...args,\n    stack,\n    config,\n  },\n  template: `<brave-filled-checktext-progressbar [config]=\"config\" [steps]=\"steps\"><brave-filled-checktext-progressbar>`,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/tabs/filled-onlytext-tabs/filled-onlytext-tabs.stories.ts",
                "type": "Story<any>",
                "defaultValue": "(args: any) => ({\n  component: FilledOnlytextTabsComponent,\n  props: {\n    ...args,\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/tooltips/outline-tooltip/outline-tooltip.stories.ts",
                "type": "Story<OutlineTooltipComponent>",
                "defaultValue": "(args: any) => ({\n  component: OutlineTooltipComponent,\n  props: {\n    ...args,\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/forms/kbaquestions-form/kbaquestions-form.stories.ts",
                "type": "Story<KbaquestionsFormComponent>",
                "defaultValue": "(args: any) => ({\n  props: {\n    ...args,\n    kbas,\n    required: true,\n  },\n  template: `<brave-kbaquestions-form [kbas]=\"kbas\"></brave-kbaquestions-form>`,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/forms/outline-address-form/outline-address-form.stories.ts",
                "type": "Story<OutlineAddressFormComponent>",
                "defaultValue": "(args: any) => ({\n  component: OutlineAddressFormComponent,\n  props: {\n    ...args,\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/navbars/dashboard-navbar/dashboard-navbar.stories.ts",
                "type": "Story<DashboardNavbarComponent>",
                "defaultValue": "(args: any) => ({\r\n  props: {\r\n    ...args,\r\n  },\r\n  template: `<brave-dashboard-navbar><brave-dashboard-navbar>`,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/forms/outline-onecolumn-form/outline-onecolumn-form.stories.ts",
                "type": "Story<OutlineOnecolumnFormComponent>",
                "defaultValue": "(args: any) => ({\n  component: OutlineOnecolumnFormComponent,\n  props: {\n    ...args,\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/forms/outline-phone-form/outline-phone-form.stories.ts",
                "type": "Story<OutlinePhoneFormComponent>",
                "defaultValue": "(args: any) => ({\n  component: OutlinePhoneFormComponent,\n  props: {\n    ...args,\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/forms/select-dob-form/select-dob-form.stories.ts",
                "type": "Story<SelectDobFormComponent>",
                "defaultValue": "(args: any) => ({\n  component: SelectDobFormComponent,\n  props: {\n    ...args,\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/forms/outline-verificationcode-form/outline-verificationcode-form.stories.ts",
                "type": "Story<OutlineVerificationcodeFormComponent>",
                "defaultValue": "(args: any) => ({\n  component: OutlineVerificationcodeFormComponent,\n  props: {\n    ...args,\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/forms/ssn-full-form/ssn-full-form.stories.ts",
                "type": "Story<SsnFullFormComponent>",
                "defaultValue": "(args: any) => ({\n  component: SsnFullFormComponent,\n  props: {\n    ...args,\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/forms/simple-signup-form/simple-signup-form.stories.ts",
                "type": "Story<SimpleSignupFormComponent>",
                "defaultValue": "(args: any) => ({\n  component: SimpleSignupFormComponent,\n  props: {\n    ...args,\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/forms/ssn-lastfour-form/ssn-lastfour-form.stories.ts",
                "type": "Story<SsnLastfourFormComponent>",
                "defaultValue": "(args: any) => ({\n  props: {\n    ...args,\n  },\n  template: `<brave-ssn-lastfour-form></brave-ssn-lastfour-form>`,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/inputs/outline-select-input/outline-select-input.stories.ts",
                "type": "Story<OutlineSelectInputComponent>",
                "defaultValue": "(args: any) => ({\n  component: OutlineSelectInputComponent,\n  props: {\n    ...args,\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/dropdowns/popdowns/notification-dropdown/notification-dropdown.stories.ts",
                "type": "Story<NotificationDropdownComponent>",
                "defaultValue": "(args: any) => ({\r\n  component: NotificationDropdownComponent,\r\n  props: {\r\n    ...args,\r\n  },\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/dropdowns/popdowns/table-dropdown/table-dropdown.stories.ts",
                "type": "Story<TableDropdownComponent>",
                "defaultValue": "(args: any) => ({\r\n  component: TableDropdownComponent,\r\n  props: {\r\n    ...args,\r\n  },\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/dropdowns/popdowns/user-dropdown/user-dropdown.stories.ts",
                "type": "Story<UserDropdownComponent>",
                "defaultValue": "(args: any) => ({\r\n  component: UserDropdownComponent,\r\n  props: {\r\n    ...args,\r\n  },\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/dropdowns/selects/outline-onlytext-select/outline-onlytext-select.stories.ts",
                "type": "Story<OutlineOnlytextSelectComponent>",
                "defaultValue": "(args: any) => ({\r\n  props: {\r\n    ...args,\r\n    items,\r\n  },\r\n  template: `\r\n  <brave-outline-onlytext-select [items]=\"items\"></brave-outline-onlytext-select>\r\n  `,\r\n})"
            },
            {
                "name": "Time",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/cards/snapshot-display-card/snapshot-display-card.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Top",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/tooltips/outline-tooltip/outline-tooltip.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.module.ts",
                "type": "",
                "defaultValue": "awsconfig.oauth.redirectSignIn.split(',')"
            },
            {
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.module.ts",
                "type": "",
                "defaultValue": "awsconfig.oauth.redirectSignOut.split(',')"
            },
            {
                "name": "updatedAwsConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.module.ts",
                "type": "object",
                "defaultValue": "{\r\n  ...awsconfig,\r\n  oauth: {\r\n    ...awsconfig.oauth,\r\n    redirectSignIn: isLocalhost\r\n      ? localRedirectSignIn\r\n      : productionRedirectSignIn,\r\n    redirectSignOut: isLocalhost\r\n      ? localRedirectSignOut\r\n      : productionRedirectSignOut,\r\n  },\r\n}"
            },
            {
                "name": "updateNestedObject",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/utils/utils.ts",
                "type": "",
                "defaultValue": "(o: any, k: string, v: any): any => {\n  const obj = Object.assign({}, o);\n  _updateNestedRecurse(obj, k, v);\n  return obj;\n}",
                "description": "<p>A utility function to update deep nested objects\nWill update all keys of the name you specify</p>\n"
            },
            {
                "name": "views",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/views.module.ts",
                "type": "[]",
                "defaultValue": "[\n  SignupComponent,\n  SignupPureComponent,\n  SignupErrorComponent,\n  SignupErrorValidationComponent,\n  SignupKnowyouComponent,\n  SignupThankyouComponent,\n  SignupResendComponent,\n  SigninComponent,\n  SigninPureComponent,\n  SigninForgotComponent,\n  SigninRedirectComponent,\n  KycBaseComponent,\n  KycAddressComponent,\n  KycAddressPureComponent,\n  KycCongratulationsComponent,\n  KycCongratulationsPureComponent,\n  KycIdverificationComponent,\n  KycIdverificationPureComponent,\n  KycKbaquestionsComponent,\n  KycKbaquestionsPureComponent,\n  KycPhonenumberComponent,\n  KycPhonenumberPureComponent,\n  KycSsnComponent,\n  KycSsnPureComponent,\n  KycSsnFullComponent,\n  KycSsnFullPureComponent,\n  KycWelcomeComponent,\n  KycWelcomePureComponent,\n  KycWelcomebackComponent,\n  KycWelcomebackPureComponent,\n  CompliancePrivacyComponent,\n  ComplianceTosComponent,\n]"
            }
        ],
        "functions": [
            {
                "name": "BraveEmailValidator",
                "file": "src/app/shared/validators/email.validator.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "description": "",
                "args": [
                    {
                        "name": "control"
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "control",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        ],
        "typealiases": [
            {
                "name": "Address",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/shared/services/aws/api.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "AddressInput",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/shared/services/aws/api.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "Agencies",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/shared/services/aws/api.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "AgenciesInput",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/shared/services/aws/api.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "AppData",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/shared/services/aws/api.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "CreateAppDataInput",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/shared/services/aws/api.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "CreateAppDataMutation",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/shared/services/aws/api.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "DeleteAppDataInput",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/shared/services/aws/api.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "DeleteAppDataMutation",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/shared/services/aws/api.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "Dob",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/shared/services/aws/api.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "DobInput",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/shared/services/aws/api.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "Equifax",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/shared/services/aws/api.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "EquifaxInput",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/shared/services/aws/api.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "Experian",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/shared/services/aws/api.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "ExperianInput",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/shared/services/aws/api.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "GetAppDataQuery",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/shared/services/aws/api.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "KycIdverificationState",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"init\" | \"sent\" | \"error\"",
                "file": "src/app/views/kyc-idverification/kyc-idverification/kyc-idverification.component.ts",
                "description": "",
                "kind": 168
            },
            {
                "name": "ListAppDatasQuery",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/shared/services/aws/api.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "ModelAppDataConditionInput",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/shared/services/aws/api.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "ModelAppDataConnection",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/shared/services/aws/api.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "ModelAppDataFilterInput",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/shared/services/aws/api.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "ModelIDInput",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/shared/services/aws/api.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "ModelSizeInput",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/shared/services/aws/api.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "Mutable",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/app/shared/utils/types.ts",
                "description": "<p>To change read only types to mutable\nExample:\ninterface Foo {\n   readonly bar: boolean;\n}</p>\n<p>const Bar: Foo = {\n    bar: false\n}</p>\n<p>const FooBar = {...Bar} as DeepWriteable<Foo>\nBar.bar = true; // ERROR!!\nFooBar.bar = true; // OK\nFooBar.bar = false; // OK</p>\n",
                "kind": 176
            },
            {
                "name": "Name",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/shared/services/aws/api.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "NameInput",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/shared/services/aws/api.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "Onboarding",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/shared/services/aws/api.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "OnboardingInput",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/shared/services/aws/api.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "OnCreateAppDataSubscription",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/shared/services/aws/api.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "OnDeleteAppDataSubscription",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/shared/services/aws/api.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "OnUpdateAppDataSubscription",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/shared/services/aws/api.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "Phone",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/shared/services/aws/api.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "PhoneInput",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/shared/services/aws/api.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "SnapshotTendency",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"up\" | \"down\" | \"no-tendency\"",
                "file": "src/app/shared/components/cards/snapshot-display-card/snapshot-display-card.component.ts",
                "description": "",
                "kind": 168
            },
            {
                "name": "Ssn",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/shared/services/aws/api.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "SsnInput",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/shared/services/aws/api.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "Status",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"excellent\" | \"good\" | \"okay\" | \"poor\"",
                "file": "src/app/shared/components/cards/creditcard-card/creditcard-card.component.ts",
                "description": "",
                "kind": 168
            },
            {
                "name": "Status",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"excellent\" | \"good\" | \"okay\" | \"poor\"",
                "file": "src/app/shared/components/cards/loan-card/loan-card.component.ts",
                "description": "",
                "kind": 168
            },
            {
                "name": "Transunion",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/shared/services/aws/api.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "TransunionInput",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/shared/services/aws/api.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "typename",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/app/store/app-data/app-data.model.ts",
                "description": "",
                "kind": 177
            },
            {
                "name": "typename",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/app/store/user/user.model.ts",
                "description": "",
                "kind": 177
            },
            {
                "name": "typename",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/app/store/onboarding/onboarding.model.ts",
                "description": "",
                "kind": 177
            },
            {
                "name": "UpdateAppDataInput",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/shared/services/aws/api.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "UpdateAppDataMutation",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/shared/services/aws/api.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "User",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/shared/services/aws/api.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "UserAttributes",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/shared/services/aws/api.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "UserAttributesInput",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/shared/services/aws/api.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "UserInput",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/shared/services/aws/api.service.ts",
                "description": "",
                "kind": 165
            }
        ],
        "enumerations": [
            {
                "name": "LabelOfSnapshot",
                "childs": [
                    {
                        "name": "Update",
                        "value": "update"
                    },
                    {
                        "name": "Hidden",
                        "value": "hidden"
                    },
                    {
                        "name": "New",
                        "value": "new"
                    },
                    {
                        "name": "NoLabel",
                        "value": "no-label"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "description": "",
                "file": "src/app/shared/components/cards/snapshot-display-card/snapshot-label.pipe.ts"
            },
            {
                "name": "ModelAttributeTypes",
                "childs": [
                    {
                        "name": "binary",
                        "value": "binary"
                    },
                    {
                        "name": "binarySet",
                        "value": "binarySet"
                    },
                    {
                        "name": "bool",
                        "value": "bool"
                    },
                    {
                        "name": "list",
                        "value": "list"
                    },
                    {
                        "name": "map",
                        "value": "map"
                    },
                    {
                        "name": "number",
                        "value": "number"
                    },
                    {
                        "name": "numberSet",
                        "value": "numberSet"
                    },
                    {
                        "name": "string",
                        "value": "string"
                    },
                    {
                        "name": "stringSet",
                        "value": "stringSet"
                    },
                    {
                        "name": "_null",
                        "value": "_null"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "description": "",
                "file": "src/app/shared/services/aws/api.service.ts"
            },
            {
                "name": "SnapshotStatus",
                "childs": [
                    {
                        "name": "Critical",
                        "value": "critical"
                    },
                    {
                        "name": "Danger",
                        "value": "danger"
                    },
                    {
                        "name": "Safe",
                        "value": "safe"
                    },
                    {
                        "name": "Default",
                        "value": "default"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "description": "",
                "file": "src/app/shared/components/cards/snapshot-display-card/snapshot-display-card.component.ts"
            }
        ],
        "groupedVariables": {
            "src/app/shared/utils/utils.ts": [
                {
                    "name": "_deleteKeyNestedObject",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/utils/utils.ts",
                    "type": "",
                    "defaultValue": "(o: any, k: string) => {\n  // console.log('delete', o, o[k], k);\n  if (!o) return;\n  delete o[k];\n  Object.keys(o).forEach((key) => {\n    if (typeof o[key] === 'object') {\n      _deleteKeyNestedObject(o[key], k);\n    }\n  });\n}"
                },
                {
                    "name": "_updateNestedRecurse",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/utils/utils.ts",
                    "type": "",
                    "defaultValue": "(o: any, k: string, v: any) => {\n  if (!o) return;\n  Object.keys(o).forEach((key) => {\n    if (key == k) o[k] = v;\n    if (typeof o[key] === 'object') {\n      _updateNestedRecurse(o[key], k, v);\n    }\n  });\n}"
                },
                {
                    "name": "deleteKeyNestedObject",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/utils/utils.ts",
                    "type": "",
                    "defaultValue": "(o: any, k: string) => {\n  const obj = Object.assign({}, o);\n  _deleteKeyNestedObject(obj, k);\n  return obj;\n}",
                    "description": "<p>A utility function to remove unwanted fields by key\nWill delete all keys of the name you specify</p>\n"
                },
                {
                    "name": "updateNestedObject",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/utils/utils.ts",
                    "type": "",
                    "defaultValue": "(o: any, k: string, v: any): any => {\n  const obj = Object.assign({}, o);\n  _updateNestedRecurse(obj, k, v);\n  return obj;\n}",
                    "description": "<p>A utility function to update deep nested objects\nWill update all keys of the name you specify</p>\n"
                }
            ],
            "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.stories.ts": [
                {
                    "name": "Accent",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "accentConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.stories.ts",
                    "type": "IFilledClosingAlertConfig",
                    "defaultValue": "{\r\n  size: 'base',\r\n  backgroundColor: 'bg-fuchsia-500',\r\n  color: 'text-white',\r\n  alertTitle: 'Alert!',\r\n  alertBody: 'Something went wrong. Please try again.',\r\n}"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "ExtraLarge",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "extraLargeConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.stories.ts",
                    "type": "IFilledClosingAlertConfig",
                    "defaultValue": "{\r\n  size: 'xl',\r\n  backgroundColor: 'bg-indigo-800',\r\n  color: 'text-white',\r\n  alertTitle: 'Alert!',\r\n  alertBody: 'Something went wrong. Please try again.',\r\n}"
                },
                {
                    "name": "ExtraSmall",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "extraSmallConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.stories.ts",
                    "type": "IFilledClosingAlertConfig",
                    "defaultValue": "{\r\n  size: 'xs',\r\n  backgroundColor: 'bg-indigo-800',\r\n  color: 'text-white',\r\n  alertTitle: 'Alert!',\r\n  alertBody: 'Something went wrong. Please try again.',\r\n}"
                },
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "largeConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.stories.ts",
                    "type": "IFilledClosingAlertConfig",
                    "defaultValue": "{\r\n  size: 'lg',\r\n  backgroundColor: 'bg-indigo-800',\r\n  color: 'text-white',\r\n  alertTitle: 'Alert!',\r\n  alertBody: 'Something went wrong. Please try again.',\r\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "primaryConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.stories.ts",
                    "type": "IFilledClosingAlertConfig",
                    "defaultValue": "{\r\n  size: 'base',\r\n  backgroundColor: 'bg-indigo-800',\r\n  color: 'text-white',\r\n  alertTitle: 'Alert!',\r\n  alertBody: 'Something went wrong. Please try again.',\r\n}"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "smallConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.stories.ts",
                    "type": "IFilledClosingAlertConfig",
                    "defaultValue": "{\r\n  size: 'sm',\r\n  backgroundColor: 'bg-indigo-800',\r\n  color: 'text-white',\r\n  alertTitle: 'Alert!',\r\n  alertBody: 'Something went wrong. Please try again.',\r\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.stories.ts",
                    "type": "Story<FilledClosingAlertComponent>",
                    "defaultValue": "(args: any) => ({\r\n  component: FilledClosingAlertComponent,\r\n  props: {\r\n    ...args,\r\n    showAlert: true,\r\n  },\r\n})"
                }
            ],
            "src/app/shared/components/buttons/filled-onlytext-button/filled-onlytext-button.stories.ts": [
                {
                    "name": "Accent",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/buttons/links-onlytext-button/links-onlytext-button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "accentConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/buttons/filled-onlytext-button/filled-onlytext-button.stories.ts",
                    "type": "IFilledOnlyTextButtonConfig",
                    "defaultValue": "{\r\n  buttonSize: 'base',\r\n  backgroundColor: 'bg-fuchsia-500',\r\n  activeColor: 'bg-fuchsia-600',\r\n  color: 'text-white',\r\n}"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/buttons/filled-onlytext-button/filled-onlytext-button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/buttons/filled-onlytext-button/filled-onlytext-button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "largeConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/buttons/filled-onlytext-button/filled-onlytext-button.stories.ts",
                    "type": "IFilledOnlyTextButtonConfig",
                    "defaultValue": "{\r\n  buttonSize: 'lg',\r\n  backgroundColor: 'bg-fuchsia-500',\r\n  activeColor: 'bg-fuchsia-600',\r\n  color: 'text-white',\r\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/buttons/filled-onlytext-button/filled-onlytext-button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "primaryConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/buttons/filled-onlytext-button/filled-onlytext-button.stories.ts",
                    "type": "IFilledOnlyTextButtonConfig",
                    "defaultValue": "{\r\n  buttonSize: 'base',\r\n  backgroundColor: 'bg-indigo-800',\r\n  activeColor: 'bg-indigo-900',\r\n  color: 'text-white',\r\n}"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/buttons/filled-onlytext-button/filled-onlytext-button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "secondaryConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/buttons/filled-onlytext-button/filled-onlytext-button.stories.ts",
                    "type": "IFilledOnlyTextButtonConfig",
                    "defaultValue": "{\r\n  buttonSize: 'base',\r\n  backgroundColor: 'bg-lightBlue-100',\r\n  activeColor: 'bg-lightBlue-200',\r\n  color: 'text-indigo-800',\r\n}"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/buttons/filled-onlytext-button/filled-onlytext-button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "smallConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/buttons/filled-onlytext-button/filled-onlytext-button.stories.ts",
                    "type": "IFilledOnlyTextButtonConfig",
                    "defaultValue": "{\r\n  buttonSize: 'sm',\r\n  backgroundColor: 'bg-fuchsia-500',\r\n  activeColor: 'bg-fuchsia-600',\r\n  color: 'text-white',\r\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/buttons/filled-onlytext-button/filled-onlytext-button.stories.ts",
                    "type": "Story<FilledOnlytextButtonComponent>",
                    "defaultValue": "(args: any) => ({\r\n  props: {\r\n    ...args,\r\n  },\r\n  template: `<brave-filled-onlytext-button>Default</brave-filled-onlytext-button>`,\r\n})"
                }
            ],
            "src/app/shared/components/buttons/links-onlytext-button/links-onlytext-button.stories.ts": [
                {
                    "name": "Accent",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/buttons/links-onlytext-button/links-onlytext-button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "accentConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/buttons/links-onlytext-button/links-onlytext-button.stories.ts",
                    "type": "ILinksOnlyTextButtonConfig",
                    "defaultValue": "{\r\n  buttonSize: 'base',\r\n  color: 'text-fuchsia-500',\r\n}"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/buttons/links-onlytext-button/links-onlytext-button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/buttons/links-onlytext-button/links-onlytext-button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "largeConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/buttons/links-onlytext-button/links-onlytext-button.stories.ts",
                    "type": "ILinksOnlyTextButtonConfig",
                    "defaultValue": "{\r\n  buttonSize: 'lg',\r\n  color: 'text-indigo-800',\r\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/buttons/links-onlytext-button/links-onlytext-button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "primaryConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/buttons/links-onlytext-button/links-onlytext-button.stories.ts",
                    "type": "ILinksOnlyTextButtonConfig",
                    "defaultValue": "{\r\n  buttonSize: 'base',\r\n  color: 'text-indigo-800',\r\n}"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/buttons/links-onlytext-button/links-onlytext-button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "smallConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/buttons/links-onlytext-button/links-onlytext-button.stories.ts",
                    "type": "ILinksOnlyTextButtonConfig",
                    "defaultValue": "{\r\n  buttonSize: 'sm',\r\n  color: 'text-indigo-800',\r\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/buttons/links-onlytext-button/links-onlytext-button.stories.ts",
                    "type": "Story<LinksOnlytextButtonComponent>",
                    "defaultValue": "(args: any) => ({\r\n  props: {\r\n    ...args,\r\n  },\r\n  template: `<brave-links-onlytext-button>My Link</brave-links-onlytext-button>`,\r\n})"
                }
            ],
            "src/app/shared/components/badges/filled-onlytext-badge/filled-onlytext-badge.stories.ts": [
                {
                    "name": "Accent",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/badges/filled-onlytext-badge/filled-onlytext-badge.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "accentConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/badges/filled-onlytext-badge/filled-onlytext-badge.stories.ts",
                    "type": "IFilledOnlytextBadgeConfig",
                    "defaultValue": "{\n  size: 'base',\n  backgroundColor: 'bg-fuchsia-200',\n  color: 'text-fuchsia-500',\n}"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/badges/filled-onlytext-badge/filled-onlytext-badge.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/badges/filled-onlytext-badge/filled-onlytext-badge.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "primaryConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/badges/filled-onlytext-badge/filled-onlytext-badge.stories.ts",
                    "type": "IFilledOnlytextBadgeConfig",
                    "defaultValue": "{\n  size: 'base',\n  backgroundColor: 'bg-indigo-200',\n  color: 'text-indigo-800',\n}"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/badges/filled-onlytext-badge/filled-onlytext-badge.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "secondaryConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/badges/filled-onlytext-badge/filled-onlytext-badge.stories.ts",
                    "type": "IFilledOnlytextBadgeConfig",
                    "defaultValue": "{\n  size: 'base',\n  backgroundColor: 'bg-lightBlue-100',\n  color: 'text-indigo-800',\n}"
                },
                {
                    "name": "Strong",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/badges/filled-onlytext-badge/filled-onlytext-badge.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "strongConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/badges/filled-onlytext-badge/filled-onlytext-badge.stories.ts",
                    "type": "IFilledOnlytextBadgeConfig",
                    "defaultValue": "{\n  size: 'base',\n  backgroundColor: 'bg-indigo-800',\n  color: 'text-lightBlue-100',\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/badges/filled-onlytext-badge/filled-onlytext-badge.stories.ts",
                    "type": "Story<FilledOnlytextBadgeComponent>",
                    "defaultValue": "(args: any) => ({\n  props: {\n    ...args,\n  },\n  template: `<brave-filled-onlytext-badge>Badge</brave-filled-onlytext-badge>`,\n})"
                }
            ],
            "src/app/views/kyc-address/kyc-address/kyc-address.component.ts": [
                {
                    "name": "address",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/kyc-address/kyc-address/kyc-address.component.ts",
                    "type": "Record<string, any>",
                    "defaultValue": "{\r\n  addressOne: true,\r\n  addressTwo: true,\r\n  city: true,\r\n  state: true,\r\n  zip: true,\r\n}"
                }
            ],
            "src/app/shared/components/tooltips/outline-tooltip/outline-tooltip.stories.ts": [
                {
                    "name": "Bottom",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/tooltips/outline-tooltip/outline-tooltip.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/tooltips/outline-tooltip/outline-tooltip.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Left",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/tooltips/outline-tooltip/outline-tooltip.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Right",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/tooltips/outline-tooltip/outline-tooltip.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/tooltips/outline-tooltip/outline-tooltip.stories.ts",
                    "type": "Story<OutlineTooltipComponent>",
                    "defaultValue": "(args: any) => ({\r\n  component: OutlineTooltipComponent,\r\n  props: {\r\n    ...args,\r\n  },\r\n})"
                },
                {
                    "name": "Top",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/tooltips/outline-tooltip/outline-tooltip.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "src/app/store/index.ts": [
                {
                    "name": "braveState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/index.ts",
                    "type": "[]",
                    "defaultValue": "[\n  AppDataState,\n  UserState,\n  OnboardingState,\n  AgenciesState,\n]"
                }
            ],
            "src/app/views/kyc-idverification/kyc-idverification/kyc-idverification.component.ts": [
                {
                    "name": "codeMap",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/kyc-idverification/kyc-idverification/kyc-idverification.component.ts",
                    "type": "Record<string, any>",
                    "defaultValue": "{\r\n  code: true,\r\n}"
                }
            ],
            "src/app/layouts/dashboard/dashboard.module.ts": [
                {
                    "name": "components",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layouts/dashboard/dashboard.module.ts",
                    "type": "[]",
                    "defaultValue": "[DashboardComponent]"
                }
            ],
            "src/app/layouts/compliance/compliance.module.ts": [
                {
                    "name": "components",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layouts/compliance/compliance.module.ts",
                    "type": "[]",
                    "defaultValue": "[ComplianceComponent]"
                }
            ],
            "src/app/layouts/onboarding/onboarding.module.ts": [
                {
                    "name": "components",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layouts/onboarding/onboarding.module.ts",
                    "type": "[]",
                    "defaultValue": "[OnboardingComponent]"
                }
            ],
            "src/app/shared/components/shared-components.module.ts": [
                {
                    "name": "components",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/shared-components.module.ts",
                    "type": "[]",
                    "defaultValue": "[\n  BaseFormComponent,\n  SignInComponent,\n  SignUpComponent,\n  FilledOnlytextButtonComponent,\n  LinksOnlytextButtonComponent,\n  OutlineOnlytextButtonComponent,\n  OutlineInputComponent,\n  OutlineOnecolumnFormComponent,\n  GoogleIconsigninButtonComponent,\n  FacebookOnlytextsigninButtonComponent,\n  SimpleSignupFormComponent,\n  OutlineSelectInputComponent,\n  FilledClosingAlertComponent,\n  FilledOnlytextBadgeComponent,\n  IndexDropdownComponent,\n  MenuDropdownComponent,\n  NotificationDropdownComponent,\n  PagesDropdownComponent,\n  TableDropdownComponent,\n  UserDropdownComponent,\n  OutlineOnlytextSelectComponent,\n  FooterComponent,\n  FooterAdminComponent,\n  FooterSmallComponent,\n  HiddenAsteriskInputComponent,\n  OutlineAddressFormComponent,\n  OutlinePhoneFormComponent,\n  OutlineVerificationcodeFormComponent,\n  SsnFullFormComponent,\n  SsnLastfourFormComponent,\n  HiddenAsteriskInputComponent,\n  BaseModalRegularComponent,\n  BaseModalSmallComponent,\n  AdminNavbarComponent,\n  AuthNavbarComponent,\n  DashboardNavbarComponent,\n  IndexNavbarComponent,\n  OutlinePrevnextPaginationComponent,\n  FilledChecktextProgressbarComponent,\n  SidebarComponent,\n  FilledOnlytextTabsComponent,\n  OutlineTooltipComponent,\n  KbaquestionsFormComponent,\n  OutlineNamedobFormComponent,\n  SelectDobFormComponent,\n  OutlineNameFormComponent,\n  CreditcardCardComponent,\n  ViewdetailButtonComponent,\n  LoanCardComponent,\n]"
                },
                {
                    "name": "directives",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/shared-components.module.ts",
                    "type": "[]",
                    "defaultValue": "[HiddenAsteriskInputDirective, OutlineTooltipDirective]"
                },
                {
                    "name": "pipes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/shared-components.module.ts",
                    "type": "[]",
                    "defaultValue": "[\n  FilledOnlytextButtonPipe,\n  LinksOnlytextButtonPipe,\n  OutlineOnlytextButtonPipe,\n  OutlineInputPipe,\n  OutlineSelectInputPipe,\n  FilledClosingAlertPipe,\n  FilledOnlytextBadgePipe,\n  FilledChecktextProgressbarPipe,\n  AccountStatusPipe,\n]"
                }
            ],
            "src/app/layouts/authentication/authentication.module.ts": [
                {
                    "name": "components",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layouts/authentication/authentication.module.ts",
                    "type": "[]",
                    "defaultValue": "[AuthenticationComponent]"
                }
            ],
            "src/app/shared/components/modals/base-modal-regular/base-modal-regular.stories.ts": [
                {
                    "name": "directives",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/shared-components.module.ts",
                    "type": "[]",
                    "defaultValue": "[HiddenAsteriskInputDirective, OutlineTooltipDirective]"
                },
                {
                    "name": "pipes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/shared-components.module.ts",
                    "type": "[]",
                    "defaultValue": "[\r\n  FilledOnlytextButtonPipe,\r\n  LinksOnlytextButtonPipe,\r\n  OutlineOnlytextButtonPipe,\r\n  OutlineInputPipe,\r\n  OutlineSelectInputPipe,\r\n  FilledClosingAlertPipe,\r\n  FilledOnlytextBadgePipe,\r\n  FilledChecktextProgressbarPipe,\r\n  AccountStatusPipe,\r\n  SnapshotLabelPipe,\r\n  SnapshotStatusPipe,\r\n]"
                }
            ],
            "src/app/layouts/onboarding/onboarding.module.ts": [
                {
                    "name": "components",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layouts/onboarding/onboarding.module.ts",
                    "type": "[]",
                    "defaultValue": "[OnboardingComponent]"
                }
            ],
            "src/app/shared/components/modals/base-modal-small/base-modal-small.stories.ts": [
                {
                    "name": "config",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/modals/base-modal-small/base-modal-small.stories.ts",
                    "type": "IBaseModalSmallConfig",
                    "defaultValue": "{\r\n  openButtonText: 'Open',\r\n  title: 'Message Title',\r\n  body:\r\n    'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec ultrices est in dolor feugiat, et consequat urna imperdiet. Nam a purus elit. In eu dui fermentum, tincidunt nisi a, pulvinar nulla. Morbi justo lectus, pellentesque ut dignissim at, varius at erat. Nullam porta libero justo, non facilisis urna elementum quis. Sed cursus lacinia faucibus. Nulla at elit erat. Ut at pharetra est. In dictum fringilla odio sed fringilla.',\r\n  actionButtonOneText: 'Cancel',\r\n  actionButtonTwoText: 'Continue',\r\n}"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/modals/base-modal-small/base-modal-small.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/modals/base-modal-small/base-modal-small.stories.ts",
                    "type": "Story<BaseModalSmallComponent>",
                    "defaultValue": "(args: any) => ({\r\n  props: {\r\n    ...args,\r\n    config,\r\n  },\r\n  template: `<brave-base-modal-small [config]=\"config\"></brave-base-modal-small>`,\r\n})"
                }
            ],
            "src/app/shared/components/progressbars/filled-checktext-progressbar/filled-checktext-progressbar.stories.ts": [
                {
                    "name": "config",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/progressbars/filled-checktext-progressbar/filled-checktext-progressbar.stories.ts",
                    "type": "IFilledChecktextProgressbarConfig",
                    "defaultValue": "{\r\n  size: 'base',\r\n}"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/progressbars/filled-checktext-progressbar/filled-checktext-progressbar.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "stack",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/progressbars/filled-checktext-progressbar/filled-checktext-progressbar.stories.ts",
                    "type": "IProgressStep[]",
                    "defaultValue": "[\r\n  { id: 0, active: true, complete: true, name: 'step 1' },\r\n  { id: 1, active: true, complete: true, name: 'step 2' },\r\n  { id: 2, active: true, complete: false, name: 'step 3' },\r\n]"
                },
                {
                    "name": "steps",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/progressbars/filled-checktext-progressbar/filled-checktext-progressbar.stories.ts",
                    "type": "IProgressStep[]",
                    "defaultValue": "[\r\n  { id: 0, active: true, complete: true, name: 'step 1' },\r\n  { id: 1, active: true, complete: true, name: 'step 2' },\r\n  { id: 2, active: true, complete: false, name: 'step 3' },\r\n  { id: 3, active: false, complete: false, name: 'step 4' },\r\n  { id: 4, active: false, complete: false, name: 'step 5' },\r\n]"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/progressbars/filled-checktext-progressbar/filled-checktext-progressbar.stories.ts",
                    "type": "Story<FilledChecktextProgressbarComponent>",
                    "defaultValue": "(args: any) => ({\r\n  props: {\r\n    ...args,\r\n    stack,\r\n    config,\r\n  },\r\n  template: `<brave-filled-checktext-progressbar [config]=\"config\" [steps]=\"steps\"><brave-filled-checktext-progressbar>`,\r\n})"
                }
            ],
            "src/app/shared/components/modals/base-modal-regular/base-modal-regular.stories.ts": [
                {
                    "name": "config",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/modals/base-modal-regular/base-modal-regular.stories.ts",
                    "type": "IBaseModalRegularConfig",
                    "defaultValue": "{\r\n  openButtonText: 'Open',\r\n  title: 'Message Title',\r\n  body:\r\n    'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec ultrices est in dolor feugiat, et consequat urna imperdiet. Nam a purus elit. In eu dui fermentum, tincidunt nisi a, pulvinar nulla. Morbi justo lectus, pellentesque ut dignissim at, varius at erat. Nullam porta libero justo, non facilisis urna elementum quis. Sed cursus lacinia faucibus. Nulla at elit erat. Ut at pharetra est. In dictum fringilla odio sed fringilla.',\r\n  actionButtonOneText: 'Cancel',\r\n  actionButtonTwoText: 'Continue',\r\n}"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/modals/base-modal-regular/base-modal-regular.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/modals/base-modal-regular/base-modal-regular.stories.ts",
                    "type": "Story<BaseModalRegularComponent>",
                    "defaultValue": "(args: any) => ({\r\n  props: {\r\n    ...args,\r\n    config,\r\n  },\r\n  template: `<brave-base-modal-regular [config]=\"config\"></brave-base-modal-regular>`,\r\n})"
                }
            ],
            "src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "type": "literal type"
                }
            ],
            "src/app/views/dashboard-init/dashboard-init.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/dashboard-init/dashboard-init.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/dashboard-init/dashboard-init.stories.ts",
                    "type": "Story<DashboardInitComponent>",
                    "defaultValue": "(args: any) => ({\r\n  component: DashboardInitComponent,\r\n  props: {\r\n    ...args,\r\n  },\r\n})"
                }
            ],
            "src/app/views/signup-error/signup-error.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/signup-error/signup-error.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/signup-error/signup-error.stories.ts",
                    "type": "Story<SignupErrorComponent>",
                    "defaultValue": "(args: any) => ({\r\n  component: SignupErrorComponent,\r\n  props: {\r\n    ...args,\r\n  },\r\n})"
                }
            ],
            "src/app/views/signup-knowyou/signup-knowyou.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/signup-knowyou/signup-knowyou.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/signup-knowyou/signup-knowyou.stories.ts",
                    "type": "Story<SignupKnowyouComponent>",
                    "defaultValue": "(args: any) => ({\n  component: SignupKnowyouComponent,\n  props: {\n    ...args,\n  },\n})"
                }
            ],
            "src/app/views/signup-error-validation/signup-error-validation.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/signup-error-validation/signup-error-validation.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/signup-error-validation/signup-error-validation.stories.ts",
                    "type": "Story<SignupErrorValidationComponent>",
                    "defaultValue": "(args: any) => ({\n  component: SignupErrorValidationComponent,\n  props: {\n    ...args,\n  },\n})"
                }
            ],
            "src/app/views/signup-knowyou/signup-knowyou.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/signup-knowyou/signup-knowyou.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/signup-knowyou/signup-knowyou.stories.ts",
                    "type": "Story<SignupKnowyouComponent>",
                    "defaultValue": "(args: any) => ({\r\n  component: SignupKnowyouComponent,\r\n  props: {\r\n    ...args,\r\n  },\r\n})"
                }
            ],
            "src/app/shared/components/typography/typography-accent-bg-cooltext.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/typography/typography-accent-bg-cooltext.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/typography/typography-accent-bg-cooltext.stories.ts",
                    "type": "Story<any>",
                    "defaultValue": "(args: any) => ({\r\n  props: {\r\n    ...args,\r\n  },\r\n  template: `\r\n  <div class=\"bg-fuchsia-500 p-4\">\r\n    <h1 class='font-headings font-extrabold text-5xl text-lightBlue-100'>H1 Heading</h1>\r\n    <h2 class='font-headings font-extrabold text-4xl text-lightBlue-100'>H2 Heading</h2>\r\n    <h3 class='font-headings font-extrabold text-3xl text-lightBlue-100'>H3 Heading</h3>\r\n    <h4 class='font-headings font-extrabold text-2xl text-lightBlue-100'>H4 Heading</h4>\r\n    <h5 class='font-headings font-extrabold text-xl text-lightBlue-100'>H5 Heading</h5>\r\n    <h6 class='font-headings font-extrabold text-lg text-lightBlue-100'>H6 Heading</h6>\r\n    <div style=\"margin: 10px 0px\"></div>\r\n    <p class='font-sans text-base text-lightBlue-100'>Body 1</p>\r\n    <p class='font-sans font-semibold text-base text-lightBlue-100'>Body 1-semibold</p>\r\n    <p class='font-sans text-sm text-lightBlue-100'>Body 2</p>\r\n    <p class='font-sans font-semibold text-sm text-lightBlue-100'>Body 2-semibold</p>\r\n  </div>\r\n    `,\r\n})"
                }
            ],
            "src/app/shared/components/typography/typography-accent-bg.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/typography/typography-accent-bg.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/typography/typography-accent-bg.stories.ts",
                    "type": "Story<any>",
                    "defaultValue": "(args: any) => ({\r\n  props: {\r\n    ...args,\r\n  },\r\n  template: `\r\n  <div class=\"bg-fuchsia-500 p-4\">\r\n    <h1 class='font-headings font-extrabold text-5xl text-white'>H1 Heading</h1>\r\n    <h2 class='font-headings font-extrabold text-4xl text-white'>H2 Heading</h2>\r\n    <h3 class='font-headings font-extrabold text-3xl text-white'>H3 Heading</h3>\r\n    <h4 class='font-headings font-extrabold text-2xl text-white'>H4 Heading</h4>\r\n    <h5 class='font-headings font-extrabold text-xl text-white'>H5 Heading</h5>\r\n    <h6 class='font-headings font-extrabold text-lg text-white'>H6 Heading</h6>\r\n    <div style=\"margin: 10px 0px\"></div>\r\n    <p class='font-sans text-base text-white'>Body 1</p>\r\n    <p class='font-sans font-semibold text-base text-white'>Body 1-semibold</p>\r\n    <p class='font-sans text-sm text-white'>Body 2</p>\r\n    <p class='font-sans font-semibold text-sm text-white'>Body 2-semibold</p>\r\n  </div>\r\n    `,\r\n})"
                }
            ],
            "src/app/shared/components/typography/typography-primary-bg-cooltext.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/typography/typography-primary-bg-cooltext.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/typography/typography-primary-bg-cooltext.stories.ts",
                    "type": "Story<any>",
                    "defaultValue": "(args: any) => ({\r\n  props: {\r\n    ...args,\r\n  },\r\n  template: `\r\n  <div class=\"bg-indigo-800 p-4\">\r\n    <h1 class='font-headings font-extrabold text-5xl text-lightBlue-100'>H1 Heading</h1>\r\n    <h2 class='font-headings font-extrabold text-4xl text-lightBlue-100'>H2 Heading</h2>\r\n    <h3 class='font-headings font-extrabold text-3xl text-lightBlue-100'>H3 Heading</h3>\r\n    <h4 class='font-headings font-extrabold text-2xl text-lightBlue-100'>H4 Heading</h4>\r\n    <h5 class='font-headings font-extrabold text-xl text-lightBlue-100'>H5 Heading</h5>\r\n    <h6 class='font-headings font-extrabold text-lg text-lightBlue-100'>H6 Heading</h6>\r\n    <div style=\"margin: 10px 0px\"></div>\r\n    <p class='font-sans text-base text-lightBlue-100'>Body 1</p>\r\n    <p class='font-sans font-semibold text-base text-lightBlue-100'>Body 1-semibold</p>\r\n    <p class='font-sans text-sm text-lightBlue-100'>Body 2</p>\r\n    <p class='font-sans font-semibold text-sm text-lightBlue-100'>Body 2-semibold</p>\r\n  </div>\r\n    `,\r\n})"
                }
            ],
            "src/app/shared/components/typography/typography-primary-bg.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/typography/typography-primary-bg.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/typography/typography-primary-bg.stories.ts",
                    "type": "Story<any>",
                    "defaultValue": "(args: any) => ({\r\n  props: {\r\n    ...args,\r\n  },\r\n  template: `\r\n  <div class=\"bg-indigo-800 p-4\">\r\n    <h1 class='font-headings font-extrabold text-5xl text-white'>H1 Heading</h1>\r\n    <h2 class='font-headings font-extrabold text-4xl text-white'>H2 Heading</h2>\r\n    <h3 class='font-headings font-extrabold text-3xl text-white'>H3 Heading</h3>\r\n    <h4 class='font-headings font-extrabold text-2xl text-white'>H4 Heading</h4>\r\n    <h5 class='font-headings font-extrabold text-xl text-white'>H5 Heading</h5>\r\n    <h6 class='font-headings font-extrabold text-lg text-white'>H6 Heading</h6>\r\n    <div style=\"margin: 10px 0px\"></div>\r\n    <p class='font-sans text-base text-white'>Body 1</p>\r\n    <p class='font-sans font-semibold text-base text-white'>Body 1-semibold</p>\r\n    <p class='font-sans text-sm text-white'>Body 2</p>\r\n    <p class='font-sans font-semibold text-sm text-white'>Body 2-semibold</p>\r\n  </div>\r\n    `,\r\n})"
                }
            ],
            "src/app/shared/components/typography/typography-transparent-bg.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/typography/typography-transparent-bg.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/typography/typography-transparent-bg.stories.ts",
                    "type": "Story<any>",
                    "defaultValue": "(args: any) => ({\r\n  props: {\r\n    ...args,\r\n  },\r\n  template: `\r\n    <h1 class='font-headings font-extrabold text-5xl text-coolGray-900'>H1 Heading</h1>\r\n    <h2 class='font-headings font-extrabold text-4xl text-coolGray-900'>H2 Heading</h2>\r\n    <h3 class='font-headings font-extrabold text-3xl text-coolGray-900'>H3 Heading</h3>\r\n    <h4 class='font-headings font-extrabold text-2xl text-coolGray-900'>H4 Heading</h4>\r\n    <h5 class='font-headings font-extrabold text-xl text-coolGray-900'>H5 Heading</h5>\r\n    <h6 class='font-headings font-extrabold text-lg text-coolGray-900'>H6 Heading</h6>\r\n    <div style=\"margin: 10px 0px\"></div>\r\n    <p class='font-sans text-base text-coolGray-700'>Body 1</p>\r\n    <p class='font-sans font-semibold text-base text-coolGray-700'>Body 1-semibold</p>\r\n    <p class='font-sans text-sm text-coolGray-700'>Body 2</p>\r\n    <p class='font-sans font-semibold text-sm text-coolGray-700'>Body 2-semibold</p>\r\n    `,\r\n})"
                }
            ],
            "src/app/views/kyc-address/kyc-address-pure/kyc-address-pure.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/kyc-address/kyc-address-pure/kyc-address-pure.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/kyc-address/kyc-address-pure/kyc-address-pure.stories.ts",
                    "type": "Story<KycAddressPureComponent>",
                    "defaultValue": "(args: any) => ({\r\n  component: KycAddressPureComponent,\r\n  props: {\r\n    ...args,\r\n  },\r\n})"
                }
            ],
            "src/app/views/kyc-idverification/kyc-idverification-pure/kyc-idverification-pure.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/kyc-idverification/kyc-idverification-pure/kyc-idverification-pure.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/kyc-idverification/kyc-idverification-pure/kyc-idverification-pure.stories.ts",
                    "type": "Story<KycIdverificationPureComponent>",
                    "defaultValue": "(args: any) => ({\r\n  component: KycIdverificationPureComponent,\r\n  props: {\r\n    ...args,\r\n  },\r\n})"
                }
            ],
            "src/app/views/kyc-congratulations/kyc-congratulations-pure/kyc-congratulations-pure.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/kyc-congratulations/kyc-congratulations-pure/kyc-congratulations-pure.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/kyc-congratulations/kyc-congratulations-pure/kyc-congratulations-pure.stories.ts",
                    "type": "Story<KycCongratulationsPureComponent>",
                    "defaultValue": "(args: any) => ({\r\n  component: KycCongratulationsPureComponent,\r\n  props: {\r\n    ...args,\r\n  },\r\n})"
                }
            ],
            "src/app/views/kyc-kbaquestions/kyc-kbaquestions-pure/kyc-kbaquestions-pure.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/kyc-kbaquestions/kyc-kbaquestions-pure/kyc-kbaquestions-pure.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/kyc-kbaquestions/kyc-kbaquestions-pure/kyc-kbaquestions-pure.stories.ts",
                    "type": "Story<KycKbaquestionsPureComponent>",
                    "defaultValue": "(args: any) => ({\r\n  component: KycKbaquestionsPureComponent,\r\n  props: {\r\n    ...args,\r\n  },\r\n})"
                }
            ],
            "src/app/views/kyc-phonenumber/kyc-phonenumber-pure/kyc-phonenumber-pure.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/kyc-phonenumber/kyc-phonenumber-pure/kyc-phonenumber-pure.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/kyc-phonenumber/kyc-phonenumber-pure/kyc-phonenumber-pure.stories.ts",
                    "type": "Story<KycPhonenumberPureComponent>",
                    "defaultValue": "(args: any) => ({\n  component: KycPhonenumberPureComponent,\n  props: {\n    ...args,\n  },\n})"
                }
            ],
            "src/app/views/kyc-kbaquestions/kyc-kbaquestions-pure/kyc-kbaquestions-pure.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/kyc-kbaquestions/kyc-kbaquestions-pure/kyc-kbaquestions-pure.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "kbas",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/kyc-kbaquestions/kyc-kbaquestions-pure/kyc-kbaquestions-pure.stories.ts",
                    "type": "ITransunionKBAQuestion[]",
                    "defaultValue": "[\n  {\n    QuestionType: {\n      _text: 'IDMA',\n    },\n    SequenceNumber: {\n      _text: '1',\n    },\n    LastChanceQuestion: {\n      _text: 'false',\n    },\n    FakeQuestion: {\n      _text: 'false',\n    },\n    FullQuestionText: {\n      _text: 'What was the original amount of your most recent mortgage?',\n    },\n    KeyQuestionText: {\n      PromptDate: {\n        _text: '2021-06-06T20:07:05-07:00',\n      },\n    },\n    AnswerChoice: [\n      {\n        SequenceNumber: {\n          _text: '1',\n        },\n        IsCorrectAnswer: {\n          _text: 'false',\n        },\n        AnswerChoiceText: {\n          _text: '$ 1 - $ 50000',\n        },\n        Key: {\n          _text: '$ 1 - $ 50000',\n        },\n        AnswerChoiceId: {\n          _text: '3076837406',\n        },\n      },\n      {\n        SequenceNumber: {\n          _text: '2',\n        },\n        IsCorrectAnswer: {\n          _text: 'false',\n        },\n        AnswerChoiceText: {\n          _text: '$ 150001 - $ 200000',\n        },\n        Key: {\n          _text: '$ 150001 - $ 200000',\n        },\n        AnswerChoiceId: {\n          _text: '3076837408',\n        },\n      },\n      {\n        SequenceNumber: {\n          _text: '3',\n        },\n        IsCorrectAnswer: {\n          _text: 'false',\n        },\n        AnswerChoiceText: {\n          _text: '$ 200001 - $ 250000',\n        },\n        Key: {\n          _text: '$ 200001 - $ 250000',\n        },\n        AnswerChoiceId: {\n          _text: '3076837410',\n        },\n      },\n      {\n        SequenceNumber: {\n          _text: '4',\n        },\n        IsCorrectAnswer: {\n          _text: 'false',\n        },\n        AnswerChoiceText: {\n          _text: '$ 50001 - $ 100000',\n        },\n        Key: {\n          _text: '$ 50001 - $ 100000',\n        },\n        AnswerChoiceId: {\n          _text: '3076837412',\n        },\n      },\n      {\n        SequenceNumber: {\n          _text: '5',\n        },\n        IsCorrectAnswer: {\n          _text: 'false',\n        },\n        AnswerChoiceText: {\n          _text: 'None of the Above',\n        },\n        Key: {\n          _text:\n            '!($ 1 - $ 50000^$ 150001 - $ 200000^$ 200001 - $ 250000^$ 50001 - $ 100000)',\n        },\n        AnswerChoiceId: {\n          _text: '3076837414',\n        },\n      },\n    ],\n    Key: {\n      _text: 'MTG_ORIG_AMT',\n    },\n    QuestionId: {\n      _text: '48442696',\n    },\n  },\n  {\n    QuestionType: {\n      _text: 'IDMA',\n    },\n    SequenceNumber: {\n      _text: '2',\n    },\n    LastChanceQuestion: {\n      _text: 'false',\n    },\n    FakeQuestion: {\n      _text: 'false',\n    },\n    FullQuestionText: {\n      _text: 'Which of the following is a current or previous employer?',\n    },\n    KeyQuestionText: {\n      PromptDate: {\n        _text: '2021-06-06T20:07:05-07:00',\n      },\n    },\n    AnswerChoice: [\n      {\n        SequenceNumber: {\n          _text: '1',\n        },\n        IsCorrectAnswer: {\n          _text: 'false',\n        },\n        AnswerChoiceText: {\n          _text: 'American Express',\n        },\n        Key: {\n          _text: 'American Express',\n        },\n        AnswerChoiceId: {\n          _text: '3076837416',\n        },\n      },\n      {\n        SequenceNumber: {\n          _text: '2',\n        },\n        IsCorrectAnswer: {\n          _text: 'false',\n        },\n        AnswerChoiceText: {\n          _text: 'Astrazeneca',\n        },\n        Key: {\n          _text: 'Astrazeneca',\n        },\n        AnswerChoiceId: {\n          _text: '3076837418',\n        },\n      },\n      {\n        SequenceNumber: {\n          _text: '3',\n        },\n        IsCorrectAnswer: {\n          _text: 'false',\n        },\n        AnswerChoiceText: {\n          _text: 'Iec',\n        },\n        Key: {\n          _text: 'Iec',\n        },\n        AnswerChoiceId: {\n          _text: '3076837420',\n        },\n      },\n      {\n        SequenceNumber: {\n          _text: '4',\n        },\n        IsCorrectAnswer: {\n          _text: 'false',\n        },\n        AnswerChoiceText: {\n          _text: 'Milliken',\n        },\n        Key: {\n          _text: 'Milliken',\n        },\n        AnswerChoiceId: {\n          _text: '3076837422',\n        },\n      },\n      {\n        SequenceNumber: {\n          _text: '5',\n        },\n        IsCorrectAnswer: {\n          _text: 'false',\n        },\n        AnswerChoiceText: {\n          _text: 'None of the Above',\n        },\n        Key: {\n          _text: '!(American Express^Astrazeneca^Iec^Milliken)',\n        },\n        AnswerChoiceId: {\n          _text: '3076837424',\n        },\n      },\n    ],\n    Key: {\n      _text: 'EMPLOYER',\n    },\n    QuestionId: {\n      _text: '48442698',\n    },\n  },\n  {\n    QuestionType: {\n      _text: 'IDMA',\n    },\n    SequenceNumber: {\n      _text: '3',\n    },\n    LastChanceQuestion: {\n      _text: 'false',\n    },\n    FakeQuestion: {\n      _text: 'false',\n    },\n    FullQuestionText: {\n      _text: 'What year was your most recent auto loan or lease established?',\n    },\n    KeyQuestionText: {\n      PromptDate: {\n        _text: '2021-06-06T20:07:05-07:00',\n      },\n    },\n    AnswerChoice: [\n      {\n        SequenceNumber: {\n          _text: '1',\n        },\n        IsCorrectAnswer: {\n          _text: 'false',\n        },\n        AnswerChoiceText: {\n          _text: '1998',\n        },\n        Key: {\n          _text: '1998',\n        },\n        AnswerChoiceId: {\n          _text: '3076837426',\n        },\n      },\n      {\n        SequenceNumber: {\n          _text: '2',\n        },\n        IsCorrectAnswer: {\n          _text: 'false',\n        },\n        AnswerChoiceText: {\n          _text: '1999',\n        },\n        Key: {\n          _text: '1999',\n        },\n        AnswerChoiceId: {\n          _text: '3076837428',\n        },\n      },\n      {\n        SequenceNumber: {\n          _text: '3',\n        },\n        IsCorrectAnswer: {\n          _text: 'false',\n        },\n        AnswerChoiceText: {\n          _text: '2001',\n        },\n        Key: {\n          _text: '2001',\n        },\n        AnswerChoiceId: {\n          _text: '3076837430',\n        },\n      },\n      {\n        SequenceNumber: {\n          _text: '4',\n        },\n        IsCorrectAnswer: {\n          _text: 'false',\n        },\n        AnswerChoiceText: {\n          _text: '2002',\n        },\n        Key: {\n          _text: '2002',\n        },\n        AnswerChoiceId: {\n          _text: '3076837432',\n        },\n      },\n      {\n        SequenceNumber: {\n          _text: '5',\n        },\n        IsCorrectAnswer: {\n          _text: 'false',\n        },\n        AnswerChoiceText: {\n          _text: 'None of the Above',\n        },\n        Key: {\n          _text: '!(1998^1999^2001^2002)',\n        },\n        AnswerChoiceId: {\n          _text: '3076837434',\n        },\n      },\n    ],\n    Key: {\n      _text: 'AUTO_YR',\n    },\n    QuestionId: {\n      _text: '48442700',\n    },\n  },\n  {\n    QuestionType: {\n      _text: 'IDMA',\n    },\n    SequenceNumber: {\n      _text: '4',\n    },\n    LastChanceQuestion: {\n      _text: 'false',\n    },\n    FakeQuestion: {\n      _text: 'false',\n    },\n    FullQuestionText: {\n      _text:\n        'What state was your social security number issued (this could be the state in which you were born or had your first job)?',\n    },\n    KeyQuestionText: {\n      PromptDate: {\n        _text: '2021-06-06T20:07:05-07:00',\n      },\n    },\n    AnswerChoice: [\n      {\n        SequenceNumber: {\n          _text: '1',\n        },\n        IsCorrectAnswer: {\n          _text: 'false',\n        },\n        AnswerChoiceText: {\n          _text: 'Arizona',\n        },\n        Key: {\n          _text: 'Arizona',\n        },\n        AnswerChoiceId: {\n          _text: '3076837436',\n        },\n      },\n      {\n        SequenceNumber: {\n          _text: '2',\n        },\n        IsCorrectAnswer: {\n          _text: 'false',\n        },\n        AnswerChoiceText: {\n          _text: 'Florida',\n        },\n        Key: {\n          _text: 'Florida',\n        },\n        AnswerChoiceId: {\n          _text: '3076837438',\n        },\n      },\n      {\n        SequenceNumber: {\n          _text: '3',\n        },\n        IsCorrectAnswer: {\n          _text: 'false',\n        },\n        AnswerChoiceText: {\n          _text: 'Kansas',\n        },\n        Key: {\n          _text: 'Kansas',\n        },\n        AnswerChoiceId: {\n          _text: '3076837440',\n        },\n      },\n      {\n        SequenceNumber: {\n          _text: '4',\n        },\n        IsCorrectAnswer: {\n          _text: 'false',\n        },\n        AnswerChoiceText: {\n          _text: 'New Hampshire',\n        },\n        Key: {\n          _text: 'New Hampshire',\n        },\n        AnswerChoiceId: {\n          _text: '3076837442',\n        },\n      },\n      {\n        SequenceNumber: {\n          _text: '5',\n        },\n        IsCorrectAnswer: {\n          _text: 'false',\n        },\n        AnswerChoiceText: {\n          _text: 'None of the Above',\n        },\n        Key: {\n          _text: '!(Arizona^Florida^Kansas^New Hampshire)',\n        },\n        AnswerChoiceId: {\n          _text: '3076837444',\n        },\n      },\n    ],\n    Key: {\n      _text: 'SSN_ISSUED',\n    },\n    QuestionId: {\n      _text: '48442702',\n    },\n  },\n]"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/kyc-kbaquestions/kyc-kbaquestions-pure/kyc-kbaquestions-pure.stories.ts",
                    "type": "Story<KycKbaquestionsPureComponent>",
                    "defaultValue": "(args: any) => ({\n  component: KycKbaquestionsPureComponent,\n  props: {\n    ...args,\n    kbas,\n  },\n})"
                }
            ],
            "src/app/views/kyc-welcome/kyc-welcome-pure/kyc-welcome-pure.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/kyc-welcome/kyc-welcome-pure/kyc-welcome-pure.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/kyc-welcome/kyc-welcome-pure/kyc-welcome-pure.stories.ts",
                    "type": "Story<KycWelcomePureComponent>",
                    "defaultValue": "(args: any) => ({\r\n  props: {\r\n    ...args,\r\n  },\r\n})"
                }
            ],
            "src/app/views/kyc-welcomeback/kyc-welcomeback-pure/kyc-welcomeback-pure.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/kyc-welcomeback/kyc-welcomeback-pure/kyc-welcomeback-pure.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/kyc-welcomeback/kyc-welcomeback-pure/kyc-welcomeback-pure.stories.ts",
                    "type": "Story<KycWelcomebackPureComponent>",
                    "defaultValue": "(args: any) => ({\r\n  component: KycWelcomebackPureComponent,\r\n  props: {\r\n    ...args,\r\n  },\r\n})"
                }
            ],
            "src/app/views/signup/signup-pure/signup-pure.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/signup/signup-pure/signup-pure.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/signup/signup-pure/signup-pure.stories.ts",
                    "type": "Story<SignupPureComponent>",
                    "defaultValue": "(args: any) => ({\n  component: SignupPureComponent,\n  props: {\n    ...args,\n  },\n})"
                }
            ],
            "src/app/views/kyc-welcome/kyc-welcome-pure/kyc-welcome-pure.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/kyc-welcome/kyc-welcome-pure/kyc-welcome-pure.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/kyc-welcome/kyc-welcome-pure/kyc-welcome-pure.stories.ts",
                    "type": "Story<KycWelcomePureComponent>",
                    "defaultValue": "(args: any) => ({\n  props: {\n    ...args,\n  },\n})"
                }
            ],
            "src/app/views/kyc-ssn/kyc-ssn-pure/kyc-ssn-pure.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/kyc-ssn/kyc-ssn-pure/kyc-ssn-pure.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/kyc-ssn/kyc-ssn-pure/kyc-ssn-pure.stories.ts",
                    "type": "Story<KycSsnPureComponent>",
                    "defaultValue": "(args: any) => ({\n  component: KycSsnPureComponent,\n  props: {\n    ...args,\n  },\n})"
                }
            ],
            "src/app/shared/components/cards/creditcard-card/creditcard-card.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/cards/creditcard-card/creditcard-card.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "largeConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/buttons/outline-onlytext-button/outline-onlytext-button.stories.ts",
                    "type": "IOutlineOnlyTextButtonConfig",
                    "defaultValue": "{\r\n  buttonSize: 'lg',\r\n  borderColor: 'border-indigo-800',\r\n  activeColor: 'bg-indigo-900',\r\n  hoverColor: 'bg-indigo-800',\r\n  color: 'text-indigo-800',\r\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/buttons/outline-onlytext-button/outline-onlytext-button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "primaryConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/buttons/outline-onlytext-button/outline-onlytext-button.stories.ts",
                    "type": "IOutlineOnlyTextButtonConfig",
                    "defaultValue": "{\r\n  buttonSize: 'base',\r\n  borderColor: 'border-indigo-800',\r\n  activeColor: 'bg-indigo-900',\r\n  hoverColor: 'bg-indigo-800',\r\n  color: 'text-indigo-800',\r\n}"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/buttons/outline-onlytext-button/outline-onlytext-button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "smallConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/buttons/outline-onlytext-button/outline-onlytext-button.stories.ts",
                    "type": "IOutlineOnlyTextButtonConfig",
                    "defaultValue": "{\r\n  buttonSize: 'sm',\r\n  borderColor: 'border-indigo-800',\r\n  activeColor: 'bg-indigo-900',\r\n  hoverColor: 'bg-indigo-800',\r\n  color: 'text-indigo-800',\r\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/buttons/outline-onlytext-button/outline-onlytext-button.stories.ts",
                    "type": "Story<OutlineOnlytextButtonComponent>",
                    "defaultValue": "(args: any) => ({\r\n  props: {\r\n    ...args,\r\n  },\r\n  template: `<brave-outline-onlytext-button>Default</brave-outline-onlytext-button>`,\r\n})"
                }
            ],
            "src/app/shared/components/buttons/viewdetail-button/viewdetail-button.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/buttons/viewdetail-button/viewdetail-button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/buttons/viewdetail-button/viewdetail-button.stories.ts",
                    "type": "Story<ViewdetailButtonComponent>",
                    "defaultValue": "(args: any) => ({\r\n  props: {\r\n    ...args,\r\n  },\r\n  template: `\r\n  <span style=\"p-6 width: 120px\">\r\n    <brave-viewdetail-button>View Details</brave-viewdetail-button>\r\n  </span>\r\n  `,\r\n})"
                }
            ],
            "src/app/shared/components/cards/credit-builder-card/credit-builder-card.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/cards/credit-builder-card/credit-builder-card.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/cards/credit-builder-card/credit-builder-card.stories.ts",
                    "type": "Story<CreditBuilderCardComponent>",
                    "defaultValue": "(args: any) => ({\r\n  component: CreditBuilderCardComponent,\r\n  props: {\r\n    ...args\r\n  },\r\n})"
                }
            ],
            "src/app/shared/components/cards/creditcard-card/creditcard-card.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/cards/creditcard-card/creditcard-card.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/cards/creditcard-card/creditcard-card.stories.ts",
                    "type": "Story<CreditcardCardComponent>",
                    "defaultValue": "(args: any) => ({\r\n  component: CreditcardCardComponent,\r\n  props: {\r\n    ...args,\r\n    status: 'excellent',\r\n  },\r\n})"
                }
            ],
            "src/app/shared/components/cards/loan-card/loan-card.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/cards/loan-card/loan-card.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/cards/loan-card/loan-card.stories.ts",
                    "type": "Story<LoanCardComponent>",
                    "defaultValue": "(args: any) => ({\r\n  component: LoanCardComponent,\r\n  props: {\r\n    ...args,\r\n    status: 'good',\r\n  },\r\n})"
                }
            ],
            "src/app/shared/components/buttons/viewdetail-button/viewdetail-button.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/buttons/viewdetail-button/viewdetail-button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Digit",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/cards/snapshot-display-card/snapshot-display-card.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Percentage",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/cards/snapshot-display-card/snapshot-display-card.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Tag",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/cards/snapshot-display-card/snapshot-display-card.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/cards/snapshot-display-card/snapshot-display-card.stories.ts",
                    "type": "Story<SnapshotDisplayCardComponent>",
                    "defaultValue": "(args: any) => ({\r\n  component: SnapshotDisplayCardComponent,\r\n  props: {\r\n    ...args\r\n  },\r\n})"
                },
                {
                    "name": "Time",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/buttons/viewdetail-button/viewdetail-button.stories.ts",
                    "type": "Story<ViewdetailButtonComponent>",
                    "defaultValue": "(args: any) => ({\n  props: {\n    ...args,\n  },\n  template: `\n  <span style=\"p-6 width: 120px\">\n    <brave-viewdetail-button>View Details</brave-viewdetail-button>\n  </span>\n  `,\n})"
                }
            ],
            "src/app/shared/components/inputs/kba-multiplechoice-input/kba-multiplechoice-input.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/inputs/kba-multiplechoice-input/kba-multiplechoice-input.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "question",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/inputs/kba-multiplechoice-input/kba-multiplechoice-input.stories.ts",
                    "type": "ITransunionKBAQuestion",
                    "defaultValue": "{\n  QuestionType: {\n    _text: 'IDMA',\n  },\n  SequenceNumber: {\n    _text: '1',\n  },\n  LastChanceQuestion: {\n    _text: 'false',\n  },\n  FakeQuestion: {\n    _text: 'false',\n  },\n  FullQuestionText: {\n    _text: 'What was the original amount of your most recent mortgage?',\n  },\n  KeyQuestionText: {\n    PromptDate: {\n      _text: '2021-06-06T20:07:05-07:00',\n    },\n  },\n  AnswerChoice: [\n    {\n      SequenceNumber: {\n        _text: '1',\n      },\n      IsCorrectAnswer: {\n        _text: 'false',\n      },\n      AnswerChoiceText: {\n        _text: '$ 1 - $ 50000',\n      },\n      Key: {\n        _text: '$ 1 - $ 50000',\n      },\n      AnswerChoiceId: {\n        _text: '3076837406',\n      },\n    },\n    {\n      SequenceNumber: {\n        _text: '2',\n      },\n      IsCorrectAnswer: {\n        _text: 'false',\n      },\n      AnswerChoiceText: {\n        _text: '$ 150001 - $ 200000',\n      },\n      Key: {\n        _text: '$ 150001 - $ 200000',\n      },\n      AnswerChoiceId: {\n        _text: '3076837408',\n      },\n    },\n    {\n      SequenceNumber: {\n        _text: '3',\n      },\n      IsCorrectAnswer: {\n        _text: 'false',\n      },\n      AnswerChoiceText: {\n        _text: '$ 200001 - $ 250000',\n      },\n      Key: {\n        _text: '$ 200001 - $ 250000',\n      },\n      AnswerChoiceId: {\n        _text: '3076837410',\n      },\n    },\n    {\n      SequenceNumber: {\n        _text: '4',\n      },\n      IsCorrectAnswer: {\n        _text: 'false',\n      },\n      AnswerChoiceText: {\n        _text: '$ 50001 - $ 100000',\n      },\n      Key: {\n        _text: '$ 50001 - $ 100000',\n      },\n      AnswerChoiceId: {\n        _text: '3076837412',\n      },\n    },\n    {\n      SequenceNumber: {\n        _text: '5',\n      },\n      IsCorrectAnswer: {\n        _text: 'false',\n      },\n      AnswerChoiceText: {\n        _text: 'None of the Above',\n      },\n      Key: {\n        _text:\n          '!($ 1 - $ 50000^$ 150001 - $ 200000^$ 200001 - $ 250000^$ 50001 - $ 100000)',\n      },\n      AnswerChoiceId: {\n        _text: '3076837414',\n      },\n    },\n  ],\n  Key: {\n    _text: 'MTG_ORIG_AMT',\n  },\n  QuestionId: {\n    _text: '48442696',\n  },\n} as ITransunionKBAQuestion"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/inputs/kba-multiplechoice-input/kba-multiplechoice-input.stories.ts",
                    "type": "Story<KbaMultiplechoiceInputComponent>",
                    "defaultValue": "(args: any) => ({\n  props: {\n    ...args,\n    question,\n  },\n  template: `<brave-kba-multiplechoice-input [question]=\"question\"></brave-kba-multiplechoice-input>`,\n})"
                }
            ],
            "src/app/shared/components/inputs/hidden-asterisk-input/hidden-asterisk-input.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/inputs/hidden-asterisk-input/hidden-asterisk-input.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/inputs/hidden-asterisk-input/hidden-asterisk-input.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/inputs/hidden-asterisk-input/hidden-asterisk-input.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/inputs/hidden-asterisk-input/hidden-asterisk-input.stories.ts",
                    "type": "Story<HiddenAsteriskInputComponent>",
                    "defaultValue": "(args: any) => ({\n  component: HiddenAsteriskInputComponent,\n  props: {\n    ...args,\n  },\n})"
                }
            ],
            "src/app/shared/components/inputs/outline-input/outline-input.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/inputs/outline-input/outline-input.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/inputs/outline-input/outline-input.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "largeConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/inputs/outline-input/outline-input.stories.ts",
                    "type": "IOutlineInputeConfig",
                    "defaultValue": "{\n  size: 'lg',\n  type: 'text',\n  label: 'Input label',\n  placeholder: 'Input text',\n  autocomplete: 'off',\n  value: '',\n}"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/inputs/outline-input/outline-input.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "smallConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/inputs/outline-input/outline-input.stories.ts",
                    "type": "IOutlineInputeConfig",
                    "defaultValue": "{\n  size: 'sm',\n  type: 'text',\n  label: 'Input label',\n  placeholder: 'Input text',\n  autocomplete: 'off',\n  value: '',\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/inputs/outline-input/outline-input.stories.ts",
                    "type": "Story<OutlineInputComponent>",
                    "defaultValue": "(args: any) => ({\n  component: OutlineInputComponent,\n  props: {\n    ...args,\n  },\n})"
                }
            ],
            "src/app/shared/components/cards/creditcard-card/creditcard-card.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/cards/creditcard-card/creditcard-card.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/cards/creditcard-card/creditcard-card.stories.ts",
                    "type": "Story<CreditcardCardComponent>",
                    "defaultValue": "(args: any) => ({\n  component: CreditcardCardComponent,\n  props: {\n    ...args,\n    status: 'excellent',\n  },\n})"
                }
            ],
            "src/app/shared/components/cards/loan-card/loan-card.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/cards/loan-card/loan-card.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/cards/loan-card/loan-card.stories.ts",
                    "type": "Story<LoanCardComponent>",
                    "defaultValue": "(args: any) => ({\n  component: LoanCardComponent,\n  props: {\n    ...args,\n    status: 'good',\n  },\n})"
                }
            ],
            "src/app/shared/components/navbars/dashboard-navbar/dashboard-navbar.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/navbars/dashboard-navbar/dashboard-navbar.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/navbars/dashboard-navbar/dashboard-navbar.stories.ts",
                    "type": "Story<DashboardNavbarComponent>",
                    "defaultValue": "(args: any) => ({\n  props: {\n    ...args,\n  },\n  template: `<brave-dashboard-navbar><brave-dashboard-navbar>`,\n})"
                }
            ],
            "src/app/shared/components/paginations/outline-prevnext-pagination/outline-prevnext-pagination.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/paginations/outline-prevnext-pagination/outline-prevnext-pagination.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/paginations/outline-prevnext-pagination/outline-prevnext-pagination.stories.ts",
                    "type": "Story<any>",
                    "defaultValue": "(args: any) => ({\n  component: OutlinePrevnextPaginationComponent,\n  props: {\n    ...args,\n  },\n})"
                }
            ],
            "src/app/shared/components/tabs/filled-onlytext-tabs/filled-onlytext-tabs.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/tabs/filled-onlytext-tabs/filled-onlytext-tabs.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/tabs/filled-onlytext-tabs/filled-onlytext-tabs.stories.ts",
                    "type": "Story<any>",
                    "defaultValue": "(args: any) => ({\n  component: FilledOnlytextTabsComponent,\n  props: {\n    ...args,\n  },\n})"
                }
            ],
            "src/app/shared/components/forms/kbaquestions-form/kbaquestions-form.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/forms/kbaquestions-form/kbaquestions-form.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "kbas",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/forms/kbaquestions-form/kbaquestions-form.stories.ts",
                    "type": "ITransunionKBAQuestion[]",
                    "defaultValue": "[\n  {\n    QuestionType: {\n      _text: 'IDMA',\n    },\n    SequenceNumber: {\n      _text: '1',\n    },\n    LastChanceQuestion: {\n      _text: 'false',\n    },\n    FakeQuestion: {\n      _text: 'false',\n    },\n    FullQuestionText: {\n      _text: 'What was the original amount of your most recent mortgage?',\n    },\n    KeyQuestionText: {\n      PromptDate: {\n        _text: '2021-06-06T20:07:05-07:00',\n      },\n    },\n    AnswerChoice: [\n      {\n        SequenceNumber: {\n          _text: '1',\n        },\n        IsCorrectAnswer: {\n          _text: 'false',\n        },\n        AnswerChoiceText: {\n          _text: '$ 1 - $ 50000',\n        },\n        Key: {\n          _text: '$ 1 - $ 50000',\n        },\n        AnswerChoiceId: {\n          _text: '3076837406',\n        },\n      },\n      {\n        SequenceNumber: {\n          _text: '2',\n        },\n        IsCorrectAnswer: {\n          _text: 'false',\n        },\n        AnswerChoiceText: {\n          _text: '$ 150001 - $ 200000',\n        },\n        Key: {\n          _text: '$ 150001 - $ 200000',\n        },\n        AnswerChoiceId: {\n          _text: '3076837408',\n        },\n      },\n      {\n        SequenceNumber: {\n          _text: '3',\n        },\n        IsCorrectAnswer: {\n          _text: 'false',\n        },\n        AnswerChoiceText: {\n          _text: '$ 200001 - $ 250000',\n        },\n        Key: {\n          _text: '$ 200001 - $ 250000',\n        },\n        AnswerChoiceId: {\n          _text: '3076837410',\n        },\n      },\n      {\n        SequenceNumber: {\n          _text: '4',\n        },\n        IsCorrectAnswer: {\n          _text: 'false',\n        },\n        AnswerChoiceText: {\n          _text: '$ 50001 - $ 100000',\n        },\n        Key: {\n          _text: '$ 50001 - $ 100000',\n        },\n        AnswerChoiceId: {\n          _text: '3076837412',\n        },\n      },\n      {\n        SequenceNumber: {\n          _text: '5',\n        },\n        IsCorrectAnswer: {\n          _text: 'false',\n        },\n        AnswerChoiceText: {\n          _text: 'None of the Above',\n        },\n        Key: {\n          _text:\n            '!($ 1 - $ 50000^$ 150001 - $ 200000^$ 200001 - $ 250000^$ 50001 - $ 100000)',\n        },\n        AnswerChoiceId: {\n          _text: '3076837414',\n        },\n      },\n    ],\n    Key: {\n      _text: 'MTG_ORIG_AMT',\n    },\n    QuestionId: {\n      _text: '48442696',\n    },\n  },\n  {\n    QuestionType: {\n      _text: 'IDMA',\n    },\n    SequenceNumber: {\n      _text: '2',\n    },\n    LastChanceQuestion: {\n      _text: 'false',\n    },\n    FakeQuestion: {\n      _text: 'false',\n    },\n    FullQuestionText: {\n      _text: 'Which of the following is a current or previous employer?',\n    },\n    KeyQuestionText: {\n      PromptDate: {\n        _text: '2021-06-06T20:07:05-07:00',\n      },\n    },\n    AnswerChoice: [\n      {\n        SequenceNumber: {\n          _text: '1',\n        },\n        IsCorrectAnswer: {\n          _text: 'false',\n        },\n        AnswerChoiceText: {\n          _text: 'American Express',\n        },\n        Key: {\n          _text: 'American Express',\n        },\n        AnswerChoiceId: {\n          _text: '3076837416',\n        },\n      },\n      {\n        SequenceNumber: {\n          _text: '2',\n        },\n        IsCorrectAnswer: {\n          _text: 'false',\n        },\n        AnswerChoiceText: {\n          _text: 'Astrazeneca',\n        },\n        Key: {\n          _text: 'Astrazeneca',\n        },\n        AnswerChoiceId: {\n          _text: '3076837418',\n        },\n      },\n      {\n        SequenceNumber: {\n          _text: '3',\n        },\n        IsCorrectAnswer: {\n          _text: 'false',\n        },\n        AnswerChoiceText: {\n          _text: 'Iec',\n        },\n        Key: {\n          _text: 'Iec',\n        },\n        AnswerChoiceId: {\n          _text: '3076837420',\n        },\n      },\n      {\n        SequenceNumber: {\n          _text: '4',\n        },\n        IsCorrectAnswer: {\n          _text: 'false',\n        },\n        AnswerChoiceText: {\n          _text: 'Milliken',\n        },\n        Key: {\n          _text: 'Milliken',\n        },\n        AnswerChoiceId: {\n          _text: '3076837422',\n        },\n      },\n      {\n        SequenceNumber: {\n          _text: '5',\n        },\n        IsCorrectAnswer: {\n          _text: 'false',\n        },\n        AnswerChoiceText: {\n          _text: 'None of the Above',\n        },\n        Key: {\n          _text: '!(American Express^Astrazeneca^Iec^Milliken)',\n        },\n        AnswerChoiceId: {\n          _text: '3076837424',\n        },\n      },\n    ],\n    Key: {\n      _text: 'EMPLOYER',\n    },\n    QuestionId: {\n      _text: '48442698',\n    },\n  },\n  {\n    QuestionType: {\n      _text: 'IDMA',\n    },\n    SequenceNumber: {\n      _text: '3',\n    },\n    LastChanceQuestion: {\n      _text: 'false',\n    },\n    FakeQuestion: {\n      _text: 'false',\n    },\n    FullQuestionText: {\n      _text: 'What year was your most recent auto loan or lease established?',\n    },\n    KeyQuestionText: {\n      PromptDate: {\n        _text: '2021-06-06T20:07:05-07:00',\n      },\n    },\n    AnswerChoice: [\n      {\n        SequenceNumber: {\n          _text: '1',\n        },\n        IsCorrectAnswer: {\n          _text: 'false',\n        },\n        AnswerChoiceText: {\n          _text: '1998',\n        },\n        Key: {\n          _text: '1998',\n        },\n        AnswerChoiceId: {\n          _text: '3076837426',\n        },\n      },\n      {\n        SequenceNumber: {\n          _text: '2',\n        },\n        IsCorrectAnswer: {\n          _text: 'false',\n        },\n        AnswerChoiceText: {\n          _text: '1999',\n        },\n        Key: {\n          _text: '1999',\n        },\n        AnswerChoiceId: {\n          _text: '3076837428',\n        },\n      },\n      {\n        SequenceNumber: {\n          _text: '3',\n        },\n        IsCorrectAnswer: {\n          _text: 'false',\n        },\n        AnswerChoiceText: {\n          _text: '2001',\n        },\n        Key: {\n          _text: '2001',\n        },\n        AnswerChoiceId: {\n          _text: '3076837430',\n        },\n      },\n      {\n        SequenceNumber: {\n          _text: '4',\n        },\n        IsCorrectAnswer: {\n          _text: 'false',\n        },\n        AnswerChoiceText: {\n          _text: '2002',\n        },\n        Key: {\n          _text: '2002',\n        },\n        AnswerChoiceId: {\n          _text: '3076837432',\n        },\n      },\n      {\n        SequenceNumber: {\n          _text: '5',\n        },\n        IsCorrectAnswer: {\n          _text: 'false',\n        },\n        AnswerChoiceText: {\n          _text: 'None of the Above',\n        },\n        Key: {\n          _text: '!(1998^1999^2001^2002)',\n        },\n        AnswerChoiceId: {\n          _text: '3076837434',\n        },\n      },\n    ],\n    Key: {\n      _text: 'AUTO_YR',\n    },\n    QuestionId: {\n      _text: '48442700',\n    },\n  },\n  {\n    QuestionType: {\n      _text: 'IDMA',\n    },\n    SequenceNumber: {\n      _text: '4',\n    },\n    LastChanceQuestion: {\n      _text: 'false',\n    },\n    FakeQuestion: {\n      _text: 'false',\n    },\n    FullQuestionText: {\n      _text:\n        'What state was your social security number issued (this could be the state in which you were born or had your first job)?',\n    },\n    KeyQuestionText: {\n      PromptDate: {\n        _text: '2021-06-06T20:07:05-07:00',\n      },\n    },\n    AnswerChoice: [\n      {\n        SequenceNumber: {\n          _text: '1',\n        },\n        IsCorrectAnswer: {\n          _text: 'false',\n        },\n        AnswerChoiceText: {\n          _text: 'Arizona',\n        },\n        Key: {\n          _text: 'Arizona',\n        },\n        AnswerChoiceId: {\n          _text: '3076837436',\n        },\n      },\n      {\n        SequenceNumber: {\n          _text: '2',\n        },\n        IsCorrectAnswer: {\n          _text: 'false',\n        },\n        AnswerChoiceText: {\n          _text: 'Florida',\n        },\n        Key: {\n          _text: 'Florida',\n        },\n        AnswerChoiceId: {\n          _text: '3076837438',\n        },\n      },\n      {\n        SequenceNumber: {\n          _text: '3',\n        },\n        IsCorrectAnswer: {\n          _text: 'false',\n        },\n        AnswerChoiceText: {\n          _text: 'Kansas',\n        },\n        Key: {\n          _text: 'Kansas',\n        },\n        AnswerChoiceId: {\n          _text: '3076837440',\n        },\n      },\n      {\n        SequenceNumber: {\n          _text: '4',\n        },\n        IsCorrectAnswer: {\n          _text: 'false',\n        },\n        AnswerChoiceText: {\n          _text: 'New Hampshire',\n        },\n        Key: {\n          _text: 'New Hampshire',\n        },\n        AnswerChoiceId: {\n          _text: '3076837442',\n        },\n      },\n      {\n        SequenceNumber: {\n          _text: '5',\n        },\n        IsCorrectAnswer: {\n          _text: 'false',\n        },\n        AnswerChoiceText: {\n          _text: 'None of the Above',\n        },\n        Key: {\n          _text: '!(Arizona^Florida^Kansas^New Hampshire)',\n        },\n        AnswerChoiceId: {\n          _text: '3076837444',\n        },\n      },\n    ],\n    Key: {\n      _text: 'SSN_ISSUED',\n    },\n    QuestionId: {\n      _text: '48442702',\n    },\n  },\n]"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/forms/kbaquestions-form/kbaquestions-form.stories.ts",
                    "type": "Story<KbaquestionsFormComponent>",
                    "defaultValue": "(args: any) => ({\n  props: {\n    ...args,\n    kbas,\n    required: true,\n  },\n  template: `<brave-kbaquestions-form [kbas]=\"kbas\"></brave-kbaquestions-form>`,\n})"
                }
            ],
            "src/app/shared/components/forms/outline-address-form/outline-address-form.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/forms/outline-address-form/outline-address-form.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/forms/outline-address-form/outline-address-form.stories.ts",
                    "type": "Story<OutlineAddressFormComponent>",
                    "defaultValue": "(args: any) => ({\n  component: OutlineAddressFormComponent,\n  props: {\n    ...args,\n  },\n})"
                }
            ],
            "src/app/shared/components/forms/outline-name-form/outline-name-form.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/forms/outline-name-form/outline-name-form.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/forms/outline-name-form/outline-name-form.stories.ts",
                    "type": "Story<OutlineNameFormComponent>",
                    "defaultValue": "(args: any) => ({\n  component: OutlineNameFormComponent,\n  props: {\n    ...args,\n  },\n})"
                }
            ],
            "src/app/shared/components/forms/outline-onecolumn-form/outline-onecolumn-form.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/forms/outline-onecolumn-form/outline-onecolumn-form.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/forms/outline-onecolumn-form/outline-onecolumn-form.stories.ts",
                    "type": "Story<OutlineOnecolumnFormComponent>",
                    "defaultValue": "(args: any) => ({\n  component: OutlineOnecolumnFormComponent,\n  props: {\n    ...args,\n  },\n})"
                }
            ],
            "src/app/shared/components/forms/outline-phone-form/outline-phone-form.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/forms/outline-phone-form/outline-phone-form.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/forms/outline-phone-form/outline-phone-form.stories.ts",
                    "type": "Story<OutlinePhoneFormComponent>",
                    "defaultValue": "(args: any) => ({\n  component: OutlinePhoneFormComponent,\n  props: {\n    ...args,\n  },\n})"
                }
            ],
            "src/app/shared/components/forms/select-dob-form/select-dob-form.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/forms/select-dob-form/select-dob-form.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/forms/select-dob-form/select-dob-form.stories.ts",
                    "type": "Story<SelectDobFormComponent>",
                    "defaultValue": "(args: any) => ({\n  component: SelectDobFormComponent,\n  props: {\n    ...args,\n  },\n})"
                }
            ],
            "src/app/shared/components/forms/outline-verificationcode-form/outline-verificationcode-form.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/forms/outline-verificationcode-form/outline-verificationcode-form.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/forms/outline-verificationcode-form/outline-verificationcode-form.stories.ts",
                    "type": "Story<OutlineVerificationcodeFormComponent>",
                    "defaultValue": "(args: any) => ({\n  component: OutlineVerificationcodeFormComponent,\n  props: {\n    ...args,\n  },\n})"
                }
            ],
            "src/app/shared/components/forms/ssn-full-form/ssn-full-form.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/forms/ssn-full-form/ssn-full-form.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/inputs/outline-select-input/outline-select-input.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "largeConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/inputs/outline-select-input/outline-select-input.stories.ts",
                    "type": "IOutlineSelectInputConfig",
                    "defaultValue": "{\r\n  size: 'lg',\r\n  label: 'Input label',\r\n  autocomplete: 'off',\r\n  options: ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l'],\r\n}"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/inputs/outline-select-input/outline-select-input.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "smallConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/inputs/outline-select-input/outline-select-input.stories.ts",
                    "type": "IOutlineSelectInputConfig",
                    "defaultValue": "{\r\n  size: 'sm',\r\n  label: 'Input label',\r\n  autocomplete: 'off',\r\n  options: ['one', 'two', 'three'],\r\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/forms/ssn-full-form/ssn-full-form.stories.ts",
                    "type": "Story<SsnFullFormComponent>",
                    "defaultValue": "(args: any) => ({\n  component: SsnFullFormComponent,\n  props: {\n    ...args,\n  },\n})"
                }
            ],
            "src/app/shared/components/forms/simple-signup-form/simple-signup-form.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/forms/simple-signup-form/simple-signup-form.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/forms/simple-signup-form/simple-signup-form.stories.ts",
                    "type": "Story<SimpleSignupFormComponent>",
                    "defaultValue": "(args: any) => ({\n  component: SimpleSignupFormComponent,\n  props: {\n    ...args,\n  },\n})"
                }
            ],
            "src/app/shared/components/forms/ssn-lastfour-form/ssn-lastfour-form.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/forms/ssn-lastfour-form/ssn-lastfour-form.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/forms/ssn-lastfour-form/ssn-lastfour-form.stories.ts",
                    "type": "Story<SsnLastfourFormComponent>",
                    "defaultValue": "(args: any) => ({\n  props: {\n    ...args,\n  },\n  template: `<brave-ssn-lastfour-form></brave-ssn-lastfour-form>`,\n})"
                }
            ],
            "src/app/shared/components/inputs/outline-select-input/outline-select-input.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/inputs/outline-select-input/outline-select-input.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/inputs/outline-select-input/outline-select-input.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "largeConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/inputs/outline-select-input/outline-select-input.stories.ts",
                    "type": "IOutlineSelectInputConfig",
                    "defaultValue": "{\n  size: 'lg',\n  label: 'Input label',\n  autocomplete: 'off',\n  options: ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l'],\n}"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/inputs/outline-select-input/outline-select-input.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "smallConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/inputs/outline-select-input/outline-select-input.stories.ts",
                    "type": "IOutlineSelectInputConfig",
                    "defaultValue": "{\n  size: 'sm',\n  label: 'Input label',\n  autocomplete: 'off',\n  options: ['one', 'two', 'three'],\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/inputs/outline-select-input/outline-select-input.stories.ts",
                    "type": "Story<OutlineSelectInputComponent>",
                    "defaultValue": "(args: any) => ({\n  component: OutlineSelectInputComponent,\n  props: {\n    ...args,\n  },\n})"
                }
            ],
            "src/app/shared/components/tabs/navigation-tabs/navigation-tabs.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/tabs/navigation-tabs/navigation-tabs.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/tabs/navigation-tabs/navigation-tabs.stories.ts",
                    "type": "Story<any>",
                    "defaultValue": "(args: any) => ({\r\n  component: NavigationTabsComponent,\r\n  props: {\r\n    ...args,\r\n  },\r\n})"
                }
            ],
            "src/app/shared/components/dropdowns/popdowns/notification-dropdown/notification-dropdown.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/dropdowns/popdowns/notification-dropdown/notification-dropdown.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/dropdowns/popdowns/notification-dropdown/notification-dropdown.stories.ts",
                    "type": "Story<NotificationDropdownComponent>",
                    "defaultValue": "(args: any) => ({\r\n  component: NotificationDropdownComponent,\r\n  props: {\r\n    ...args,\r\n  },\r\n})"
                }
            ],
            "src/app/shared/components/dropdowns/popdowns/table-dropdown/table-dropdown.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/dropdowns/popdowns/table-dropdown/table-dropdown.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/dropdowns/popdowns/table-dropdown/table-dropdown.stories.ts",
                    "type": "Story<TableDropdownComponent>",
                    "defaultValue": "(args: any) => ({\r\n  component: TableDropdownComponent,\r\n  props: {\r\n    ...args,\r\n  },\r\n})"
                }
            ],
            "src/app/shared/components/dropdowns/popdowns/user-dropdown/user-dropdown.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/dropdowns/popdowns/user-dropdown/user-dropdown.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/dropdowns/popdowns/user-dropdown/user-dropdown.stories.ts",
                    "type": "Story<UserDropdownComponent>",
                    "defaultValue": "(args: any) => ({\r\n  component: UserDropdownComponent,\r\n  props: {\r\n    ...args,\r\n  },\r\n})"
                }
            ],
            "src/app/shared/components/dropdowns/selects/outline-onlytext-select/outline-onlytext-select.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/dropdowns/selects/outline-onlytext-select/outline-onlytext-select.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "items",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/dropdowns/selects/outline-onlytext-select/outline-onlytext-select.stories.ts",
                    "type": "IOutlineOnlyTextItem[]",
                    "defaultValue": "[\r\n  { value: 'Item 1' },\r\n  { value: 'Item 2' },\r\n  { value: 'Item 3' },\r\n  { value: 'Item 4' },\r\n  { value: 'Item 5' },\r\n]"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/dropdowns/selects/outline-onlytext-select/outline-onlytext-select.stories.ts",
                    "type": "Story<OutlineOnlytextSelectComponent>",
                    "defaultValue": "(args: any) => ({\r\n  props: {\r\n    ...args,\r\n    items,\r\n  },\r\n  template: `\r\n  <brave-outline-onlytext-select [items]=\"items\"></brave-outline-onlytext-select>\r\n  `,\r\n})"
                }
            ],
            "src/app/views/kyc-welcome/kyc-welcome/kyc-welcome.component.ts": [
                {
                    "name": "dob",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/kyc-welcome/kyc-welcome/kyc-welcome.component.ts",
                    "type": "Record<string, any>",
                    "defaultValue": "{\r\n  year: true,\r\n  month: true,\r\n  day: true,\r\n}"
                },
                {
                    "name": "name",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/kyc-welcome/kyc-welcome/kyc-welcome.component.ts",
                    "type": "Record<string, any>",
                    "defaultValue": "{\r\n  first: true,\r\n  middle: true,\r\n  last: true,\r\n}"
                }
            ],
            "src/app/shared/components/cards/snapshot-display-card/snapshot-status.pipe.ts": [
                {
                    "name": "enumStrColorCLassIndicator",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/cards/snapshot-display-card/snapshot-status.pipe.ts",
                    "type": "object",
                    "defaultValue": "{\n  [SnapshotStatus.Danger]: 'brave-danger',\n  [SnapshotStatus.Safe]: 'brave-safe',\n  [SnapshotStatus.Critical]: 'brave-critical',\n  [SnapshotStatus.Default]: 'lt-gray'\n}"
                }
            ],
            "src/app/shared/components/cards/snapshot-display-card/snapshot-label.pipe.ts": [
                {
                    "name": "enumStrNameOfLabel",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/cards/snapshot-display-card/snapshot-label.pipe.ts",
                    "type": "object",
                    "defaultValue": "{\n  [LabelOfSnapshot.Update]: { text: 'Update', colorClass: 'text-brave-magenta' },\n  [LabelOfSnapshot.Hidden]: { text: 'Hidden', colorClass: 'text-lt-gray' },\n  [LabelOfSnapshot.New]: { text: 'New', colorClass: 'text-brave-blurple' },\n  [LabelOfSnapshot.NoLabel]: { text: '', colorClass: '' }\n}"
                }
            ],
            "src/environments/environment.dev.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.dev.ts",
                    "type": "object",
                    "defaultValue": "{\r\n  production: false,\r\n  API: 'https://jokbs4tpn3.execute-api.us-east-2.amazonaws.com/dev',\r\n}"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "type": "object",
                    "defaultValue": "{\r\n  production: true\r\n}"
                }
            ],
            "src/environments/environment.qa.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.qa.ts",
                    "type": "object",
                    "defaultValue": "{\r\n  production: false,\r\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "type": "object",
                    "defaultValue": "{\r\n  production: false\r\n}"
                }
            ],
            "src/app/views/kyc-kbaquestions/example-questions.ts": [
                {
                    "name": "formattedQuestions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/kyc-kbaquestions/example-questions.ts",
                    "type": "[]",
                    "defaultValue": "[\n  {\n      \"QuestionType\": {\n          \"_text\": \"IDMA\"\n      },\n      \"SequenceNumber\": {\n          \"_text\": \"1\"\n      },\n      \"LastChanceQuestion\": {\n          \"_text\": \"false\"\n      },\n      \"FakeQuestion\": {\n          \"_text\": \"false\"\n      },\n      \"FullQuestionText\": {\n          \"_text\": \"What was the original amount of your most recent mortgage?\"\n      },\n      \"KeyQuestionText\": {\n          \"PromptDate\": {\n              \"_text\": \"2021-06-06T20:07:05-07:00\"\n          }\n      },\n      \"AnswerChoice\": [\n          {\n              \"SequenceNumber\": {\n                  \"_text\": \"1\"\n              },\n              \"IsCorrectAnswer\": {\n                  \"_text\": \"false\"\n              },\n              \"AnswerChoiceText\": {\n                  \"_text\": \"$ 1 - $ 50000\"\n              },\n              \"Key\": {\n                  \"_text\": \"$ 1 - $ 50000\"\n              },\n              \"AnswerChoiceId\": {\n                  \"_text\": \"3076837406\"\n              }\n          },\n          {\n              \"SequenceNumber\": {\n                  \"_text\": \"2\"\n              },\n              \"IsCorrectAnswer\": {\n                  \"_text\": \"false\"\n              },\n              \"AnswerChoiceText\": {\n                  \"_text\": \"$ 150001 - $ 200000\"\n              },\n              \"Key\": {\n                  \"_text\": \"$ 150001 - $ 200000\"\n              },\n              \"AnswerChoiceId\": {\n                  \"_text\": \"3076837408\"\n              }\n          },\n          {\n              \"SequenceNumber\": {\n                  \"_text\": \"3\"\n              },\n              \"IsCorrectAnswer\": {\n                  \"_text\": \"false\"\n              },\n              \"AnswerChoiceText\": {\n                  \"_text\": \"$ 200001 - $ 250000\"\n              },\n              \"Key\": {\n                  \"_text\": \"$ 200001 - $ 250000\"\n              },\n              \"AnswerChoiceId\": {\n                  \"_text\": \"3076837410\"\n              }\n          },\n          {\n              \"SequenceNumber\": {\n                  \"_text\": \"4\"\n              },\n              \"IsCorrectAnswer\": {\n                  \"_text\": \"false\"\n              },\n              \"AnswerChoiceText\": {\n                  \"_text\": \"$ 50001 - $ 100000\"\n              },\n              \"Key\": {\n                  \"_text\": \"$ 50001 - $ 100000\"\n              },\n              \"AnswerChoiceId\": {\n                  \"_text\": \"3076837412\"\n              }\n          },\n          {\n              \"SequenceNumber\": {\n                  \"_text\": \"5\"\n              },\n              \"IsCorrectAnswer\": {\n                  \"_text\": \"false\"\n              },\n              \"AnswerChoiceText\": {\n                  \"_text\": \"None of the Above\"\n              },\n              \"Key\": {\n                  \"_text\": \"!($ 1 - $ 50000^$ 150001 - $ 200000^$ 200001 - $ 250000^$ 50001 - $ 100000)\"\n              },\n              \"AnswerChoiceId\": {\n                  \"_text\": \"3076837414\"\n              }\n          }\n      ],\n      \"Key\": {\n          \"_text\": \"MTG_ORIG_AMT\"\n      },\n      \"QuestionId\": {\n          \"_text\": \"48442696\"\n      }\n  },\n  {\n      \"QuestionType\": {\n          \"_text\": \"IDMA\"\n      },\n      \"SequenceNumber\": {\n          \"_text\": \"2\"\n      },\n      \"LastChanceQuestion\": {\n          \"_text\": \"false\"\n      },\n      \"FakeQuestion\": {\n          \"_text\": \"false\"\n      },\n      \"FullQuestionText\": {\n          \"_text\": \"Which of the following is a current or previous employer?\"\n      },\n      \"KeyQuestionText\": {\n          \"PromptDate\": {\n              \"_text\": \"2021-06-06T20:07:05-07:00\"\n          }\n      },\n      \"AnswerChoice\": [\n          {\n              \"SequenceNumber\": {\n                  \"_text\": \"1\"\n              },\n              \"IsCorrectAnswer\": {\n                  \"_text\": \"false\"\n              },\n              \"AnswerChoiceText\": {\n                  \"_text\": \"American Express\"\n              },\n              \"Key\": {\n                  \"_text\": \"American Express\"\n              },\n              \"AnswerChoiceId\": {\n                  \"_text\": \"3076837416\"\n              }\n          },\n          {\n              \"SequenceNumber\": {\n                  \"_text\": \"2\"\n              },\n              \"IsCorrectAnswer\": {\n                  \"_text\": \"false\"\n              },\n              \"AnswerChoiceText\": {\n                  \"_text\": \"Astrazeneca\"\n              },\n              \"Key\": {\n                  \"_text\": \"Astrazeneca\"\n              },\n              \"AnswerChoiceId\": {\n                  \"_text\": \"3076837418\"\n              }\n          },\n          {\n              \"SequenceNumber\": {\n                  \"_text\": \"3\"\n              },\n              \"IsCorrectAnswer\": {\n                  \"_text\": \"false\"\n              },\n              \"AnswerChoiceText\": {\n                  \"_text\": \"Iec\"\n              },\n              \"Key\": {\n                  \"_text\": \"Iec\"\n              },\n              \"AnswerChoiceId\": {\n                  \"_text\": \"3076837420\"\n              }\n          },\n          {\n              \"SequenceNumber\": {\n                  \"_text\": \"4\"\n              },\n              \"IsCorrectAnswer\": {\n                  \"_text\": \"false\"\n              },\n              \"AnswerChoiceText\": {\n                  \"_text\": \"Milliken\"\n              },\n              \"Key\": {\n                  \"_text\": \"Milliken\"\n              },\n              \"AnswerChoiceId\": {\n                  \"_text\": \"3076837422\"\n              }\n          },\n          {\n              \"SequenceNumber\": {\n                  \"_text\": \"5\"\n              },\n              \"IsCorrectAnswer\": {\n                  \"_text\": \"false\"\n              },\n              \"AnswerChoiceText\": {\n                  \"_text\": \"None of the Above\"\n              },\n              \"Key\": {\n                  \"_text\": \"!(American Express^Astrazeneca^Iec^Milliken)\"\n              },\n              \"AnswerChoiceId\": {\n                  \"_text\": \"3076837424\"\n              }\n          }\n      ],\n      \"Key\": {\n          \"_text\": \"EMPLOYER\"\n      },\n      \"QuestionId\": {\n          \"_text\": \"48442698\"\n      }\n  },\n  {\n      \"QuestionType\": {\n          \"_text\": \"IDMA\"\n      },\n      \"SequenceNumber\": {\n          \"_text\": \"3\"\n      },\n      \"LastChanceQuestion\": {\n          \"_text\": \"false\"\n      },\n      \"FakeQuestion\": {\n          \"_text\": \"false\"\n      },\n      \"FullQuestionText\": {\n          \"_text\": \"What year was your most recent auto loan or lease established?\"\n      },\n      \"KeyQuestionText\": {\n          \"PromptDate\": {\n              \"_text\": \"2021-06-06T20:07:05-07:00\"\n          }\n      },\n      \"AnswerChoice\": [\n          {\n              \"SequenceNumber\": {\n                  \"_text\": \"1\"\n              },\n              \"IsCorrectAnswer\": {\n                  \"_text\": \"false\"\n              },\n              \"AnswerChoiceText\": {\n                  \"_text\": \"1998\"\n              },\n              \"Key\": {\n                  \"_text\": \"1998\"\n              },\n              \"AnswerChoiceId\": {\n                  \"_text\": \"3076837426\"\n              }\n          },\n          {\n              \"SequenceNumber\": {\n                  \"_text\": \"2\"\n              },\n              \"IsCorrectAnswer\": {\n                  \"_text\": \"false\"\n              },\n              \"AnswerChoiceText\": {\n                  \"_text\": \"1999\"\n              },\n              \"Key\": {\n                  \"_text\": \"1999\"\n              },\n              \"AnswerChoiceId\": {\n                  \"_text\": \"3076837428\"\n              }\n          },\n          {\n              \"SequenceNumber\": {\n                  \"_text\": \"3\"\n              },\n              \"IsCorrectAnswer\": {\n                  \"_text\": \"false\"\n              },\n              \"AnswerChoiceText\": {\n                  \"_text\": \"2001\"\n              },\n              \"Key\": {\n                  \"_text\": \"2001\"\n              },\n              \"AnswerChoiceId\": {\n                  \"_text\": \"3076837430\"\n              }\n          },\n          {\n              \"SequenceNumber\": {\n                  \"_text\": \"4\"\n              },\n              \"IsCorrectAnswer\": {\n                  \"_text\": \"false\"\n              },\n              \"AnswerChoiceText\": {\n                  \"_text\": \"2002\"\n              },\n              \"Key\": {\n                  \"_text\": \"2002\"\n              },\n              \"AnswerChoiceId\": {\n                  \"_text\": \"3076837432\"\n              }\n          },\n          {\n              \"SequenceNumber\": {\n                  \"_text\": \"5\"\n              },\n              \"IsCorrectAnswer\": {\n                  \"_text\": \"false\"\n              },\n              \"AnswerChoiceText\": {\n                  \"_text\": \"None of the Above\"\n              },\n              \"Key\": {\n                  \"_text\": \"!(1998^1999^2001^2002)\"\n              },\n              \"AnswerChoiceId\": {\n                  \"_text\": \"3076837434\"\n              }\n          }\n      ],\n      \"Key\": {\n          \"_text\": \"AUTO_YR\"\n      },\n      \"QuestionId\": {\n          \"_text\": \"48442700\"\n      }\n  },\n  {\n      \"QuestionType\": {\n          \"_text\": \"IDMA\"\n      },\n      \"SequenceNumber\": {\n          \"_text\": \"4\"\n      },\n      \"LastChanceQuestion\": {\n          \"_text\": \"false\"\n      },\n      \"FakeQuestion\": {\n          \"_text\": \"false\"\n      },\n      \"FullQuestionText\": {\n          \"_text\": \"What state was your social security number issued (this could be the state in which you were born or had your first job)?\"\n      },\n      \"KeyQuestionText\": {\n          \"PromptDate\": {\n              \"_text\": \"2021-06-06T20:07:05-07:00\"\n          }\n      },\n      \"AnswerChoice\": [\n          {\n              \"SequenceNumber\": {\n                  \"_text\": \"1\"\n              },\n              \"IsCorrectAnswer\": {\n                  \"_text\": \"false\"\n              },\n              \"AnswerChoiceText\": {\n                  \"_text\": \"Arizona\"\n              },\n              \"Key\": {\n                  \"_text\": \"Arizona\"\n              },\n              \"AnswerChoiceId\": {\n                  \"_text\": \"3076837436\"\n              }\n          },\n          {\n              \"SequenceNumber\": {\n                  \"_text\": \"2\"\n              },\n              \"IsCorrectAnswer\": {\n                  \"_text\": \"false\"\n              },\n              \"AnswerChoiceText\": {\n                  \"_text\": \"Florida\"\n              },\n              \"Key\": {\n                  \"_text\": \"Florida\"\n              },\n              \"AnswerChoiceId\": {\n                  \"_text\": \"3076837438\"\n              }\n          },\n          {\n              \"SequenceNumber\": {\n                  \"_text\": \"3\"\n              },\n              \"IsCorrectAnswer\": {\n                  \"_text\": \"false\"\n              },\n              \"AnswerChoiceText\": {\n                  \"_text\": \"Kansas\"\n              },\n              \"Key\": {\n                  \"_text\": \"Kansas\"\n              },\n              \"AnswerChoiceId\": {\n                  \"_text\": \"3076837440\"\n              }\n          },\n          {\n              \"SequenceNumber\": {\n                  \"_text\": \"4\"\n              },\n              \"IsCorrectAnswer\": {\n                  \"_text\": \"false\"\n              },\n              \"AnswerChoiceText\": {\n                  \"_text\": \"New Hampshire\"\n              },\n              \"Key\": {\n                  \"_text\": \"New Hampshire\"\n              },\n              \"AnswerChoiceId\": {\n                  \"_text\": \"3076837442\"\n              }\n          },\n          {\n              \"SequenceNumber\": {\n                  \"_text\": \"5\"\n              },\n              \"IsCorrectAnswer\": {\n                  \"_text\": \"false\"\n              },\n              \"AnswerChoiceText\": {\n                  \"_text\": \"None of the Above\"\n              },\n              \"Key\": {\n                  \"_text\": \"!(Arizona^Florida^Kansas^New Hampshire)\"\n              },\n              \"AnswerChoiceId\": {\n                  \"_text\": \"3076837444\"\n              }\n          }\n      ],\n      \"Key\": {\n          \"_text\": \"SSN_ISSUED\"\n      },\n      \"QuestionId\": {\n          \"_text\": \"48442702\"\n      }\n  }\n]"
                }
            ],
            "src/app/app.module.ts": [
                {
                    "name": "isLocalhost",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.module.ts",
                    "type": "",
                    "defaultValue": "Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    window.location.hostname === '[::1]' ||\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)"
                },
                {
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.module.ts",
                    "type": "",
                    "defaultValue": "awsconfig.oauth.redirectSignIn.split(',')"
                },
                {
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.module.ts",
                    "type": "",
                    "defaultValue": "awsconfig.oauth.redirectSignOut.split(',')"
                },
                {
                    "name": "updatedAwsConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.module.ts",
                    "type": "object",
                    "defaultValue": "{\r\n  ...awsconfig,\r\n  oauth: {\r\n    ...awsconfig.oauth,\r\n    redirectSignIn: isLocalhost\r\n      ? localRedirectSignIn\r\n      : productionRedirectSignIn,\r\n    redirectSignOut: isLocalhost\r\n      ? localRedirectSignOut\r\n      : productionRedirectSignOut,\r\n  },\r\n}"
                }
            ],
            "src/app/shared/services/transunion/transunion.service.ts": [
                {
                    "name": "monthMap",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/services/transunion/transunion.service.ts",
                    "type": "Record<string, any>",
                    "defaultValue": "{\n  jan: '01',\n  feb: '02',\n  mar: '03',\n  apr: '04',\n  may: '05',\n  jun: '06',\n  jul: '07',\n  aug: '08',\n  sep: '09',\n  oct: '10',\n  nov: '11',\n  dec: '12',\n}"
                }
            ],
            "src/app/shared/components/forms/outline-namedob-form/outline-namedob-form.component.ts": [
                {
                    "name": "months",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/forms/outline-namedob-form/outline-namedob-form.component.ts",
                    "type": "string[]",
                    "defaultValue": "[\r\n  'Jan',\r\n  'Feb',\r\n  'Mar',\r\n  'Apr',\r\n  'May',\r\n  'Jun',\r\n  'Jul',\r\n  'Aug',\r\n  'Sep',\r\n  'Oct',\r\n  'Nov',\r\n  'Dec',\r\n]"
                }
            ],
            "src/app/shared/components/forms/select-dob-form/select-dob-form.component.ts": [
                {
                    "name": "months",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/forms/select-dob-form/select-dob-form.component.ts",
                    "type": "string[]",
                    "defaultValue": "[\r\n  'Jan',\r\n  'Feb',\r\n  'Mar',\r\n  'Apr',\r\n  'May',\r\n  'Jun',\r\n  'Jul',\r\n  'Aug',\r\n  'Sep',\r\n  'Oct',\r\n  'Nov',\r\n  'Dec',\r\n]"
                }
            ],
            "src/app/views/signin-redirect/signin-redirect.component.ts": [
                {
                    "name": "navs",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/signin-redirect/signin-redirect.component.ts",
                    "type": "Record<string, any>",
                    "defaultValue": "{}"
                }
            ],
            "src/app/views/kyc-phonenumber/kyc-phonenumber/kyc-phonenumber.component.ts": [
                {
                    "name": "phoneMap",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/kyc-phonenumber/kyc-phonenumber/kyc-phonenumber.component.ts",
                    "type": "Record<string, any>",
                    "defaultValue": "{\r\n  phone: true,\r\n}"
                }
            ],
            "src/app/views/views.module.ts": [
                {
                    "name": "pipes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/views.module.ts",
                    "type": "[]",
                    "defaultValue": "[KycKbaquestionsPipe]"
                },
                {
                    "name": "views",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/views.module.ts",
                    "type": "[]",
                    "defaultValue": "[\n  SignupComponent,\n  SignupPureComponent,\n  SignupErrorComponent,\n  SignupErrorValidationComponent,\n  SignupKnowyouComponent,\n  SignupThankyouComponent,\n  SignupResendComponent,\n  SigninComponent,\n  SigninPureComponent,\n  SigninForgotComponent,\n  SigninRedirectComponent,\n  KycBaseComponent,\n  KycAddressComponent,\n  KycAddressPureComponent,\n  KycCongratulationsComponent,\n  KycCongratulationsPureComponent,\n  KycIdverificationComponent,\n  KycIdverificationPureComponent,\n  KycKbaquestionsComponent,\n  KycKbaquestionsPureComponent,\n  KycPhonenumberComponent,\n  KycPhonenumberPureComponent,\n  KycSsnComponent,\n  KycSsnPureComponent,\n  KycSsnFullComponent,\n  KycSsnFullPureComponent,\n  KycWelcomeComponent,\n  KycWelcomePureComponent,\n  KycWelcomebackComponent,\n  KycWelcomebackPureComponent,\n  CompliancePrivacyComponent,\n  ComplianceTosComponent,\n]"
                }
            ],
            "src/app/shared/services/shared-services.module.ts": [
                {
                    "name": "services",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/services/shared-services.module.ts",
                    "type": "[]",
                    "defaultValue": "[\n  AuthService,\n  APIService,\n  SyncService,\n  GuestService,\n  IamService,\n  KycService,\n  TransunionService,\n]"
                }
            ],
            "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.pipe.ts": [
                {
                    "name": "sizeSpecificClass",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.pipe.ts",
                    "type": "Record<string, any>",
                    "defaultValue": "{\r\n  xs: 'max-w-xs',\r\n  sm: 'max-w-sm',\r\n  base: 'max-w-md',\r\n  lg: 'max-w-lg',\r\n  xl: 'max-w-xl',\r\n}"
                }
            ],
            "src/app/shared/components/buttons/filled-onlytext-button/filled-onlytext-button.pipe.ts": [
                {
                    "name": "sizeSpecificClass",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/buttons/links-onlytext-button/links-onlytext-button.pipe.ts",
                    "type": "Record<string, any>",
                    "defaultValue": "{\r\n  sm: 'text-xs px-4 py-2 hover:shadow-md',\r\n  base: 'text-sm px-6 py-3 hover:shadow-lg',\r\n  lg: 'text-base px-8 py-3 hover:shadow-lg',\r\n}"
                }
            ],
            "src/app/shared/components/buttons/links-onlytext-button/links-onlytext-button.pipe.ts": [
                {
                    "name": "sizeSpecificClass",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/buttons/links-onlytext-button/links-onlytext-button.pipe.ts",
                    "type": "Record<string, any>",
                    "defaultValue": "{\r\n  sm: 'text-xs px-3 py-1',\r\n  base: 'text-sm px-6 py-2',\r\n  lg: 'text-base px-8 py-3',\r\n}"
                }
            ],
            "src/app/shared/components/buttons/outline-onlytext-button/outline-onlytext-button.pipe.ts": [
                {
                    "name": "sizeSpecificClass",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/buttons/outline-onlytext-button/outline-onlytext-button.pipe.ts",
                    "type": "Record<string, any>",
                    "defaultValue": "{\r\n  sm: 'text-xs px-4 py-2',\r\n  base: 'text-sm px-6 py-3',\r\n  lg: 'text-base px-8 py-3',\r\n}"
                }
            ],
            "src/app/shared/components/badges/filled-onlytext-badge/filled-onlytext-badge.pipe.ts": [
                {
                    "name": "sizeSpecificClass",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/badges/filled-onlytext-badge/filled-onlytext-badge.pipe.ts",
                    "type": "Record<string, any>",
                    "defaultValue": "{\n  sm: 'text-xs px-2 py-1',\n  base: 'text-xs px-2 py-1',\n  lg: 'text-xs px-2 py-1',\n}"
                }
            ],
            "src/app/shared/components/inputs/outline-input/outline-input.pipe.ts": [
                {
                    "name": "sizeSpecificClass",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/buttons/filled-onlytext-button/filled-onlytext-button.pipe.ts",
                    "type": "Record<string, any>",
                    "defaultValue": "{\r\n  sm: 'text-sm px-3 py-1',\r\n  base: 'text-sm px-3 py-3',\r\n  lg: 'text-base px-3 py-4',\r\n}"
                }
            ],
            "src/app/shared/components/inputs/outline-select-input/outline-select-input.pipe.ts": [
                {
                    "name": "sizeSpecificClass",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/inputs/outline-select-input/outline-select-input.pipe.ts",
                    "type": "Record<string, any>",
                    "defaultValue": "{\r\n  sm: 'text-sm px-1 py-1',\r\n  base: 'text-sm px-1 py-3',\r\n  lg: 'text-base px-1 py-4',\r\n}"
                }
            ],
            "src/app/views/kyc-ssn-full/kyc-ssn-full/kyc-ssn-full.component.ts": [
                {
                    "name": "ssn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/kyc-ssn-full/kyc-ssn-full/kyc-ssn-full.component.ts",
                    "type": "Record<string, any>",
                    "defaultValue": "{\n  'input-0': true,\n  'input-1': true,\n  'input-2': true,\n  'input-3': true,\n  'input-4': true,\n  'input-5': true,\n  'input-6': true,\n  'input-7': true,\n  'input-8': true,\n}"
                }
            ],
            "src/app/views/kyc-ssn/kyc-ssn/kyc-ssn.component.ts": [
                {
                    "name": "ssnMap",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/kyc-ssn/kyc-ssn/kyc-ssn.component.ts",
                    "type": "Record<string, any>",
                    "defaultValue": "{\n  'input-0': true,\n  'input-1': true,\n  'input-2': true,\n  'input-3': true,\n}"
                }
            ],
            "src/app/shared/components/forms/outline-address-form/outline-address-form.component.ts": [
                {
                    "name": "states",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/forms/outline-address-form/outline-address-form.component.ts",
                    "type": "[]",
                    "defaultValue": "[\n  'AL',\n  'AK',\n  'AZ',\n  'AR',\n  'CA',\n  'CO',\n  'CT',\n  'DE',\n  'FL',\n  'GA',\n  'HI',\n  'ID',\n  'IL',\n  'IN',\n  'IA',\n  'KS',\n  'KY',\n  'LA',\n  'ME',\n  'MD',\n  'MA',\n  'MI',\n  'MN',\n  'MS',\n  'MO',\n  'MT',\n  'NE',\n  'NV',\n  'NH',\n  'NJ',\n  'NM',\n  'NY',\n  'NC',\n  'ND',\n  'OH',\n  'OK',\n  'OR',\n  'PA',\n  'RI',\n  'SC',\n  'SD',\n  'TN',\n  'TX',\n  'UT',\n  'VT',\n  'VA',\n  'WA',\n  'WV',\n  'WI',\n  'WY',\n]"
                }
            ],
            "src/app/shared/components/cards/creditcard-card/account-status.pipe.ts": [
                {
                    "name": "statuses",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/cards/creditcard-card/account-status.pipe.ts",
                    "type": "Record<Status, any>",
                    "defaultValue": "{\r\n  excellent: 'bg-teal-500',\r\n  good: 'bg-amber-300',\r\n  okay: 'bg-orange-500',\r\n  poor: 'bg-rose-800',\r\n}"
                }
            ]
        },
        "groupedFunctions": {
            "src/app/shared/validators/email.validator.ts": [
                {
                    "name": "BraveEmailValidator",
                    "file": "src/app/shared/validators/email.validator.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "description": "",
                    "args": [
                        {
                            "name": "control"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "control",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ]
        },
        "groupedEnumerations": {
            "src/app/shared/components/cards/snapshot-display-card/snapshot-label.pipe.ts": [
                {
                    "name": "LabelOfSnapshot",
                    "childs": [
                        {
                            "name": "Update",
                            "value": "update"
                        },
                        {
                            "name": "Hidden",
                            "value": "hidden"
                        },
                        {
                            "name": "New",
                            "value": "new"
                        },
                        {
                            "name": "NoLabel",
                            "value": "no-label"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "description": "",
                    "file": "src/app/shared/components/cards/snapshot-display-card/snapshot-label.pipe.ts"
                }
            ],
            "src/app/shared/services/aws/api.service.ts": [
                {
                    "name": "ModelAttributeTypes",
                    "childs": [
                        {
                            "name": "binary",
                            "value": "binary"
                        },
                        {
                            "name": "binarySet",
                            "value": "binarySet"
                        },
                        {
                            "name": "bool",
                            "value": "bool"
                        },
                        {
                            "name": "list",
                            "value": "list"
                        },
                        {
                            "name": "map",
                            "value": "map"
                        },
                        {
                            "name": "number",
                            "value": "number"
                        },
                        {
                            "name": "numberSet",
                            "value": "numberSet"
                        },
                        {
                            "name": "string",
                            "value": "string"
                        },
                        {
                            "name": "stringSet",
                            "value": "stringSet"
                        },
                        {
                            "name": "_null",
                            "value": "_null"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "description": "",
                    "file": "src/app/shared/services/aws/api.service.ts"
                }
            ],
            "src/app/shared/components/cards/snapshot-display-card/snapshot-display-card.component.ts": [
                {
                    "name": "SnapshotStatus",
                    "childs": [
                        {
                            "name": "Critical",
                            "value": "critical"
                        },
                        {
                            "name": "Danger",
                            "value": "danger"
                        },
                        {
                            "name": "Safe",
                            "value": "safe"
                        },
                        {
                            "name": "Default",
                            "value": "default"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "description": "",
                    "file": "src/app/shared/components/cards/snapshot-display-card/snapshot-display-card.component.ts"
                }
            ]
        },
        "groupedTypeAliases": {
            "src/app/shared/services/aws/api.service.ts": [
                {
                    "name": "Address",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/shared/services/aws/api.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "AddressInput",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/shared/services/aws/api.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "Agencies",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/shared/services/aws/api.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "AgenciesInput",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/shared/services/aws/api.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "AppData",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/shared/services/aws/api.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "CreateAppDataInput",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/shared/services/aws/api.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "CreateAppDataMutation",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/shared/services/aws/api.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "DeleteAppDataInput",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/shared/services/aws/api.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "DeleteAppDataMutation",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/shared/services/aws/api.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "Dob",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/shared/services/aws/api.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "DobInput",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/shared/services/aws/api.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "Equifax",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/shared/services/aws/api.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "EquifaxInput",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/shared/services/aws/api.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "Experian",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/shared/services/aws/api.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "ExperianInput",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/shared/services/aws/api.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "GetAppDataQuery",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/shared/services/aws/api.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "ListAppDatasQuery",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/shared/services/aws/api.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "ModelAppDataConditionInput",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/shared/services/aws/api.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "ModelAppDataConnection",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/shared/services/aws/api.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "ModelAppDataFilterInput",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/shared/services/aws/api.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "ModelIDInput",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/shared/services/aws/api.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "ModelSizeInput",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/shared/services/aws/api.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "Name",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/shared/services/aws/api.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "NameInput",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/shared/services/aws/api.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "Onboarding",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/shared/services/aws/api.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "OnboardingInput",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/shared/services/aws/api.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "OnCreateAppDataSubscription",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/shared/services/aws/api.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "OnDeleteAppDataSubscription",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/shared/services/aws/api.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "OnUpdateAppDataSubscription",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/shared/services/aws/api.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "Phone",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/shared/services/aws/api.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "PhoneInput",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/shared/services/aws/api.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "Ssn",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/shared/services/aws/api.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "SsnInput",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/shared/services/aws/api.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "Transunion",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/shared/services/aws/api.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "TransunionInput",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/shared/services/aws/api.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "UpdateAppDataInput",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/shared/services/aws/api.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "UpdateAppDataMutation",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/shared/services/aws/api.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "User",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/shared/services/aws/api.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "UserAttributes",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/shared/services/aws/api.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "UserAttributesInput",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/shared/services/aws/api.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "UserInput",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/shared/services/aws/api.service.ts",
                    "description": "",
                    "kind": 165
                }
            ],
            "src/app/views/kyc-idverification/kyc-idverification/kyc-idverification.component.ts": [
                {
                    "name": "KycIdverificationState",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"init\" | \"sent\" | \"error\"",
                    "file": "src/app/views/kyc-idverification/kyc-idverification/kyc-idverification.component.ts",
                    "description": "",
                    "kind": 168
                }
            ],
            "src/app/shared/utils/types.ts": [
                {
                    "name": "Mutable",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/app/shared/utils/types.ts",
                    "description": "<p>To change read only types to mutable\nExample:\ninterface Foo {\n   readonly bar: boolean;\n}</p>\n<p>const Bar: Foo = {\n    bar: false\n}</p>\n<p>const FooBar = {...Bar} as DeepWriteable<Foo>\nBar.bar = true; // ERROR!!\nFooBar.bar = true; // OK\nFooBar.bar = false; // OK</p>\n",
                    "kind": 176
                }
            ],
            "src/app/shared/components/cards/creditcard-card/creditcard-card.component.ts": [
                {
                    "name": "Status",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"excellent\" | \"good\" | \"okay\" | \"poor\"",
                    "file": "src/app/shared/components/cards/creditcard-card/creditcard-card.component.ts",
                    "description": "",
                    "kind": 168
                }
            ],
            "src/app/shared/components/cards/loan-card/loan-card.component.ts": [
                {
                    "name": "Status",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"excellent\" | \"good\" | \"okay\" | \"poor\"",
                    "file": "src/app/shared/components/cards/loan-card/loan-card.component.ts",
                    "description": "",
                    "kind": 168
                }
            ],
            "src/app/store/app-data/app-data.model.ts": [
                {
                    "name": "typename",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/app/store/app-data/app-data.model.ts",
                    "description": "",
                    "kind": 177
                }
            ],
            "src/app/store/user/user.model.ts": [
                {
                    "name": "typename",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/app/store/user/user.model.ts",
                    "description": "",
                    "kind": 177
                }
            ],
            "src/app/store/onboarding/onboarding.model.ts": [
                {
                    "name": "typename",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/app/store/onboarding/onboarding.model.ts",
                    "description": "",
                    "kind": 177
                }
            ]
        }
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "src/app/app-routing.module.ts",
                "module": "AppRoutingModule",
                "kind": "module"
            },
            {
                "name": "AuthenticationRoutes",
                "filename": "src/app/layouts/authentication/authentication.routing.ts",
                "module": "AuthenticationRoutingModule",
                "children": [
                    {
                        "path": "",
                        "component": "AuthenticationComponent",
                        "children": [
                            {
                                "path": "signup",
                                "component": "SignupComponent"
                            },
                            {
                                "path": "signin",
                                "component": "SigninComponent"
                            },
                            {
                                "path": "forgot",
                                "component": "SigninForgotComponent"
                            },
                            {
                                "path": "redirect",
                                "component": "SigninRedirectComponent"
                            },
                            {
                                "path": "thankyou",
                                "component": "SignupThankyouComponent"
                            },
                            {
                                "path": "name",
                                "component": "SignupKnowyouComponent"
                            },
                            {
                                "path": "error",
                                "component": "SignupErrorComponent"
                            },
                            {
                                "path": "invalid",
                                "component": "SignupErrorValidationComponent"
                            },
                            {
                                "path": "resend",
                                "component": "SignupResendComponent"
                            },
                            {
                                "path": "",
                                "redirectTo": "auth/signup",
                                "pathMatch": "full"
                            }
                        ]
                    }
                ],
                "kind": "module"
            },
            {
                "name": "OnboardingRoutes",
                "filename": "src/app/layouts/onboarding/onboarding.routing.ts",
                "module": "OnboardingRoutingModule",
                "children": [
                    {
                        "path": "",
                        "component": "OnboardingComponent",
                        "canActivate": [
                            "AuthGuard"
                        ],
                        "children": [
                            {
                                "path": "name",
                                "component": "KycWelcomeComponent",
                                "canActivate": [
                                    "AuthGuard"
                                ]
                            },
                            {
                                "path": "address",
                                "component": "KycAddressComponent",
                                "canActivate": [
                                    "AuthGuard"
                                ]
                            },
                            {
                                "path": "identity",
                                "component": "KycSsnComponent",
                                "canActivate": [
                                    "AuthGuard"
                                ]
                            },
                            {
                                "path": "identityfull",
                                "component": "KycSsnFullComponent",
                                "canActivate": [
                                    "AuthGuard"
                                ]
                            },
                            {
                                "path": "verify",
                                "component": "KycPhonenumberComponent",
                                "canActivate": [
                                    "AuthGuard"
                                ]
                            },
                            {
                                "path": "code",
                                "component": "KycIdverificationComponent",
                                "canActivate": [
                                    "AuthGuard"
                                ]
                            },
                            {
                                "path": "kba",
                                "component": "KycKbaquestionsComponent",
                                "canActivate": [
                                    "AuthGuard"
                                ]
                            },
                            {
                                "path": "congratulations",
                                "component": "KycCongratulationsComponent",
                                "canActivate": [
                                    "AuthGuard"
                                ]
                            },
                            {
                                "path": "returning",
                                "component": "KycWelcomebackComponent",
                                "canActivate": [
                                    "AuthGuard"
                                ]
                            }
                        ]
                    }
                ],
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 1,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/app.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "isLocalhost",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "updatedAwsConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layouts/authentication/authentication.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AuthenticationComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/layouts/authentication/authentication.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "components",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layouts/compliance/compliance.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ComplianceComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/layouts/compliance/compliance.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "components",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layouts/dashboard/dashboard.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DashboardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/layouts/dashboard/dashboard.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "components",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layouts/onboarding/onboarding.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OnboardingComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/layouts/onboarding/onboarding.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "components",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layouts/onboarding/onboarding.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "OnboardingService",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FilledClosingAlertComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IFilledClosingAlertConfig",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "FilledClosingAlertPipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.pipe.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "sizeSpecificClass",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Accent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "accentConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ExtraLarge",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "extraLargeConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ExtraSmall",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "extraSmallConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "largeConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "primaryConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "smallConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/auth/sign-in/sign-in.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SignInComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/auth/sign-up/sign-up.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SignUpComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/auth/sign-up/sign-up.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "FormFields",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/badges/filled-onlytext-badge/filled-onlytext-badge.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FilledOnlytextBadgeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/badges/filled-onlytext-badge/filled-onlytext-badge.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IFilledOnlytextBadgeConfig",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/badges/filled-onlytext-badge/filled-onlytext-badge.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "FilledOnlytextBadgePipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/badges/filled-onlytext-badge/filled-onlytext-badge.pipe.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "sizeSpecificClass",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/badges/filled-onlytext-badge/filled-onlytext-badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Accent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/badges/filled-onlytext-badge/filled-onlytext-badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "accentConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/badges/filled-onlytext-badge/filled-onlytext-badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/badges/filled-onlytext-badge/filled-onlytext-badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/badges/filled-onlytext-badge/filled-onlytext-badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "primaryConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/badges/filled-onlytext-badge/filled-onlytext-badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/badges/filled-onlytext-badge/filled-onlytext-badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "secondaryConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/badges/filled-onlytext-badge/filled-onlytext-badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Strong",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/badges/filled-onlytext-badge/filled-onlytext-badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "strongConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/badges/filled-onlytext-badge/filled-onlytext-badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/buttons/facebook-onlytextsignin-button/facebook-onlytextsignin-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FacebookOnlytextsigninButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/buttons/filled-onlytext-button/filled-onlytext-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FilledOnlytextButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/buttons/filled-onlytext-button/filled-onlytext-button.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IFilledOnlyTextButtonConfig",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/buttons/filled-onlytext-button/filled-onlytext-button.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "FilledOnlytextButtonPipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/buttons/filled-onlytext-button/filled-onlytext-button.pipe.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "sizeSpecificClass",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/buttons/filled-onlytext-button/filled-onlytext-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Accent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/buttons/filled-onlytext-button/filled-onlytext-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "accentConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/buttons/filled-onlytext-button/filled-onlytext-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/buttons/filled-onlytext-button/filled-onlytext-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/buttons/filled-onlytext-button/filled-onlytext-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "largeConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/buttons/filled-onlytext-button/filled-onlytext-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/buttons/filled-onlytext-button/filled-onlytext-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "primaryConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/buttons/filled-onlytext-button/filled-onlytext-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/buttons/filled-onlytext-button/filled-onlytext-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "secondaryConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/buttons/filled-onlytext-button/filled-onlytext-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/buttons/filled-onlytext-button/filled-onlytext-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "smallConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/buttons/filled-onlytext-button/filled-onlytext-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/buttons/google-iconsignin-button/google-iconsignin-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GoogleIconsigninButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/buttons/links-onlytext-button/links-onlytext-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LinksOnlytextButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/buttons/links-onlytext-button/links-onlytext-button.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ILinksOnlyTextButtonConfig",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/buttons/links-onlytext-button/links-onlytext-button.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "LinksOnlytextButtonPipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/buttons/links-onlytext-button/links-onlytext-button.pipe.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "sizeSpecificClass",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/buttons/links-onlytext-button/links-onlytext-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Accent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/buttons/links-onlytext-button/links-onlytext-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "accentConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/buttons/links-onlytext-button/links-onlytext-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/buttons/links-onlytext-button/links-onlytext-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/buttons/links-onlytext-button/links-onlytext-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "largeConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/buttons/links-onlytext-button/links-onlytext-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/buttons/links-onlytext-button/links-onlytext-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "primaryConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/buttons/links-onlytext-button/links-onlytext-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/buttons/links-onlytext-button/links-onlytext-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "smallConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/buttons/links-onlytext-button/links-onlytext-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/buttons/outline-onlytext-button/outline-onlytext-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OutlineOnlytextButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/buttons/outline-onlytext-button/outline-onlytext-button.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IOutlineOnlyTextButtonConfig",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/buttons/outline-onlytext-button/outline-onlytext-button.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "OutlineOnlytextButtonPipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/buttons/outline-onlytext-button/outline-onlytext-button.pipe.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "sizeSpecificClass",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/buttons/outline-onlytext-button/outline-onlytext-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/buttons/outline-onlytext-button/outline-onlytext-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/buttons/outline-onlytext-button/outline-onlytext-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "largeConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/buttons/outline-onlytext-button/outline-onlytext-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/buttons/outline-onlytext-button/outline-onlytext-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "primaryConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/buttons/outline-onlytext-button/outline-onlytext-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/buttons/outline-onlytext-button/outline-onlytext-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "smallConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/buttons/outline-onlytext-button/outline-onlytext-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/buttons/viewdetail-button/viewdetail-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ViewdetailButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/buttons/viewdetail-button/viewdetail-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/buttons/viewdetail-button/viewdetail-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/cards/creditcard-card/account-status.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "AccountStatusPipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/cards/creditcard-card/account-status.pipe.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "statuses",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/cards/creditcard-card/creditcard-card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CreditcardCardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/cards/creditcard-card/creditcard-card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/cards/creditcard-card/creditcard-card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/cards/loan-card/loan-card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LoanCardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/cards/loan-card/loan-card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/cards/loan-card/loan-card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/dropdowns/popdowns/index-dropdown/index-dropdown.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "IndexDropdownComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/dropdowns/popdowns/menu-dropdown/menu-dropdown.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MenuDropdownComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/dropdowns/popdowns/menu-dropdown/menu-dropdown.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IMenuDropdown",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/dropdowns/popdowns/menu-dropdown/menu-dropdown.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ISubmenuItem",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/dropdowns/popdowns/notification-dropdown/notification-dropdown.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NotificationDropdownComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/dropdowns/popdowns/notification-dropdown/notification-dropdown.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/dropdowns/popdowns/notification-dropdown/notification-dropdown.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/dropdowns/popdowns/pages-dropdown/pages-dropdown.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PagesDropdownComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/dropdowns/popdowns/table-dropdown/table-dropdown.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TableDropdownComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/dropdowns/popdowns/table-dropdown/table-dropdown.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/dropdowns/popdowns/table-dropdown/table-dropdown.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/dropdowns/popdowns/user-dropdown/user-dropdown.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UserDropdownComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/dropdowns/popdowns/user-dropdown/user-dropdown.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/dropdowns/popdowns/user-dropdown/user-dropdown.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/dropdowns/selects/outline-onlytext-select/outline-onlytext-select.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OutlineOnlytextSelectComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/dropdowns/selects/outline-onlytext-select/outline-onlytext-select.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IOutlineOnlyTextItem",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/dropdowns/selects/outline-onlytext-select/outline-onlytext-select.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/dropdowns/selects/outline-onlytext-select/outline-onlytext-select.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "items",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/dropdowns/selects/outline-onlytext-select/outline-onlytext-select.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/footers/footer-admin/footer-admin.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FooterAdminComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/footers/footer-small/footer-small.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FooterSmallComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/footers/footer/footer.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FooterComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/forms/base-form/base-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BaseFormComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/forms/kbaquestions-form/kbaquestions-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "KbaquestionsFormComponent",
                "coveragePercent": 13,
                "coverageCount": "3/22",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/forms/kbaquestions-form/kbaquestions-form.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/forms/kbaquestions-form/kbaquestions-form.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "kbas",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/forms/kbaquestions-form/kbaquestions-form.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/forms/outline-address-form/outline-address-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OutlineAddressFormComponent",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/forms/outline-address-form/outline-address-form.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "states",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/forms/outline-address-form/outline-address-form.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/forms/outline-address-form/outline-address-form.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/forms/outline-name-form/outline-name-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OutlineNameFormComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/forms/outline-name-form/outline-name-form.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/forms/outline-name-form/outline-name-form.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/forms/outline-namedob-form/outline-namedob-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OutlineNamedobFormComponent",
                "coveragePercent": 0,
                "coverageCount": "0/19",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/forms/outline-namedob-form/outline-namedob-form.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "months",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/forms/outline-onecolumn-form/outline-onecolumn-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OutlineOnecolumnFormComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/forms/outline-onecolumn-form/outline-onecolumn-form.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/forms/outline-onecolumn-form/outline-onecolumn-form.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/forms/outline-phone-form/outline-phone-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OutlinePhoneFormComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/forms/outline-phone-form/outline-phone-form.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/forms/outline-phone-form/outline-phone-form.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/forms/outline-verificationcode-form/outline-verificationcode-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OutlineVerificationcodeFormComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/forms/outline-verificationcode-form/outline-verificationcode-form.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/forms/outline-verificationcode-form/outline-verificationcode-form.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/forms/select-dob-form/select-dob-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SelectDobFormComponent",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/forms/select-dob-form/select-dob-form.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "months",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/forms/select-dob-form/select-dob-form.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/forms/select-dob-form/select-dob-form.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/forms/simple-signup-form/simple-signup-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SimpleSignupFormComponent",
                "coveragePercent": 22,
                "coverageCount": "2/9",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/forms/simple-signup-form/simple-signup-form.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/forms/simple-signup-form/simple-signup-form.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/forms/ssn-full-form/ssn-full-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SsnFullFormComponent",
                "coveragePercent": 14,
                "coverageCount": "2/14",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/forms/ssn-full-form/ssn-full-form.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/forms/ssn-full-form/ssn-full-form.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/forms/ssn-lastfour-form/ssn-lastfour-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SsnLastfourFormComponent",
                "coveragePercent": 14,
                "coverageCount": "2/14",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/forms/ssn-lastfour-form/ssn-lastfour-form.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/forms/ssn-lastfour-form/ssn-lastfour-form.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/inputs/hidden-asterisk-input/hidden-asterisk-input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HiddenAsteriskInputComponent",
                "coveragePercent": 18,
                "coverageCount": "3/16",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/inputs/hidden-asterisk-input/hidden-asterisk-input.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "HiddenAsteriskInputDirective",
                "coveragePercent": 10,
                "coverageCount": "1/10",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/inputs/hidden-asterisk-input/hidden-asterisk-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/inputs/hidden-asterisk-input/hidden-asterisk-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/inputs/hidden-asterisk-input/hidden-asterisk-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/inputs/hidden-asterisk-input/hidden-asterisk-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/inputs/kba-multiplechoice-input/kba-multiplechoice-input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "KbaMultiplechoiceInputComponent",
                "coveragePercent": 6,
                "coverageCount": "1/15",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/inputs/kba-multiplechoice-input/kba-multiplechoice-input.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IKbaMultipleChoiceConfig",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/inputs/kba-multiplechoice-input/kba-multiplechoice-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/inputs/kba-multiplechoice-input/kba-multiplechoice-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "question",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/inputs/kba-multiplechoice-input/kba-multiplechoice-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/inputs/outline-input/outline-input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OutlineInputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/inputs/outline-input/outline-input.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IOutlineInputeConfig",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/inputs/outline-input/outline-input.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "OutlineInputPipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/inputs/outline-input/outline-input.pipe.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "sizeSpecificClass",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/inputs/outline-input/outline-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/inputs/outline-input/outline-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/inputs/outline-input/outline-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "largeConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/inputs/outline-input/outline-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/inputs/outline-input/outline-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "smallConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/inputs/outline-input/outline-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/inputs/outline-select-input/outline-select-input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OutlineSelectInputComponent",
                "coveragePercent": 11,
                "coverageCount": "2/17",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/inputs/outline-select-input/outline-select-input.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IOutlineSelectInputConfig",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/inputs/outline-select-input/outline-select-input.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "OutlineSelectInputPipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/inputs/outline-select-input/outline-select-input.pipe.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "sizeSpecificClass",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/inputs/outline-select-input/outline-select-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/inputs/outline-select-input/outline-select-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/inputs/outline-select-input/outline-select-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "largeConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/inputs/outline-select-input/outline-select-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/inputs/outline-select-input/outline-select-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "smallConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/inputs/outline-select-input/outline-select-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/modals/base-modal-regular/base-modal-regular.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BaseModalRegularComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/modals/base-modal-regular/base-modal-regular.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IBaseModalRegularConfig",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/modals/base-modal-regular/base-modal-regular.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "config",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/modals/base-modal-regular/base-modal-regular.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/modals/base-modal-regular/base-modal-regular.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/modals/base-modal-small/base-modal-small.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BaseModalSmallComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/modals/base-modal-small/base-modal-small.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IBaseModalSmallConfig",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/modals/base-modal-small/base-modal-small.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "config",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/modals/base-modal-small/base-modal-small.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/modals/base-modal-small/base-modal-small.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/navbars/admin-navbar/admin-navbar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AdminNavbarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/navbars/auth-navbar/auth-navbar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AuthNavbarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/navbars/dashboard-navbar/dashboard-navbar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DashboardNavbarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/navbars/dashboard-navbar/dashboard-navbar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/navbars/dashboard-navbar/dashboard-navbar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/navbars/index-navbar/index-navbar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "IndexNavbarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/paginations/outline-prevnext-pagination/outline-prevnext-pagination.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OutlinePrevnextPaginationComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/paginations/outline-prevnext-pagination/outline-prevnext-pagination.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/paginations/outline-prevnext-pagination/outline-prevnext-pagination.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/progressbars/filled-checktext-progressbar/filled-checktext-progressbar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FilledChecktextProgressbarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/progressbars/filled-checktext-progressbar/filled-checktext-progressbar.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IFilledChecktextProgressbarConfig",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/progressbars/filled-checktext-progressbar/filled-checktext-progressbar.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IProgressStep",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/progressbars/filled-checktext-progressbar/filled-checktext-progressbar.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "FilledChecktextProgressbarPipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/progressbars/filled-checktext-progressbar/filled-checktext-progressbar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "config",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/progressbars/filled-checktext-progressbar/filled-checktext-progressbar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/progressbars/filled-checktext-progressbar/filled-checktext-progressbar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "stack",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/progressbars/filled-checktext-progressbar/filled-checktext-progressbar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "steps",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/progressbars/filled-checktext-progressbar/filled-checktext-progressbar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/shared-components.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "components",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/shared-components.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "directives",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/shared-components.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "pipes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/sidebar/sidebar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SidebarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/tabs/filled-onlytext-tabs/filled-onlytext-tabs.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FilledOnlytextTabsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/tabs/filled-onlytext-tabs/filled-onlytext-tabs.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/tabs/filled-onlytext-tabs/filled-onlytext-tabs.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/tabs/navigation-tabs/navigation-tabs.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NavigationTabsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/tabs/navigation-tabs/navigation-tabs.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/tabs/navigation-tabs/navigation-tabs.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/tooltips/outline-tooltip/outline-tooltip.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OutlineTooltipComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/tooltips/outline-tooltip/outline-tooltip.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "OutlineTooltipDirective",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/tooltips/outline-tooltip/outline-tooltip.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Bottom",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/tooltips/outline-tooltip/outline-tooltip.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/tooltips/outline-tooltip/outline-tooltip.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Left",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/tooltips/outline-tooltip/outline-tooltip.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Right",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/tooltips/outline-tooltip/outline-tooltip.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/tooltips/outline-tooltip/outline-tooltip.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Top",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/typography/typography-accent-bg-cooltext.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/typography/typography-accent-bg-cooltext.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/typography/typography-accent-bg.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/typography/typography-accent-bg.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/typography/typography-primary-bg-cooltext.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/typography/typography-primary-bg-cooltext.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/typography/typography-primary-bg.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/typography/typography-primary-bg.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/typography/typography-transparent-bg.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/typography/typography-transparent-bg.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/guards/auth.guard.ts",
                "type": "guard",
                "linktype": "guard",
                "name": "AuthGuard",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/guards/unauth.guard.ts",
                "type": "guard",
                "linktype": "guard",
                "name": "UnauthGuard",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/guards/unconfirmed.guard.ts",
                "type": "guard",
                "linktype": "guard",
                "name": "UnconfirmedGuard",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/interfaces/tu-kba-questions.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ITransunionKBAAnswer",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/interfaces/tu-kba-questions.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ITransunionKBAQuestion",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/interfaces/tu-kba-questions.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ITransunionKBAQuestions",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/models/get-authorization-questions.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IGetAuthenticationQuestionsMsg",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/models/get-authorization-questions.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IGetAuthenticationQuestionsResponseSuccess",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/models/indicative-enrichment.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IIndicativeEnrichmentMsg",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/models/indicative-enrichment.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IIndicativeEnrichmentResponseSuccess",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/services/auth/auth.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "AuthService",
                "coveragePercent": 22,
                "coverageCount": "5/22",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/services/auth/auth.service.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "NewUser",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/services/auth/guest.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "GuestService",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/services/auth/iam.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "IamService",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/services/aws/api.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "APIService",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/services/aws/api.service.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "SubscriptionResponse",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/services/kyc/kyc.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "KycService",
                "coveragePercent": 87,
                "coverageCount": "14/16",
                "status": "very-good"
            },
            {
                "filePath": "src/app/shared/services/shared-services.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "services",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/services/sync/sync.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "SyncService",
                "coveragePercent": 20,
                "coverageCount": "1/5",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/services/transunion/transunion.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "TransunionService",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/services/transunion/transunion.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "monthMap",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/utils/utils.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "_deleteKeyNestedObject",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/utils/utils.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "_updateNestedRecurse",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/utils/utils.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "deleteKeyNestedObject",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/shared/utils/utils.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "updateNestedObject",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/shared/validators/email.validator.ts",
                "type": "function",
                "linksubtype": "function",
                "name": "BraveEmailValidator",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/agencies/agencies.actions.ts",
                "type": "class",
                "linktype": "classe",
                "name": "Add",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/store/agencies/agencies.actions.ts",
                "type": "class",
                "linktype": "classe",
                "name": "Delete",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/store/agencies/agencies.actions.ts",
                "type": "class",
                "linktype": "classe",
                "name": "Edit",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/store/agencies/agencies.actions.ts",
                "type": "class",
                "linktype": "classe",
                "name": "EditQuestions",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/store/agencies/agencies.model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "AgenciesStateModel",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/store/agencies/agencies.selectors.ts",
                "type": "class",
                "linktype": "classe",
                "name": "AgenciesSelectors",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/store/agencies/agencies.state.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "AgenciesState",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/store/app-data/app-data.actions.ts",
                "type": "class",
                "linktype": "classe",
                "name": "Add",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/store/app-data/app-data.actions.ts",
                "type": "class",
                "linktype": "classe",
                "name": "Delete",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/store/app-data/app-data.actions.ts",
                "type": "class",
                "linktype": "classe",
                "name": "Edit",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/store/app-data/app-data.actions.ts",
                "type": "class",
                "linktype": "classe",
                "name": "Fetch",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/store/app-data/app-data.model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "AppDataStateModel",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/store/app-data/app-data.selectors.ts",
                "type": "class",
                "linktype": "classe",
                "name": "AppDataSelectors",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/store/app-data/app-data.state.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "AppDataState",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/store/index.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "braveState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/onboarding/onboarding.actions.ts",
                "type": "class",
                "linktype": "classe",
                "name": "Add",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/store/onboarding/onboarding.actions.ts",
                "type": "class",
                "linktype": "classe",
                "name": "Delete",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/store/onboarding/onboarding.actions.ts",
                "type": "class",
                "linktype": "classe",
                "name": "Edit",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/store/onboarding/onboarding.actions.ts",
                "type": "class",
                "linktype": "classe",
                "name": "UpdateLastActive",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/store/onboarding/onboarding.actions.ts",
                "type": "class",
                "linktype": "classe",
                "name": "UpdateLastComplete",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/store/onboarding/onboarding.model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "OnboardingStateModel",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/store/onboarding/onboarding.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "OnboardingStep",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/onboarding/onboarding.selectors.ts",
                "type": "class",
                "linktype": "classe",
                "name": "OnboardingSelectors",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/store/onboarding/onboarding.state.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "OnboardingState",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/store/user/user.actions.ts",
                "type": "class",
                "linktype": "classe",
                "name": "Add",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/store/user/user.actions.ts",
                "type": "class",
                "linktype": "classe",
                "name": "Delete",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/store/user/user.actions.ts",
                "type": "class",
                "linktype": "classe",
                "name": "Edit",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/store/user/user.actions.ts",
                "type": "class",
                "linktype": "classe",
                "name": "UpdateAttributes",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/store/user/user.model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "UserStateModel",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/store/user/user.selectors.ts",
                "type": "class",
                "linktype": "classe",
                "name": "UserSelectors",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/store/user/user.state.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "UserState",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/testing/dom-helper.ts",
                "type": "class",
                "linktype": "classe",
                "name": "DOMHelper",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/app/testing/test-helper.ts",
                "type": "class",
                "linktype": "classe",
                "name": "Helper",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/views/compliance-privacy/compliance-privacy.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CompliancePrivacyComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/views/compliance-tos/compliance-tos.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ComplianceTosComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/views/dashboard-init/dashboard-init.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DashboardInitComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/views/dashboard-init/dashboard-init.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/dashboard-init/dashboard-init.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/kyc-address/kyc-address-pure/kyc-address-pure.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "KycAddressPureComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/views/kyc-address/kyc-address-pure/kyc-address-pure.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/kyc-address/kyc-address-pure/kyc-address-pure.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/kyc-address/kyc-address/kyc-address.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "KycAddressComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "src/app/views/kyc-address/kyc-address/kyc-address.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "address",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/kyc-base/kyc-base.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "KycBaseComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/views/kyc-base/kyc-base.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "FlatForm",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/kyc-congratulations/kyc-congratulations-pure/kyc-congratulations-pure.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "KycCongratulationsPureComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/views/kyc-congratulations/kyc-congratulations-pure/kyc-congratulations-pure.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/kyc-congratulations/kyc-congratulations-pure/kyc-congratulations-pure.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/kyc-congratulations/kyc-congratulations/kyc-congratulations.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "KycCongratulationsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/views/kyc-idverification/kyc-idverification-pure/kyc-idverification-pure.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "KycIdverificationPureComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/views/kyc-idverification/kyc-idverification-pure/kyc-idverification-pure.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/kyc-idverification/kyc-idverification-pure/kyc-idverification-pure.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/kyc-idverification/kyc-idverification/kyc-idverification.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "KycIdverificationComponent",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "src/app/views/kyc-idverification/kyc-idverification/kyc-idverification.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "codeMap",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/kyc-kbaquestions/example-questions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "formattedQuestions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/kyc-kbaquestions/kyc-kbaquestions-pure/kyc-kbaquestions-pure.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "KycKbaquestionsPureComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/views/kyc-kbaquestions/kyc-kbaquestions-pure/kyc-kbaquestions-pure.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/kyc-kbaquestions/kyc-kbaquestions-pure/kyc-kbaquestions-pure.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "kbas",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/kyc-kbaquestions/kyc-kbaquestions-pure/kyc-kbaquestions-pure.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/kyc-kbaquestions/kyc-kbaquestions/kyc-kbaquestions.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "KycKbaquestionsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/15",
                "status": "low"
            },
            {
                "filePath": "src/app/views/kyc-kbaquestions/kyc-kbaquestions/kyc-kbaquestions.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "KycKbaquestionsPipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/kyc-phonenumber/kyc-phonenumber-pure/kyc-phonenumber-pure.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "KycPhonenumberPureComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/views/kyc-phonenumber/kyc-phonenumber-pure/kyc-phonenumber-pure.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/kyc-phonenumber/kyc-phonenumber-pure/kyc-phonenumber-pure.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/kyc-phonenumber/kyc-phonenumber/kyc-phonenumber.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "KycPhonenumberComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "src/app/views/kyc-phonenumber/kyc-phonenumber/kyc-phonenumber.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "phoneMap",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/kyc-ssn-full/kyc-ssn-full-pure/kyc-ssn-full-pure.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "KycSsnFullPureComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/views/kyc-ssn-full/kyc-ssn-full-pure/kyc-ssn-full-pure.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/kyc-ssn-full/kyc-ssn-full-pure/kyc-ssn-full-pure.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/kyc-ssn-full/kyc-ssn-full/kyc-ssn-full.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "KycSsnFullComponent",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "src/app/views/kyc-ssn-full/kyc-ssn-full/kyc-ssn-full.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ssn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/kyc-ssn/kyc-ssn-pure/kyc-ssn-pure.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "KycSsnPureComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/views/kyc-ssn/kyc-ssn-pure/kyc-ssn-pure.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/kyc-ssn/kyc-ssn-pure/kyc-ssn-pure.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/kyc-ssn/kyc-ssn/kyc-ssn.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "KycSsnComponent",
                "coveragePercent": 23,
                "coverageCount": "3/13",
                "status": "low"
            },
            {
                "filePath": "src/app/views/kyc-ssn/kyc-ssn/kyc-ssn.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ssnMap",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/kyc-welcome/kyc-welcome-pure/kyc-welcome-pure.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "KycWelcomePureComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/views/kyc-welcome/kyc-welcome-pure/kyc-welcome-pure.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/kyc-welcome/kyc-welcome-pure/kyc-welcome-pure.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/kyc-welcome/kyc-welcome/kyc-welcome.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "KycWelcomeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/app/views/kyc-welcome/kyc-welcome/kyc-welcome.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "FlatForm",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/kyc-welcome/kyc-welcome/kyc-welcome.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "dob",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/kyc-welcome/kyc-welcome/kyc-welcome.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "name",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/kyc-welcomeback/kyc-welcomeback-pure/kyc-welcomeback-pure.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "KycWelcomebackPureComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/views/kyc-welcomeback/kyc-welcomeback-pure/kyc-welcomeback-pure.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/kyc-welcomeback/kyc-welcomeback-pure/kyc-welcomeback-pure.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/kyc-welcomeback/kyc-welcomeback/kyc-welcomeback.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "KycWelcomebackComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/views/signin-forgot/signin-forgot.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SigninForgotComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/views/signin-redirect/signin-redirect.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SigninRedirectComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/views/signin-redirect/signin-redirect.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "navs",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/signin/signin-pure/signin-pure.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SigninPureComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/views/signin/signin/signin.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SigninComponent",
                "coveragePercent": 66,
                "coverageCount": "6/9",
                "status": "good"
            },
            {
                "filePath": "src/app/views/signup-error-validation/signup-error-validation.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SignupErrorValidationComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/views/signup-error-validation/signup-error-validation.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/signup-error-validation/signup-error-validation.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/signup-error/signup-error.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SignupErrorComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/views/signup-error/signup-error.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/signup-error/signup-error.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/signup-knowyou/signup-knowyou.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SignupKnowyouComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/views/signup-knowyou/signup-knowyou.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/signup-knowyou/signup-knowyou.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/signup-resend/signup-resend.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SignupResendComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/views/signup-thankyou/signup-thankyou.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SignupThankyouComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/views/signup-thankyou/signup-thankyou.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/signup-thankyou/signup-thankyou.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/signup/signup-pure/signup-pure.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SignupPureComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/views/signup/signup-pure/signup-pure.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/signup/signup-pure/signup-pure.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/signup/signup/signup.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SignupComponent",
                "coveragePercent": 70,
                "coverageCount": "7/10",
                "status": "good"
            },
            {
                "filePath": "src/app/views/views.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "pipes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/views.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "views",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.dev.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.qa.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}