{
    "pipes": [
        {
            "name": "FilledChecktextProgressbarPipe",
            "id": "pipe-FilledChecktextProgressbarPipe-bbf1cbae96b352df2d8bbfebad764188",
            "file": "src/app/shared/components/progressbars/filled-checktext-progressbar/filled-checktext-progressbar.pipe.ts",
            "type": "pipe",
            "description": "",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "value",
                            "type": "unknown"
                        },
                        {
                            "name": "args",
                            "type": "unknown[]",
                            "dotDotDotToken": true
                        }
                    ],
                    "optional": false,
                    "returnType": "unknown",
                    "typeParameters": [],
                    "line": 8,
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "unknown",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "args",
                            "type": "unknown[]",
                            "dotDotDotToken": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "ngname": "filledChecktextProgressbar",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'filledChecktextProgressbar'\n})\nexport class FilledChecktextProgressbarPipe implements PipeTransform {\n\n  transform(value: unknown, ...args: unknown[]): unknown {\n    return null;\n  }\n\n}\n"
        },
        {
            "name": "FilledClosingAlertPipe",
            "id": "pipe-FilledClosingAlertPipe-5a48fea4c9331d6343a49d2e86ee199a",
            "file": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.pipe.ts",
            "type": "pipe",
            "description": "",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "value",
                            "type": "IFilledClosingAlertConfig"
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 8,
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "IFilledClosingAlertConfig",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "ngname": "filledClosingAlert",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\nimport { IFilledClosingAlertConfig } from '@shared/components/alerts/filled-closing-alert/filled-closing-alert.component';\n\n@Pipe({\n  name: 'filledClosingAlert',\n})\nexport class FilledClosingAlertPipe implements PipeTransform {\n  transform(value: IFilledClosingAlertConfig): string {\n    let cls = `${value.backgroundColor}`;\n    cls = `${cls} ${sizeSpecificClass[value.size]}`;\n    return cls;\n  }\n}\n\nconst sizeSpecificClass: Record<string, any> = {\n  xs: 'max-w-xs',\n  sm: 'max-w-sm',\n  base: 'max-w-md',\n  lg: 'max-w-lg',\n  xl: 'max-w-xl',\n};\n"
        },
        {
            "name": "FilledOnlytextBadgePipe",
            "id": "pipe-FilledOnlytextBadgePipe-462121df0debfc3d7c8652f49a44827a",
            "file": "src/app/shared/components/badges/filled-onlytext-badge/filled-onlytext-badge.pipe.ts",
            "type": "pipe",
            "description": "",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "value",
                            "type": "IFilledOnlytextBadgeConfig"
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 8,
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "IFilledOnlytextBadgeConfig",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "ngname": "filledOnlytextBadge",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\nimport { IFilledOnlytextBadgeConfig } from '@shared/components/badges/filled-onlytext-badge/filled-onlytext-badge.component';\n\n@Pipe({\n  name: 'filledOnlytextBadge',\n})\nexport class FilledOnlytextBadgePipe implements PipeTransform {\n  transform(value: IFilledOnlytextBadgeConfig): string {\n    let cls = `${value.color} ${value.backgroundColor}`;\n    cls = `${cls} ${sizeSpecificClass[value.size]}`;\n    return cls;\n  }\n}\n\nconst sizeSpecificClass: Record<string, any> = {\n  sm: 'text-xs px-2 py-1',\n  base: 'text-xs px-2 py-1',\n  lg: 'text-xs px-2 py-1',\n};\n"
        },
        {
            "name": "FilledOnlytextButtonPipe",
            "id": "pipe-FilledOnlytextButtonPipe-b46fc09fdb7c1deb9a51b5a18829847d",
            "file": "src/app/shared/components/buttons/filled-onlytext-button/filled-onlytext-button.pipe.ts",
            "type": "pipe",
            "description": "",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "value",
                            "type": "IFilledOnlyTextButtonConfig"
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 8,
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "IFilledOnlyTextButtonConfig",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "ngname": "filledOnlytextButton",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\nimport { IFilledOnlyTextButtonConfig } from '@shared/components/buttons/filled-onlytext-button/filled-onlytext-button.component';\n\n@Pipe({\n  name: 'filledOnlytextButton',\n})\nexport class FilledOnlytextButtonPipe implements PipeTransform {\n  transform(value: IFilledOnlyTextButtonConfig): string {\n    let cls = `${value.backgroundColor} ${value.color} active:${value.activeColor}`;\n    cls = `${cls} ${sizeSpecificClass[value.buttonSize]}`;\n    return cls;\n  }\n}\n\nconst sizeSpecificClass: Record<string, any> = {\n  sm: 'text-xs px-4 py-2 hover:shadow-md',\n  base: 'text-sm px-6 py-3 hover:shadow-lg',\n  lg: 'text-base px-8 py-3 hover:shadow-lg',\n};\n"
        },
        {
            "name": "LinksOnlytextButtonPipe",
            "id": "pipe-LinksOnlytextButtonPipe-77489722b8358276425c52b184b65e15",
            "file": "src/app/shared/components/buttons/links-onlytext-button/links-onlytext-button.pipe.ts",
            "type": "pipe",
            "description": "",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "value",
                            "type": "ILinksOnlyTextButtonConfig"
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 8,
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "ILinksOnlyTextButtonConfig",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "ngname": "linksOnlytextButton",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\nimport { ILinksOnlyTextButtonConfig } from '@shared/components/buttons/links-onlytext-button/links-onlytext-button.component';\n\n@Pipe({\n  name: 'linksOnlytextButton',\n})\nexport class LinksOnlytextButtonPipe implements PipeTransform {\n  transform(value: ILinksOnlyTextButtonConfig): string {\n    let cls = `${value.color}`;\n    cls = `${cls} ${sizeSpecificClass[value.buttonSize]}`;\n    return cls;\n  }\n}\n\nconst sizeSpecificClass: Record<string, any> = {\n  sm: 'text-xs px-3 py-1',\n  base: 'text-sm px-6 py-2',\n  lg: 'text-base px-8 py-3',\n};\n"
        },
        {
            "name": "OutlineInputPipe",
            "id": "pipe-OutlineInputPipe-fb3f896f3a1362e91bdd05efb64d26e6",
            "file": "src/app/shared/components/inputs/outline-input/outline-input.pipe.ts",
            "type": "pipe",
            "description": "",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "value",
                            "type": "IOutlineInputeConfig"
                        },
                        {
                            "name": "args",
                            "type": "unknown[]",
                            "dotDotDotToken": true
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 8,
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "IOutlineInputeConfig",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "args",
                            "type": "unknown[]",
                            "dotDotDotToken": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "ngname": "outlineInput",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\nimport { IOutlineInputeConfig } from '@shared/components/inputs/outline-input/outline-input.component';\n\n@Pipe({\n  name: 'outlineInput',\n})\nexport class OutlineInputPipe implements PipeTransform {\n  transform(value: IOutlineInputeConfig, ...args: unknown[]): string {\n    let cls = `${sizeSpecificClass[value.size]}`;\n    return cls;\n  }\n}\n\nconst sizeSpecificClass: Record<string, any> = {\n  sm: 'text-sm px-3 py-1',\n  base: 'text-sm px-3 py-3',\n  lg: 'text-base px-3 py-4',\n};\n"
        },
        {
            "name": "OutlineOnlytextButtonPipe",
            "id": "pipe-OutlineOnlytextButtonPipe-e2432c6c5c0189186ac3334ee0c946a5",
            "file": "src/app/shared/components/buttons/outline-onlytext-button/outline-onlytext-button.pipe.ts",
            "type": "pipe",
            "description": "",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "value",
                            "type": "IOutlineOnlyTextButtonConfig"
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 8,
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "IOutlineOnlyTextButtonConfig",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "ngname": "outlineOnlytextButton",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\nimport { IOutlineOnlyTextButtonConfig } from '@shared/components/buttons/outline-onlytext-button/outline-onlytext-button.component';\n\n@Pipe({\n  name: 'outlineOnlytextButton',\n})\nexport class OutlineOnlytextButtonPipe implements PipeTransform {\n  transform(value: IOutlineOnlyTextButtonConfig): string {\n    let cls = `${value.color} ${value.borderColor} hover:${value.hoverColor} active:${value.activeColor}`;\n    cls = `${cls} ${sizeSpecificClass[value.buttonSize]}`;\n    return cls;\n  }\n}\n\nconst sizeSpecificClass: Record<string, any> = {\n  sm: 'text-xs px-4 py-2',\n  base: 'text-sm px-6 py-3',\n  lg: 'text-base px-8 py-3',\n};\n"
        },
        {
            "name": "OutlineSelectInputPipe",
            "id": "pipe-OutlineSelectInputPipe-cb33b0fe9deaa4fb257ce299690297a5",
            "file": "src/app/shared/components/inputs/outline-select-input/outline-select-input.pipe.ts",
            "type": "pipe",
            "description": "",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "value",
                            "type": "IOutlineSelectInputConfig"
                        },
                        {
                            "name": "args",
                            "type": "unknown[]",
                            "dotDotDotToken": true
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 8,
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "IOutlineSelectInputConfig",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "args",
                            "type": "unknown[]",
                            "dotDotDotToken": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "ngname": "outlineSelectInput",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\nimport { IOutlineSelectInputConfig } from '@shared/components/inputs/outline-select-input/outline-select-input.component';\n\n@Pipe({\n  name: 'outlineSelectInput',\n})\nexport class OutlineSelectInputPipe implements PipeTransform {\n  transform(value: IOutlineSelectInputConfig, ...args: unknown[]): string {\n    let cls = `${sizeSpecificClass[value.size]}`;\n    return cls;\n  }\n}\n\nconst sizeSpecificClass: Record<string, any> = {\n  sm: 'text-sm px-1 py-1',\n  base: 'text-sm px-1 py-3',\n  lg: 'text-base px-1 py-4',\n};\n"
        }
    ],
    "interfaces": [
        {
            "name": "FormFields",
            "id": "interface-FormFields-6f0ff2e88b3511b0c6727e84be58a763",
            "file": "src/app/shared/components/auth/sign-up/sign-up.component.ts",
            "type": "interface",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { BraveEmailValidator } from '@shared/validators/email.validator';\n\ninterface FormFields {\n  fullName: string;\n  username: string;\n  password: string;\n}\n\n@Component({\n  selector: 'brave-sign-up',\n  templateUrl: './sign-up.component.html',\n  styleUrls: ['./sign-up.component.css'],\n})\nexport class SignUpComponent {\n  signUpForm: FormGroup = {} as FormGroup;\n\n  constructor(private fb: FormBuilder) {\n    this.signUpForm = this.fb.group({\n      fullName: ['', [Validators.required]],\n      username: ['', [Validators.required, BraveEmailValidator]],\n      password: ['', [Validators.required, Validators.minLength(8)]],\n    });\n  }\n\n  get validForm() {\n    return this.signUpForm.valid;\n  }\n  get signUpValues() {\n    return this.signUpForm.value;\n  }\n\n  async signUpUser(formData: FormFields) {\n    if (!this.validForm) {\n      return;\n    }\n\n    const { username, password, fullName } = this.signUpValues;\n\n    // Auth.signUp({\n    //   username,\n    //   password,\n    //   attributes: {\n    //     email: username,\n    //     'custom:fullName': fullName,\n    //   },\n    // })\n    //   .then((_) => {\n    //     // fire fb pixel\n    //     // this.facebookService.fireCompleteRegistration(0.0, 'USD');\n    //     // this.googleService.fireSignUpEvent();\n    //     sessionStorage.setItem('userEmail', username);\n    //     const unconfirmedUserState = {\n    //       userFirstName: 'Guest',\n    //       userAttributes: {\n    //         'custom:firstName': 'Guest',\n    //         'custom:lastName': '',\n    //         'custom:legalFullName': '',\n    //         'custom:dob': '',\n    //         'custom:address': '',\n    //         email: username,\n    //         email_verified: false,\n    //         sub: '',\n    //       },\n    //       isSignedIn: true,\n    //       isAdmin: false,\n    //     };\n    //     this.accountMgmtService.updateUser(unconfirmedUserState); // signed up not confirmed...manually update state.\n    //     this.accountMgmtService.isWaiting$.next(false);\n    //     this.router.navigate(['/userportal/stepone']);\n    //   })\n    //   .catch((err) => {\n    //     this.error = true;\n    //     this.errorMessage = err.message;\n    //     this.accountMgmtService.isWaiting$.next(false);\n    //   });\n  }\n}\n",
            "properties": [
                {
                    "name": "fullName",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "password",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "username",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "IAppData",
            "id": "interface-IAppData-fe18cfb8b5350d71dc8026401f50bcca",
            "file": "src/app/shared/interfaces/app-data.interface.ts",
            "type": "interface",
            "sourceCode": "import { User } from '@shared/models/user.model';\n\nexport interface IAppData {\n  version: string;\n  user: User;\n}\n",
            "properties": [
                {
                    "name": "user",
                    "type": "User",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "version",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "IBaseModalRegularConfig",
            "id": "interface-IBaseModalRegularConfig-4e75336fda9cfe7684da063f9c81fbe5",
            "file": "src/app/shared/components/modals/base-modal-regular/base-modal-regular.component.ts",
            "type": "interface",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\nexport interface IBaseModalRegularConfig {\n  openButtonText: string;\n  title: string;\n  body: string;\n  actionButtonOneText: string;\n  actionButtonTwoText: string;\n}\n\n@Component({\n  selector: 'brave-base-modal-regular',\n  templateUrl: './base-modal-regular.component.html',\n})\nexport class BaseModalRegularComponent implements OnInit {\n  @Input() config: IBaseModalRegularConfig = {\n    openButtonText: 'Open',\n    title: 'Message Title',\n    body: 'Message Text',\n    actionButtonOneText: 'Cancel',\n    actionButtonTwoText: 'Continue',\n  };\n  @Output() actionOne: EventEmitter<any> = new EventEmitter();\n  @Output() actionTwo: EventEmitter<any> = new EventEmitter();\n\n  public showModal = false;\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  toggleModal() {\n    this.showModal = !this.showModal;\n  }\n}\n",
            "properties": [
                {
                    "name": "actionButtonOneText",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "actionButtonTwoText",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "body",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "openButtonText",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "title",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "IBaseModalSmallConfig",
            "id": "interface-IBaseModalSmallConfig-c0c60cde89791bd56210ebe83604fd32",
            "file": "src/app/shared/components/modals/base-modal-small/base-modal-small.component.ts",
            "type": "interface",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\nexport interface IBaseModalSmallConfig {\n  openButtonText: string;\n  title: string;\n  body: string;\n  actionButtonOneText: string;\n  actionButtonTwoText: string;\n}\n\n@Component({\n  selector: 'brave-base-modal-small',\n  templateUrl: './base-modal-small.component.html',\n})\nexport class BaseModalSmallComponent implements OnInit {\n  @Input() config: IBaseModalSmallConfig = {\n    openButtonText: 'Open',\n    title: 'Message Title',\n    body: 'Message Text',\n    actionButtonOneText: 'Cancel',\n    actionButtonTwoText: 'Continue',\n  };\n  @Output() actionOne: EventEmitter<any> = new EventEmitter();\n  @Output() actionTwo: EventEmitter<any> = new EventEmitter();\n\n  public showModal = false;\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  toggleModal() {\n    this.showModal = !this.showModal;\n  }\n}\n",
            "properties": [
                {
                    "name": "actionButtonOneText",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "actionButtonTwoText",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "body",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "openButtonText",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "title",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "IFilledChecktextProgressbarConfig",
            "id": "interface-IFilledChecktextProgressbarConfig-f94fa3d0144db71cb4db52f3fd83c7e1",
            "file": "src/app/shared/components/progressbars/filled-checktext-progressbar/filled-checktext-progressbar.component.ts",
            "type": "interface",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\nexport interface IProgressStep {\n  active: boolean;\n  complete: boolean;\n  name?: string;\n}\nexport interface IFilledChecktextProgressbarConfig {\n  size: string;\n  steps: IProgressStep[];\n}\n\n@Component({\n  selector: 'brave-filled-checktext-progressbar',\n  templateUrl: './filled-checktext-progressbar.component.html',\n})\nexport class FilledChecktextProgressbarComponent {\n  @Input() config: IFilledChecktextProgressbarConfig = {\n    size: 'base',\n    steps: [\n      { active: false, complete: false, name: 'step 1' },\n      { active: false, complete: false, name: 'step 2' },\n      { active: false, complete: false, name: 'step 3' },\n      { active: false, complete: false, name: 'step 4' },\n      { active: false, complete: false, name: 'step 5' },\n    ],\n  };\n\n  public stack: IProgressStep[] = [];\n\n  constructor() {}\n\n  /**\n   * Sets the current step in the stack to complete and moves to next step\n   */\n  completeCurrentStep(): void {\n    let current = this.stack[this.stack.length - 1];\n    if (current) {\n      current = {\n        ...current,\n        complete: true,\n      };\n      this.stack[this.stack.length - 1] = current;\n      this.moveNext();\n    }\n  }\n\n  /**\n   * Sets the next step to active and adds the next step to the stack\n   *  - last step in the stack is the current step\n   * @returns {IProgressStep}\n   */\n  moveNext(): IProgressStep | undefined {\n    this.config.steps[this.stack.length].active = true;\n    this.stack.push(this.config.steps[this.stack.length]);\n    return this.config.steps[this.stack.length];\n  }\n\n  /**\n   * Pops the last step off the stack and sets it to inactive in the steps\n   * @returns {IProgressStep} Of the one removed\n   */\n  moveBack(): IProgressStep | undefined {\n    let step = this.stack.pop();\n    return step;\n  }\n\n  /**\n   * Jumps to the first step\n   * @returns {void}\n   */\n  goToFirst(): void {\n    this.stack = [];\n  }\n}\n",
            "properties": [
                {
                    "name": "size",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "steps",
                    "type": "IProgressStep[]",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "IFilledClosingAlertConfig",
            "id": "interface-IFilledClosingAlertConfig-9c4cd41b4d47d2e182eda26dd493b74c",
            "file": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.component.ts",
            "type": "interface",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\nexport interface IFilledClosingAlertConfig {\n  size: string;\n  backgroundColor: string;\n  color: string;\n  alertTitle: string;\n  alertBody: string;\n}\n\n@Component({\n  selector: 'brave-filled-closing-alert',\n  templateUrl: './filled-closing-alert.component.html',\n})\nexport class FilledClosingAlertComponent implements OnInit {\n  @Input() config: IFilledClosingAlertConfig = {\n    size: 'base',\n    backgroundColor: 'bg-indigo-800',\n    color: 'text-white',\n    alertTitle: 'Alert!',\n    alertBody: 'Something went wrong. Please try again.',\n  };\n  constructor() {}\n  public showAlert: boolean = false;\n  ngOnInit(): void {}\n}\n",
            "properties": [
                {
                    "name": "alertBody",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "alertTitle",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "backgroundColor",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "color",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "size",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "IFilledOnlytextBadgeConfig",
            "id": "interface-IFilledOnlytextBadgeConfig-dc05e6e4c81b5bb0d226982afe75d12d",
            "file": "src/app/shared/components/badges/filled-onlytext-badge/filled-onlytext-badge.component.ts",
            "type": "interface",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\nexport interface IFilledOnlytextBadgeConfig {\n  size: string;\n  backgroundColor: string;\n  color: string;\n}\n\n@Component({\n  selector: 'brave-filled-onlytext-badge',\n  templateUrl: './filled-onlytext-badge.component.html',\n})\nexport class FilledOnlytextBadgeComponent {\n  @Input() config: IFilledOnlytextBadgeConfig = {\n    size: 'base',\n    backgroundColor: 'bg-indigo-200',\n    color: 'text-indigo-800',\n  };\n\n  constructor() {}\n}\n",
            "properties": [
                {
                    "name": "backgroundColor",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "color",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "size",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "IFilledOnlyTextButtonConfig",
            "id": "interface-IFilledOnlyTextButtonConfig-b83344225e4d837e9e4fbd0772c1675f",
            "file": "src/app/shared/components/buttons/filled-onlytext-button/filled-onlytext-button.component.ts",
            "type": "interface",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\nexport interface IFilledOnlyTextButtonConfig {\n  buttonSize: string;\n  backgroundColor: string;\n  activeColor: string;\n  color: string;\n}\n\n@Component({\n  selector: 'brave-filled-onlytext-button',\n  templateUrl: './filled-onlytext-button.component.html',\n})\nexport class FilledOnlytextButtonComponent {\n  /**\n   * @param config Input objctfor button customization\n   * @param config.buttonSize 'sm', 'base', 'lg'\n   * @param config.backgroundColor Any global color \"e.g. bg-indigo-800\"\n   * @param config.activeColor Any global color \"e.g. bg-indigo-900\"\n   * @param config.color Any global color\n   */\n  @Input() config: IFilledOnlyTextButtonConfig = {\n    buttonSize: 'base',\n    backgroundColor: 'bg-indigo-800',\n    activeColor: 'bg-indigo-900',\n    color: 'text-white',\n  };\n\n  @Input() disabled: boolean = false;\n\n  constructor() {}\n}\n",
            "properties": [
                {
                    "name": "activeColor",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "backgroundColor",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "buttonSize",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "color",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "ILinksOnlyTextButtonConfig",
            "id": "interface-ILinksOnlyTextButtonConfig-3f13da1dcb0790cb76c693f0e7585b81",
            "file": "src/app/shared/components/buttons/links-onlytext-button/links-onlytext-button.component.ts",
            "type": "interface",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\nexport interface ILinksOnlyTextButtonConfig {\n  buttonSize: string;\n  color: string;\n}\n\n@Component({\n  selector: 'brave-links-onlytext-button',\n  templateUrl: './links-onlytext-button.component.html',\n})\nexport class LinksOnlytextButtonComponent {\n  /**\n   * @param config Input objctfor button customization\n   * @param config.buttonSize 'sm', 'base', 'lg'\n   * @param config.color Any global color\n   */\n  @Input() config: ILinksOnlyTextButtonConfig = {\n    buttonSize: 'base',\n    color: 'text-indigo-800',\n  };\n\n  constructor() {}\n}\n",
            "properties": [
                {
                    "name": "buttonSize",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "color",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "IMenuDropdown",
            "id": "interface-IMenuDropdown-e5e1cbc1f941d50ca014cf1b1ff21fd0",
            "file": "src/app/shared/components/dropdowns/popdowns/menu-dropdown/menu-dropdown.component.ts",
            "type": "interface",
            "sourceCode": "import { Component, ElementRef, Input, OnInit, ViewChild } from '@angular/core';\nimport { createPopper } from '@popperjs/core';\n\nexport interface ISubmenuItem {\n  submenu: string;\n  route: string;\n  group?: string;\n  break?: boolean;\n}\nexport interface IMenuDropdown {\n  menu: string;\n  submenus?: ISubmenuItem[];\n}\n\n@Component({\n  selector: 'brave-menu-dropdown',\n  templateUrl: './menu-dropdown.component.html',\n})\nexport class MenuDropdownComponent implements OnInit {\n  @Input() config: IMenuDropdown = {\n    menu: 'Menu',\n    submenus: [\n      { submenu: 'Sub 1', route: '/submenu1', group: 'Group 1' },\n      { submenu: 'Sub 2', route: '/submenu2' },\n      { submenu: 'Sub 3', route: '/submenu3' },\n      { submenu: 'Sub 4', route: '/submenu4' },\n      { submenu: 'Sub 5', route: '/submenu5', break: true },\n      { submenu: 'Sub 6', route: '/submenu6', group: 'Group 2' },\n      { submenu: 'Sub 7', route: '/submenu7' },\n      { submenu: 'Sub 8', route: '/submenu8', break: true },\n      { submenu: 'Sub 9', route: '/submenu9', group: 'Group 3' },\n      { submenu: 'Sub 10', route: '/submenu10' },\n    ],\n  };\n  dropdownPopoverShow = false;\n  @ViewChild('btnDropdownRef', { static: false }) btnDropdownRef:\n    | ElementRef\n    | undefined;\n  @ViewChild('popoverDropdownRef', { static: false })\n  popoverDropdownRef: ElementRef | undefined;\n  ngOnInit() {}\n  toggleDropdown(event: { preventDefault: () => void }) {\n    event.preventDefault();\n    if (this.dropdownPopoverShow) {\n      this.dropdownPopoverShow = false;\n    } else {\n      this.dropdownPopoverShow = true;\n      this.createPoppper();\n    }\n  }\n  createPoppper() {\n    createPopper(\n      this.btnDropdownRef?.nativeElement,\n      this.popoverDropdownRef?.nativeElement,\n      {\n        placement: 'bottom-start',\n      }\n    );\n  }\n}\n",
            "properties": [
                {
                    "name": "menu",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "submenus",
                    "type": "ISubmenuItem[]",
                    "optional": true,
                    "description": "",
                    "line": 12
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "IOutlineInputeConfig",
            "id": "interface-IOutlineInputeConfig-f0893c1220987925c0c530d02e57ee89",
            "file": "src/app/shared/components/inputs/outline-input/outline-input.component.ts",
            "type": "interface",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\nexport interface IOutlineInputeConfig {\n  size: string;\n  label: string;\n  type: string;\n  placeholder: string;\n  autocomplete: string;\n  value?: string;\n}\n\n@Component({\n  selector: 'brave-outline-input',\n  templateUrl: './outline-input.component.html',\n})\nexport class OutlineInputComponent implements OnInit {\n  private _required: boolean = false;\n  private _asteriskOverride: boolean = false;\n\n  /**\n   * @param Config Object to pass in component params\n   * @param config.size 'sm', 'base', 'lg'\n   * @param config.label Label text (default: 'Input label')\n   * @param config.placeholder Placeholder text (default: 'Input text')\n   * @param config.autocomplete Any HTML Input autocomplete value\n   * @param config.value (optional) Pre-load the input with a value\n   */\n  @Input() config: IOutlineInputeConfig = {\n    size: 'base',\n    label: 'Input label',\n    type: 'text',\n    placeholder: 'Input text',\n    autocomplete: 'off',\n    value: '',\n  };\n\n  /**\n   * @input Flag to make the input field required for form to be valid\n   */\n  @Input()\n  get required() {\n    return this._required;\n  }\n  set required(value: any) {\n    this._required = !!value;\n  }\n\n  /**\n   * @input Flag to override the display of an asterisk but still make it required\n   */\n  @Input()\n  get asteriskOverride() {\n    return this._asteriskOverride;\n  }\n  set asteriskOverride(value: any) {\n    this._asteriskOverride = !!value;\n  }\n\n  @Output() valueChanged: EventEmitter<any> = new EventEmitter();\n  @Output()\n  onComponentReady: EventEmitter<FormGroup> = new EventEmitter<FormGroup>();\n\n  public componentFormGroup: FormGroup = new FormBuilder().group({\n    input: [''],\n  });\n  public locked: boolean = false;\n  public hidden: boolean = false;\n\n  constructor(private fb: FormBuilder) {}\n\n  ngOnInit(): void {\n    const validators = [];\n    if (this.required) {\n      validators.push(Validators.required);\n    }\n    this.componentFormGroup = this.fb.group({\n      input: [this.config.value, validators],\n    });\n    this.componentFormGroup.controls.input.valueChanges.subscribe((value) =>\n      this.valueChanged.emit(value)\n    );\n    this.onComponentReady.emit(this.componentFormGroup);\n  }\n}\n",
            "properties": [
                {
                    "name": "autocomplete",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "label",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "placeholder",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "size",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "type",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "value",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 10
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "IOutlineOnlyTextButtonConfig",
            "id": "interface-IOutlineOnlyTextButtonConfig-ce3e923fcba436e191c4ced8b5615edb",
            "file": "src/app/shared/components/buttons/outline-onlytext-button/outline-onlytext-button.component.ts",
            "type": "interface",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\nexport interface IOutlineOnlyTextButtonConfig {\n  buttonSize: string;\n  borderColor: string;\n  activeColor: string;\n  hoverColor: string;\n  color: string;\n}\n\n@Component({\n  selector: 'brave-outline-onlytext-button',\n  templateUrl: './outline-onlytext-button.component.html',\n})\nexport class OutlineOnlytextButtonComponent {\n  /**\n   * @param config Input object for button customization\n   * @param config.buttonSize 'sm', 'base', 'lg'\n   * @param config.borderColor Any global color \"e.g. border-indigo-800\"\n   * @param config.activeColor Any global color \"e.g. bg-indigo-900\"\n   * @param config.hoverColor Any global color \"e.g. bg-indigo-800\"\n   * @param config.color Any global color \"e.g. text-indigo-900\"\n   */\n  @Input() config: IOutlineOnlyTextButtonConfig = {\n    buttonSize: 'base',\n    borderColor: 'border-indigo-800',\n    activeColor: 'bg-indigo-900',\n    hoverColor: 'bg-indigo-800',\n    color: 'text-indigo-800',\n  };\n\n  constructor() {}\n}\n",
            "properties": [
                {
                    "name": "activeColor",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "borderColor",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "buttonSize",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "color",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "hoverColor",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "IOutlineOnlyTextItem",
            "id": "interface-IOutlineOnlyTextItem-6b5257d3bff0f580ecb6a326a9cb481f",
            "file": "src/app/shared/components/dropdowns/selects/outline-onlytext-select/outline-onlytext-select.component.ts",
            "type": "interface",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\nexport interface IOutlineOnlyTextItem {\n  value: string;\n}\n\n@Component({\n  selector: 'brave-outline-onlytext-select',\n  templateUrl: './outline-onlytext-select.component.html',\n})\nexport class OutlineOnlytextSelectComponent implements OnInit {\n  @Input() items: IOutlineOnlyTextItem[] = [];\n\n  public selected: IOutlineOnlyTextItem | undefined;\n  public isOpen: boolean = false;\n\n  constructor() {}\n\n  ngOnInit(): void {\n    // this.selected = this.items[0]; // default to first one\n  }\n}\n",
            "properties": [
                {
                    "name": "value",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "IOutlineSelectInputConfig",
            "id": "interface-IOutlineSelectInputConfig-dedf9e0dc7679fc9349f61ca7c50c161",
            "file": "src/app/shared/components/inputs/outline-select-input/outline-select-input.component.ts",
            "type": "interface",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\nexport interface IOutlineSelectInputConfig {\n  size: string;\n  label: string;\n  options: string[];\n}\n\n@Component({\n  selector: 'brave-outline-select-input',\n  templateUrl: './outline-select-input.component.html',\n})\nexport class OutlineSelectInputComponent implements OnInit {\n  private _required: boolean = false;\n  private _asteriskOverride: boolean = false;\n  public selected: string | undefined;\n  public isOpen: boolean = false;\n\n  /**\n   * @param Config Object to pass in component params\n   * @param config.size 'sm', 'base', 'lg'\n   * @param config.label Label text (default: 'Input label')\n   * @param config.options select options to choose from\n   */\n  @Input() config: IOutlineSelectInputConfig = {\n    size: 'base',\n    label: 'Input label',\n    options: ['one', 'two', 'three'],\n  };\n\n  /**\n   * @input Flag to make the input field required for form to be valid\n   */\n  @Input()\n  get required() {\n    return this._required;\n  }\n  set required(value: any) {\n    this._required = !!value;\n  }\n\n  /**\n   * @input Flag to override the display of an asterisk but still make it required\n   */\n  @Input()\n  get asteriskOverride() {\n    return this._asteriskOverride;\n  }\n  set asteriskOverride(value: any) {\n    this._asteriskOverride = !!value;\n  }\n\n  @Output() valueChanged: EventEmitter<any> = new EventEmitter();\n  @Output()\n  onComponentReady: EventEmitter<FormGroup> = new EventEmitter<FormGroup>();\n\n  public componentFormGroup: FormGroup = new FormBuilder().group({\n    input: [''],\n  });\n  public locked: boolean = false;\n  public hidden: boolean = false;\n\n  constructor(private fb: FormBuilder) {}\n\n  ngOnInit(): void {\n    const validators = [];\n    if (this.required) {\n      validators.push(Validators.required);\n    }\n    this.componentFormGroup = this.fb.group({\n      input: [this.config.label, validators], // default to first item in array\n    });\n    this.componentFormGroup.controls.input.valueChanges.subscribe((value) => {\n      this.valueChanged.emit(value);\n    });\n    this.onComponentReady.emit(this.componentFormGroup);\n  }\n\n  /**\n   * Toggles open and close select options\n   * @param e MouseEvent to stop propagation.\n   */\n  toggleOpen(e: MouseEvent): void {\n    e.stopPropagation();\n    this.isOpen = !this.isOpen;\n  }\n\n  /**\n   * Updates the form with the selected option value\n   * @param idx index of the select option clicked on\n   */\n  updateForm(idx: number): void {\n    this.componentFormGroup.setValue({ input: this.config.options[idx] });\n  }\n}\n",
            "properties": [
                {
                    "name": "label",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "options",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "size",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "IProgressStep",
            "id": "interface-IProgressStep-f94fa3d0144db71cb4db52f3fd83c7e1",
            "file": "src/app/shared/components/progressbars/filled-checktext-progressbar/filled-checktext-progressbar.component.ts",
            "type": "interface",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\nexport interface IProgressStep {\n  active: boolean;\n  complete: boolean;\n  name?: string;\n}\nexport interface IFilledChecktextProgressbarConfig {\n  size: string;\n  steps: IProgressStep[];\n}\n\n@Component({\n  selector: 'brave-filled-checktext-progressbar',\n  templateUrl: './filled-checktext-progressbar.component.html',\n})\nexport class FilledChecktextProgressbarComponent {\n  @Input() config: IFilledChecktextProgressbarConfig = {\n    size: 'base',\n    steps: [\n      { active: false, complete: false, name: 'step 1' },\n      { active: false, complete: false, name: 'step 2' },\n      { active: false, complete: false, name: 'step 3' },\n      { active: false, complete: false, name: 'step 4' },\n      { active: false, complete: false, name: 'step 5' },\n    ],\n  };\n\n  public stack: IProgressStep[] = [];\n\n  constructor() {}\n\n  /**\n   * Sets the current step in the stack to complete and moves to next step\n   */\n  completeCurrentStep(): void {\n    let current = this.stack[this.stack.length - 1];\n    if (current) {\n      current = {\n        ...current,\n        complete: true,\n      };\n      this.stack[this.stack.length - 1] = current;\n      this.moveNext();\n    }\n  }\n\n  /**\n   * Sets the next step to active and adds the next step to the stack\n   *  - last step in the stack is the current step\n   * @returns {IProgressStep}\n   */\n  moveNext(): IProgressStep | undefined {\n    this.config.steps[this.stack.length].active = true;\n    this.stack.push(this.config.steps[this.stack.length]);\n    return this.config.steps[this.stack.length];\n  }\n\n  /**\n   * Pops the last step off the stack and sets it to inactive in the steps\n   * @returns {IProgressStep} Of the one removed\n   */\n  moveBack(): IProgressStep | undefined {\n    let step = this.stack.pop();\n    return step;\n  }\n\n  /**\n   * Jumps to the first step\n   * @returns {void}\n   */\n  goToFirst(): void {\n    this.stack = [];\n  }\n}\n",
            "properties": [
                {
                    "name": "active",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "complete",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "name",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "ISubmenuItem",
            "id": "interface-ISubmenuItem-e5e1cbc1f941d50ca014cf1b1ff21fd0",
            "file": "src/app/shared/components/dropdowns/popdowns/menu-dropdown/menu-dropdown.component.ts",
            "type": "interface",
            "sourceCode": "import { Component, ElementRef, Input, OnInit, ViewChild } from '@angular/core';\nimport { createPopper } from '@popperjs/core';\n\nexport interface ISubmenuItem {\n  submenu: string;\n  route: string;\n  group?: string;\n  break?: boolean;\n}\nexport interface IMenuDropdown {\n  menu: string;\n  submenus?: ISubmenuItem[];\n}\n\n@Component({\n  selector: 'brave-menu-dropdown',\n  templateUrl: './menu-dropdown.component.html',\n})\nexport class MenuDropdownComponent implements OnInit {\n  @Input() config: IMenuDropdown = {\n    menu: 'Menu',\n    submenus: [\n      { submenu: 'Sub 1', route: '/submenu1', group: 'Group 1' },\n      { submenu: 'Sub 2', route: '/submenu2' },\n      { submenu: 'Sub 3', route: '/submenu3' },\n      { submenu: 'Sub 4', route: '/submenu4' },\n      { submenu: 'Sub 5', route: '/submenu5', break: true },\n      { submenu: 'Sub 6', route: '/submenu6', group: 'Group 2' },\n      { submenu: 'Sub 7', route: '/submenu7' },\n      { submenu: 'Sub 8', route: '/submenu8', break: true },\n      { submenu: 'Sub 9', route: '/submenu9', group: 'Group 3' },\n      { submenu: 'Sub 10', route: '/submenu10' },\n    ],\n  };\n  dropdownPopoverShow = false;\n  @ViewChild('btnDropdownRef', { static: false }) btnDropdownRef:\n    | ElementRef\n    | undefined;\n  @ViewChild('popoverDropdownRef', { static: false })\n  popoverDropdownRef: ElementRef | undefined;\n  ngOnInit() {}\n  toggleDropdown(event: { preventDefault: () => void }) {\n    event.preventDefault();\n    if (this.dropdownPopoverShow) {\n      this.dropdownPopoverShow = false;\n    } else {\n      this.dropdownPopoverShow = true;\n      this.createPoppper();\n    }\n  }\n  createPoppper() {\n    createPopper(\n      this.btnDropdownRef?.nativeElement,\n      this.popoverDropdownRef?.nativeElement,\n      {\n        placement: 'bottom-start',\n      }\n    );\n  }\n}\n",
            "properties": [
                {
                    "name": "break",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "group",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "route",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "submenu",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "IUser",
            "id": "interface-IUser-243d019f88295d4f10c1096134ccf32a",
            "file": "src/app/shared/interfaces/user.interface.ts",
            "type": "interface",
            "sourceCode": "export interface IUser {\n  id: string;\n  signedIn: boolean;\n}\n",
            "properties": [
                {
                    "name": "id",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "signedIn",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "NewUser",
            "id": "interface-NewUser-04e7db391f65b7e34ac280666a1b3ca7",
            "file": "src/app/shared/services/auth/auth.service.ts",
            "type": "interface",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport Auth, { CognitoHostedUIIdentityProvider } from '@aws-amplify/auth';\nimport { Hub, ICredentials } from '@aws-amplify/core';\nimport { Subject, Observable } from 'rxjs';\nimport { CognitoUser, ISignUpResult } from 'amazon-cognito-identity-js';\nimport { Store } from '@ngxs/store';\nimport * as AppDataActions from '@store/app-data/app-data.actions';\nimport { AppData } from '@shared/models/app-data.model';\nimport { User } from '@shared/models/user.model';\n\nexport interface NewUser {\n  username: string;\n  password: string;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  private authState: Subject<CognitoUser | any> = new Subject<\n    CognitoUser | any\n  >();\n  authState$: Observable<CognitoUser | any> = this.authState.asObservable();\n\n  public static SIGN_IN = 'signIn';\n  public static SIGN_OUT = 'signOut';\n  public static FACEBOOK = CognitoHostedUIIdentityProvider.Facebook;\n  public static GOOGLE = CognitoHostedUIIdentityProvider.Google;\n\n  constructor(private store: Store) {\n    Hub.listen('auth', (data) => {\n      const { channel, payload } = data;\n      console.log('auth change', channel, payload);\n      switch (payload.event) {\n        case 'signIn':\n          this.authState.next(payload.data);\n          let user: CognitoUser = payload.data;\n          let appData = new AppData(new User('abc', true));\n          this.store.dispatch(new AppDataActions.Add(appData));\n          break;\n        case 'signOut':\n          // handle sign out\n          break;\n        default:\n          // do something by default\n          break;\n      }\n    });\n  }\n\n  /**\n   * Cognito sign up method\n   * @param user\n   * @returns\n   */\n  signUp(user: NewUser): Promise<ISignUpResult> {\n    return Auth.signUp({\n      username: user.username,\n      password: user.password,\n      attributes: {\n        email: user.username,\n      },\n    });\n  }\n\n  /**\n   * Cognito sign in method\n   * @param username\n   * @param password\n   * @returns\n   */\n  signIn(username: string, password: string): Promise<CognitoUser | any> {\n    return new Promise((resolve, reject) => {\n      Auth.signIn(username, password)\n        .then((user: CognitoUser | any) => {\n          resolve(user);\n        })\n        .catch((error: any) => reject(error));\n    });\n  }\n\n  /**\n   * Simple sign out method\n   * @returns\n   */\n  signOut(): Promise<any> {\n    return Auth.signOut();\n  }\n\n  /**\n   * Social signin (supports facebook and google)\n   * @param provider\n   * @returns\n   */\n  socialSignIn(\n    provider: CognitoHostedUIIdentityProvider\n  ): Promise<ICredentials> {\n    return Auth.federatedSignIn({\n      provider: provider,\n    });\n  }\n\n  resendSignUp(email: string): Promise<string> | undefined {\n    return email ? Auth.resendSignUp(email) : undefined;\n  }\n\n  forgotPasswordSubmit(\n    email: string,\n    code: string,\n    pw: string\n  ): Promise<void> | undefined {\n    return email\n      ? Auth.forgotPasswordSubmit(email.toLowerCase(), code, pw)\n      : undefined;\n  }\n\n  async refreshAuthState(user?: CognitoUser): Promise<void> {\n    if (user) {\n      this.authState.next(user);\n      return;\n    }\n    try {\n      const user = await Auth.currentAuthenticatedUser();\n      this.authState.next(user);\n    } catch (err) {\n      const unconfirmed = await Auth.currentCredentials();\n      this.authState.next(null);\n    }\n  }\n\n  async getAuthTokens(): Promise<string> {\n    try {\n      const user: CognitoUser = await Auth.currentAuthenticatedUser();\n      let session = user.getSignInUserSession();\n      return session ? session.getIdToken().getJwtToken() : '';\n    } catch (err) {\n      return '';\n    }\n  }\n\n  getAuthState(): Observable<CognitoUser | any> {\n    return this.authState$;\n  }\n}\n",
            "properties": [
                {
                    "name": "password",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "username",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "SubscriptionResponse",
            "id": "interface-SubscriptionResponse-0fd36e673c119ab239d440ba68c6143a",
            "file": "src/app/shared/services/aws/api.service.ts",
            "type": "interface",
            "sourceCode": "import { Injectable } from \"@angular/core\";\nimport API, { graphqlOperation, GraphQLResult } from \"@aws-amplify/api-graphql\";\nimport { Observable } from \"zen-observable-ts\";\n\nexport interface SubscriptionResponse<T> {\n  value: GraphQLResult<T>;\n}\n\nexport type CreateBlogInput = {\n  id?: string | null;\n  name: string;\n  _version?: number | null;\n};\n\nexport type ModelBlogConditionInput = {\n  name?: ModelStringInput | null;\n  and?: Array<ModelBlogConditionInput | null> | null;\n  or?: Array<ModelBlogConditionInput | null> | null;\n  not?: ModelBlogConditionInput | null;\n};\n\nexport type ModelStringInput = {\n  ne?: string | null;\n  eq?: string | null;\n  le?: string | null;\n  lt?: string | null;\n  ge?: string | null;\n  gt?: string | null;\n  contains?: string | null;\n  notContains?: string | null;\n  between?: Array<string | null> | null;\n  beginsWith?: string | null;\n  attributeExists?: boolean | null;\n  attributeType?: ModelAttributeTypes | null;\n  size?: ModelSizeInput | null;\n};\n\nexport enum ModelAttributeTypes {\n  binary = \"binary\",\n  binarySet = \"binarySet\",\n  bool = \"bool\",\n  list = \"list\",\n  map = \"map\",\n  number = \"number\",\n  numberSet = \"numberSet\",\n  string = \"string\",\n  stringSet = \"stringSet\",\n  _null = \"_null\"\n}\n\nexport type ModelSizeInput = {\n  ne?: number | null;\n  eq?: number | null;\n  le?: number | null;\n  lt?: number | null;\n  ge?: number | null;\n  gt?: number | null;\n  between?: Array<number | null> | null;\n};\n\nexport type Blog = {\n  __typename: \"Blog\";\n  id?: string;\n  name?: string;\n  posts?: ModelPostConnection;\n  _version?: number;\n  _deleted?: boolean | null;\n  _lastChangedAt?: number;\n  createdAt?: string;\n  updatedAt?: string;\n};\n\nexport type ModelPostConnection = {\n  __typename: \"ModelPostConnection\";\n  items?: Array<Post | null> | null;\n  nextToken?: string | null;\n  startedAt?: number | null;\n};\n\nexport type Post = {\n  __typename: \"Post\";\n  id?: string;\n  title?: string;\n  blogID?: string;\n  blog?: Blog;\n  comments?: ModelCommentConnection;\n  _version?: number;\n  _deleted?: boolean | null;\n  _lastChangedAt?: number;\n  createdAt?: string;\n  updatedAt?: string;\n};\n\nexport type ModelCommentConnection = {\n  __typename: \"ModelCommentConnection\";\n  items?: Array<Comment | null> | null;\n  nextToken?: string | null;\n  startedAt?: number | null;\n};\n\nexport type Comment = {\n  __typename: \"Comment\";\n  id?: string;\n  postID?: string;\n  post?: Post;\n  content?: string;\n  _version?: number;\n  _deleted?: boolean | null;\n  _lastChangedAt?: number;\n  createdAt?: string;\n  updatedAt?: string;\n};\n\nexport type UpdateBlogInput = {\n  id: string;\n  name?: string | null;\n  _version?: number | null;\n};\n\nexport type DeleteBlogInput = {\n  id?: string | null;\n  _version?: number | null;\n};\n\nexport type CreatePostInput = {\n  id?: string | null;\n  title: string;\n  blogID: string;\n  _version?: number | null;\n};\n\nexport type ModelPostConditionInput = {\n  title?: ModelStringInput | null;\n  blogID?: ModelIDInput | null;\n  and?: Array<ModelPostConditionInput | null> | null;\n  or?: Array<ModelPostConditionInput | null> | null;\n  not?: ModelPostConditionInput | null;\n};\n\nexport type ModelIDInput = {\n  ne?: string | null;\n  eq?: string | null;\n  le?: string | null;\n  lt?: string | null;\n  ge?: string | null;\n  gt?: string | null;\n  contains?: string | null;\n  notContains?: string | null;\n  between?: Array<string | null> | null;\n  beginsWith?: string | null;\n  attributeExists?: boolean | null;\n  attributeType?: ModelAttributeTypes | null;\n  size?: ModelSizeInput | null;\n};\n\nexport type UpdatePostInput = {\n  id: string;\n  title?: string | null;\n  blogID?: string | null;\n  _version?: number | null;\n};\n\nexport type DeletePostInput = {\n  id?: string | null;\n  _version?: number | null;\n};\n\nexport type CreateCommentInput = {\n  id?: string | null;\n  postID: string;\n  content: string;\n  _version?: number | null;\n};\n\nexport type ModelCommentConditionInput = {\n  postID?: ModelIDInput | null;\n  content?: ModelStringInput | null;\n  and?: Array<ModelCommentConditionInput | null> | null;\n  or?: Array<ModelCommentConditionInput | null> | null;\n  not?: ModelCommentConditionInput | null;\n};\n\nexport type UpdateCommentInput = {\n  id: string;\n  postID?: string | null;\n  content?: string | null;\n  _version?: number | null;\n};\n\nexport type DeleteCommentInput = {\n  id?: string | null;\n  _version?: number | null;\n};\n\nexport type ModelBlogFilterInput = {\n  id?: ModelIDInput | null;\n  name?: ModelStringInput | null;\n  and?: Array<ModelBlogFilterInput | null> | null;\n  or?: Array<ModelBlogFilterInput | null> | null;\n  not?: ModelBlogFilterInput | null;\n};\n\nexport type ModelBlogConnection = {\n  __typename: \"ModelBlogConnection\";\n  items?: Array<Blog | null> | null;\n  nextToken?: string | null;\n  startedAt?: number | null;\n};\n\nexport type ModelPostFilterInput = {\n  id?: ModelIDInput | null;\n  title?: ModelStringInput | null;\n  blogID?: ModelIDInput | null;\n  and?: Array<ModelPostFilterInput | null> | null;\n  or?: Array<ModelPostFilterInput | null> | null;\n  not?: ModelPostFilterInput | null;\n};\n\nexport type ModelCommentFilterInput = {\n  id?: ModelIDInput | null;\n  postID?: ModelIDInput | null;\n  content?: ModelStringInput | null;\n  and?: Array<ModelCommentFilterInput | null> | null;\n  or?: Array<ModelCommentFilterInput | null> | null;\n  not?: ModelCommentFilterInput | null;\n};\n\nexport type CreateBlogMutation = {\n  __typename: \"Blog\";\n  id: string;\n  name: string;\n  posts?: {\n    __typename: \"ModelPostConnection\";\n    items?: Array<{\n      __typename: \"Post\";\n      id: string;\n      title: string;\n      blogID: string;\n      _version: number;\n      _deleted?: boolean | null;\n      _lastChangedAt: number;\n      createdAt: string;\n      updatedAt: string;\n    } | null> | null;\n    nextToken?: string | null;\n    startedAt?: number | null;\n  } | null;\n  _version: number;\n  _deleted?: boolean | null;\n  _lastChangedAt: number;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type UpdateBlogMutation = {\n  __typename: \"Blog\";\n  id: string;\n  name: string;\n  posts?: {\n    __typename: \"ModelPostConnection\";\n    items?: Array<{\n      __typename: \"Post\";\n      id: string;\n      title: string;\n      blogID: string;\n      _version: number;\n      _deleted?: boolean | null;\n      _lastChangedAt: number;\n      createdAt: string;\n      updatedAt: string;\n    } | null> | null;\n    nextToken?: string | null;\n    startedAt?: number | null;\n  } | null;\n  _version: number;\n  _deleted?: boolean | null;\n  _lastChangedAt: number;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type DeleteBlogMutation = {\n  __typename: \"Blog\";\n  id: string;\n  name: string;\n  posts?: {\n    __typename: \"ModelPostConnection\";\n    items?: Array<{\n      __typename: \"Post\";\n      id: string;\n      title: string;\n      blogID: string;\n      _version: number;\n      _deleted?: boolean | null;\n      _lastChangedAt: number;\n      createdAt: string;\n      updatedAt: string;\n    } | null> | null;\n    nextToken?: string | null;\n    startedAt?: number | null;\n  } | null;\n  _version: number;\n  _deleted?: boolean | null;\n  _lastChangedAt: number;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type CreatePostMutation = {\n  __typename: \"Post\";\n  id: string;\n  title: string;\n  blogID: string;\n  blog?: {\n    __typename: \"Blog\";\n    id: string;\n    name: string;\n    posts?: {\n      __typename: \"ModelPostConnection\";\n      nextToken?: string | null;\n      startedAt?: number | null;\n    } | null;\n    _version: number;\n    _deleted?: boolean | null;\n    _lastChangedAt: number;\n    createdAt: string;\n    updatedAt: string;\n  } | null;\n  comments?: {\n    __typename: \"ModelCommentConnection\";\n    items?: Array<{\n      __typename: \"Comment\";\n      id: string;\n      postID: string;\n      content: string;\n      _version: number;\n      _deleted?: boolean | null;\n      _lastChangedAt: number;\n      createdAt: string;\n      updatedAt: string;\n    } | null> | null;\n    nextToken?: string | null;\n    startedAt?: number | null;\n  } | null;\n  _version: number;\n  _deleted?: boolean | null;\n  _lastChangedAt: number;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type UpdatePostMutation = {\n  __typename: \"Post\";\n  id: string;\n  title: string;\n  blogID: string;\n  blog?: {\n    __typename: \"Blog\";\n    id: string;\n    name: string;\n    posts?: {\n      __typename: \"ModelPostConnection\";\n      nextToken?: string | null;\n      startedAt?: number | null;\n    } | null;\n    _version: number;\n    _deleted?: boolean | null;\n    _lastChangedAt: number;\n    createdAt: string;\n    updatedAt: string;\n  } | null;\n  comments?: {\n    __typename: \"ModelCommentConnection\";\n    items?: Array<{\n      __typename: \"Comment\";\n      id: string;\n      postID: string;\n      content: string;\n      _version: number;\n      _deleted?: boolean | null;\n      _lastChangedAt: number;\n      createdAt: string;\n      updatedAt: string;\n    } | null> | null;\n    nextToken?: string | null;\n    startedAt?: number | null;\n  } | null;\n  _version: number;\n  _deleted?: boolean | null;\n  _lastChangedAt: number;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type DeletePostMutation = {\n  __typename: \"Post\";\n  id: string;\n  title: string;\n  blogID: string;\n  blog?: {\n    __typename: \"Blog\";\n    id: string;\n    name: string;\n    posts?: {\n      __typename: \"ModelPostConnection\";\n      nextToken?: string | null;\n      startedAt?: number | null;\n    } | null;\n    _version: number;\n    _deleted?: boolean | null;\n    _lastChangedAt: number;\n    createdAt: string;\n    updatedAt: string;\n  } | null;\n  comments?: {\n    __typename: \"ModelCommentConnection\";\n    items?: Array<{\n      __typename: \"Comment\";\n      id: string;\n      postID: string;\n      content: string;\n      _version: number;\n      _deleted?: boolean | null;\n      _lastChangedAt: number;\n      createdAt: string;\n      updatedAt: string;\n    } | null> | null;\n    nextToken?: string | null;\n    startedAt?: number | null;\n  } | null;\n  _version: number;\n  _deleted?: boolean | null;\n  _lastChangedAt: number;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type CreateCommentMutation = {\n  __typename: \"Comment\";\n  id: string;\n  postID: string;\n  post?: {\n    __typename: \"Post\";\n    id: string;\n    title: string;\n    blogID: string;\n    blog?: {\n      __typename: \"Blog\";\n      id: string;\n      name: string;\n      _version: number;\n      _deleted?: boolean | null;\n      _lastChangedAt: number;\n      createdAt: string;\n      updatedAt: string;\n    } | null;\n    comments?: {\n      __typename: \"ModelCommentConnection\";\n      nextToken?: string | null;\n      startedAt?: number | null;\n    } | null;\n    _version: number;\n    _deleted?: boolean | null;\n    _lastChangedAt: number;\n    createdAt: string;\n    updatedAt: string;\n  } | null;\n  content: string;\n  _version: number;\n  _deleted?: boolean | null;\n  _lastChangedAt: number;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type UpdateCommentMutation = {\n  __typename: \"Comment\";\n  id: string;\n  postID: string;\n  post?: {\n    __typename: \"Post\";\n    id: string;\n    title: string;\n    blogID: string;\n    blog?: {\n      __typename: \"Blog\";\n      id: string;\n      name: string;\n      _version: number;\n      _deleted?: boolean | null;\n      _lastChangedAt: number;\n      createdAt: string;\n      updatedAt: string;\n    } | null;\n    comments?: {\n      __typename: \"ModelCommentConnection\";\n      nextToken?: string | null;\n      startedAt?: number | null;\n    } | null;\n    _version: number;\n    _deleted?: boolean | null;\n    _lastChangedAt: number;\n    createdAt: string;\n    updatedAt: string;\n  } | null;\n  content: string;\n  _version: number;\n  _deleted?: boolean | null;\n  _lastChangedAt: number;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type DeleteCommentMutation = {\n  __typename: \"Comment\";\n  id: string;\n  postID: string;\n  post?: {\n    __typename: \"Post\";\n    id: string;\n    title: string;\n    blogID: string;\n    blog?: {\n      __typename: \"Blog\";\n      id: string;\n      name: string;\n      _version: number;\n      _deleted?: boolean | null;\n      _lastChangedAt: number;\n      createdAt: string;\n      updatedAt: string;\n    } | null;\n    comments?: {\n      __typename: \"ModelCommentConnection\";\n      nextToken?: string | null;\n      startedAt?: number | null;\n    } | null;\n    _version: number;\n    _deleted?: boolean | null;\n    _lastChangedAt: number;\n    createdAt: string;\n    updatedAt: string;\n  } | null;\n  content: string;\n  _version: number;\n  _deleted?: boolean | null;\n  _lastChangedAt: number;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type SyncBlogsQuery = {\n  __typename: \"ModelBlogConnection\";\n  items?: Array<{\n    __typename: \"Blog\";\n    id: string;\n    name: string;\n    posts?: {\n      __typename: \"ModelPostConnection\";\n      nextToken?: string | null;\n      startedAt?: number | null;\n    } | null;\n    _version: number;\n    _deleted?: boolean | null;\n    _lastChangedAt: number;\n    createdAt: string;\n    updatedAt: string;\n  } | null> | null;\n  nextToken?: string | null;\n  startedAt?: number | null;\n};\n\nexport type GetBlogQuery = {\n  __typename: \"Blog\";\n  id: string;\n  name: string;\n  posts?: {\n    __typename: \"ModelPostConnection\";\n    items?: Array<{\n      __typename: \"Post\";\n      id: string;\n      title: string;\n      blogID: string;\n      _version: number;\n      _deleted?: boolean | null;\n      _lastChangedAt: number;\n      createdAt: string;\n      updatedAt: string;\n    } | null> | null;\n    nextToken?: string | null;\n    startedAt?: number | null;\n  } | null;\n  _version: number;\n  _deleted?: boolean | null;\n  _lastChangedAt: number;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type ListBlogsQuery = {\n  __typename: \"ModelBlogConnection\";\n  items?: Array<{\n    __typename: \"Blog\";\n    id: string;\n    name: string;\n    posts?: {\n      __typename: \"ModelPostConnection\";\n      nextToken?: string | null;\n      startedAt?: number | null;\n    } | null;\n    _version: number;\n    _deleted?: boolean | null;\n    _lastChangedAt: number;\n    createdAt: string;\n    updatedAt: string;\n  } | null> | null;\n  nextToken?: string | null;\n  startedAt?: number | null;\n};\n\nexport type SyncPostsQuery = {\n  __typename: \"ModelPostConnection\";\n  items?: Array<{\n    __typename: \"Post\";\n    id: string;\n    title: string;\n    blogID: string;\n    blog?: {\n      __typename: \"Blog\";\n      id: string;\n      name: string;\n      _version: number;\n      _deleted?: boolean | null;\n      _lastChangedAt: number;\n      createdAt: string;\n      updatedAt: string;\n    } | null;\n    comments?: {\n      __typename: \"ModelCommentConnection\";\n      nextToken?: string | null;\n      startedAt?: number | null;\n    } | null;\n    _version: number;\n    _deleted?: boolean | null;\n    _lastChangedAt: number;\n    createdAt: string;\n    updatedAt: string;\n  } | null> | null;\n  nextToken?: string | null;\n  startedAt?: number | null;\n};\n\nexport type GetPostQuery = {\n  __typename: \"Post\";\n  id: string;\n  title: string;\n  blogID: string;\n  blog?: {\n    __typename: \"Blog\";\n    id: string;\n    name: string;\n    posts?: {\n      __typename: \"ModelPostConnection\";\n      nextToken?: string | null;\n      startedAt?: number | null;\n    } | null;\n    _version: number;\n    _deleted?: boolean | null;\n    _lastChangedAt: number;\n    createdAt: string;\n    updatedAt: string;\n  } | null;\n  comments?: {\n    __typename: \"ModelCommentConnection\";\n    items?: Array<{\n      __typename: \"Comment\";\n      id: string;\n      postID: string;\n      content: string;\n      _version: number;\n      _deleted?: boolean | null;\n      _lastChangedAt: number;\n      createdAt: string;\n      updatedAt: string;\n    } | null> | null;\n    nextToken?: string | null;\n    startedAt?: number | null;\n  } | null;\n  _version: number;\n  _deleted?: boolean | null;\n  _lastChangedAt: number;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type ListPostsQuery = {\n  __typename: \"ModelPostConnection\";\n  items?: Array<{\n    __typename: \"Post\";\n    id: string;\n    title: string;\n    blogID: string;\n    blog?: {\n      __typename: \"Blog\";\n      id: string;\n      name: string;\n      _version: number;\n      _deleted?: boolean | null;\n      _lastChangedAt: number;\n      createdAt: string;\n      updatedAt: string;\n    } | null;\n    comments?: {\n      __typename: \"ModelCommentConnection\";\n      nextToken?: string | null;\n      startedAt?: number | null;\n    } | null;\n    _version: number;\n    _deleted?: boolean | null;\n    _lastChangedAt: number;\n    createdAt: string;\n    updatedAt: string;\n  } | null> | null;\n  nextToken?: string | null;\n  startedAt?: number | null;\n};\n\nexport type SyncCommentsQuery = {\n  __typename: \"ModelCommentConnection\";\n  items?: Array<{\n    __typename: \"Comment\";\n    id: string;\n    postID: string;\n    post?: {\n      __typename: \"Post\";\n      id: string;\n      title: string;\n      blogID: string;\n      _version: number;\n      _deleted?: boolean | null;\n      _lastChangedAt: number;\n      createdAt: string;\n      updatedAt: string;\n    } | null;\n    content: string;\n    _version: number;\n    _deleted?: boolean | null;\n    _lastChangedAt: number;\n    createdAt: string;\n    updatedAt: string;\n  } | null> | null;\n  nextToken?: string | null;\n  startedAt?: number | null;\n};\n\nexport type GetCommentQuery = {\n  __typename: \"Comment\";\n  id: string;\n  postID: string;\n  post?: {\n    __typename: \"Post\";\n    id: string;\n    title: string;\n    blogID: string;\n    blog?: {\n      __typename: \"Blog\";\n      id: string;\n      name: string;\n      _version: number;\n      _deleted?: boolean | null;\n      _lastChangedAt: number;\n      createdAt: string;\n      updatedAt: string;\n    } | null;\n    comments?: {\n      __typename: \"ModelCommentConnection\";\n      nextToken?: string | null;\n      startedAt?: number | null;\n    } | null;\n    _version: number;\n    _deleted?: boolean | null;\n    _lastChangedAt: number;\n    createdAt: string;\n    updatedAt: string;\n  } | null;\n  content: string;\n  _version: number;\n  _deleted?: boolean | null;\n  _lastChangedAt: number;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type ListCommentsQuery = {\n  __typename: \"ModelCommentConnection\";\n  items?: Array<{\n    __typename: \"Comment\";\n    id: string;\n    postID: string;\n    post?: {\n      __typename: \"Post\";\n      id: string;\n      title: string;\n      blogID: string;\n      _version: number;\n      _deleted?: boolean | null;\n      _lastChangedAt: number;\n      createdAt: string;\n      updatedAt: string;\n    } | null;\n    content: string;\n    _version: number;\n    _deleted?: boolean | null;\n    _lastChangedAt: number;\n    createdAt: string;\n    updatedAt: string;\n  } | null> | null;\n  nextToken?: string | null;\n  startedAt?: number | null;\n};\n\nexport type OnCreateBlogSubscription = {\n  __typename: \"Blog\";\n  id: string;\n  name: string;\n  posts?: {\n    __typename: \"ModelPostConnection\";\n    items?: Array<{\n      __typename: \"Post\";\n      id: string;\n      title: string;\n      blogID: string;\n      _version: number;\n      _deleted?: boolean | null;\n      _lastChangedAt: number;\n      createdAt: string;\n      updatedAt: string;\n    } | null> | null;\n    nextToken?: string | null;\n    startedAt?: number | null;\n  } | null;\n  _version: number;\n  _deleted?: boolean | null;\n  _lastChangedAt: number;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type OnUpdateBlogSubscription = {\n  __typename: \"Blog\";\n  id: string;\n  name: string;\n  posts?: {\n    __typename: \"ModelPostConnection\";\n    items?: Array<{\n      __typename: \"Post\";\n      id: string;\n      title: string;\n      blogID: string;\n      _version: number;\n      _deleted?: boolean | null;\n      _lastChangedAt: number;\n      createdAt: string;\n      updatedAt: string;\n    } | null> | null;\n    nextToken?: string | null;\n    startedAt?: number | null;\n  } | null;\n  _version: number;\n  _deleted?: boolean | null;\n  _lastChangedAt: number;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type OnDeleteBlogSubscription = {\n  __typename: \"Blog\";\n  id: string;\n  name: string;\n  posts?: {\n    __typename: \"ModelPostConnection\";\n    items?: Array<{\n      __typename: \"Post\";\n      id: string;\n      title: string;\n      blogID: string;\n      _version: number;\n      _deleted?: boolean | null;\n      _lastChangedAt: number;\n      createdAt: string;\n      updatedAt: string;\n    } | null> | null;\n    nextToken?: string | null;\n    startedAt?: number | null;\n  } | null;\n  _version: number;\n  _deleted?: boolean | null;\n  _lastChangedAt: number;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type OnCreatePostSubscription = {\n  __typename: \"Post\";\n  id: string;\n  title: string;\n  blogID: string;\n  blog?: {\n    __typename: \"Blog\";\n    id: string;\n    name: string;\n    posts?: {\n      __typename: \"ModelPostConnection\";\n      nextToken?: string | null;\n      startedAt?: number | null;\n    } | null;\n    _version: number;\n    _deleted?: boolean | null;\n    _lastChangedAt: number;\n    createdAt: string;\n    updatedAt: string;\n  } | null;\n  comments?: {\n    __typename: \"ModelCommentConnection\";\n    items?: Array<{\n      __typename: \"Comment\";\n      id: string;\n      postID: string;\n      content: string;\n      _version: number;\n      _deleted?: boolean | null;\n      _lastChangedAt: number;\n      createdAt: string;\n      updatedAt: string;\n    } | null> | null;\n    nextToken?: string | null;\n    startedAt?: number | null;\n  } | null;\n  _version: number;\n  _deleted?: boolean | null;\n  _lastChangedAt: number;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type OnUpdatePostSubscription = {\n  __typename: \"Post\";\n  id: string;\n  title: string;\n  blogID: string;\n  blog?: {\n    __typename: \"Blog\";\n    id: string;\n    name: string;\n    posts?: {\n      __typename: \"ModelPostConnection\";\n      nextToken?: string | null;\n      startedAt?: number | null;\n    } | null;\n    _version: number;\n    _deleted?: boolean | null;\n    _lastChangedAt: number;\n    createdAt: string;\n    updatedAt: string;\n  } | null;\n  comments?: {\n    __typename: \"ModelCommentConnection\";\n    items?: Array<{\n      __typename: \"Comment\";\n      id: string;\n      postID: string;\n      content: string;\n      _version: number;\n      _deleted?: boolean | null;\n      _lastChangedAt: number;\n      createdAt: string;\n      updatedAt: string;\n    } | null> | null;\n    nextToken?: string | null;\n    startedAt?: number | null;\n  } | null;\n  _version: number;\n  _deleted?: boolean | null;\n  _lastChangedAt: number;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type OnDeletePostSubscription = {\n  __typename: \"Post\";\n  id: string;\n  title: string;\n  blogID: string;\n  blog?: {\n    __typename: \"Blog\";\n    id: string;\n    name: string;\n    posts?: {\n      __typename: \"ModelPostConnection\";\n      nextToken?: string | null;\n      startedAt?: number | null;\n    } | null;\n    _version: number;\n    _deleted?: boolean | null;\n    _lastChangedAt: number;\n    createdAt: string;\n    updatedAt: string;\n  } | null;\n  comments?: {\n    __typename: \"ModelCommentConnection\";\n    items?: Array<{\n      __typename: \"Comment\";\n      id: string;\n      postID: string;\n      content: string;\n      _version: number;\n      _deleted?: boolean | null;\n      _lastChangedAt: number;\n      createdAt: string;\n      updatedAt: string;\n    } | null> | null;\n    nextToken?: string | null;\n    startedAt?: number | null;\n  } | null;\n  _version: number;\n  _deleted?: boolean | null;\n  _lastChangedAt: number;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type OnCreateCommentSubscription = {\n  __typename: \"Comment\";\n  id: string;\n  postID: string;\n  post?: {\n    __typename: \"Post\";\n    id: string;\n    title: string;\n    blogID: string;\n    blog?: {\n      __typename: \"Blog\";\n      id: string;\n      name: string;\n      _version: number;\n      _deleted?: boolean | null;\n      _lastChangedAt: number;\n      createdAt: string;\n      updatedAt: string;\n    } | null;\n    comments?: {\n      __typename: \"ModelCommentConnection\";\n      nextToken?: string | null;\n      startedAt?: number | null;\n    } | null;\n    _version: number;\n    _deleted?: boolean | null;\n    _lastChangedAt: number;\n    createdAt: string;\n    updatedAt: string;\n  } | null;\n  content: string;\n  _version: number;\n  _deleted?: boolean | null;\n  _lastChangedAt: number;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type OnUpdateCommentSubscription = {\n  __typename: \"Comment\";\n  id: string;\n  postID: string;\n  post?: {\n    __typename: \"Post\";\n    id: string;\n    title: string;\n    blogID: string;\n    blog?: {\n      __typename: \"Blog\";\n      id: string;\n      name: string;\n      _version: number;\n      _deleted?: boolean | null;\n      _lastChangedAt: number;\n      createdAt: string;\n      updatedAt: string;\n    } | null;\n    comments?: {\n      __typename: \"ModelCommentConnection\";\n      nextToken?: string | null;\n      startedAt?: number | null;\n    } | null;\n    _version: number;\n    _deleted?: boolean | null;\n    _lastChangedAt: number;\n    createdAt: string;\n    updatedAt: string;\n  } | null;\n  content: string;\n  _version: number;\n  _deleted?: boolean | null;\n  _lastChangedAt: number;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type OnDeleteCommentSubscription = {\n  __typename: \"Comment\";\n  id: string;\n  postID: string;\n  post?: {\n    __typename: \"Post\";\n    id: string;\n    title: string;\n    blogID: string;\n    blog?: {\n      __typename: \"Blog\";\n      id: string;\n      name: string;\n      _version: number;\n      _deleted?: boolean | null;\n      _lastChangedAt: number;\n      createdAt: string;\n      updatedAt: string;\n    } | null;\n    comments?: {\n      __typename: \"ModelCommentConnection\";\n      nextToken?: string | null;\n      startedAt?: number | null;\n    } | null;\n    _version: number;\n    _deleted?: boolean | null;\n    _lastChangedAt: number;\n    createdAt: string;\n    updatedAt: string;\n  } | null;\n  content: string;\n  _version: number;\n  _deleted?: boolean | null;\n  _lastChangedAt: number;\n  createdAt: string;\n  updatedAt: string;\n};\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class APIService {\n  async CreateBlog(\n    input: CreateBlogInput,\n    condition?: ModelBlogConditionInput\n  ): Promise<CreateBlogMutation> {\n    const statement = `mutation CreateBlog($input: CreateBlogInput!, $condition: ModelBlogConditionInput) {\n        createBlog(input: $input, condition: $condition) {\n          __typename\n          id\n          name\n          posts {\n            __typename\n            items {\n              __typename\n              id\n              title\n              blogID\n              _version\n              _deleted\n              _lastChangedAt\n              createdAt\n              updatedAt\n            }\n            nextToken\n            startedAt\n          }\n          _version\n          _deleted\n          _lastChangedAt\n          createdAt\n          updatedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      input\n    };\n    if (condition) {\n      gqlAPIServiceArguments.condition = condition;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return <CreateBlogMutation>response.data.createBlog;\n  }\n  async UpdateBlog(\n    input: UpdateBlogInput,\n    condition?: ModelBlogConditionInput\n  ): Promise<UpdateBlogMutation> {\n    const statement = `mutation UpdateBlog($input: UpdateBlogInput!, $condition: ModelBlogConditionInput) {\n        updateBlog(input: $input, condition: $condition) {\n          __typename\n          id\n          name\n          posts {\n            __typename\n            items {\n              __typename\n              id\n              title\n              blogID\n              _version\n              _deleted\n              _lastChangedAt\n              createdAt\n              updatedAt\n            }\n            nextToken\n            startedAt\n          }\n          _version\n          _deleted\n          _lastChangedAt\n          createdAt\n          updatedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      input\n    };\n    if (condition) {\n      gqlAPIServiceArguments.condition = condition;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return <UpdateBlogMutation>response.data.updateBlog;\n  }\n  async DeleteBlog(\n    input: DeleteBlogInput,\n    condition?: ModelBlogConditionInput\n  ): Promise<DeleteBlogMutation> {\n    const statement = `mutation DeleteBlog($input: DeleteBlogInput!, $condition: ModelBlogConditionInput) {\n        deleteBlog(input: $input, condition: $condition) {\n          __typename\n          id\n          name\n          posts {\n            __typename\n            items {\n              __typename\n              id\n              title\n              blogID\n              _version\n              _deleted\n              _lastChangedAt\n              createdAt\n              updatedAt\n            }\n            nextToken\n            startedAt\n          }\n          _version\n          _deleted\n          _lastChangedAt\n          createdAt\n          updatedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      input\n    };\n    if (condition) {\n      gqlAPIServiceArguments.condition = condition;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return <DeleteBlogMutation>response.data.deleteBlog;\n  }\n  async CreatePost(\n    input: CreatePostInput,\n    condition?: ModelPostConditionInput\n  ): Promise<CreatePostMutation> {\n    const statement = `mutation CreatePost($input: CreatePostInput!, $condition: ModelPostConditionInput) {\n        createPost(input: $input, condition: $condition) {\n          __typename\n          id\n          title\n          blogID\n          blog {\n            __typename\n            id\n            name\n            posts {\n              __typename\n              nextToken\n              startedAt\n            }\n            _version\n            _deleted\n            _lastChangedAt\n            createdAt\n            updatedAt\n          }\n          comments {\n            __typename\n            items {\n              __typename\n              id\n              postID\n              content\n              _version\n              _deleted\n              _lastChangedAt\n              createdAt\n              updatedAt\n            }\n            nextToken\n            startedAt\n          }\n          _version\n          _deleted\n          _lastChangedAt\n          createdAt\n          updatedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      input\n    };\n    if (condition) {\n      gqlAPIServiceArguments.condition = condition;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return <CreatePostMutation>response.data.createPost;\n  }\n  async UpdatePost(\n    input: UpdatePostInput,\n    condition?: ModelPostConditionInput\n  ): Promise<UpdatePostMutation> {\n    const statement = `mutation UpdatePost($input: UpdatePostInput!, $condition: ModelPostConditionInput) {\n        updatePost(input: $input, condition: $condition) {\n          __typename\n          id\n          title\n          blogID\n          blog {\n            __typename\n            id\n            name\n            posts {\n              __typename\n              nextToken\n              startedAt\n            }\n            _version\n            _deleted\n            _lastChangedAt\n            createdAt\n            updatedAt\n          }\n          comments {\n            __typename\n            items {\n              __typename\n              id\n              postID\n              content\n              _version\n              _deleted\n              _lastChangedAt\n              createdAt\n              updatedAt\n            }\n            nextToken\n            startedAt\n          }\n          _version\n          _deleted\n          _lastChangedAt\n          createdAt\n          updatedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      input\n    };\n    if (condition) {\n      gqlAPIServiceArguments.condition = condition;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return <UpdatePostMutation>response.data.updatePost;\n  }\n  async DeletePost(\n    input: DeletePostInput,\n    condition?: ModelPostConditionInput\n  ): Promise<DeletePostMutation> {\n    const statement = `mutation DeletePost($input: DeletePostInput!, $condition: ModelPostConditionInput) {\n        deletePost(input: $input, condition: $condition) {\n          __typename\n          id\n          title\n          blogID\n          blog {\n            __typename\n            id\n            name\n            posts {\n              __typename\n              nextToken\n              startedAt\n            }\n            _version\n            _deleted\n            _lastChangedAt\n            createdAt\n            updatedAt\n          }\n          comments {\n            __typename\n            items {\n              __typename\n              id\n              postID\n              content\n              _version\n              _deleted\n              _lastChangedAt\n              createdAt\n              updatedAt\n            }\n            nextToken\n            startedAt\n          }\n          _version\n          _deleted\n          _lastChangedAt\n          createdAt\n          updatedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      input\n    };\n    if (condition) {\n      gqlAPIServiceArguments.condition = condition;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return <DeletePostMutation>response.data.deletePost;\n  }\n  async CreateComment(\n    input: CreateCommentInput,\n    condition?: ModelCommentConditionInput\n  ): Promise<CreateCommentMutation> {\n    const statement = `mutation CreateComment($input: CreateCommentInput!, $condition: ModelCommentConditionInput) {\n        createComment(input: $input, condition: $condition) {\n          __typename\n          id\n          postID\n          post {\n            __typename\n            id\n            title\n            blogID\n            blog {\n              __typename\n              id\n              name\n              _version\n              _deleted\n              _lastChangedAt\n              createdAt\n              updatedAt\n            }\n            comments {\n              __typename\n              nextToken\n              startedAt\n            }\n            _version\n            _deleted\n            _lastChangedAt\n            createdAt\n            updatedAt\n          }\n          content\n          _version\n          _deleted\n          _lastChangedAt\n          createdAt\n          updatedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      input\n    };\n    if (condition) {\n      gqlAPIServiceArguments.condition = condition;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return <CreateCommentMutation>response.data.createComment;\n  }\n  async UpdateComment(\n    input: UpdateCommentInput,\n    condition?: ModelCommentConditionInput\n  ): Promise<UpdateCommentMutation> {\n    const statement = `mutation UpdateComment($input: UpdateCommentInput!, $condition: ModelCommentConditionInput) {\n        updateComment(input: $input, condition: $condition) {\n          __typename\n          id\n          postID\n          post {\n            __typename\n            id\n            title\n            blogID\n            blog {\n              __typename\n              id\n              name\n              _version\n              _deleted\n              _lastChangedAt\n              createdAt\n              updatedAt\n            }\n            comments {\n              __typename\n              nextToken\n              startedAt\n            }\n            _version\n            _deleted\n            _lastChangedAt\n            createdAt\n            updatedAt\n          }\n          content\n          _version\n          _deleted\n          _lastChangedAt\n          createdAt\n          updatedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      input\n    };\n    if (condition) {\n      gqlAPIServiceArguments.condition = condition;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return <UpdateCommentMutation>response.data.updateComment;\n  }\n  async DeleteComment(\n    input: DeleteCommentInput,\n    condition?: ModelCommentConditionInput\n  ): Promise<DeleteCommentMutation> {\n    const statement = `mutation DeleteComment($input: DeleteCommentInput!, $condition: ModelCommentConditionInput) {\n        deleteComment(input: $input, condition: $condition) {\n          __typename\n          id\n          postID\n          post {\n            __typename\n            id\n            title\n            blogID\n            blog {\n              __typename\n              id\n              name\n              _version\n              _deleted\n              _lastChangedAt\n              createdAt\n              updatedAt\n            }\n            comments {\n              __typename\n              nextToken\n              startedAt\n            }\n            _version\n            _deleted\n            _lastChangedAt\n            createdAt\n            updatedAt\n          }\n          content\n          _version\n          _deleted\n          _lastChangedAt\n          createdAt\n          updatedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      input\n    };\n    if (condition) {\n      gqlAPIServiceArguments.condition = condition;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return <DeleteCommentMutation>response.data.deleteComment;\n  }\n  async SyncBlogs(\n    filter?: ModelBlogFilterInput,\n    limit?: number,\n    nextToken?: string,\n    lastSync?: number\n  ): Promise<SyncBlogsQuery> {\n    const statement = `query SyncBlogs($filter: ModelBlogFilterInput, $limit: Int, $nextToken: String, $lastSync: AWSTimestamp) {\n        syncBlogs(filter: $filter, limit: $limit, nextToken: $nextToken, lastSync: $lastSync) {\n          __typename\n          items {\n            __typename\n            id\n            name\n            posts {\n              __typename\n              nextToken\n              startedAt\n            }\n            _version\n            _deleted\n            _lastChangedAt\n            createdAt\n            updatedAt\n          }\n          nextToken\n          startedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {};\n    if (filter) {\n      gqlAPIServiceArguments.filter = filter;\n    }\n    if (limit) {\n      gqlAPIServiceArguments.limit = limit;\n    }\n    if (nextToken) {\n      gqlAPIServiceArguments.nextToken = nextToken;\n    }\n    if (lastSync) {\n      gqlAPIServiceArguments.lastSync = lastSync;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return <SyncBlogsQuery>response.data.syncBlogs;\n  }\n  async GetBlog(id: string): Promise<GetBlogQuery> {\n    const statement = `query GetBlog($id: ID!) {\n        getBlog(id: $id) {\n          __typename\n          id\n          name\n          posts {\n            __typename\n            items {\n              __typename\n              id\n              title\n              blogID\n              _version\n              _deleted\n              _lastChangedAt\n              createdAt\n              updatedAt\n            }\n            nextToken\n            startedAt\n          }\n          _version\n          _deleted\n          _lastChangedAt\n          createdAt\n          updatedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      id\n    };\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return <GetBlogQuery>response.data.getBlog;\n  }\n  async ListBlogs(\n    filter?: ModelBlogFilterInput,\n    limit?: number,\n    nextToken?: string\n  ): Promise<ListBlogsQuery> {\n    const statement = `query ListBlogs($filter: ModelBlogFilterInput, $limit: Int, $nextToken: String) {\n        listBlogs(filter: $filter, limit: $limit, nextToken: $nextToken) {\n          __typename\n          items {\n            __typename\n            id\n            name\n            posts {\n              __typename\n              nextToken\n              startedAt\n            }\n            _version\n            _deleted\n            _lastChangedAt\n            createdAt\n            updatedAt\n          }\n          nextToken\n          startedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {};\n    if (filter) {\n      gqlAPIServiceArguments.filter = filter;\n    }\n    if (limit) {\n      gqlAPIServiceArguments.limit = limit;\n    }\n    if (nextToken) {\n      gqlAPIServiceArguments.nextToken = nextToken;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return <ListBlogsQuery>response.data.listBlogs;\n  }\n  async SyncPosts(\n    filter?: ModelPostFilterInput,\n    limit?: number,\n    nextToken?: string,\n    lastSync?: number\n  ): Promise<SyncPostsQuery> {\n    const statement = `query SyncPosts($filter: ModelPostFilterInput, $limit: Int, $nextToken: String, $lastSync: AWSTimestamp) {\n        syncPosts(filter: $filter, limit: $limit, nextToken: $nextToken, lastSync: $lastSync) {\n          __typename\n          items {\n            __typename\n            id\n            title\n            blogID\n            blog {\n              __typename\n              id\n              name\n              _version\n              _deleted\n              _lastChangedAt\n              createdAt\n              updatedAt\n            }\n            comments {\n              __typename\n              nextToken\n              startedAt\n            }\n            _version\n            _deleted\n            _lastChangedAt\n            createdAt\n            updatedAt\n          }\n          nextToken\n          startedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {};\n    if (filter) {\n      gqlAPIServiceArguments.filter = filter;\n    }\n    if (limit) {\n      gqlAPIServiceArguments.limit = limit;\n    }\n    if (nextToken) {\n      gqlAPIServiceArguments.nextToken = nextToken;\n    }\n    if (lastSync) {\n      gqlAPIServiceArguments.lastSync = lastSync;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return <SyncPostsQuery>response.data.syncPosts;\n  }\n  async GetPost(id: string): Promise<GetPostQuery> {\n    const statement = `query GetPost($id: ID!) {\n        getPost(id: $id) {\n          __typename\n          id\n          title\n          blogID\n          blog {\n            __typename\n            id\n            name\n            posts {\n              __typename\n              nextToken\n              startedAt\n            }\n            _version\n            _deleted\n            _lastChangedAt\n            createdAt\n            updatedAt\n          }\n          comments {\n            __typename\n            items {\n              __typename\n              id\n              postID\n              content\n              _version\n              _deleted\n              _lastChangedAt\n              createdAt\n              updatedAt\n            }\n            nextToken\n            startedAt\n          }\n          _version\n          _deleted\n          _lastChangedAt\n          createdAt\n          updatedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      id\n    };\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return <GetPostQuery>response.data.getPost;\n  }\n  async ListPosts(\n    filter?: ModelPostFilterInput,\n    limit?: number,\n    nextToken?: string\n  ): Promise<ListPostsQuery> {\n    const statement = `query ListPosts($filter: ModelPostFilterInput, $limit: Int, $nextToken: String) {\n        listPosts(filter: $filter, limit: $limit, nextToken: $nextToken) {\n          __typename\n          items {\n            __typename\n            id\n            title\n            blogID\n            blog {\n              __typename\n              id\n              name\n              _version\n              _deleted\n              _lastChangedAt\n              createdAt\n              updatedAt\n            }\n            comments {\n              __typename\n              nextToken\n              startedAt\n            }\n            _version\n            _deleted\n            _lastChangedAt\n            createdAt\n            updatedAt\n          }\n          nextToken\n          startedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {};\n    if (filter) {\n      gqlAPIServiceArguments.filter = filter;\n    }\n    if (limit) {\n      gqlAPIServiceArguments.limit = limit;\n    }\n    if (nextToken) {\n      gqlAPIServiceArguments.nextToken = nextToken;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return <ListPostsQuery>response.data.listPosts;\n  }\n  async SyncComments(\n    filter?: ModelCommentFilterInput,\n    limit?: number,\n    nextToken?: string,\n    lastSync?: number\n  ): Promise<SyncCommentsQuery> {\n    const statement = `query SyncComments($filter: ModelCommentFilterInput, $limit: Int, $nextToken: String, $lastSync: AWSTimestamp) {\n        syncComments(filter: $filter, limit: $limit, nextToken: $nextToken, lastSync: $lastSync) {\n          __typename\n          items {\n            __typename\n            id\n            postID\n            post {\n              __typename\n              id\n              title\n              blogID\n              _version\n              _deleted\n              _lastChangedAt\n              createdAt\n              updatedAt\n            }\n            content\n            _version\n            _deleted\n            _lastChangedAt\n            createdAt\n            updatedAt\n          }\n          nextToken\n          startedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {};\n    if (filter) {\n      gqlAPIServiceArguments.filter = filter;\n    }\n    if (limit) {\n      gqlAPIServiceArguments.limit = limit;\n    }\n    if (nextToken) {\n      gqlAPIServiceArguments.nextToken = nextToken;\n    }\n    if (lastSync) {\n      gqlAPIServiceArguments.lastSync = lastSync;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return <SyncCommentsQuery>response.data.syncComments;\n  }\n  async GetComment(id: string): Promise<GetCommentQuery> {\n    const statement = `query GetComment($id: ID!) {\n        getComment(id: $id) {\n          __typename\n          id\n          postID\n          post {\n            __typename\n            id\n            title\n            blogID\n            blog {\n              __typename\n              id\n              name\n              _version\n              _deleted\n              _lastChangedAt\n              createdAt\n              updatedAt\n            }\n            comments {\n              __typename\n              nextToken\n              startedAt\n            }\n            _version\n            _deleted\n            _lastChangedAt\n            createdAt\n            updatedAt\n          }\n          content\n          _version\n          _deleted\n          _lastChangedAt\n          createdAt\n          updatedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      id\n    };\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return <GetCommentQuery>response.data.getComment;\n  }\n  async ListComments(\n    filter?: ModelCommentFilterInput,\n    limit?: number,\n    nextToken?: string\n  ): Promise<ListCommentsQuery> {\n    const statement = `query ListComments($filter: ModelCommentFilterInput, $limit: Int, $nextToken: String) {\n        listComments(filter: $filter, limit: $limit, nextToken: $nextToken) {\n          __typename\n          items {\n            __typename\n            id\n            postID\n            post {\n              __typename\n              id\n              title\n              blogID\n              _version\n              _deleted\n              _lastChangedAt\n              createdAt\n              updatedAt\n            }\n            content\n            _version\n            _deleted\n            _lastChangedAt\n            createdAt\n            updatedAt\n          }\n          nextToken\n          startedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {};\n    if (filter) {\n      gqlAPIServiceArguments.filter = filter;\n    }\n    if (limit) {\n      gqlAPIServiceArguments.limit = limit;\n    }\n    if (nextToken) {\n      gqlAPIServiceArguments.nextToken = nextToken;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return <ListCommentsQuery>response.data.listComments;\n  }\n  OnCreateBlogListener: Observable<\n    SubscriptionResponse<OnCreateBlogSubscription>\n  > = API.graphql(\n    graphqlOperation(\n      `subscription OnCreateBlog {\n        onCreateBlog {\n          __typename\n          id\n          name\n          posts {\n            __typename\n            items {\n              __typename\n              id\n              title\n              blogID\n              _version\n              _deleted\n              _lastChangedAt\n              createdAt\n              updatedAt\n            }\n            nextToken\n            startedAt\n          }\n          _version\n          _deleted\n          _lastChangedAt\n          createdAt\n          updatedAt\n        }\n      }`\n    )\n  ) as Observable<SubscriptionResponse<OnCreateBlogSubscription>>;\n\n  OnUpdateBlogListener: Observable<\n    SubscriptionResponse<OnUpdateBlogSubscription>\n  > = API.graphql(\n    graphqlOperation(\n      `subscription OnUpdateBlog {\n        onUpdateBlog {\n          __typename\n          id\n          name\n          posts {\n            __typename\n            items {\n              __typename\n              id\n              title\n              blogID\n              _version\n              _deleted\n              _lastChangedAt\n              createdAt\n              updatedAt\n            }\n            nextToken\n            startedAt\n          }\n          _version\n          _deleted\n          _lastChangedAt\n          createdAt\n          updatedAt\n        }\n      }`\n    )\n  ) as Observable<SubscriptionResponse<OnUpdateBlogSubscription>>;\n\n  OnDeleteBlogListener: Observable<\n    SubscriptionResponse<OnDeleteBlogSubscription>\n  > = API.graphql(\n    graphqlOperation(\n      `subscription OnDeleteBlog {\n        onDeleteBlog {\n          __typename\n          id\n          name\n          posts {\n            __typename\n            items {\n              __typename\n              id\n              title\n              blogID\n              _version\n              _deleted\n              _lastChangedAt\n              createdAt\n              updatedAt\n            }\n            nextToken\n            startedAt\n          }\n          _version\n          _deleted\n          _lastChangedAt\n          createdAt\n          updatedAt\n        }\n      }`\n    )\n  ) as Observable<SubscriptionResponse<OnDeleteBlogSubscription>>;\n\n  OnCreatePostListener: Observable<\n    SubscriptionResponse<OnCreatePostSubscription>\n  > = API.graphql(\n    graphqlOperation(\n      `subscription OnCreatePost {\n        onCreatePost {\n          __typename\n          id\n          title\n          blogID\n          blog {\n            __typename\n            id\n            name\n            posts {\n              __typename\n              nextToken\n              startedAt\n            }\n            _version\n            _deleted\n            _lastChangedAt\n            createdAt\n            updatedAt\n          }\n          comments {\n            __typename\n            items {\n              __typename\n              id\n              postID\n              content\n              _version\n              _deleted\n              _lastChangedAt\n              createdAt\n              updatedAt\n            }\n            nextToken\n            startedAt\n          }\n          _version\n          _deleted\n          _lastChangedAt\n          createdAt\n          updatedAt\n        }\n      }`\n    )\n  ) as Observable<SubscriptionResponse<OnCreatePostSubscription>>;\n\n  OnUpdatePostListener: Observable<\n    SubscriptionResponse<OnUpdatePostSubscription>\n  > = API.graphql(\n    graphqlOperation(\n      `subscription OnUpdatePost {\n        onUpdatePost {\n          __typename\n          id\n          title\n          blogID\n          blog {\n            __typename\n            id\n            name\n            posts {\n              __typename\n              nextToken\n              startedAt\n            }\n            _version\n            _deleted\n            _lastChangedAt\n            createdAt\n            updatedAt\n          }\n          comments {\n            __typename\n            items {\n              __typename\n              id\n              postID\n              content\n              _version\n              _deleted\n              _lastChangedAt\n              createdAt\n              updatedAt\n            }\n            nextToken\n            startedAt\n          }\n          _version\n          _deleted\n          _lastChangedAt\n          createdAt\n          updatedAt\n        }\n      }`\n    )\n  ) as Observable<SubscriptionResponse<OnUpdatePostSubscription>>;\n\n  OnDeletePostListener: Observable<\n    SubscriptionResponse<OnDeletePostSubscription>\n  > = API.graphql(\n    graphqlOperation(\n      `subscription OnDeletePost {\n        onDeletePost {\n          __typename\n          id\n          title\n          blogID\n          blog {\n            __typename\n            id\n            name\n            posts {\n              __typename\n              nextToken\n              startedAt\n            }\n            _version\n            _deleted\n            _lastChangedAt\n            createdAt\n            updatedAt\n          }\n          comments {\n            __typename\n            items {\n              __typename\n              id\n              postID\n              content\n              _version\n              _deleted\n              _lastChangedAt\n              createdAt\n              updatedAt\n            }\n            nextToken\n            startedAt\n          }\n          _version\n          _deleted\n          _lastChangedAt\n          createdAt\n          updatedAt\n        }\n      }`\n    )\n  ) as Observable<SubscriptionResponse<OnDeletePostSubscription>>;\n\n  OnCreateCommentListener: Observable<\n    SubscriptionResponse<OnCreateCommentSubscription>\n  > = API.graphql(\n    graphqlOperation(\n      `subscription OnCreateComment {\n        onCreateComment {\n          __typename\n          id\n          postID\n          post {\n            __typename\n            id\n            title\n            blogID\n            blog {\n              __typename\n              id\n              name\n              _version\n              _deleted\n              _lastChangedAt\n              createdAt\n              updatedAt\n            }\n            comments {\n              __typename\n              nextToken\n              startedAt\n            }\n            _version\n            _deleted\n            _lastChangedAt\n            createdAt\n            updatedAt\n          }\n          content\n          _version\n          _deleted\n          _lastChangedAt\n          createdAt\n          updatedAt\n        }\n      }`\n    )\n  ) as Observable<SubscriptionResponse<OnCreateCommentSubscription>>;\n\n  OnUpdateCommentListener: Observable<\n    SubscriptionResponse<OnUpdateCommentSubscription>\n  > = API.graphql(\n    graphqlOperation(\n      `subscription OnUpdateComment {\n        onUpdateComment {\n          __typename\n          id\n          postID\n          post {\n            __typename\n            id\n            title\n            blogID\n            blog {\n              __typename\n              id\n              name\n              _version\n              _deleted\n              _lastChangedAt\n              createdAt\n              updatedAt\n            }\n            comments {\n              __typename\n              nextToken\n              startedAt\n            }\n            _version\n            _deleted\n            _lastChangedAt\n            createdAt\n            updatedAt\n          }\n          content\n          _version\n          _deleted\n          _lastChangedAt\n          createdAt\n          updatedAt\n        }\n      }`\n    )\n  ) as Observable<SubscriptionResponse<OnUpdateCommentSubscription>>;\n\n  OnDeleteCommentListener: Observable<\n    SubscriptionResponse<OnDeleteCommentSubscription>\n  > = API.graphql(\n    graphqlOperation(\n      `subscription OnDeleteComment {\n        onDeleteComment {\n          __typename\n          id\n          postID\n          post {\n            __typename\n            id\n            title\n            blogID\n            blog {\n              __typename\n              id\n              name\n              _version\n              _deleted\n              _lastChangedAt\n              createdAt\n              updatedAt\n            }\n            comments {\n              __typename\n              nextToken\n              startedAt\n            }\n            _version\n            _deleted\n            _lastChangedAt\n            createdAt\n            updatedAt\n          }\n          content\n          _version\n          _deleted\n          _lastChangedAt\n          createdAt\n          updatedAt\n        }\n      }`\n    )\n  ) as Observable<SubscriptionResponse<OnDeleteCommentSubscription>>;\n}\n",
            "properties": [
                {
                    "name": "value",
                    "type": "GraphQLResult<T>",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        }
    ],
    "injectables": [
        {
            "name": "APIService",
            "id": "injectable-APIService-0fd36e673c119ab239d440ba68c6143a",
            "file": "src/app/shared/services/aws/api.service.ts",
            "properties": [
                {
                    "name": "OnCreateBlogListener",
                    "defaultValue": "API.graphql(\n    graphqlOperation(\n      `subscription OnCreateBlog {\n        onCreateBlog {\n          __typename\n          id\n          name\n          posts {\n            __typename\n            items {\n              __typename\n              id\n              title\n              blogID\n              _version\n              _deleted\n              _lastChangedAt\n              createdAt\n              updatedAt\n            }\n            nextToken\n            startedAt\n          }\n          _version\n          _deleted\n          _lastChangedAt\n          createdAt\n          updatedAt\n        }\n      }`\n    )\n  ) as Observable<SubscriptionResponse<OnCreateBlogSubscription>>",
                    "type": "Observable<SubscriptionResponse<OnCreateBlogSubscription>>",
                    "optional": false,
                    "description": "",
                    "line": 2059
                },
                {
                    "name": "OnCreateCommentListener",
                    "defaultValue": "API.graphql(\n    graphqlOperation(\n      `subscription OnCreateComment {\n        onCreateComment {\n          __typename\n          id\n          postID\n          post {\n            __typename\n            id\n            title\n            blogID\n            blog {\n              __typename\n              id\n              name\n              _version\n              _deleted\n              _lastChangedAt\n              createdAt\n              updatedAt\n            }\n            comments {\n              __typename\n              nextToken\n              startedAt\n            }\n            _version\n            _deleted\n            _lastChangedAt\n            createdAt\n            updatedAt\n          }\n          content\n          _version\n          _deleted\n          _lastChangedAt\n          createdAt\n          updatedAt\n        }\n      }`\n    )\n  ) as Observable<SubscriptionResponse<OnCreateCommentSubscription>>",
                    "type": "Observable<SubscriptionResponse<OnCreateCommentSubscription>>",
                    "optional": false,
                    "description": "",
                    "line": 2317
                },
                {
                    "name": "OnCreatePostListener",
                    "defaultValue": "API.graphql(\n    graphqlOperation(\n      `subscription OnCreatePost {\n        onCreatePost {\n          __typename\n          id\n          title\n          blogID\n          blog {\n            __typename\n            id\n            name\n            posts {\n              __typename\n              nextToken\n              startedAt\n            }\n            _version\n            _deleted\n            _lastChangedAt\n            createdAt\n            updatedAt\n          }\n          comments {\n            __typename\n            items {\n              __typename\n              id\n              postID\n              content\n              _version\n              _deleted\n              _lastChangedAt\n              createdAt\n              updatedAt\n            }\n            nextToken\n            startedAt\n          }\n          _version\n          _deleted\n          _lastChangedAt\n          createdAt\n          updatedAt\n        }\n      }`\n    )\n  ) as Observable<SubscriptionResponse<OnCreatePostSubscription>>",
                    "type": "Observable<SubscriptionResponse<OnCreatePostSubscription>>",
                    "optional": false,
                    "description": "",
                    "line": 2164
                },
                {
                    "name": "OnDeleteBlogListener",
                    "defaultValue": "API.graphql(\n    graphqlOperation(\n      `subscription OnDeleteBlog {\n        onDeleteBlog {\n          __typename\n          id\n          name\n          posts {\n            __typename\n            items {\n              __typename\n              id\n              title\n              blogID\n              _version\n              _deleted\n              _lastChangedAt\n              createdAt\n              updatedAt\n            }\n            nextToken\n            startedAt\n          }\n          _version\n          _deleted\n          _lastChangedAt\n          createdAt\n          updatedAt\n        }\n      }`\n    )\n  ) as Observable<SubscriptionResponse<OnDeleteBlogSubscription>>",
                    "type": "Observable<SubscriptionResponse<OnDeleteBlogSubscription>>",
                    "optional": false,
                    "description": "",
                    "line": 2129
                },
                {
                    "name": "OnDeleteCommentListener",
                    "defaultValue": "API.graphql(\n    graphqlOperation(\n      `subscription OnDeleteComment {\n        onDeleteComment {\n          __typename\n          id\n          postID\n          post {\n            __typename\n            id\n            title\n            blogID\n            blog {\n              __typename\n              id\n              name\n              _version\n              _deleted\n              _lastChangedAt\n              createdAt\n              updatedAt\n            }\n            comments {\n              __typename\n              nextToken\n              startedAt\n            }\n            _version\n            _deleted\n            _lastChangedAt\n            createdAt\n            updatedAt\n          }\n          content\n          _version\n          _deleted\n          _lastChangedAt\n          createdAt\n          updatedAt\n        }\n      }`\n    )\n  ) as Observable<SubscriptionResponse<OnDeleteCommentSubscription>>",
                    "type": "Observable<SubscriptionResponse<OnDeleteCommentSubscription>>",
                    "optional": false,
                    "description": "",
                    "line": 2409
                },
                {
                    "name": "OnDeletePostListener",
                    "defaultValue": "API.graphql(\n    graphqlOperation(\n      `subscription OnDeletePost {\n        onDeletePost {\n          __typename\n          id\n          title\n          blogID\n          blog {\n            __typename\n            id\n            name\n            posts {\n              __typename\n              nextToken\n              startedAt\n            }\n            _version\n            _deleted\n            _lastChangedAt\n            createdAt\n            updatedAt\n          }\n          comments {\n            __typename\n            items {\n              __typename\n              id\n              postID\n              content\n              _version\n              _deleted\n              _lastChangedAt\n              createdAt\n              updatedAt\n            }\n            nextToken\n            startedAt\n          }\n          _version\n          _deleted\n          _lastChangedAt\n          createdAt\n          updatedAt\n        }\n      }`\n    )\n  ) as Observable<SubscriptionResponse<OnDeletePostSubscription>>",
                    "type": "Observable<SubscriptionResponse<OnDeletePostSubscription>>",
                    "optional": false,
                    "description": "",
                    "line": 2266
                },
                {
                    "name": "OnUpdateBlogListener",
                    "defaultValue": "API.graphql(\n    graphqlOperation(\n      `subscription OnUpdateBlog {\n        onUpdateBlog {\n          __typename\n          id\n          name\n          posts {\n            __typename\n            items {\n              __typename\n              id\n              title\n              blogID\n              _version\n              _deleted\n              _lastChangedAt\n              createdAt\n              updatedAt\n            }\n            nextToken\n            startedAt\n          }\n          _version\n          _deleted\n          _lastChangedAt\n          createdAt\n          updatedAt\n        }\n      }`\n    )\n  ) as Observable<SubscriptionResponse<OnUpdateBlogSubscription>>",
                    "type": "Observable<SubscriptionResponse<OnUpdateBlogSubscription>>",
                    "optional": false,
                    "description": "",
                    "line": 2094
                },
                {
                    "name": "OnUpdateCommentListener",
                    "defaultValue": "API.graphql(\n    graphqlOperation(\n      `subscription OnUpdateComment {\n        onUpdateComment {\n          __typename\n          id\n          postID\n          post {\n            __typename\n            id\n            title\n            blogID\n            blog {\n              __typename\n              id\n              name\n              _version\n              _deleted\n              _lastChangedAt\n              createdAt\n              updatedAt\n            }\n            comments {\n              __typename\n              nextToken\n              startedAt\n            }\n            _version\n            _deleted\n            _lastChangedAt\n            createdAt\n            updatedAt\n          }\n          content\n          _version\n          _deleted\n          _lastChangedAt\n          createdAt\n          updatedAt\n        }\n      }`\n    )\n  ) as Observable<SubscriptionResponse<OnUpdateCommentSubscription>>",
                    "type": "Observable<SubscriptionResponse<OnUpdateCommentSubscription>>",
                    "optional": false,
                    "description": "",
                    "line": 2363
                },
                {
                    "name": "OnUpdatePostListener",
                    "defaultValue": "API.graphql(\n    graphqlOperation(\n      `subscription OnUpdatePost {\n        onUpdatePost {\n          __typename\n          id\n          title\n          blogID\n          blog {\n            __typename\n            id\n            name\n            posts {\n              __typename\n              nextToken\n              startedAt\n            }\n            _version\n            _deleted\n            _lastChangedAt\n            createdAt\n            updatedAt\n          }\n          comments {\n            __typename\n            items {\n              __typename\n              id\n              postID\n              content\n              _version\n              _deleted\n              _lastChangedAt\n              createdAt\n              updatedAt\n            }\n            nextToken\n            startedAt\n          }\n          _version\n          _deleted\n          _lastChangedAt\n          createdAt\n          updatedAt\n        }\n      }`\n    )\n  ) as Observable<SubscriptionResponse<OnUpdatePostSubscription>>",
                    "type": "Observable<SubscriptionResponse<OnUpdatePostSubscription>>",
                    "optional": false,
                    "description": "",
                    "line": 2215
                }
            ],
            "methods": [
                {
                    "name": "CreateBlog",
                    "args": [
                        {
                            "name": "input",
                            "type": "CreateBlogInput"
                        },
                        {
                            "name": "condition",
                            "type": "ModelBlogConditionInput",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<CreateBlogMutation>",
                    "typeParameters": [],
                    "line": 1153,
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "input",
                            "type": "CreateBlogInput",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "condition",
                            "type": "ModelBlogConditionInput",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "CreateComment",
                    "args": [
                        {
                            "name": "input",
                            "type": "CreateCommentInput"
                        },
                        {
                            "name": "condition",
                            "type": "ModelCommentConditionInput",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<CreateCommentMutation>",
                    "typeParameters": [],
                    "line": 1459,
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "input",
                            "type": "CreateCommentInput",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "condition",
                            "type": "ModelCommentConditionInput",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "CreatePost",
                    "args": [
                        {
                            "name": "input",
                            "type": "CreatePostInput"
                        },
                        {
                            "name": "condition",
                            "type": "ModelPostConditionInput",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<CreatePostMutation>",
                    "typeParameters": [],
                    "line": 1282,
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "input",
                            "type": "CreatePostInput",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "condition",
                            "type": "ModelPostConditionInput",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "DeleteBlog",
                    "args": [
                        {
                            "name": "input",
                            "type": "DeleteBlogInput"
                        },
                        {
                            "name": "condition",
                            "type": "ModelBlogConditionInput",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<DeleteBlogMutation>",
                    "typeParameters": [],
                    "line": 1239,
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "input",
                            "type": "DeleteBlogInput",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "condition",
                            "type": "ModelBlogConditionInput",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "DeleteComment",
                    "args": [
                        {
                            "name": "input",
                            "type": "DeleteCommentInput"
                        },
                        {
                            "name": "condition",
                            "type": "ModelCommentConditionInput",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<DeleteCommentMutation>",
                    "typeParameters": [],
                    "line": 1567,
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "input",
                            "type": "DeleteCommentInput",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "condition",
                            "type": "ModelCommentConditionInput",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "DeletePost",
                    "args": [
                        {
                            "name": "input",
                            "type": "DeletePostInput"
                        },
                        {
                            "name": "condition",
                            "type": "ModelPostConditionInput",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<DeletePostMutation>",
                    "typeParameters": [],
                    "line": 1400,
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "input",
                            "type": "DeletePostInput",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "condition",
                            "type": "ModelPostConditionInput",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "GetBlog",
                    "args": [
                        {
                            "name": "id",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<GetBlogQuery>",
                    "typeParameters": [],
                    "line": 1667,
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "GetComment",
                    "args": [
                        {
                            "name": "id",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<GetCommentQuery>",
                    "typeParameters": [],
                    "line": 1962,
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "GetPost",
                    "args": [
                        {
                            "name": "id",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<GetPostQuery>",
                    "typeParameters": [],
                    "line": 1803,
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ListBlogs",
                    "args": [
                        {
                            "name": "filter",
                            "type": "ModelBlogFilterInput",
                            "optional": true
                        },
                        {
                            "name": "limit",
                            "type": "number",
                            "optional": true
                        },
                        {
                            "name": "nextToken",
                            "type": "string",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<ListBlogsQuery>",
                    "typeParameters": [],
                    "line": 1704,
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "filter",
                            "type": "ModelBlogFilterInput",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "limit",
                            "type": "number",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "nextToken",
                            "type": "string",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ListComments",
                    "args": [
                        {
                            "name": "filter",
                            "type": "ModelCommentFilterInput",
                            "optional": true
                        },
                        {
                            "name": "limit",
                            "type": "number",
                            "optional": true
                        },
                        {
                            "name": "nextToken",
                            "type": "string",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<ListCommentsQuery>",
                    "typeParameters": [],
                    "line": 2010,
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "filter",
                            "type": "ModelCommentFilterInput",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "limit",
                            "type": "number",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "nextToken",
                            "type": "string",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ListPosts",
                    "args": [
                        {
                            "name": "filter",
                            "type": "ModelPostFilterInput",
                            "optional": true
                        },
                        {
                            "name": "limit",
                            "type": "number",
                            "optional": true
                        },
                        {
                            "name": "nextToken",
                            "type": "string",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<ListPostsQuery>",
                    "typeParameters": [],
                    "line": 1856,
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "filter",
                            "type": "ModelPostFilterInput",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "limit",
                            "type": "number",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "nextToken",
                            "type": "string",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "SyncBlogs",
                    "args": [
                        {
                            "name": "filter",
                            "type": "ModelBlogFilterInput",
                            "optional": true
                        },
                        {
                            "name": "limit",
                            "type": "number",
                            "optional": true
                        },
                        {
                            "name": "nextToken",
                            "type": "string",
                            "optional": true
                        },
                        {
                            "name": "lastSync",
                            "type": "number",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<SyncBlogsQuery>",
                    "typeParameters": [],
                    "line": 1621,
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "filter",
                            "type": "ModelBlogFilterInput",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "limit",
                            "type": "number",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "nextToken",
                            "type": "string",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "lastSync",
                            "type": "number",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "SyncComments",
                    "args": [
                        {
                            "name": "filter",
                            "type": "ModelCommentFilterInput",
                            "optional": true
                        },
                        {
                            "name": "limit",
                            "type": "number",
                            "optional": true
                        },
                        {
                            "name": "nextToken",
                            "type": "string",
                            "optional": true
                        },
                        {
                            "name": "lastSync",
                            "type": "number",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<SyncCommentsQuery>",
                    "typeParameters": [],
                    "line": 1909,
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "filter",
                            "type": "ModelCommentFilterInput",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "limit",
                            "type": "number",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "nextToken",
                            "type": "string",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "lastSync",
                            "type": "number",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "SyncPosts",
                    "args": [
                        {
                            "name": "filter",
                            "type": "ModelPostFilterInput",
                            "optional": true
                        },
                        {
                            "name": "limit",
                            "type": "number",
                            "optional": true
                        },
                        {
                            "name": "nextToken",
                            "type": "string",
                            "optional": true
                        },
                        {
                            "name": "lastSync",
                            "type": "number",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<SyncPostsQuery>",
                    "typeParameters": [],
                    "line": 1746,
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "filter",
                            "type": "ModelPostFilterInput",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "limit",
                            "type": "number",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "nextToken",
                            "type": "string",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "lastSync",
                            "type": "number",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "UpdateBlog",
                    "args": [
                        {
                            "name": "input",
                            "type": "UpdateBlogInput"
                        },
                        {
                            "name": "condition",
                            "type": "ModelBlogConditionInput",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<UpdateBlogMutation>",
                    "typeParameters": [],
                    "line": 1196,
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "input",
                            "type": "UpdateBlogInput",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "condition",
                            "type": "ModelBlogConditionInput",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "UpdateComment",
                    "args": [
                        {
                            "name": "input",
                            "type": "UpdateCommentInput"
                        },
                        {
                            "name": "condition",
                            "type": "ModelCommentConditionInput",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<UpdateCommentMutation>",
                    "typeParameters": [],
                    "line": 1513,
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "input",
                            "type": "UpdateCommentInput",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "condition",
                            "type": "ModelCommentConditionInput",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "UpdatePost",
                    "args": [
                        {
                            "name": "input",
                            "type": "UpdatePostInput"
                        },
                        {
                            "name": "condition",
                            "type": "ModelPostConditionInput",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<UpdatePostMutation>",
                    "typeParameters": [],
                    "line": 1341,
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "input",
                            "type": "UpdatePostInput",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "condition",
                            "type": "ModelPostConditionInput",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "description": "",
            "sourceCode": "import { Injectable } from \"@angular/core\";\nimport API, { graphqlOperation, GraphQLResult } from \"@aws-amplify/api-graphql\";\nimport { Observable } from \"zen-observable-ts\";\n\nexport interface SubscriptionResponse<T> {\n  value: GraphQLResult<T>;\n}\n\nexport type CreateBlogInput = {\n  id?: string | null;\n  name: string;\n  _version?: number | null;\n};\n\nexport type ModelBlogConditionInput = {\n  name?: ModelStringInput | null;\n  and?: Array<ModelBlogConditionInput | null> | null;\n  or?: Array<ModelBlogConditionInput | null> | null;\n  not?: ModelBlogConditionInput | null;\n};\n\nexport type ModelStringInput = {\n  ne?: string | null;\n  eq?: string | null;\n  le?: string | null;\n  lt?: string | null;\n  ge?: string | null;\n  gt?: string | null;\n  contains?: string | null;\n  notContains?: string | null;\n  between?: Array<string | null> | null;\n  beginsWith?: string | null;\n  attributeExists?: boolean | null;\n  attributeType?: ModelAttributeTypes | null;\n  size?: ModelSizeInput | null;\n};\n\nexport enum ModelAttributeTypes {\n  binary = \"binary\",\n  binarySet = \"binarySet\",\n  bool = \"bool\",\n  list = \"list\",\n  map = \"map\",\n  number = \"number\",\n  numberSet = \"numberSet\",\n  string = \"string\",\n  stringSet = \"stringSet\",\n  _null = \"_null\"\n}\n\nexport type ModelSizeInput = {\n  ne?: number | null;\n  eq?: number | null;\n  le?: number | null;\n  lt?: number | null;\n  ge?: number | null;\n  gt?: number | null;\n  between?: Array<number | null> | null;\n};\n\nexport type Blog = {\n  __typename: \"Blog\";\n  id?: string;\n  name?: string;\n  posts?: ModelPostConnection;\n  _version?: number;\n  _deleted?: boolean | null;\n  _lastChangedAt?: number;\n  createdAt?: string;\n  updatedAt?: string;\n};\n\nexport type ModelPostConnection = {\n  __typename: \"ModelPostConnection\";\n  items?: Array<Post | null> | null;\n  nextToken?: string | null;\n  startedAt?: number | null;\n};\n\nexport type Post = {\n  __typename: \"Post\";\n  id?: string;\n  title?: string;\n  blogID?: string;\n  blog?: Blog;\n  comments?: ModelCommentConnection;\n  _version?: number;\n  _deleted?: boolean | null;\n  _lastChangedAt?: number;\n  createdAt?: string;\n  updatedAt?: string;\n};\n\nexport type ModelCommentConnection = {\n  __typename: \"ModelCommentConnection\";\n  items?: Array<Comment | null> | null;\n  nextToken?: string | null;\n  startedAt?: number | null;\n};\n\nexport type Comment = {\n  __typename: \"Comment\";\n  id?: string;\n  postID?: string;\n  post?: Post;\n  content?: string;\n  _version?: number;\n  _deleted?: boolean | null;\n  _lastChangedAt?: number;\n  createdAt?: string;\n  updatedAt?: string;\n};\n\nexport type UpdateBlogInput = {\n  id: string;\n  name?: string | null;\n  _version?: number | null;\n};\n\nexport type DeleteBlogInput = {\n  id?: string | null;\n  _version?: number | null;\n};\n\nexport type CreatePostInput = {\n  id?: string | null;\n  title: string;\n  blogID: string;\n  _version?: number | null;\n};\n\nexport type ModelPostConditionInput = {\n  title?: ModelStringInput | null;\n  blogID?: ModelIDInput | null;\n  and?: Array<ModelPostConditionInput | null> | null;\n  or?: Array<ModelPostConditionInput | null> | null;\n  not?: ModelPostConditionInput | null;\n};\n\nexport type ModelIDInput = {\n  ne?: string | null;\n  eq?: string | null;\n  le?: string | null;\n  lt?: string | null;\n  ge?: string | null;\n  gt?: string | null;\n  contains?: string | null;\n  notContains?: string | null;\n  between?: Array<string | null> | null;\n  beginsWith?: string | null;\n  attributeExists?: boolean | null;\n  attributeType?: ModelAttributeTypes | null;\n  size?: ModelSizeInput | null;\n};\n\nexport type UpdatePostInput = {\n  id: string;\n  title?: string | null;\n  blogID?: string | null;\n  _version?: number | null;\n};\n\nexport type DeletePostInput = {\n  id?: string | null;\n  _version?: number | null;\n};\n\nexport type CreateCommentInput = {\n  id?: string | null;\n  postID: string;\n  content: string;\n  _version?: number | null;\n};\n\nexport type ModelCommentConditionInput = {\n  postID?: ModelIDInput | null;\n  content?: ModelStringInput | null;\n  and?: Array<ModelCommentConditionInput | null> | null;\n  or?: Array<ModelCommentConditionInput | null> | null;\n  not?: ModelCommentConditionInput | null;\n};\n\nexport type UpdateCommentInput = {\n  id: string;\n  postID?: string | null;\n  content?: string | null;\n  _version?: number | null;\n};\n\nexport type DeleteCommentInput = {\n  id?: string | null;\n  _version?: number | null;\n};\n\nexport type ModelBlogFilterInput = {\n  id?: ModelIDInput | null;\n  name?: ModelStringInput | null;\n  and?: Array<ModelBlogFilterInput | null> | null;\n  or?: Array<ModelBlogFilterInput | null> | null;\n  not?: ModelBlogFilterInput | null;\n};\n\nexport type ModelBlogConnection = {\n  __typename: \"ModelBlogConnection\";\n  items?: Array<Blog | null> | null;\n  nextToken?: string | null;\n  startedAt?: number | null;\n};\n\nexport type ModelPostFilterInput = {\n  id?: ModelIDInput | null;\n  title?: ModelStringInput | null;\n  blogID?: ModelIDInput | null;\n  and?: Array<ModelPostFilterInput | null> | null;\n  or?: Array<ModelPostFilterInput | null> | null;\n  not?: ModelPostFilterInput | null;\n};\n\nexport type ModelCommentFilterInput = {\n  id?: ModelIDInput | null;\n  postID?: ModelIDInput | null;\n  content?: ModelStringInput | null;\n  and?: Array<ModelCommentFilterInput | null> | null;\n  or?: Array<ModelCommentFilterInput | null> | null;\n  not?: ModelCommentFilterInput | null;\n};\n\nexport type CreateBlogMutation = {\n  __typename: \"Blog\";\n  id: string;\n  name: string;\n  posts?: {\n    __typename: \"ModelPostConnection\";\n    items?: Array<{\n      __typename: \"Post\";\n      id: string;\n      title: string;\n      blogID: string;\n      _version: number;\n      _deleted?: boolean | null;\n      _lastChangedAt: number;\n      createdAt: string;\n      updatedAt: string;\n    } | null> | null;\n    nextToken?: string | null;\n    startedAt?: number | null;\n  } | null;\n  _version: number;\n  _deleted?: boolean | null;\n  _lastChangedAt: number;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type UpdateBlogMutation = {\n  __typename: \"Blog\";\n  id: string;\n  name: string;\n  posts?: {\n    __typename: \"ModelPostConnection\";\n    items?: Array<{\n      __typename: \"Post\";\n      id: string;\n      title: string;\n      blogID: string;\n      _version: number;\n      _deleted?: boolean | null;\n      _lastChangedAt: number;\n      createdAt: string;\n      updatedAt: string;\n    } | null> | null;\n    nextToken?: string | null;\n    startedAt?: number | null;\n  } | null;\n  _version: number;\n  _deleted?: boolean | null;\n  _lastChangedAt: number;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type DeleteBlogMutation = {\n  __typename: \"Blog\";\n  id: string;\n  name: string;\n  posts?: {\n    __typename: \"ModelPostConnection\";\n    items?: Array<{\n      __typename: \"Post\";\n      id: string;\n      title: string;\n      blogID: string;\n      _version: number;\n      _deleted?: boolean | null;\n      _lastChangedAt: number;\n      createdAt: string;\n      updatedAt: string;\n    } | null> | null;\n    nextToken?: string | null;\n    startedAt?: number | null;\n  } | null;\n  _version: number;\n  _deleted?: boolean | null;\n  _lastChangedAt: number;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type CreatePostMutation = {\n  __typename: \"Post\";\n  id: string;\n  title: string;\n  blogID: string;\n  blog?: {\n    __typename: \"Blog\";\n    id: string;\n    name: string;\n    posts?: {\n      __typename: \"ModelPostConnection\";\n      nextToken?: string | null;\n      startedAt?: number | null;\n    } | null;\n    _version: number;\n    _deleted?: boolean | null;\n    _lastChangedAt: number;\n    createdAt: string;\n    updatedAt: string;\n  } | null;\n  comments?: {\n    __typename: \"ModelCommentConnection\";\n    items?: Array<{\n      __typename: \"Comment\";\n      id: string;\n      postID: string;\n      content: string;\n      _version: number;\n      _deleted?: boolean | null;\n      _lastChangedAt: number;\n      createdAt: string;\n      updatedAt: string;\n    } | null> | null;\n    nextToken?: string | null;\n    startedAt?: number | null;\n  } | null;\n  _version: number;\n  _deleted?: boolean | null;\n  _lastChangedAt: number;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type UpdatePostMutation = {\n  __typename: \"Post\";\n  id: string;\n  title: string;\n  blogID: string;\n  blog?: {\n    __typename: \"Blog\";\n    id: string;\n    name: string;\n    posts?: {\n      __typename: \"ModelPostConnection\";\n      nextToken?: string | null;\n      startedAt?: number | null;\n    } | null;\n    _version: number;\n    _deleted?: boolean | null;\n    _lastChangedAt: number;\n    createdAt: string;\n    updatedAt: string;\n  } | null;\n  comments?: {\n    __typename: \"ModelCommentConnection\";\n    items?: Array<{\n      __typename: \"Comment\";\n      id: string;\n      postID: string;\n      content: string;\n      _version: number;\n      _deleted?: boolean | null;\n      _lastChangedAt: number;\n      createdAt: string;\n      updatedAt: string;\n    } | null> | null;\n    nextToken?: string | null;\n    startedAt?: number | null;\n  } | null;\n  _version: number;\n  _deleted?: boolean | null;\n  _lastChangedAt: number;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type DeletePostMutation = {\n  __typename: \"Post\";\n  id: string;\n  title: string;\n  blogID: string;\n  blog?: {\n    __typename: \"Blog\";\n    id: string;\n    name: string;\n    posts?: {\n      __typename: \"ModelPostConnection\";\n      nextToken?: string | null;\n      startedAt?: number | null;\n    } | null;\n    _version: number;\n    _deleted?: boolean | null;\n    _lastChangedAt: number;\n    createdAt: string;\n    updatedAt: string;\n  } | null;\n  comments?: {\n    __typename: \"ModelCommentConnection\";\n    items?: Array<{\n      __typename: \"Comment\";\n      id: string;\n      postID: string;\n      content: string;\n      _version: number;\n      _deleted?: boolean | null;\n      _lastChangedAt: number;\n      createdAt: string;\n      updatedAt: string;\n    } | null> | null;\n    nextToken?: string | null;\n    startedAt?: number | null;\n  } | null;\n  _version: number;\n  _deleted?: boolean | null;\n  _lastChangedAt: number;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type CreateCommentMutation = {\n  __typename: \"Comment\";\n  id: string;\n  postID: string;\n  post?: {\n    __typename: \"Post\";\n    id: string;\n    title: string;\n    blogID: string;\n    blog?: {\n      __typename: \"Blog\";\n      id: string;\n      name: string;\n      _version: number;\n      _deleted?: boolean | null;\n      _lastChangedAt: number;\n      createdAt: string;\n      updatedAt: string;\n    } | null;\n    comments?: {\n      __typename: \"ModelCommentConnection\";\n      nextToken?: string | null;\n      startedAt?: number | null;\n    } | null;\n    _version: number;\n    _deleted?: boolean | null;\n    _lastChangedAt: number;\n    createdAt: string;\n    updatedAt: string;\n  } | null;\n  content: string;\n  _version: number;\n  _deleted?: boolean | null;\n  _lastChangedAt: number;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type UpdateCommentMutation = {\n  __typename: \"Comment\";\n  id: string;\n  postID: string;\n  post?: {\n    __typename: \"Post\";\n    id: string;\n    title: string;\n    blogID: string;\n    blog?: {\n      __typename: \"Blog\";\n      id: string;\n      name: string;\n      _version: number;\n      _deleted?: boolean | null;\n      _lastChangedAt: number;\n      createdAt: string;\n      updatedAt: string;\n    } | null;\n    comments?: {\n      __typename: \"ModelCommentConnection\";\n      nextToken?: string | null;\n      startedAt?: number | null;\n    } | null;\n    _version: number;\n    _deleted?: boolean | null;\n    _lastChangedAt: number;\n    createdAt: string;\n    updatedAt: string;\n  } | null;\n  content: string;\n  _version: number;\n  _deleted?: boolean | null;\n  _lastChangedAt: number;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type DeleteCommentMutation = {\n  __typename: \"Comment\";\n  id: string;\n  postID: string;\n  post?: {\n    __typename: \"Post\";\n    id: string;\n    title: string;\n    blogID: string;\n    blog?: {\n      __typename: \"Blog\";\n      id: string;\n      name: string;\n      _version: number;\n      _deleted?: boolean | null;\n      _lastChangedAt: number;\n      createdAt: string;\n      updatedAt: string;\n    } | null;\n    comments?: {\n      __typename: \"ModelCommentConnection\";\n      nextToken?: string | null;\n      startedAt?: number | null;\n    } | null;\n    _version: number;\n    _deleted?: boolean | null;\n    _lastChangedAt: number;\n    createdAt: string;\n    updatedAt: string;\n  } | null;\n  content: string;\n  _version: number;\n  _deleted?: boolean | null;\n  _lastChangedAt: number;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type SyncBlogsQuery = {\n  __typename: \"ModelBlogConnection\";\n  items?: Array<{\n    __typename: \"Blog\";\n    id: string;\n    name: string;\n    posts?: {\n      __typename: \"ModelPostConnection\";\n      nextToken?: string | null;\n      startedAt?: number | null;\n    } | null;\n    _version: number;\n    _deleted?: boolean | null;\n    _lastChangedAt: number;\n    createdAt: string;\n    updatedAt: string;\n  } | null> | null;\n  nextToken?: string | null;\n  startedAt?: number | null;\n};\n\nexport type GetBlogQuery = {\n  __typename: \"Blog\";\n  id: string;\n  name: string;\n  posts?: {\n    __typename: \"ModelPostConnection\";\n    items?: Array<{\n      __typename: \"Post\";\n      id: string;\n      title: string;\n      blogID: string;\n      _version: number;\n      _deleted?: boolean | null;\n      _lastChangedAt: number;\n      createdAt: string;\n      updatedAt: string;\n    } | null> | null;\n    nextToken?: string | null;\n    startedAt?: number | null;\n  } | null;\n  _version: number;\n  _deleted?: boolean | null;\n  _lastChangedAt: number;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type ListBlogsQuery = {\n  __typename: \"ModelBlogConnection\";\n  items?: Array<{\n    __typename: \"Blog\";\n    id: string;\n    name: string;\n    posts?: {\n      __typename: \"ModelPostConnection\";\n      nextToken?: string | null;\n      startedAt?: number | null;\n    } | null;\n    _version: number;\n    _deleted?: boolean | null;\n    _lastChangedAt: number;\n    createdAt: string;\n    updatedAt: string;\n  } | null> | null;\n  nextToken?: string | null;\n  startedAt?: number | null;\n};\n\nexport type SyncPostsQuery = {\n  __typename: \"ModelPostConnection\";\n  items?: Array<{\n    __typename: \"Post\";\n    id: string;\n    title: string;\n    blogID: string;\n    blog?: {\n      __typename: \"Blog\";\n      id: string;\n      name: string;\n      _version: number;\n      _deleted?: boolean | null;\n      _lastChangedAt: number;\n      createdAt: string;\n      updatedAt: string;\n    } | null;\n    comments?: {\n      __typename: \"ModelCommentConnection\";\n      nextToken?: string | null;\n      startedAt?: number | null;\n    } | null;\n    _version: number;\n    _deleted?: boolean | null;\n    _lastChangedAt: number;\n    createdAt: string;\n    updatedAt: string;\n  } | null> | null;\n  nextToken?: string | null;\n  startedAt?: number | null;\n};\n\nexport type GetPostQuery = {\n  __typename: \"Post\";\n  id: string;\n  title: string;\n  blogID: string;\n  blog?: {\n    __typename: \"Blog\";\n    id: string;\n    name: string;\n    posts?: {\n      __typename: \"ModelPostConnection\";\n      nextToken?: string | null;\n      startedAt?: number | null;\n    } | null;\n    _version: number;\n    _deleted?: boolean | null;\n    _lastChangedAt: number;\n    createdAt: string;\n    updatedAt: string;\n  } | null;\n  comments?: {\n    __typename: \"ModelCommentConnection\";\n    items?: Array<{\n      __typename: \"Comment\";\n      id: string;\n      postID: string;\n      content: string;\n      _version: number;\n      _deleted?: boolean | null;\n      _lastChangedAt: number;\n      createdAt: string;\n      updatedAt: string;\n    } | null> | null;\n    nextToken?: string | null;\n    startedAt?: number | null;\n  } | null;\n  _version: number;\n  _deleted?: boolean | null;\n  _lastChangedAt: number;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type ListPostsQuery = {\n  __typename: \"ModelPostConnection\";\n  items?: Array<{\n    __typename: \"Post\";\n    id: string;\n    title: string;\n    blogID: string;\n    blog?: {\n      __typename: \"Blog\";\n      id: string;\n      name: string;\n      _version: number;\n      _deleted?: boolean | null;\n      _lastChangedAt: number;\n      createdAt: string;\n      updatedAt: string;\n    } | null;\n    comments?: {\n      __typename: \"ModelCommentConnection\";\n      nextToken?: string | null;\n      startedAt?: number | null;\n    } | null;\n    _version: number;\n    _deleted?: boolean | null;\n    _lastChangedAt: number;\n    createdAt: string;\n    updatedAt: string;\n  } | null> | null;\n  nextToken?: string | null;\n  startedAt?: number | null;\n};\n\nexport type SyncCommentsQuery = {\n  __typename: \"ModelCommentConnection\";\n  items?: Array<{\n    __typename: \"Comment\";\n    id: string;\n    postID: string;\n    post?: {\n      __typename: \"Post\";\n      id: string;\n      title: string;\n      blogID: string;\n      _version: number;\n      _deleted?: boolean | null;\n      _lastChangedAt: number;\n      createdAt: string;\n      updatedAt: string;\n    } | null;\n    content: string;\n    _version: number;\n    _deleted?: boolean | null;\n    _lastChangedAt: number;\n    createdAt: string;\n    updatedAt: string;\n  } | null> | null;\n  nextToken?: string | null;\n  startedAt?: number | null;\n};\n\nexport type GetCommentQuery = {\n  __typename: \"Comment\";\n  id: string;\n  postID: string;\n  post?: {\n    __typename: \"Post\";\n    id: string;\n    title: string;\n    blogID: string;\n    blog?: {\n      __typename: \"Blog\";\n      id: string;\n      name: string;\n      _version: number;\n      _deleted?: boolean | null;\n      _lastChangedAt: number;\n      createdAt: string;\n      updatedAt: string;\n    } | null;\n    comments?: {\n      __typename: \"ModelCommentConnection\";\n      nextToken?: string | null;\n      startedAt?: number | null;\n    } | null;\n    _version: number;\n    _deleted?: boolean | null;\n    _lastChangedAt: number;\n    createdAt: string;\n    updatedAt: string;\n  } | null;\n  content: string;\n  _version: number;\n  _deleted?: boolean | null;\n  _lastChangedAt: number;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type ListCommentsQuery = {\n  __typename: \"ModelCommentConnection\";\n  items?: Array<{\n    __typename: \"Comment\";\n    id: string;\n    postID: string;\n    post?: {\n      __typename: \"Post\";\n      id: string;\n      title: string;\n      blogID: string;\n      _version: number;\n      _deleted?: boolean | null;\n      _lastChangedAt: number;\n      createdAt: string;\n      updatedAt: string;\n    } | null;\n    content: string;\n    _version: number;\n    _deleted?: boolean | null;\n    _lastChangedAt: number;\n    createdAt: string;\n    updatedAt: string;\n  } | null> | null;\n  nextToken?: string | null;\n  startedAt?: number | null;\n};\n\nexport type OnCreateBlogSubscription = {\n  __typename: \"Blog\";\n  id: string;\n  name: string;\n  posts?: {\n    __typename: \"ModelPostConnection\";\n    items?: Array<{\n      __typename: \"Post\";\n      id: string;\n      title: string;\n      blogID: string;\n      _version: number;\n      _deleted?: boolean | null;\n      _lastChangedAt: number;\n      createdAt: string;\n      updatedAt: string;\n    } | null> | null;\n    nextToken?: string | null;\n    startedAt?: number | null;\n  } | null;\n  _version: number;\n  _deleted?: boolean | null;\n  _lastChangedAt: number;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type OnUpdateBlogSubscription = {\n  __typename: \"Blog\";\n  id: string;\n  name: string;\n  posts?: {\n    __typename: \"ModelPostConnection\";\n    items?: Array<{\n      __typename: \"Post\";\n      id: string;\n      title: string;\n      blogID: string;\n      _version: number;\n      _deleted?: boolean | null;\n      _lastChangedAt: number;\n      createdAt: string;\n      updatedAt: string;\n    } | null> | null;\n    nextToken?: string | null;\n    startedAt?: number | null;\n  } | null;\n  _version: number;\n  _deleted?: boolean | null;\n  _lastChangedAt: number;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type OnDeleteBlogSubscription = {\n  __typename: \"Blog\";\n  id: string;\n  name: string;\n  posts?: {\n    __typename: \"ModelPostConnection\";\n    items?: Array<{\n      __typename: \"Post\";\n      id: string;\n      title: string;\n      blogID: string;\n      _version: number;\n      _deleted?: boolean | null;\n      _lastChangedAt: number;\n      createdAt: string;\n      updatedAt: string;\n    } | null> | null;\n    nextToken?: string | null;\n    startedAt?: number | null;\n  } | null;\n  _version: number;\n  _deleted?: boolean | null;\n  _lastChangedAt: number;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type OnCreatePostSubscription = {\n  __typename: \"Post\";\n  id: string;\n  title: string;\n  blogID: string;\n  blog?: {\n    __typename: \"Blog\";\n    id: string;\n    name: string;\n    posts?: {\n      __typename: \"ModelPostConnection\";\n      nextToken?: string | null;\n      startedAt?: number | null;\n    } | null;\n    _version: number;\n    _deleted?: boolean | null;\n    _lastChangedAt: number;\n    createdAt: string;\n    updatedAt: string;\n  } | null;\n  comments?: {\n    __typename: \"ModelCommentConnection\";\n    items?: Array<{\n      __typename: \"Comment\";\n      id: string;\n      postID: string;\n      content: string;\n      _version: number;\n      _deleted?: boolean | null;\n      _lastChangedAt: number;\n      createdAt: string;\n      updatedAt: string;\n    } | null> | null;\n    nextToken?: string | null;\n    startedAt?: number | null;\n  } | null;\n  _version: number;\n  _deleted?: boolean | null;\n  _lastChangedAt: number;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type OnUpdatePostSubscription = {\n  __typename: \"Post\";\n  id: string;\n  title: string;\n  blogID: string;\n  blog?: {\n    __typename: \"Blog\";\n    id: string;\n    name: string;\n    posts?: {\n      __typename: \"ModelPostConnection\";\n      nextToken?: string | null;\n      startedAt?: number | null;\n    } | null;\n    _version: number;\n    _deleted?: boolean | null;\n    _lastChangedAt: number;\n    createdAt: string;\n    updatedAt: string;\n  } | null;\n  comments?: {\n    __typename: \"ModelCommentConnection\";\n    items?: Array<{\n      __typename: \"Comment\";\n      id: string;\n      postID: string;\n      content: string;\n      _version: number;\n      _deleted?: boolean | null;\n      _lastChangedAt: number;\n      createdAt: string;\n      updatedAt: string;\n    } | null> | null;\n    nextToken?: string | null;\n    startedAt?: number | null;\n  } | null;\n  _version: number;\n  _deleted?: boolean | null;\n  _lastChangedAt: number;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type OnDeletePostSubscription = {\n  __typename: \"Post\";\n  id: string;\n  title: string;\n  blogID: string;\n  blog?: {\n    __typename: \"Blog\";\n    id: string;\n    name: string;\n    posts?: {\n      __typename: \"ModelPostConnection\";\n      nextToken?: string | null;\n      startedAt?: number | null;\n    } | null;\n    _version: number;\n    _deleted?: boolean | null;\n    _lastChangedAt: number;\n    createdAt: string;\n    updatedAt: string;\n  } | null;\n  comments?: {\n    __typename: \"ModelCommentConnection\";\n    items?: Array<{\n      __typename: \"Comment\";\n      id: string;\n      postID: string;\n      content: string;\n      _version: number;\n      _deleted?: boolean | null;\n      _lastChangedAt: number;\n      createdAt: string;\n      updatedAt: string;\n    } | null> | null;\n    nextToken?: string | null;\n    startedAt?: number | null;\n  } | null;\n  _version: number;\n  _deleted?: boolean | null;\n  _lastChangedAt: number;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type OnCreateCommentSubscription = {\n  __typename: \"Comment\";\n  id: string;\n  postID: string;\n  post?: {\n    __typename: \"Post\";\n    id: string;\n    title: string;\n    blogID: string;\n    blog?: {\n      __typename: \"Blog\";\n      id: string;\n      name: string;\n      _version: number;\n      _deleted?: boolean | null;\n      _lastChangedAt: number;\n      createdAt: string;\n      updatedAt: string;\n    } | null;\n    comments?: {\n      __typename: \"ModelCommentConnection\";\n      nextToken?: string | null;\n      startedAt?: number | null;\n    } | null;\n    _version: number;\n    _deleted?: boolean | null;\n    _lastChangedAt: number;\n    createdAt: string;\n    updatedAt: string;\n  } | null;\n  content: string;\n  _version: number;\n  _deleted?: boolean | null;\n  _lastChangedAt: number;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type OnUpdateCommentSubscription = {\n  __typename: \"Comment\";\n  id: string;\n  postID: string;\n  post?: {\n    __typename: \"Post\";\n    id: string;\n    title: string;\n    blogID: string;\n    blog?: {\n      __typename: \"Blog\";\n      id: string;\n      name: string;\n      _version: number;\n      _deleted?: boolean | null;\n      _lastChangedAt: number;\n      createdAt: string;\n      updatedAt: string;\n    } | null;\n    comments?: {\n      __typename: \"ModelCommentConnection\";\n      nextToken?: string | null;\n      startedAt?: number | null;\n    } | null;\n    _version: number;\n    _deleted?: boolean | null;\n    _lastChangedAt: number;\n    createdAt: string;\n    updatedAt: string;\n  } | null;\n  content: string;\n  _version: number;\n  _deleted?: boolean | null;\n  _lastChangedAt: number;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type OnDeleteCommentSubscription = {\n  __typename: \"Comment\";\n  id: string;\n  postID: string;\n  post?: {\n    __typename: \"Post\";\n    id: string;\n    title: string;\n    blogID: string;\n    blog?: {\n      __typename: \"Blog\";\n      id: string;\n      name: string;\n      _version: number;\n      _deleted?: boolean | null;\n      _lastChangedAt: number;\n      createdAt: string;\n      updatedAt: string;\n    } | null;\n    comments?: {\n      __typename: \"ModelCommentConnection\";\n      nextToken?: string | null;\n      startedAt?: number | null;\n    } | null;\n    _version: number;\n    _deleted?: boolean | null;\n    _lastChangedAt: number;\n    createdAt: string;\n    updatedAt: string;\n  } | null;\n  content: string;\n  _version: number;\n  _deleted?: boolean | null;\n  _lastChangedAt: number;\n  createdAt: string;\n  updatedAt: string;\n};\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class APIService {\n  async CreateBlog(\n    input: CreateBlogInput,\n    condition?: ModelBlogConditionInput\n  ): Promise<CreateBlogMutation> {\n    const statement = `mutation CreateBlog($input: CreateBlogInput!, $condition: ModelBlogConditionInput) {\n        createBlog(input: $input, condition: $condition) {\n          __typename\n          id\n          name\n          posts {\n            __typename\n            items {\n              __typename\n              id\n              title\n              blogID\n              _version\n              _deleted\n              _lastChangedAt\n              createdAt\n              updatedAt\n            }\n            nextToken\n            startedAt\n          }\n          _version\n          _deleted\n          _lastChangedAt\n          createdAt\n          updatedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      input\n    };\n    if (condition) {\n      gqlAPIServiceArguments.condition = condition;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return <CreateBlogMutation>response.data.createBlog;\n  }\n  async UpdateBlog(\n    input: UpdateBlogInput,\n    condition?: ModelBlogConditionInput\n  ): Promise<UpdateBlogMutation> {\n    const statement = `mutation UpdateBlog($input: UpdateBlogInput!, $condition: ModelBlogConditionInput) {\n        updateBlog(input: $input, condition: $condition) {\n          __typename\n          id\n          name\n          posts {\n            __typename\n            items {\n              __typename\n              id\n              title\n              blogID\n              _version\n              _deleted\n              _lastChangedAt\n              createdAt\n              updatedAt\n            }\n            nextToken\n            startedAt\n          }\n          _version\n          _deleted\n          _lastChangedAt\n          createdAt\n          updatedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      input\n    };\n    if (condition) {\n      gqlAPIServiceArguments.condition = condition;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return <UpdateBlogMutation>response.data.updateBlog;\n  }\n  async DeleteBlog(\n    input: DeleteBlogInput,\n    condition?: ModelBlogConditionInput\n  ): Promise<DeleteBlogMutation> {\n    const statement = `mutation DeleteBlog($input: DeleteBlogInput!, $condition: ModelBlogConditionInput) {\n        deleteBlog(input: $input, condition: $condition) {\n          __typename\n          id\n          name\n          posts {\n            __typename\n            items {\n              __typename\n              id\n              title\n              blogID\n              _version\n              _deleted\n              _lastChangedAt\n              createdAt\n              updatedAt\n            }\n            nextToken\n            startedAt\n          }\n          _version\n          _deleted\n          _lastChangedAt\n          createdAt\n          updatedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      input\n    };\n    if (condition) {\n      gqlAPIServiceArguments.condition = condition;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return <DeleteBlogMutation>response.data.deleteBlog;\n  }\n  async CreatePost(\n    input: CreatePostInput,\n    condition?: ModelPostConditionInput\n  ): Promise<CreatePostMutation> {\n    const statement = `mutation CreatePost($input: CreatePostInput!, $condition: ModelPostConditionInput) {\n        createPost(input: $input, condition: $condition) {\n          __typename\n          id\n          title\n          blogID\n          blog {\n            __typename\n            id\n            name\n            posts {\n              __typename\n              nextToken\n              startedAt\n            }\n            _version\n            _deleted\n            _lastChangedAt\n            createdAt\n            updatedAt\n          }\n          comments {\n            __typename\n            items {\n              __typename\n              id\n              postID\n              content\n              _version\n              _deleted\n              _lastChangedAt\n              createdAt\n              updatedAt\n            }\n            nextToken\n            startedAt\n          }\n          _version\n          _deleted\n          _lastChangedAt\n          createdAt\n          updatedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      input\n    };\n    if (condition) {\n      gqlAPIServiceArguments.condition = condition;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return <CreatePostMutation>response.data.createPost;\n  }\n  async UpdatePost(\n    input: UpdatePostInput,\n    condition?: ModelPostConditionInput\n  ): Promise<UpdatePostMutation> {\n    const statement = `mutation UpdatePost($input: UpdatePostInput!, $condition: ModelPostConditionInput) {\n        updatePost(input: $input, condition: $condition) {\n          __typename\n          id\n          title\n          blogID\n          blog {\n            __typename\n            id\n            name\n            posts {\n              __typename\n              nextToken\n              startedAt\n            }\n            _version\n            _deleted\n            _lastChangedAt\n            createdAt\n            updatedAt\n          }\n          comments {\n            __typename\n            items {\n              __typename\n              id\n              postID\n              content\n              _version\n              _deleted\n              _lastChangedAt\n              createdAt\n              updatedAt\n            }\n            nextToken\n            startedAt\n          }\n          _version\n          _deleted\n          _lastChangedAt\n          createdAt\n          updatedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      input\n    };\n    if (condition) {\n      gqlAPIServiceArguments.condition = condition;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return <UpdatePostMutation>response.data.updatePost;\n  }\n  async DeletePost(\n    input: DeletePostInput,\n    condition?: ModelPostConditionInput\n  ): Promise<DeletePostMutation> {\n    const statement = `mutation DeletePost($input: DeletePostInput!, $condition: ModelPostConditionInput) {\n        deletePost(input: $input, condition: $condition) {\n          __typename\n          id\n          title\n          blogID\n          blog {\n            __typename\n            id\n            name\n            posts {\n              __typename\n              nextToken\n              startedAt\n            }\n            _version\n            _deleted\n            _lastChangedAt\n            createdAt\n            updatedAt\n          }\n          comments {\n            __typename\n            items {\n              __typename\n              id\n              postID\n              content\n              _version\n              _deleted\n              _lastChangedAt\n              createdAt\n              updatedAt\n            }\n            nextToken\n            startedAt\n          }\n          _version\n          _deleted\n          _lastChangedAt\n          createdAt\n          updatedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      input\n    };\n    if (condition) {\n      gqlAPIServiceArguments.condition = condition;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return <DeletePostMutation>response.data.deletePost;\n  }\n  async CreateComment(\n    input: CreateCommentInput,\n    condition?: ModelCommentConditionInput\n  ): Promise<CreateCommentMutation> {\n    const statement = `mutation CreateComment($input: CreateCommentInput!, $condition: ModelCommentConditionInput) {\n        createComment(input: $input, condition: $condition) {\n          __typename\n          id\n          postID\n          post {\n            __typename\n            id\n            title\n            blogID\n            blog {\n              __typename\n              id\n              name\n              _version\n              _deleted\n              _lastChangedAt\n              createdAt\n              updatedAt\n            }\n            comments {\n              __typename\n              nextToken\n              startedAt\n            }\n            _version\n            _deleted\n            _lastChangedAt\n            createdAt\n            updatedAt\n          }\n          content\n          _version\n          _deleted\n          _lastChangedAt\n          createdAt\n          updatedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      input\n    };\n    if (condition) {\n      gqlAPIServiceArguments.condition = condition;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return <CreateCommentMutation>response.data.createComment;\n  }\n  async UpdateComment(\n    input: UpdateCommentInput,\n    condition?: ModelCommentConditionInput\n  ): Promise<UpdateCommentMutation> {\n    const statement = `mutation UpdateComment($input: UpdateCommentInput!, $condition: ModelCommentConditionInput) {\n        updateComment(input: $input, condition: $condition) {\n          __typename\n          id\n          postID\n          post {\n            __typename\n            id\n            title\n            blogID\n            blog {\n              __typename\n              id\n              name\n              _version\n              _deleted\n              _lastChangedAt\n              createdAt\n              updatedAt\n            }\n            comments {\n              __typename\n              nextToken\n              startedAt\n            }\n            _version\n            _deleted\n            _lastChangedAt\n            createdAt\n            updatedAt\n          }\n          content\n          _version\n          _deleted\n          _lastChangedAt\n          createdAt\n          updatedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      input\n    };\n    if (condition) {\n      gqlAPIServiceArguments.condition = condition;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return <UpdateCommentMutation>response.data.updateComment;\n  }\n  async DeleteComment(\n    input: DeleteCommentInput,\n    condition?: ModelCommentConditionInput\n  ): Promise<DeleteCommentMutation> {\n    const statement = `mutation DeleteComment($input: DeleteCommentInput!, $condition: ModelCommentConditionInput) {\n        deleteComment(input: $input, condition: $condition) {\n          __typename\n          id\n          postID\n          post {\n            __typename\n            id\n            title\n            blogID\n            blog {\n              __typename\n              id\n              name\n              _version\n              _deleted\n              _lastChangedAt\n              createdAt\n              updatedAt\n            }\n            comments {\n              __typename\n              nextToken\n              startedAt\n            }\n            _version\n            _deleted\n            _lastChangedAt\n            createdAt\n            updatedAt\n          }\n          content\n          _version\n          _deleted\n          _lastChangedAt\n          createdAt\n          updatedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      input\n    };\n    if (condition) {\n      gqlAPIServiceArguments.condition = condition;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return <DeleteCommentMutation>response.data.deleteComment;\n  }\n  async SyncBlogs(\n    filter?: ModelBlogFilterInput,\n    limit?: number,\n    nextToken?: string,\n    lastSync?: number\n  ): Promise<SyncBlogsQuery> {\n    const statement = `query SyncBlogs($filter: ModelBlogFilterInput, $limit: Int, $nextToken: String, $lastSync: AWSTimestamp) {\n        syncBlogs(filter: $filter, limit: $limit, nextToken: $nextToken, lastSync: $lastSync) {\n          __typename\n          items {\n            __typename\n            id\n            name\n            posts {\n              __typename\n              nextToken\n              startedAt\n            }\n            _version\n            _deleted\n            _lastChangedAt\n            createdAt\n            updatedAt\n          }\n          nextToken\n          startedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {};\n    if (filter) {\n      gqlAPIServiceArguments.filter = filter;\n    }\n    if (limit) {\n      gqlAPIServiceArguments.limit = limit;\n    }\n    if (nextToken) {\n      gqlAPIServiceArguments.nextToken = nextToken;\n    }\n    if (lastSync) {\n      gqlAPIServiceArguments.lastSync = lastSync;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return <SyncBlogsQuery>response.data.syncBlogs;\n  }\n  async GetBlog(id: string): Promise<GetBlogQuery> {\n    const statement = `query GetBlog($id: ID!) {\n        getBlog(id: $id) {\n          __typename\n          id\n          name\n          posts {\n            __typename\n            items {\n              __typename\n              id\n              title\n              blogID\n              _version\n              _deleted\n              _lastChangedAt\n              createdAt\n              updatedAt\n            }\n            nextToken\n            startedAt\n          }\n          _version\n          _deleted\n          _lastChangedAt\n          createdAt\n          updatedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      id\n    };\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return <GetBlogQuery>response.data.getBlog;\n  }\n  async ListBlogs(\n    filter?: ModelBlogFilterInput,\n    limit?: number,\n    nextToken?: string\n  ): Promise<ListBlogsQuery> {\n    const statement = `query ListBlogs($filter: ModelBlogFilterInput, $limit: Int, $nextToken: String) {\n        listBlogs(filter: $filter, limit: $limit, nextToken: $nextToken) {\n          __typename\n          items {\n            __typename\n            id\n            name\n            posts {\n              __typename\n              nextToken\n              startedAt\n            }\n            _version\n            _deleted\n            _lastChangedAt\n            createdAt\n            updatedAt\n          }\n          nextToken\n          startedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {};\n    if (filter) {\n      gqlAPIServiceArguments.filter = filter;\n    }\n    if (limit) {\n      gqlAPIServiceArguments.limit = limit;\n    }\n    if (nextToken) {\n      gqlAPIServiceArguments.nextToken = nextToken;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return <ListBlogsQuery>response.data.listBlogs;\n  }\n  async SyncPosts(\n    filter?: ModelPostFilterInput,\n    limit?: number,\n    nextToken?: string,\n    lastSync?: number\n  ): Promise<SyncPostsQuery> {\n    const statement = `query SyncPosts($filter: ModelPostFilterInput, $limit: Int, $nextToken: String, $lastSync: AWSTimestamp) {\n        syncPosts(filter: $filter, limit: $limit, nextToken: $nextToken, lastSync: $lastSync) {\n          __typename\n          items {\n            __typename\n            id\n            title\n            blogID\n            blog {\n              __typename\n              id\n              name\n              _version\n              _deleted\n              _lastChangedAt\n              createdAt\n              updatedAt\n            }\n            comments {\n              __typename\n              nextToken\n              startedAt\n            }\n            _version\n            _deleted\n            _lastChangedAt\n            createdAt\n            updatedAt\n          }\n          nextToken\n          startedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {};\n    if (filter) {\n      gqlAPIServiceArguments.filter = filter;\n    }\n    if (limit) {\n      gqlAPIServiceArguments.limit = limit;\n    }\n    if (nextToken) {\n      gqlAPIServiceArguments.nextToken = nextToken;\n    }\n    if (lastSync) {\n      gqlAPIServiceArguments.lastSync = lastSync;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return <SyncPostsQuery>response.data.syncPosts;\n  }\n  async GetPost(id: string): Promise<GetPostQuery> {\n    const statement = `query GetPost($id: ID!) {\n        getPost(id: $id) {\n          __typename\n          id\n          title\n          blogID\n          blog {\n            __typename\n            id\n            name\n            posts {\n              __typename\n              nextToken\n              startedAt\n            }\n            _version\n            _deleted\n            _lastChangedAt\n            createdAt\n            updatedAt\n          }\n          comments {\n            __typename\n            items {\n              __typename\n              id\n              postID\n              content\n              _version\n              _deleted\n              _lastChangedAt\n              createdAt\n              updatedAt\n            }\n            nextToken\n            startedAt\n          }\n          _version\n          _deleted\n          _lastChangedAt\n          createdAt\n          updatedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      id\n    };\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return <GetPostQuery>response.data.getPost;\n  }\n  async ListPosts(\n    filter?: ModelPostFilterInput,\n    limit?: number,\n    nextToken?: string\n  ): Promise<ListPostsQuery> {\n    const statement = `query ListPosts($filter: ModelPostFilterInput, $limit: Int, $nextToken: String) {\n        listPosts(filter: $filter, limit: $limit, nextToken: $nextToken) {\n          __typename\n          items {\n            __typename\n            id\n            title\n            blogID\n            blog {\n              __typename\n              id\n              name\n              _version\n              _deleted\n              _lastChangedAt\n              createdAt\n              updatedAt\n            }\n            comments {\n              __typename\n              nextToken\n              startedAt\n            }\n            _version\n            _deleted\n            _lastChangedAt\n            createdAt\n            updatedAt\n          }\n          nextToken\n          startedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {};\n    if (filter) {\n      gqlAPIServiceArguments.filter = filter;\n    }\n    if (limit) {\n      gqlAPIServiceArguments.limit = limit;\n    }\n    if (nextToken) {\n      gqlAPIServiceArguments.nextToken = nextToken;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return <ListPostsQuery>response.data.listPosts;\n  }\n  async SyncComments(\n    filter?: ModelCommentFilterInput,\n    limit?: number,\n    nextToken?: string,\n    lastSync?: number\n  ): Promise<SyncCommentsQuery> {\n    const statement = `query SyncComments($filter: ModelCommentFilterInput, $limit: Int, $nextToken: String, $lastSync: AWSTimestamp) {\n        syncComments(filter: $filter, limit: $limit, nextToken: $nextToken, lastSync: $lastSync) {\n          __typename\n          items {\n            __typename\n            id\n            postID\n            post {\n              __typename\n              id\n              title\n              blogID\n              _version\n              _deleted\n              _lastChangedAt\n              createdAt\n              updatedAt\n            }\n            content\n            _version\n            _deleted\n            _lastChangedAt\n            createdAt\n            updatedAt\n          }\n          nextToken\n          startedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {};\n    if (filter) {\n      gqlAPIServiceArguments.filter = filter;\n    }\n    if (limit) {\n      gqlAPIServiceArguments.limit = limit;\n    }\n    if (nextToken) {\n      gqlAPIServiceArguments.nextToken = nextToken;\n    }\n    if (lastSync) {\n      gqlAPIServiceArguments.lastSync = lastSync;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return <SyncCommentsQuery>response.data.syncComments;\n  }\n  async GetComment(id: string): Promise<GetCommentQuery> {\n    const statement = `query GetComment($id: ID!) {\n        getComment(id: $id) {\n          __typename\n          id\n          postID\n          post {\n            __typename\n            id\n            title\n            blogID\n            blog {\n              __typename\n              id\n              name\n              _version\n              _deleted\n              _lastChangedAt\n              createdAt\n              updatedAt\n            }\n            comments {\n              __typename\n              nextToken\n              startedAt\n            }\n            _version\n            _deleted\n            _lastChangedAt\n            createdAt\n            updatedAt\n          }\n          content\n          _version\n          _deleted\n          _lastChangedAt\n          createdAt\n          updatedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      id\n    };\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return <GetCommentQuery>response.data.getComment;\n  }\n  async ListComments(\n    filter?: ModelCommentFilterInput,\n    limit?: number,\n    nextToken?: string\n  ): Promise<ListCommentsQuery> {\n    const statement = `query ListComments($filter: ModelCommentFilterInput, $limit: Int, $nextToken: String) {\n        listComments(filter: $filter, limit: $limit, nextToken: $nextToken) {\n          __typename\n          items {\n            __typename\n            id\n            postID\n            post {\n              __typename\n              id\n              title\n              blogID\n              _version\n              _deleted\n              _lastChangedAt\n              createdAt\n              updatedAt\n            }\n            content\n            _version\n            _deleted\n            _lastChangedAt\n            createdAt\n            updatedAt\n          }\n          nextToken\n          startedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {};\n    if (filter) {\n      gqlAPIServiceArguments.filter = filter;\n    }\n    if (limit) {\n      gqlAPIServiceArguments.limit = limit;\n    }\n    if (nextToken) {\n      gqlAPIServiceArguments.nextToken = nextToken;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return <ListCommentsQuery>response.data.listComments;\n  }\n  OnCreateBlogListener: Observable<\n    SubscriptionResponse<OnCreateBlogSubscription>\n  > = API.graphql(\n    graphqlOperation(\n      `subscription OnCreateBlog {\n        onCreateBlog {\n          __typename\n          id\n          name\n          posts {\n            __typename\n            items {\n              __typename\n              id\n              title\n              blogID\n              _version\n              _deleted\n              _lastChangedAt\n              createdAt\n              updatedAt\n            }\n            nextToken\n            startedAt\n          }\n          _version\n          _deleted\n          _lastChangedAt\n          createdAt\n          updatedAt\n        }\n      }`\n    )\n  ) as Observable<SubscriptionResponse<OnCreateBlogSubscription>>;\n\n  OnUpdateBlogListener: Observable<\n    SubscriptionResponse<OnUpdateBlogSubscription>\n  > = API.graphql(\n    graphqlOperation(\n      `subscription OnUpdateBlog {\n        onUpdateBlog {\n          __typename\n          id\n          name\n          posts {\n            __typename\n            items {\n              __typename\n              id\n              title\n              blogID\n              _version\n              _deleted\n              _lastChangedAt\n              createdAt\n              updatedAt\n            }\n            nextToken\n            startedAt\n          }\n          _version\n          _deleted\n          _lastChangedAt\n          createdAt\n          updatedAt\n        }\n      }`\n    )\n  ) as Observable<SubscriptionResponse<OnUpdateBlogSubscription>>;\n\n  OnDeleteBlogListener: Observable<\n    SubscriptionResponse<OnDeleteBlogSubscription>\n  > = API.graphql(\n    graphqlOperation(\n      `subscription OnDeleteBlog {\n        onDeleteBlog {\n          __typename\n          id\n          name\n          posts {\n            __typename\n            items {\n              __typename\n              id\n              title\n              blogID\n              _version\n              _deleted\n              _lastChangedAt\n              createdAt\n              updatedAt\n            }\n            nextToken\n            startedAt\n          }\n          _version\n          _deleted\n          _lastChangedAt\n          createdAt\n          updatedAt\n        }\n      }`\n    )\n  ) as Observable<SubscriptionResponse<OnDeleteBlogSubscription>>;\n\n  OnCreatePostListener: Observable<\n    SubscriptionResponse<OnCreatePostSubscription>\n  > = API.graphql(\n    graphqlOperation(\n      `subscription OnCreatePost {\n        onCreatePost {\n          __typename\n          id\n          title\n          blogID\n          blog {\n            __typename\n            id\n            name\n            posts {\n              __typename\n              nextToken\n              startedAt\n            }\n            _version\n            _deleted\n            _lastChangedAt\n            createdAt\n            updatedAt\n          }\n          comments {\n            __typename\n            items {\n              __typename\n              id\n              postID\n              content\n              _version\n              _deleted\n              _lastChangedAt\n              createdAt\n              updatedAt\n            }\n            nextToken\n            startedAt\n          }\n          _version\n          _deleted\n          _lastChangedAt\n          createdAt\n          updatedAt\n        }\n      }`\n    )\n  ) as Observable<SubscriptionResponse<OnCreatePostSubscription>>;\n\n  OnUpdatePostListener: Observable<\n    SubscriptionResponse<OnUpdatePostSubscription>\n  > = API.graphql(\n    graphqlOperation(\n      `subscription OnUpdatePost {\n        onUpdatePost {\n          __typename\n          id\n          title\n          blogID\n          blog {\n            __typename\n            id\n            name\n            posts {\n              __typename\n              nextToken\n              startedAt\n            }\n            _version\n            _deleted\n            _lastChangedAt\n            createdAt\n            updatedAt\n          }\n          comments {\n            __typename\n            items {\n              __typename\n              id\n              postID\n              content\n              _version\n              _deleted\n              _lastChangedAt\n              createdAt\n              updatedAt\n            }\n            nextToken\n            startedAt\n          }\n          _version\n          _deleted\n          _lastChangedAt\n          createdAt\n          updatedAt\n        }\n      }`\n    )\n  ) as Observable<SubscriptionResponse<OnUpdatePostSubscription>>;\n\n  OnDeletePostListener: Observable<\n    SubscriptionResponse<OnDeletePostSubscription>\n  > = API.graphql(\n    graphqlOperation(\n      `subscription OnDeletePost {\n        onDeletePost {\n          __typename\n          id\n          title\n          blogID\n          blog {\n            __typename\n            id\n            name\n            posts {\n              __typename\n              nextToken\n              startedAt\n            }\n            _version\n            _deleted\n            _lastChangedAt\n            createdAt\n            updatedAt\n          }\n          comments {\n            __typename\n            items {\n              __typename\n              id\n              postID\n              content\n              _version\n              _deleted\n              _lastChangedAt\n              createdAt\n              updatedAt\n            }\n            nextToken\n            startedAt\n          }\n          _version\n          _deleted\n          _lastChangedAt\n          createdAt\n          updatedAt\n        }\n      }`\n    )\n  ) as Observable<SubscriptionResponse<OnDeletePostSubscription>>;\n\n  OnCreateCommentListener: Observable<\n    SubscriptionResponse<OnCreateCommentSubscription>\n  > = API.graphql(\n    graphqlOperation(\n      `subscription OnCreateComment {\n        onCreateComment {\n          __typename\n          id\n          postID\n          post {\n            __typename\n            id\n            title\n            blogID\n            blog {\n              __typename\n              id\n              name\n              _version\n              _deleted\n              _lastChangedAt\n              createdAt\n              updatedAt\n            }\n            comments {\n              __typename\n              nextToken\n              startedAt\n            }\n            _version\n            _deleted\n            _lastChangedAt\n            createdAt\n            updatedAt\n          }\n          content\n          _version\n          _deleted\n          _lastChangedAt\n          createdAt\n          updatedAt\n        }\n      }`\n    )\n  ) as Observable<SubscriptionResponse<OnCreateCommentSubscription>>;\n\n  OnUpdateCommentListener: Observable<\n    SubscriptionResponse<OnUpdateCommentSubscription>\n  > = API.graphql(\n    graphqlOperation(\n      `subscription OnUpdateComment {\n        onUpdateComment {\n          __typename\n          id\n          postID\n          post {\n            __typename\n            id\n            title\n            blogID\n            blog {\n              __typename\n              id\n              name\n              _version\n              _deleted\n              _lastChangedAt\n              createdAt\n              updatedAt\n            }\n            comments {\n              __typename\n              nextToken\n              startedAt\n            }\n            _version\n            _deleted\n            _lastChangedAt\n            createdAt\n            updatedAt\n          }\n          content\n          _version\n          _deleted\n          _lastChangedAt\n          createdAt\n          updatedAt\n        }\n      }`\n    )\n  ) as Observable<SubscriptionResponse<OnUpdateCommentSubscription>>;\n\n  OnDeleteCommentListener: Observable<\n    SubscriptionResponse<OnDeleteCommentSubscription>\n  > = API.graphql(\n    graphqlOperation(\n      `subscription OnDeleteComment {\n        onDeleteComment {\n          __typename\n          id\n          postID\n          post {\n            __typename\n            id\n            title\n            blogID\n            blog {\n              __typename\n              id\n              name\n              _version\n              _deleted\n              _lastChangedAt\n              createdAt\n              updatedAt\n            }\n            comments {\n              __typename\n              nextToken\n              startedAt\n            }\n            _version\n            _deleted\n            _lastChangedAt\n            createdAt\n            updatedAt\n          }\n          content\n          _version\n          _deleted\n          _lastChangedAt\n          createdAt\n          updatedAt\n        }\n      }`\n    )\n  ) as Observable<SubscriptionResponse<OnDeleteCommentSubscription>>;\n}\n",
            "type": "injectable"
        },
        {
            "name": "AppDataState",
            "id": "injectable-AppDataState-3cb733b4476b62426f141fcce0000e2d",
            "file": "src/app/store/app-data/app-data.state.ts",
            "properties": [],
            "methods": [
                {
                    "name": "addDispute",
                    "args": [
                        {
                            "name": "ctx",
                            "type": "StateContext<AppDataStateModel>"
                        },
                        {
                            "type": "AppDataActions.Add"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 57,
                    "decorators": [
                        {
                            "name": "Action",
                            "stringifiedArguments": "AppDataActions.Add"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "ctx",
                            "type": "StateContext<AppDataStateModel>",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "type": "AppDataActions.Add",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "deleteDispute",
                    "args": [
                        {
                            "name": "ctx",
                            "type": "StateContext<AppDataStateModel>"
                        },
                        {
                            "type": "AppDataActions.Delete"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "decorators": [
                        {
                            "name": "Action",
                            "stringifiedArguments": "AppDataActions.Delete"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "ctx",
                            "type": "StateContext<AppDataStateModel>",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "type": "AppDataActions.Delete",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getAppData",
                    "args": [
                        {
                            "name": "state",
                            "type": "AppDataStateModel"
                        }
                    ],
                    "optional": false,
                    "returnType": "AppData | undefined",
                    "typeParameters": [],
                    "line": 24,
                    "decorators": [
                        {
                            "name": "Selector",
                            "stringifiedArguments": "undefined"
                        }
                    ],
                    "modifierKind": [
                        115
                    ],
                    "jsdoctags": [
                        {
                            "name": "state",
                            "type": "AppDataStateModel",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateDispute",
                    "args": [
                        {
                            "name": "ctx",
                            "type": "StateContext<AppDataStateModel>"
                        },
                        {
                            "type": "AppDataActions.Edit"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 42,
                    "decorators": [
                        {
                            "name": "Action",
                            "stringifiedArguments": "AppDataActions.Edit"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "ctx",
                            "type": "StateContext<AppDataStateModel>",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "type": "AppDataActions.Edit",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "description": "",
            "sourceCode": "import { State, Action, StateContext, Selector } from '@ngxs/store';\nimport * as AppDataActions from './app-data.actions';\nimport { Injectable } from '@angular/core';\nimport { AppData } from '@shared/models/app-data.model';\nimport { User } from '@shared/models/user.model';\n\nexport class AppDataStateModel {\n  appData: AppData | undefined;\n  loaded: boolean | undefined;\n}\n\n@State<AppDataStateModel>({\n  name: 'appData',\n  defaults: {\n    appData: new AppData({} as User),\n    loaded: false,\n  },\n})\n@Injectable()\nexport class AppDataState {\n  constructor() {}\n\n  @Selector([AppDataState])\n  static getAppData(state: AppDataStateModel): AppData | undefined {\n    return state.appData;\n  }\n\n  @Action(AppDataActions.Delete)\n  deleteDispute(\n    ctx: StateContext<AppDataStateModel>,\n    {}: AppDataActions.Delete\n  ): void {\n    const state = ctx.getState();\n    const appData = new AppData({} as User);\n    ctx.setState({\n      ...state,\n      appData,\n    });\n  }\n\n  @Action(AppDataActions.Edit)\n  updateDispute(\n    ctx: StateContext<AppDataStateModel>,\n    { payload }: AppDataActions.Edit\n  ): void {\n    const state = ctx.getState();\n    const appData = {\n      ...state,\n      ...payload,\n    };\n    ctx.patchState({\n      appData,\n    });\n  }\n\n  @Action(AppDataActions.Add)\n  addDispute(\n    ctx: StateContext<AppDataStateModel>,\n    { payload }: AppDataActions.Add\n  ): void {\n    const state = ctx.getState();\n    const appData = payload;\n    ctx.setState({\n      ...state,\n      appData,\n    });\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 20
            },
            "type": "injectable"
        },
        {
            "name": "AuthService",
            "id": "injectable-AuthService-04e7db391f65b7e34ac280666a1b3ca7",
            "file": "src/app/shared/services/auth/auth.service.ts",
            "properties": [
                {
                    "name": "authState",
                    "defaultValue": "new Subject<\n    CognitoUser | any\n  >()",
                    "type": "Subject<CognitoUser | any>",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "authState$",
                    "defaultValue": "this.authState.asObservable()",
                    "type": "Observable<CognitoUser | any>",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "FACEBOOK",
                    "defaultValue": "CognitoHostedUIIdentityProvider.Facebook",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "modifierKind": [
                        115
                    ]
                },
                {
                    "name": "GOOGLE",
                    "defaultValue": "CognitoHostedUIIdentityProvider.Google",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        115
                    ]
                },
                {
                    "name": "SIGN_IN",
                    "defaultValue": "'signIn'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        115
                    ]
                },
                {
                    "name": "SIGN_OUT",
                    "defaultValue": "'signOut'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        115
                    ]
                }
            ],
            "methods": [
                {
                    "name": "forgotPasswordSubmit",
                    "args": [
                        {
                            "name": "email",
                            "type": "string"
                        },
                        {
                            "name": "code",
                            "type": "string"
                        },
                        {
                            "name": "pw",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise | undefined",
                    "typeParameters": [],
                    "line": 107,
                    "jsdoctags": [
                        {
                            "name": "email",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "code",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "pw",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getAuthState",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<CognitoUser | any>",
                    "typeParameters": [],
                    "line": 141
                },
                {
                    "name": "getAuthTokens",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<string>",
                    "typeParameters": [],
                    "line": 131,
                    "modifierKind": [
                        120
                    ]
                },
                {
                    "name": "refreshAuthState",
                    "args": [
                        {
                            "name": "user",
                            "type": "CognitoUser",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<void>",
                    "typeParameters": [],
                    "line": 117,
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "user",
                            "type": "CognitoUser",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "resendSignUp",
                    "args": [
                        {
                            "name": "email",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise | undefined",
                    "typeParameters": [],
                    "line": 103,
                    "jsdoctags": [
                        {
                            "name": "email",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "signIn",
                    "args": [
                        {
                            "name": "username",
                            "type": "string"
                        },
                        {
                            "name": "password",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<CognitoUser | any>",
                    "typeParameters": [],
                    "line": 72,
                    "description": "<p>Cognito sign in method</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1961,
                                "end": 1969,
                                "flags": 0,
                                "escapedText": "username"
                            },
                            "type": "string",
                            "tagName": {
                                "pos": 1955,
                                "end": 1960,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": ""
                        },
                        {
                            "name": {
                                "pos": 1982,
                                "end": 1990,
                                "flags": 0,
                                "escapedText": "password"
                            },
                            "type": "string",
                            "tagName": {
                                "pos": 1976,
                                "end": 1981,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": ""
                        },
                        {
                            "tagName": {
                                "pos": 1997,
                                "end": 2004,
                                "flags": 0,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ]
                },
                {
                    "name": "signOut",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<any>",
                    "typeParameters": [],
                    "line": 86,
                    "description": "<p>Simple sign out method</p>\n",
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 2351,
                                "end": 2358,
                                "flags": 0,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ]
                },
                {
                    "name": "signUp",
                    "args": [
                        {
                            "name": "user",
                            "type": "NewUser"
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<ISignUpResult>",
                    "typeParameters": [],
                    "line": 56,
                    "description": "<p>Cognito sign up method</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1681,
                                "end": 1685,
                                "flags": 0,
                                "escapedText": "user"
                            },
                            "type": "NewUser",
                            "tagName": {
                                "pos": 1675,
                                "end": 1680,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": ""
                        },
                        {
                            "tagName": {
                                "pos": 1692,
                                "end": 1699,
                                "flags": 0,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ]
                },
                {
                    "name": "socialSignIn",
                    "args": [
                        {
                            "name": "provider",
                            "type": "CognitoHostedUIIdentityProvider"
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<ICredentials>",
                    "typeParameters": [],
                    "line": 95,
                    "description": "<p>Social signin (supports facebook and google)</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 2493,
                                "end": 2501,
                                "flags": 0,
                                "escapedText": "provider"
                            },
                            "type": "CognitoHostedUIIdentityProvider",
                            "tagName": {
                                "pos": 2487,
                                "end": 2492,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": ""
                        },
                        {
                            "tagName": {
                                "pos": 2508,
                                "end": 2515,
                                "flags": 0,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ]
                }
            ],
            "description": "",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport Auth, { CognitoHostedUIIdentityProvider } from '@aws-amplify/auth';\nimport { Hub, ICredentials } from '@aws-amplify/core';\nimport { Subject, Observable } from 'rxjs';\nimport { CognitoUser, ISignUpResult } from 'amazon-cognito-identity-js';\nimport { Store } from '@ngxs/store';\nimport * as AppDataActions from '@store/app-data/app-data.actions';\nimport { AppData } from '@shared/models/app-data.model';\nimport { User } from '@shared/models/user.model';\n\nexport interface NewUser {\n  username: string;\n  password: string;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  private authState: Subject<CognitoUser | any> = new Subject<\n    CognitoUser | any\n  >();\n  authState$: Observable<CognitoUser | any> = this.authState.asObservable();\n\n  public static SIGN_IN = 'signIn';\n  public static SIGN_OUT = 'signOut';\n  public static FACEBOOK = CognitoHostedUIIdentityProvider.Facebook;\n  public static GOOGLE = CognitoHostedUIIdentityProvider.Google;\n\n  constructor(private store: Store) {\n    Hub.listen('auth', (data) => {\n      const { channel, payload } = data;\n      console.log('auth change', channel, payload);\n      switch (payload.event) {\n        case 'signIn':\n          this.authState.next(payload.data);\n          let user: CognitoUser = payload.data;\n          let appData = new AppData(new User('abc', true));\n          this.store.dispatch(new AppDataActions.Add(appData));\n          break;\n        case 'signOut':\n          // handle sign out\n          break;\n        default:\n          // do something by default\n          break;\n      }\n    });\n  }\n\n  /**\n   * Cognito sign up method\n   * @param user\n   * @returns\n   */\n  signUp(user: NewUser): Promise<ISignUpResult> {\n    return Auth.signUp({\n      username: user.username,\n      password: user.password,\n      attributes: {\n        email: user.username,\n      },\n    });\n  }\n\n  /**\n   * Cognito sign in method\n   * @param username\n   * @param password\n   * @returns\n   */\n  signIn(username: string, password: string): Promise<CognitoUser | any> {\n    return new Promise((resolve, reject) => {\n      Auth.signIn(username, password)\n        .then((user: CognitoUser | any) => {\n          resolve(user);\n        })\n        .catch((error: any) => reject(error));\n    });\n  }\n\n  /**\n   * Simple sign out method\n   * @returns\n   */\n  signOut(): Promise<any> {\n    return Auth.signOut();\n  }\n\n  /**\n   * Social signin (supports facebook and google)\n   * @param provider\n   * @returns\n   */\n  socialSignIn(\n    provider: CognitoHostedUIIdentityProvider\n  ): Promise<ICredentials> {\n    return Auth.federatedSignIn({\n      provider: provider,\n    });\n  }\n\n  resendSignUp(email: string): Promise<string> | undefined {\n    return email ? Auth.resendSignUp(email) : undefined;\n  }\n\n  forgotPasswordSubmit(\n    email: string,\n    code: string,\n    pw: string\n  ): Promise<void> | undefined {\n    return email\n      ? Auth.forgotPasswordSubmit(email.toLowerCase(), code, pw)\n      : undefined;\n  }\n\n  async refreshAuthState(user?: CognitoUser): Promise<void> {\n    if (user) {\n      this.authState.next(user);\n      return;\n    }\n    try {\n      const user = await Auth.currentAuthenticatedUser();\n      this.authState.next(user);\n    } catch (err) {\n      const unconfirmed = await Auth.currentCredentials();\n      this.authState.next(null);\n    }\n  }\n\n  async getAuthTokens(): Promise<string> {\n    try {\n      const user: CognitoUser = await Auth.currentAuthenticatedUser();\n      let session = user.getSignInUserSession();\n      return session ? session.getIdToken().getJwtToken() : '';\n    } catch (err) {\n      return '';\n    }\n  }\n\n  getAuthState(): Observable<CognitoUser | any> {\n    return this.authState$;\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store"
                    }
                ],
                "line": 28,
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "GuestService",
            "id": "injectable-GuestService-bfe3b24945b16f7668b9a4c58bb261bb",
            "file": "src/app/shared/services/auth/guest.service.ts",
            "properties": [
                {
                    "name": "guestState",
                    "defaultValue": "new Subject<ICredentials | any>()",
                    "type": "Subject<ICredentials | any>",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "guestState$",
                    "defaultValue": "this.guestState.asObservable()",
                    "type": "Observable<ICredentials | any>",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methods": [
                {
                    "name": "initGuestState",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<void>",
                    "typeParameters": [],
                    "line": 17,
                    "modifierKind": [
                        120
                    ]
                },
                {
                    "name": "refreshGuestState",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<void>",
                    "typeParameters": [],
                    "line": 21,
                    "modifierKind": [
                        120
                    ]
                }
            ],
            "description": "",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { ICredentials } from '@aws-amplify/core';\nimport { Auth } from 'aws-amplify';\nimport { Subject, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class GuestService {\n  private guestState: Subject<ICredentials | any> = new Subject<ICredentials | any>();\n  guestState$: Observable<ICredentials | any> = this.guestState.asObservable();\n\n  constructor() {\n    this.initGuestState();\n  }\n\n  async initGuestState(): Promise<void> {\n    await this.refreshGuestState();\n  }\n\n  async refreshGuestState(): Promise<void> {\n    try {\n      const guest = await Auth.currentCredentials();\n      this.guestState.next(guest);\n    } catch (err) {\n      this.guestState.next(null);\n    }\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 11
            },
            "type": "injectable"
        },
        {
            "name": "IamService",
            "id": "injectable-IamService-98612c6fd11523dcd716dc3faf062b6e",
            "file": "src/app/shared/services/auth/iam.service.ts",
            "properties": [],
            "methods": [],
            "description": "",
            "sourceCode": "import { Injectable } from '@angular/core';\n// import Auth from '@aws-amplify/auth';\n// import { ISigV4Config, SigV4 } from '@shared/models/signatureV4.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class IamService {\n  constructor() {}\n\n  // signRequest(\n  //   endpoint: string,\n  //   method: string,\n  //   body: any,\n  //   queryParams: any\n  // ): Promise<any> {\n  //   return Auth.currentCredentials()\n  //     .then((credentials) => {\n  //       let cred = Auth.essentialCredentials(credentials);\n  //       return Promise.resolve(cred);\n  //     })\n  //     .then((essentialCredentials) => {\n  //       let config: ISigV4Config = {\n  //         accessKey: essentialCredentials.accessKeyId,\n  //         secretKey: essentialCredentials.secretAccessKey,\n  //         sessionToken: essentialCredentials.sessionToken,\n  //         serviceName: 'execute-api',\n  //         defaultAcceptType: 'application/json',\n  //         defaultContentType: 'application/json',\n  //         region: 'us-east-2',\n  //         endpoint: endpoint,\n  //       };\n\n  //       let request = {\n  //         method,\n  //         path: '',\n  //         headers: {},\n  //         queryParams,\n  //         body,\n  //       };\n\n  //       let signedRequest = new SigV4(config).signRequest(request);\n\n  //       return Promise.resolve(signedRequest);\n  //     });\n  // }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "type": "injectable"
        }
    ],
    "classes": [
        {
            "name": "Add",
            "id": "class-Add-7c2d1a0306f2020e71c769fa6ec916b3",
            "file": "src/app/store/app-data/app-data.actions.ts",
            "type": "class",
            "sourceCode": "import { AppData } from 'src/app/shared/models/app-data.model';\n\nexport class Add {\n  static readonly type = '[AppData] Add';\n  constructor(public payload: AppData) {}\n}\n\nexport class Edit {\n  static readonly type = '[AppData] Edit';\n  constructor(public payload: AppData) {}\n}\n\nexport class Fetch {\n  static readonly type = '[AppData] Fetch';\n  constructor(public payload: AppData) {}\n}\n\nexport class Delete {\n  static readonly type = '[AppData] Delete';\n  constructor() {}\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "payload",
                        "type": "AppData"
                    }
                ],
                "line": 4,
                "jsdoctags": [
                    {
                        "name": "payload",
                        "type": "AppData",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "payload",
                    "type": "AppData",
                    "optional": false,
                    "description": "",
                    "line": 5,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "type",
                    "defaultValue": "'[AppData] Add'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4,
                    "modifierKind": [
                        115,
                        132
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "AppData",
            "id": "class-AppData-b21695c710ad26106e765c89d4315a2a",
            "file": "src/app/shared/models/app-data.model.ts",
            "type": "class",
            "sourceCode": "import { IAppData } from '@shared/interfaces/app-data.interface';\nimport { User } from '@shared/models/user.model';\n\nexport class AppData implements IAppData {\n  version: string;\n  user: User;\n\n  constructor(user: User) {\n    this.version = 'v1';\n    this.user = user;\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "user",
                        "type": "User"
                    }
                ],
                "line": 6,
                "jsdoctags": [
                    {
                        "name": "user",
                        "type": "User",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "user",
                    "type": "User",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "version",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "implements": [
                "IAppData"
            ]
        },
        {
            "name": "AppDataStateModel",
            "id": "class-AppDataStateModel-3cb733b4476b62426f141fcce0000e2d",
            "file": "src/app/store/app-data/app-data.state.ts",
            "type": "class",
            "sourceCode": "import { State, Action, StateContext, Selector } from '@ngxs/store';\nimport * as AppDataActions from './app-data.actions';\nimport { Injectable } from '@angular/core';\nimport { AppData } from '@shared/models/app-data.model';\nimport { User } from '@shared/models/user.model';\n\nexport class AppDataStateModel {\n  appData: AppData | undefined;\n  loaded: boolean | undefined;\n}\n\n@State<AppDataStateModel>({\n  name: 'appData',\n  defaults: {\n    appData: new AppData({} as User),\n    loaded: false,\n  },\n})\n@Injectable()\nexport class AppDataState {\n  constructor() {}\n\n  @Selector([AppDataState])\n  static getAppData(state: AppDataStateModel): AppData | undefined {\n    return state.appData;\n  }\n\n  @Action(AppDataActions.Delete)\n  deleteDispute(\n    ctx: StateContext<AppDataStateModel>,\n    {}: AppDataActions.Delete\n  ): void {\n    const state = ctx.getState();\n    const appData = new AppData({} as User);\n    ctx.setState({\n      ...state,\n      appData,\n    });\n  }\n\n  @Action(AppDataActions.Edit)\n  updateDispute(\n    ctx: StateContext<AppDataStateModel>,\n    { payload }: AppDataActions.Edit\n  ): void {\n    const state = ctx.getState();\n    const appData = {\n      ...state,\n      ...payload,\n    };\n    ctx.patchState({\n      appData,\n    });\n  }\n\n  @Action(AppDataActions.Add)\n  addDispute(\n    ctx: StateContext<AppDataStateModel>,\n    { payload }: AppDataActions.Add\n  ): void {\n    const state = ctx.getState();\n    const appData = payload;\n    ctx.setState({\n      ...state,\n      appData,\n    });\n  }\n}\n",
            "properties": [
                {
                    "name": "appData",
                    "type": "AppData | undefined",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "loaded",
                    "type": "boolean | undefined",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "AppPage",
            "id": "class-AppPage-ee2067dfb1c303f41003aea7d82d51e0",
            "file": "e2e/src/app.po.ts",
            "type": "class",
            "sourceCode": "import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  async navigateTo(): Promise<unknown> {\n    return browser.get(browser.baseUrl);\n  }\n\n  async getTitleText(): Promise<string> {\n    return element(by.css('app-root .content span')).getText();\n  }\n}\n",
            "properties": [],
            "methods": [
                {
                    "name": "getTitleText",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<string>",
                    "typeParameters": [],
                    "line": 8,
                    "modifierKind": [
                        120
                    ]
                },
                {
                    "name": "navigateTo",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<unknown>",
                    "typeParameters": [],
                    "line": 4,
                    "modifierKind": [
                        120
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "Delete",
            "id": "class-Delete-7c2d1a0306f2020e71c769fa6ec916b3",
            "file": "src/app/store/app-data/app-data.actions.ts",
            "type": "class",
            "sourceCode": "import { AppData } from 'src/app/shared/models/app-data.model';\n\nexport class Add {\n  static readonly type = '[AppData] Add';\n  constructor(public payload: AppData) {}\n}\n\nexport class Edit {\n  static readonly type = '[AppData] Edit';\n  constructor(public payload: AppData) {}\n}\n\nexport class Fetch {\n  static readonly type = '[AppData] Fetch';\n  constructor(public payload: AppData) {}\n}\n\nexport class Delete {\n  static readonly type = '[AppData] Delete';\n  constructor() {}\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 19
            },
            "properties": [
                {
                    "name": "type",
                    "defaultValue": "'[AppData] Delete'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        115,
                        132
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "DOMHelper",
            "id": "class-DOMHelper-8d3fde6414c1453c64e0619242f6ba77",
            "file": "src/app/testing/dom-helper.ts",
            "type": "class",
            "sourceCode": "import { DebugElement } from '@angular/core';\nimport { ComponentFixture } from '@angular/core/testing';\nimport { By } from '@angular/platform-browser';\n\nexport class DOMHelper<T> {\n  private fixture: ComponentFixture<T>;\n  constructor(fixture: ComponentFixture<T>) {\n    this.fixture = fixture;\n  }\n\n  singleText(tagName: string): string | undefined {\n    const el = this.fixture.debugElement.query(By.css(tagName));\n    return el ? el.nativeElement.textContent : undefined;\n  }\n\n  querySelector(query: string): string | undefined {\n    const el = this.fixture.nativeElement;\n    return el ? el.querySelector(query).textContent : undefined;\n  }\n\n  count(tagName: string): number {\n    const elements = this.fixture.debugElement.queryAll(By.css(tagName));\n    return elements.length;\n  }\n\n  countText(tagName: string, text: string): number {\n    const elements = this.fixture.debugElement.queryAll(By.css(tagName));\n    return elements.filter(\n      (element) => element.nativeElement.textContent === text\n    ).length;\n  }\n\n  hasAttr(tagName: string, attrName: string): boolean {\n    const el = this.fixture.debugElement.query(By.css(tagName));\n    return el.nativeElement.hasAttribute(attrName);\n  }\n\n  hasAttrValue(tagName: string, attrName: string, value: string): boolean {\n    const el = this.fixture.debugElement.query(By.css(tagName));\n    if (!el.attributes[attrName]) {\n      return false;\n    }\n    return el.attributes[attrName] === value;\n  }\n\n  hasPropValue(tagName: string, attrName: string, value: any): boolean {\n    const el = this.fixture.debugElement.query(By.css(tagName));\n    if (!el.properties[attrName]) {\n      return false;\n    }\n    return el.properties[attrName] === value;\n  }\n\n  clickButton(buttonText: string): void {\n    this.findAll('button').forEach((button) => {\n      const buttonElement: HTMLButtonElement = button.nativeElement;\n      if (buttonElement.textContent === buttonText) {\n        buttonElement.click();\n      }\n    });\n  }\n\n  findAll(tagName: string): DebugElement[] {\n    return this.fixture.debugElement.queryAll(By.css(tagName));\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "fixture",
                        "type": "ComponentFixture<T>"
                    }
                ],
                "line": 6,
                "jsdoctags": [
                    {
                        "name": "fixture",
                        "type": "ComponentFixture<T>",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "fixture",
                    "type": "ComponentFixture<T>",
                    "optional": false,
                    "description": "",
                    "line": 6,
                    "modifierKind": [
                        112
                    ]
                }
            ],
            "methods": [
                {
                    "name": "clickButton",
                    "args": [
                        {
                            "name": "buttonText",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "jsdoctags": [
                        {
                            "name": "buttonText",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "count",
                    "args": [
                        {
                            "name": "tagName",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 21,
                    "jsdoctags": [
                        {
                            "name": "tagName",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "countText",
                    "args": [
                        {
                            "name": "tagName",
                            "type": "string"
                        },
                        {
                            "name": "text",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 26,
                    "jsdoctags": [
                        {
                            "name": "tagName",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "text",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "findAll",
                    "args": [
                        {
                            "name": "tagName",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "DebugElement[]",
                    "typeParameters": [],
                    "line": 63,
                    "jsdoctags": [
                        {
                            "name": "tagName",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "hasAttr",
                    "args": [
                        {
                            "name": "tagName",
                            "type": "string"
                        },
                        {
                            "name": "attrName",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 33,
                    "jsdoctags": [
                        {
                            "name": "tagName",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "attrName",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "hasAttrValue",
                    "args": [
                        {
                            "name": "tagName",
                            "type": "string"
                        },
                        {
                            "name": "attrName",
                            "type": "string"
                        },
                        {
                            "name": "value",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 38,
                    "jsdoctags": [
                        {
                            "name": "tagName",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "attrName",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "value",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "hasPropValue",
                    "args": [
                        {
                            "name": "tagName",
                            "type": "string"
                        },
                        {
                            "name": "attrName",
                            "type": "string"
                        },
                        {
                            "name": "value",
                            "type": "any"
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 46,
                    "jsdoctags": [
                        {
                            "name": "tagName",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "attrName",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "value",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "querySelector",
                    "args": [
                        {
                            "name": "query",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "string | undefined",
                    "typeParameters": [],
                    "line": 16,
                    "jsdoctags": [
                        {
                            "name": "query",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "singleText",
                    "args": [
                        {
                            "name": "tagName",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "string | undefined",
                    "typeParameters": [],
                    "line": 11,
                    "jsdoctags": [
                        {
                            "name": "tagName",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "Edit",
            "id": "class-Edit-7c2d1a0306f2020e71c769fa6ec916b3",
            "file": "src/app/store/app-data/app-data.actions.ts",
            "type": "class",
            "sourceCode": "import { AppData } from 'src/app/shared/models/app-data.model';\n\nexport class Add {\n  static readonly type = '[AppData] Add';\n  constructor(public payload: AppData) {}\n}\n\nexport class Edit {\n  static readonly type = '[AppData] Edit';\n  constructor(public payload: AppData) {}\n}\n\nexport class Fetch {\n  static readonly type = '[AppData] Fetch';\n  constructor(public payload: AppData) {}\n}\n\nexport class Delete {\n  static readonly type = '[AppData] Delete';\n  constructor() {}\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "payload",
                        "type": "AppData"
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "payload",
                        "type": "AppData",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "payload",
                    "type": "AppData",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "type",
                    "defaultValue": "'[AppData] Edit'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        115,
                        132
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "Fetch",
            "id": "class-Fetch-7c2d1a0306f2020e71c769fa6ec916b3",
            "file": "src/app/store/app-data/app-data.actions.ts",
            "type": "class",
            "sourceCode": "import { AppData } from 'src/app/shared/models/app-data.model';\n\nexport class Add {\n  static readonly type = '[AppData] Add';\n  constructor(public payload: AppData) {}\n}\n\nexport class Edit {\n  static readonly type = '[AppData] Edit';\n  constructor(public payload: AppData) {}\n}\n\nexport class Fetch {\n  static readonly type = '[AppData] Fetch';\n  constructor(public payload: AppData) {}\n}\n\nexport class Delete {\n  static readonly type = '[AppData] Delete';\n  constructor() {}\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "payload",
                        "type": "AppData"
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "payload",
                        "type": "AppData",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "payload",
                    "type": "AppData",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "type",
                    "defaultValue": "'[AppData] Fetch'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        115,
                        132
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "Helper",
            "id": "class-Helper-c630ccc7b4c274d453c3be9899447c74",
            "file": "src/app/testing/test-helper.ts",
            "type": "class",
            "sourceCode": "export class Helper<T> {\n  private component: T;\n\n  constructor(component: T) {\n    this.component = component;\n  }\n\n  hasProperty(component: T, prop: string): boolean {\n    return Object.keys(component).filter((key) => key === prop).length > 0;\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "component",
                        "type": "T"
                    }
                ],
                "line": 2,
                "jsdoctags": [
                    {
                        "name": "component",
                        "type": "T",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "component",
                    "type": "T",
                    "optional": false,
                    "description": "",
                    "line": 2,
                    "modifierKind": [
                        112
                    ]
                }
            ],
            "methods": [
                {
                    "name": "hasProperty",
                    "args": [
                        {
                            "name": "component",
                            "type": "T"
                        },
                        {
                            "name": "prop",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 8,
                    "jsdoctags": [
                        {
                            "name": "component",
                            "type": "T",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "prop",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "User",
            "id": "class-User-98b19d89711b86a0dc48d604212ba7c9",
            "file": "src/app/shared/models/user.model.ts",
            "type": "class",
            "sourceCode": "import { IUser } from '@shared/interfaces/user.interface';\n\nexport class User implements IUser {\n  public id: string;\n  public signedIn: boolean;\n  constructor(id: string, signedIn: boolean = false) {\n    this.id = id;\n    this.signedIn = signedIn;\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "id",
                        "type": "string"
                    },
                    {
                        "name": "signedIn",
                        "type": "boolean",
                        "defaultValue": "false"
                    }
                ],
                "line": 5,
                "jsdoctags": [
                    {
                        "name": "id",
                        "type": "string",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "signedIn",
                        "type": "boolean",
                        "defaultValue": "false",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "id",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "signedIn",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 5,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "implements": [
                "IUser"
            ]
        }
    ],
    "directives": [
        {
            "name": "HiddenAsteriskInputDirective",
            "id": "directive-HiddenAsteriskInputDirective-25a497edf43bc977758696dde930dfc2",
            "file": "src/app/shared/components/inputs/hidden-asterisk-input/hidden-asterisk-input.directive.ts",
            "type": "directive",
            "description": "",
            "sourceCode": "import {\n  AfterViewInit,\n  Directive,\n  ElementRef,\n  HostListener,\n  Input,\n  Renderer2,\n} from '@angular/core';\n\n@Directive({\n  selector: '[braveHiddenAsteriskInput]',\n})\nexport class HiddenAsteriskInputDirective {\n  private _host: HTMLInputElement | undefined;\n  private _mask: HTMLDivElement | undefined;\n\n  get host() {\n    return this._host;\n  }\n  set host(value: HTMLInputElement | undefined) {\n    this._host = value;\n  }\n\n  get mask() {\n    return this._mask;\n  }\n  set mask(value: HTMLDivElement | undefined) {\n    this._mask = value;\n  }\n\n  constructor(el: ElementRef, private renderer: Renderer2) {\n    this.host = el.nativeElement;\n  }\n\n  @HostListener('focus') onFocus() {\n    if (this.mask && this.host) {\n      this.removeMaskElement(this.host);\n    }\n  }\n\n  @HostListener('click') onClick() {\n    if (this.mask && this.host) {\n      this.removeMaskElement(this.host);\n    }\n  }\n\n  @HostListener('blur') onBlur() {\n    if (this.host?.value?.length) this.appendMaskElement(this.host);\n  }\n\n  ngAfterViewInit() {\n    /** create the wrapping div and assign relative */\n    const div = this.renderer.createElement('div');\n    this.renderer.setStyle(div, 'position', 'relative');\n    /** wrap the host in the div */\n    const el = this.host;\n    const parent = el?.parentNode;\n    this.renderer.insertBefore(parent, div, el);\n    /** insert the element into the div */\n    this.renderer.appendChild(div, el);\n  }\n\n  //TODO refactor to iterate over styles and classes to add\n  /**\n   * Appends the new mask element (asterisk) to the input to hide it\n   * @param el\n   */\n  appendMaskElement(el: HTMLInputElement) {\n    /** set the input value color to transparent */\n    this.renderer.setStyle(el, 'opacity', '0');\n    /** create the elements to attach */\n    let div = this.renderer.createElement('div');\n    let div2 = this.renderer.createElement('div');\n    let p = this.renderer.createElement('p');\n    let asterisk = this.renderer.createText('*');\n    /** set the style/classes of the elements */\n    this.renderer.setStyle(div, 'position', 'absolute');\n    this.renderer.setStyle(div, 'top', '0');\n    this.renderer.setStyle(div, 'left', '0');\n    this.renderer.setStyle(div, 'width', '100%');\n    this.renderer.setStyle(div, 'height', '100%');\n    this.renderer.setStyle(div, 'z-index', '2');\n    this.renderer.addClass(div, 'flex');\n    this.renderer.addClass(div, 'justify-center');\n    this.renderer.addClass(div, 'items-center');\n    /* use tailwind utility classes */\n    this.renderer.addClass(div2, 'flex');\n    this.renderer.addClass(div2, 'justify-center');\n    // this.renderer.addClass(div2, 'bg-coolGray-100');\n    this.renderer.addClass(div2, 'text-blueGray-600');\n    this.renderer.addClass(div2, 'text-3xl');\n    this.renderer.setStyle(div2, 'height', '100%');\n    /** attach the new elements to the DOM */\n    this.renderer.appendChild(p, asterisk);\n    this.renderer.appendChild(div2, p);\n    this.renderer.appendChild(div, div2);\n    el.insertAdjacentElement('afterend', div);\n    /** keep track of the mask element */\n    this.mask = div;\n    this.mask?.addEventListener('click', (event) => {\n      this.removeMaskElement(el);\n      el.focus();\n    });\n  }\n\n  removeMaskElement(el: HTMLInputElement) {\n    /** remove and rest the input element when the mask is clicked */\n    let parent: HTMLElement = this.renderer.parentNode(el);\n    let child: HTMLElement | null = parent.querySelector('div');\n    this.renderer.removeChild(parent, child);\n    this.renderer.setStyle(el, 'opacity', '1');\n    this.mask = undefined;\n  }\n}\n",
            "selector": "[braveHiddenAsteriskInput]",
            "providers": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "blur",
                    "args": [],
                    "argsDecorator": [],
                    "line": 47
                },
                {
                    "name": "click",
                    "args": [],
                    "argsDecorator": [],
                    "line": 41
                },
                {
                    "name": "focus",
                    "args": [],
                    "argsDecorator": [],
                    "line": 35
                }
            ],
            "propertiesClass": [
                {
                    "name": "_host",
                    "type": "HTMLInputElement | undefined",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "_mask",
                    "type": "HTMLDivElement | undefined",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        112
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "appendMaskElement",
                    "args": [
                        {
                            "name": "el",
                            "type": "HTMLInputElement"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 68,
                    "description": "<p>Appends the new mask element (asterisk) to the input to hide it</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1573,
                                "end": 1575,
                                "flags": 0,
                                "escapedText": "el"
                            },
                            "type": "HTMLInputElement",
                            "tagName": {
                                "pos": 1567,
                                "end": 1572,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": ""
                        }
                    ]
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 51
                },
                {
                    "name": "removeMaskElement",
                    "args": [
                        {
                            "name": "el",
                            "type": "HTMLInputElement"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 106,
                    "jsdoctags": [
                        {
                            "name": "el",
                            "type": "HTMLInputElement",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "el",
                        "type": "ElementRef"
                    },
                    {
                        "name": "renderer",
                        "type": "Renderer2"
                    }
                ],
                "line": 29,
                "jsdoctags": [
                    {
                        "name": "el",
                        "type": "ElementRef",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "host": {
                    "name": "host",
                    "setSignature": {
                        "name": "host",
                        "type": "void",
                        "args": [
                            {
                                "name": "value",
                                "type": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 20,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "host",
                        "type": "",
                        "returnType": "",
                        "line": 17
                    }
                },
                "mask": {
                    "name": "mask",
                    "setSignature": {
                        "name": "mask",
                        "type": "void",
                        "args": [
                            {
                                "name": "value",
                                "type": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 27,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "mask",
                        "type": "",
                        "returnType": "",
                        "line": 24
                    }
                }
            }
        },
        {
            "name": "OutlineTooltipDirective",
            "id": "directive-OutlineTooltipDirective-ff0602395fbce479ace6894c59e6300a",
            "file": "src/app/shared/components/tooltips/outline-tooltip/outline-tooltip.directive.ts",
            "type": "directive",
            "description": "",
            "sourceCode": "import { Directive, ElementRef, HostListener, Input } from '@angular/core';\nimport { createPopper, Placement } from '@popperjs/core';\n\n@Directive({\n  selector: '[braveOutlineTooltip]',\n})\nexport class OutlineTooltipDirective {\n  @Input() title: string = 'Message title';\n  @Input() body: string = 'Message body';\n  @Input() position: Placement = 'top';\n\n  private _host: HTMLElement | undefined;\n  private _tooltip: HTMLDivElement | undefined;\n  private popoverShow: boolean = false;\n\n  get host() {\n    return this._host;\n  }\n  set host(value: HTMLElement | undefined) {\n    this._host = value;\n  }\n\n  get tooltip() {\n    return this._tooltip;\n  }\n  set tooltip(value: HTMLDivElement | undefined) {\n    this._tooltip = value;\n  }\n\n  constructor(el: ElementRef) {\n    this.host = el.nativeElement;\n    this.tooltip = document.createElement('div');\n  }\n\n  @HostListener('mouseenter') onMouseEnter() {\n    this.toggleTooltip();\n  }\n\n  @HostListener('mouseleave') onMouseLeave() {\n    this.toggleTooltip();\n  }\n\n  ngAfterViewInit() {\n    if (this.tooltip) {\n      this.tooltip.innerHTML = `\n      <div class=\"bg-white border border-solid border-blueGray-300 m-4 block z-50 font-normal leading-normal max-w-xs text-left no-underline break-words rounded-lg\">\n        <div>\n          <p class=\"bg-white font-sans font-semibold text-sm text-coolGray-700 p-3 mb-0 border-b border-solid border-blueGray-300 rounded-t-lg\">\n            ${this.title}\n          </p>\n          <p class=\"font-sans text-sm text-coolGray-700 p-3 mb-4\">\n          ${this.body}\n          </p>\n        </div>\n      </div>\n      `;\n    }\n  }\n\n  toggleTooltip() {\n    if (this.popoverShow) {\n      this.popoverShow = false;\n      this.destroyPopper();\n    } else {\n      this.popoverShow = true;\n      this.createPoppper();\n    }\n  }\n  destroyPopper() {\n    this.tooltip?.parentNode?.removeChild(this.tooltip);\n  }\n  createPoppper() {\n    if (this.host && this.tooltip) {\n      createPopper(this.host, this.tooltip, {\n        placement: this.position,\n      });\n      this.host.parentNode?.insertBefore(this.tooltip, this.host.nextSibling);\n    }\n  }\n}\n",
            "selector": "[braveOutlineTooltip]",
            "providers": [],
            "inputsClass": [
                {
                    "name": "body",
                    "defaultValue": "'Message body'",
                    "line": 9,
                    "type": "string"
                },
                {
                    "name": "position",
                    "defaultValue": "'top'",
                    "line": 10,
                    "type": "Placement"
                },
                {
                    "name": "title",
                    "defaultValue": "'Message title'",
                    "line": 8,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "mouseenter",
                    "args": [],
                    "argsDecorator": [],
                    "line": 35
                },
                {
                    "name": "mouseleave",
                    "args": [],
                    "argsDecorator": [],
                    "line": 39
                }
            ],
            "propertiesClass": [
                {
                    "name": "_host",
                    "type": "HTMLElement | undefined",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "_tooltip",
                    "type": "HTMLDivElement | undefined",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "popoverShow",
                    "defaultValue": "false",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        112
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "createPoppper",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 72
                },
                {
                    "name": "destroyPopper",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 69
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 43
                },
                {
                    "name": "toggleTooltip",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 60
                }
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "el",
                        "type": "ElementRef"
                    }
                ],
                "line": 28,
                "jsdoctags": [
                    {
                        "name": "el",
                        "type": "ElementRef",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "host": {
                    "name": "host",
                    "setSignature": {
                        "name": "host",
                        "type": "void",
                        "args": [
                            {
                                "name": "value",
                                "type": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 19,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "host",
                        "type": "",
                        "returnType": "",
                        "line": 16
                    }
                },
                "tooltip": {
                    "name": "tooltip",
                    "setSignature": {
                        "name": "tooltip",
                        "type": "void",
                        "args": [
                            {
                                "name": "value",
                                "type": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 26,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "tooltip",
                        "type": "",
                        "returnType": "",
                        "line": 23
                    }
                }
            }
        }
    ],
    "components": [
        {
            "name": "AdminNavbarComponent",
            "id": "component-AdminNavbarComponent-7fecf8bd417842ebe060f9d40a0028d3",
            "file": "src/app/shared/components/navbars/admin-navbar/admin-navbar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-admin-navbar",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./admin-navbar.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 10
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'brave-admin-navbar',\n  templateUrl: './admin-navbar.component.html',\n})\nexport class AdminNavbarComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 7
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<!-- Navbar -->\n<nav\n  class=\"absolute top-0 left-0 w-full z-10 bg-transparent md:flex-row md:flex-nowrap md:justify-start flex items-center p-4\"\n>\n  <div\n    class=\"w-full mx-autp items-center flex justify-between md:flex-nowrap flex-wrap md:px-10 px-4\"\n  >\n    <!-- Brand -->\n    <a\n      class=\"text-white text-sm uppercase hidden lg:inline-block font-semibold\"\n      href=\"#pablo\"\n      >Dashboard</a\n    >\n    <!-- Form -->\n    <form\n      class=\"md:flex hidden flex-row flex-wrap items-center lg:ml-auto mr-3\"\n    >\n      <div class=\"relative flex w-full flex-wrap items-stretch\">\n        <span\n          class=\"z-10 h-full leading-snug font-normal absolute text-center text-blueGray-300 absolute bg-transparent rounded text-base items-center justify-center w-8 pl-3 py-3\"\n          ><i class=\"fas fa-search\"></i\n        ></span>\n        <input\n          type=\"text\"\n          placeholder=\"Search here...\"\n          class=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 relative bg-white bg-white rounded text-sm shadow outline-none focus:outline-none focus:ring w-full pl-10\"\n        />\n      </div>\n    </form>\n    <!-- User -->\n    <ul class=\"flex-col md:flex-row list-none items-center hidden md:flex\">\n      <brave-user-dropdown class=\"block\"></brave-user-dropdown>\n    </ul>\n  </div>\n</nav>\n"
        },
        {
            "name": "AppComponent",
            "id": "component-AppComponent-35e835d7c4ed8c13c8f20664dcca7760",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-root",
            "styleUrls": [
                "./app.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "'brave-app'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'brave-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent implements OnInit {\n  title = 'brave-app';\n\n  // user: CognitoUserInterface | undefined;\n  // authState: AuthState = {} as AuthState;\n\n  constructor(private ref: ChangeDetectorRef) {}\n\n  ngOnInit() {}\n\n  ngOnDestroy() {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./app.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "ref",
                        "type": "ChangeDetectorRef"
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "ref",
                        "type": "ChangeDetectorRef",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<!-- <amplify-authenticator *ngIf=\"authState !== 'signedin'\"></amplify-authenticator>\n<brave-authentication *ngIf=\"authState !== 'signedin'\"></brave-authentication>\n\n<div *ngIf=\"authState === 'signedin' && user\" class=\"App\">\n  <amplify-sign-out></amplify-sign-out>\n  <div>Hello, {{ user.username }}</div>\n  <router-outlet></router-outlet>\n\n</div> -->\n<router-outlet></router-outlet>\n"
        },
        {
            "name": "AuthenticationComponent",
            "id": "component-AuthenticationComponent-e7513c54f6e44fa3f93dfd428047927d",
            "file": "src/app/layouts/authentication/authentication.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-authentication",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./authentication.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 10
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'brave-authentication',\n  templateUrl: './authentication.component.html',\n})\nexport class AuthenticationComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 7
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div>\n  <main>\n    <section\n      class=\"\n        relative\n        flex\n        justify-center\n        items-center\n        w-full\n        h-full\n        min-h-screen\n      \"\n    >\n      <router-outlet></router-outlet>\n    </section>\n  </main>\n</div>\n"
        },
        {
            "name": "AuthNavbarComponent",
            "id": "component-AuthNavbarComponent-fadaaff360d261c4e4e334547335cf9e",
            "file": "src/app/shared/components/navbars/auth-navbar/auth-navbar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-auth-navbar",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./auth-navbar.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "navbarOpen",
                    "defaultValue": "false",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12
                },
                {
                    "name": "setNavbarOpen",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'brave-auth-navbar',\n  templateUrl: './auth-navbar.component.html',\n})\nexport class AuthNavbarComponent implements OnInit {\n  navbarOpen = false;\n\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  setNavbarOpen() {\n    this.navbarOpen = !this.navbarOpen;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<nav\n  class=\"top-0 absolute z-50 w-full flex flex-wrap items-center justify-between px-2 py-3 navbar-expand-lg\"\n>\n  <div\n    class=\"container px-4 mx-auto flex flex-wrap items-center justify-between\"\n  >\n    <div\n      class=\"w-full relative flex justify-between lg:w-auto lg:static lg:block lg:justify-start\"\n    >\n      <a\n        [routerLink]=\"['/']\"\n        class=\"text-white text-sm font-bold leading-relaxed inline-block mr-4 py-2 whitespace-nowrap uppercase\"\n      >\n        Notus Angular\n      </a>\n      <button\n        class=\"cursor-pointer text-xl leading-none px-3 py-1 border border-solid border-transparent rounded bg-transparent block lg:hidden outline-none focus:outline-none\"\n        type=\"button\"\n        (click)=\"setNavbarOpen()\"\n      >\n        <i class=\"text-white fas fa-bars\"></i>\n      </button>\n    </div>\n    <div\n      class=\"lg:flex flex-grow items-center bg-white lg:bg-opacity-0 lg:shadow-none\"\n      [ngClass]=\"{ hidden: !navbarOpen, 'block rounded shadow-lg': navbarOpen }\"\n      id=\"example-navbar-warning\"\n    >\n      <ul class=\"flex flex-col lg:flex-row list-none mr-auto\">\n        <li class=\"flex items-center\">\n          <a\n            class=\"lg:text-white lg:hover:text-blueGray-200 text-blueGray-700 px-3 py-4 lg:py-2 flex items-center text-xs uppercase font-bold\"\n            href=\"https://www.creative-tim.com/learning-lab/tailwind/angular/overview/notus?ref=na-auth-navbar\"\n          >\n            <i\n              class=\"lg:text-blueGray-200 text-blueGray-400 far fa-file-alt text-lg leading-lg mr-2\"\n            ></i>\n            Docs\n          </a>\n        </li>\n      </ul>\n      <ul class=\"flex flex-col lg:flex-row list-none lg:ml-auto\">\n        <li class=\"flex items-center\">\n          <brave-pages-dropdown class=\"block\"></brave-pages-dropdown>\n        </li>\n        <li class=\"flex items-center\">\n          <a\n            class=\"lg:text-white lg:hover:text-blueGray-200 text-blueGray-700 px-3 py-4 lg:py-2 flex items-center text-xs uppercase font-bold\"\n            href=\"https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fdemos.creative-tim.com%2Fnotus-angular%2F\"\n            target=\"_blank\"\n          >\n            <i\n              class=\"lg:text-blueGray-200 text-blueGray-400 fab fa-facebook text-lg leading-lg\"\n            ></i>\n            <span class=\"lg:hidden inline-block ml-2\">Share</span>\n          </a>\n        </li>\n\n        <li class=\"flex items-center\">\n          <a\n            class=\"lg:text-white lg:hover:text-blueGray-200 text-blueGray-700 px-3 py-4 lg:py-2 flex items-center text-xs uppercase font-bold\"\n            href=\"https://twitter.com/intent/tweet?url=https%3A%2F%2Fdemos.creative-tim.com%2Fnotus-angular%2F&text=Start%20your%20development%20with%20a%20Free%20Tailwind%20CSS%20and%20Angular%20UI%20Kit%20and%20Admin.%20Let%20Notus%20Angular%20amaze%20you%20with%20its%20cool%20features%20and%20build%20tools%20and%20get%20your%20project%20to%20a%20whole%20new%20level.\"\n            target=\"_blank\"\n          >\n            <i\n              class=\"lg:text-blueGray-200 text-blueGray-400 fab fa-twitter text-lg leading-lg\"\n            ></i>\n            <span class=\"lg:hidden inline-block ml-2\">Tweet</span>\n          </a>\n        </li>\n\n        <li class=\"flex items-center\">\n          <a\n            class=\"lg:text-white lg:hover:text-blueGray-200 text-blueGray-700 px-3 py-4 lg:py-2 flex items-center text-xs uppercase font-bold\"\n            href=\"https://github.com/creativetimofficial/notus-angular?ref=na-auth-navbar\"\n            target=\"_blank\"\n          >\n            <i\n              class=\"lg:text-blueGray-200 text-blueGray-400 fab fa-github text-lg leading-lg\"\n            ></i>\n            <span class=\"lg:hidden inline-block ml-2\">Star</span>\n          </a>\n        </li>\n\n        <li class=\"flex items-center\">\n          <button\n            class=\"bg-white text-blueGray-700 active:bg-blueGray-50 text-xs font-bold uppercase px-4 py-2 rounded shadow hover:shadow-md outline-none focus:outline-none lg:mr-1 lg:mb-0 ml-3 mb-3 ease-linear transition-all duration-150\"\n            type=\"button\"\n          >\n            <i class=\"fas fa-arrow-alt-circle-down\"></i> Download\n          </button>\n        </li>\n      </ul>\n    </div>\n  </div>\n</nav>\n"
        },
        {
            "name": "BaseModalRegularComponent",
            "id": "component-BaseModalRegularComponent-4e75336fda9cfe7684da063f9c81fbe5",
            "file": "src/app/shared/components/modals/base-modal-regular/base-modal-regular.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-base-modal-regular",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./base-modal-regular.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "config",
                    "defaultValue": "{\n    openButtonText: 'Open',\n    title: 'Message Title',\n    body: 'Message Text',\n    actionButtonOneText: 'Cancel',\n    actionButtonTwoText: 'Continue',\n  }",
                    "line": 16,
                    "type": "IBaseModalRegularConfig"
                }
            ],
            "outputsClass": [
                {
                    "name": "actionOne",
                    "defaultValue": "new EventEmitter()",
                    "line": 23,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "actionTwo",
                    "defaultValue": "new EventEmitter()",
                    "line": 24,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "showModal",
                    "defaultValue": "false",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29
                },
                {
                    "name": "toggleModal",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\nexport interface IBaseModalRegularConfig {\n  openButtonText: string;\n  title: string;\n  body: string;\n  actionButtonOneText: string;\n  actionButtonTwoText: string;\n}\n\n@Component({\n  selector: 'brave-base-modal-regular',\n  templateUrl: './base-modal-regular.component.html',\n})\nexport class BaseModalRegularComponent implements OnInit {\n  @Input() config: IBaseModalRegularConfig = {\n    openButtonText: 'Open',\n    title: 'Message Title',\n    body: 'Message Text',\n    actionButtonOneText: 'Cancel',\n    actionButtonTwoText: 'Continue',\n  };\n  @Output() actionOne: EventEmitter<any> = new EventEmitter();\n  @Output() actionTwo: EventEmitter<any> = new EventEmitter();\n\n  public showModal = false;\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  toggleModal() {\n    this.showModal = !this.showModal;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 26
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<brave-filled-onlytext-button (click)=\"toggleModal()\">\n  {{ config.openButtonText }}\n</brave-filled-onlytext-button>\n<div\n  *ngIf=\"showModal\"\n  class=\"overflow-x-hidden overflow-y-auto fixed inset-0 z-50 outline-none focus:outline-none justify-center items-center flex\"\n>\n  <div class=\"relative w-auto my-6 mx-auto max-w-3xl\">\n    <!--content-->\n    <div\n      class=\"border-0 rounded-lg shadow-lg relative flex flex-col w-full bg-white outline-none focus:outline-none\"\n    >\n      <!--header-->\n      <div\n        class=\"flex items-center justify-between px-5 py-3 border-b border-solid border-blueGray-200 rounded-t\"\n      >\n        <p class=\"font-sans font-semibold text-base text-coolGray-700\">\n          {{ config.title }}\n        </p>\n        <button\n          class=\"p-1 ml-auto bg-transparent border-0 text-indigo-800 float-right text-3xl leading-none font-semibold outline-none focus:outline-none\"\n          (click)=\"toggleModal()\"\n        >\n          <span class=\"material-icons text-indigo-800\">close</span>\n        </button>\n      </div>\n      <!--body-->\n      <div class=\"relative p-5 flex-auto\">\n        <p class=\"my-4 font-sans text-sm text-coolGray-700\">\n          {{ config.body }}\n        </p>\n      </div>\n      <!--footer-->\n      <div class=\"flex items-center justify-end px-5 pt-5 pb-8 rounded-b\">\n        <brave-links-onlytext-button (click)=\"actionOne.emit($event)\">\n          {{ config.actionButtonOneText }}\n        </brave-links-onlytext-button>\n        <brave-filled-onlytext-button (click)=\"actionTwo.emit($event)\">{{\n          config.actionButtonTwoText\n        }}</brave-filled-onlytext-button>\n      </div>\n    </div>\n  </div>\n</div>\n<div *ngIf=\"showModal\" class=\"opacity-20 fixed inset-0 z-40 bg-black\"></div>\n"
        },
        {
            "name": "BaseModalSmallComponent",
            "id": "component-BaseModalSmallComponent-c0c60cde89791bd56210ebe83604fd32",
            "file": "src/app/shared/components/modals/base-modal-small/base-modal-small.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-base-modal-small",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./base-modal-small.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "config",
                    "defaultValue": "{\n    openButtonText: 'Open',\n    title: 'Message Title',\n    body: 'Message Text',\n    actionButtonOneText: 'Cancel',\n    actionButtonTwoText: 'Continue',\n  }",
                    "line": 16,
                    "type": "IBaseModalSmallConfig"
                }
            ],
            "outputsClass": [
                {
                    "name": "actionOne",
                    "defaultValue": "new EventEmitter()",
                    "line": 23,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "actionTwo",
                    "defaultValue": "new EventEmitter()",
                    "line": 24,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "showModal",
                    "defaultValue": "false",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29
                },
                {
                    "name": "toggleModal",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\nexport interface IBaseModalSmallConfig {\n  openButtonText: string;\n  title: string;\n  body: string;\n  actionButtonOneText: string;\n  actionButtonTwoText: string;\n}\n\n@Component({\n  selector: 'brave-base-modal-small',\n  templateUrl: './base-modal-small.component.html',\n})\nexport class BaseModalSmallComponent implements OnInit {\n  @Input() config: IBaseModalSmallConfig = {\n    openButtonText: 'Open',\n    title: 'Message Title',\n    body: 'Message Text',\n    actionButtonOneText: 'Cancel',\n    actionButtonTwoText: 'Continue',\n  };\n  @Output() actionOne: EventEmitter<any> = new EventEmitter();\n  @Output() actionTwo: EventEmitter<any> = new EventEmitter();\n\n  public showModal = false;\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  toggleModal() {\n    this.showModal = !this.showModal;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 26
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<brave-filled-onlytext-button (click)=\"toggleModal()\">\n  {{ config.openButtonText }}\n</brave-filled-onlytext-button>\n<div\n  *ngIf=\"showModal\"\n  class=\"overflow-x-hidden overflow-y-auto fixed inset-0 z-50 outline-none focus:outline-none justify-center items-center flex\"\n>\n  <div class=\"relative w-auto my-6 mx-auto max-w-sm\">\n    <!--content-->\n    <div\n      class=\"border-0 rounded-lg shadow-lg relative flex flex-col w-full bg-white outline-none focus:outline-none\"\n    >\n      <!--header-->\n      <div\n        class=\"flex items-center justify-between px-5 py-3 border-b border-solid border-blueGray-200 rounded-t\"\n      >\n        <p class=\"font-sans font-semibold text-base text-coolGray-700\">\n          {{ config.title }}\n        </p>\n        <button\n          class=\"p-1 ml-auto bg-transparent border-0 text-indigo-800 float-right text-3xl leading-none font-semibold outline-none focus:outline-none\"\n          (click)=\"toggleModal()\"\n        >\n          <span class=\"material-icons text-indigo-800\">close</span>\n        </button>\n      </div>\n      <!--body-->\n      <div class=\"relative p-5 flex-auto\">\n        <p class=\"my-4 font-sans text-sm text-coolGray-700\">\n          {{ config.body }}\n        </p>\n      </div>\n      <!--footer-->\n      <div class=\"flex items-center justify-end px-5 pt-5 pb-8 rounded-b\">\n        <brave-links-onlytext-button (click)=\"actionOne.emit($event)\">\n          {{ config.actionButtonOneText }}\n        </brave-links-onlytext-button>\n        <brave-filled-onlytext-button (click)=\"actionTwo.emit($event)\">{{\n          config.actionButtonTwoText\n        }}</brave-filled-onlytext-button>\n      </div>\n    </div>\n  </div>\n</div>\n<div *ngIf=\"showModal\" class=\"opacity-20 fixed inset-0 z-40 bg-black\"></div>\n"
        },
        {
            "name": "DashboardNavbarComponent",
            "id": "component-DashboardNavbarComponent-0bd774f67b4e7891887b1608c514350a",
            "file": "src/app/shared/components/navbars/dashboard-navbar/dashboard-navbar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-dashboard-navbar",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./dashboard-navbar.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "menuOne",
                    "defaultValue": "{\n    menu: 'Discover',\n    submenus: [\n      { submenu: 'Sub 1', route: '/', group: 'Group 1' },\n      { submenu: 'Sub 2', route: '/' },\n      { submenu: 'Sub 3', route: '/' },\n      { submenu: 'Sub 4', route: '/' },\n      { submenu: 'Sub 5', route: '/', break: true },\n      { submenu: 'Sub 6', route: '/', group: 'Group 2' },\n      { submenu: 'Sub 7', route: '/' },\n      { submenu: 'Sub 8', route: '/', break: true },\n      { submenu: 'Sub 9', route: '/', group: 'Group 3' },\n      { submenu: 'Sub 10', route: '/' },\n    ],\n  }",
                    "type": "IMenuDropdown",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "menuThree",
                    "defaultValue": "{\n    menu: 'Settings',\n    submenus: [\n      { submenu: 'Sub 1', route: '/', group: 'Group 1' },\n      { submenu: 'Sub 2', route: '/' },\n      { submenu: 'Sub 3', route: '/' },\n      { submenu: 'Sub 4', route: '/' },\n      { submenu: 'Sub 5', route: '/', break: true },\n      { submenu: 'Sub 6', route: '/', group: 'Group 2' },\n      { submenu: 'Sub 7', route: '/' },\n      { submenu: 'Sub 8', route: '/', break: true },\n      { submenu: 'Sub 9', route: '/', group: 'Group 3' },\n      { submenu: 'Sub 10', route: '/' },\n    ],\n  }",
                    "type": "IMenuDropdown",
                    "optional": false,
                    "description": "",
                    "line": 42,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "menuTwo",
                    "defaultValue": "{\n    menu: 'Profile',\n    submenus: [\n      { submenu: 'Sub 1', route: '/', group: 'Group 1' },\n      { submenu: 'Sub 2', route: '/' },\n      { submenu: 'Sub 3', route: '/' },\n      { submenu: 'Sub 4', route: '/' },\n      { submenu: 'Sub 5', route: '/', break: true },\n      { submenu: 'Sub 6', route: '/', group: 'Group 2' },\n      { submenu: 'Sub 7', route: '/' },\n      { submenu: 'Sub 8', route: '/', break: true },\n      { submenu: 'Sub 9', route: '/', group: 'Group 3' },\n      { submenu: 'Sub 10', route: '/' },\n    ],\n  }",
                    "type": "IMenuDropdown",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "navbarOpen",
                    "defaultValue": "false",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 60
                },
                {
                    "name": "setNavbarOpen",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 62
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { IMenuDropdown } from '@shared/components/dropdowns/popdowns/menu-dropdown/menu-dropdown.component';\n\n@Component({\n  selector: 'brave-dashboard-navbar',\n  templateUrl: './dashboard-navbar.component.html',\n})\nexport class DashboardNavbarComponent implements OnInit {\n  public navbarOpen = false;\n  public menuOne: IMenuDropdown = {\n    menu: 'Discover',\n    submenus: [\n      { submenu: 'Sub 1', route: '/', group: 'Group 1' },\n      { submenu: 'Sub 2', route: '/' },\n      { submenu: 'Sub 3', route: '/' },\n      { submenu: 'Sub 4', route: '/' },\n      { submenu: 'Sub 5', route: '/', break: true },\n      { submenu: 'Sub 6', route: '/', group: 'Group 2' },\n      { submenu: 'Sub 7', route: '/' },\n      { submenu: 'Sub 8', route: '/', break: true },\n      { submenu: 'Sub 9', route: '/', group: 'Group 3' },\n      { submenu: 'Sub 10', route: '/' },\n    ],\n  };\n\n  public menuTwo: IMenuDropdown = {\n    menu: 'Profile',\n    submenus: [\n      { submenu: 'Sub 1', route: '/', group: 'Group 1' },\n      { submenu: 'Sub 2', route: '/' },\n      { submenu: 'Sub 3', route: '/' },\n      { submenu: 'Sub 4', route: '/' },\n      { submenu: 'Sub 5', route: '/', break: true },\n      { submenu: 'Sub 6', route: '/', group: 'Group 2' },\n      { submenu: 'Sub 7', route: '/' },\n      { submenu: 'Sub 8', route: '/', break: true },\n      { submenu: 'Sub 9', route: '/', group: 'Group 3' },\n      { submenu: 'Sub 10', route: '/' },\n    ],\n  };\n\n  public menuThree: IMenuDropdown = {\n    menu: 'Settings',\n    submenus: [\n      { submenu: 'Sub 1', route: '/', group: 'Group 1' },\n      { submenu: 'Sub 2', route: '/' },\n      { submenu: 'Sub 3', route: '/' },\n      { submenu: 'Sub 4', route: '/' },\n      { submenu: 'Sub 5', route: '/', break: true },\n      { submenu: 'Sub 6', route: '/', group: 'Group 2' },\n      { submenu: 'Sub 7', route: '/' },\n      { submenu: 'Sub 8', route: '/', break: true },\n      { submenu: 'Sub 9', route: '/', group: 'Group 3' },\n      { submenu: 'Sub 10', route: '/' },\n    ],\n  };\n\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  setNavbarOpen() {\n    this.navbarOpen = !this.navbarOpen;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 56
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<nav\n  class=\"top-0 fixed z-50 w-full flex flex-wrap items-center justify-between px-2 py-3 navbar-expand-lg bg-white shadow\"\n>\n  <div\n    class=\"container px-4 mx-auto flex flex-wrap items-center justify-between\"\n  >\n    <div\n      class=\"w-full relative flex justify-between lg:w-auto lg:static lg:block lg:justify-start\"\n    >\n      <a\n        [routerLink]=\"['/']\"\n        class=\"font-sans text-sm text-coolGray-700 leading-relaxed inline-block mr-4 py-2 whitespace-nowrap uppercase\"\n        href=\"#\"\n      >\n        Logo\n      </a>\n      <button\n        class=\"cursor-pointer text-xl leading-none px-3 py-1 border-none rounded bg-transparent block lg:hidden outline-none focus:outline-none\"\n        type=\"button\"\n        (click)=\"setNavbarOpen()\"\n      >\n        <span class=\"material-icons\">menu</span>\n      </button>\n    </div>\n    <div\n      class=\"lg:flex flex-grow items-center\"\n      [ngClass]=\"{ hidden: !navbarOpen, block: navbarOpen }\"\n      id=\"example-navbar-warning\"\n    >\n      <!-- left portion menu items -->\n      <ul class=\"flex flex-col lg:flex-row list-none mr-auto\">\n        <li class=\"flex items-center\">\n          <!-- additional left hand menu items go here -->\n        </li>\n      </ul>\n      <!-- right portion menu items -->\n      <ul class=\"flex flex-col lg:flex-row list-none lg:ml-auto\">\n        <li class=\"flex items-center\">\n          <brave-menu-dropdown\n            class=\"block\"\n            [config]=\"menuOne\"\n          ></brave-menu-dropdown>\n        </li>\n        <li class=\"flex items-center\">\n          <brave-menu-dropdown\n            class=\"block\"\n            [config]=\"menuTwo\"\n          ></brave-menu-dropdown>\n        </li>\n        <li class=\"flex items-center\">\n          <brave-menu-dropdown\n            class=\"block\"\n            [config]=\"menuThree\"\n          ></brave-menu-dropdown>\n        </li>\n\n        <li class=\"flex items-center\">\n          <brave-outline-onlytext-button\n            >Register</brave-outline-onlytext-button\n          >\n        </li>\n      </ul>\n    </div>\n  </div>\n</nav>\n"
        },
        {
            "name": "DateofbirthFormComponent",
            "id": "component-DateofbirthFormComponent-fc7b6b2b3b7286380cca1e9c0b74da11",
            "file": "src/app/shared/components/forms/dateofbirth-form/dateofbirth-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-dateofbirth-form",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./dateofbirth-form.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "dayConfig",
                    "defaultValue": "{\n    size: 'sm',\n    label: 'Day',\n    options: this.addDays(31),\n  }",
                    "type": "IOutlineSelectInputConfig",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "monthConfig",
                    "defaultValue": "{\n    size: 'sm',\n    label: 'Month',\n    options: months,\n  }",
                    "type": "IOutlineSelectInputConfig",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "parentForm",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "yearConfig",
                    "defaultValue": "{\n    size: 'sm',\n    label: 'Year',\n    options: this.addYears(new Date().getFullYear()),\n  }",
                    "type": "IOutlineSelectInputConfig",
                    "optional": false,
                    "description": "",
                    "line": 21
                }
            ],
            "methodsClass": [
                {
                    "name": "addChild",
                    "args": [
                        {
                            "name": "childName",
                            "type": "string"
                        },
                        {
                            "name": "childGroup",
                            "type": "FormGroup"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35,
                    "jsdoctags": [
                        {
                            "name": "childName",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "childGroup",
                            "type": "FormGroup",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "addDays",
                    "args": [
                        {
                            "name": "x",
                            "type": "number"
                        }
                    ],
                    "optional": false,
                    "returnType": "string[]",
                    "typeParameters": [],
                    "line": 39,
                    "jsdoctags": [
                        {
                            "name": "x",
                            "type": "number",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "addYears",
                    "args": [
                        {
                            "name": "x",
                            "type": "number"
                        }
                    ],
                    "optional": false,
                    "returnType": "string[]",
                    "typeParameters": [],
                    "line": 47,
                    "jsdoctags": [
                        {
                            "name": "x",
                            "type": "number",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder } from '@angular/forms';\nimport { IOutlineSelectInputConfig } from '@shared/components/inputs/outline-select-input/outline-select-input.component';\n\n@Component({\n  selector: 'brave-dateofbirth-form',\n  templateUrl: './dateofbirth-form.component.html',\n})\nexport class DateofbirthFormComponent implements OnInit {\n  parentForm: FormGroup;\n  monthConfig: IOutlineSelectInputConfig = {\n    size: 'sm',\n    label: 'Month',\n    options: months,\n  };\n  dayConfig: IOutlineSelectInputConfig = {\n    size: 'sm',\n    label: 'Day',\n    options: this.addDays(31),\n  };\n  yearConfig: IOutlineSelectInputConfig = {\n    size: 'sm',\n    label: 'Year',\n    options: this.addYears(new Date().getFullYear()),\n  };\n\n  constructor(private fb: FormBuilder) {\n    this.parentForm = fb.group({\n      name: ['dateofbirth-form'],\n    }); // simple parent form with name of form\n  }\n\n  ngOnInit(): void {}\n\n  addChild(childName: string, childGroup: FormGroup) {\n    this.parentForm.addControl(childName, childGroup);\n  }\n\n  addDays(x: number): string[] {\n    let days: string[] = [];\n    for (let i = x; i > 0; i--) {\n      days = [i.toString(), ...days];\n    }\n    return days;\n  }\n\n  addYears(x: number): string[] {\n    let years: string[] = [];\n    for (let i = x; i > x - 100; i--) {\n      years = [...years, i.toString()];\n    }\n    return years;\n  }\n}\n\nconst months: string[] = [\n  'Jan',\n  'Feb',\n  'Mar',\n  'Apr',\n  'May',\n  'Jun',\n  'Jul',\n  'Aug',\n  'Sep',\n  'Oct',\n  'Nov',\n  'Dec',\n];\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "fb",
                        "type": "FormBuilder"
                    }
                ],
                "line": 25,
                "jsdoctags": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<form [formGroup]=\"parentForm\">\n  <div class=\"grid grid-cols-3 gap-2\">\n    <div>\n      <brave-outline-select-input\n        [config]=\"monthConfig\"\n        (onComponentReady)=\"addChild('month', $event)\"\n        [required]=\"true\"\n        [asteriskOverride]=\"true\"\n      >\n      </brave-outline-select-input>\n      <div class=\"-mt-2\">\n        <div class=\"flex justify-start items-start text-xs text-blueGray-600\">\n          <span class=\"-mt-1\">&#42;</span>&nbsp;Required\n        </div>\n      </div>\n    </div>\n    <div>\n      <brave-outline-select-input\n        [config]=\"dayConfig\"\n        (onComponentReady)=\"addChild('day', $event)\"\n        [required]=\"true\"\n        [asteriskOverride]=\"true\"\n      >\n      </brave-outline-select-input>\n    </div>\n    <div>\n      <div>\n        <brave-outline-select-input\n          [config]=\"yearConfig\"\n          (onComponentReady)=\"addChild('year', $event)\"\n          [required]=\"true\"\n          [asteriskOverride]=\"true\"\n        >\n        </brave-outline-select-input>\n      </div>\n    </div>\n  </div>\n</form>\n"
        },
        {
            "name": "FacebookOnlytextsigninButtonComponent",
            "id": "component-FacebookOnlytextsigninButtonComponent-908526b3fed6e4acad61431af9cca421",
            "file": "src/app/shared/components/buttons/facebook-onlytextsignin-button/facebook-onlytextsignin-button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-facebook-onlytextsignin-button",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./facebook-onlytextsignin-button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 10
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'brave-facebook-onlytextsignin-button',\n  templateUrl: './facebook-onlytextsignin-button.component.html',\n})\nexport class FacebookOnlytextsigninButtonComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 7
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<button\n  class=\"\n    bg-white\n    active:bg-blueGray-50\n    text-blueGray-700\n    font-bold\n    h-12\n    w-full\n    px-4\n    py-2\n    rounded\n    outline-none\n    focus:outline-none\n    mr-2\n    mb-1\n    uppercase\n    shadow\n    hover:shadow-md\n    inline-flex\n    items-center\n    text-xs text-center\n    ease-linear\n    transition-all\n    duration-150\n  \"\n  type=\"button\"\n>\n  <span class=\"material-icons w-5 mr-1\">facebook</span>\n  Facebook\n</button>\n"
        },
        {
            "name": "FilledChecktextProgressbarComponent",
            "id": "component-FilledChecktextProgressbarComponent-f94fa3d0144db71cb4db52f3fd83c7e1",
            "file": "src/app/shared/components/progressbars/filled-checktext-progressbar/filled-checktext-progressbar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-filled-checktext-progressbar",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./filled-checktext-progressbar.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "config",
                    "defaultValue": "{\n    size: 'base',\n    steps: [\n      { active: false, complete: false, name: 'step 1' },\n      { active: false, complete: false, name: 'step 2' },\n      { active: false, complete: false, name: 'step 3' },\n      { active: false, complete: false, name: 'step 4' },\n      { active: false, complete: false, name: 'step 5' },\n    ],\n  }",
                    "line": 18,
                    "type": "IFilledChecktextProgressbarConfig"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "stack",
                    "defaultValue": "[]",
                    "type": "IProgressStep[]",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "completeCurrentStep",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36,
                    "description": "<p>Sets the current step in the stack to complete and moves to next step</p>\n"
                },
                {
                    "name": "goToFirst",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 72,
                    "description": "<p>Jumps to the first step</p>\n",
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 1875,
                                "end": 1882,
                                "flags": 0,
                                "escapedText": "returns"
                            },
                            "comment": "",
                            "returnType": "void"
                        }
                    ]
                },
                {
                    "name": "moveBack",
                    "args": [],
                    "optional": false,
                    "returnType": "IProgressStep | undefined",
                    "typeParameters": [],
                    "line": 63,
                    "description": "<p>Pops the last step off the stack and sets it to inactive in the steps</p>\n",
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 1688,
                                "end": 1695,
                                "flags": 0,
                                "escapedText": "returns"
                            },
                            "comment": "<p>Of the one removed</p>\n",
                            "returnType": ""
                        }
                    ]
                },
                {
                    "name": "moveNext",
                    "args": [],
                    "optional": false,
                    "returnType": "IProgressStep | undefined",
                    "typeParameters": [],
                    "line": 53,
                    "description": "<p>Sets the next step to active and adds the next step to the stack</p>\n<ul>\n<li>last step in the stack is the current step</li>\n</ul>\n",
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 1360,
                                "end": 1367,
                                "flags": 0,
                                "escapedText": "returns"
                            },
                            "comment": "",
                            "returnType": ""
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\nexport interface IProgressStep {\n  active: boolean;\n  complete: boolean;\n  name?: string;\n}\nexport interface IFilledChecktextProgressbarConfig {\n  size: string;\n  steps: IProgressStep[];\n}\n\n@Component({\n  selector: 'brave-filled-checktext-progressbar',\n  templateUrl: './filled-checktext-progressbar.component.html',\n})\nexport class FilledChecktextProgressbarComponent {\n  @Input() config: IFilledChecktextProgressbarConfig = {\n    size: 'base',\n    steps: [\n      { active: false, complete: false, name: 'step 1' },\n      { active: false, complete: false, name: 'step 2' },\n      { active: false, complete: false, name: 'step 3' },\n      { active: false, complete: false, name: 'step 4' },\n      { active: false, complete: false, name: 'step 5' },\n    ],\n  };\n\n  public stack: IProgressStep[] = [];\n\n  constructor() {}\n\n  /**\n   * Sets the current step in the stack to complete and moves to next step\n   */\n  completeCurrentStep(): void {\n    let current = this.stack[this.stack.length - 1];\n    if (current) {\n      current = {\n        ...current,\n        complete: true,\n      };\n      this.stack[this.stack.length - 1] = current;\n      this.moveNext();\n    }\n  }\n\n  /**\n   * Sets the next step to active and adds the next step to the stack\n   *  - last step in the stack is the current step\n   * @returns {IProgressStep}\n   */\n  moveNext(): IProgressStep | undefined {\n    this.config.steps[this.stack.length].active = true;\n    this.stack.push(this.config.steps[this.stack.length]);\n    return this.config.steps[this.stack.length];\n  }\n\n  /**\n   * Pops the last step off the stack and sets it to inactive in the steps\n   * @returns {IProgressStep} Of the one removed\n   */\n  moveBack(): IProgressStep | undefined {\n    let step = this.stack.pop();\n    return step;\n  }\n\n  /**\n   * Jumps to the first step\n   * @returns {void}\n   */\n  goToFirst(): void {\n    this.stack = [];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 29
            },
            "templateData": "<div>\n  <div class=\"p-4\">\n    <div class=\"flex items-center\">\n      <ng-container\n        *ngFor=\"\n          let step of config.steps;\n          index as i;\n          first as isFirst;\n          last as isLast\n        \"\n      >\n        <div\n          [ngClass]=\"{\n            rounded: isFirst,\n            'bg-lightBlue-100': stack[i]?.active,\n            'bg-coolGray-200': !stack[i]?.active\n          }\"\n          class=\"flex-auto h-2 w-1/5 rounded-r-none transition duration-500 ease-in-out\"\n        ></div>\n        <div class=\"flex items-center text-white relative\">\n          <div\n            [ngClass]=\"{\n              'bg-lightBlue-100': stack[i]?.active,\n              'bg-coolGray-200': !stack[i]?.active\n            }\"\n            class=\"flex justify-center items-center text-center rounded-full transition duration-500 ease-in-out h-8 w-8 -ml-0.5\"\n          >\n            <span\n              class=\"material-icon text-coolGray-700\"\n              *ngIf=\"stack[i]?.complete\"\n              >done</span\n            >\n          </div>\n          <div\n            [ngClass]=\"{\n              'text-coolGray-700': stack[i]?.complete,\n              'text-coolGray-200': !stack[i]?.complete\n            }\"\n            class=\"absolute top-0 -ml-12 text-center mt-9 w-32 font-sans text-xs\"\n          >\n            <!-- {{ config.steps.length }} -->\n            {{ step.name }}\n          </div>\n        </div>\n        <div\n          *ngIf=\"isLast\"\n          [ngClass]=\"{ 'bg-lightBlue-100': stack[i]?.active }\"\n          class=\"flex-auto h-2 w-1/5 rounded rounded-l-none bg-coolGray-200 transition duration-500 ease-in-out\"\n        ></div>\n      </ng-container>\n    </div>\n  </div>\n</div>\n"
        },
        {
            "name": "FilledClosingAlertComponent",
            "id": "component-FilledClosingAlertComponent-9c4cd41b4d47d2e182eda26dd493b74c",
            "file": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-filled-closing-alert",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./filled-closing-alert.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "config",
                    "defaultValue": "{\n    size: 'base',\n    backgroundColor: 'bg-indigo-800',\n    color: 'text-white',\n    alertTitle: 'Alert!',\n    alertBody: 'Something went wrong. Please try again.',\n  }",
                    "line": 16,
                    "type": "IFilledClosingAlertConfig"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "showAlert",
                    "defaultValue": "false",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\nexport interface IFilledClosingAlertConfig {\n  size: string;\n  backgroundColor: string;\n  color: string;\n  alertTitle: string;\n  alertBody: string;\n}\n\n@Component({\n  selector: 'brave-filled-closing-alert',\n  templateUrl: './filled-closing-alert.component.html',\n})\nexport class FilledClosingAlertComponent implements OnInit {\n  @Input() config: IFilledClosingAlertConfig = {\n    size: 'base',\n    backgroundColor: 'bg-indigo-800',\n    color: 'text-white',\n    alertTitle: 'Alert!',\n    alertBody: 'Something went wrong. Please try again.',\n  };\n  constructor() {}\n  public showAlert: boolean = false;\n  ngOnInit(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 22
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div\n  *ngIf=\"showAlert\"\n  [ngClass]=\"config | filledClosingAlert\"\n  class=\"font-sans text-sm text-white px-6 py-4 border-0 rounded relative mb-4\"\n>\n  <span class=\"font-sans text-sm text-white inline-block mr-5 align-middle\">\n    {{ config.alertTitle }}\n  </span>\n  <span class=\"inline-block align-left mr-8\">\n    {{ config.alertBody }}\n  </span>\n  <button\n    class=\"absolute bg-transparent text-2xl font-semibold leading-none right-0 top-0 mt-4 mr-4 outline-none focus:outline-none\"\n    (click)=\"showAlert = false\"\n  >\n    <span class=\"material-icons text-white\">close</span>\n  </button>\n</div>\n"
        },
        {
            "name": "FilledOnlytextBadgeComponent",
            "id": "component-FilledOnlytextBadgeComponent-dc05e6e4c81b5bb0d226982afe75d12d",
            "file": "src/app/shared/components/badges/filled-onlytext-badge/filled-onlytext-badge.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-filled-onlytext-badge",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./filled-onlytext-badge.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "config",
                    "defaultValue": "{\n    size: 'base',\n    backgroundColor: 'bg-indigo-200',\n    color: 'text-indigo-800',\n  }",
                    "line": 14,
                    "type": "IFilledOnlytextBadgeConfig"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\nexport interface IFilledOnlytextBadgeConfig {\n  size: string;\n  backgroundColor: string;\n  color: string;\n}\n\n@Component({\n  selector: 'brave-filled-onlytext-badge',\n  templateUrl: './filled-onlytext-badge.component.html',\n})\nexport class FilledOnlytextBadgeComponent {\n  @Input() config: IFilledOnlytextBadgeConfig = {\n    size: 'base',\n    backgroundColor: 'bg-indigo-200',\n    color: 'text-indigo-800',\n  };\n\n  constructor() {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 18
            },
            "templateData": "<span\n  [ngClass]=\"config | filledOnlytextBadge\"\n  class=\"font-semibold inline-block uppercase rounded uppercase last:mr-0 mr-1\"\n>\n  <ng-content></ng-content>\n</span>\n"
        },
        {
            "name": "FilledOnlytextButtonComponent",
            "id": "component-FilledOnlytextButtonComponent-b83344225e4d837e9e4fbd0772c1675f",
            "file": "src/app/shared/components/buttons/filled-onlytext-button/filled-onlytext-button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-filled-onlytext-button",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./filled-onlytext-button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "config",
                    "defaultValue": "{\n    buttonSize: 'base',\n    backgroundColor: 'bg-indigo-800',\n    activeColor: 'bg-indigo-900',\n    color: 'text-white',\n  }",
                    "line": 22,
                    "type": "IFilledOnlyTextButtonConfig"
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "line": 29,
                    "type": "boolean"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\nexport interface IFilledOnlyTextButtonConfig {\n  buttonSize: string;\n  backgroundColor: string;\n  activeColor: string;\n  color: string;\n}\n\n@Component({\n  selector: 'brave-filled-onlytext-button',\n  templateUrl: './filled-onlytext-button.component.html',\n})\nexport class FilledOnlytextButtonComponent {\n  /**\n   * @param config Input objctfor button customization\n   * @param config.buttonSize 'sm', 'base', 'lg'\n   * @param config.backgroundColor Any global color \"e.g. bg-indigo-800\"\n   * @param config.activeColor Any global color \"e.g. bg-indigo-900\"\n   * @param config.color Any global color\n   */\n  @Input() config: IFilledOnlyTextButtonConfig = {\n    buttonSize: 'base',\n    backgroundColor: 'bg-indigo-800',\n    activeColor: 'bg-indigo-900',\n    color: 'text-white',\n  };\n\n  @Input() disabled: boolean = false;\n\n  constructor() {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 29
            },
            "templateData": "<button\n  [disabled]=\"disabled\"\n  [ngClass]=\"config | filledOnlytextButton\"\n  class=\"\n    font-bold\n    rounded\n    shadow\n    outline-none\n    focus:outline-none\n    mr-1\n    mb-1\n    ease-linear\n    transition-all\n    duration-150\n  \"\n  type=\"button\"\n>\n  <ng-content></ng-content>\n</button>\n"
        },
        {
            "name": "FilledOnlytextTabsComponent",
            "id": "component-FilledOnlytextTabsComponent-8fd8ed91eebb7583d11cb7625fe52326",
            "file": "src/app/shared/components/tabs/filled-onlytext-tabs/filled-onlytext-tabs.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-filled-onlytext-tabs",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./filled-onlytext-tabs.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "openTab",
                    "defaultValue": "1",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 11
                },
                {
                    "name": "toggleTabs",
                    "args": [
                        {
                            "name": "$tabNumber",
                            "type": "number"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13,
                    "jsdoctags": [
                        {
                            "name": "$tabNumber",
                            "type": "number",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'brave-filled-onlytext-tabs',\n  templateUrl: './filled-onlytext-tabs.component.html',\n})\nexport class FilledOnlytextTabsComponent implements OnInit {\n  openTab = 1;\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  toggleTabs($tabNumber: number) {\n    this.openTab = $tabNumber;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"flex flex-wrap\">\n  <div class=\"w-full\">\n    <ul class=\"flex mb-0 list-none flex-wrap pt-3 pb-4 flex-row\">\n      <li class=\"-mb-px mr-2 last:mr-0 flex-auto text-center\">\n        <a\n          class=\"font-sans text-sm px-5 py-3 rounded block leading-normal\"\n          (click)=\"toggleTabs(1)\"\n          [ngClass]=\"{\n            'bg-coolGray-200 text-coolGray-700': openTab !== 1,\n            'text-white font-bold bg-indigo-800 shadow-lg': openTab === 1\n          }\"\n        >\n          Tab 1\n        </a>\n      </li>\n      <li class=\"-mb-px mr-2 last:mr-0 flex-auto text-center\">\n        <a\n          class=\"font-sans text-sm px-5 py-3 rounded block leading-normal\"\n          (click)=\"toggleTabs(2)\"\n          [ngClass]=\"{\n            'bg-coolGray-200 text-coolGray-700': openTab !== 2,\n            'text-white font-bold bg-indigo-800 shadow-lg': openTab === 2\n          }\"\n        >\n          Tab 2\n        </a>\n      </li>\n      <li class=\"-mb-px mr-2 last:mr-0 flex-auto text-center\">\n        <a\n          class=\"font-sans text-sm px-5 py-3 rounded block leading-normal\"\n          (click)=\"toggleTabs(3)\"\n          [ngClass]=\"{\n            'bg-coolGray-200 text-coolGray-700': openTab !== 3,\n            'text-white font-bold bg-indigo-800 shadow-lg': openTab === 3\n          }\"\n        >\n          Tab 3\n        </a>\n      </li>\n    </ul>\n    <div\n      class=\"relative flex flex-col min-w-0 break-words bg-white w-full mb-6 rounded\"\n    >\n      <div class=\"px-4 py-5 flex-auto\">\n        <div class=\"tab-content tab-space\">\n          <div [ngClass]=\"{ hidden: openTab !== 1, block: openTab === 1 }\">\n            <p>\n              Collaboratively administrate empowered markets via plug-and-play\n              networks. Dynamically procrastinate B2C users after installed base\n              benefits.\n              <br />\n              <br />\n              Dramatically visualize customer directed convergence without\n              revolutionary ROI.\n            </p>\n          </div>\n          <div [ngClass]=\"{ hidden: openTab !== 2, block: openTab === 2 }\">\n            <p>\n              Completely synergize resource taxing relationships via premier\n              niche markets. Professionally cultivate one-to-one customer\n              service with robust ideas.\n              <br />\n              <br />\n              Dynamically innovate resource-leveling customer service for state\n              of the art customer service.\n            </p>\n          </div>\n          <div [ngClass]=\"{ hidden: openTab !== 3, block: openTab === 3 }\">\n            <p>\n              Efficiently unleash cross-media information without cross-media\n              value. Quickly maximize timely deliverables for real-time schemas.\n              <br />\n              <br />\n              Dramatically maintain clicks-and-mortar solutions without\n              functional solutions.\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n"
        },
        {
            "name": "FooterAdminComponent",
            "id": "component-FooterAdminComponent-b27a2a39928a4539b832b42ffd1a96b1",
            "file": "src/app/shared/components/footers/footer-admin/footer-admin.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-footer-admin",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./footer-admin.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "date",
                    "defaultValue": "new Date().getFullYear()",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 11
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'brave-footer-admin',\n  templateUrl: './footer-admin.component.html',\n})\nexport class FooterAdminComponent implements OnInit {\n  date = new Date().getFullYear();\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<footer class=\"block py-4\">\n  <div class=\"container mx-auto px-4\">\n    <hr class=\"mb-4 border-b-1 border-blueGray-200\" />\n    <div class=\"flex flex-wrap items-center md:justify-between justify-center\">\n      <div class=\"w-full md:w-4/12 px-4\">\n        <div\n          class=\"text-sm text-blueGray-500 font-semibold py-1 text-center md:text-left\"\n        >\n          Copyright © {{ date }}\n          <a\n            href=\"https://www.creative-tim.com?ref=na-footer-admin\"\n            class=\"text-blueGray-500 hover:text-blueGray-700 text-sm font-semibold py-1\"\n          >\n            Creative Tim\n          </a>\n        </div>\n      </div>\n      <div class=\"w-full md:w-8/12 px-4\">\n        <ul class=\"flex flex-wrap list-none md:justify-end justify-center\">\n          <li>\n            <a\n              href=\"https://www.creative-tim.com?ref=na-footer-admin\"\n              class=\"text-blueGray-600 hover:text-blueGray-800 text-sm font-semibold block py-1 px-3\"\n            >\n              Creative Tim\n            </a>\n          </li>\n          <li>\n            <a\n              href=\"https://www.creative-tim.com/presentation?ref=na-footer-admin\"\n              class=\"text-blueGray-600 hover:text-blueGray-800 text-sm font-semibold block py-1 px-3\"\n            >\n              About Us\n            </a>\n          </li>\n          <li>\n            <a\n              href=\"http://blog.creative-tim.com?ref=na-footer-admin\"\n              class=\"text-blueGray-600 hover:text-blueGray-800 text-sm font-semibold block py-1 px-3\"\n            >\n              Blog\n            </a>\n          </li>\n          <li>\n            <a\n              href=\"https://github.com/creativetimofficial/notus-angular/blob/main/LICENSE.md?ref=creativetim\"\n              class=\"text-blueGray-600 hover:text-blueGray-800 text-sm font-semibold block py-1 px-3\"\n            >\n              MIT License\n            </a>\n          </li>\n        </ul>\n      </div>\n    </div>\n  </div>\n</footer>\n"
        },
        {
            "name": "FooterComponent",
            "id": "component-FooterComponent-fac5694ad0d6bd7c8dee05ae8ae6e2a7",
            "file": "src/app/shared/components/footers/footer/footer.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-footer",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./footer.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "date",
                    "defaultValue": "new Date().getFullYear()",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 11
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'brave-footer',\n  templateUrl: './footer.component.html',\n})\nexport class FooterComponent implements OnInit {\n  date = new Date().getFullYear();\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<footer class=\"relative bg-blueGray-200 pt-8 pb-6\">\n  <div\n    class=\"bottom-auto top-0 left-0 right-0 w-full absolute pointer-events-none overflow-hidden -mt-20 h-20\"\n    style=\"transform: translateZ(0)\"\n  >\n    <svg\n      class=\"absolute bottom-0 overflow-hidden\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      preserveAspectRatio=\"none\"\n      version=\"1.1\"\n      viewBox=\"0 0 2560 100\"\n      x=\"0\"\n      y=\"0\"\n    >\n      <polygon\n        class=\"text-blueGray-200 fill-current\"\n        points=\"2560 0 2560 100 0 100\"\n      ></polygon>\n    </svg>\n  </div>\n  <div class=\"container mx-auto px-4\">\n    <div class=\"flex flex-wrap text-center lg:text-left\">\n      <div class=\"w-full lg:w-6/12 px-4\">\n        <h4 class=\"text-3xl font-semibold\">Let's keep in touch!</h4>\n        <h5 class=\"text-lg mt-0 mb-2 text-blueGray-600\">\n          Find us on any of these platforms, we respond 1-2 business days.\n        </h5>\n        <div class=\"mt-6 lg:mb-0 mb-6\">\n          <button\n            class=\"bg-white text-lightBlue-400 shadow-lg font-normal h-10 w-10 items-center justify-center align-center rounded-full outline-none focus:outline-none mr-2\"\n            type=\"button\"\n          >\n            <i class=\"fab fa-twitter\"></i>\n          </button>\n          <button\n            class=\"bg-white text-lightBlue-600 shadow-lg font-normal h-10 w-10 items-center justify-center align-center rounded-full outline-none focus:outline-none mr-2\"\n            type=\"button\"\n          >\n            <i class=\"fab fa-facebook-square\"></i>\n          </button>\n          <button\n            class=\"bg-white text-pink-400 shadow-lg font-normal h-10 w-10 items-center justify-center align-center rounded-full outline-none focus:outline-none mr-2\"\n            type=\"button\"\n          >\n            <i class=\"fab fa-dribbble\"></i>\n          </button>\n          <button\n            class=\"bg-white text-blueGray-800 shadow-lg font-normal h-10 w-10 items-center justify-center align-center rounded-full outline-none focus:outline-none mr-2\"\n            type=\"button\"\n          >\n            <i class=\"fab fa-github\"></i>\n          </button>\n        </div>\n      </div>\n      <div class=\"w-full lg:w-6/12 px-4\">\n        <div class=\"flex flex-wrap items-top mb-6\">\n          <div class=\"w-full lg:w-4/12 px-4 ml-auto\">\n            <span\n              class=\"block uppercase text-blueGray-500 text-sm font-semibold mb-2\"\n            >\n              Useful Links\n            </span>\n            <ul class=\"list-unstyled\">\n              <li>\n                <a\n                  class=\"text-blueGray-600 hover:text-blueGray-800 font-semibold block pb-2 text-sm\"\n                  href=\"https://www.creative-tim.com/presentation?ref=na-footer\"\n                >\n                  About Us\n                </a>\n              </li>\n              <li>\n                <a\n                  class=\"text-blueGray-600 hover:text-blueGray-800 font-semibold block pb-2 text-sm\"\n                  href=\"https://blog.creative-tim.com?ref=na-footer\"\n                >\n                  Blog\n                </a>\n              </li>\n              <li>\n                <a\n                  class=\"text-blueGray-600 hover:text-blueGray-800 font-semibold block pb-2 text-sm\"\n                  href=\"https://www.github.com/creativetimofficial?ref=na-footer\"\n                >\n                  Github\n                </a>\n              </li>\n              <li>\n                <a\n                  class=\"text-blueGray-600 hover:text-blueGray-800 font-semibold block pb-2 text-sm\"\n                  href=\"https://www.creative-tim.com/bootstrap-themes/free?ref=na-footer\"\n                >\n                  Free Products\n                </a>\n              </li>\n            </ul>\n          </div>\n          <div class=\"w-full lg:w-4/12 px-4\">\n            <span\n              class=\"block uppercase text-blueGray-500 text-sm font-semibold mb-2\"\n            >\n              Other Resources\n            </span>\n            <ul class=\"list-unstyled\">\n              <li>\n                <a\n                  class=\"text-blueGray-600 hover:text-blueGray-800 font-semibold block pb-2 text-sm\"\n                  href=\"https://github.com/creativetimofficial/notus-angular/blob/main/LICENSE.md?ref=creativetim\"\n                >\n                  MIT License\n                </a>\n              </li>\n              <li>\n                <a\n                  class=\"text-blueGray-600 hover:text-blueGray-800 font-semibold block pb-2 text-sm\"\n                  href=\"https://creative-tim.com/terms?ref=na-footer\"\n                >\n                  Terms & Conditions\n                </a>\n              </li>\n              <li>\n                <a\n                  class=\"text-blueGray-600 hover:text-blueGray-800 font-semibold block pb-2 text-sm\"\n                  href=\"https://creative-tim.com/privacy?ref=na-footer\"\n                >\n                  Privacy Policy\n                </a>\n              </li>\n              <li>\n                <a\n                  class=\"text-blueGray-600 hover:text-blueGray-800 font-semibold block pb-2 text-sm\"\n                  href=\"https://creative-tim.com/contact-us?ref=na-footer\"\n                >\n                  Contact Us\n                </a>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n    <hr class=\"my-6 border-blueGray-300\" />\n    <div class=\"flex flex-wrap items-center md:justify-between justify-center\">\n      <div class=\"w-full md:w-4/12 px-4 mx-auto text-center\">\n        <div class=\"text-sm text-blueGray-500 font-semibold py-1\">\n          Copyright © {{ date }} Notus Angular by\n          <a\n            href=\"https://www.creative-tim.com?ref=na-footer\"\n            class=\"text-blueGray-500 hover:text-blueGray-800\"\n          >\n            Creative Tim\n          </a>\n          .\n        </div>\n      </div>\n    </div>\n  </div>\n</footer>\n"
        },
        {
            "name": "FooterSmallComponent",
            "id": "component-FooterSmallComponent-6502da62554dfc15c73ab4e08b8a3c61",
            "file": "src/app/shared/components/footers/footer-small/footer-small.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-footer-small",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./footer-small.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "absolute",
                    "line": 11,
                    "type": "boolean"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_absolute",
                    "defaultValue": "false",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "date",
                    "defaultValue": "new Date().getFullYear()",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'brave-footer-small',\n  templateUrl: './footer-small.component.html',\n})\nexport class FooterSmallComponent implements OnInit {\n  date = new Date().getFullYear();\n\n  @Input()\n  get absolute(): boolean {\n    return this._absolute;\n  }\n  set absolute(absolute: boolean) {\n    this._absolute = absolute === undefined ? false : absolute;\n  }\n  private _absolute = false;\n\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 17
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "absolute": {
                    "name": "absolute",
                    "setSignature": {
                        "name": "absolute",
                        "type": "void",
                        "args": [
                            {
                                "name": "absolute",
                                "type": "boolean"
                            }
                        ],
                        "returnType": "void",
                        "line": 14,
                        "jsdoctags": [
                            {
                                "name": "absolute",
                                "type": "boolean",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                }
            },
            "templateData": "<footer\n  class=\"pb-6\"\n  [ngClass]=\"absolute ? 'absolute w-full bottom-0 bg-blueGray-800' : 'relative'\"\n>\n  <div class=\"container mx-auto px-4\">\n    <hr class=\"mb-6 border-b-1 border-blueGray-600\" />\n    <div class=\"flex flex-wrap items-center md:justify-between justify-center\">\n      <div class=\"w-full md:w-4/12 px-4\">\n        <div\n          class=\"text-sm text-white font-semibold py-1 text-center md:text-left\"\n        >\n          Copyright © {{ date }}\n          <a\n            href=\"https://www.creative-tim.com?ref=na-footer-small\"\n            class=\"text-white hover:text-blueGray-300 text-sm font-semibold py-1\"\n          >\n            Creative Tim\n          </a>\n        </div>\n      </div>\n      <div class=\"w-full md:w-8/12 px-4\">\n        <ul class=\"flex flex-wrap list-none md:justify-end justify-center\">\n          <li>\n            <a\n              href=\"https://www.creative-tim.com?ref=na-footer-small\"\n              class=\"text-white hover:text-blueGray-300 text-sm font-semibold block py-1 px-3\"\n            >\n              Creative Tim\n            </a>\n          </li>\n          <li>\n            <a\n              href=\"https://www.creative-tim.com/presentation?ref=na-footer-small\"\n              class=\"text-white hover:text-blueGray-300 text-sm font-semibold block py-1 px-3\"\n            >\n              About Us\n            </a>\n          </li>\n          <li>\n            <a\n              href=\"http://blog.creative-tim.com?ref=na-footer-small\"\n              class=\"text-white hover:text-blueGray-300 text-sm font-semibold block py-1 px-3\"\n            >\n              Blog\n            </a>\n          </li>\n          <li>\n            <a\n              href=\"https://github.com/creativetimofficial/notus-angular/blob/main/LICENSE.md?ref=creativetim\"\n              class=\"text-white hover:text-blueGray-300 text-sm font-semibold block py-1 px-3\"\n            >\n              MIT License\n            </a>\n          </li>\n        </ul>\n      </div>\n    </div>\n  </div>\n</footer>\n"
        },
        {
            "name": "GoogleIconsigninButtonComponent",
            "id": "component-GoogleIconsigninButtonComponent-3e2c0e44920f8ac7c1d5bc91a5521279",
            "file": "src/app/shared/components/buttons/google-iconsignin-button/google-iconsignin-button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-google-iconsignin-button",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./google-iconsignin-button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 10
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'brave-google-iconsignin-button',\n  templateUrl: './google-iconsignin-button.component.html',\n})\nexport class GoogleIconsigninButtonComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 7
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<button\n  class=\"\n    bg-white\n    active:bg-blueGray-50\n    text-blueGray-700\n    h-12\n    w-full\n    px-4\n    py-2\n    rounded\n    outline-none\n    focus:outline-none\n    mr-1\n    mb-1\n    uppercase\n    shadow\n    hover:shadow-md\n    inline-flex\n    items-center\n    font-bold\n    text-xs text-center\n    ease-linear\n    transition-all\n    duration-150\n  \"\n  type=\"button\"\n>\n  <img alt=\"...\" class=\"w-5 mr-1\" src=\"assets/img/google.svg\" />\n  Google\n</button>\n"
        },
        {
            "name": "HiddenAsteriskInputComponent",
            "id": "component-HiddenAsteriskInputComponent-c8e36fb6928854f18e24988211168790",
            "file": "src/app/shared/components/inputs/hidden-asterisk-input/hidden-asterisk-input.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-hidden-asterisk-input",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./hidden-asterisk-input.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "index",
                    "defaultValue": "0",
                    "line": 25,
                    "type": "number"
                },
                {
                    "name": "size",
                    "defaultValue": "'text-sm'",
                    "line": 24,
                    "type": "string"
                },
                {
                    "name": "value",
                    "defaultValue": "''",
                    "line": 26,
                    "type": "string"
                }
            ],
            "outputsClass": [
                {
                    "name": "onComponentReady",
                    "defaultValue": "new EventEmitter<FormGroup>()",
                    "line": 31,
                    "type": "EventEmitter<FormGroup>"
                },
                {
                    "name": "onMoveNext",
                    "defaultValue": "new EventEmitter()",
                    "line": 29,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "valueChanged",
                    "defaultValue": "new EventEmitter()",
                    "line": 28,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "_masked",
                    "defaultValue": "false",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "componentFormGroup",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 34,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "formSub$",
                    "type": "Subscription | undefined",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "hiddenInput",
                    "type": "ElementRef | undefined",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'hiddenInput'"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "clearMe",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 74,
                    "description": "<p>Removes any value stored in the input element</p>\n"
                },
                {
                    "name": "focusMe",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 66,
                    "description": "<p>Sets the focus to the hiddien input native element</p>\n"
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 59
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>For use within hidden code form.\nOnly works in a form.</p>\n",
            "rawdescription": "For use within hidden code form.\nOnly works in a form.",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n  ViewChild,\n} from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Subscription } from 'rxjs';\n\n/**\n * For use within hidden code form.\n * Only works in a form.\n */\n@Component({\n  selector: 'brave-hidden-asterisk-input',\n  templateUrl: './hidden-asterisk-input.component.html',\n})\nexport class HiddenAsteriskInputComponent implements OnInit {\n  @ViewChild('hiddenInput') hiddenInput: ElementRef | undefined;\n\n  @Input() size: string = 'text-sm';\n  @Input() index: number = 0;\n  @Input() value: string = '';\n\n  @Output() valueChanged: EventEmitter<any> = new EventEmitter();\n  @Output() onMoveNext: EventEmitter<any> = new EventEmitter();\n  @Output()\n  onComponentReady: EventEmitter<FormGroup> = new EventEmitter<FormGroup>();\n\n  private _masked: boolean = false;\n  public componentFormGroup!: FormGroup;\n  public formSub$: Subscription | undefined;\n\n  get masked() {\n    return this._masked;\n  }\n  set masked(value: boolean) {\n    this._masked = value;\n  }\n\n  constructor(private fb: FormBuilder) {}\n\n  ngOnInit(): void {\n    this.componentFormGroup = this.fb.group({\n      input: [this.value, Validators.required],\n    });\n    this.formSub$ = this.componentFormGroup.controls.input.valueChanges.subscribe(\n      (value) => {\n        this.valueChanged.emit(value);\n        if (value?.length) this.onMoveNext.emit();\n      }\n    );\n    this.onComponentReady.emit(this.componentFormGroup);\n  }\n\n  ngOnDestroy() {\n    if (this.formSub$) this.formSub$.unsubscribe();\n  }\n\n  /**\n   * Sets the focus to the hiddien input native element\n   */\n  focusMe() {\n    const el: HTMLInputElement = this.hiddenInput?.nativeElement;\n    if (el) el.focus();\n  }\n\n  /**\n   * Removes any value stored in the input element\n   */\n  clearMe() {\n    const el: HTMLInputElement = this.hiddenInput?.nativeElement;\n    if (el) {\n      el.value = '';\n      el.click();\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "fb",
                        "type": "FormBuilder"
                    }
                ],
                "line": 42,
                "jsdoctags": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "masked": {
                    "name": "masked",
                    "setSignature": {
                        "name": "masked",
                        "type": "void",
                        "args": [
                            {
                                "name": "value",
                                "type": "boolean"
                            }
                        ],
                        "returnType": "void",
                        "line": 40,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "boolean",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "masked",
                        "type": "",
                        "returnType": "",
                        "line": 37
                    }
                }
            },
            "templateData": "<form [formGroup]=\"componentFormGroup\">\n  <span class=\"flex flex-shrink p-1\">\n    <input\n      #hiddenInput\n      [ngClass]=\"size\"\n      class=\"w-6 h-8 p-0 border-0 border-b-2 text-center text-sm text-blueGray-600 whitespace-nowrap bg-coolGray-100\"\n      braveHiddenAsteriskInput\n      formControlName=\"input\"\n      type=\"text\"\n      maxLength=\"1\"\n      autocorrect=\"off\"\n      autocapitalize=\"off\"\n      autocomplete=\"off\"\n      spellcheck=\"false\"\n    />\n  </span>\n</form>\n"
        },
        {
            "name": "HiddenCodeFormComponent",
            "id": "component-HiddenCodeFormComponent-3d528745e3a5742306f30a47b31acaa4",
            "file": "src/app/shared/components/forms/hidden-code-form/hidden-code-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-hidden-code-form",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./hidden-code-form.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "slots",
                    "line": 29
                }
            ],
            "outputsClass": [
                {
                    "name": "onComponentReady",
                    "defaultValue": "new EventEmitter<FormGroup>()",
                    "line": 38,
                    "type": "EventEmitter<FormGroup>"
                },
                {
                    "name": "valueChanged",
                    "defaultValue": "new EventEmitter()",
                    "line": 36,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "_slots",
                    "defaultValue": "[]",
                    "type": "number[]",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "childName",
                    "defaultValue": "'input'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "formSub$",
                    "type": "Subscription | undefined",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "hiddenFields",
                    "type": "QueryList<HiddenAsteriskInputComponent> | undefined",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "decorators": [
                        {
                            "name": "ViewChildren",
                            "stringifiedArguments": "HiddenAsteriskInputComponent"
                        }
                    ]
                },
                {
                    "name": "parentFormGroup",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 23
                }
            ],
            "methodsClass": [
                {
                    "name": "addChild",
                    "args": [
                        {
                            "name": "childName",
                            "type": "string"
                        },
                        {
                            "name": "childGroup",
                            "type": "FormGroup"
                        },
                        {
                            "name": "digit",
                            "type": "number"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 63,
                    "description": "<p>Adds the digits to the parent form</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1553,
                                "end": 1562,
                                "flags": 0,
                                "escapedText": "childName"
                            },
                            "type": "string",
                            "tagName": {
                                "pos": 1547,
                                "end": 1552,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": ""
                        },
                        {
                            "name": {
                                "pos": 1575,
                                "end": 1585,
                                "flags": 0,
                                "escapedText": "childGroup"
                            },
                            "type": "FormGroup",
                            "tagName": {
                                "pos": 1569,
                                "end": 1574,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": ""
                        },
                        {
                            "name": {
                                "pos": 1598,
                                "end": 1603,
                                "flags": 0,
                                "escapedText": "digit"
                            },
                            "type": "number",
                            "tagName": {
                                "pos": 1592,
                                "end": 1597,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": ""
                        }
                    ]
                },
                {
                    "name": "clearForm",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 83,
                    "description": "<p>Clears out all the values from the form</p>\n"
                },
                {
                    "name": "moveNext",
                    "args": [
                        {
                            "name": "idx",
                            "type": "number"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 71,
                    "description": "<p>Moves to the component located at the index</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1832,
                                "end": 1835,
                                "flags": 0,
                                "escapedText": "idx"
                            },
                            "type": "number",
                            "tagName": {
                                "pos": 1826,
                                "end": 1831,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": ""
                        }
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 53
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  OnInit,\n  Input,\n  Output,\n  EventEmitter,\n  OnDestroy,\n  ViewChildren,\n  QueryList,\n} from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { HiddenAsteriskInputComponent } from '@shared/components/inputs/hidden-asterisk-input/hidden-asterisk-input.component';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'brave-hidden-code-form',\n  templateUrl: './hidden-code-form.component.html',\n})\nexport class HiddenCodeFormComponent implements OnInit {\n  @ViewChildren(HiddenAsteriskInputComponent)\n  hiddenFields: QueryList<HiddenAsteriskInputComponent> | undefined;\n\n  parentFormGroup: FormGroup;\n  childName: string = 'input';\n  private _slots: number[] = [];\n  private formSub$: Subscription | undefined;\n\n  @Input()\n  get slots() {\n    return this._slots;\n  }\n  set slots(slots: number[]) {\n    this._slots = slots;\n  }\n\n  @Output() valueChanged: EventEmitter<any> = new EventEmitter();\n  @Output()\n  onComponentReady: EventEmitter<FormGroup> = new EventEmitter<FormGroup>();\n\n  constructor(private fb: FormBuilder) {\n    this.parentFormGroup = fb.group({\n      code: [''],\n    }); // simple parent form with name of form\n  }\n\n  ngOnInit(): void {\n    this.formSub$ = this.parentFormGroup.valueChanges.subscribe((values) => {\n      this.valueChanged.emit(values);\n    });\n    this.onComponentReady.emit(this.parentFormGroup);\n  }\n\n  ngOnDestroy(): void {\n    if (this.formSub$) this.formSub$.unsubscribe();\n  }\n\n  /**\n   * Adds the digits to the parent form\n   * @param childName\n   * @param childGroup\n   * @param digit\n   */\n  addChild(childName: string, childGroup: FormGroup, digit: number): void {\n    this.parentFormGroup.addControl(`${childName}-${digit}`, childGroup);\n  }\n\n  /**\n   * Moves to the component located at the index\n   * @param idx\n   */\n  moveNext(idx: number): void {\n    const comp = this.hiddenFields?.find((c) => c.index === idx + 1);\n    if (comp) {\n      setTimeout(() => {\n        comp.focusMe();\n      }, 500);\n    }\n  }\n\n  /**\n   * Clears out all the values from the form\n   */\n  clearForm(): void {\n    this.hiddenFields?.forEach((c) => {\n      c.clearMe();\n    });\n    this.hiddenFields?.first.focusMe(); // set the cursor to the first one\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "fb",
                        "type": "FormBuilder"
                    }
                ],
                "line": 38,
                "jsdoctags": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "slots": {
                    "name": "slots",
                    "setSignature": {
                        "name": "slots",
                        "type": "void",
                        "args": [
                            {
                                "name": "slots",
                                "type": "[]"
                            }
                        ],
                        "returnType": "void",
                        "line": 32,
                        "jsdoctags": [
                            {
                                "name": "slots",
                                "type": "[]",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                }
            },
            "templateData": "<form [formGroup]=\"parentFormGroup\" class=\"flex justify-center items-center\">\n  <!-- Passing parent form to the child component -->\n  <div *ngFor=\"let x of slots; index as idx\" class=\"flex w-4 h-6 mr-1\">\n    <brave-hidden-asterisk-input\n      [index]=\"idx\"\n      (onComponentReady)=\"addChild(childName, $event, x)\"\n      (onMoveNext)=\"moveNext(idx)\"\n    >\n    </brave-hidden-asterisk-input>\n  </div>\n</form>\n"
        },
        {
            "name": "IndexDropdownComponent",
            "id": "component-IndexDropdownComponent-0f2b26d0c0742e81a4c1a8aad536734d",
            "file": "src/app/shared/components/dropdowns/popdowns/index-dropdown/index-dropdown.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-index-dropdown",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./index-dropdown.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "btnDropdownRef",
                    "type": "ElementRef | undefined",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'btnDropdownRef', {static: false}"
                        }
                    ]
                },
                {
                    "name": "dropdownPopoverShow",
                    "defaultValue": "false",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "popoverDropdownRef",
                    "type": "ElementRef | undefined",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'popoverDropdownRef', {static: false}"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "createPoppper",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15
                },
                {
                    "name": "toggleDropdown",
                    "args": [
                        {
                            "name": "event",
                            "type": "literal type"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "literal type",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { createPopper } from '@popperjs/core';\n\n@Component({\n  selector: 'brave-index-dropdown',\n  templateUrl: './index-dropdown.component.html',\n})\nexport class IndexDropdownComponent implements OnInit {\n  dropdownPopoverShow = false;\n  @ViewChild('btnDropdownRef', { static: false }) btnDropdownRef:\n    | ElementRef\n    | undefined;\n  @ViewChild('popoverDropdownRef', { static: false })\n  popoverDropdownRef: ElementRef | undefined;\n  ngOnInit() {}\n\n  toggleDropdown(event: { preventDefault: () => void }) {\n    event.preventDefault();\n    if (this.dropdownPopoverShow) {\n      this.dropdownPopoverShow = false;\n    } else {\n      this.dropdownPopoverShow = true;\n      this.createPoppper();\n    }\n  }\n  createPoppper() {\n    createPopper(\n      this.btnDropdownRef?.nativeElement,\n      this.popoverDropdownRef?.nativeElement,\n      {\n        placement: 'bottom-start',\n      }\n    );\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<a\n  class=\"hover:text-blueGray-500 text-blueGray-700 px-3 py-2 flex items-center text-xs uppercase font-bold\"\n  href=\"#pablo\"\n  (click)=\"toggleDropdown($event)\"\n  #btnDropdownRef\n>\n  Demo Pages\n</a>\n<div\n  class=\"bg-white text-base z-50 float-left py-2 list-none text-left rounded shadow-lg min-w-48\"\n  [ngClass]=\"dropdownPopoverShow ? 'block' : 'hidden'\"\n  #popoverDropdownRef\n>\n  <span\n    class=\"text-sm pt-2 pb-0 px-4 font-bold block w-full whitespace-nowrap bg-transparent text-blueGray-400\"\n  >\n    Admin Layout\n  </span>\n  <a\n    [routerLink]=\"['/admin/dashboard']\"\n    class=\"text-sm py-2 px-4 font-normal block w-full whitespace-nowrap bg-transparent text-blueGray-700\"\n  >\n    Dashboard\n  </a>\n  <a\n    [routerLink]=\"['/admin/settings']\"\n    class=\"text-sm py-2 px-4 font-normal block w-full whitespace-nowrap bg-transparent text-blueGray-700\"\n  >\n    Settings\n  </a>\n  <a\n    [routerLink]=\"['/admin/tables']\"\n    class=\"text-sm py-2 px-4 font-normal block w-full whitespace-nowrap bg-transparent text-blueGray-700\"\n  >\n    Tables\n  </a>\n  <a\n    [routerLink]=\"['/admin/maps']\"\n    class=\"text-sm py-2 px-4 font-normal block w-full whitespace-nowrap bg-transparent text-blueGray-700\"\n  >\n    Maps\n  </a>\n  <div class=\"h-0 mx-4 my-2 border border-solid border-blueGray-100\"></div>\n  <span\n    class=\"text-sm pt-2 pb-0 px-4 font-bold block w-full whitespace-nowrap bg-transparent text-blueGray-400\"\n  >\n    Auth Layout\n  </span>\n  <a\n    [routerLink]=\"['/auth/login']\"\n    class=\"text-sm py-2 px-4 font-normal block w-full whitespace-nowrap bg-transparent text-blueGray-700\"\n  >\n    Login\n  </a>\n  <a\n    [routerLink]=\"['/auth/register']\"\n    class=\"text-sm py-2 px-4 font-normal block w-full whitespace-nowrap bg-transparent text-blueGray-700\"\n  >\n    Register\n  </a>\n  <div class=\"h-0 mx-4 my-2 border border-solid border-blueGray-100\"></div>\n  <span\n    class=\"text-sm pt-2 pb-0 px-4 font-bold block w-full whitespace-nowrap bg-transparent text-blueGray-400\"\n  >\n    No Layout\n  </span>\n  <a\n    [routerLink]=\"['/landing']\"\n    class=\"text-sm py-2 px-4 font-normal block w-full whitespace-nowrap bg-transparent text-blueGray-700\"\n  >\n    Landing\n  </a>\n  <a\n    [routerLink]=\"['/profile']\"\n    class=\"text-sm py-2 px-4 font-normal block w-full whitespace-nowrap bg-transparent text-blueGray-700\"\n  >\n    Profile\n  </a>\n</div>\n"
        },
        {
            "name": "IndexNavbarComponent",
            "id": "component-IndexNavbarComponent-e7df9fc518522d0246bea1148baa0754",
            "file": "src/app/shared/components/navbars/index-navbar/index-navbar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-index-navbar",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./index-navbar.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "navbarOpen",
                    "defaultValue": "false",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12
                },
                {
                    "name": "setNavbarOpen",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'brave-index-navbar',\n  templateUrl: './index-navbar.component.html',\n})\nexport class IndexNavbarComponent implements OnInit {\n  navbarOpen = false;\n\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  setNavbarOpen() {\n    this.navbarOpen = !this.navbarOpen;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<nav\n  class=\"top-0 fixed z-50 w-full flex flex-wrap items-center justify-between px-2 py-3 navbar-expand-lg bg-white shadow\"\n>\n  <div\n    class=\"container px-4 mx-auto flex flex-wrap items-center justify-between\"\n  >\n    <div\n      class=\"w-full relative flex justify-between lg:w-auto lg:static lg:block lg:justify-start\"\n    >\n      <a\n        [routerLink]=\"['/']\"\n        class=\"text-blueGray-700 text-sm font-bold leading-relaxed inline-block mr-4 py-2 whitespace-nowrap uppercase\"\n        href=\"#pablo\"\n      >\n        Notus Angular\n      </a>\n      <button\n        class=\"cursor-pointer text-xl leading-none px-3 py-1 border border-solid border-transparent rounded bg-transparent block lg:hidden outline-none focus:outline-none\"\n        type=\"button\"\n        (click)=\"setNavbarOpen()\"\n      >\n        <i class=\"fas fa-bars\"></i>\n      </button>\n    </div>\n    <div\n      class=\"lg:flex flex-grow items-center\"\n      [ngClass]=\"{ hidden: !navbarOpen, block: navbarOpen }\"\n      id=\"example-navbar-warning\"\n    >\n      <ul class=\"flex flex-col lg:flex-row list-none mr-auto\">\n        <li class=\"flex items-center\">\n          <a\n            class=\"hover:text-blueGray-500 text-blueGray-700 px-3 py-2 flex items-center text-xs uppercase font-bold\"\n            href=\"https://www.creative-tim.com/learning-lab/tailwind/angular/overview/notus?ref=na-index-navbar\"\n          >\n            <i\n              class=\"text-blueGray-400 far fa-file-alt text-lg leading-lg mr-2\"\n            ></i>\n            Docs\n          </a>\n        </li>\n      </ul>\n      <ul class=\"flex flex-col lg:flex-row list-none lg:ml-auto\">\n        <li class=\"flex items-center\">\n          <brave-index-dropdown class=\"block\"></brave-index-dropdown>\n        </li>\n        <li class=\"flex items-center\">\n          <a\n            class=\"hover:text-blueGray-500 text-blueGray-700 px-3 py-2 flex items-center text-xs uppercase font-bold\"\n            href=\"https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fdemos.creative-tim.com%2Fnotus-angular%2F\"\n            target=\"_blank\"\n          >\n            <i class=\"text-blueGray-400 fab fa-facebook text-lg leading-lg\"></i>\n            <span class=\"lg:hidden inline-block ml-2\">Share</span>\n          </a>\n        </li>\n\n        <li class=\"flex items-center\">\n          <a\n            class=\"hover:text-blueGray-500 text-blueGray-700 px-3 py-2 flex items-center text-xs uppercase font-bold\"\n            href=\"https://twitter.com/intent/tweet?url=https%3A%2F%2Fdemos.creative-tim.com%2Fnotus-angular%2F&text=Start%20your%20development%20with%20a%20Free%20Tailwind%20CSS%20and%20Angular%20UI%20Kit%20and%20Admin.%20Let%20Notus%20Angular%20amaze%20you%20with%20its%20cool%20features%20and%20build%20tools%20and%20get%20your%20project%20to%20a%20whole%20new%20level.\"\n            target=\"_blank\"\n          >\n            <i class=\"text-blueGray-400 fab fa-twitter text-lg leading-lg\"></i>\n            <span class=\"lg:hidden inline-block ml-2\">Tweet</span>\n          </a>\n        </li>\n\n        <li class=\"flex items-center\">\n          <a\n            class=\"hover:text-blueGray-500 text-blueGray-700 px-3 py-2 flex items-center text-xs uppercase font-bold\"\n            href=\"https://github.com/creativetimofficial/notus-angular?ref=na-index-navbar\"\n            target=\"_blank\"\n          >\n            <i class=\"text-blueGray-400 fab fa-github text-lg leading-lg\"></i>\n            <span class=\"lg:hidden inline-block ml-2\">Star</span>\n          </a>\n        </li>\n\n        <li class=\"flex items-center\">\n          <button\n            class=\"bg-red-600 text-white active:bg-red-700 text-xs font-bold uppercase px-4 py-2 rounded shadow hover:shadow-lg outline-none focus:outline-none lg:mr-1 lg:mb-0 ml-3 mb-3 ease-linear transition-all duration-150\"\n            type=\"button\"\n          >\n            <i class=\"fas fa-arrow-alt-circle-down\"></i> Download\n          </button>\n        </li>\n      </ul>\n    </div>\n  </div>\n</nav>\n"
        },
        {
            "name": "KnowYouFormComponent",
            "id": "component-KnowYouFormComponent-280d9cf5d62c8dbfa5d239a7d511b405",
            "file": "src/app/shared/components/forms/know-you-form/know-you-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-know-you-form",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./know-you-form.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "hideHint",
                    "defaultValue": "false",
                    "line": 36,
                    "type": "boolean"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "firstNameConfig",
                    "defaultValue": "{\n    size: 'sm',\n    label: 'First Name',\n    type: 'text',\n    placeholder: 'First Name',\n    autocomplete: 'give-name',\n  }",
                    "type": "IOutlineInputeConfig",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "lastNameConfig",
                    "defaultValue": "{\n    size: 'sm',\n    label: 'Last Name',\n    type: 'text',\n    placeholder: 'Last Name',\n    autocomplete: 'family-name',\n  }",
                    "type": "IOutlineInputeConfig",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "middleNameConfig",
                    "defaultValue": "{\n    size: 'sm',\n    label: 'Middle Name',\n    type: 'text',\n    placeholder: 'Middle',\n    autocomplete: 'additional-name',\n  }",
                    "type": "IOutlineInputeConfig",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "parentForm",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methodsClass": [
                {
                    "name": "addChild",
                    "args": [
                        {
                            "name": "childName",
                            "type": "string"
                        },
                        {
                            "name": "childGroup",
                            "type": "FormGroup"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "jsdoctags": [
                        {
                            "name": "childName",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "childGroup",
                            "type": "FormGroup",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 44
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder } from '@angular/forms';\nimport { IOutlineInputeConfig } from '@shared/components/inputs/outline-input/outline-input.component';\n\n@Component({\n  selector: 'brave-know-you-form',\n  templateUrl: './know-you-form.component.html',\n})\nexport class KnowYouFormComponent implements OnInit {\n  parentForm: FormGroup;\n  firstNameConfig: IOutlineInputeConfig = {\n    size: 'sm',\n    label: 'First Name',\n    type: 'text',\n    placeholder: 'First Name',\n    autocomplete: 'give-name',\n  };\n  middleNameConfig: IOutlineInputeConfig = {\n    size: 'sm',\n    label: 'Middle Name',\n    type: 'text',\n    placeholder: 'Middle',\n    autocomplete: 'additional-name',\n  };\n  lastNameConfig: IOutlineInputeConfig = {\n    size: 'sm',\n    label: 'Last Name',\n    type: 'text',\n    placeholder: 'Last Name',\n    autocomplete: 'family-name',\n  };\n\n  /**\n   * @param hideHint flag to show 'required' hint or not\n   */\n  @Input() hideHint: boolean = false;\n\n  constructor(private fb: FormBuilder) {\n    this.parentForm = fb.group({\n      name: ['know-you-form'],\n    }); // simple parent form with name of form\n  }\n\n  ngOnInit(): void {}\n\n  addChild(childName: string, childGroup: FormGroup) {\n    this.parentForm.addControl(childName, childGroup);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "fb",
                        "type": "FormBuilder"
                    }
                ],
                "line": 36,
                "jsdoctags": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<form [formGroup]=\"parentForm\">\n  <div class=\"grid grid-cols-3 gap-4\">\n    <div class=\"col-span-2\">\n      <brave-outline-input\n        [config]=\"firstNameConfig\"\n        (onComponentReady)=\"addChild('first', $event)\"\n        [required]=\"true\"\n      >\n      </brave-outline-input>\n    </div>\n    <div>\n      <brave-outline-input\n        [config]=\"middleNameConfig\"\n        (onComponentReady)=\"addChild('middle', $event)\"\n        [required]=\"false\"\n      >\n      </brave-outline-input>\n    </div>\n    <div class=\"col-span-3\">\n      <div>\n        <brave-outline-input\n          [config]=\"lastNameConfig\"\n          (onComponentReady)=\"addChild('last', $event)\"\n          [required]=\"true\"\n        >\n        </brave-outline-input>\n        <div *ngIf=\"!hideHint\" class=\"-mt-2\">\n          <div class=\"flex justify-start items-start text-xs text-blueGray-600\">\n            <span class=\"-mt-1\">&#42;</span>&nbsp;Required\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n"
        },
        {
            "name": "KycAddressComponent",
            "id": "component-KycAddressComponent-6fe8f0b431a4bb9bf81a3ebac23a2463",
            "file": "src/app/views/kyc-address/kyc-address.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-kyc-address",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./kyc-address.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 10
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'brave-kyc-address',\n  templateUrl: './kyc-address.component.html',\n})\nexport class KycAddressComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 7
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"container mx-auto max-w-xs h-full\">\n  <div class=\"flex content-center items-center justify-center h-full\">\n    <div class=\"w-full max-w-xs\">\n      <div class=\"relative flex flex-col min-w-0 w-full mb-6 border-0\">\n        <!-- header -->\n        <div class=\"py-3\">\n          <h4 class=\"brave-h4 text-indigo-800\">Your Address</h4>\n        </div>\n\n        <!-- subheader -->\n        <div class=\"py-3\">\n          <div class=\"text-base\">\n            <p class=\"mb-6 text-blueGray-600\">\n              What is your most recent home address?\n            </p>\n          </div>\n        </div>\n\n        <!-- form -->\n        <div class=\"py-3 pt-0\">\n          <brave-outline-address-form></brave-outline-address-form>\n        </div>\n\n        <div class=\"mt-5\">\n          <div class=\"flex justify-between items-center\">\n            <brave-links-onlytext-button\n              [config]=\"{ buttonSize: 'sm', color: 'text-blueGray-600' }\"\n            >\n              <span class=\"flex items-center\">\n                <span class=\"material-icons px-1\">arrow_back</span>&nbsp;Back\n              </span>\n            </brave-links-onlytext-button>\n            <brave-filled-onlytext-button\n              ><span class=\"flex items-center\"\n                >Continue<span class=\"material-icons px-1\"\n                  >arrow_forward</span\n                ></span\n              ></brave-filled-onlytext-button\n            >\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n"
        },
        {
            "name": "KycCongratulationsComponent",
            "id": "component-KycCongratulationsComponent-3189fbc602da04b871396ebf4e3c3f0c",
            "file": "src/app/views/kyc-congratulations/kyc-congratulations.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-kyc-congratulations",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./kyc-congratulations.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 10
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'brave-kyc-congratulations',\n  templateUrl: './kyc-congratulations.component.html',\n})\nexport class KycCongratulationsComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 7
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"container mx-auto max-w-xs h-full\">\n  <div class=\"flex content-center items-center justify-center h-full\">\n    <div class=\"w-full max-w-xs\">\n      <div class=\"relative flex flex-col min-w-0 w-full mb-6 border-0\">\n        <!-- image -->\n        <div class=\"flex justify-center mb-6\">\n          <img class=\"w-full\" src=\"assets/img/undraw_welcoming_xvuq.svg\" />\n        </div>\n\n        <!-- header -->\n        <div class=\"py-3\">\n          <h4 class=\"brave-h4\">Congratulations!</h4>\n        </div>\n\n        <!-- subheader -->\n        <div class=\"py-3\">\n          <div class=\"text-base\">\n            <p class=\"mb-6 text-blueGray-600\">You are verified.</p>\n          </div>\n        </div>\n\n        <!-- subheader -->\n        <div class=\"py-3\">\n          <div class=\"text-base\">\n            <p class=\"mb-6 text-blueGray-600\">\n              You are being redirected to the BraveCredit dashboard.\n            </p>\n          </div>\n        </div>\n\n        <div class=\"py-3 pt-0\">\n          <div class=\"-ml-3\">\n            <brave-links-onlytext-button\n              [config]=\"{ buttonSize: 'sm', color: 'text-blueGray-600' }\"\n              ><span class=\"underline\"\n                >Not being redirected? Click here</span\n              ></brave-links-onlytext-button\n            >\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n"
        },
        {
            "name": "KycIdverificationComponent",
            "id": "component-KycIdverificationComponent-1429aed2faa2be28cfabe8bb4cc9d97d",
            "file": "src/app/views/kyc-idverification/kyc-idverification.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-kyc-idverification",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./kyc-idverification.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "state",
                    "defaultValue": "'init'",
                    "line": 10,
                    "type": "KycIdverificationState"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\ntype KycIdverificationState = 'init' | 'sent' | 'error';\n\n@Component({\n  selector: 'brave-kyc-idverification',\n  templateUrl: './kyc-idverification.component.html',\n})\nexport class KycIdverificationComponent implements OnInit {\n  @Input() state: KycIdverificationState = 'init';\n\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 10
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"container mx-auto max-w-xs h-full\">\n  <div class=\"flex content-center items-center justify-center h-full\">\n    <div class=\"w-full max-w-xs\">\n      <div class=\"relative flex flex-col min-w-0 w-full mb-6 border-0\">\n        <!-- header -->\n        <div class=\"py-3\">\n          <h4 class=\"brave-h4 text-indigo-800\">ID Verification</h4>\n        </div>\n\n        <!-- subheader -->\n        <div *ngIf=\"state === 'init'\" class=\"py-3\">\n          <div class=\"text-base\">\n            <p class=\"mb-6 text-blueGray-600\">\n              Please enter the 5-digit code you just received to the phone\n              number you provided in the box below.\n            </p>\n          </div>\n        </div>\n\n        <!-- subheader -->\n        <div *ngIf=\"state === 'sent'\" class=\"py-3\">\n          <div class=\"text-base\">\n            <p class=\"mb-6 text-blueGray-600\">\n              We have texted you a new code. Please enter the new code in the\n              box below.\n            </p>\n          </div>\n        </div>\n\n        <!-- subheader -->\n        <div *ngIf=\"state === 'error'\" class=\"py-3\">\n          <div class=\"text-base\">\n            <p class=\"mb-6 text-blueGray-600\">\n              The code you entered was incorrect, please try again.\n            </p>\n          </div>\n        </div>\n\n        <!-- subheader -->\n        <div class=\"py-3\">\n          <div class=\"text-sm\">\n            <p class=\"mb-6 text-blueGray-600\">\n              Code will expire in 15 minutes.\n            </p>\n          </div>\n        </div>\n\n        <!-- form -->\n        <div class=\"py-3 pt-0\">\n          <brave-outline-verificationcode-form></brave-outline-verificationcode-form>\n        </div>\n\n        <div class=\"py-3 pt-0\">\n          <div class=\"-ml-3\">\n            <brave-links-onlytext-button\n              [config]=\"{ buttonSize: 'sm', color: 'text-blueGray-600' }\"\n              ><span class=\"underline\"\n                >Resend code</span\n              ></brave-links-onlytext-button\n            >\n          </div>\n        </div>\n\n        <div class=\"mt-5\">\n          <div class=\"flex justify-between items-center\">\n            <brave-links-onlytext-button\n              [config]=\"{ buttonSize: 'sm', color: 'text-blueGray-600' }\"\n            >\n              <span class=\"flex items-center\">\n                <span class=\"material-icons px-1\">arrow_back</span>&nbsp;Back\n              </span>\n            </brave-links-onlytext-button>\n            <brave-filled-onlytext-button\n              ><span class=\"flex items-center\"\n                >Continue<span class=\"material-icons px-1\"\n                  >arrow_forward</span\n                ></span\n              ></brave-filled-onlytext-button\n            >\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n"
        },
        {
            "name": "KycKbaquestionsComponent",
            "id": "component-KycKbaquestionsComponent-72309aa95de5924db9e7acecdf929f4a",
            "file": "src/app/views/kyc-kbaquestions/kyc-kbaquestions.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-kyc-kbaquestions",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./kyc-kbaquestions.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 10
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'brave-kyc-kbaquestions',\n  templateUrl: './kyc-kbaquestions.component.html',\n})\nexport class KycKbaquestionsComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 7
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"container mx-auto max-w-xs h-full\">\n  <div class=\"flex content-center items-center justify-center h-full\">\n    <div class=\"w-full max-w-xs\">\n      <div class=\"relative flex flex-col min-w-0 w-full mb-6 border-0\">\n        <!-- header -->\n        <div class=\"py-3\">\n          <h4 class=\"brave-h4 text-indigo-800\">Verify Your Identity</h4>\n        </div>\n\n        <!-- subheader -->\n        <div class=\"py-3\">\n          <div class=\"text-base\">\n            <p class=\"mb-6 text-blueGray-600\">\n              These questions are from the credit bureaus to verify your\n              identiy. Please answer them to the best of your knowledge\n            </p>\n          </div>\n        </div>\n\n        <!-- form -->\n        <div class=\"py-3 pt-0 h-1/3 bg-blue-400\">\n          <div class=\"flex justify-center items-center\">\n            <span>KBA Questions go here</span>\n          </div>\n        </div>\n\n        <div class=\"mt-5\">\n          <div class=\"flex justify-between items-center\">\n            <brave-links-onlytext-button\n              [config]=\"{ buttonSize: 'sm', color: 'text-blueGray-600' }\"\n            >\n              <span class=\"flex items-center\">\n                <span class=\"material-icons px-1\">arrow_back</span>&nbsp;Back\n              </span>\n            </brave-links-onlytext-button>\n            <brave-filled-onlytext-button\n              ><span class=\"flex items-center\"\n                >Next<span class=\"material-icons px-1\"\n                  >arrow_forward</span\n                ></span\n              ></brave-filled-onlytext-button\n            >\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n"
        },
        {
            "name": "KycLayoutComponent",
            "id": "component-KycLayoutComponent-eb5f86f206efb31a94244341c9b53005",
            "file": "src/app/layouts/onboarding/kyc-layout/kyc-layout.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-kyc-layout",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./kyc-layout.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "progressBar",
                    "type": "FilledChecktextProgressbarComponent | undefined",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "FilledChecktextProgressbarComponent"
                        }
                    ]
                },
                {
                    "name": "progressConfig",
                    "defaultValue": "{\n    size: 'base',\n    steps: [\n      { active: false, complete: false, name: 'Name' },\n      { active: false, complete: false, name: 'Address' },\n      { active: false, complete: false, name: 'Identity' },\n      { active: false, complete: false, name: 'Verify' },\n    ],\n  }",
                    "type": "IFilledChecktextProgressbarConfig",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\nimport {\n  FilledChecktextProgressbarComponent,\n  IFilledChecktextProgressbarConfig,\n} from '@shared/components/progressbars/filled-checktext-progressbar/filled-checktext-progressbar.component';\n\n@Component({\n  selector: 'brave-kyc-layout',\n  templateUrl: './kyc-layout.component.html',\n})\nexport class KycLayoutComponent implements OnInit, AfterViewInit {\n  @ViewChild(FilledChecktextProgressbarComponent)\n  progressBar: FilledChecktextProgressbarComponent | undefined;\n  public progressConfig: IFilledChecktextProgressbarConfig = {\n    size: 'base',\n    steps: [\n      { active: false, complete: false, name: 'Name' },\n      { active: false, complete: false, name: 'Address' },\n      { active: false, complete: false, name: 'Identity' },\n      { active: false, complete: false, name: 'Verify' },\n    ],\n  };\n\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  ngAfterViewInit(): void {\n    this.progressBar?.goToFirst();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 22
            },
            "implements": [
                "OnInit",
                "AfterViewInit"
            ],
            "templateData": "<div>\n  <div>\n    <brave-filled-checktext-progressbar\n      [config]=\"progressConfig\"\n    ></brave-filled-checktext-progressbar>\n  </div>\n  <main>\n    <section class=\"relative w-full h-full min-h-screen\">\n      <!-- <router-outlet></router-outlet> -->\n      <brave-kyc-address></brave-kyc-address>\n    </section>\n  </main>\n</div>\n"
        },
        {
            "name": "KycPhonenumberComponent",
            "id": "component-KycPhonenumberComponent-6aec7a9136f08e0f2d4a7a5f83113950",
            "file": "src/app/views/kyc-phonenumber/kyc-phonenumber.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-kyc-phonenumber",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./kyc-phonenumber.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 10
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'brave-kyc-phonenumber',\n  templateUrl: './kyc-phonenumber.component.html',\n})\nexport class KycPhonenumberComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 7
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"container mx-auto max-w-xs h-full\">\n  <div class=\"flex content-center items-center justify-center h-full\">\n    <div class=\"w-full max-w-xs\">\n      <div class=\"relative flex flex-col min-w-0 w-full mb-6 border-0\">\n        <!-- header -->\n        <div class=\"py-3\">\n          <h4 class=\"brave-h4 text-indigo-800\">Phone Number</h4>\n        </div>\n\n        <!-- subheader -->\n        <div class=\"py-3\">\n          <div class=\"text-base\">\n            <p class=\"mb-6 text-blueGray-600\">\n              To complete your authentication, we need to confirm your phone\n              number. We will text a 5-digit code to the number below.\n            </p>\n          </div>\n        </div>\n\n        <!-- subheader -->\n        <div class=\"py-3\">\n          <div class=\"text-sm\">\n            <p class=\"mb-6 text-blueGray-600\">\n              Standard data and messaging rates may apply.\n            </p>\n          </div>\n        </div>\n\n        <!-- form -->\n        <div class=\"py-3 pt-0\">\n          <brave-outline-phone-form></brave-outline-phone-form>\n        </div>\n\n        <div class=\"mt-5\">\n          <div class=\"flex justify-between items-center\">\n            <brave-links-onlytext-button\n              [config]=\"{ buttonSize: 'sm', color: 'text-blueGray-600' }\"\n            >\n              <span class=\"flex items-center\">\n                <span class=\"material-icons px-1\">arrow_back</span>&nbsp;Back\n              </span>\n            </brave-links-onlytext-button>\n            <brave-filled-onlytext-button\n              ><span class=\"flex items-center\"\n                >Continue<span class=\"material-icons px-1\"\n                  >arrow_forward</span\n                ></span\n              ></brave-filled-onlytext-button\n            >\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n"
        },
        {
            "name": "KycSsnComponent",
            "id": "component-KycSsnComponent-9058f98bc2a4735037cd92cca44d7cbd",
            "file": "src/app/views/kyc-ssn/kyc-ssn.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-kyc-ssn",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./kyc-ssn.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 10
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'brave-kyc-ssn',\n  templateUrl: './kyc-ssn.component.html',\n})\nexport class KycSsnComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 7
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"container mx-auto max-w-xs h-full\">\n  <div class=\"flex content-center items-center justify-center h-full\">\n    <div class=\"w-full max-w-xs\">\n      <div class=\"relative flex flex-col min-w-0 w-full mb-6 border-0\">\n        <!-- header -->\n        <div class=\"py-3\">\n          <h4 class=\"brave-h4 text-indigo-800\">Social Security</h4>\n        </div>\n\n        <!-- subheader -->\n        <div class=\"py-3\">\n          <div class=\"text-base\">\n            <p class=\"mb-6 text-blueGray-600\">\n              We need the last 4 digits of your SSN to confirm your identity for\n              your credit report and score. This information will not be used\n              for anything else.\n            </p>\n          </div>\n        </div>\n\n        <!-- items -->\n        <div class=\"py-3 pt-0\">\n          <div class=\"flex mb-6\">\n            <span class=\"material-icons justify-end ml-6 mr-2 text-blueGray-600\"\n              >lock_outline</span\n            >\n            <span class=\"text-base\">\n              <p class=\"text-blueGray-600\">\n                This will not impact your credit score\n              </p>\n            </span>\n          </div>\n          <div class=\"flex mb-6\">\n            <span class=\"material-icons justify-end ml-6 mr-2 text-blueGray-600\"\n              >lock_outline</span\n            >\n            <span class=\"text-base\">\n              <p class=\"text-blueGray-600\">\n                Your SSN will be encrypted and transmitted to us via a secure\n                connection\n              </p>\n            </span>\n          </div>\n        </div>\n\n        <!-- form -->\n        <div class=\"py-3 pt-0\">\n          <brave-ssn-lastfour-form\n            [slots]=\"[0, 1, 2, 3]\"\n          ></brave-ssn-lastfour-form>\n        </div>\n\n        <div class=\"mt-5\">\n          <div class=\"flex justify-between items-center\">\n            <brave-links-onlytext-button\n              [config]=\"{ buttonSize: 'sm', color: 'text-blueGray-600' }\"\n            >\n              <span class=\"flex items-center\">\n                <span class=\"material-icons px-1\">arrow_back</span>&nbsp;Back\n              </span>\n            </brave-links-onlytext-button>\n            <brave-filled-onlytext-button\n              ><span class=\"flex items-center\"\n                >Continue<span class=\"material-icons px-1\"\n                  >arrow_forward</span\n                ></span\n              ></brave-filled-onlytext-button\n            >\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n"
        },
        {
            "name": "KycSsnFullComponent",
            "id": "component-KycSsnFullComponent-557d92b315c8584a7ad97871907c598a",
            "file": "src/app/views/kyc-ssn-full/kyc-ssn-full.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-kyc-ssn-full",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./kyc-ssn-full.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 10
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'brave-kyc-ssn-full',\n  templateUrl: './kyc-ssn-full.component.html',\n})\nexport class KycSsnFullComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 7
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"container mx-auto max-w-xs h-full\">\n  <div class=\"flex content-center items-center justify-center h-full\">\n    <div class=\"w-full max-w-xs\">\n      <div class=\"relative flex flex-col min-w-0 w-full mb-6 border-0\">\n        <!-- header -->\n        <div class=\"py-3\">\n          <h4 class=\"brave-h4 text-indigo-800\">Social Security</h4>\n        </div>\n\n        <!-- subheader -->\n        <div class=\"py-3\">\n          <div class=\"text-base\">\n            <p class=\"mb-6 text-blueGray-600\">\n              We weren’t able to verify your identiy with the last 4 digits of\n              your SSN. We will need to verify your full SSN.\n            </p>\n          </div>\n        </div>\n\n        <!-- items -->\n        <div class=\"py-3 pt-0\">\n          <div class=\"flex mb-6\">\n            <span class=\"material-icons justify-end ml-6 mr-2 text-blueGray-600\"\n              >lock_outline</span\n            >\n            <span class=\"text-base\">\n              <p class=\"text-blueGray-600\">\n                This will not impact your credit score\n              </p>\n            </span>\n          </div>\n          <div class=\"flex mb-6\">\n            <span class=\"material-icons justify-end ml-6 mr-2 text-blueGray-600\"\n              >lock_outline</span\n            >\n            <span class=\"text-base\">\n              <p class=\"text-blueGray-600\">\n                Your SSN will be encrypted and transmitted to us via a secure\n                connection\n              </p>\n            </span>\n          </div>\n        </div>\n\n        <!-- form -->\n        <div class=\"py-3 pt-0\">\n          <brave-ssn-full-form></brave-ssn-full-form>\n        </div>\n\n        <div class=\"mt-5\">\n          <div class=\"flex justify-between items-center\">\n            <brave-links-onlytext-button\n              [config]=\"{ buttonSize: 'sm', color: 'text-blueGray-600' }\"\n            >\n              <span class=\"flex items-center\">\n                <span class=\"material-icons px-1\">arrow_back</span>&nbsp;Back\n              </span>\n            </brave-links-onlytext-button>\n            <brave-filled-onlytext-button\n              ><span class=\"flex items-center\"\n                >Continue<span class=\"material-icons px-1\"\n                  >arrow_forward</span\n                ></span\n              ></brave-filled-onlytext-button\n            >\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n"
        },
        {
            "name": "KycWelcomebackComponent",
            "id": "component-KycWelcomebackComponent-1bd8d84c47d25a2277be438ea8e8084f",
            "file": "src/app/views/kyc-welcomeback/kyc-welcomeback.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-kyc-welcomeback",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./kyc-welcomeback.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 10
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'brave-kyc-welcomeback',\n  templateUrl: './kyc-welcomeback.component.html',\n})\nexport class KycWelcomebackComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 7
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"container mx-auto max-w-xs h-full\">\n  <div class=\"flex content-center items-center justify-center h-full\">\n    <div class=\"w-full max-w-xs\">\n      <div class=\"relative flex flex-col min-w-0 w-full mb-6 border-0\">\n        <!-- image -->\n        <div class=\"flex justify-center mb-6\">\n          <img class=\"w-full\" src=\"assets/img/undraw_welcoming_xvuq.svg\" />\n        </div>\n\n        <!-- header -->\n        <div class=\"py-3\">\n          <h4 class=\"brave-h4\">Welcome Back</h4>\n        </div>\n\n        <!-- subheader -->\n        <div class=\"py-3\">\n          <div class=\"text-base\">\n            <p class=\"mb-6 text-blueGray-600\">Let's start where you left off</p>\n          </div>\n        </div>\n\n        <div class=\"mt-5\">\n          <div class=\"flex justify-between items-center\">\n            <brave-links-onlytext-button\n              [config]=\"{ buttonSize: 'sm', color: 'text-blueGray-600' }\"\n            >\n              <span class=\"flex items-center\">\n                <span class=\"material-icons px-1\">arrow_back</span>&nbsp;Back\n              </span>\n            </brave-links-onlytext-button>\n            <brave-filled-onlytext-button\n              ><span class=\"flex items-center\"\n                >Continue<span class=\"material-icons px-1\"\n                  >arrow_forward</span\n                ></span\n              ></brave-filled-onlytext-button\n            >\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n"
        },
        {
            "name": "KycWelcomeComponent",
            "id": "component-KycWelcomeComponent-f52cb8d8c468a3b5a7edec2c862916c1",
            "file": "src/app/views/kyc-welcome/kyc-welcome.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-kyc-welcome",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./kyc-welcome.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 10
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'brave-kyc-welcome',\n  templateUrl: './kyc-welcome.component.html',\n})\nexport class KycWelcomeComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 7
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"container mx-auto max-w-xs h-full\">\n  <div class=\"flex content-center items-center justify-center h-full\">\n    <div class=\"w-full max-w-xs\">\n      <div class=\"relative flex flex-col min-w-0 w-full mb-6 border-0\">\n        <!-- image -->\n        <div class=\"flex justify-center mb-6\">\n          <img class=\"w-full\" src=\"assets/img/undraw_welcoming_xvuq.svg\" />\n        </div>\n\n        <!-- header -->\n        <div class=\"py-3\">\n          <h4 class=\"brave-h4 text-indigo-800\">Welcome!</h4>\n        </div>\n\n        <!-- subheader -->\n        <div class=\"py-3\">\n          <div class=\"text-base\">\n            <p class=\"mb-6 text-blueGray-600\">\n              Let's start with some basic info\n            </p>\n          </div>\n        </div>\n\n        <!-- section 1 header -->\n        <div class=\"py-3\">\n          <h6 class=\"brave-h6\">Full Legal Name</h6>\n        </div>\n\n        <!-- form -->\n        <div class=\"py-3 pt-0\">\n          <brave-know-you-form [hideHint]=\"true\"></brave-know-you-form>\n        </div>\n\n        <!-- section 2 header -->\n        <div class=\"py-3\">\n          <h6 class=\"brave-h6\">\n            Date of Birth<span class=\"-mt-1\">&#42;</span>\n          </h6>\n        </div>\n\n        <!-- form -->\n        <div class=\"py-3 pt-0\">\n          <brave-dateofbirth-form></brave-dateofbirth-form>\n        </div>\n\n        <div class=\"mt-5\">\n          <div class=\"flex justify-between items-center\">\n            <brave-links-onlytext-button\n              [config]=\"{ buttonSize: 'sm', color: 'text-blueGray-600' }\"\n            >\n              <span class=\"flex items-center\">\n                <span class=\"material-icons px-1\">arrow_back</span>&nbsp;Back\n              </span>\n            </brave-links-onlytext-button>\n            <brave-filled-onlytext-button\n              ><span class=\"flex items-center\"\n                >Continue<span class=\"material-icons px-1\"\n                  >arrow_forward</span\n                ></span\n              ></brave-filled-onlytext-button\n            >\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n"
        },
        {
            "name": "LinksOnlytextButtonComponent",
            "id": "component-LinksOnlytextButtonComponent-3f13da1dcb0790cb76c693f0e7585b81",
            "file": "src/app/shared/components/buttons/links-onlytext-button/links-onlytext-button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-links-onlytext-button",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./links-onlytext-button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "config",
                    "defaultValue": "{\n    buttonSize: 'base',\n    color: 'text-indigo-800',\n  }",
                    "line": 18,
                    "type": "ILinksOnlyTextButtonConfig"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\nexport interface ILinksOnlyTextButtonConfig {\n  buttonSize: string;\n  color: string;\n}\n\n@Component({\n  selector: 'brave-links-onlytext-button',\n  templateUrl: './links-onlytext-button.component.html',\n})\nexport class LinksOnlytextButtonComponent {\n  /**\n   * @param config Input objctfor button customization\n   * @param config.buttonSize 'sm', 'base', 'lg'\n   * @param config.color Any global color\n   */\n  @Input() config: ILinksOnlyTextButtonConfig = {\n    buttonSize: 'base',\n    color: 'text-indigo-800',\n  };\n\n  constructor() {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 21
            },
            "templateData": "<button\n  [ngClass]=\"config | linksOnlytextButton\"\n  class=\"\n    background-transparent\n    font-bold\n    outline-none\n    focus:outline-none\n    mr-1\n    mb-1\n    ease-linear\n    transition-all\n    duration-150\n  \"\n  type=\"button\"\n>\n  <ng-content></ng-content>\n</button>\n"
        },
        {
            "name": "MenuDropdownComponent",
            "id": "component-MenuDropdownComponent-e5e1cbc1f941d50ca014cf1b1ff21fd0",
            "file": "src/app/shared/components/dropdowns/popdowns/menu-dropdown/menu-dropdown.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-menu-dropdown",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./menu-dropdown.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "config",
                    "defaultValue": "{\n    menu: 'Menu',\n    submenus: [\n      { submenu: 'Sub 1', route: '/submenu1', group: 'Group 1' },\n      { submenu: 'Sub 2', route: '/submenu2' },\n      { submenu: 'Sub 3', route: '/submenu3' },\n      { submenu: 'Sub 4', route: '/submenu4' },\n      { submenu: 'Sub 5', route: '/submenu5', break: true },\n      { submenu: 'Sub 6', route: '/submenu6', group: 'Group 2' },\n      { submenu: 'Sub 7', route: '/submenu7' },\n      { submenu: 'Sub 8', route: '/submenu8', break: true },\n      { submenu: 'Sub 9', route: '/submenu9', group: 'Group 3' },\n      { submenu: 'Sub 10', route: '/submenu10' },\n    ],\n  }",
                    "line": 20,
                    "type": "IMenuDropdown"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "btnDropdownRef",
                    "type": "ElementRef | undefined",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'btnDropdownRef', {static: false}"
                        }
                    ]
                },
                {
                    "name": "dropdownPopoverShow",
                    "defaultValue": "false",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "popoverDropdownRef",
                    "type": "ElementRef | undefined",
                    "optional": false,
                    "description": "",
                    "line": 40,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'popoverDropdownRef', {static: false}"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "createPoppper",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 51
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 41
                },
                {
                    "name": "toggleDropdown",
                    "args": [
                        {
                            "name": "event",
                            "type": "literal type"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 42,
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "literal type",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, ElementRef, Input, OnInit, ViewChild } from '@angular/core';\nimport { createPopper } from '@popperjs/core';\n\nexport interface ISubmenuItem {\n  submenu: string;\n  route: string;\n  group?: string;\n  break?: boolean;\n}\nexport interface IMenuDropdown {\n  menu: string;\n  submenus?: ISubmenuItem[];\n}\n\n@Component({\n  selector: 'brave-menu-dropdown',\n  templateUrl: './menu-dropdown.component.html',\n})\nexport class MenuDropdownComponent implements OnInit {\n  @Input() config: IMenuDropdown = {\n    menu: 'Menu',\n    submenus: [\n      { submenu: 'Sub 1', route: '/submenu1', group: 'Group 1' },\n      { submenu: 'Sub 2', route: '/submenu2' },\n      { submenu: 'Sub 3', route: '/submenu3' },\n      { submenu: 'Sub 4', route: '/submenu4' },\n      { submenu: 'Sub 5', route: '/submenu5', break: true },\n      { submenu: 'Sub 6', route: '/submenu6', group: 'Group 2' },\n      { submenu: 'Sub 7', route: '/submenu7' },\n      { submenu: 'Sub 8', route: '/submenu8', break: true },\n      { submenu: 'Sub 9', route: '/submenu9', group: 'Group 3' },\n      { submenu: 'Sub 10', route: '/submenu10' },\n    ],\n  };\n  dropdownPopoverShow = false;\n  @ViewChild('btnDropdownRef', { static: false }) btnDropdownRef:\n    | ElementRef\n    | undefined;\n  @ViewChild('popoverDropdownRef', { static: false })\n  popoverDropdownRef: ElementRef | undefined;\n  ngOnInit() {}\n  toggleDropdown(event: { preventDefault: () => void }) {\n    event.preventDefault();\n    if (this.dropdownPopoverShow) {\n      this.dropdownPopoverShow = false;\n    } else {\n      this.dropdownPopoverShow = true;\n      this.createPoppper();\n    }\n  }\n  createPoppper() {\n    createPopper(\n      this.btnDropdownRef?.nativeElement,\n      this.popoverDropdownRef?.nativeElement,\n      {\n        placement: 'bottom-start',\n      }\n    );\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<a\n  class=\"font-sans text-sm uppercase hover:text-coolGray-500 text-coolGray-700 px-3 py-2 flex items-center\"\n  href=\"#\"\n  (click)=\"toggleDropdown($event)\"\n  #btnDropdownRef\n>\n  {{ config.menu }}\n</a>\n<div\n  class=\"bg-white text-base z-50 float-left py-2 list-none text-left rounded shadow-lg min-w-48\"\n  [ngClass]=\"dropdownPopoverShow ? 'block' : 'hidden'\"\n  #popoverDropdownRef\n>\n  <ng-container *ngFor=\"let submenu of config.submenus\">\n    <span\n      *ngIf=\"submenu.group\"\n      class=\"text-sm pt-2 pb-0 px-4 font-bold block w-full whitespace-nowrap bg-transparent text-blueGray-400\"\n    >\n      {{ submenu.group }}\n    </span>\n    <a\n      [routerLink]=\"[submenu.route]\"\n      class=\"text-sm py-2 px-4 font-normal block w-full whitespace-nowrap bg-transparent text-blueGray-700\"\n    >\n      {{ submenu.submenu }}\n    </a>\n    <div\n      *ngIf=\"submenu.break\"\n      class=\"h-0 mx-4 my-2 border border-solid border-blueGray-100\"\n    ></div>\n  </ng-container>\n</div>\n"
        },
        {
            "name": "NotificationDropdownComponent",
            "id": "component-NotificationDropdownComponent-5d98fa2f52a0d4d27b8f73f43ab08034",
            "file": "src/app/shared/components/dropdowns/popdowns/notification-dropdown/notification-dropdown.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-notification-dropdown",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./notification-dropdown.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "btnDropdownRef",
                    "type": "ElementRef | undefined",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'btnDropdownRef', {static: false}"
                        }
                    ]
                },
                {
                    "name": "dropdownPopoverShow",
                    "defaultValue": "false",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "popoverDropdownRef",
                    "type": "ElementRef | undefined",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'popoverDropdownRef', {static: false}"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15
                },
                {
                    "name": "toggleDropdown",
                    "args": [
                        {
                            "name": "event",
                            "type": "literal type"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "literal type",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, AfterViewInit, ViewChild, ElementRef } from '@angular/core';\nimport { createPopper } from '@popperjs/core';\n\n@Component({\n  selector: 'brave-notification-dropdown',\n  templateUrl: './notification-dropdown.component.html',\n})\nexport class NotificationDropdownComponent implements AfterViewInit {\n  dropdownPopoverShow = false;\n  @ViewChild('btnDropdownRef', { static: false }) btnDropdownRef:\n    | ElementRef\n    | undefined;\n  @ViewChild('popoverDropdownRef', { static: false })\n  popoverDropdownRef: ElementRef | undefined;\n  ngAfterViewInit() {\n    createPopper(\n      this.btnDropdownRef?.nativeElement,\n      this.popoverDropdownRef?.nativeElement,\n      {\n        placement: 'bottom-start',\n      }\n    );\n  }\n  toggleDropdown(event: { preventDefault: () => void }) {\n    event.preventDefault();\n    if (this.dropdownPopoverShow) {\n      this.dropdownPopoverShow = false;\n    } else {\n      this.dropdownPopoverShow = true;\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "implements": [
                "AfterViewInit"
            ],
            "templateData": "<a\n  class=\"text-blueGray-500 block py-1 px-3\"\n  href=\"#pablo\"\n  (click)=\"toggleDropdown($event)\"\n  #btnDropdownRef\n>\n  <i class=\"fas fa-bell\"></i>\n</a>\n<div class=\"min-w-48 z-50\" #popoverDropdownRef>\n  <div\n    class=\"bg-white text-base z-50 float-left py-2 list-none text-left rounded shadow-lg mt-1 min-w-48\"\n    [ngClass]=\"dropdownPopoverShow ? 'block' : 'hidden'\"\n  >\n    <a\n      href=\"#pablo\"\n      class=\"text-sm py-2 px-4 font-normal block w-full whitespace-nowrap bg-transparent text-blueGray-700\"\n    >\n      Action\n    </a>\n    <a\n      href=\"#pablo\"\n      class=\"text-sm py-2 px-4 font-normal block w-full whitespace-nowrap bg-transparent text-blueGray-700\"\n    >\n      Another action\n    </a>\n    <a\n      href=\"#pablo\"\n      class=\"text-sm py-2 px-4 font-normal block w-full whitespace-nowrap bg-transparent text-blueGray-700\"\n    >\n      Something else here\n    </a>\n    <div class=\"h-0 my-2 border border-solid border-blueGray-100\"></div>\n    <a\n      href=\"#pablo\"\n      class=\"text-sm py-2 px-4 font-normal block w-full whitespace-nowrap bg-transparent text-blueGray-700\"\n    >\n      Seprated link\n    </a>\n  </div>\n</div>\n"
        },
        {
            "name": "OnboardingComponent",
            "id": "component-OnboardingComponent-c53170925cd965430541325e6ccc3995",
            "file": "src/app/layouts/onboarding/onboarding.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-onboarding",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./onboarding.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 10
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'brave-onboarding',\n  templateUrl: './onboarding.component.html',\n})\nexport class OnboardingComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 7
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div>\n  <main>\n    <section class=\"relative w-full h-full py-40 min-h-screen\">\n      <router-outlet></router-outlet>\n    </section>\n  </main>\n</div>\n"
        },
        {
            "name": "OutlineAddressFormComponent",
            "id": "component-OutlineAddressFormComponent-0d4230b445efab89a76d5740832047f9",
            "file": "src/app/shared/components/forms/outline-address-form/outline-address-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-outline-address-form",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./outline-address-form.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "hideHint",
                    "defaultValue": "false",
                    "line": 50,
                    "type": "boolean"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "addressOneConfig",
                    "defaultValue": "{\n    size: 'sm',\n    type: 'text',\n    label: 'Street Address',\n    placeholder: 'Street Address',\n    autocomplete: 'address',\n  }",
                    "type": "IOutlineInputeConfig",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "addressTwoConfig",
                    "defaultValue": "{\n    size: 'sm',\n    type: 'text',\n    label: '',\n    placeholder: 'Apt, Suite, Building, etc.',\n    autocomplete: 'address',\n  }",
                    "type": "IOutlineInputeConfig",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "cityConfig",
                    "defaultValue": "{\n    size: 'sm',\n    type: 'text',\n    label: 'City',\n    placeholder: 'City',\n    autocomplete: 'address',\n  }",
                    "type": "IOutlineInputeConfig",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "parentForm",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "stateConfig",
                    "defaultValue": "{\n    size: 'sm',\n    label: 'State',\n    options: states,\n  }",
                    "type": "IOutlineSelectInputConfig",
                    "optional": false,
                    "description": "",
                    "line": 34,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "zipConfig",
                    "defaultValue": "{\n    size: 'sm',\n    type: 'text',\n    label: 'Zip',\n    placeholder: 'Zip',\n    autocomplete: 'address',\n  }",
                    "type": "IOutlineInputeConfig",
                    "optional": false,
                    "description": "",
                    "line": 39,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "addChild",
                    "args": [
                        {
                            "name": "childName",
                            "type": "string"
                        },
                        {
                            "name": "childGroup",
                            "type": "FormGroup"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 65,
                    "description": "<p>Method to create the parent form from the child inputs</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1747,
                                "end": 1756,
                                "flags": 0,
                                "escapedText": "childName"
                            },
                            "type": "string",
                            "tagName": {
                                "pos": 1741,
                                "end": 1746,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": ""
                        },
                        {
                            "name": {
                                "pos": 1769,
                                "end": 1779,
                                "flags": 0,
                                "escapedText": "childGroup"
                            },
                            "type": "FormGroup",
                            "tagName": {
                                "pos": 1763,
                                "end": 1768,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": ""
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 58
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Input } from '@angular/core';\nimport { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder } from '@angular/forms';\nimport { IOutlineInputeConfig } from '@shared/components/inputs/outline-input/outline-input.component';\nimport { IOutlineSelectInputConfig } from '@shared/components/inputs/outline-select-input/outline-select-input.component';\n\n@Component({\n  selector: 'brave-outline-address-form',\n  templateUrl: './outline-address-form.component.html',\n})\nexport class OutlineAddressFormComponent implements OnInit {\n  public parentForm: FormGroup;\n  public addressOneConfig: IOutlineInputeConfig = {\n    size: 'sm',\n    type: 'text',\n    label: 'Street Address',\n    placeholder: 'Street Address',\n    autocomplete: 'address',\n  };\n  public addressTwoConfig: IOutlineInputeConfig = {\n    size: 'sm',\n    type: 'text',\n    label: '',\n    placeholder: 'Apt, Suite, Building, etc.',\n    autocomplete: 'address',\n  };\n  public cityConfig: IOutlineInputeConfig = {\n    size: 'sm',\n    type: 'text',\n    label: 'City',\n    placeholder: 'City',\n    autocomplete: 'address',\n  };\n  public stateConfig: IOutlineSelectInputConfig = {\n    size: 'sm',\n    label: 'State',\n    options: states,\n  };\n  public zipConfig: IOutlineInputeConfig = {\n    size: 'sm',\n    type: 'text',\n    label: 'Zip',\n    placeholder: 'Zip',\n    autocomplete: 'address',\n  };\n\n  /**\n   * @param hideHint flag to show 'required' hint or not\n   */\n  @Input() hideHint: boolean = false;\n\n  constructor(private fb: FormBuilder) {\n    this.parentForm = this.fb.group({\n      name: ['address-form'],\n    }); // simple parent form with name of form\n  }\n\n  ngOnInit(): void {}\n\n  /**\n   * Method to create the parent form from the child inputs\n   * @param childName\n   * @param childGroup\n   */\n  addChild(childName: string, childGroup: FormGroup) {\n    this.parentForm.addControl(childName, childGroup);\n  }\n}\n\n// TODO ensure you have all states\nconst states = ['AL', 'AK', 'AR', '...etc'];\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "fb",
                        "type": "FormBuilder"
                    }
                ],
                "line": 50,
                "jsdoctags": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<form [formGroup]=\"parentForm\">\n  <div class=\"grid grid-cols-3 gap-4\">\n    <div class=\"col-span-3\">\n      <brave-outline-input\n        [config]=\"addressOneConfig\"\n        (onComponentReady)=\"addChild('addressOne', $event)\"\n        [required]=\"true\"\n      >\n      </brave-outline-input>\n      <brave-outline-input\n        [config]=\"addressTwoConfig\"\n        (onComponentReady)=\"addChild('addressTwo', $event)\"\n        [required]=\"false\"\n      >\n      </brave-outline-input>\n    </div>\n    <div class=\"col-span-1\">\n      <brave-outline-input\n        [config]=\"cityConfig\"\n        (onComponentReady)=\"addChild('city', $event)\"\n        [required]=\"true\"\n      >\n      </brave-outline-input>\n      <div class=\"-mt-2\">\n        <div class=\"flex justify-start items-start text-xs text-blueGray-600\">\n          <span class=\"-mt-1\">&#42;</span>&nbsp;Required\n        </div>\n      </div>\n    </div>\n    <div class=\"col-span-1\">\n      <brave-outline-select-input\n        [config]=\"stateConfig\"\n        (onComponentReady)=\"addChild('state', $event)\"\n        [required]=\"true\"\n      >\n      </brave-outline-select-input>\n    </div>\n    <div class=\"col-span-1\">\n      <brave-outline-input\n        [config]=\"zipConfig\"\n        (onComponentReady)=\"addChild('zip', $event)\"\n        [required]=\"true\"\n      >\n      </brave-outline-input>\n    </div>\n  </div>\n</form>\n"
        },
        {
            "name": "OutlineInputComponent",
            "id": "component-OutlineInputComponent-f0893c1220987925c0c530d02e57ee89",
            "file": "src/app/shared/components/inputs/outline-input/outline-input.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-outline-input",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./outline-input.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "asteriskOverride",
                    "line": 53
                },
                {
                    "name": "config",
                    "defaultValue": "{\n    size: 'base',\n    label: 'Input label',\n    type: 'text',\n    placeholder: 'Input text',\n    autocomplete: 'off',\n    value: '',\n  }",
                    "line": 29,
                    "type": "IOutlineInputeConfig"
                },
                {
                    "name": "required",
                    "line": 42
                }
            ],
            "outputsClass": [
                {
                    "name": "onComponentReady",
                    "defaultValue": "new EventEmitter<FormGroup>()",
                    "line": 62,
                    "type": "EventEmitter<FormGroup>"
                },
                {
                    "name": "valueChanged",
                    "defaultValue": "new EventEmitter()",
                    "line": 60,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "_asteriskOverride",
                    "defaultValue": "false",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "_required",
                    "defaultValue": "false",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "componentFormGroup",
                    "defaultValue": "new FormBuilder().group({\n    input: [''],\n  })",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 64,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "hidden",
                    "defaultValue": "false",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 68,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "locked",
                    "defaultValue": "false",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 67,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 72
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\nexport interface IOutlineInputeConfig {\n  size: string;\n  label: string;\n  type: string;\n  placeholder: string;\n  autocomplete: string;\n  value?: string;\n}\n\n@Component({\n  selector: 'brave-outline-input',\n  templateUrl: './outline-input.component.html',\n})\nexport class OutlineInputComponent implements OnInit {\n  private _required: boolean = false;\n  private _asteriskOverride: boolean = false;\n\n  /**\n   * @param Config Object to pass in component params\n   * @param config.size 'sm', 'base', 'lg'\n   * @param config.label Label text (default: 'Input label')\n   * @param config.placeholder Placeholder text (default: 'Input text')\n   * @param config.autocomplete Any HTML Input autocomplete value\n   * @param config.value (optional) Pre-load the input with a value\n   */\n  @Input() config: IOutlineInputeConfig = {\n    size: 'base',\n    label: 'Input label',\n    type: 'text',\n    placeholder: 'Input text',\n    autocomplete: 'off',\n    value: '',\n  };\n\n  /**\n   * @input Flag to make the input field required for form to be valid\n   */\n  @Input()\n  get required() {\n    return this._required;\n  }\n  set required(value: any) {\n    this._required = !!value;\n  }\n\n  /**\n   * @input Flag to override the display of an asterisk but still make it required\n   */\n  @Input()\n  get asteriskOverride() {\n    return this._asteriskOverride;\n  }\n  set asteriskOverride(value: any) {\n    this._asteriskOverride = !!value;\n  }\n\n  @Output() valueChanged: EventEmitter<any> = new EventEmitter();\n  @Output()\n  onComponentReady: EventEmitter<FormGroup> = new EventEmitter<FormGroup>();\n\n  public componentFormGroup: FormGroup = new FormBuilder().group({\n    input: [''],\n  });\n  public locked: boolean = false;\n  public hidden: boolean = false;\n\n  constructor(private fb: FormBuilder) {}\n\n  ngOnInit(): void {\n    const validators = [];\n    if (this.required) {\n      validators.push(Validators.required);\n    }\n    this.componentFormGroup = this.fb.group({\n      input: [this.config.value, validators],\n    });\n    this.componentFormGroup.controls.input.valueChanges.subscribe((value) =>\n      this.valueChanged.emit(value)\n    );\n    this.onComponentReady.emit(this.componentFormGroup);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "fb",
                        "type": "FormBuilder"
                    }
                ],
                "line": 68,
                "jsdoctags": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "required": {
                    "name": "required",
                    "setSignature": {
                        "name": "required",
                        "type": "void",
                        "args": [
                            {
                                "name": "value",
                                "type": "any"
                            }
                        ],
                        "returnType": "void",
                        "line": 45,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "any",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "asteriskOverride": {
                    "name": "asteriskOverride",
                    "setSignature": {
                        "name": "asteriskOverride",
                        "type": "void",
                        "args": [
                            {
                                "name": "value",
                                "type": "any"
                            }
                        ],
                        "returnType": "void",
                        "line": 56,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "any",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                }
            },
            "templateData": "<form [formGroup]=\"componentFormGroup\">\n  <div class=\"mb-5 pt-0\">\n    <label\n      for=\"input_field\"\n      class=\"block mb-2.5 text-sm text-blueGray-600 whitespace-nowrap\"\n      >{{ config?.label\n      }}<span *ngIf=\"required && !asteriskOverride\" class=\"-mt-1\"\n        >&#42;</span\n      ></label\n    >\n    <input\n      name=\"input_field\"\n      [type]=\"config?.type || 'text'\"\n      formControlName=\"input\"\n      [placeholder]=\"config?.placeholder || ''\"\n      [autocomplete]=\"config?.autocomplete || 'off'\"\n      [ngClass]=\"config | outlineInput\"\n      class=\"\n        placeholder-blueGray-300\n        text-blueGray-600\n        relative\n        bg-white\n        rounded\n        border border-blueGray-300\n        outline-none\n        focus:ring-0 focus:ring-indigo-800\n        w-full\n      \"\n    />\n  </div>\n</form>\n"
        },
        {
            "name": "OutlineOnecolumnFormComponent",
            "id": "component-OutlineOnecolumnFormComponent-95705504e0cb29060be6b9a507923a51",
            "file": "src/app/shared/components/forms/outline-onecolumn-form/outline-onecolumn-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-outline-onecolumn-form",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./outline-onecolumn-form.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "childFieldConfig",
                    "defaultValue": "{\n    size: 'sm',\n    label: 'Input Label',\n    type: 'text',\n    placeholder: 'Input text',\n    autocomplete: 'off',\n  }",
                    "type": "IOutlineInputeConfig",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "parentForm",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methodsClass": [
                {
                    "name": "addChild",
                    "args": [
                        {
                            "name": "childName",
                            "type": "string"
                        },
                        {
                            "name": "childGroup",
                            "type": "FormGroup"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "jsdoctags": [
                        {
                            "name": "childName",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "childGroup",
                            "type": "FormGroup",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder } from '@angular/forms';\nimport { IOutlineInputeConfig } from '@shared/components/inputs/outline-input/outline-input.component';\n\n@Component({\n  selector: 'brave-outline-onecolumn-form',\n  templateUrl: './outline-onecolumn-form.component.html',\n})\nexport class OutlineOnecolumnFormComponent implements OnInit {\n  parentForm: FormGroup;\n  childFieldConfig: IOutlineInputeConfig = {\n    size: 'sm',\n    label: 'Input Label',\n    type: 'text',\n    placeholder: 'Input text',\n    autocomplete: 'off',\n  };\n\n  constructor(private fb: FormBuilder) {\n    this.parentForm = fb.group({\n      name: ['outline-onecolumn-form'],\n    }); // simple parent form with name of form\n  }\n\n  ngOnInit(): void {}\n\n  addChild(childName: string, childGroup: FormGroup) {\n    this.parentForm.addControl(childName, childGroup);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "fb",
                        "type": "FormBuilder"
                    }
                ],
                "line": 17,
                "jsdoctags": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<form [formGroup]=\"parentForm\">\n  <brave-outline-input\n    [config]=\"childFieldConfig\"\n    (onComponentReady)=\"addChild('inputGroup', $event)\"\n    required=\"true\"\n  >\n  </brave-outline-input>\n  <brave-outline-input\n    [config]=\"childFieldConfig\"\n    (onComponentReady)=\"addChild('inputGroup', $event)\"\n    required=\"true\"\n  >\n  </brave-outline-input>\n  <brave-outline-input\n    [config]=\"childFieldConfig\"\n    (onComponentReady)=\"addChild('inputGroup', $event)\"\n    required=\"true\"\n  >\n  </brave-outline-input>\n  <div>\n    <div class=\"flex justify-end items-end\">\n      <brave-links-onlytext-button>Cancel</brave-links-onlytext-button>\n      <brave-filled-onlytext-button>Continue</brave-filled-onlytext-button>\n    </div>\n  </div>\n</form>\n"
        },
        {
            "name": "OutlineOnlytextButtonComponent",
            "id": "component-OutlineOnlytextButtonComponent-ce3e923fcba436e191c4ced8b5615edb",
            "file": "src/app/shared/components/buttons/outline-onlytext-button/outline-onlytext-button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-outline-onlytext-button",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./outline-onlytext-button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "config",
                    "defaultValue": "{\n    buttonSize: 'base',\n    borderColor: 'border-indigo-800',\n    activeColor: 'bg-indigo-900',\n    hoverColor: 'bg-indigo-800',\n    color: 'text-indigo-800',\n  }",
                    "line": 24,
                    "type": "IOutlineOnlyTextButtonConfig"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\nexport interface IOutlineOnlyTextButtonConfig {\n  buttonSize: string;\n  borderColor: string;\n  activeColor: string;\n  hoverColor: string;\n  color: string;\n}\n\n@Component({\n  selector: 'brave-outline-onlytext-button',\n  templateUrl: './outline-onlytext-button.component.html',\n})\nexport class OutlineOnlytextButtonComponent {\n  /**\n   * @param config Input object for button customization\n   * @param config.buttonSize 'sm', 'base', 'lg'\n   * @param config.borderColor Any global color \"e.g. border-indigo-800\"\n   * @param config.activeColor Any global color \"e.g. bg-indigo-900\"\n   * @param config.hoverColor Any global color \"e.g. bg-indigo-800\"\n   * @param config.color Any global color \"e.g. text-indigo-900\"\n   */\n  @Input() config: IOutlineOnlyTextButtonConfig = {\n    buttonSize: 'base',\n    borderColor: 'border-indigo-800',\n    activeColor: 'bg-indigo-900',\n    hoverColor: 'bg-indigo-800',\n    color: 'text-indigo-800',\n  };\n\n  constructor() {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 30
            },
            "templateData": "<button\n  [ngClass]=\"config | outlineOnlytextButton\"\n  class=\"\n    bg-transparent\n    border border-solid\n    font-bold\n    rounded\n    outline-none\n    focus:outline-none\n    mr-1\n    mb-1\n    ease-linear\n    transition-all\n    duration-150\n  \"\n  type=\"button\"\n>\n  <ng-content></ng-content>\n</button>\n"
        },
        {
            "name": "OutlineOnlytextSelectComponent",
            "id": "component-OutlineOnlytextSelectComponent-6b5257d3bff0f580ecb6a326a9cb481f",
            "file": "src/app/shared/components/dropdowns/selects/outline-onlytext-select/outline-onlytext-select.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-outline-onlytext-select",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./outline-onlytext-select.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "items",
                    "defaultValue": "[]",
                    "line": 12,
                    "type": "IOutlineOnlyTextItem[]"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "isOpen",
                    "defaultValue": "false",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "selected",
                    "type": "IOutlineOnlyTextItem | undefined",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\nexport interface IOutlineOnlyTextItem {\n  value: string;\n}\n\n@Component({\n  selector: 'brave-outline-onlytext-select',\n  templateUrl: './outline-onlytext-select.component.html',\n})\nexport class OutlineOnlytextSelectComponent implements OnInit {\n  @Input() items: IOutlineOnlyTextItem[] = [];\n\n  public selected: IOutlineOnlyTextItem | undefined;\n  public isOpen: boolean = false;\n\n  constructor() {}\n\n  ngOnInit(): void {\n    // this.selected = this.items[0]; // default to first one\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 15
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<button\n  type=\"button\"\n  class=\"relative w-full bg-white border border-gray-300 rounded-md shadow-sm pl-3 pr-10 py-2 text-left cursor-default focus:outline-none focus:ring-1 focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n  aria-haspopup=\"listbox\"\n  aria-expanded=\"true\"\n  aria-labelledby=\"listbox-label\"\n  (click)=\"isOpen = !isOpen\"\n>\n  <span class=\"flex items-center\">\n    <span class=\"ml-3 block truncate\">\n      {{ selected?.value || \"Select item\" }}\n    </span>\n  </span>\n  <span\n    class=\"ml-3 absolute inset-y-0 right-0 flex items-center pr-2 pointer-events-none\"\n  >\n    <svg\n      class=\"h-5 w-5 text-gray-400\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 20 20\"\n      fill=\"currentColor\"\n      aria-hidden=\"true\"\n    >\n      <path\n        fill-rule=\"evenodd\"\n        d=\"M10 3a1 1 0 01.707.293l3 3a1 1 0 01-1.414 1.414L10 5.414 7.707 7.707a1 1 0 01-1.414-1.414l3-3A1 1 0 0110 3zm-3.707 9.293a1 1 0 011.414 0L10 14.586l2.293-2.293a1 1 0 011.414 1.414l-3 3a1 1 0 01-1.414 0l-3-3a1 1 0 010-1.414z\"\n        clip-rule=\"evenodd\"\n      />\n    </svg>\n  </span>\n</button>\n<ul\n  *ngIf=\"isOpen\"\n  class=\"absolute z-10 mt-1 w-full bg-white shadow-lg max-h-56 rounded-md py-1 text-base ring-1 ring-black ring-opacity-5 overflow-auto focus:outline-none sm:text-sm\"\n  tabindex=\"-1\"\n  role=\"listbox\"\n  aria-labelledby=\"listbox-label\"\n  aria-activedescendant=\"listbox-option-3\"\n>\n  <li\n    *ngFor=\"let item of items; index as i\"\n    (click)=\"isOpen = !isOpen; selected = items[i]\"\n    class=\"text-gray-900 cursor-default select-none relative py-2 pl-3 pr-9\"\n    id=\"listbox-option-0\"\n    role=\"option\"\n  >\n    <div class=\"flex items-center\">\n      <span class=\"font-normal ml-3 block truncate\"> {{ item.value }}</span>\n    </div>\n    <span\n      class=\"text-indigo-600 absolute inset-y-0 right-0 flex items-center pr-4\"\n    ></span>\n  </li>\n</ul>\n"
        },
        {
            "name": "OutlinePhoneFormComponent",
            "id": "component-OutlinePhoneFormComponent-be3b4a42ad45fab77d3ba0baf6f5a567",
            "file": "src/app/shared/components/forms/outline-phone-form/outline-phone-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-outline-phone-form",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./outline-phone-form.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "hideHint",
                    "defaultValue": "false",
                    "line": 22,
                    "type": "boolean"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "parentForm",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "phoneConfig",
                    "defaultValue": "{\n    size: 'sm',\n    type: 'text',\n    label: 'Phone Number',\n    placeholder: 'Phone Number',\n    autocomplete: 'phone',\n  }",
                    "type": "IOutlineInputeConfig",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "addChild",
                    "args": [
                        {
                            "name": "childName",
                            "type": "string"
                        },
                        {
                            "name": "childGroup",
                            "type": "FormGroup"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37,
                    "description": "<p>Method to create the parent form from the child inputs</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 964,
                                "end": 973,
                                "flags": 0,
                                "escapedText": "childName"
                            },
                            "type": "string",
                            "tagName": {
                                "pos": 958,
                                "end": 963,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": ""
                        },
                        {
                            "name": {
                                "pos": 986,
                                "end": 996,
                                "flags": 0,
                                "escapedText": "childGroup"
                            },
                            "type": "FormGroup",
                            "tagName": {
                                "pos": 980,
                                "end": 985,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": ""
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder } from '@angular/forms';\nimport { IOutlineInputeConfig } from '@shared/components/inputs/outline-input/outline-input.component';\n\n@Component({\n  selector: 'brave-outline-phone-form',\n  templateUrl: './outline-phone-form.component.html',\n})\nexport class OutlinePhoneFormComponent implements OnInit {\n  public parentForm: FormGroup;\n  public phoneConfig: IOutlineInputeConfig = {\n    size: 'sm',\n    type: 'text',\n    label: 'Phone Number',\n    placeholder: 'Phone Number',\n    autocomplete: 'phone',\n  };\n\n  /**\n   * @param hideHint flag to show 'required' hint or not\n   */\n  @Input() hideHint: boolean = false;\n\n  constructor(private fb: FormBuilder) {\n    this.parentForm = this.fb.group({\n      name: ['phone-form'],\n    }); // simple parent form with name of form\n  }\n\n  ngOnInit(): void {}\n\n  /**\n   * Method to create the parent form from the child inputs\n   * @param childName\n   * @param childGroup\n   */\n  addChild(childName: string, childGroup: FormGroup) {\n    this.parentForm.addControl(childName, childGroup);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "fb",
                        "type": "FormBuilder"
                    }
                ],
                "line": 22,
                "jsdoctags": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<form [formGroup]=\"parentForm\">\n  <div class=\"grid grid-cols-3 gap-4\">\n    <div class=\"col-span-3\">\n      <brave-outline-input\n        [config]=\"phoneConfig\"\n        (onComponentReady)=\"addChild('phone', $event)\"\n        [required]=\"true\"\n      >\n      </brave-outline-input>\n      <div *ngIf=\"!hideHint\" class=\"-mt-2\">\n        <div class=\"flex justify-start items-start text-xs text-blueGray-600\">\n          <span class=\"-mt-1\">&#42;</span>&nbsp;Required\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n"
        },
        {
            "name": "OutlinePrevnextPaginationComponent",
            "id": "component-OutlinePrevnextPaginationComponent-5fff78be9900c89fdbb1c4c1df85504f",
            "file": "src/app/shared/components/paginations/outline-prevnext-pagination/outline-prevnext-pagination.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-outline-prevnext-pagination",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./outline-prevnext-pagination.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 10
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'brave-outline-prevnext-pagination',\n  templateUrl: './outline-prevnext-pagination.component.html',\n})\nexport class OutlinePrevnextPaginationComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 7
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div\n  class=\"bg-white px-4 py-3 flex items-center justify-between border-t border-gray-200 sm:px-6\"\n>\n  <div class=\"flex-1 flex justify-between sm:hidden\">\n    <a\n      href=\"#\"\n      class=\"relative inline-flex items-center px-4 py-2 border border-indigo-800 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50\"\n    >\n      Previous\n    </a>\n    <a\n      href=\"#\"\n      class=\"ml-3 relative inline-flex items-center px-4 py-2 border border-indigo-800 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50\"\n    >\n      Next\n    </a>\n  </div>\n  <div class=\"hidden sm:flex-1 sm:flex sm:items-center sm:justify-between\">\n    <div>\n      <!-- <p class=\"text-sm text-gray-700\">\n        Showing\n        <span class=\"font-medium\">1</span>\n        to\n        <span class=\"font-medium\">10</span>\n        of\n        <span class=\"font-medium\">97</span>\n        results\n      </p> -->\n    </div>\n    <div>\n      <nav class=\"relative z-0 inline-flex\" aria-label=\"Pagination\">\n        <a\n          href=\"#\"\n          class=\"relative inline-flex items-center m-1 px-2 py-2 rounded-l-md border-none bg-white text-sm font-medium hover:bg-gray-50\"\n        >\n          <span class=\"sr-only\">Previous</span>\n          <!-- Heroicon name: solid/chevron-left -->\n          <span class=\"material-icons text-indigo-800\">navigate_before</span>\n          <!-- <svg\n            class=\"h-5 w-5\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 20 20\"\n            fill=\"currentColor\"\n            aria-hidden=\"true\"\n          >\n            <path\n              fill-rule=\"evenodd\"\n              d=\"M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z\"\n              clip-rule=\"evenodd\"\n            />\n          </svg> -->\n        </a>\n        <!-- Current: \"z-10 bg-indigo-50 border-indigo-500 text-indigo-600\", Default: \"bg-white border-gray-300 text-gray-500 hover:bg-gray-50\" -->\n        <a\n          href=\"#\"\n          aria-current=\"page\"\n          class=\"z-10 bg-indigo-800 border-indigo-800 rounded-md text-white relative inline-flex items-center m-1 px-2 py-2 border text-sm font-medium\"\n        >\n          <div class=\"w-4 h-4 flex justify-center items-center\">1</div>\n        </a>\n        <a\n          href=\"#\"\n          class=\"bg-white border-indigo-800 font-sans rounded-md font-semibold text-sm text-indigo-800 hover:bg-gray-50 relative inline-flex items-center m-1 px-2 py-2 border\"\n        >\n          <div class=\"w-4 h-4 flex justify-center items-center\">2</div>\n        </a>\n        <a\n          href=\"#\"\n          class=\"bg-white border-indigo-800 font-sans rounded-md font-semibold text-sm text-indigo-800 hover:bg-gray-50 hidden md:inline-flex relative items-center m-1 px-2 py-2 border\"\n        >\n          <div class=\"w-4 h-4 flex justify-center items-center\">3</div>\n        </a>\n        <span\n          class=\"relative inline-flex items-center m-1 px-2 py-2 border border-indigo-800 rounded-md bg-white text-sm font-medium text-gray-700\"\n        >\n          <div class=\"w-4 h-4 flex justify-center items-center\">...</div>\n        </span>\n        <a\n          href=\"#\"\n          class=\"bg-white border-indigo-800 font-sans rounded-md font-semibold text-sm text-indigo-800 hover:bg-gray-50 hidden md:inline-flex relative items-center m-1 px-2 py-2 border\"\n        >\n          <div class=\"w-4 h-4 flex justify-center items-center\">8</div>\n        </a>\n        <a\n          href=\"#\"\n          class=\"bg-white border-indigo-800 font-sans rounded-md font-semibold text-sm text-indigo-800 hover:bg-gray-50 relative inline-flex items-center m-1 px-2 py-2 border\"\n        >\n          <div class=\"w-4 h-4 flex justify-center items-center\">9</div>\n        </a>\n        <a\n          href=\"#\"\n          class=\"bg-white border-indigo-800 font-sans rounded-md font-semibold text-sm text-indigo-800 hover:bg-gray-50 relative inline-flex items-center m-1 px-2 py-2 border\"\n        >\n          <div class=\"w-4 h-4 flex justify-center items-center\">10</div>\n        </a>\n        <a\n          href=\"#\"\n          class=\"relative inline-flex items-center m-1 px-2 py-2 rounded-r-md border-none bg-white text-sm font-medium hover:bg-gray-50\"\n        >\n          <span class=\"sr-only\">Next</span>\n          <!-- Heroicon name: solid/chevron-right -->\n          <span class=\"material-icons text-indigo-800\">navigate_next</span>\n          <!-- <svg\n            class=\"h-5 w-5\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 20 20\"\n            fill=\"currentColor\"\n            aria-hidden=\"true\"\n          >\n            <path\n              fill-rule=\"evenodd\"\n              d=\"M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z\"\n              clip-rule=\"evenodd\"\n            />\n          </svg> -->\n        </a>\n      </nav>\n    </div>\n  </div>\n</div>\n"
        },
        {
            "name": "OutlineSelectInputComponent",
            "id": "component-OutlineSelectInputComponent-dedf9e0dc7679fc9349f61ca7c50c161",
            "file": "src/app/shared/components/inputs/outline-select-input/outline-select-input.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-outline-select-input",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./outline-select-input.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "asteriskOverride",
                    "line": 47
                },
                {
                    "name": "config",
                    "defaultValue": "{\n    size: 'base',\n    label: 'Input label',\n    options: ['one', 'two', 'three'],\n  }",
                    "line": 26,
                    "type": "IOutlineSelectInputConfig"
                },
                {
                    "name": "required",
                    "line": 36
                }
            ],
            "outputsClass": [
                {
                    "name": "onComponentReady",
                    "defaultValue": "new EventEmitter<FormGroup>()",
                    "line": 56,
                    "type": "EventEmitter<FormGroup>"
                },
                {
                    "name": "valueChanged",
                    "defaultValue": "new EventEmitter()",
                    "line": 54,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "_asteriskOverride",
                    "defaultValue": "false",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "_required",
                    "defaultValue": "false",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "componentFormGroup",
                    "defaultValue": "new FormBuilder().group({\n    input: [''],\n  })",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 58,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "hidden",
                    "defaultValue": "false",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 62,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "isOpen",
                    "defaultValue": "false",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "locked",
                    "defaultValue": "false",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 61,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "selected",
                    "type": "string | undefined",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 66
                },
                {
                    "name": "toggleOpen",
                    "args": [
                        {
                            "name": "e",
                            "type": "MouseEvent"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 84,
                    "description": "<p>Toggles open and close select options</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 2271,
                                "end": 2272,
                                "flags": 0,
                                "escapedText": "e"
                            },
                            "type": "MouseEvent",
                            "tagName": {
                                "pos": 2265,
                                "end": 2270,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": "<p>MouseEvent to stop propagation.</p>\n"
                        }
                    ]
                },
                {
                    "name": "updateForm",
                    "args": [
                        {
                            "name": "idx",
                            "type": "number"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 93,
                    "description": "<p>Updates the form with the selected option value</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 2480,
                                "end": 2483,
                                "flags": 0,
                                "escapedText": "idx"
                            },
                            "type": "number",
                            "tagName": {
                                "pos": 2474,
                                "end": 2479,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": "<p>index of the select option clicked on</p>\n"
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\nexport interface IOutlineSelectInputConfig {\n  size: string;\n  label: string;\n  options: string[];\n}\n\n@Component({\n  selector: 'brave-outline-select-input',\n  templateUrl: './outline-select-input.component.html',\n})\nexport class OutlineSelectInputComponent implements OnInit {\n  private _required: boolean = false;\n  private _asteriskOverride: boolean = false;\n  public selected: string | undefined;\n  public isOpen: boolean = false;\n\n  /**\n   * @param Config Object to pass in component params\n   * @param config.size 'sm', 'base', 'lg'\n   * @param config.label Label text (default: 'Input label')\n   * @param config.options select options to choose from\n   */\n  @Input() config: IOutlineSelectInputConfig = {\n    size: 'base',\n    label: 'Input label',\n    options: ['one', 'two', 'three'],\n  };\n\n  /**\n   * @input Flag to make the input field required for form to be valid\n   */\n  @Input()\n  get required() {\n    return this._required;\n  }\n  set required(value: any) {\n    this._required = !!value;\n  }\n\n  /**\n   * @input Flag to override the display of an asterisk but still make it required\n   */\n  @Input()\n  get asteriskOverride() {\n    return this._asteriskOverride;\n  }\n  set asteriskOverride(value: any) {\n    this._asteriskOverride = !!value;\n  }\n\n  @Output() valueChanged: EventEmitter<any> = new EventEmitter();\n  @Output()\n  onComponentReady: EventEmitter<FormGroup> = new EventEmitter<FormGroup>();\n\n  public componentFormGroup: FormGroup = new FormBuilder().group({\n    input: [''],\n  });\n  public locked: boolean = false;\n  public hidden: boolean = false;\n\n  constructor(private fb: FormBuilder) {}\n\n  ngOnInit(): void {\n    const validators = [];\n    if (this.required) {\n      validators.push(Validators.required);\n    }\n    this.componentFormGroup = this.fb.group({\n      input: [this.config.label, validators], // default to first item in array\n    });\n    this.componentFormGroup.controls.input.valueChanges.subscribe((value) => {\n      this.valueChanged.emit(value);\n    });\n    this.onComponentReady.emit(this.componentFormGroup);\n  }\n\n  /**\n   * Toggles open and close select options\n   * @param e MouseEvent to stop propagation.\n   */\n  toggleOpen(e: MouseEvent): void {\n    e.stopPropagation();\n    this.isOpen = !this.isOpen;\n  }\n\n  /**\n   * Updates the form with the selected option value\n   * @param idx index of the select option clicked on\n   */\n  updateForm(idx: number): void {\n    this.componentFormGroup.setValue({ input: this.config.options[idx] });\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "fb",
                        "type": "FormBuilder"
                    }
                ],
                "line": 62,
                "jsdoctags": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "required": {
                    "name": "required",
                    "setSignature": {
                        "name": "required",
                        "type": "void",
                        "args": [
                            {
                                "name": "value",
                                "type": "any"
                            }
                        ],
                        "returnType": "void",
                        "line": 39,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "any",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "asteriskOverride": {
                    "name": "asteriskOverride",
                    "setSignature": {
                        "name": "asteriskOverride",
                        "type": "void",
                        "args": [
                            {
                                "name": "value",
                                "type": "any"
                            }
                        ],
                        "returnType": "void",
                        "line": 50,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "any",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                }
            },
            "templateData": "<form [formGroup]=\"componentFormGroup\">\n  <div class=\"mb-5 pt-0\">\n    <label\n      for=\"select_field\"\n      class=\"block mb-2.5 text-sm text-blueGray-600 whitespace-nowrap\"\n      >{{ config?.label\n      }}<span *ngIf=\"required && !asteriskOverride\" class=\"-mt-1\"\n        >&#42;</span\n      ></label\n    >\n    <div\n      [ngClass]=\"config | outlineSelectInput\"\n      class=\"\n        relative\n        bg-white\n        rounded\n        border border-blueGray-300\n        outline-none\n        w-full\n      \"\n      (click)=\"toggleOpen($event)\"\n    >\n      <input\n        #selectInput\n        name=\"select_field\"\n        formControlName=\"input\"\n        style=\"width: 0px; height: 0px\"\n        class=\"absolute\"\n      />\n      <div\n        class=\"flex justify-between items-center w-full hover:cursor-pointer\"\n      >\n        <span\n          [ngClass]=\"{\n            'text-blueGray-300': selectInput.value === config.label,\n            'text-blueGray-600': selectInput.value !== config.label\n          }\"\n          >{{ selectInput.value || \"Select item\" }}</span\n        >\n        <span class=\"material-icons text-blueGray-600\">expand_more</span>\n      </div>\n      <ul\n        *ngIf=\"isOpen\"\n        class=\"\n          absolute\n          z-10\n          mt-2\n          -ml-1\n          w-full\n          bg-white\n          text-blueGray-600\n          shadow-lg\n          max-h-56\n          rounded-md\n          py-1\n          text-base\n          ring-1 ring-black ring-opacity-5\n          overflow-auto\n          focus:outline-none\n          sm:text-sm\n        \"\n      >\n        <li\n          *ngFor=\"let opt of config.options; index as i\"\n          (click)=\"toggleOpen($event); updateForm(i)\"\n          class=\"bg-white hover:bg-gray-50 hover:cursor-pointer my-2\"\n        >\n          <div class=\"flex items-center\">\n            <span class=\"font-normal ml-3 block truncate\"> {{ opt }}</span>\n          </div>\n        </li>\n      </ul>\n    </div>\n  </div>\n</form>\n"
        },
        {
            "name": "OutlineTooltipComponent",
            "id": "component-OutlineTooltipComponent-f30a9fe01a6d6c061226933d87cae977",
            "file": "src/app/shared/components/tooltips/outline-tooltip/outline-tooltip.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-outline-tooltip",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./outline-tooltip.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "body",
                    "defaultValue": "'Something very long and profound to direct the user to the next logical step in a sequence of illogical steps such is life.'",
                    "line": 9,
                    "type": "string"
                },
                {
                    "name": "position",
                    "defaultValue": "'top'",
                    "line": 11,
                    "type": "string"
                },
                {
                    "name": "title",
                    "defaultValue": "'Message title goes here'",
                    "line": 8,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'brave-outline-tooltip',\n  templateUrl: './outline-tooltip.component.html',\n})\nexport class OutlineTooltipComponent implements OnInit {\n  @Input() title: string = 'Message title goes here';\n  @Input() body: string =\n    'Something very long and profound to direct the user to the next logical step in a sequence of illogical steps such is life.';\n  @Input() position: string = 'top';\n\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 11
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"flex flex-wrap\">\n  <div class=\"w-full text-center\" style=\"margin-top: 40vh\">\n    <button\n      braveOutlineTooltip\n      [title]=\"title\"\n      [body]=\"body\"\n      [position]=\"position\"\n      class=\"bg-red-500 text-white active:bg-red-600 font-bold uppercase text-sm px-6 py-3 rounded shadow hover:shadow-lg outline-none focus:outline-none mr-1 mb-1 ease-linear transition-all duration-150\"\n      type=\"button\"\n    >\n      top red\n    </button>\n  </div>\n</div>\n"
        },
        {
            "name": "OutlineVerificationcodeFormComponent",
            "id": "component-OutlineVerificationcodeFormComponent-3f2694fb19b97327e6bc73f58e945b9f",
            "file": "src/app/shared/components/forms/outline-verificationcode-form/outline-verificationcode-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-outline-verificationcode-form",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./outline-verificationcode-form.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "hideHint",
                    "defaultValue": "false",
                    "line": 22,
                    "type": "boolean"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "codeConfig",
                    "defaultValue": "{\n    size: 'sm',\n    type: 'text',\n    label: 'Code',\n    placeholder: '5-digit Code',\n    autocomplete: 'off',\n  }",
                    "type": "IOutlineInputeConfig",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "parentForm",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "addChild",
                    "args": [
                        {
                            "name": "childName",
                            "type": "string"
                        },
                        {
                            "name": "childGroup",
                            "type": "FormGroup"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37,
                    "description": "<p>Method to create the parent form from the child inputs</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 985,
                                "end": 994,
                                "flags": 0,
                                "escapedText": "childName"
                            },
                            "type": "string",
                            "tagName": {
                                "pos": 979,
                                "end": 984,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": ""
                        },
                        {
                            "name": {
                                "pos": 1007,
                                "end": 1017,
                                "flags": 0,
                                "escapedText": "childGroup"
                            },
                            "type": "FormGroup",
                            "tagName": {
                                "pos": 1001,
                                "end": 1006,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": ""
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder } from '@angular/forms';\nimport { IOutlineInputeConfig } from '@shared/components/inputs/outline-input/outline-input.component';\n\n@Component({\n  selector: 'brave-outline-verificationcode-form',\n  templateUrl: './outline-verificationcode-form.component.html',\n})\nexport class OutlineVerificationcodeFormComponent implements OnInit {\n  public parentForm: FormGroup;\n  public codeConfig: IOutlineInputeConfig = {\n    size: 'sm',\n    type: 'text',\n    label: 'Code',\n    placeholder: '5-digit Code',\n    autocomplete: 'off',\n  };\n\n  /**\n   * @param hideHint flag to show 'required' hint or not\n   */\n  @Input() hideHint: boolean = false;\n\n  constructor(private fb: FormBuilder) {\n    this.parentForm = this.fb.group({\n      name: ['code-form'],\n    }); // simple parent form with name of form\n  }\n\n  ngOnInit(): void {}\n\n  /**\n   * Method to create the parent form from the child inputs\n   * @param childName\n   * @param childGroup\n   */\n  addChild(childName: string, childGroup: FormGroup) {\n    this.parentForm.addControl(childName, childGroup);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "fb",
                        "type": "FormBuilder"
                    }
                ],
                "line": 22,
                "jsdoctags": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<form [formGroup]=\"parentForm\">\n  <div class=\"grid grid-cols-3 gap-4\">\n    <div class=\"col-span-3\">\n      <brave-outline-input\n        [config]=\"codeConfig\"\n        (onComponentReady)=\"addChild('code', $event)\"\n        [required]=\"true\"\n      >\n      </brave-outline-input>\n      <div *ngIf=\"!hideHint\" class=\"-mt-2\">\n        <div class=\"flex justify-start items-start text-xs text-blueGray-600\">\n          <span class=\"-mt-1\">&#42;</span>&nbsp;Required\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n"
        },
        {
            "name": "PagesDropdownComponent",
            "id": "component-PagesDropdownComponent-f098dee3452088ee9f5921f39191f1b9",
            "file": "src/app/shared/components/dropdowns/popdowns/pages-dropdown/pages-dropdown.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-pages-dropdown",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./pages-dropdown.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "btnDropdownRef",
                    "type": "ElementRef | undefined",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'btnDropdownRef', {static: false}"
                        }
                    ]
                },
                {
                    "name": "dropdownPopoverShow",
                    "defaultValue": "false",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "popoverDropdownRef",
                    "type": "ElementRef | undefined",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'popoverDropdownRef', {static: false}"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "createPoppper",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15
                },
                {
                    "name": "toggleDropdown",
                    "args": [
                        {
                            "name": "event",
                            "type": "literal type"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "literal type",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { createPopper } from '@popperjs/core';\n\n@Component({\n  selector: 'brave-pages-dropdown',\n  templateUrl: './pages-dropdown.component.html',\n})\nexport class PagesDropdownComponent implements OnInit {\n  dropdownPopoverShow = false;\n  @ViewChild('btnDropdownRef', { static: false }) btnDropdownRef:\n    | ElementRef\n    | undefined;\n  @ViewChild('popoverDropdownRef', { static: false })\n  popoverDropdownRef: ElementRef | undefined;\n  ngOnInit() {}\n  toggleDropdown(event: { preventDefault: () => void }) {\n    event.preventDefault();\n    if (this.dropdownPopoverShow) {\n      this.dropdownPopoverShow = false;\n    } else {\n      this.dropdownPopoverShow = true;\n      this.createPoppper();\n    }\n  }\n  createPoppper() {\n    createPopper(\n      this.btnDropdownRef?.nativeElement,\n      this.popoverDropdownRef?.nativeElement,\n      {\n        placement: 'bottom-start',\n      }\n    );\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<a\n  class=\"lg:text-white lg:hover:text-blueGray-200 text-blueGray-700 px-3 py-4 lg:py-2 flex items-center text-xs uppercase font-bold\"\n  href=\"#pablo\"\n  (click)=\"toggleDropdown($event)\"\n  #btnDropdownRef\n>\n  Demo Pages\n</a>\n<div\n  class=\"bg-white text-base z-50 float-left py-2 list-none text-left rounded shadow-lg min-w-48\"\n  [ngClass]=\"dropdownPopoverShow ? 'block' : 'hidden'\"\n  #popoverDropdownRef\n>\n  <span\n    class=\"text-sm pt-2 pb-0 px-4 font-bold block w-full whitespace-nowrap bg-transparent text-blueGray-400\"\n  >\n    Admin Layout\n  </span>\n  <a\n    [routerLink]=\"['/admin/dashboard']\"\n    class=\"text-sm py-2 px-4 font-normal block w-full whitespace-nowrap bg-transparent text-blueGray-700\"\n  >\n    Dashboard\n  </a>\n  <a\n    [routerLink]=\"['/admin/settings']\"\n    class=\"text-sm py-2 px-4 font-normal block w-full whitespace-nowrap bg-transparent text-blueGray-700\"\n  >\n    Settings\n  </a>\n  <a\n    [routerLink]=\"['/admin/tables']\"\n    class=\"text-sm py-2 px-4 font-normal block w-full whitespace-nowrap bg-transparent text-blueGray-700\"\n  >\n    Tables\n  </a>\n  <a\n    [routerLink]=\"['/admin/maps']\"\n    class=\"text-sm py-2 px-4 font-normal block w-full whitespace-nowrap bg-transparent text-blueGray-700\"\n  >\n    Maps\n  </a>\n  <div class=\"h-0 mx-4 my-2 border border-solid border-blueGray-100\"></div>\n  <span\n    class=\"text-sm pt-2 pb-0 px-4 font-bold block w-full whitespace-nowrap bg-transparent text-blueGray-400\"\n  >\n    Auth Layout\n  </span>\n  <a\n    [routerLink]=\"['/auth/login']\"\n    class=\"text-sm py-2 px-4 font-normal block w-full whitespace-nowrap bg-transparent text-blueGray-700\"\n  >\n    Login\n  </a>\n  <a\n    [routerLink]=\"['/auth/register']\"\n    class=\"text-sm py-2 px-4 font-normal block w-full whitespace-nowrap bg-transparent text-blueGray-700\"\n  >\n    Register\n  </a>\n  <div class=\"h-0 mx-4 my-2 border border-solid border-blueGray-100\"></div>\n  <span\n    class=\"text-sm pt-2 pb-0 px-4 font-bold block w-full whitespace-nowrap bg-transparent text-blueGray-400\"\n  >\n    No Layout\n  </span>\n  <a\n    [routerLink]=\"['/landing']\"\n    class=\"text-sm py-2 px-4 font-normal block w-full whitespace-nowrap bg-transparent text-blueGray-700\"\n  >\n    Landing\n  </a>\n  <a\n    [routerLink]=\"['/profile']\"\n    class=\"text-sm py-2 px-4 font-normal block w-full whitespace-nowrap bg-transparent text-blueGray-700\"\n  >\n    Profile\n  </a>\n</div>\n"
        },
        {
            "name": "SidebarComponent",
            "id": "component-SidebarComponent-8a7928395104b7aaab3d229b85f72c5d",
            "file": "src/app/shared/components/sidebar/sidebar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-sidebar",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./sidebar.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "collapseShow",
                    "defaultValue": "'hidden'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 11
                },
                {
                    "name": "toggleCollapseShow",
                    "args": [
                        {
                            "name": "classes",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "jsdoctags": [
                        {
                            "name": "classes",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'brave-sidebar',\n  templateUrl: './sidebar.component.html',\n})\nexport class SidebarComponent implements OnInit {\n  collapseShow = 'hidden';\n  constructor() {}\n\n  ngOnInit() {}\n  toggleCollapseShow(classes: string) {\n    this.collapseShow = classes;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<nav\n  class=\"md:left-0 md:block md:fixed md:top-0 md:bottom-0 md:overflow-y-auto md:flex-row md:flex-nowrap md:overflow-hidden shadow-xl bg-white flex flex-wrap items-center justify-between relative md:w-64 z-10 py-4 px-6\"\n>\n  <div\n    class=\"md:flex-col md:items-stretch md:min-h-full md:flex-nowrap px-0 flex flex-wrap items-center justify-between w-full mx-auto\"\n  >\n    <!-- Toggler -->\n    <button\n      class=\"cursor-pointer text-black opacity-50 md:hidden px-3 py-1 text-xl leading-none bg-transparent rounded border border-solid border-transparent\"\n      type=\"button\"\n      (click)=\"toggleCollapseShow('bg-white m-2 py-3 px-6')\"\n    >\n      <i class=\"fas fa-bars\"></i>\n    </button>\n    <!-- Brand -->\n    <a\n      [routerLink]=\"['/']\"\n      class=\"md:block text-left md:pb-2 text-blueGray-600 mr-0 inline-block whitespace-nowrap text-sm uppercase font-bold p-4 px-0\"\n    >\n      <span class=\"block sm:hidden\"> Tailwind Angular </span>\n      <span class=\"hidden sm:block\"> Notus Angular </span>\n    </a>\n    <!-- User -->\n    <ul class=\"md:hidden items-center flex flex-wrap list-none\">\n      <li class=\"inline-block relative\">\n        <brave-notification-dropdown\n          class=\"block\"\n        ></brave-notification-dropdown>\n      </li>\n      <li class=\"inline-block relative\">\n        <brave-user-dropdown class=\"block\"></brave-user-dropdown>\n      </li>\n    </ul>\n    <!-- Collapse -->\n    <div\n      class=\"md:flex md:flex-col md:items-stretch md:opacity-100 md:relative md:mt-4 md:shadow-none shadow absolute top-0 left-0 right-0 z-40 overflow-y-auto overflow-x-hidden h-auto items-center flex-1 rounded\"\n      [ngClass]=\"collapseShow\"\n    >\n      <!-- Collapse header -->\n      <div\n        class=\"md:min-w-full md:hidden block pb-4 mb-4 border-b border-solid border-blueGray-200\"\n      >\n        <div class=\"flex flex-wrap\">\n          <div class=\"w-6/12\">\n            <a\n              [routerLink]=\"['/']\"\n              class=\"md:block text-left md:pb-2 text-blueGray-600 mr-0 inline-block whitespace-nowrap text-sm uppercase font-bold p-4 px-0\"\n            >\n              Notus Angular\n            </a>\n          </div>\n          <div class=\"w-6/12 flex justify-end\">\n            <button\n              type=\"button\"\n              class=\"cursor-pointer text-black opacity-50 md:hidden px-3 py-1 text-xl leading-none bg-transparent rounded border border-solid border-transparent\"\n              (click)=\"toggleCollapseShow('hidden')\"\n            >\n              <i class=\"fas fa-times\"></i>\n            </button>\n          </div>\n        </div>\n      </div>\n      <!-- Form -->\n      <form class=\"mt-6 mb-4 md:hidden\">\n        <div class=\"mb-3 pt-0\">\n          <input\n            type=\"text\"\n            placeholder=\"Search\"\n            class=\"border-0 px-3 py-2 h-12 border border-solid border-blueGray-500 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-base leading-snug shadow-none outline-none focus:outline-none w-full font-normal\"\n          />\n        </div>\n      </form>\n\n      <!-- Divider -->\n      <hr class=\"my-4 md:min-w-full\" />\n      <!-- Heading -->\n      <h6\n        class=\"md:min-w-full text-blueGray-500 text-xs uppercase font-bold block pt-1 pb-4 no-underline\"\n      >\n        Admin Layout Pages\n      </h6>\n      <!-- Navigation -->\n\n      <ul class=\"md:flex-col md:min-w-full flex flex-col list-none\">\n        <li class=\"items-center\">\n          <a\n            [routerLink]=\"['/admin/dashboard']\"\n            class=\"text-xs uppercase py-3 font-bold block\"\n            routerLinkActive\n            #adminDashboard=\"routerLinkActive\"\n            [ngClass]=\"\n              adminDashboard.isActive\n                ? 'text-red-600 hover:text-red-700'\n                : 'text-blueGray-700 hover:text-blueGray-500'\n            \"\n          >\n            <i\n              class=\"fas fa-tv mr-2 text-sm\"\n              [ngClass]=\"\n                adminDashboard.isActive ? 'opacity-75' : 'text-blueGray-300'\n              \"\n            ></i>\n            Dashboard\n          </a>\n        </li>\n\n        <li class=\"items-center\">\n          <a\n            [routerLink]=\"['/admin/settings']\"\n            class=\"text-xs uppercase py-3 font-bold block\"\n            routerLinkActive\n            #adminSettings=\"routerLinkActive\"\n            [ngClass]=\"\n              adminSettings.isActive\n                ? 'text-red-600 hover:text-red-700'\n                : 'text-blueGray-700 hover:text-blueGray-500'\n            \"\n          >\n            <i\n              class=\"fas fa-tools mr-2 text-sm\"\n              [ngClass]=\"\n                adminSettings.isActive ? 'opacity-75' : 'text-blueGray-300'\n              \"\n            ></i>\n            Settings\n          </a>\n        </li>\n\n        <li class=\"items-center\">\n          <a\n            [routerLink]=\"['/admin/tables']\"\n            class=\"text-xs uppercase py-3 font-bold block\"\n            routerLinkActive\n            #adminTables=\"routerLinkActive\"\n            [ngClass]=\"\n              adminTables.isActive\n                ? 'text-red-600 hover:text-red-700'\n                : 'text-blueGray-700 hover:text-blueGray-500'\n            \"\n          >\n            <i\n              class=\"fas fa-table mr-2 text-sm\"\n              [ngClass]=\"\n                adminTables.isActive ? 'opacity-75' : 'text-blueGray-300'\n              \"\n            ></i>\n            Tables\n          </a>\n        </li>\n\n        <li class=\"items-center\">\n          <a\n            [routerLink]=\"['/admin/maps']\"\n            class=\"text-xs uppercase py-3 font-bold block\"\n            routerLinkActive\n            #adminMaps=\"routerLinkActive\"\n            [ngClass]=\"\n              adminMaps.isActive\n                ? 'text-red-600 hover:text-red-700'\n                : 'text-blueGray-700 hover:text-blueGray-500'\n            \"\n          >\n            <i\n              class=\"fas fa-map-marked mr-2 text-sm\"\n              [ngClass]=\"\n                adminMaps.isActive ? 'opacity-75' : 'text-blueGray-300'\n              \"\n            ></i>\n            Maps\n          </a>\n        </li>\n      </ul>\n\n      <!-- Divider -->\n      <hr class=\"my-4 md:min-w-full\" />\n      <!-- Heading -->\n      <h6\n        class=\"md:min-w-full text-blueGray-500 text-xs uppercase font-bold block pt-1 pb-4 no-underline\"\n      >\n        Auth Layout Pages\n      </h6>\n      <!-- Navigation -->\n\n      <ul class=\"md:flex-col md:min-w-full flex flex-col list-none md:mb-4\">\n        <li class=\"items-center\">\n          <a\n            [routerLink]=\"['/auth/login']\"\n            class=\"text-blueGray-700 hover:text-blueGray-500 text-xs uppercase py-3 font-bold block\"\n          >\n            <i class=\"fas fa-fingerprint text-blueGray-300 mr-2 text-sm\"></i>\n            Login\n          </a>\n        </li>\n\n        <li class=\"items-center\">\n          <a\n            [routerLink]=\"['/auth/register']\"\n            class=\"text-blueGray-700 hover:text-blueGray-500 text-xs uppercase py-3 font-bold block\"\n          >\n            <i class=\"fas fa-clipboard-list text-blueGray-300 mr-2 text-sm\"></i>\n            Register\n          </a>\n        </li>\n      </ul>\n\n      <!-- Divider -->\n      <hr class=\"my-4 md:min-w-full\" />\n      <!-- Heading -->\n      <h6\n        class=\"md:min-w-full text-blueGray-500 text-xs uppercase font-bold block pt-1 pb-4 no-underline\"\n      >\n        No Layout Pages\n      </h6>\n      <!-- Navigation -->\n\n      <ul class=\"md:flex-col md:min-w-full flex flex-col list-none md:mb-4\">\n        <li class=\"items-center\">\n          <a\n            [routerLink]=\"['/landing']\"\n            class=\"text-blueGray-700 hover:text-blueGray-500 text-xs uppercase py-3 font-bold block\"\n          >\n            <i class=\"fas fa-newspaper text-blueGray-300 mr-2 text-sm\"></i>\n            Landing Page\n          </a>\n        </li>\n\n        <li class=\"items-center\">\n          <a\n            [routerLink]=\"['/profile']\"\n            class=\"text-blueGray-700 hover:text-blueGray-500 text-xs uppercase py-3 font-bold block\"\n          >\n            <i class=\"fas fa-user-circle text-blueGray-300 mr-2 text-sm\"></i>\n            Profile Page\n          </a>\n        </li>\n      </ul>\n\n      <!-- Divider -->\n      <hr class=\"my-4 md:min-w-full\" />\n      <!-- Heading -->\n      <h6\n        class=\"md:min-w-full text-blueGray-500 text-xs uppercase font-bold block pt-1 pb-4 no-underline\"\n      >\n        Documentation\n      </h6>\n      <!-- Navigation -->\n      <ul class=\"md:flex-col md:min-w-full flex flex-col list-none md:mb-4\">\n        <li class=\"inline-flex\">\n          <a\n            href=\"https://www.creative-tim.com/learning-lab/tailwind/angular/colors/notus\"\n            target=\"_blank\"\n            class=\"text-blueGray-700 hover:text-blueGray-500 text-sm block mb-4 no-underline font-semibold\"\n          >\n            <i class=\"fas fa-paint-brush mr-2 text-blueGray-300 text-base\"></i>\n            Styles\n          </a>\n        </li>\n\n        <li class=\"inline-flex\">\n          <a\n            href=\"https://www.creative-tim.com/learning-lab/tailwind/angular/alerts/notus\"\n            target=\"_blank\"\n            class=\"text-blueGray-700 hover:text-blueGray-500 text-sm block mb-4 no-underline font-semibold\"\n          >\n            <i class=\"fab fa-css3-alt mr-2 text-blueGray-300 text-base\"></i>\n            CSS Components\n          </a>\n        </li>\n\n        <li class=\"inline-flex\">\n          <a\n            href=\"https://www.creative-tim.com/learning-lab/tailwind/angular/overview/notus\"\n            target=\"_blank\"\n            class=\"text-blueGray-700 hover:text-blueGray-500 text-sm block mb-4 no-underline font-semibold\"\n          >\n            <i class=\"fab fa-angular mr-2 text-blueGray-300 text-base\"></i>\n            Angular\n          </a>\n        </li>\n\n        <li class=\"inline-flex\">\n          <a\n            href=\"https://www.creative-tim.com/learning-lab/tailwind/js/overview/notus\"\n            target=\"_blank\"\n            class=\"text-blueGray-700 hover:text-blueGray-500 text-sm block mb-4 no-underline font-semibold\"\n          >\n            <i class=\"fab fa-js-square mr-2 text-blueGray-300 text-base\"></i>\n            Javascript\n          </a>\n        </li>\n\n        <li class=\"inline-flex\">\n          <a\n            href=\"https://www.creative-tim.com/learning-lab/tailwind/nextjs/overview/notus\"\n            target=\"_blank\"\n            class=\"text-blueGray-700 hover:text-blueGray-500 text-sm block mb-4 no-underline font-semibold\"\n          >\n            <i class=\"fab fa-react mr-2 text-blueGray-300 text-base\"></i>\n            NextJS\n          </a>\n        </li>\n\n        <li class=\"inline-flex\">\n          <a\n            href=\"https://www.creative-tim.com/learning-lab/tailwind/react/overview/notus\"\n            target=\"_blank\"\n            class=\"text-blueGray-700 hover:text-blueGray-500 text-sm block mb-4 no-underline font-semibold\"\n          >\n            <i class=\"fab fa-react mr-2 text-blueGray-300 text-base\"></i>\n            React\n          </a>\n        </li>\n\n        <li class=\"inline-flex\">\n          <a\n            href=\"https://www.creative-tim.com/learning-lab/tailwind/svelte/overview/notus\"\n            target=\"_blank\"\n            class=\"text-blueGray-700 hover:text-blueGray-500 text-sm block mb-4 no-underline font-semibold\"\n          >\n            <i class=\"fas fa-link mr-2 text-blueGray-300 text-base\"></i>\n            Svelte\n          </a>\n        </li>\n\n        <li class=\"inline-flex\">\n          <a\n            href=\"https://www.creative-tim.com/learning-lab/tailwind/vue/overview/notus\"\n            target=\"_blank\"\n            class=\"text-blueGray-700 hover:text-blueGray-500 text-sm block mb-4 no-underline font-semibold\"\n          >\n            <i class=\"fab fa-vuejs mr-2 text-blueGray-300 text-base\"></i>\n            VueJS\n          </a>\n        </li>\n      </ul>\n    </div>\n  </div>\n</nav>\n"
        },
        {
            "name": "SignInComponent",
            "id": "component-SignInComponent-798bd05135b93d29ab7bded816164b4e",
            "file": "src/app/shared/components/auth/sign-in/sign-in.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-sign-in",
            "styleUrls": [
                "./sign-in.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./sign-in.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 11
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'brave-sign-in',\n  templateUrl: './sign-in.component.html',\n  styleUrls: ['./sign-in.component.css'],\n})\nexport class SignInComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./sign-in.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>sign-in works!</p>\n"
        },
        {
            "name": "SignupComponent",
            "id": "component-SignupComponent-c863fbe315b76f096df9cd061ade1b5b",
            "file": "src/app/views/signup/signup.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-signup",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./signup.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "goToForgot",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 52,
                    "description": "<p>Method to route user to forgot</p>\n"
                },
                {
                    "name": "goToLogin",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 59,
                    "description": "<p>Method to route user to login</p>\n"
                },
                {
                    "name": "goToPrivacy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 66,
                    "description": "<p>Method to route user to privacy policy</p>\n"
                },
                {
                    "name": "goToTerms",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 73,
                    "description": "<p>Method to route user to terms of service</p>\n"
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13
                },
                {
                    "name": "signUpWithCognito",
                    "args": [
                        {
                            "name": "user",
                            "type": "NewUser"
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<void>",
                    "typeParameters": [],
                    "line": 18,
                    "description": "<p>Method to sign user up</p>\n",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "user",
                            "type": "NewUser",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "signUpWithFacebook",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36,
                    "description": "<p>Method to sign user up/in with Facebook</p>\n"
                },
                {
                    "name": "signUpWithGoogle",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 44,
                    "description": "<p>Method to sign user up/in with Google</p>\n"
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService, NewUser } from '@shared/services/auth/auth.service';\nimport { CognitoHostedUIIdentityProvider } from '@aws-amplify/auth';\n\n@Component({\n  selector: 'brave-signup',\n  templateUrl: './signup.component.html',\n})\nexport class SignupComponent implements OnInit {\n  constructor(private router: Router, private auth: AuthService) {}\n\n  ngOnInit(): void {}\n\n  /**\n   * Method to sign user up\n   */\n  async signUpWithCognito(user: NewUser): Promise<void> {\n    if (!user) return;\n    // add email validation here // const isValid = await this.accountMgmtService.isEmailValid(formData.username);\n    let isValid = true;\n    if (isValid) {\n      try {\n        let cognitoUser = await this.auth.signUp(user);\n      } catch (err) {\n        console.log('err:', err);\n      }\n    } else {\n      console.log('invalid email');\n    }\n  }\n\n  /**\n   * Method to sign user up/in with Facebook\n   */\n  signUpWithFacebook(): void {\n    let provider = CognitoHostedUIIdentityProvider.Facebook;\n    this.auth.socialSignIn(provider);\n  }\n\n  /**\n   * Method to sign user up/in with Google\n   */\n  signUpWithGoogle(): void {\n    let provider = CognitoHostedUIIdentityProvider.Google;\n    this.auth.socialSignIn(provider);\n  }\n\n  /**\n   * Method to route user to forgot\n   */\n  goToForgot(): void {\n    this.router.navigate(['/']);\n  }\n\n  /**\n   * Method to route user to login\n   */\n  goToLogin(): void {\n    this.router.navigate(['/']);\n  }\n\n  /**\n   * Method to route user to privacy policy\n   */\n  goToPrivacy(): void {\n    this.router.navigate(['/']);\n  }\n\n  /**\n   * Method to route user to terms of service\n   */\n  goToTerms(): void {\n    this.router.navigate(['/']);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router"
                    },
                    {
                        "name": "auth",
                        "type": "AuthService"
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "auth",
                        "type": "AuthService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"container mx-auto max-w-xs h-full\">\n  <div class=\"flex content-center items-center justify-center h-full p-2\">\n    <div class=\"w-full max-w-xs\">\n      <div\n        class=\"relative flex flex-col min-w-0 break-words w-full mb-6 border-0\"\n      >\n        <!-- logo -->\n        <div class=\"flex justify-center\">\n          <img class=\"w-32 h-32\" src=\"assets/img/brave-teal-512x512.jpg\" />\n        </div>\n\n        <!-- Social sign up buttons -->\n        <div class=\"rounded-t mb-0 py-6\">\n          <div class=\"text-center mb-3\">\n            <h4 class=\"brave-h4\">Create Account</h4>\n          </div>\n          <div class=\"btn-wrapper text-center\">\n            <div class=\"mb-1\">\n              <brave-google-iconsignin-button\n                (click)=\"signUpWithGoogle()\"\n              ></brave-google-iconsignin-button>\n            </div>\n            <div>\n              <brave-facebook-onlytextsignin-button\n                (click)=\"signUpWithFacebook()\"\n              ></brave-facebook-onlytextsignin-button>\n            </div>\n          </div>\n        </div>\n        <div class=\"flex-auto py-6 pt-0\">\n          <div class=\"brave-body1 text-center mb-3\">\n            <small>- Or -</small>\n          </div>\n          <brave-simple-signup-form\n            (signupClick)=\"signUpWithCognito($event)\"\n            (forgotClick)=\"goToForgot()\"\n          ></brave-simple-signup-form>\n        </div>\n\n        <!-- Already have an account -->\n        <div class=\"flex justify-center\">\n          <div class=\"text-sm text-blueGray-600\">\n            <span>Already have an account?&nbsp;</span>\n            <span>\n              <a (click)=\"goToLogin()\"> Login here. </a>\n            </span>\n          </div>\n        </div>\n\n        <!--  terms of service -->\n        <div class=\"flex justify-center mt-10\">\n          <div class=\"text-sm text-blueGray-600 text-center\">\n            <small>\n              By joining you are agreeing to our&nbsp;<span\n                ><a (click)=\"goToPrivacy()\" class=\"underline\"\n                  >Privacy Policy</a\n                ></span\n              >&nbsp;and&nbsp;<span\n                ><a (click)=\"goToTerms()\" class=\"underline\">TOS</a></span\n              >\n            </small>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n"
        },
        {
            "name": "SignUpComponent",
            "id": "component-SignUpComponent-6f0ff2e88b3511b0c6727e84be58a763",
            "file": "src/app/shared/components/auth/sign-up/sign-up.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-sign-up",
            "styleUrls": [
                "./sign-up.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./sign-up.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "signUpForm",
                    "defaultValue": "{} as FormGroup",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 17
                }
            ],
            "methodsClass": [
                {
                    "name": "signUpUser",
                    "args": [
                        {
                            "name": "formData",
                            "type": "FormFields"
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 34,
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "formData",
                            "type": "FormFields",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { BraveEmailValidator } from '@shared/validators/email.validator';\n\ninterface FormFields {\n  fullName: string;\n  username: string;\n  password: string;\n}\n\n@Component({\n  selector: 'brave-sign-up',\n  templateUrl: './sign-up.component.html',\n  styleUrls: ['./sign-up.component.css'],\n})\nexport class SignUpComponent {\n  signUpForm: FormGroup = {} as FormGroup;\n\n  constructor(private fb: FormBuilder) {\n    this.signUpForm = this.fb.group({\n      fullName: ['', [Validators.required]],\n      username: ['', [Validators.required, BraveEmailValidator]],\n      password: ['', [Validators.required, Validators.minLength(8)]],\n    });\n  }\n\n  get validForm() {\n    return this.signUpForm.valid;\n  }\n  get signUpValues() {\n    return this.signUpForm.value;\n  }\n\n  async signUpUser(formData: FormFields) {\n    if (!this.validForm) {\n      return;\n    }\n\n    const { username, password, fullName } = this.signUpValues;\n\n    // Auth.signUp({\n    //   username,\n    //   password,\n    //   attributes: {\n    //     email: username,\n    //     'custom:fullName': fullName,\n    //   },\n    // })\n    //   .then((_) => {\n    //     // fire fb pixel\n    //     // this.facebookService.fireCompleteRegistration(0.0, 'USD');\n    //     // this.googleService.fireSignUpEvent();\n    //     sessionStorage.setItem('userEmail', username);\n    //     const unconfirmedUserState = {\n    //       userFirstName: 'Guest',\n    //       userAttributes: {\n    //         'custom:firstName': 'Guest',\n    //         'custom:lastName': '',\n    //         'custom:legalFullName': '',\n    //         'custom:dob': '',\n    //         'custom:address': '',\n    //         email: username,\n    //         email_verified: false,\n    //         sub: '',\n    //       },\n    //       isSignedIn: true,\n    //       isAdmin: false,\n    //     };\n    //     this.accountMgmtService.updateUser(unconfirmedUserState); // signed up not confirmed...manually update state.\n    //     this.accountMgmtService.isWaiting$.next(false);\n    //     this.router.navigate(['/userportal/stepone']);\n    //   })\n    //   .catch((err) => {\n    //     this.error = true;\n    //     this.errorMessage = err.message;\n    //     this.accountMgmtService.isWaiting$.next(false);\n    //   });\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./sign-up.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "fb",
                        "type": "FormBuilder"
                    }
                ],
                "line": 17,
                "jsdoctags": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "validForm": {
                    "name": "validForm",
                    "getSignature": {
                        "name": "validForm",
                        "type": "",
                        "returnType": "",
                        "line": 27
                    }
                },
                "signUpValues": {
                    "name": "signUpValues",
                    "getSignature": {
                        "name": "signUpValues",
                        "type": "",
                        "returnType": "",
                        "line": 30
                    }
                }
            },
            "templateData": "<!-- <div class=\"c-flex flex-center\">\n  <div class=\"form-container\">\n    <form action=\"\" [formGroup]=\"signUpForm\">\n      <div>\n        <span class=\"brave-font-1\">Start taking control of your credit!</span>\n      </div>\n      <h5 class=\"brave-font-0 m-0\">\n        <span>Complete the information below to get started</span>\n      </h5>\n      <div>\n        <div class=\"brave-font-0 m-t-15 m-b-15\">\n          <input\n            matInput\n            name=\"fullName\"\n            [formControl]=\"signUpForm.controls['fullName']\"\n            placeholder=\"\"\n          />\n          <small\n            *ngIf=\"\n              signUpForm?.controls?.fullName?.touched &&\n              signUpForm.controls.fullName.errors?.required\n            \"\n            class=\"form-error-msg\"\n            >Name is required</small\n          >\n        </div>\n        <div class=\"brave-font-0 m-t-15 m-b-15\">\n          <input\n            #userEmail\n            matInput\n            name=\"username\"\n            [formControl]=\"signUpForm.controls['username']\"\n            placeholder=\"Username\"\n            autocorrect=\"off\"\n            autocapitalize=\"off\"\n            spellcheck=\"false\"\n          />\n          <small\n            *ngIf=\"\n              signUpForm?.controls?.email?.touched &&\n              signUpForm.controls.email.errors?.required\n            \"\n            class=\"form-error-msg\"\n            >Email is required</small\n          >\n        </div>\n        <div class=\"brave-font-0 m-t-15 m-b-15\">\n          <input\n            matInput\n            name=\"username\"\n            [formControl]=\"signUpForm.controls['password']\"\n            placeholder=\"Create a strong password\"\n            [type]=\"hide ? 'password' : 'text'\"\n            autocorrect=\"off\"\n            autocapitalize=\"off\"\n            spellcheck=\"false\"\n          />\n        </div>\n        <div class=\"brave-font-5 warning-text\">\n          <p *ngIf=\"error\">&#9888;&nbsp;{{ errorMessage }}</p>\n          <p *ngIf=\"success\">{{ successMessage }}</p>\n        </div>\n        <div>\n          <div>\n            <button\n              class=\"brave-btn-accent-raised brave-lgbtn\"\n              type=\"submit\"\n              [disabled]=\"!signUpForm.valid\"\n              (click)=\"completeStep()\"\n            >\n              Submit\n            </button>\n          </div>\n          <p class=\"brave-font-5 disclaimer\">\n            <small\n              >By joining you are agreeing to our\n              <a [routerLink]=\"['/privacy/info']\">Privacy Policy</a> and\n              <a [routerLink]=\"['/terms/info']\">TOS</a></small\n            >\n          </p>\n          <p class=\"brave-font-0 signin-text\">\n            Already a member? <a [routerLink]=\"['../signin']\">Log in.</a>\n          </p>\n          <p class=\"brave-font-0 signin-text\">\n            Forgot your password?\n            <a [routerLink]=\"['../forgot']\">Click here.</a>\n          </p>\n        </div>\n      </div>\n    </form>\n  </div>\n</div> -->\n"
        },
        {
            "name": "SignupErrorComponent",
            "id": "component-SignupErrorComponent-f2e99ec1bc97a91b990906b63907fd95",
            "file": "src/app/views/signup-error/signup-error.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-signup-error",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./signup-error.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 10
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'brave-signup-error',\n  templateUrl: './signup-error.component.html',\n})\nexport class SignupErrorComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 7
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"container mx-auto max-w-xs h-full\">\n  <div class=\"flex content-center items-center justify-center h-full\">\n    <div class=\"w-full max-w-xs\">\n      <div class=\"relative flex flex-col min-w-0 w-full mb-6 border-0\">\n        <!-- image -->\n        <div class=\"flex justify-center mb-6\">\n          <img class=\"w-full\" src=\"assets/img/undraw_welcoming_xvuq.svg\" />\n        </div>\n\n        <!-- header -->\n        <div class=\"py-3\">\n          <h4 class=\"brave-h4\">Verification Error</h4>\n        </div>\n\n        <!-- message -->\n        <div class=\"py-3\">\n          <div class=\"text-base text-blueGray-600\">\n            <p class=\"mb-0\">\n              Unfortunately there was a connection issue and you need to\n              re-enter your information.\n            </p>\n          </div>\n        </div>\n\n        <!-- action -->\n        <div class=\"mt-5\">\n          <div class=\"flex justify-center items-center\">\n            <brave-filled-onlytext-button [routerLink]=\"['/']\"\n              >Retry</brave-filled-onlytext-button\n            >\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n"
        },
        {
            "name": "SignupErrorValidationComponent",
            "id": "component-SignupErrorValidationComponent-f4383cb8f9db4af54b3c86b8eeb9d21e",
            "file": "src/app/views/signup-error-validation/signup-error-validation.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-signup-error-validation",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./signup-error-validation.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 10
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'brave-signup-error-validation',\n  templateUrl: './signup-error-validation.component.html',\n})\nexport class SignupErrorValidationComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 7
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"container mx-auto max-w-xs h-full\">\n  <div class=\"flex content-center items-center justify-center h-full\">\n    <div class=\"w-full max-w-xs\">\n      <div class=\"relative flex flex-col min-w-0 w-full mb-6 border-0\">\n        <!-- image -->\n        <div class=\"flex justify-center mb-6\">\n          <img class=\"w-full\" src=\"assets/img/undraw_welcoming_xvuq.svg\" />\n        </div>\n\n        <!-- header -->\n        <div class=\"py-3\">\n          <h4 class=\"brave-h4\">Verification Error</h4>\n        </div>\n\n        <!-- message -->\n        <div class=\"py-3\">\n          <div class=\"text-base\">\n            <p class=\"mb-6 text-blueGray-600\">\n              Unfortunately there we were unable to verify your identity with\n              the answers provided.\n            </p>\n            <p class=\"mb-6 text-blueGray-600\">Please try again in 30 days.</p>\n            <p class=\"mb-6 text-fuchsia-500\">\n              Why was my ID unable to be verified?\n            </p>\n          </div>\n        </div>\n\n        <!-- action -->\n        <div class=\"mt-5\">\n          <div class=\"flex justify-center items-center\">\n            <brave-filled-onlytext-button [routerLink]=\"['/']\"\n              >Return to Dashboard</brave-filled-onlytext-button\n            >\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n"
        },
        {
            "name": "SignupKnowyouComponent",
            "id": "component-SignupKnowyouComponent-00e99b29ff605d4246c52605d8c7db03",
            "file": "src/app/views/signup-knowyou/signup-knowyou.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-signup-knowyou",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./signup-knowyou.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 10
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'brave-signup-knowyou',\n  templateUrl: './signup-knowyou.component.html',\n})\nexport class SignupKnowyouComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 7
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"container mx-auto max-w-xs h-full\">\n  <div class=\"flex content-center items-center justify-center h-full\">\n    <div class=\"w-full max-w-xs\">\n      <div class=\"relative flex flex-col min-w-0 w-full mb-6 border-0\">\n        <!-- image -->\n        <div class=\"flex justify-center mb-6\">\n          <img class=\"w-full\" src=\"assets/img/undraw_welcoming_xvuq.svg\" />\n        </div>\n\n        <!-- header -->\n        <div class=\"py-3\">\n          <h4 class=\"brave-h4\">Let's get to know you!</h4>\n        </div>\n\n        <!-- form -->\n        <div class=\"py-3\">\n          <brave-know-you-form></brave-know-you-form>\n        </div>\n\n        <div class=\"mt-5\">\n          <div class=\"flex justify-center items-center\">\n            <brave-filled-onlytext-button\n              ><span class=\"flex items-center\"\n                >Continue<span class=\"material-icons px-1\"\n                  >arrow_forward</span\n                ></span\n              ></brave-filled-onlytext-button\n            >\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n"
        },
        {
            "name": "SignupLayoutComponent",
            "id": "component-SignupLayoutComponent-f5b92222fe96c3694091e7d80fcb69c2",
            "file": "src/app/layouts/onboarding/signup-layout/signup-layout.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-signup-layout",
            "styleUrls": [
                "./signup-layout.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./signup-layout.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'brave-signup-layout',\n  templateUrl: './signup-layout.component.html',\n  styleUrls: ['./signup-layout.component.css']\n})\nexport class SignupLayoutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./signup-layout.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>signup-layout works!</p>\n"
        },
        {
            "name": "SignupThankyouComponent",
            "id": "component-SignupThankyouComponent-948665f062e1c678814eb4a9e75cd72c",
            "file": "src/app/views/signup-thankyou/signup-thankyou.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-signup-thankyou",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./signup-thankyou.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 10
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'brave-signup-thankyou',\n  templateUrl: './signup-thankyou.component.html',\n})\nexport class SignupThankyouComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 7
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"container mx-auto max-w-xs h-full\">\n  <div class=\"flex content-center items-center justify-center h-full\">\n    <div class=\"w-full max-w-xs\">\n      <div class=\"relative flex flex-col min-w-0 w-full mb-6 border-0\">\n        <!-- image -->\n        <div class=\"flex justify-center mb-6\">\n          <img class=\"w-full\" src=\"assets/img/undraw_welcoming_xvuq.svg\" />\n        </div>\n\n        <!-- header -->\n        <div class=\"py-3\">\n          <h4 class=\"brave-h4\">Thanks for signing up!</h4>\n        </div>\n\n        <!-- message -->\n        <div class=\"py-3\">\n          <div class=\"text-base text-blueGray-600\">\n            <p class=\"mb-0\">Check your email for a verification link.</p>\n            <p>Click on it to continue.</p>\n          </div>\n        </div>\n\n        <!-- footer -->\n        <div class=\"mt-10 py-3\">\n          <div class=\"text-sm text-blueGray-600\">\n            <p>\n              Didn't receive an email?&nbsp;<span\n                ><a [routerLink]=\"['/']\">Click here to resend.</a></span\n              >\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n"
        },
        {
            "name": "SimpleSignupFormComponent",
            "id": "component-SimpleSignupFormComponent-525c6bbe1f3302617c7678e7e37d4b15",
            "file": "src/app/shared/components/forms/simple-signup-form/simple-signup-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-simple-signup-form",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./simple-signup-form.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "forgotClick",
                    "defaultValue": "new EventEmitter()",
                    "line": 11,
                    "type": "EventEmitter<MouseEvent>"
                },
                {
                    "name": "signupClick",
                    "defaultValue": "new EventEmitter()",
                    "line": 12,
                    "type": "EventEmitter<NewUser>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "emailConfig",
                    "defaultValue": "{\n    size: 'sm',\n    label: 'Email',\n    type: 'email',\n    placeholder: 'Email address',\n    autocomplete: 'email',\n  }",
                    "type": "IOutlineInputeConfig",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "parentForm",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "passwordConfig",
                    "defaultValue": "{\n    size: 'sm',\n    label: 'Password',\n    type: 'password',\n    placeholder: 'Password',\n    autocomplete: 'off',\n  }",
                    "type": "IOutlineInputeConfig",
                    "optional": false,
                    "description": "",
                    "line": 22
                }
            ],
            "methodsClass": [
                {
                    "name": "addChild",
                    "args": [
                        {
                            "name": "childName",
                            "type": "string"
                        },
                        {
                            "name": "childGroup",
                            "type": "FormGroup"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 41,
                    "description": "<p>Add a new child form control using the child form group</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1166,
                                "end": 1175,
                                "flags": 0,
                                "escapedText": "childName"
                            },
                            "type": "string",
                            "tagName": {
                                "pos": 1160,
                                "end": 1165,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": ""
                        },
                        {
                            "name": {
                                "pos": 1188,
                                "end": 1198,
                                "flags": 0,
                                "escapedText": "childGroup"
                            },
                            "type": "FormGroup",
                            "tagName": {
                                "pos": 1182,
                                "end": 1187,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": ""
                        }
                    ]
                },
                {
                    "name": "signupUser",
                    "args": [
                        {
                            "name": "form",
                            "type": "FormGroup"
                        }
                    ],
                    "optional": false,
                    "returnType": "NewUser",
                    "typeParameters": [],
                    "line": 50,
                    "description": "<p>Take the sign up form and transform into NewUser object</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1405,
                                "end": 1409,
                                "flags": 0,
                                "escapedText": "form"
                            },
                            "type": "FormGroup",
                            "tagName": {
                                "pos": 1399,
                                "end": 1404,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": ""
                        },
                        {
                            "tagName": {
                                "pos": 1416,
                                "end": 1423,
                                "flags": 0,
                                "escapedText": "returns"
                            },
                            "comment": "",
                            "returnType": ""
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Output } from '@angular/core';\nimport { FormGroup, FormBuilder } from '@angular/forms';\nimport { IOutlineInputeConfig } from '@shared/components/inputs/outline-input/outline-input.component';\nimport { NewUser } from '@shared/services/auth/auth.service';\n\n@Component({\n  selector: 'brave-simple-signup-form',\n  templateUrl: './simple-signup-form.component.html',\n})\nexport class SimpleSignupFormComponent {\n  @Output() forgotClick: EventEmitter<MouseEvent> = new EventEmitter();\n  @Output() signupClick: EventEmitter<NewUser> = new EventEmitter();\n\n  parentForm: FormGroup;\n  emailConfig: IOutlineInputeConfig = {\n    size: 'sm',\n    label: 'Email',\n    type: 'email',\n    placeholder: 'Email address',\n    autocomplete: 'email',\n  };\n  passwordConfig: IOutlineInputeConfig = {\n    size: 'sm',\n    label: 'Password',\n    type: 'password',\n    placeholder: 'Password',\n    autocomplete: 'off',\n  };\n\n  constructor(fb: FormBuilder) {\n    this.parentForm = fb.group({\n      name: ['simple-signup-form'],\n    }); // simple parent form with name of form\n  }\n\n  /**\n   * Add a new child form control using the child form group\n   * @param childName\n   * @param childGroup\n   */\n  addChild(childName: string, childGroup: FormGroup): void {\n    this.parentForm.addControl(childName, childGroup);\n  }\n\n  /**\n   * Take the sign up form and transform into NewUser object\n   * @param form\n   * @returns {NewUser}\n   */\n  signupUser(form: FormGroup): NewUser {\n    const { email, password } = form.value;\n    return {\n      username: email.input,\n      password: password.input,\n    };\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "fb",
                        "type": "FormBuilder"
                    }
                ],
                "line": 28,
                "jsdoctags": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<form [formGroup]=\"parentForm\">\n  <brave-outline-input\n    [config]=\"emailConfig\"\n    (onComponentReady)=\"addChild('email', $event)\"\n    [required]=\"true\"\n    [asteriskOverride]=\"true\"\n  >\n  </brave-outline-input>\n  <brave-outline-input\n    [config]=\"passwordConfig\"\n    (onComponentReady)=\"addChild('password', $event)\"\n    [required]=\"true\"\n    [asteriskOverride]=\"true\"\n  >\n  </brave-outline-input>\n  <div class=\"-mt-2\">\n    <div class=\"flex justify-end items-end\">\n      <a\n        [routerLink]=\"['/']\"\n        class=\"text-xs text-blueGray-600 hover:cursor-pointer\"\n        (click)=\"forgotClick.emit($event)\"\n        >Forgot password?</a\n      >\n    </div>\n  </div>\n\n  <div class=\"mt-5\">\n    <div class=\"flex justify-center items-center\">\n      <brave-filled-onlytext-button\n        [disabled]=\"!parentForm.valid\"\n        (click)=\"signupClick.emit(signupUser(parentForm))\"\n        >Sign Up</brave-filled-onlytext-button\n      >\n    </div>\n  </div>\n</form>\n"
        },
        {
            "name": "SsnFullFormComponent",
            "id": "component-SsnFullFormComponent-4a0966a81d18189a2b5e38ab97bfd9d5",
            "file": "src/app/shared/components/forms/ssn-full-form/ssn-full-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-ssn-full-form",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./ssn-full-form.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "onComponentReady",
                    "defaultValue": "new EventEmitter<FormGroup>()",
                    "line": 28,
                    "type": "EventEmitter<FormGroup>"
                },
                {
                    "name": "valueChanged",
                    "defaultValue": "new EventEmitter()",
                    "line": 26,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "childName",
                    "defaultValue": "'input'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "formSub$",
                    "type": "Subscription | undefined",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "hiddenFields",
                    "type": "QueryList<HiddenAsteriskInputComponent> | undefined",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "decorators": [
                        {
                            "name": "ViewChildren",
                            "stringifiedArguments": "HiddenAsteriskInputComponent"
                        }
                    ]
                },
                {
                    "name": "parentFormGroup",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 22
                }
            ],
            "methodsClass": [
                {
                    "name": "addChild",
                    "args": [
                        {
                            "name": "childName",
                            "type": "string"
                        },
                        {
                            "name": "childGroup",
                            "type": "FormGroup"
                        },
                        {
                            "name": "digit",
                            "type": "number"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 53,
                    "description": "<p>Adds the digits to the parent form</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1370,
                                "end": 1379,
                                "flags": 0,
                                "escapedText": "childName"
                            },
                            "type": "string",
                            "tagName": {
                                "pos": 1364,
                                "end": 1369,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": ""
                        },
                        {
                            "name": {
                                "pos": 1392,
                                "end": 1402,
                                "flags": 0,
                                "escapedText": "childGroup"
                            },
                            "type": "FormGroup",
                            "tagName": {
                                "pos": 1386,
                                "end": 1391,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": ""
                        },
                        {
                            "name": {
                                "pos": 1415,
                                "end": 1420,
                                "flags": 0,
                                "escapedText": "digit"
                            },
                            "type": "number",
                            "tagName": {
                                "pos": 1409,
                                "end": 1414,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": ""
                        }
                    ]
                },
                {
                    "name": "clearForm",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 73,
                    "description": "<p>Clears out all the values from the form</p>\n"
                },
                {
                    "name": "moveNext",
                    "args": [
                        {
                            "name": "idx",
                            "type": "number"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 61,
                    "description": "<p>Moves to the component located at the index</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1649,
                                "end": 1652,
                                "flags": 0,
                                "escapedText": "idx"
                            },
                            "type": "number",
                            "tagName": {
                                "pos": 1643,
                                "end": 1648,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": ""
                        }
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 43
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n  QueryList,\n  ViewChildren,\n} from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { HiddenAsteriskInputComponent } from '@shared/components/inputs/hidden-asterisk-input/hidden-asterisk-input.component';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'brave-ssn-full-form',\n  templateUrl: './ssn-full-form.component.html',\n})\nexport class SsnFullFormComponent implements OnInit {\n  @ViewChildren(HiddenAsteriskInputComponent)\n  hiddenFields: QueryList<HiddenAsteriskInputComponent> | undefined;\n\n  parentFormGroup: FormGroup;\n  childName: string = 'input';\n  private formSub$: Subscription | undefined;\n\n  @Output() valueChanged: EventEmitter<any> = new EventEmitter();\n  @Output()\n  onComponentReady: EventEmitter<FormGroup> = new EventEmitter<FormGroup>();\n\n  constructor(private fb: FormBuilder) {\n    this.parentFormGroup = fb.group({\n      code: [''],\n    }); // simple parent form with name of form\n  }\n\n  ngOnInit(): void {\n    this.formSub$ = this.parentFormGroup.valueChanges.subscribe((values) => {\n      this.valueChanged.emit(values);\n    });\n    this.onComponentReady.emit(this.parentFormGroup);\n  }\n\n  ngOnDestroy(): void {\n    if (this.formSub$) this.formSub$.unsubscribe();\n  }\n\n  /**\n   * Adds the digits to the parent form\n   * @param childName\n   * @param childGroup\n   * @param digit\n   */\n  addChild(childName: string, childGroup: FormGroup, digit: number): void {\n    this.parentFormGroup.addControl(`${childName}-${digit}`, childGroup);\n  }\n\n  /**\n   * Moves to the component located at the index\n   * @param idx\n   */\n  moveNext(idx: number): void {\n    const comp = this.hiddenFields?.find((c, i) => i === idx + 1);\n    if (comp) {\n      setTimeout(() => {\n        comp.focusMe();\n      }, 500);\n    }\n  }\n\n  /**\n   * Clears out all the values from the form\n   */\n  clearForm(): void {\n    this.hiddenFields?.forEach((c) => {\n      c.clearMe();\n    });\n    this.hiddenFields?.first.focusMe(); // set the cursor to the first one\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "fb",
                        "type": "FormBuilder"
                    }
                ],
                "line": 28,
                "jsdoctags": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<!-- first three digits -->\n<form [formGroup]=\"parentFormGroup\">\n  <div class=\"flex\">\n    <!-- first three digits -->\n    <span\n      class=\"flex justify-center items-center p-1 border-0 rounded bg-coolGray-100\"\n    >\n      <!-- Passing parent form to the child component -->\n      <div *ngFor=\"let x of [0, 1, 2]; index as idx\" class=\"flex mr-1\">\n        <brave-hidden-asterisk-input\n          [index]=\"idx\"\n          (onComponentReady)=\"addChild(childName, $event, x)\"\n          (onMoveNext)=\"moveNext(x)\"\n        >\n        </brave-hidden-asterisk-input>\n      </div>\n    </span>\n\n    <!-- hyphen -->\n    <span class=\"flex justify-center items-center -mt-2 p-1\">&#8212; </span>\n\n    <!-- second two digits -->\n    <span\n      class=\"flex justify-center items-center p-1 border-0 rounded bg-coolGray-100\"\n    >\n      <!-- Passing parent form to the child component -->\n      <div *ngFor=\"let x of [3, 4]; index as idx\" class=\"flex mr-1\">\n        <brave-hidden-asterisk-input\n          [index]=\"idx\"\n          (onComponentReady)=\"addChild(childName, $event, x)\"\n          (onMoveNext)=\"moveNext(x)\"\n        >\n        </brave-hidden-asterisk-input>\n      </div>\n    </span>\n\n    <!-- hyphen -->\n    <span class=\"flex justify-center items-center -mt-2 p-1\">&#8212; </span>\n\n    <!-- last four to populate -->\n    <span\n      class=\"flex justify-center items-center p-1 border-0 rounded bg-coolGray-100\"\n    >\n      <!-- Passing parent form to the child component -->\n      <div *ngFor=\"let x of [5, 6, 7, 8]; index as idx\" class=\"flex mr-1\">\n        <brave-hidden-asterisk-input\n          [index]=\"idx\"\n          (onComponentReady)=\"addChild(childName, $event, x)\"\n          (onMoveNext)=\"moveNext(x)\"\n        >\n        </brave-hidden-asterisk-input>\n      </div>\n    </span>\n  </div>\n</form>\n"
        },
        {
            "name": "SsnLastfourFormComponent",
            "id": "component-SsnLastfourFormComponent-0754f502df11a3bbbf0f345a1014599d",
            "file": "src/app/shared/components/forms/ssn-lastfour-form/ssn-lastfour-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-ssn-lastfour-form",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./ssn-lastfour-form.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "slots",
                    "line": 28
                }
            ],
            "outputsClass": [
                {
                    "name": "onComponentReady",
                    "defaultValue": "new EventEmitter<FormGroup>()",
                    "line": 37,
                    "type": "EventEmitter<FormGroup>"
                },
                {
                    "name": "valueChanged",
                    "defaultValue": "new EventEmitter()",
                    "line": 35,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "_slots",
                    "defaultValue": "[]",
                    "type": "number[]",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "childName",
                    "defaultValue": "'input'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "formSub$",
                    "type": "Subscription | undefined",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "hiddenFields",
                    "type": "QueryList<HiddenAsteriskInputComponent> | undefined",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "decorators": [
                        {
                            "name": "ViewChildren",
                            "stringifiedArguments": "HiddenAsteriskInputComponent"
                        }
                    ]
                },
                {
                    "name": "parentFormGroup",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 22
                }
            ],
            "methodsClass": [
                {
                    "name": "addChild",
                    "args": [
                        {
                            "name": "childName",
                            "type": "string"
                        },
                        {
                            "name": "childGroup",
                            "type": "FormGroup"
                        },
                        {
                            "name": "digit",
                            "type": "number"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 62,
                    "description": "<p>Adds the digits to the parent form</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1531,
                                "end": 1540,
                                "flags": 0,
                                "escapedText": "childName"
                            },
                            "type": "string",
                            "tagName": {
                                "pos": 1525,
                                "end": 1530,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": ""
                        },
                        {
                            "name": {
                                "pos": 1553,
                                "end": 1563,
                                "flags": 0,
                                "escapedText": "childGroup"
                            },
                            "type": "FormGroup",
                            "tagName": {
                                "pos": 1547,
                                "end": 1552,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": ""
                        },
                        {
                            "name": {
                                "pos": 1576,
                                "end": 1581,
                                "flags": 0,
                                "escapedText": "digit"
                            },
                            "type": "number",
                            "tagName": {
                                "pos": 1570,
                                "end": 1575,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": ""
                        }
                    ]
                },
                {
                    "name": "clearForm",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 82,
                    "description": "<p>Clears out all the values from the form</p>\n"
                },
                {
                    "name": "moveNext",
                    "args": [
                        {
                            "name": "idx",
                            "type": "number"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 70,
                    "description": "<p>Moves to the component located at the index</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1810,
                                "end": 1813,
                                "flags": 0,
                                "escapedText": "idx"
                            },
                            "type": "number",
                            "tagName": {
                                "pos": 1804,
                                "end": 1809,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": ""
                        }
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 52
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n  QueryList,\n  ViewChildren,\n} from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { HiddenAsteriskInputComponent } from '@shared/components/inputs/hidden-asterisk-input/hidden-asterisk-input.component';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'brave-ssn-lastfour-form',\n  templateUrl: './ssn-lastfour-form.component.html',\n})\nexport class SsnLastfourFormComponent implements OnInit {\n  @ViewChildren(HiddenAsteriskInputComponent)\n  hiddenFields: QueryList<HiddenAsteriskInputComponent> | undefined;\n\n  parentFormGroup: FormGroup;\n  childName: string = 'input';\n  private _slots: number[] = [];\n  private formSub$: Subscription | undefined;\n\n  @Input()\n  get slots() {\n    return this._slots;\n  }\n  set slots(slots: number[]) {\n    this._slots = slots;\n  }\n\n  @Output() valueChanged: EventEmitter<any> = new EventEmitter();\n  @Output()\n  onComponentReady: EventEmitter<FormGroup> = new EventEmitter<FormGroup>();\n\n  constructor(private fb: FormBuilder) {\n    this.parentFormGroup = fb.group({\n      code: [''],\n    }); // simple parent form with name of form\n  }\n\n  ngOnInit(): void {\n    this.formSub$ = this.parentFormGroup.valueChanges.subscribe((values) => {\n      this.valueChanged.emit(values);\n    });\n    this.onComponentReady.emit(this.parentFormGroup);\n  }\n\n  ngOnDestroy(): void {\n    if (this.formSub$) this.formSub$.unsubscribe();\n  }\n\n  /**\n   * Adds the digits to the parent form\n   * @param childName\n   * @param childGroup\n   * @param digit\n   */\n  addChild(childName: string, childGroup: FormGroup, digit: number): void {\n    this.parentFormGroup.addControl(`${childName}-${digit}`, childGroup);\n  }\n\n  /**\n   * Moves to the component located at the index\n   * @param idx\n   */\n  moveNext(idx: number): void {\n    const comp = this.hiddenFields?.find((c) => c.index === idx + 1);\n    if (comp) {\n      setTimeout(() => {\n        comp.focusMe();\n      }, 500);\n    }\n  }\n\n  /**\n   * Clears out all the values from the form\n   */\n  clearForm(): void {\n    this.hiddenFields?.forEach((c) => {\n      c.clearMe();\n    });\n    this.hiddenFields?.first.focusMe(); // set the cursor to the first one\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "fb",
                        "type": "FormBuilder"
                    }
                ],
                "line": 37,
                "jsdoctags": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "slots": {
                    "name": "slots",
                    "setSignature": {
                        "name": "slots",
                        "type": "void",
                        "args": [
                            {
                                "name": "slots",
                                "type": "[]"
                            }
                        ],
                        "returnType": "void",
                        "line": 31,
                        "jsdoctags": [
                            {
                                "name": "slots",
                                "type": "[]",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                }
            },
            "templateData": "<div class=\"flex\">\n  <!-- first three digits -->\n  <span *ngFor=\"let number of [0, 1, 2]\" class=\"flex justify-center p-1\">\n    <div style=\"position: relative\">\n      <div\n        class=\"flex text-3xl w-4 h-full pt-1 justify-center items-center text-blueGray-600\"\n      >\n        <p>&#42;</p>\n      </div>\n    </div>\n  </span>\n\n  <!-- hyphen -->\n  <span class=\"flex justify-center items-center -mt-2 p-1\">&#8212; </span>\n\n  <!-- second two digits -->\n  <span *ngFor=\"let number of [0, 1]\" class=\"flex justify-center p-1\">\n    <div style=\"position: relative\">\n      <div\n        class=\"flex text-3xl w-4 h-full pt-1 justify-center items-center text-blueGray-600\"\n      >\n        <p>&#42;</p>\n      </div>\n    </div>\n  </span>\n\n  <!-- hyphen -->\n  <span class=\"flex justify-center items-center -mt-2 p-1\">&#8212; </span>\n\n  <!-- last four to populate -->\n  <span class=\"flex flex-shrink border-0 rounded bg-coolGray-100\">\n    <form\n      [formGroup]=\"parentFormGroup\"\n      class=\"flex justify-center items-center\"\n    >\n      <!-- Passing parent form to the child component -->\n      <div *ngFor=\"let x of slots; index as idx\" class=\"flex\">\n        <brave-hidden-asterisk-input\n          [index]=\"idx\"\n          (onComponentReady)=\"addChild(childName, $event, x)\"\n          (onMoveNext)=\"moveNext(idx)\"\n        >\n        </brave-hidden-asterisk-input>\n      </div>\n    </form>\n  </span>\n</div>\n"
        },
        {
            "name": "TableDropdownComponent",
            "id": "component-TableDropdownComponent-842c0ab8925fef314f9d305cebc8e878",
            "file": "src/app/shared/components/dropdowns/popdowns/table-dropdown/table-dropdown.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-table-dropdown",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./table-dropdown.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "btnDropdownRef",
                    "type": "ElementRef | undefined",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'btnDropdownRef', {static: false}"
                        }
                    ]
                },
                {
                    "name": "dropdownPopoverShow",
                    "defaultValue": "false",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "popoverDropdownRef",
                    "type": "ElementRef | undefined",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'popoverDropdownRef', {static: false}"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15
                },
                {
                    "name": "toggleDropdown",
                    "args": [
                        {
                            "name": "event",
                            "type": "literal type"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "literal type",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, AfterViewInit, ViewChild, ElementRef } from '@angular/core';\nimport { createPopper } from '@popperjs/core';\n\n@Component({\n  selector: 'brave-table-dropdown',\n  templateUrl: './table-dropdown.component.html',\n})\nexport class TableDropdownComponent implements AfterViewInit {\n  dropdownPopoverShow = false;\n  @ViewChild('btnDropdownRef', { static: false }) btnDropdownRef:\n    | ElementRef\n    | undefined;\n  @ViewChild('popoverDropdownRef', { static: false })\n  popoverDropdownRef: ElementRef | undefined;\n  ngAfterViewInit() {\n    createPopper(\n      this.btnDropdownRef?.nativeElement,\n      this.popoverDropdownRef?.nativeElement,\n      {\n        placement: 'bottom-start',\n      }\n    );\n  }\n  toggleDropdown(event: { preventDefault: () => void }) {\n    event.preventDefault();\n    if (this.dropdownPopoverShow) {\n      this.dropdownPopoverShow = false;\n    } else {\n      this.dropdownPopoverShow = true;\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "implements": [
                "AfterViewInit"
            ],
            "templateData": "<a\n  class=\"text-blueGray-500 block py-1 px-3\"\n  href=\"#pablo\"\n  (click)=\"toggleDropdown($event)\"\n  #btnDropdownRef\n>\n  <i class=\"fas fa-ellipsis-v\"></i>\n</a>\n<div class=\"min-w-48 z-50\" #popoverDropdownRef>\n  <div\n    class=\"bg-white text-base float-left py-2 list-none text-left rounded shadow-lg mt-1 min-w-48\"\n    [ngClass]=\"dropdownPopoverShow ? 'block' : 'hidden'\"\n  >\n    <a\n      href=\"#pablo\"\n      class=\"text-sm py-2 px-4 font-normal block w-full whitespace-nowrap bg-transparent text-blueGray-700\"\n    >\n      Action\n    </a>\n    <a\n      href=\"#pablo\"\n      class=\"text-sm py-2 px-4 font-normal block w-full whitespace-nowrap bg-transparent text-blueGray-700\"\n    >\n      Another action\n    </a>\n    <a\n      href=\"#pablo\"\n      class=\"text-sm py-2 px-4 font-normal block w-full whitespace-nowrap bg-transparent text-blueGray-700\"\n    >\n      Something else here\n    </a>\n    <div class=\"h-0 my-2 border border-solid border-blueGray-100\"></div>\n    <a\n      href=\"#pablo\"\n      class=\"text-sm py-2 px-4 font-normal block w-full whitespace-nowrap bg-transparent text-blueGray-700\"\n    >\n      Seprated link\n    </a>\n  </div>\n</div>\n"
        },
        {
            "name": "UserDropdownComponent",
            "id": "component-UserDropdownComponent-dccebddf81b0594de1ab2efbab06388a",
            "file": "src/app/shared/components/dropdowns/popdowns/user-dropdown/user-dropdown.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brave-user-dropdown",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./user-dropdown.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "btnDropdownRef",
                    "type": "ElementRef | undefined",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'btnDropdownRef', {static: false}"
                        }
                    ]
                },
                {
                    "name": "dropdownPopoverShow",
                    "defaultValue": "false",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "popoverDropdownRef",
                    "type": "ElementRef | undefined",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'popoverDropdownRef', {static: false}"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15
                },
                {
                    "name": "toggleDropdown",
                    "args": [
                        {
                            "name": "event",
                            "type": "literal type"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "literal type",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, AfterViewInit, ViewChild, ElementRef } from '@angular/core';\nimport { createPopper } from '@popperjs/core';\n\n@Component({\n  selector: 'brave-user-dropdown',\n  templateUrl: './user-dropdown.component.html',\n})\nexport class UserDropdownComponent implements AfterViewInit {\n  dropdownPopoverShow = false;\n  @ViewChild('btnDropdownRef', { static: false }) btnDropdownRef:\n    | ElementRef\n    | undefined;\n  @ViewChild('popoverDropdownRef', { static: false })\n  popoverDropdownRef: ElementRef | undefined;\n  ngAfterViewInit() {\n    createPopper(\n      this.btnDropdownRef?.nativeElement,\n      this.popoverDropdownRef?.nativeElement,\n      {\n        placement: 'bottom-start',\n      }\n    );\n  }\n  toggleDropdown(event: { preventDefault: () => void }) {\n    event.preventDefault();\n    if (this.dropdownPopoverShow) {\n      this.dropdownPopoverShow = false;\n    } else {\n      this.dropdownPopoverShow = true;\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "implements": [
                "AfterViewInit"
            ],
            "templateData": "<a\n  class=\"text-blueGray-500 block\"\n  href=\"#pablo\"\n  (click)=\"toggleDropdown($event)\"\n  #btnDropdownRef\n>\n  <div class=\"items-center flex\">\n    <span\n      class=\"w-12 h-12 text-sm text-white bg-blueGray-200 inline-flex items-center justify-center rounded-full\"\n    >\n      <img\n        alt=\"...\"\n        class=\"w-full rounded-full align-middle border-none shadow-lg\"\n        src=\"assets/img/team-1-800x800.jpg\"\n      />\n    </span>\n  </div>\n</a>\n<div class=\"min-w-48 z-50\" #popoverDropdownRef>\n  <div\n    class=\"bg-white text-base z-50 float-left py-2 list-none text-left rounded shadow-lg mt-1 min-w-48\"\n    [ngClass]=\"dropdownPopoverShow ? 'block' : 'hidden'\"\n  >\n    <a\n      href=\"#pablo\"\n      class=\"text-sm py-2 px-4 font-normal block w-full whitespace-nowrap bg-transparent text-blueGray-700\"\n    >\n      Action\n    </a>\n    <a\n      href=\"#pablo\"\n      class=\"text-sm py-2 px-4 font-normal block w-full whitespace-nowrap bg-transparent text-blueGray-700\"\n    >\n      Another action\n    </a>\n    <a\n      href=\"#pablo\"\n      class=\"text-sm py-2 px-4 font-normal block w-full whitespace-nowrap bg-transparent text-blueGray-700\"\n    >\n      Something else here\n    </a>\n    <div class=\"h-0 my-2 border border-solid border-blueGray-100\"></div>\n    <a\n      href=\"#pablo\"\n      class=\"text-sm py-2 px-4 font-normal block w-full whitespace-nowrap bg-transparent text-blueGray-700\"\n    >\n      Seprated link\n    </a>\n  </div>\n</div>\n"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        },
                        {
                            "name": "LayoutsModule"
                        },
                        {
                            "name": "SharedDirectivesModule"
                        },
                        {
                            "name": "SharedServicesModule"
                        },
                        {
                            "name": "ViewsModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "LayoutsModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AuthenticationComponent"
                        },
                        {
                            "name": "KycLayoutComponent"
                        },
                        {
                            "name": "OnboardingComponent"
                        },
                        {
                            "name": "SignupLayoutComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "ViewsModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "AuthenticationComponent"
                        },
                        {
                            "name": "KycLayoutComponent"
                        },
                        {
                            "name": "OnboardingComponent"
                        },
                        {
                            "name": "SignupLayoutComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SharedComponentsModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AdminNavbarComponent"
                        },
                        {
                            "name": "AuthNavbarComponent"
                        },
                        {
                            "name": "BaseModalRegularComponent"
                        },
                        {
                            "name": "BaseModalSmallComponent"
                        },
                        {
                            "name": "DashboardNavbarComponent"
                        },
                        {
                            "name": "DateofbirthFormComponent"
                        },
                        {
                            "name": "FacebookOnlytextsigninButtonComponent"
                        },
                        {
                            "name": "FilledChecktextProgressbarComponent"
                        },
                        {
                            "name": "FilledChecktextProgressbarPipe"
                        },
                        {
                            "name": "FilledClosingAlertComponent"
                        },
                        {
                            "name": "FilledClosingAlertPipe"
                        },
                        {
                            "name": "FilledOnlytextBadgeComponent"
                        },
                        {
                            "name": "FilledOnlytextBadgePipe"
                        },
                        {
                            "name": "FilledOnlytextButtonComponent"
                        },
                        {
                            "name": "FilledOnlytextButtonPipe"
                        },
                        {
                            "name": "FilledOnlytextTabsComponent"
                        },
                        {
                            "name": "FooterAdminComponent"
                        },
                        {
                            "name": "FooterComponent"
                        },
                        {
                            "name": "FooterSmallComponent"
                        },
                        {
                            "name": "GoogleIconsigninButtonComponent"
                        },
                        {
                            "name": "HiddenAsteriskInputComponent"
                        },
                        {
                            "name": "HiddenAsteriskInputDirective"
                        },
                        {
                            "name": "HiddenCodeFormComponent"
                        },
                        {
                            "name": "IndexDropdownComponent"
                        },
                        {
                            "name": "IndexNavbarComponent"
                        },
                        {
                            "name": "KnowYouFormComponent"
                        },
                        {
                            "name": "LinksOnlytextButtonComponent"
                        },
                        {
                            "name": "LinksOnlytextButtonPipe"
                        },
                        {
                            "name": "MenuDropdownComponent"
                        },
                        {
                            "name": "NotificationDropdownComponent"
                        },
                        {
                            "name": "OutlineAddressFormComponent"
                        },
                        {
                            "name": "OutlineInputComponent"
                        },
                        {
                            "name": "OutlineInputPipe"
                        },
                        {
                            "name": "OutlineOnecolumnFormComponent"
                        },
                        {
                            "name": "OutlineOnlytextButtonComponent"
                        },
                        {
                            "name": "OutlineOnlytextButtonPipe"
                        },
                        {
                            "name": "OutlineOnlytextSelectComponent"
                        },
                        {
                            "name": "OutlinePhoneFormComponent"
                        },
                        {
                            "name": "OutlinePrevnextPaginationComponent"
                        },
                        {
                            "name": "OutlineSelectInputComponent"
                        },
                        {
                            "name": "OutlineSelectInputPipe"
                        },
                        {
                            "name": "OutlineTooltipComponent"
                        },
                        {
                            "name": "OutlineTooltipDirective"
                        },
                        {
                            "name": "OutlineVerificationcodeFormComponent"
                        },
                        {
                            "name": "PagesDropdownComponent"
                        },
                        {
                            "name": "SidebarComponent"
                        },
                        {
                            "name": "SignInComponent"
                        },
                        {
                            "name": "SignUpComponent"
                        },
                        {
                            "name": "SimpleSignupFormComponent"
                        },
                        {
                            "name": "SsnFullFormComponent"
                        },
                        {
                            "name": "SsnLastfourFormComponent"
                        },
                        {
                            "name": "TableDropdownComponent"
                        },
                        {
                            "name": "UserDropdownComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "AdminNavbarComponent"
                        },
                        {
                            "name": "AuthNavbarComponent"
                        },
                        {
                            "name": "BaseModalRegularComponent"
                        },
                        {
                            "name": "BaseModalSmallComponent"
                        },
                        {
                            "name": "DashboardNavbarComponent"
                        },
                        {
                            "name": "DateofbirthFormComponent"
                        },
                        {
                            "name": "FacebookOnlytextsigninButtonComponent"
                        },
                        {
                            "name": "FilledChecktextProgressbarComponent"
                        },
                        {
                            "name": "FilledChecktextProgressbarPipe"
                        },
                        {
                            "name": "FilledClosingAlertComponent"
                        },
                        {
                            "name": "FilledClosingAlertPipe"
                        },
                        {
                            "name": "FilledOnlytextBadgeComponent"
                        },
                        {
                            "name": "FilledOnlytextBadgePipe"
                        },
                        {
                            "name": "FilledOnlytextButtonComponent"
                        },
                        {
                            "name": "FilledOnlytextButtonPipe"
                        },
                        {
                            "name": "FilledOnlytextTabsComponent"
                        },
                        {
                            "name": "FooterAdminComponent"
                        },
                        {
                            "name": "FooterComponent"
                        },
                        {
                            "name": "FooterSmallComponent"
                        },
                        {
                            "name": "GoogleIconsigninButtonComponent"
                        },
                        {
                            "name": "HiddenAsteriskInputComponent"
                        },
                        {
                            "name": "HiddenAsteriskInputDirective"
                        },
                        {
                            "name": "HiddenCodeFormComponent"
                        },
                        {
                            "name": "IndexDropdownComponent"
                        },
                        {
                            "name": "IndexNavbarComponent"
                        },
                        {
                            "name": "KnowYouFormComponent"
                        },
                        {
                            "name": "LinksOnlytextButtonComponent"
                        },
                        {
                            "name": "LinksOnlytextButtonPipe"
                        },
                        {
                            "name": "MenuDropdownComponent"
                        },
                        {
                            "name": "NotificationDropdownComponent"
                        },
                        {
                            "name": "OutlineAddressFormComponent"
                        },
                        {
                            "name": "OutlineInputComponent"
                        },
                        {
                            "name": "OutlineInputPipe"
                        },
                        {
                            "name": "OutlineOnecolumnFormComponent"
                        },
                        {
                            "name": "OutlineOnlytextButtonComponent"
                        },
                        {
                            "name": "OutlineOnlytextButtonPipe"
                        },
                        {
                            "name": "OutlineOnlytextSelectComponent"
                        },
                        {
                            "name": "OutlinePhoneFormComponent"
                        },
                        {
                            "name": "OutlinePrevnextPaginationComponent"
                        },
                        {
                            "name": "OutlineSelectInputComponent"
                        },
                        {
                            "name": "OutlineSelectInputPipe"
                        },
                        {
                            "name": "OutlineTooltipComponent"
                        },
                        {
                            "name": "OutlineTooltipDirective"
                        },
                        {
                            "name": "OutlineVerificationcodeFormComponent"
                        },
                        {
                            "name": "PagesDropdownComponent"
                        },
                        {
                            "name": "SidebarComponent"
                        },
                        {
                            "name": "SignInComponent"
                        },
                        {
                            "name": "SignUpComponent"
                        },
                        {
                            "name": "SimpleSignupFormComponent"
                        },
                        {
                            "name": "SsnFullFormComponent"
                        },
                        {
                            "name": "SsnLastfourFormComponent"
                        },
                        {
                            "name": "TableDropdownComponent"
                        },
                        {
                            "name": "UserDropdownComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SharedDirectivesModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SharedPipesModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SharedServicesModule",
            "children": [
                {
                    "type": "providers",
                    "elements": [
                        {
                            "name": "AuthService"
                        },
                        {
                            "name": "GuestService"
                        },
                        {
                            "name": "IamService"
                        }
                    ]
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ViewsModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "KycAddressComponent"
                        },
                        {
                            "name": "KycCongratulationsComponent"
                        },
                        {
                            "name": "KycIdverificationComponent"
                        },
                        {
                            "name": "KycKbaquestionsComponent"
                        },
                        {
                            "name": "KycPhonenumberComponent"
                        },
                        {
                            "name": "KycSsnComponent"
                        },
                        {
                            "name": "KycSsnFullComponent"
                        },
                        {
                            "name": "KycWelcomeComponent"
                        },
                        {
                            "name": "KycWelcomebackComponent"
                        },
                        {
                            "name": "SignupComponent"
                        },
                        {
                            "name": "SignupErrorComponent"
                        },
                        {
                            "name": "SignupErrorValidationComponent"
                        },
                        {
                            "name": "SignupKnowyouComponent"
                        },
                        {
                            "name": "SignupThankyouComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "KycAddressComponent"
                        },
                        {
                            "name": "KycCongratulationsComponent"
                        },
                        {
                            "name": "KycIdverificationComponent"
                        },
                        {
                            "name": "KycKbaquestionsComponent"
                        },
                        {
                            "name": "KycPhonenumberComponent"
                        },
                        {
                            "name": "KycSsnComponent"
                        },
                        {
                            "name": "KycSsnFullComponent"
                        },
                        {
                            "name": "KycWelcomeComponent"
                        },
                        {
                            "name": "KycWelcomebackComponent"
                        },
                        {
                            "name": "SignupComponent"
                        },
                        {
                            "name": "SignupErrorComponent"
                        },
                        {
                            "name": "SignupErrorValidationComponent"
                        },
                        {
                            "name": "SignupKnowyouComponent"
                        },
                        {
                            "name": "SignupThankyouComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "Accent",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Accent",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/badges/filled-onlytext-badge/filled-onlytext-badge.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Accent",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/buttons/filled-onlytext-button/filled-onlytext-button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Accent",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/buttons/links-onlytext-button/links-onlytext-button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "accentConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.stories.ts",
                "type": "IFilledClosingAlertConfig",
                "defaultValue": "{\n  size: 'base',\n  backgroundColor: 'bg-fuchsia-500',\n  color: 'text-white',\n  alertTitle: 'Alert!',\n  alertBody: 'Something went wrong. Please try again.',\n}"
            },
            {
                "name": "accentConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/badges/filled-onlytext-badge/filled-onlytext-badge.stories.ts",
                "type": "IFilledOnlytextBadgeConfig",
                "defaultValue": "{\n  size: 'base',\n  backgroundColor: 'bg-fuchsia-200',\n  color: 'text-fuchsia-500',\n}"
            },
            {
                "name": "accentConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/buttons/filled-onlytext-button/filled-onlytext-button.stories.ts",
                "type": "IFilledOnlyTextButtonConfig",
                "defaultValue": "{\n  buttonSize: 'base',\n  backgroundColor: 'bg-fuchsia-500',\n  activeColor: 'bg-fuchsia-600',\n  color: 'text-white',\n}"
            },
            {
                "name": "accentConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/buttons/links-onlytext-button/links-onlytext-button.stories.ts",
                "type": "ILinksOnlyTextButtonConfig",
                "defaultValue": "{\n  buttonSize: 'base',\n  color: 'text-fuchsia-500',\n}"
            },
            {
                "name": "Bottom",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/tooltips/outline-tooltip/outline-tooltip.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "components",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/shared-components.module.ts",
                "type": "[]",
                "defaultValue": "[\n  SignInComponent,\n  SignUpComponent,\n  FilledOnlytextButtonComponent,\n  LinksOnlytextButtonComponent,\n  OutlineOnlytextButtonComponent,\n  OutlineInputComponent,\n  OutlineOnecolumnFormComponent,\n  GoogleIconsigninButtonComponent,\n  FacebookOnlytextsigninButtonComponent,\n  SimpleSignupFormComponent,\n  OutlineSelectInputComponent,\n  DateofbirthFormComponent,\n  KnowYouFormComponent,\n  FilledClosingAlertComponent,\n  FilledOnlytextBadgeComponent,\n  IndexDropdownComponent,\n  MenuDropdownComponent,\n  NotificationDropdownComponent,\n  PagesDropdownComponent,\n  TableDropdownComponent,\n  UserDropdownComponent,\n  OutlineOnlytextSelectComponent,\n  FooterComponent,\n  FooterAdminComponent,\n  FooterSmallComponent,\n  HiddenCodeFormComponent,\n  HiddenAsteriskInputComponent,\n  OutlineAddressFormComponent,\n  OutlinePhoneFormComponent,\n  OutlineVerificationcodeFormComponent,\n  SsnFullFormComponent,\n  SsnLastfourFormComponent,\n  HiddenAsteriskInputComponent,\n  BaseModalRegularComponent,\n  BaseModalSmallComponent,\n  AdminNavbarComponent,\n  AuthNavbarComponent,\n  DashboardNavbarComponent,\n  IndexNavbarComponent,\n  OutlinePrevnextPaginationComponent,\n  FilledChecktextProgressbarComponent,\n  SidebarComponent,\n  FilledOnlytextTabsComponent,\n  OutlineTooltipComponent,\n]"
            },
            {
                "name": "config",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/modals/base-modal-regular/base-modal-regular.stories.ts",
                "type": "IBaseModalRegularConfig",
                "defaultValue": "{\n  openButtonText: 'Open',\n  title: 'Message Title',\n  body:\n    'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec ultrices est in dolor feugiat, et consequat urna imperdiet. Nam a purus elit. In eu dui fermentum, tincidunt nisi a, pulvinar nulla. Morbi justo lectus, pellentesque ut dignissim at, varius at erat. Nullam porta libero justo, non facilisis urna elementum quis. Sed cursus lacinia faucibus. Nulla at elit erat. Ut at pharetra est. In dictum fringilla odio sed fringilla.',\n  actionButtonOneText: 'Cancel',\n  actionButtonTwoText: 'Continue',\n}"
            },
            {
                "name": "config",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/modals/base-modal-small/base-modal-small.stories.ts",
                "type": "IBaseModalSmallConfig",
                "defaultValue": "{\n  openButtonText: 'Open',\n  title: 'Message Title',\n  body:\n    'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec ultrices est in dolor feugiat, et consequat urna imperdiet. Nam a purus elit. In eu dui fermentum, tincidunt nisi a, pulvinar nulla. Morbi justo lectus, pellentesque ut dignissim at, varius at erat. Nullam porta libero justo, non facilisis urna elementum quis. Sed cursus lacinia faucibus. Nulla at elit erat. Ut at pharetra est. In dictum fringilla odio sed fringilla.',\n  actionButtonOneText: 'Cancel',\n  actionButtonTwoText: 'Continue',\n}"
            },
            {
                "name": "config",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/progressbars/filled-checktext-progressbar/filled-checktext-progressbar.stories.ts",
                "type": "IFilledChecktextProgressbarConfig",
                "defaultValue": "{\n  size: 'base',\n  steps: [\n    { active: false, complete: false, name: 'step 1' },\n    { active: false, complete: false, name: 'step 2' },\n    { active: false, complete: false, name: 'step 3' },\n    { active: false, complete: false, name: 'step 4' },\n    { active: false, complete: false, name: 'step 5' },\n  ],\n}"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/kyc-congratulations/kyc-congratulations.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/kyc-idverification/kyc-idverification.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/kyc-address/kyc-address.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/kyc-kbaquestions/kyc-kbaquestions.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/kyc-phonenumber/kyc-phonenumber.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/kyc-ssn/kyc-ssn.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/kyc-ssn-full/kyc-ssn-full.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/kyc-welcome/kyc-welcome.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/kyc-welcomeback/kyc-welcomeback.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/signup/signup.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/signup-error/signup-error.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/signup-error-validation/signup-error-validation.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/signup-knowyou/signup-knowyou.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/signup-thankyou/signup-thankyou.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layouts/onboarding/kyc-layout/kyc-layout.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/typography/typography-accent-bg-cooltext.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/typography/typography-accent-bg.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/typography/typography-primary-bg-cooltext.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/typography/typography-primary-bg.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/typography/typography-transparent-bg.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/badges/filled-onlytext-badge/filled-onlytext-badge.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/buttons/filled-onlytext-button/filled-onlytext-button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/buttons/links-onlytext-button/links-onlytext-button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/buttons/outline-onlytext-button/outline-onlytext-button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/forms/dateofbirth-form/dateofbirth-form.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/forms/hidden-code-form/hidden-code-form.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/forms/know-you-form/know-you-form.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/forms/outline-address-form/outline-address-form.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/forms/outline-onecolumn-form/outline-onecolumn-form.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/forms/outline-phone-form/outline-phone-form.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/forms/simple-signup-form/simple-signup-form.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/forms/outline-verificationcode-form/outline-verificationcode-form.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/forms/ssn-full-form/ssn-full-form.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/forms/ssn-lastfour-form/ssn-lastfour-form.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/inputs/hidden-asterisk-input/hidden-asterisk-input.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/inputs/outline-input/outline-input.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/inputs/outline-select-input/outline-select-input.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/navbars/dashboard-navbar/dashboard-navbar.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/modals/base-modal-regular/base-modal-regular.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/paginations/outline-prevnext-pagination/outline-prevnext-pagination.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/modals/base-modal-small/base-modal-small.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/progressbars/filled-checktext-progressbar/filled-checktext-progressbar.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/tabs/filled-onlytext-tabs/filled-onlytext-tabs.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/tooltips/outline-tooltip/outline-tooltip.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/dropdowns/popdowns/notification-dropdown/notification-dropdown.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/dropdowns/selects/outline-onlytext-select/outline-onlytext-select.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/dropdowns/popdowns/user-dropdown/user-dropdown.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/dropdowns/popdowns/table-dropdown/table-dropdown.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "directives",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/shared-components.module.ts",
                "type": "[]",
                "defaultValue": "[HiddenAsteriskInputDirective, OutlineTooltipDirective]"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.dev.ts",
                "type": "object",
                "defaultValue": "{\n  production: false,\n  API: 'https://jokbs4tpn3.execute-api.us-east-2.amazonaws.com/dev',\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "type": "object",
                "defaultValue": "{\n  production: true\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.qa.ts",
                "type": "object",
                "defaultValue": "{\n  production: false,\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "type": "object",
                "defaultValue": "{\n  production: false\n}"
            },
            {
                "name": "Error",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/kyc-idverification/kyc-idverification.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "ExtraLarge",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "extraLargeConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.stories.ts",
                "type": "IFilledClosingAlertConfig",
                "defaultValue": "{\n  size: 'xl',\n  backgroundColor: 'bg-indigo-800',\n  color: 'text-white',\n  alertTitle: 'Alert!',\n  alertBody: 'Something went wrong. Please try again.',\n}"
            },
            {
                "name": "ExtraSmall",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "extraSmallConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.stories.ts",
                "type": "IFilledClosingAlertConfig",
                "defaultValue": "{\n  size: 'xs',\n  backgroundColor: 'bg-indigo-800',\n  color: 'text-white',\n  alertTitle: 'Alert!',\n  alertBody: 'Something went wrong. Please try again.',\n}"
            },
            {
                "name": "Init",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/kyc-idverification/kyc-idverification.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "isLocalhost",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.module.ts",
                "type": "",
                "defaultValue": "Boolean(\n  window.location.hostname === 'localhost' ||\n    window.location.hostname === '[::1]' ||\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)"
            },
            {
                "name": "items",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/dropdowns/selects/outline-onlytext-select/outline-onlytext-select.stories.ts",
                "type": "IOutlineOnlyTextItem[]",
                "defaultValue": "[\n  { value: 'Item 1' },\n  { value: 'Item 2' },\n  { value: 'Item 3' },\n  { value: 'Item 4' },\n  { value: 'Item 5' },\n]"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/buttons/filled-onlytext-button/filled-onlytext-button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/buttons/links-onlytext-button/links-onlytext-button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/buttons/outline-onlytext-button/outline-onlytext-button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/inputs/hidden-asterisk-input/hidden-asterisk-input.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/inputs/outline-input/outline-input.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/inputs/outline-select-input/outline-select-input.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "largeConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.stories.ts",
                "type": "IFilledClosingAlertConfig",
                "defaultValue": "{\n  size: 'lg',\n  backgroundColor: 'bg-indigo-800',\n  color: 'text-white',\n  alertTitle: 'Alert!',\n  alertBody: 'Something went wrong. Please try again.',\n}"
            },
            {
                "name": "largeConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/buttons/filled-onlytext-button/filled-onlytext-button.stories.ts",
                "type": "IFilledOnlyTextButtonConfig",
                "defaultValue": "{\n  buttonSize: 'lg',\n  backgroundColor: 'bg-fuchsia-500',\n  activeColor: 'bg-fuchsia-600',\n  color: 'text-white',\n}"
            },
            {
                "name": "largeConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/buttons/links-onlytext-button/links-onlytext-button.stories.ts",
                "type": "ILinksOnlyTextButtonConfig",
                "defaultValue": "{\n  buttonSize: 'lg',\n  color: 'text-indigo-800',\n}"
            },
            {
                "name": "largeConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/buttons/outline-onlytext-button/outline-onlytext-button.stories.ts",
                "type": "IOutlineOnlyTextButtonConfig",
                "defaultValue": "{\n  buttonSize: 'lg',\n  borderColor: 'border-indigo-800',\n  activeColor: 'bg-indigo-900',\n  hoverColor: 'bg-indigo-800',\n  color: 'text-indigo-800',\n}"
            },
            {
                "name": "largeConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/inputs/outline-input/outline-input.stories.ts",
                "type": "IOutlineInputeConfig",
                "defaultValue": "{\n  size: 'lg',\n  type: 'text',\n  label: 'Input label',\n  placeholder: 'Input text',\n  autocomplete: 'off',\n  value: '',\n}"
            },
            {
                "name": "largeConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/inputs/outline-select-input/outline-select-input.stories.ts",
                "type": "IOutlineSelectInputConfig",
                "defaultValue": "{\n  size: 'lg',\n  label: 'Input label',\n  options: ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l'],\n}"
            },
            {
                "name": "layouts",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layouts/layouts.module.ts",
                "type": "[]",
                "defaultValue": "[\n  AuthenticationComponent,\n  OnboardingComponent,\n  KycLayoutComponent,\n  SignupLayoutComponent,\n]"
            },
            {
                "name": "Left",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/tooltips/outline-tooltip/outline-tooltip.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "months",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/forms/dateofbirth-form/dateofbirth-form.component.ts",
                "type": "string[]",
                "defaultValue": "[\n  'Jan',\n  'Feb',\n  'Mar',\n  'Apr',\n  'May',\n  'Jun',\n  'Jul',\n  'Aug',\n  'Sep',\n  'Oct',\n  'Nov',\n  'Dec',\n]"
            },
            {
                "name": "pipes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/shared-components.module.ts",
                "type": "[]",
                "defaultValue": "[\n  FilledOnlytextButtonPipe,\n  LinksOnlytextButtonPipe,\n  OutlineOnlytextButtonPipe,\n  OutlineInputPipe,\n  OutlineSelectInputPipe,\n  FilledClosingAlertPipe,\n  FilledOnlytextBadgePipe,\n  FilledChecktextProgressbarPipe,\n]"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/badges/filled-onlytext-badge/filled-onlytext-badge.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/buttons/filled-onlytext-button/filled-onlytext-button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/buttons/links-onlytext-button/links-onlytext-button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/buttons/outline-onlytext-button/outline-onlytext-button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "primaryConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.stories.ts",
                "type": "IFilledClosingAlertConfig",
                "defaultValue": "{\n  size: 'base',\n  backgroundColor: 'bg-indigo-800',\n  color: 'text-white',\n  alertTitle: 'Alert!',\n  alertBody: 'Something went wrong. Please try again.',\n}"
            },
            {
                "name": "primaryConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/badges/filled-onlytext-badge/filled-onlytext-badge.stories.ts",
                "type": "IFilledOnlytextBadgeConfig",
                "defaultValue": "{\n  size: 'base',\n  backgroundColor: 'bg-indigo-200',\n  color: 'text-indigo-800',\n}"
            },
            {
                "name": "primaryConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/buttons/filled-onlytext-button/filled-onlytext-button.stories.ts",
                "type": "IFilledOnlyTextButtonConfig",
                "defaultValue": "{\n  buttonSize: 'base',\n  backgroundColor: 'bg-indigo-800',\n  activeColor: 'bg-indigo-900',\n  color: 'text-white',\n}"
            },
            {
                "name": "primaryConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/buttons/links-onlytext-button/links-onlytext-button.stories.ts",
                "type": "ILinksOnlyTextButtonConfig",
                "defaultValue": "{\n  buttonSize: 'base',\n  color: 'text-indigo-800',\n}"
            },
            {
                "name": "primaryConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/buttons/outline-onlytext-button/outline-onlytext-button.stories.ts",
                "type": "IOutlineOnlyTextButtonConfig",
                "defaultValue": "{\n  buttonSize: 'base',\n  borderColor: 'border-indigo-800',\n  activeColor: 'bg-indigo-900',\n  hoverColor: 'bg-indigo-800',\n  color: 'text-indigo-800',\n}"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "type": "literal type"
            },
            {
                "name": "Right",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/tooltips/outline-tooltip/outline-tooltip.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/badges/filled-onlytext-badge/filled-onlytext-badge.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/buttons/filled-onlytext-button/filled-onlytext-button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "secondaryConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/badges/filled-onlytext-badge/filled-onlytext-badge.stories.ts",
                "type": "IFilledOnlytextBadgeConfig",
                "defaultValue": "{\n  size: 'base',\n  backgroundColor: 'bg-lightBlue-100',\n  color: 'text-indigo-800',\n}"
            },
            {
                "name": "secondaryConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/buttons/filled-onlytext-button/filled-onlytext-button.stories.ts",
                "type": "IFilledOnlyTextButtonConfig",
                "defaultValue": "{\n  buttonSize: 'base',\n  backgroundColor: 'bg-lightBlue-100',\n  activeColor: 'bg-lightBlue-200',\n  color: 'text-indigo-800',\n}"
            },
            {
                "name": "Sent",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/kyc-idverification/kyc-idverification.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "sizeSpecificClass",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.pipe.ts",
                "type": "Record<string, any>",
                "defaultValue": "{\n  xs: 'max-w-xs',\n  sm: 'max-w-sm',\n  base: 'max-w-md',\n  lg: 'max-w-lg',\n  xl: 'max-w-xl',\n}"
            },
            {
                "name": "sizeSpecificClass",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/badges/filled-onlytext-badge/filled-onlytext-badge.pipe.ts",
                "type": "Record<string, any>",
                "defaultValue": "{\n  sm: 'text-xs px-2 py-1',\n  base: 'text-xs px-2 py-1',\n  lg: 'text-xs px-2 py-1',\n}"
            },
            {
                "name": "sizeSpecificClass",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/buttons/filled-onlytext-button/filled-onlytext-button.pipe.ts",
                "type": "Record<string, any>",
                "defaultValue": "{\n  sm: 'text-xs px-4 py-2 hover:shadow-md',\n  base: 'text-sm px-6 py-3 hover:shadow-lg',\n  lg: 'text-base px-8 py-3 hover:shadow-lg',\n}"
            },
            {
                "name": "sizeSpecificClass",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/buttons/links-onlytext-button/links-onlytext-button.pipe.ts",
                "type": "Record<string, any>",
                "defaultValue": "{\n  sm: 'text-xs px-3 py-1',\n  base: 'text-sm px-6 py-2',\n  lg: 'text-base px-8 py-3',\n}"
            },
            {
                "name": "sizeSpecificClass",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/buttons/outline-onlytext-button/outline-onlytext-button.pipe.ts",
                "type": "Record<string, any>",
                "defaultValue": "{\n  sm: 'text-xs px-4 py-2',\n  base: 'text-sm px-6 py-3',\n  lg: 'text-base px-8 py-3',\n}"
            },
            {
                "name": "sizeSpecificClass",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/inputs/outline-input/outline-input.pipe.ts",
                "type": "Record<string, any>",
                "defaultValue": "{\n  sm: 'text-sm px-3 py-1',\n  base: 'text-sm px-3 py-3',\n  lg: 'text-base px-3 py-4',\n}"
            },
            {
                "name": "sizeSpecificClass",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/inputs/outline-select-input/outline-select-input.pipe.ts",
                "type": "Record<string, any>",
                "defaultValue": "{\n  sm: 'text-sm px-1 py-1',\n  base: 'text-sm px-1 py-3',\n  lg: 'text-base px-1 py-4',\n}"
            },
            {
                "name": "slots",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/kyc-ssn/kyc-ssn.stories.ts",
                "type": "number[]",
                "defaultValue": "[1, 2, 3, 4]"
            },
            {
                "name": "slots",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/kyc-ssn-full/kyc-ssn-full.stories.ts",
                "type": "number[]",
                "defaultValue": "[1, 2, 3, 4]"
            },
            {
                "name": "slots",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/forms/hidden-code-form/hidden-code-form.stories.ts",
                "type": "number[]",
                "defaultValue": "[1, 2, 3, 4]"
            },
            {
                "name": "slots",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/forms/ssn-lastfour-form/ssn-lastfour-form.stories.ts",
                "type": "number[]",
                "defaultValue": "[1, 2, 3, 4]"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/buttons/filled-onlytext-button/filled-onlytext-button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/buttons/links-onlytext-button/links-onlytext-button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/buttons/outline-onlytext-button/outline-onlytext-button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/inputs/hidden-asterisk-input/hidden-asterisk-input.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/inputs/outline-input/outline-input.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/inputs/outline-select-input/outline-select-input.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "smallConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.stories.ts",
                "type": "IFilledClosingAlertConfig",
                "defaultValue": "{\n  size: 'sm',\n  backgroundColor: 'bg-indigo-800',\n  color: 'text-white',\n  alertTitle: 'Alert!',\n  alertBody: 'Something went wrong. Please try again.',\n}"
            },
            {
                "name": "smallConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/buttons/filled-onlytext-button/filled-onlytext-button.stories.ts",
                "type": "IFilledOnlyTextButtonConfig",
                "defaultValue": "{\n  buttonSize: 'sm',\n  backgroundColor: 'bg-fuchsia-500',\n  activeColor: 'bg-fuchsia-600',\n  color: 'text-white',\n}"
            },
            {
                "name": "smallConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/buttons/links-onlytext-button/links-onlytext-button.stories.ts",
                "type": "ILinksOnlyTextButtonConfig",
                "defaultValue": "{\n  buttonSize: 'sm',\n  color: 'text-indigo-800',\n}"
            },
            {
                "name": "smallConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/buttons/outline-onlytext-button/outline-onlytext-button.stories.ts",
                "type": "IOutlineOnlyTextButtonConfig",
                "defaultValue": "{\n  buttonSize: 'sm',\n  borderColor: 'border-indigo-800',\n  activeColor: 'bg-indigo-900',\n  hoverColor: 'bg-indigo-800',\n  color: 'text-indigo-800',\n}"
            },
            {
                "name": "smallConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/inputs/outline-input/outline-input.stories.ts",
                "type": "IOutlineInputeConfig",
                "defaultValue": "{\n  size: 'sm',\n  type: 'text',\n  label: 'Input label',\n  placeholder: 'Input text',\n  autocomplete: 'off',\n  value: '',\n}"
            },
            {
                "name": "smallConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/inputs/outline-select-input/outline-select-input.stories.ts",
                "type": "IOutlineSelectInputConfig",
                "defaultValue": "{\n  size: 'sm',\n  label: 'Input label',\n  options: ['one', 'two', 'three'],\n}"
            },
            {
                "name": "stack",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/progressbars/filled-checktext-progressbar/filled-checktext-progressbar.stories.ts",
                "type": "IProgressStep[]",
                "defaultValue": "[\n  { active: true, complete: true, name: 'step 1' },\n  { active: true, complete: true, name: 'step 2' },\n  { active: true, complete: false, name: 'step 3' },\n]"
            },
            {
                "name": "states",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/forms/outline-address-form/outline-address-form.component.ts",
                "type": "[]",
                "defaultValue": "['AL', 'AK', 'AR', '...etc']"
            },
            {
                "name": "Strong",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/badges/filled-onlytext-badge/filled-onlytext-badge.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "strongConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/badges/filled-onlytext-badge/filled-onlytext-badge.stories.ts",
                "type": "IFilledOnlytextBadgeConfig",
                "defaultValue": "{\n  size: 'base',\n  backgroundColor: 'bg-indigo-800',\n  color: 'text-lightBlue-100',\n}"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/kyc-congratulations/kyc-congratulations.stories.ts",
                "type": "Story<KycCongratulationsComponent>",
                "defaultValue": "(args: any) => ({\n  component: KycCongratulationsComponent,\n  props: {\n    ...args,\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/kyc-idverification/kyc-idverification.stories.ts",
                "type": "Story<KycIdverificationComponent>",
                "defaultValue": "(args: any) => ({\n  component: KycIdverificationComponent,\n  props: {\n    ...args,\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/kyc-address/kyc-address.stories.ts",
                "type": "Story<KycAddressComponent>",
                "defaultValue": "(args: any) => ({\n  component: KycAddressComponent,\n  props: {\n    ...args,\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/kyc-kbaquestions/kyc-kbaquestions.stories.ts",
                "type": "Story<KycKbaquestionsComponent>",
                "defaultValue": "(args: any) => ({\n  component: KycKbaquestionsComponent,\n  props: {\n    ...args,\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/kyc-phonenumber/kyc-phonenumber.stories.ts",
                "type": "Story<KycPhonenumberComponent>",
                "defaultValue": "(args: any) => ({\n  component: KycPhonenumberComponent,\n  props: {\n    ...args,\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/kyc-ssn/kyc-ssn.stories.ts",
                "type": "Story<KycSsnComponent>",
                "defaultValue": "(args: any) => ({\n  component: KycSsnComponent,\n  props: {\n    ...args,\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/kyc-ssn-full/kyc-ssn-full.stories.ts",
                "type": "Story<KycSsnFullComponent>",
                "defaultValue": "(args: any) => ({\n  component: KycSsnFullComponent,\n  props: {\n    ...args,\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/kyc-welcome/kyc-welcome.stories.ts",
                "type": "Story<KycWelcomeComponent>",
                "defaultValue": "(args: any) => ({\n  component: KycWelcomeComponent,\n  props: {\n    ...args,\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/kyc-welcomeback/kyc-welcomeback.stories.ts",
                "type": "Story<KycWelcomebackComponent>",
                "defaultValue": "(args: any) => ({\n  component: KycWelcomebackComponent,\n  props: {\n    ...args,\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/signup/signup.stories.ts",
                "type": "Story<SignupComponent>",
                "defaultValue": "(args: any) => ({\n  component: SignupComponent,\n  props: {\n    ...args,\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/signup-error/signup-error.stories.ts",
                "type": "Story<SignupErrorComponent>",
                "defaultValue": "(args: any) => ({\n  component: SignupErrorComponent,\n  props: {\n    ...args,\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/signup-error-validation/signup-error-validation.stories.ts",
                "type": "Story<SignupErrorValidationComponent>",
                "defaultValue": "(args: any) => ({\n  component: SignupErrorValidationComponent,\n  props: {\n    ...args,\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/signup-knowyou/signup-knowyou.stories.ts",
                "type": "Story<SignupKnowyouComponent>",
                "defaultValue": "(args: any) => ({\n  component: SignupKnowyouComponent,\n  props: {\n    ...args,\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/signup-thankyou/signup-thankyou.stories.ts",
                "type": "Story<SignupThankyouComponent>",
                "defaultValue": "(args: any) => ({\n  component: SignupThankyouComponent,\n  props: {\n    ...args,\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layouts/onboarding/kyc-layout/kyc-layout.stories.ts",
                "type": "Story<KycLayoutComponent>",
                "defaultValue": "(args: any) => ({\n  component: KycLayoutComponent,\n  props: {\n    ...args,\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/typography/typography-accent-bg-cooltext.stories.ts",
                "type": "Story<any>",
                "defaultValue": "(args: any) => ({\n  props: {\n    ...args,\n  },\n  template: `\n  <div class=\"bg-fuchsia-500 p-4\">\n    <h1 class='font-headings font-extrabold text-5xl text-lightBlue-100'>H1 Heading</h1>\n    <h2 class='font-headings font-extrabold text-4xl text-lightBlue-100'>H2 Heading</h2>\n    <h3 class='font-headings font-extrabold text-3xl text-lightBlue-100'>H3 Heading</h3>\n    <h4 class='font-headings font-extrabold text-2xl text-lightBlue-100'>H4 Heading</h4>\n    <h5 class='font-headings font-extrabold text-xl text-lightBlue-100'>H5 Heading</h5>\n    <h6 class='font-headings font-extrabold text-lg text-lightBlue-100'>H6 Heading</h6>\n    <div style=\"margin: 10px 0px\"></div>\n    <p class='font-sans text-base text-lightBlue-100'>Body 1</p>\n    <p class='font-sans font-semibold text-base text-lightBlue-100'>Body 1-semibold</p>\n    <p class='font-sans text-sm text-lightBlue-100'>Body 2</p>\n    <p class='font-sans font-semibold text-sm text-lightBlue-100'>Body 2-semibold</p>\n  </div>\n    `,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/typography/typography-accent-bg.stories.ts",
                "type": "Story<any>",
                "defaultValue": "(args: any) => ({\n  props: {\n    ...args,\n  },\n  template: `\n  <div class=\"bg-fuchsia-500 p-4\">\n    <h1 class='font-headings font-extrabold text-5xl text-white'>H1 Heading</h1>\n    <h2 class='font-headings font-extrabold text-4xl text-white'>H2 Heading</h2>\n    <h3 class='font-headings font-extrabold text-3xl text-white'>H3 Heading</h3>\n    <h4 class='font-headings font-extrabold text-2xl text-white'>H4 Heading</h4>\n    <h5 class='font-headings font-extrabold text-xl text-white'>H5 Heading</h5>\n    <h6 class='font-headings font-extrabold text-lg text-white'>H6 Heading</h6>\n    <div style=\"margin: 10px 0px\"></div>\n    <p class='font-sans text-base text-white'>Body 1</p>\n    <p class='font-sans font-semibold text-base text-white'>Body 1-semibold</p>\n    <p class='font-sans text-sm text-white'>Body 2</p>\n    <p class='font-sans font-semibold text-sm text-white'>Body 2-semibold</p>\n  </div>\n    `,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/typography/typography-primary-bg-cooltext.stories.ts",
                "type": "Story<any>",
                "defaultValue": "(args: any) => ({\n  props: {\n    ...args,\n  },\n  template: `\n  <div class=\"bg-indigo-800 p-4\">\n    <h1 class='font-headings font-extrabold text-5xl text-lightBlue-100'>H1 Heading</h1>\n    <h2 class='font-headings font-extrabold text-4xl text-lightBlue-100'>H2 Heading</h2>\n    <h3 class='font-headings font-extrabold text-3xl text-lightBlue-100'>H3 Heading</h3>\n    <h4 class='font-headings font-extrabold text-2xl text-lightBlue-100'>H4 Heading</h4>\n    <h5 class='font-headings font-extrabold text-xl text-lightBlue-100'>H5 Heading</h5>\n    <h6 class='font-headings font-extrabold text-lg text-lightBlue-100'>H6 Heading</h6>\n    <div style=\"margin: 10px 0px\"></div>\n    <p class='font-sans text-base text-lightBlue-100'>Body 1</p>\n    <p class='font-sans font-semibold text-base text-lightBlue-100'>Body 1-semibold</p>\n    <p class='font-sans text-sm text-lightBlue-100'>Body 2</p>\n    <p class='font-sans font-semibold text-sm text-lightBlue-100'>Body 2-semibold</p>\n  </div>\n    `,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/typography/typography-primary-bg.stories.ts",
                "type": "Story<any>",
                "defaultValue": "(args: any) => ({\n  props: {\n    ...args,\n  },\n  template: `\n  <div class=\"bg-indigo-800 p-4\">\n    <h1 class='font-headings font-extrabold text-5xl text-white'>H1 Heading</h1>\n    <h2 class='font-headings font-extrabold text-4xl text-white'>H2 Heading</h2>\n    <h3 class='font-headings font-extrabold text-3xl text-white'>H3 Heading</h3>\n    <h4 class='font-headings font-extrabold text-2xl text-white'>H4 Heading</h4>\n    <h5 class='font-headings font-extrabold text-xl text-white'>H5 Heading</h5>\n    <h6 class='font-headings font-extrabold text-lg text-white'>H6 Heading</h6>\n    <div style=\"margin: 10px 0px\"></div>\n    <p class='font-sans text-base text-white'>Body 1</p>\n    <p class='font-sans font-semibold text-base text-white'>Body 1-semibold</p>\n    <p class='font-sans text-sm text-white'>Body 2</p>\n    <p class='font-sans font-semibold text-sm text-white'>Body 2-semibold</p>\n  </div>\n    `,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/typography/typography-transparent-bg.stories.ts",
                "type": "Story<any>",
                "defaultValue": "(args: any) => ({\n  props: {\n    ...args,\n  },\n  template: `\n    <h1 class='font-headings font-extrabold text-5xl text-coolGray-900'>H1 Heading</h1>\n    <h2 class='font-headings font-extrabold text-4xl text-coolGray-900'>H2 Heading</h2>\n    <h3 class='font-headings font-extrabold text-3xl text-coolGray-900'>H3 Heading</h3>\n    <h4 class='font-headings font-extrabold text-2xl text-coolGray-900'>H4 Heading</h4>\n    <h5 class='font-headings font-extrabold text-xl text-coolGray-900'>H5 Heading</h5>\n    <h6 class='font-headings font-extrabold text-lg text-coolGray-900'>H6 Heading</h6>\n    <div style=\"margin: 10px 0px\"></div>\n    <p class='font-sans text-base text-coolGray-700'>Body 1</p>\n    <p class='font-sans font-semibold text-base text-coolGray-700'>Body 1-semibold</p>\n    <p class='font-sans text-sm text-coolGray-700'>Body 2</p>\n    <p class='font-sans font-semibold text-sm text-coolGray-700'>Body 2-semibold</p>\n    `,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.stories.ts",
                "type": "Story<FilledClosingAlertComponent>",
                "defaultValue": "(args: any) => ({\n  component: FilledClosingAlertComponent,\n  props: {\n    ...args,\n    showAlert: true,\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/badges/filled-onlytext-badge/filled-onlytext-badge.stories.ts",
                "type": "Story<FilledOnlytextBadgeComponent>",
                "defaultValue": "(args: any) => ({\n  props: {\n    ...args,\n  },\n  template: `<brave-filled-onlytext-badge>Badge</brave-filled-onlytext-badge>`,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/buttons/filled-onlytext-button/filled-onlytext-button.stories.ts",
                "type": "Story<FilledOnlytextButtonComponent>",
                "defaultValue": "(args: any) => ({\n  props: {\n    ...args,\n  },\n  template: `<brave-filled-onlytext-button>Default</brave-filled-onlytext-button>`,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/buttons/links-onlytext-button/links-onlytext-button.stories.ts",
                "type": "Story<LinksOnlytextButtonComponent>",
                "defaultValue": "(args: any) => ({\n  props: {\n    ...args,\n  },\n  template: `<brave-links-onlytext-button>My Link</brave-links-onlytext-button>`,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/buttons/outline-onlytext-button/outline-onlytext-button.stories.ts",
                "type": "Story<OutlineOnlytextButtonComponent>",
                "defaultValue": "(args: any) => ({\n  props: {\n    ...args,\n  },\n  template: `<brave-outline-onlytext-button>Default</brave-outline-onlytext-button>`,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/forms/dateofbirth-form/dateofbirth-form.stories.ts",
                "type": "Story<DateofbirthFormComponent>",
                "defaultValue": "(args: any) => ({\n  component: DateofbirthFormComponent,\n  props: {\n    ...args,\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/forms/hidden-code-form/hidden-code-form.stories.ts",
                "type": "Story<HiddenCodeFormComponent>",
                "defaultValue": "(args: any) => ({\n  props: {\n    ...args,\n    slots,\n  },\n  template: `<brave-hidden-code-form [slots]=\"slots\"></brave-hidden-code-form>`,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/forms/know-you-form/know-you-form.stories.ts",
                "type": "Story<KnowYouFormComponent>",
                "defaultValue": "(args: any) => ({\n  component: KnowYouFormComponent,\n  props: {\n    ...args,\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/forms/outline-address-form/outline-address-form.stories.ts",
                "type": "Story<OutlineAddressFormComponent>",
                "defaultValue": "(args: any) => ({\n  component: OutlineAddressFormComponent,\n  props: {\n    ...args,\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/forms/outline-onecolumn-form/outline-onecolumn-form.stories.ts",
                "type": "Story<OutlineOnecolumnFormComponent>",
                "defaultValue": "(args: any) => ({\n  component: OutlineOnecolumnFormComponent,\n  props: {\n    ...args,\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/forms/outline-phone-form/outline-phone-form.stories.ts",
                "type": "Story<OutlinePhoneFormComponent>",
                "defaultValue": "(args: any) => ({\n  component: OutlinePhoneFormComponent,\n  props: {\n    ...args,\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/forms/simple-signup-form/simple-signup-form.stories.ts",
                "type": "Story<SimpleSignupFormComponent>",
                "defaultValue": "(args: any) => ({\n  component: SimpleSignupFormComponent,\n  props: {\n    ...args,\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/forms/outline-verificationcode-form/outline-verificationcode-form.stories.ts",
                "type": "Story<OutlineVerificationcodeFormComponent>",
                "defaultValue": "(args: any) => ({\n  component: OutlineVerificationcodeFormComponent,\n  props: {\n    ...args,\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/forms/ssn-full-form/ssn-full-form.stories.ts",
                "type": "Story<SsnFullFormComponent>",
                "defaultValue": "(args: any) => ({\n  component: SsnFullFormComponent,\n  props: {\n    ...args,\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/forms/ssn-lastfour-form/ssn-lastfour-form.stories.ts",
                "type": "Story<SsnLastfourFormComponent>",
                "defaultValue": "(args: any) => ({\n  props: {\n    ...args,\n    slots,\n  },\n  template: `<brave-ssn-lastfour-form [slots]=\"slots\"></brave-ssn-lastfour-form>`,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/inputs/hidden-asterisk-input/hidden-asterisk-input.stories.ts",
                "type": "Story<HiddenAsteriskInputComponent>",
                "defaultValue": "(args: any) => ({\n  component: HiddenAsteriskInputComponent,\n  props: {\n    ...args,\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/inputs/outline-input/outline-input.stories.ts",
                "type": "Story<OutlineInputComponent>",
                "defaultValue": "(args: any) => ({\n  component: OutlineInputComponent,\n  props: {\n    ...args,\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/inputs/outline-select-input/outline-select-input.stories.ts",
                "type": "Story<OutlineSelectInputComponent>",
                "defaultValue": "(args: any) => ({\n  component: OutlineSelectInputComponent,\n  props: {\n    ...args,\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/navbars/dashboard-navbar/dashboard-navbar.stories.ts",
                "type": "Story<DashboardNavbarComponent>",
                "defaultValue": "(args: any) => ({\n  props: {\n    ...args,\n  },\n  template: `<brave-dashboard-navbar><brave-dashboard-navbar>`,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/modals/base-modal-regular/base-modal-regular.stories.ts",
                "type": "Story<BaseModalRegularComponent>",
                "defaultValue": "(args: any) => ({\n  props: {\n    ...args,\n    config,\n  },\n  template: `<brave-base-modal-regular [config]=\"config\"></brave-base-modal-regular>`,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/paginations/outline-prevnext-pagination/outline-prevnext-pagination.stories.ts",
                "type": "Story<any>",
                "defaultValue": "(args: any) => ({\n  component: OutlinePrevnextPaginationComponent,\n  props: {\n    ...args,\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/modals/base-modal-small/base-modal-small.stories.ts",
                "type": "Story<BaseModalSmallComponent>",
                "defaultValue": "(args: any) => ({\n  props: {\n    ...args,\n    config,\n  },\n  template: `<brave-base-modal-small [config]=\"config\"></brave-base-modal-small>`,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/progressbars/filled-checktext-progressbar/filled-checktext-progressbar.stories.ts",
                "type": "Story<FilledChecktextProgressbarComponent>",
                "defaultValue": "(args: any) => ({\n  props: {\n    ...args,\n    stack,\n    config,\n  },\n  template: `<brave-filled-checktext-progressbar [config]=\"config\"><brave-filled-checktext-progressbar>`,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/tabs/filled-onlytext-tabs/filled-onlytext-tabs.stories.ts",
                "type": "Story<any>",
                "defaultValue": "(args: any) => ({\n  component: FilledOnlytextTabsComponent,\n  props: {\n    ...args,\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/tooltips/outline-tooltip/outline-tooltip.stories.ts",
                "type": "Story<OutlineTooltipComponent>",
                "defaultValue": "(args: any) => ({\n  component: OutlineTooltipComponent,\n  props: {\n    ...args,\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/dropdowns/popdowns/notification-dropdown/notification-dropdown.stories.ts",
                "type": "Story<NotificationDropdownComponent>",
                "defaultValue": "(args: any) => ({\n  component: NotificationDropdownComponent,\n  props: {\n    ...args,\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/dropdowns/selects/outline-onlytext-select/outline-onlytext-select.stories.ts",
                "type": "Story<OutlineOnlytextSelectComponent>",
                "defaultValue": "(args: any) => ({\n  props: {\n    ...args,\n    items,\n  },\n  template: `\n  <brave-outline-onlytext-select [items]=\"items\"></brave-outline-onlytext-select>\n  `,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/dropdowns/popdowns/user-dropdown/user-dropdown.stories.ts",
                "type": "Story<UserDropdownComponent>",
                "defaultValue": "(args: any) => ({\n  component: UserDropdownComponent,\n  props: {\n    ...args,\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/dropdowns/popdowns/table-dropdown/table-dropdown.stories.ts",
                "type": "Story<TableDropdownComponent>",
                "defaultValue": "(args: any) => ({\n  component: TableDropdownComponent,\n  props: {\n    ...args,\n  },\n})"
            },
            {
                "name": "Top",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/tooltips/outline-tooltip/outline-tooltip.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.module.ts",
                "type": "",
                "defaultValue": "awsconfig.oauth.redirectSignIn.split(',')"
            },
            {
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.module.ts",
                "type": "",
                "defaultValue": "awsconfig.oauth.redirectSignOut.split(',')"
            },
            {
                "name": "updatedAwsConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.module.ts",
                "type": "object",
                "defaultValue": "{\n  ...awsconfig,\n  oauth: {\n    ...awsconfig.oauth,\n    redirectSignIn: isLocalhost\n      ? localRedirectSignIn\n      : productionRedirectSignIn,\n    redirectSignOut: isLocalhost\n      ? localRedirectSignOut\n      : productionRedirectSignOut,\n  },\n}"
            },
            {
                "name": "views",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/views.module.ts",
                "type": "[]",
                "defaultValue": "[\n  SignupComponent,\n  SignupErrorComponent,\n  SignupErrorValidationComponent,\n  SignupKnowyouComponent,\n  SignupThankyouComponent,\n  KycAddressComponent,\n  KycCongratulationsComponent,\n  KycIdverificationComponent,\n  KycKbaquestionsComponent,\n  KycPhonenumberComponent,\n  KycSsnComponent,\n  KycSsnFullComponent,\n  KycWelcomeComponent,\n  KycWelcomebackComponent,\n]"
            }
        ],
        "functions": [
            {
                "name": "BraveEmailValidator",
                "file": "src/app/shared/validators/email.validator.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "description": "",
                "args": [
                    {
                        "name": "control"
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "control",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        ],
        "typealiases": [
            {
                "name": "Blog",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/shared/services/aws/api.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "Comment",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/shared/services/aws/api.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "CreateBlogInput",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/shared/services/aws/api.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "CreateBlogMutation",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/shared/services/aws/api.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "CreateCommentInput",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/shared/services/aws/api.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "CreateCommentMutation",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/shared/services/aws/api.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "CreatePostInput",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/shared/services/aws/api.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "CreatePostMutation",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/shared/services/aws/api.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "DeleteBlogInput",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/shared/services/aws/api.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "DeleteBlogMutation",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/shared/services/aws/api.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "DeleteCommentInput",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/shared/services/aws/api.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "DeleteCommentMutation",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/shared/services/aws/api.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "DeletePostInput",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/shared/services/aws/api.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "DeletePostMutation",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/shared/services/aws/api.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "GetBlogQuery",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/shared/services/aws/api.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "GetCommentQuery",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/shared/services/aws/api.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "GetPostQuery",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/shared/services/aws/api.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "KycIdverificationState",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"init\" | \"sent\" | \"error\"",
                "file": "src/app/views/kyc-idverification/kyc-idverification.component.ts",
                "description": "",
                "kind": 168
            },
            {
                "name": "ListBlogsQuery",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/shared/services/aws/api.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "ListCommentsQuery",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/shared/services/aws/api.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "ListPostsQuery",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/shared/services/aws/api.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "ModelBlogConditionInput",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/shared/services/aws/api.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "ModelBlogConnection",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/shared/services/aws/api.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "ModelBlogFilterInput",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/shared/services/aws/api.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "ModelCommentConditionInput",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/shared/services/aws/api.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "ModelCommentConnection",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/shared/services/aws/api.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "ModelCommentFilterInput",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/shared/services/aws/api.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "ModelIDInput",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/shared/services/aws/api.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "ModelPostConditionInput",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/shared/services/aws/api.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "ModelPostConnection",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/shared/services/aws/api.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "ModelPostFilterInput",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/shared/services/aws/api.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "ModelSizeInput",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/shared/services/aws/api.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "ModelStringInput",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/shared/services/aws/api.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "OnCreateBlogSubscription",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/shared/services/aws/api.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "OnCreateCommentSubscription",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/shared/services/aws/api.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "OnCreatePostSubscription",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/shared/services/aws/api.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "OnDeleteBlogSubscription",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/shared/services/aws/api.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "OnDeleteCommentSubscription",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/shared/services/aws/api.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "OnDeletePostSubscription",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/shared/services/aws/api.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "OnUpdateBlogSubscription",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/shared/services/aws/api.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "OnUpdateCommentSubscription",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/shared/services/aws/api.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "OnUpdatePostSubscription",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/shared/services/aws/api.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "Post",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/shared/services/aws/api.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "SyncBlogsQuery",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/shared/services/aws/api.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "SyncCommentsQuery",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/shared/services/aws/api.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "SyncPostsQuery",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/shared/services/aws/api.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "UpdateBlogInput",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/shared/services/aws/api.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "UpdateBlogMutation",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/shared/services/aws/api.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "UpdateCommentInput",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/shared/services/aws/api.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "UpdateCommentMutation",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/shared/services/aws/api.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "UpdatePostInput",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/shared/services/aws/api.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "UpdatePostMutation",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/shared/services/aws/api.service.ts",
                "description": "",
                "kind": 165
            }
        ],
        "enumerations": [
            {
                "name": "ModelAttributeTypes",
                "childs": [
                    {
                        "name": "binary",
                        "value": "binary"
                    },
                    {
                        "name": "binarySet",
                        "value": "binarySet"
                    },
                    {
                        "name": "bool",
                        "value": "bool"
                    },
                    {
                        "name": "list",
                        "value": "list"
                    },
                    {
                        "name": "map",
                        "value": "map"
                    },
                    {
                        "name": "number",
                        "value": "number"
                    },
                    {
                        "name": "numberSet",
                        "value": "numberSet"
                    },
                    {
                        "name": "string",
                        "value": "string"
                    },
                    {
                        "name": "stringSet",
                        "value": "stringSet"
                    },
                    {
                        "name": "_null",
                        "value": "_null"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "description": "",
                "file": "src/app/shared/services/aws/api.service.ts"
            }
        ],
        "groupedVariables": {
            "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.stories.ts": [
                {
                    "name": "Accent",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "accentConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.stories.ts",
                    "type": "IFilledClosingAlertConfig",
                    "defaultValue": "{\n  size: 'base',\n  backgroundColor: 'bg-fuchsia-500',\n  color: 'text-white',\n  alertTitle: 'Alert!',\n  alertBody: 'Something went wrong. Please try again.',\n}"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "ExtraLarge",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "extraLargeConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.stories.ts",
                    "type": "IFilledClosingAlertConfig",
                    "defaultValue": "{\n  size: 'xl',\n  backgroundColor: 'bg-indigo-800',\n  color: 'text-white',\n  alertTitle: 'Alert!',\n  alertBody: 'Something went wrong. Please try again.',\n}"
                },
                {
                    "name": "ExtraSmall",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "extraSmallConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.stories.ts",
                    "type": "IFilledClosingAlertConfig",
                    "defaultValue": "{\n  size: 'xs',\n  backgroundColor: 'bg-indigo-800',\n  color: 'text-white',\n  alertTitle: 'Alert!',\n  alertBody: 'Something went wrong. Please try again.',\n}"
                },
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "largeConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.stories.ts",
                    "type": "IFilledClosingAlertConfig",
                    "defaultValue": "{\n  size: 'lg',\n  backgroundColor: 'bg-indigo-800',\n  color: 'text-white',\n  alertTitle: 'Alert!',\n  alertBody: 'Something went wrong. Please try again.',\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "primaryConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.stories.ts",
                    "type": "IFilledClosingAlertConfig",
                    "defaultValue": "{\n  size: 'base',\n  backgroundColor: 'bg-indigo-800',\n  color: 'text-white',\n  alertTitle: 'Alert!',\n  alertBody: 'Something went wrong. Please try again.',\n}"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "smallConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.stories.ts",
                    "type": "IFilledClosingAlertConfig",
                    "defaultValue": "{\n  size: 'sm',\n  backgroundColor: 'bg-indigo-800',\n  color: 'text-white',\n  alertTitle: 'Alert!',\n  alertBody: 'Something went wrong. Please try again.',\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.stories.ts",
                    "type": "Story<FilledClosingAlertComponent>",
                    "defaultValue": "(args: any) => ({\n  component: FilledClosingAlertComponent,\n  props: {\n    ...args,\n    showAlert: true,\n  },\n})"
                }
            ],
            "src/app/shared/components/badges/filled-onlytext-badge/filled-onlytext-badge.stories.ts": [
                {
                    "name": "Accent",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/badges/filled-onlytext-badge/filled-onlytext-badge.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "accentConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/badges/filled-onlytext-badge/filled-onlytext-badge.stories.ts",
                    "type": "IFilledOnlytextBadgeConfig",
                    "defaultValue": "{\n  size: 'base',\n  backgroundColor: 'bg-fuchsia-200',\n  color: 'text-fuchsia-500',\n}"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/badges/filled-onlytext-badge/filled-onlytext-badge.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/badges/filled-onlytext-badge/filled-onlytext-badge.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "primaryConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/badges/filled-onlytext-badge/filled-onlytext-badge.stories.ts",
                    "type": "IFilledOnlytextBadgeConfig",
                    "defaultValue": "{\n  size: 'base',\n  backgroundColor: 'bg-indigo-200',\n  color: 'text-indigo-800',\n}"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/badges/filled-onlytext-badge/filled-onlytext-badge.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "secondaryConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/badges/filled-onlytext-badge/filled-onlytext-badge.stories.ts",
                    "type": "IFilledOnlytextBadgeConfig",
                    "defaultValue": "{\n  size: 'base',\n  backgroundColor: 'bg-lightBlue-100',\n  color: 'text-indigo-800',\n}"
                },
                {
                    "name": "Strong",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/badges/filled-onlytext-badge/filled-onlytext-badge.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "strongConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/badges/filled-onlytext-badge/filled-onlytext-badge.stories.ts",
                    "type": "IFilledOnlytextBadgeConfig",
                    "defaultValue": "{\n  size: 'base',\n  backgroundColor: 'bg-indigo-800',\n  color: 'text-lightBlue-100',\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/badges/filled-onlytext-badge/filled-onlytext-badge.stories.ts",
                    "type": "Story<FilledOnlytextBadgeComponent>",
                    "defaultValue": "(args: any) => ({\n  props: {\n    ...args,\n  },\n  template: `<brave-filled-onlytext-badge>Badge</brave-filled-onlytext-badge>`,\n})"
                }
            ],
            "src/app/shared/components/buttons/filled-onlytext-button/filled-onlytext-button.stories.ts": [
                {
                    "name": "Accent",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/buttons/filled-onlytext-button/filled-onlytext-button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "accentConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/buttons/filled-onlytext-button/filled-onlytext-button.stories.ts",
                    "type": "IFilledOnlyTextButtonConfig",
                    "defaultValue": "{\n  buttonSize: 'base',\n  backgroundColor: 'bg-fuchsia-500',\n  activeColor: 'bg-fuchsia-600',\n  color: 'text-white',\n}"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/buttons/filled-onlytext-button/filled-onlytext-button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/buttons/filled-onlytext-button/filled-onlytext-button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "largeConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/buttons/filled-onlytext-button/filled-onlytext-button.stories.ts",
                    "type": "IFilledOnlyTextButtonConfig",
                    "defaultValue": "{\n  buttonSize: 'lg',\n  backgroundColor: 'bg-fuchsia-500',\n  activeColor: 'bg-fuchsia-600',\n  color: 'text-white',\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/buttons/filled-onlytext-button/filled-onlytext-button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "primaryConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/buttons/filled-onlytext-button/filled-onlytext-button.stories.ts",
                    "type": "IFilledOnlyTextButtonConfig",
                    "defaultValue": "{\n  buttonSize: 'base',\n  backgroundColor: 'bg-indigo-800',\n  activeColor: 'bg-indigo-900',\n  color: 'text-white',\n}"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/buttons/filled-onlytext-button/filled-onlytext-button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "secondaryConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/buttons/filled-onlytext-button/filled-onlytext-button.stories.ts",
                    "type": "IFilledOnlyTextButtonConfig",
                    "defaultValue": "{\n  buttonSize: 'base',\n  backgroundColor: 'bg-lightBlue-100',\n  activeColor: 'bg-lightBlue-200',\n  color: 'text-indigo-800',\n}"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/buttons/filled-onlytext-button/filled-onlytext-button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "smallConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/buttons/filled-onlytext-button/filled-onlytext-button.stories.ts",
                    "type": "IFilledOnlyTextButtonConfig",
                    "defaultValue": "{\n  buttonSize: 'sm',\n  backgroundColor: 'bg-fuchsia-500',\n  activeColor: 'bg-fuchsia-600',\n  color: 'text-white',\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/buttons/filled-onlytext-button/filled-onlytext-button.stories.ts",
                    "type": "Story<FilledOnlytextButtonComponent>",
                    "defaultValue": "(args: any) => ({\n  props: {\n    ...args,\n  },\n  template: `<brave-filled-onlytext-button>Default</brave-filled-onlytext-button>`,\n})"
                }
            ],
            "src/app/shared/components/buttons/links-onlytext-button/links-onlytext-button.stories.ts": [
                {
                    "name": "Accent",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/buttons/links-onlytext-button/links-onlytext-button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "accentConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/buttons/links-onlytext-button/links-onlytext-button.stories.ts",
                    "type": "ILinksOnlyTextButtonConfig",
                    "defaultValue": "{\n  buttonSize: 'base',\n  color: 'text-fuchsia-500',\n}"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/buttons/links-onlytext-button/links-onlytext-button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/buttons/links-onlytext-button/links-onlytext-button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "largeConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/buttons/links-onlytext-button/links-onlytext-button.stories.ts",
                    "type": "ILinksOnlyTextButtonConfig",
                    "defaultValue": "{\n  buttonSize: 'lg',\n  color: 'text-indigo-800',\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/buttons/links-onlytext-button/links-onlytext-button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "primaryConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/buttons/links-onlytext-button/links-onlytext-button.stories.ts",
                    "type": "ILinksOnlyTextButtonConfig",
                    "defaultValue": "{\n  buttonSize: 'base',\n  color: 'text-indigo-800',\n}"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/buttons/links-onlytext-button/links-onlytext-button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "smallConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/buttons/links-onlytext-button/links-onlytext-button.stories.ts",
                    "type": "ILinksOnlyTextButtonConfig",
                    "defaultValue": "{\n  buttonSize: 'sm',\n  color: 'text-indigo-800',\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/buttons/links-onlytext-button/links-onlytext-button.stories.ts",
                    "type": "Story<LinksOnlytextButtonComponent>",
                    "defaultValue": "(args: any) => ({\n  props: {\n    ...args,\n  },\n  template: `<brave-links-onlytext-button>My Link</brave-links-onlytext-button>`,\n})"
                }
            ],
            "src/app/shared/components/tooltips/outline-tooltip/outline-tooltip.stories.ts": [
                {
                    "name": "Bottom",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/tooltips/outline-tooltip/outline-tooltip.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/tooltips/outline-tooltip/outline-tooltip.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Left",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/tooltips/outline-tooltip/outline-tooltip.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Right",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/tooltips/outline-tooltip/outline-tooltip.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/tooltips/outline-tooltip/outline-tooltip.stories.ts",
                    "type": "Story<OutlineTooltipComponent>",
                    "defaultValue": "(args: any) => ({\n  component: OutlineTooltipComponent,\n  props: {\n    ...args,\n  },\n})"
                },
                {
                    "name": "Top",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/tooltips/outline-tooltip/outline-tooltip.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "src/app/shared/components/shared-components.module.ts": [
                {
                    "name": "components",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/shared-components.module.ts",
                    "type": "[]",
                    "defaultValue": "[\n  SignInComponent,\n  SignUpComponent,\n  FilledOnlytextButtonComponent,\n  LinksOnlytextButtonComponent,\n  OutlineOnlytextButtonComponent,\n  OutlineInputComponent,\n  OutlineOnecolumnFormComponent,\n  GoogleIconsigninButtonComponent,\n  FacebookOnlytextsigninButtonComponent,\n  SimpleSignupFormComponent,\n  OutlineSelectInputComponent,\n  DateofbirthFormComponent,\n  KnowYouFormComponent,\n  FilledClosingAlertComponent,\n  FilledOnlytextBadgeComponent,\n  IndexDropdownComponent,\n  MenuDropdownComponent,\n  NotificationDropdownComponent,\n  PagesDropdownComponent,\n  TableDropdownComponent,\n  UserDropdownComponent,\n  OutlineOnlytextSelectComponent,\n  FooterComponent,\n  FooterAdminComponent,\n  FooterSmallComponent,\n  HiddenCodeFormComponent,\n  HiddenAsteriskInputComponent,\n  OutlineAddressFormComponent,\n  OutlinePhoneFormComponent,\n  OutlineVerificationcodeFormComponent,\n  SsnFullFormComponent,\n  SsnLastfourFormComponent,\n  HiddenAsteriskInputComponent,\n  BaseModalRegularComponent,\n  BaseModalSmallComponent,\n  AdminNavbarComponent,\n  AuthNavbarComponent,\n  DashboardNavbarComponent,\n  IndexNavbarComponent,\n  OutlinePrevnextPaginationComponent,\n  FilledChecktextProgressbarComponent,\n  SidebarComponent,\n  FilledOnlytextTabsComponent,\n  OutlineTooltipComponent,\n]"
                },
                {
                    "name": "directives",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/shared-components.module.ts",
                    "type": "[]",
                    "defaultValue": "[HiddenAsteriskInputDirective, OutlineTooltipDirective]"
                },
                {
                    "name": "pipes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/shared-components.module.ts",
                    "type": "[]",
                    "defaultValue": "[\n  FilledOnlytextButtonPipe,\n  LinksOnlytextButtonPipe,\n  OutlineOnlytextButtonPipe,\n  OutlineInputPipe,\n  OutlineSelectInputPipe,\n  FilledClosingAlertPipe,\n  FilledOnlytextBadgePipe,\n  FilledChecktextProgressbarPipe,\n]"
                }
            ],
            "src/app/shared/components/modals/base-modal-regular/base-modal-regular.stories.ts": [
                {
                    "name": "config",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/modals/base-modal-regular/base-modal-regular.stories.ts",
                    "type": "IBaseModalRegularConfig",
                    "defaultValue": "{\n  openButtonText: 'Open',\n  title: 'Message Title',\n  body:\n    'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec ultrices est in dolor feugiat, et consequat urna imperdiet. Nam a purus elit. In eu dui fermentum, tincidunt nisi a, pulvinar nulla. Morbi justo lectus, pellentesque ut dignissim at, varius at erat. Nullam porta libero justo, non facilisis urna elementum quis. Sed cursus lacinia faucibus. Nulla at elit erat. Ut at pharetra est. In dictum fringilla odio sed fringilla.',\n  actionButtonOneText: 'Cancel',\n  actionButtonTwoText: 'Continue',\n}"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/modals/base-modal-regular/base-modal-regular.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/modals/base-modal-regular/base-modal-regular.stories.ts",
                    "type": "Story<BaseModalRegularComponent>",
                    "defaultValue": "(args: any) => ({\n  props: {\n    ...args,\n    config,\n  },\n  template: `<brave-base-modal-regular [config]=\"config\"></brave-base-modal-regular>`,\n})"
                }
            ],
            "src/app/shared/components/modals/base-modal-small/base-modal-small.stories.ts": [
                {
                    "name": "config",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/modals/base-modal-small/base-modal-small.stories.ts",
                    "type": "IBaseModalSmallConfig",
                    "defaultValue": "{\n  openButtonText: 'Open',\n  title: 'Message Title',\n  body:\n    'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec ultrices est in dolor feugiat, et consequat urna imperdiet. Nam a purus elit. In eu dui fermentum, tincidunt nisi a, pulvinar nulla. Morbi justo lectus, pellentesque ut dignissim at, varius at erat. Nullam porta libero justo, non facilisis urna elementum quis. Sed cursus lacinia faucibus. Nulla at elit erat. Ut at pharetra est. In dictum fringilla odio sed fringilla.',\n  actionButtonOneText: 'Cancel',\n  actionButtonTwoText: 'Continue',\n}"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/modals/base-modal-small/base-modal-small.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/modals/base-modal-small/base-modal-small.stories.ts",
                    "type": "Story<BaseModalSmallComponent>",
                    "defaultValue": "(args: any) => ({\n  props: {\n    ...args,\n    config,\n  },\n  template: `<brave-base-modal-small [config]=\"config\"></brave-base-modal-small>`,\n})"
                }
            ],
            "src/app/shared/components/progressbars/filled-checktext-progressbar/filled-checktext-progressbar.stories.ts": [
                {
                    "name": "config",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/progressbars/filled-checktext-progressbar/filled-checktext-progressbar.stories.ts",
                    "type": "IFilledChecktextProgressbarConfig",
                    "defaultValue": "{\n  size: 'base',\n  steps: [\n    { active: false, complete: false, name: 'step 1' },\n    { active: false, complete: false, name: 'step 2' },\n    { active: false, complete: false, name: 'step 3' },\n    { active: false, complete: false, name: 'step 4' },\n    { active: false, complete: false, name: 'step 5' },\n  ],\n}"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/progressbars/filled-checktext-progressbar/filled-checktext-progressbar.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "stack",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/progressbars/filled-checktext-progressbar/filled-checktext-progressbar.stories.ts",
                    "type": "IProgressStep[]",
                    "defaultValue": "[\n  { active: true, complete: true, name: 'step 1' },\n  { active: true, complete: true, name: 'step 2' },\n  { active: true, complete: false, name: 'step 3' },\n]"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/progressbars/filled-checktext-progressbar/filled-checktext-progressbar.stories.ts",
                    "type": "Story<FilledChecktextProgressbarComponent>",
                    "defaultValue": "(args: any) => ({\n  props: {\n    ...args,\n    stack,\n    config,\n  },\n  template: `<brave-filled-checktext-progressbar [config]=\"config\"><brave-filled-checktext-progressbar>`,\n})"
                }
            ],
            "src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "type": "literal type"
                }
            ],
            "src/app/views/kyc-congratulations/kyc-congratulations.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/kyc-congratulations/kyc-congratulations.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/kyc-congratulations/kyc-congratulations.stories.ts",
                    "type": "Story<KycCongratulationsComponent>",
                    "defaultValue": "(args: any) => ({\n  component: KycCongratulationsComponent,\n  props: {\n    ...args,\n  },\n})"
                }
            ],
            "src/app/views/kyc-idverification/kyc-idverification.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/kyc-idverification/kyc-idverification.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Error",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/kyc-idverification/kyc-idverification.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Init",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/kyc-idverification/kyc-idverification.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Sent",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/kyc-idverification/kyc-idverification.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/kyc-idverification/kyc-idverification.stories.ts",
                    "type": "Story<KycIdverificationComponent>",
                    "defaultValue": "(args: any) => ({\n  component: KycIdverificationComponent,\n  props: {\n    ...args,\n  },\n})"
                }
            ],
            "src/app/views/kyc-address/kyc-address.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/kyc-address/kyc-address.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/kyc-address/kyc-address.stories.ts",
                    "type": "Story<KycAddressComponent>",
                    "defaultValue": "(args: any) => ({\n  component: KycAddressComponent,\n  props: {\n    ...args,\n  },\n})"
                }
            ],
            "src/app/views/kyc-kbaquestions/kyc-kbaquestions.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/kyc-kbaquestions/kyc-kbaquestions.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/kyc-kbaquestions/kyc-kbaquestions.stories.ts",
                    "type": "Story<KycKbaquestionsComponent>",
                    "defaultValue": "(args: any) => ({\n  component: KycKbaquestionsComponent,\n  props: {\n    ...args,\n  },\n})"
                }
            ],
            "src/app/views/kyc-phonenumber/kyc-phonenumber.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/kyc-phonenumber/kyc-phonenumber.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/kyc-phonenumber/kyc-phonenumber.stories.ts",
                    "type": "Story<KycPhonenumberComponent>",
                    "defaultValue": "(args: any) => ({\n  component: KycPhonenumberComponent,\n  props: {\n    ...args,\n  },\n})"
                }
            ],
            "src/app/views/kyc-ssn/kyc-ssn.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/kyc-ssn/kyc-ssn.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "slots",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/kyc-ssn/kyc-ssn.stories.ts",
                    "type": "number[]",
                    "defaultValue": "[1, 2, 3, 4]"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/kyc-ssn/kyc-ssn.stories.ts",
                    "type": "Story<KycSsnComponent>",
                    "defaultValue": "(args: any) => ({\n  component: KycSsnComponent,\n  props: {\n    ...args,\n  },\n})"
                }
            ],
            "src/app/views/kyc-ssn-full/kyc-ssn-full.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/kyc-ssn-full/kyc-ssn-full.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "slots",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/kyc-ssn-full/kyc-ssn-full.stories.ts",
                    "type": "number[]",
                    "defaultValue": "[1, 2, 3, 4]"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/kyc-ssn-full/kyc-ssn-full.stories.ts",
                    "type": "Story<KycSsnFullComponent>",
                    "defaultValue": "(args: any) => ({\n  component: KycSsnFullComponent,\n  props: {\n    ...args,\n  },\n})"
                }
            ],
            "src/app/views/kyc-welcome/kyc-welcome.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/kyc-welcome/kyc-welcome.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/kyc-welcome/kyc-welcome.stories.ts",
                    "type": "Story<KycWelcomeComponent>",
                    "defaultValue": "(args: any) => ({\n  component: KycWelcomeComponent,\n  props: {\n    ...args,\n  },\n})"
                }
            ],
            "src/app/views/kyc-welcomeback/kyc-welcomeback.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/kyc-welcomeback/kyc-welcomeback.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/kyc-welcomeback/kyc-welcomeback.stories.ts",
                    "type": "Story<KycWelcomebackComponent>",
                    "defaultValue": "(args: any) => ({\n  component: KycWelcomebackComponent,\n  props: {\n    ...args,\n  },\n})"
                }
            ],
            "src/app/views/signup/signup.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/signup/signup.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/signup/signup.stories.ts",
                    "type": "Story<SignupComponent>",
                    "defaultValue": "(args: any) => ({\n  component: SignupComponent,\n  props: {\n    ...args,\n  },\n})"
                }
            ],
            "src/app/views/signup-error/signup-error.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/signup-error/signup-error.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/signup-error/signup-error.stories.ts",
                    "type": "Story<SignupErrorComponent>",
                    "defaultValue": "(args: any) => ({\n  component: SignupErrorComponent,\n  props: {\n    ...args,\n  },\n})"
                }
            ],
            "src/app/views/signup-error-validation/signup-error-validation.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/signup-error-validation/signup-error-validation.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/signup-error-validation/signup-error-validation.stories.ts",
                    "type": "Story<SignupErrorValidationComponent>",
                    "defaultValue": "(args: any) => ({\n  component: SignupErrorValidationComponent,\n  props: {\n    ...args,\n  },\n})"
                }
            ],
            "src/app/views/signup-knowyou/signup-knowyou.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/signup-knowyou/signup-knowyou.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/signup-knowyou/signup-knowyou.stories.ts",
                    "type": "Story<SignupKnowyouComponent>",
                    "defaultValue": "(args: any) => ({\n  component: SignupKnowyouComponent,\n  props: {\n    ...args,\n  },\n})"
                }
            ],
            "src/app/views/signup-thankyou/signup-thankyou.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/signup-thankyou/signup-thankyou.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/signup-thankyou/signup-thankyou.stories.ts",
                    "type": "Story<SignupThankyouComponent>",
                    "defaultValue": "(args: any) => ({\n  component: SignupThankyouComponent,\n  props: {\n    ...args,\n  },\n})"
                }
            ],
            "src/app/layouts/onboarding/kyc-layout/kyc-layout.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layouts/onboarding/kyc-layout/kyc-layout.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layouts/onboarding/kyc-layout/kyc-layout.stories.ts",
                    "type": "Story<KycLayoutComponent>",
                    "defaultValue": "(args: any) => ({\n  component: KycLayoutComponent,\n  props: {\n    ...args,\n  },\n})"
                }
            ],
            "src/app/shared/components/typography/typography-accent-bg-cooltext.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/typography/typography-accent-bg-cooltext.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/typography/typography-accent-bg-cooltext.stories.ts",
                    "type": "Story<any>",
                    "defaultValue": "(args: any) => ({\n  props: {\n    ...args,\n  },\n  template: `\n  <div class=\"bg-fuchsia-500 p-4\">\n    <h1 class='font-headings font-extrabold text-5xl text-lightBlue-100'>H1 Heading</h1>\n    <h2 class='font-headings font-extrabold text-4xl text-lightBlue-100'>H2 Heading</h2>\n    <h3 class='font-headings font-extrabold text-3xl text-lightBlue-100'>H3 Heading</h3>\n    <h4 class='font-headings font-extrabold text-2xl text-lightBlue-100'>H4 Heading</h4>\n    <h5 class='font-headings font-extrabold text-xl text-lightBlue-100'>H5 Heading</h5>\n    <h6 class='font-headings font-extrabold text-lg text-lightBlue-100'>H6 Heading</h6>\n    <div style=\"margin: 10px 0px\"></div>\n    <p class='font-sans text-base text-lightBlue-100'>Body 1</p>\n    <p class='font-sans font-semibold text-base text-lightBlue-100'>Body 1-semibold</p>\n    <p class='font-sans text-sm text-lightBlue-100'>Body 2</p>\n    <p class='font-sans font-semibold text-sm text-lightBlue-100'>Body 2-semibold</p>\n  </div>\n    `,\n})"
                }
            ],
            "src/app/shared/components/typography/typography-accent-bg.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/typography/typography-accent-bg.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/typography/typography-accent-bg.stories.ts",
                    "type": "Story<any>",
                    "defaultValue": "(args: any) => ({\n  props: {\n    ...args,\n  },\n  template: `\n  <div class=\"bg-fuchsia-500 p-4\">\n    <h1 class='font-headings font-extrabold text-5xl text-white'>H1 Heading</h1>\n    <h2 class='font-headings font-extrabold text-4xl text-white'>H2 Heading</h2>\n    <h3 class='font-headings font-extrabold text-3xl text-white'>H3 Heading</h3>\n    <h4 class='font-headings font-extrabold text-2xl text-white'>H4 Heading</h4>\n    <h5 class='font-headings font-extrabold text-xl text-white'>H5 Heading</h5>\n    <h6 class='font-headings font-extrabold text-lg text-white'>H6 Heading</h6>\n    <div style=\"margin: 10px 0px\"></div>\n    <p class='font-sans text-base text-white'>Body 1</p>\n    <p class='font-sans font-semibold text-base text-white'>Body 1-semibold</p>\n    <p class='font-sans text-sm text-white'>Body 2</p>\n    <p class='font-sans font-semibold text-sm text-white'>Body 2-semibold</p>\n  </div>\n    `,\n})"
                }
            ],
            "src/app/shared/components/typography/typography-primary-bg-cooltext.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/typography/typography-primary-bg-cooltext.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/typography/typography-primary-bg-cooltext.stories.ts",
                    "type": "Story<any>",
                    "defaultValue": "(args: any) => ({\n  props: {\n    ...args,\n  },\n  template: `\n  <div class=\"bg-indigo-800 p-4\">\n    <h1 class='font-headings font-extrabold text-5xl text-lightBlue-100'>H1 Heading</h1>\n    <h2 class='font-headings font-extrabold text-4xl text-lightBlue-100'>H2 Heading</h2>\n    <h3 class='font-headings font-extrabold text-3xl text-lightBlue-100'>H3 Heading</h3>\n    <h4 class='font-headings font-extrabold text-2xl text-lightBlue-100'>H4 Heading</h4>\n    <h5 class='font-headings font-extrabold text-xl text-lightBlue-100'>H5 Heading</h5>\n    <h6 class='font-headings font-extrabold text-lg text-lightBlue-100'>H6 Heading</h6>\n    <div style=\"margin: 10px 0px\"></div>\n    <p class='font-sans text-base text-lightBlue-100'>Body 1</p>\n    <p class='font-sans font-semibold text-base text-lightBlue-100'>Body 1-semibold</p>\n    <p class='font-sans text-sm text-lightBlue-100'>Body 2</p>\n    <p class='font-sans font-semibold text-sm text-lightBlue-100'>Body 2-semibold</p>\n  </div>\n    `,\n})"
                }
            ],
            "src/app/shared/components/typography/typography-primary-bg.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/typography/typography-primary-bg.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/typography/typography-primary-bg.stories.ts",
                    "type": "Story<any>",
                    "defaultValue": "(args: any) => ({\n  props: {\n    ...args,\n  },\n  template: `\n  <div class=\"bg-indigo-800 p-4\">\n    <h1 class='font-headings font-extrabold text-5xl text-white'>H1 Heading</h1>\n    <h2 class='font-headings font-extrabold text-4xl text-white'>H2 Heading</h2>\n    <h3 class='font-headings font-extrabold text-3xl text-white'>H3 Heading</h3>\n    <h4 class='font-headings font-extrabold text-2xl text-white'>H4 Heading</h4>\n    <h5 class='font-headings font-extrabold text-xl text-white'>H5 Heading</h5>\n    <h6 class='font-headings font-extrabold text-lg text-white'>H6 Heading</h6>\n    <div style=\"margin: 10px 0px\"></div>\n    <p class='font-sans text-base text-white'>Body 1</p>\n    <p class='font-sans font-semibold text-base text-white'>Body 1-semibold</p>\n    <p class='font-sans text-sm text-white'>Body 2</p>\n    <p class='font-sans font-semibold text-sm text-white'>Body 2-semibold</p>\n  </div>\n    `,\n})"
                }
            ],
            "src/app/shared/components/typography/typography-transparent-bg.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/typography/typography-transparent-bg.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/typography/typography-transparent-bg.stories.ts",
                    "type": "Story<any>",
                    "defaultValue": "(args: any) => ({\n  props: {\n    ...args,\n  },\n  template: `\n    <h1 class='font-headings font-extrabold text-5xl text-coolGray-900'>H1 Heading</h1>\n    <h2 class='font-headings font-extrabold text-4xl text-coolGray-900'>H2 Heading</h2>\n    <h3 class='font-headings font-extrabold text-3xl text-coolGray-900'>H3 Heading</h3>\n    <h4 class='font-headings font-extrabold text-2xl text-coolGray-900'>H4 Heading</h4>\n    <h5 class='font-headings font-extrabold text-xl text-coolGray-900'>H5 Heading</h5>\n    <h6 class='font-headings font-extrabold text-lg text-coolGray-900'>H6 Heading</h6>\n    <div style=\"margin: 10px 0px\"></div>\n    <p class='font-sans text-base text-coolGray-700'>Body 1</p>\n    <p class='font-sans font-semibold text-base text-coolGray-700'>Body 1-semibold</p>\n    <p class='font-sans text-sm text-coolGray-700'>Body 2</p>\n    <p class='font-sans font-semibold text-sm text-coolGray-700'>Body 2-semibold</p>\n    `,\n})"
                }
            ],
            "src/app/shared/components/buttons/outline-onlytext-button/outline-onlytext-button.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/buttons/outline-onlytext-button/outline-onlytext-button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/buttons/outline-onlytext-button/outline-onlytext-button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "largeConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/buttons/outline-onlytext-button/outline-onlytext-button.stories.ts",
                    "type": "IOutlineOnlyTextButtonConfig",
                    "defaultValue": "{\n  buttonSize: 'lg',\n  borderColor: 'border-indigo-800',\n  activeColor: 'bg-indigo-900',\n  hoverColor: 'bg-indigo-800',\n  color: 'text-indigo-800',\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/buttons/outline-onlytext-button/outline-onlytext-button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "primaryConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/buttons/outline-onlytext-button/outline-onlytext-button.stories.ts",
                    "type": "IOutlineOnlyTextButtonConfig",
                    "defaultValue": "{\n  buttonSize: 'base',\n  borderColor: 'border-indigo-800',\n  activeColor: 'bg-indigo-900',\n  hoverColor: 'bg-indigo-800',\n  color: 'text-indigo-800',\n}"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/buttons/outline-onlytext-button/outline-onlytext-button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "smallConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/buttons/outline-onlytext-button/outline-onlytext-button.stories.ts",
                    "type": "IOutlineOnlyTextButtonConfig",
                    "defaultValue": "{\n  buttonSize: 'sm',\n  borderColor: 'border-indigo-800',\n  activeColor: 'bg-indigo-900',\n  hoverColor: 'bg-indigo-800',\n  color: 'text-indigo-800',\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/buttons/outline-onlytext-button/outline-onlytext-button.stories.ts",
                    "type": "Story<OutlineOnlytextButtonComponent>",
                    "defaultValue": "(args: any) => ({\n  props: {\n    ...args,\n  },\n  template: `<brave-outline-onlytext-button>Default</brave-outline-onlytext-button>`,\n})"
                }
            ],
            "src/app/shared/components/forms/dateofbirth-form/dateofbirth-form.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/forms/dateofbirth-form/dateofbirth-form.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/forms/dateofbirth-form/dateofbirth-form.stories.ts",
                    "type": "Story<DateofbirthFormComponent>",
                    "defaultValue": "(args: any) => ({\n  component: DateofbirthFormComponent,\n  props: {\n    ...args,\n  },\n})"
                }
            ],
            "src/app/shared/components/forms/hidden-code-form/hidden-code-form.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/forms/hidden-code-form/hidden-code-form.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "slots",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/forms/hidden-code-form/hidden-code-form.stories.ts",
                    "type": "number[]",
                    "defaultValue": "[1, 2, 3, 4]"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/forms/hidden-code-form/hidden-code-form.stories.ts",
                    "type": "Story<HiddenCodeFormComponent>",
                    "defaultValue": "(args: any) => ({\n  props: {\n    ...args,\n    slots,\n  },\n  template: `<brave-hidden-code-form [slots]=\"slots\"></brave-hidden-code-form>`,\n})"
                }
            ],
            "src/app/shared/components/forms/know-you-form/know-you-form.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/forms/know-you-form/know-you-form.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/forms/know-you-form/know-you-form.stories.ts",
                    "type": "Story<KnowYouFormComponent>",
                    "defaultValue": "(args: any) => ({\n  component: KnowYouFormComponent,\n  props: {\n    ...args,\n  },\n})"
                }
            ],
            "src/app/shared/components/forms/outline-address-form/outline-address-form.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/forms/outline-address-form/outline-address-form.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/forms/outline-address-form/outline-address-form.stories.ts",
                    "type": "Story<OutlineAddressFormComponent>",
                    "defaultValue": "(args: any) => ({\n  component: OutlineAddressFormComponent,\n  props: {\n    ...args,\n  },\n})"
                }
            ],
            "src/app/shared/components/forms/outline-onecolumn-form/outline-onecolumn-form.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/forms/outline-onecolumn-form/outline-onecolumn-form.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/forms/outline-onecolumn-form/outline-onecolumn-form.stories.ts",
                    "type": "Story<OutlineOnecolumnFormComponent>",
                    "defaultValue": "(args: any) => ({\n  component: OutlineOnecolumnFormComponent,\n  props: {\n    ...args,\n  },\n})"
                }
            ],
            "src/app/shared/components/forms/outline-phone-form/outline-phone-form.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/forms/outline-phone-form/outline-phone-form.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/forms/outline-phone-form/outline-phone-form.stories.ts",
                    "type": "Story<OutlinePhoneFormComponent>",
                    "defaultValue": "(args: any) => ({\n  component: OutlinePhoneFormComponent,\n  props: {\n    ...args,\n  },\n})"
                }
            ],
            "src/app/shared/components/forms/simple-signup-form/simple-signup-form.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/forms/simple-signup-form/simple-signup-form.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/forms/simple-signup-form/simple-signup-form.stories.ts",
                    "type": "Story<SimpleSignupFormComponent>",
                    "defaultValue": "(args: any) => ({\n  component: SimpleSignupFormComponent,\n  props: {\n    ...args,\n  },\n})"
                }
            ],
            "src/app/shared/components/forms/outline-verificationcode-form/outline-verificationcode-form.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/forms/outline-verificationcode-form/outline-verificationcode-form.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/forms/outline-verificationcode-form/outline-verificationcode-form.stories.ts",
                    "type": "Story<OutlineVerificationcodeFormComponent>",
                    "defaultValue": "(args: any) => ({\n  component: OutlineVerificationcodeFormComponent,\n  props: {\n    ...args,\n  },\n})"
                }
            ],
            "src/app/shared/components/forms/ssn-full-form/ssn-full-form.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/forms/ssn-full-form/ssn-full-form.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/forms/ssn-full-form/ssn-full-form.stories.ts",
                    "type": "Story<SsnFullFormComponent>",
                    "defaultValue": "(args: any) => ({\n  component: SsnFullFormComponent,\n  props: {\n    ...args,\n  },\n})"
                }
            ],
            "src/app/shared/components/forms/ssn-lastfour-form/ssn-lastfour-form.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/forms/ssn-lastfour-form/ssn-lastfour-form.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "slots",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/forms/ssn-lastfour-form/ssn-lastfour-form.stories.ts",
                    "type": "number[]",
                    "defaultValue": "[1, 2, 3, 4]"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/forms/ssn-lastfour-form/ssn-lastfour-form.stories.ts",
                    "type": "Story<SsnLastfourFormComponent>",
                    "defaultValue": "(args: any) => ({\n  props: {\n    ...args,\n    slots,\n  },\n  template: `<brave-ssn-lastfour-form [slots]=\"slots\"></brave-ssn-lastfour-form>`,\n})"
                }
            ],
            "src/app/shared/components/inputs/hidden-asterisk-input/hidden-asterisk-input.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/inputs/hidden-asterisk-input/hidden-asterisk-input.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/inputs/hidden-asterisk-input/hidden-asterisk-input.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/inputs/hidden-asterisk-input/hidden-asterisk-input.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/inputs/hidden-asterisk-input/hidden-asterisk-input.stories.ts",
                    "type": "Story<HiddenAsteriskInputComponent>",
                    "defaultValue": "(args: any) => ({\n  component: HiddenAsteriskInputComponent,\n  props: {\n    ...args,\n  },\n})"
                }
            ],
            "src/app/shared/components/inputs/outline-input/outline-input.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/inputs/outline-input/outline-input.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/inputs/outline-input/outline-input.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "largeConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/inputs/outline-input/outline-input.stories.ts",
                    "type": "IOutlineInputeConfig",
                    "defaultValue": "{\n  size: 'lg',\n  type: 'text',\n  label: 'Input label',\n  placeholder: 'Input text',\n  autocomplete: 'off',\n  value: '',\n}"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/inputs/outline-input/outline-input.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "smallConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/inputs/outline-input/outline-input.stories.ts",
                    "type": "IOutlineInputeConfig",
                    "defaultValue": "{\n  size: 'sm',\n  type: 'text',\n  label: 'Input label',\n  placeholder: 'Input text',\n  autocomplete: 'off',\n  value: '',\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/inputs/outline-input/outline-input.stories.ts",
                    "type": "Story<OutlineInputComponent>",
                    "defaultValue": "(args: any) => ({\n  component: OutlineInputComponent,\n  props: {\n    ...args,\n  },\n})"
                }
            ],
            "src/app/shared/components/inputs/outline-select-input/outline-select-input.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/inputs/outline-select-input/outline-select-input.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/inputs/outline-select-input/outline-select-input.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "largeConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/inputs/outline-select-input/outline-select-input.stories.ts",
                    "type": "IOutlineSelectInputConfig",
                    "defaultValue": "{\n  size: 'lg',\n  label: 'Input label',\n  options: ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l'],\n}"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/inputs/outline-select-input/outline-select-input.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "smallConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/inputs/outline-select-input/outline-select-input.stories.ts",
                    "type": "IOutlineSelectInputConfig",
                    "defaultValue": "{\n  size: 'sm',\n  label: 'Input label',\n  options: ['one', 'two', 'three'],\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/inputs/outline-select-input/outline-select-input.stories.ts",
                    "type": "Story<OutlineSelectInputComponent>",
                    "defaultValue": "(args: any) => ({\n  component: OutlineSelectInputComponent,\n  props: {\n    ...args,\n  },\n})"
                }
            ],
            "src/app/shared/components/navbars/dashboard-navbar/dashboard-navbar.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/navbars/dashboard-navbar/dashboard-navbar.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/navbars/dashboard-navbar/dashboard-navbar.stories.ts",
                    "type": "Story<DashboardNavbarComponent>",
                    "defaultValue": "(args: any) => ({\n  props: {\n    ...args,\n  },\n  template: `<brave-dashboard-navbar><brave-dashboard-navbar>`,\n})"
                }
            ],
            "src/app/shared/components/paginations/outline-prevnext-pagination/outline-prevnext-pagination.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/paginations/outline-prevnext-pagination/outline-prevnext-pagination.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/paginations/outline-prevnext-pagination/outline-prevnext-pagination.stories.ts",
                    "type": "Story<any>",
                    "defaultValue": "(args: any) => ({\n  component: OutlinePrevnextPaginationComponent,\n  props: {\n    ...args,\n  },\n})"
                }
            ],
            "src/app/shared/components/tabs/filled-onlytext-tabs/filled-onlytext-tabs.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/tabs/filled-onlytext-tabs/filled-onlytext-tabs.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/tabs/filled-onlytext-tabs/filled-onlytext-tabs.stories.ts",
                    "type": "Story<any>",
                    "defaultValue": "(args: any) => ({\n  component: FilledOnlytextTabsComponent,\n  props: {\n    ...args,\n  },\n})"
                }
            ],
            "src/app/shared/components/dropdowns/popdowns/notification-dropdown/notification-dropdown.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/dropdowns/popdowns/notification-dropdown/notification-dropdown.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/dropdowns/popdowns/notification-dropdown/notification-dropdown.stories.ts",
                    "type": "Story<NotificationDropdownComponent>",
                    "defaultValue": "(args: any) => ({\n  component: NotificationDropdownComponent,\n  props: {\n    ...args,\n  },\n})"
                }
            ],
            "src/app/shared/components/dropdowns/selects/outline-onlytext-select/outline-onlytext-select.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/dropdowns/selects/outline-onlytext-select/outline-onlytext-select.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "items",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/dropdowns/selects/outline-onlytext-select/outline-onlytext-select.stories.ts",
                    "type": "IOutlineOnlyTextItem[]",
                    "defaultValue": "[\n  { value: 'Item 1' },\n  { value: 'Item 2' },\n  { value: 'Item 3' },\n  { value: 'Item 4' },\n  { value: 'Item 5' },\n]"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/dropdowns/selects/outline-onlytext-select/outline-onlytext-select.stories.ts",
                    "type": "Story<OutlineOnlytextSelectComponent>",
                    "defaultValue": "(args: any) => ({\n  props: {\n    ...args,\n    items,\n  },\n  template: `\n  <brave-outline-onlytext-select [items]=\"items\"></brave-outline-onlytext-select>\n  `,\n})"
                }
            ],
            "src/app/shared/components/dropdowns/popdowns/user-dropdown/user-dropdown.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/dropdowns/popdowns/user-dropdown/user-dropdown.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/dropdowns/popdowns/user-dropdown/user-dropdown.stories.ts",
                    "type": "Story<UserDropdownComponent>",
                    "defaultValue": "(args: any) => ({\n  component: UserDropdownComponent,\n  props: {\n    ...args,\n  },\n})"
                }
            ],
            "src/app/shared/components/dropdowns/popdowns/table-dropdown/table-dropdown.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/dropdowns/popdowns/table-dropdown/table-dropdown.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/dropdowns/popdowns/table-dropdown/table-dropdown.stories.ts",
                    "type": "Story<TableDropdownComponent>",
                    "defaultValue": "(args: any) => ({\n  component: TableDropdownComponent,\n  props: {\n    ...args,\n  },\n})"
                }
            ],
            "src/environments/environment.dev.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.dev.ts",
                    "type": "object",
                    "defaultValue": "{\n  production: false,\n  API: 'https://jokbs4tpn3.execute-api.us-east-2.amazonaws.com/dev',\n}"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "type": "object",
                    "defaultValue": "{\n  production: true\n}"
                }
            ],
            "src/environments/environment.qa.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.qa.ts",
                    "type": "object",
                    "defaultValue": "{\n  production: false,\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "type": "object",
                    "defaultValue": "{\n  production: false\n}"
                }
            ],
            "src/app/app.module.ts": [
                {
                    "name": "isLocalhost",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.module.ts",
                    "type": "",
                    "defaultValue": "Boolean(\n  window.location.hostname === 'localhost' ||\n    window.location.hostname === '[::1]' ||\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)"
                },
                {
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.module.ts",
                    "type": "",
                    "defaultValue": "awsconfig.oauth.redirectSignIn.split(',')"
                },
                {
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.module.ts",
                    "type": "",
                    "defaultValue": "awsconfig.oauth.redirectSignOut.split(',')"
                },
                {
                    "name": "updatedAwsConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.module.ts",
                    "type": "object",
                    "defaultValue": "{\n  ...awsconfig,\n  oauth: {\n    ...awsconfig.oauth,\n    redirectSignIn: isLocalhost\n      ? localRedirectSignIn\n      : productionRedirectSignIn,\n    redirectSignOut: isLocalhost\n      ? localRedirectSignOut\n      : productionRedirectSignOut,\n  },\n}"
                }
            ],
            "src/app/layouts/layouts.module.ts": [
                {
                    "name": "layouts",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layouts/layouts.module.ts",
                    "type": "[]",
                    "defaultValue": "[\n  AuthenticationComponent,\n  OnboardingComponent,\n  KycLayoutComponent,\n  SignupLayoutComponent,\n]"
                }
            ],
            "src/app/shared/components/forms/dateofbirth-form/dateofbirth-form.component.ts": [
                {
                    "name": "months",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/forms/dateofbirth-form/dateofbirth-form.component.ts",
                    "type": "string[]",
                    "defaultValue": "[\n  'Jan',\n  'Feb',\n  'Mar',\n  'Apr',\n  'May',\n  'Jun',\n  'Jul',\n  'Aug',\n  'Sep',\n  'Oct',\n  'Nov',\n  'Dec',\n]"
                }
            ],
            "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.pipe.ts": [
                {
                    "name": "sizeSpecificClass",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.pipe.ts",
                    "type": "Record<string, any>",
                    "defaultValue": "{\n  xs: 'max-w-xs',\n  sm: 'max-w-sm',\n  base: 'max-w-md',\n  lg: 'max-w-lg',\n  xl: 'max-w-xl',\n}"
                }
            ],
            "src/app/shared/components/badges/filled-onlytext-badge/filled-onlytext-badge.pipe.ts": [
                {
                    "name": "sizeSpecificClass",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/badges/filled-onlytext-badge/filled-onlytext-badge.pipe.ts",
                    "type": "Record<string, any>",
                    "defaultValue": "{\n  sm: 'text-xs px-2 py-1',\n  base: 'text-xs px-2 py-1',\n  lg: 'text-xs px-2 py-1',\n}"
                }
            ],
            "src/app/shared/components/buttons/filled-onlytext-button/filled-onlytext-button.pipe.ts": [
                {
                    "name": "sizeSpecificClass",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/buttons/filled-onlytext-button/filled-onlytext-button.pipe.ts",
                    "type": "Record<string, any>",
                    "defaultValue": "{\n  sm: 'text-xs px-4 py-2 hover:shadow-md',\n  base: 'text-sm px-6 py-3 hover:shadow-lg',\n  lg: 'text-base px-8 py-3 hover:shadow-lg',\n}"
                }
            ],
            "src/app/shared/components/buttons/links-onlytext-button/links-onlytext-button.pipe.ts": [
                {
                    "name": "sizeSpecificClass",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/buttons/links-onlytext-button/links-onlytext-button.pipe.ts",
                    "type": "Record<string, any>",
                    "defaultValue": "{\n  sm: 'text-xs px-3 py-1',\n  base: 'text-sm px-6 py-2',\n  lg: 'text-base px-8 py-3',\n}"
                }
            ],
            "src/app/shared/components/buttons/outline-onlytext-button/outline-onlytext-button.pipe.ts": [
                {
                    "name": "sizeSpecificClass",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/buttons/outline-onlytext-button/outline-onlytext-button.pipe.ts",
                    "type": "Record<string, any>",
                    "defaultValue": "{\n  sm: 'text-xs px-4 py-2',\n  base: 'text-sm px-6 py-3',\n  lg: 'text-base px-8 py-3',\n}"
                }
            ],
            "src/app/shared/components/inputs/outline-input/outline-input.pipe.ts": [
                {
                    "name": "sizeSpecificClass",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/inputs/outline-input/outline-input.pipe.ts",
                    "type": "Record<string, any>",
                    "defaultValue": "{\n  sm: 'text-sm px-3 py-1',\n  base: 'text-sm px-3 py-3',\n  lg: 'text-base px-3 py-4',\n}"
                }
            ],
            "src/app/shared/components/inputs/outline-select-input/outline-select-input.pipe.ts": [
                {
                    "name": "sizeSpecificClass",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/inputs/outline-select-input/outline-select-input.pipe.ts",
                    "type": "Record<string, any>",
                    "defaultValue": "{\n  sm: 'text-sm px-1 py-1',\n  base: 'text-sm px-1 py-3',\n  lg: 'text-base px-1 py-4',\n}"
                }
            ],
            "src/app/shared/components/forms/outline-address-form/outline-address-form.component.ts": [
                {
                    "name": "states",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/forms/outline-address-form/outline-address-form.component.ts",
                    "type": "[]",
                    "defaultValue": "['AL', 'AK', 'AR', '...etc']"
                }
            ],
            "src/app/views/views.module.ts": [
                {
                    "name": "views",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/views.module.ts",
                    "type": "[]",
                    "defaultValue": "[\n  SignupComponent,\n  SignupErrorComponent,\n  SignupErrorValidationComponent,\n  SignupKnowyouComponent,\n  SignupThankyouComponent,\n  KycAddressComponent,\n  KycCongratulationsComponent,\n  KycIdverificationComponent,\n  KycKbaquestionsComponent,\n  KycPhonenumberComponent,\n  KycSsnComponent,\n  KycSsnFullComponent,\n  KycWelcomeComponent,\n  KycWelcomebackComponent,\n]"
                }
            ]
        },
        "groupedFunctions": {
            "src/app/shared/validators/email.validator.ts": [
                {
                    "name": "BraveEmailValidator",
                    "file": "src/app/shared/validators/email.validator.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "description": "",
                    "args": [
                        {
                            "name": "control"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "control",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ]
        },
        "groupedEnumerations": {
            "src/app/shared/services/aws/api.service.ts": [
                {
                    "name": "ModelAttributeTypes",
                    "childs": [
                        {
                            "name": "binary",
                            "value": "binary"
                        },
                        {
                            "name": "binarySet",
                            "value": "binarySet"
                        },
                        {
                            "name": "bool",
                            "value": "bool"
                        },
                        {
                            "name": "list",
                            "value": "list"
                        },
                        {
                            "name": "map",
                            "value": "map"
                        },
                        {
                            "name": "number",
                            "value": "number"
                        },
                        {
                            "name": "numberSet",
                            "value": "numberSet"
                        },
                        {
                            "name": "string",
                            "value": "string"
                        },
                        {
                            "name": "stringSet",
                            "value": "stringSet"
                        },
                        {
                            "name": "_null",
                            "value": "_null"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "description": "",
                    "file": "src/app/shared/services/aws/api.service.ts"
                }
            ]
        },
        "groupedTypeAliases": {
            "src/app/shared/services/aws/api.service.ts": [
                {
                    "name": "Blog",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/shared/services/aws/api.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "Comment",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/shared/services/aws/api.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "CreateBlogInput",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/shared/services/aws/api.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "CreateBlogMutation",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/shared/services/aws/api.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "CreateCommentInput",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/shared/services/aws/api.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "CreateCommentMutation",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/shared/services/aws/api.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "CreatePostInput",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/shared/services/aws/api.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "CreatePostMutation",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/shared/services/aws/api.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "DeleteBlogInput",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/shared/services/aws/api.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "DeleteBlogMutation",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/shared/services/aws/api.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "DeleteCommentInput",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/shared/services/aws/api.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "DeleteCommentMutation",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/shared/services/aws/api.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "DeletePostInput",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/shared/services/aws/api.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "DeletePostMutation",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/shared/services/aws/api.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "GetBlogQuery",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/shared/services/aws/api.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "GetCommentQuery",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/shared/services/aws/api.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "GetPostQuery",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/shared/services/aws/api.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "ListBlogsQuery",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/shared/services/aws/api.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "ListCommentsQuery",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/shared/services/aws/api.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "ListPostsQuery",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/shared/services/aws/api.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "ModelBlogConditionInput",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/shared/services/aws/api.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "ModelBlogConnection",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/shared/services/aws/api.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "ModelBlogFilterInput",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/shared/services/aws/api.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "ModelCommentConditionInput",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/shared/services/aws/api.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "ModelCommentConnection",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/shared/services/aws/api.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "ModelCommentFilterInput",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/shared/services/aws/api.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "ModelIDInput",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/shared/services/aws/api.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "ModelPostConditionInput",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/shared/services/aws/api.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "ModelPostConnection",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/shared/services/aws/api.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "ModelPostFilterInput",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/shared/services/aws/api.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "ModelSizeInput",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/shared/services/aws/api.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "ModelStringInput",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/shared/services/aws/api.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "OnCreateBlogSubscription",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/shared/services/aws/api.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "OnCreateCommentSubscription",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/shared/services/aws/api.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "OnCreatePostSubscription",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/shared/services/aws/api.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "OnDeleteBlogSubscription",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/shared/services/aws/api.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "OnDeleteCommentSubscription",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/shared/services/aws/api.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "OnDeletePostSubscription",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/shared/services/aws/api.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "OnUpdateBlogSubscription",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/shared/services/aws/api.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "OnUpdateCommentSubscription",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/shared/services/aws/api.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "OnUpdatePostSubscription",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/shared/services/aws/api.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "Post",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/shared/services/aws/api.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "SyncBlogsQuery",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/shared/services/aws/api.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "SyncCommentsQuery",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/shared/services/aws/api.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "SyncPostsQuery",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/shared/services/aws/api.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "UpdateBlogInput",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/shared/services/aws/api.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "UpdateBlogMutation",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/shared/services/aws/api.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "UpdateCommentInput",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/shared/services/aws/api.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "UpdateCommentMutation",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/shared/services/aws/api.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "UpdatePostInput",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/shared/services/aws/api.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "UpdatePostMutation",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/shared/services/aws/api.service.ts",
                    "description": "",
                    "kind": 165
                }
            ],
            "src/app/views/kyc-idverification/kyc-idverification.component.ts": [
                {
                    "name": "KycIdverificationState",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"init\" | \"sent\" | \"error\"",
                    "file": "src/app/views/kyc-idverification/kyc-idverification.component.ts",
                    "description": "",
                    "kind": 168
                }
            ]
        }
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "src/app/app-routing.module.ts",
                "module": "AppRoutingModule",
                "children": [
                    {
                        "path": "authentication",
                        "component": "AuthenticationComponent",
                        "children": [
                            {
                                "path": "signup",
                                "component": "SignupComponent"
                            },
                            {
                                "path": "",
                                "redirectTo": "signup",
                                "pathMatch": "full"
                            }
                        ]
                    },
                    {
                        "path": "",
                        "component": "AuthenticationComponent"
                    },
                    {
                        "path": "**",
                        "redirectTo": "",
                        "pathMatch": "full"
                    }
                ],
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 1,
        "status": "low",
        "files": [
            {
                "filePath": "e2e/src/app.po.ts",
                "type": "class",
                "linktype": "classe",
                "name": "AppPage",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/app.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "isLocalhost",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "updatedAwsConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layouts/authentication/authentication.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AuthenticationComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/layouts/layouts.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "layouts",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layouts/onboarding/kyc-layout/kyc-layout.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "KycLayoutComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/layouts/onboarding/kyc-layout/kyc-layout.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layouts/onboarding/kyc-layout/kyc-layout.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layouts/onboarding/onboarding.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OnboardingComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/layouts/onboarding/signup-layout/signup-layout.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SignupLayoutComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FilledClosingAlertComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IFilledClosingAlertConfig",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "FilledClosingAlertPipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.pipe.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "sizeSpecificClass",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Accent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "accentConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ExtraLarge",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "extraLargeConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ExtraSmall",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "extraSmallConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "largeConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "primaryConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "smallConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/alerts/filled-closing-alert/filled-closing-alert.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/auth/sign-in/sign-in.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SignInComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/auth/sign-up/sign-up.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SignUpComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/auth/sign-up/sign-up.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "FormFields",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/badges/filled-onlytext-badge/filled-onlytext-badge.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FilledOnlytextBadgeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/badges/filled-onlytext-badge/filled-onlytext-badge.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IFilledOnlytextBadgeConfig",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/badges/filled-onlytext-badge/filled-onlytext-badge.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "FilledOnlytextBadgePipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/badges/filled-onlytext-badge/filled-onlytext-badge.pipe.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "sizeSpecificClass",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/badges/filled-onlytext-badge/filled-onlytext-badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Accent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/badges/filled-onlytext-badge/filled-onlytext-badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "accentConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/badges/filled-onlytext-badge/filled-onlytext-badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/badges/filled-onlytext-badge/filled-onlytext-badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/badges/filled-onlytext-badge/filled-onlytext-badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "primaryConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/badges/filled-onlytext-badge/filled-onlytext-badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/badges/filled-onlytext-badge/filled-onlytext-badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "secondaryConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/badges/filled-onlytext-badge/filled-onlytext-badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Strong",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/badges/filled-onlytext-badge/filled-onlytext-badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "strongConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/badges/filled-onlytext-badge/filled-onlytext-badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/buttons/facebook-onlytextsignin-button/facebook-onlytextsignin-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FacebookOnlytextsigninButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/buttons/filled-onlytext-button/filled-onlytext-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FilledOnlytextButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/buttons/filled-onlytext-button/filled-onlytext-button.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IFilledOnlyTextButtonConfig",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/buttons/filled-onlytext-button/filled-onlytext-button.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "FilledOnlytextButtonPipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/buttons/filled-onlytext-button/filled-onlytext-button.pipe.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "sizeSpecificClass",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/buttons/filled-onlytext-button/filled-onlytext-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Accent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/buttons/filled-onlytext-button/filled-onlytext-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "accentConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/buttons/filled-onlytext-button/filled-onlytext-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/buttons/filled-onlytext-button/filled-onlytext-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/buttons/filled-onlytext-button/filled-onlytext-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "largeConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/buttons/filled-onlytext-button/filled-onlytext-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/buttons/filled-onlytext-button/filled-onlytext-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "primaryConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/buttons/filled-onlytext-button/filled-onlytext-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/buttons/filled-onlytext-button/filled-onlytext-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "secondaryConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/buttons/filled-onlytext-button/filled-onlytext-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/buttons/filled-onlytext-button/filled-onlytext-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "smallConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/buttons/filled-onlytext-button/filled-onlytext-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/buttons/google-iconsignin-button/google-iconsignin-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GoogleIconsigninButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/buttons/links-onlytext-button/links-onlytext-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LinksOnlytextButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/buttons/links-onlytext-button/links-onlytext-button.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ILinksOnlyTextButtonConfig",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/buttons/links-onlytext-button/links-onlytext-button.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "LinksOnlytextButtonPipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/buttons/links-onlytext-button/links-onlytext-button.pipe.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "sizeSpecificClass",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/buttons/links-onlytext-button/links-onlytext-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Accent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/buttons/links-onlytext-button/links-onlytext-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "accentConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/buttons/links-onlytext-button/links-onlytext-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/buttons/links-onlytext-button/links-onlytext-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/buttons/links-onlytext-button/links-onlytext-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "largeConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/buttons/links-onlytext-button/links-onlytext-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/buttons/links-onlytext-button/links-onlytext-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "primaryConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/buttons/links-onlytext-button/links-onlytext-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/buttons/links-onlytext-button/links-onlytext-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "smallConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/buttons/links-onlytext-button/links-onlytext-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/buttons/outline-onlytext-button/outline-onlytext-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OutlineOnlytextButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/buttons/outline-onlytext-button/outline-onlytext-button.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IOutlineOnlyTextButtonConfig",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/buttons/outline-onlytext-button/outline-onlytext-button.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "OutlineOnlytextButtonPipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/buttons/outline-onlytext-button/outline-onlytext-button.pipe.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "sizeSpecificClass",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/buttons/outline-onlytext-button/outline-onlytext-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/buttons/outline-onlytext-button/outline-onlytext-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/buttons/outline-onlytext-button/outline-onlytext-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "largeConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/buttons/outline-onlytext-button/outline-onlytext-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/buttons/outline-onlytext-button/outline-onlytext-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "primaryConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/buttons/outline-onlytext-button/outline-onlytext-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/buttons/outline-onlytext-button/outline-onlytext-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "smallConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/buttons/outline-onlytext-button/outline-onlytext-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/dropdowns/popdowns/index-dropdown/index-dropdown.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "IndexDropdownComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/dropdowns/popdowns/menu-dropdown/menu-dropdown.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MenuDropdownComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/dropdowns/popdowns/menu-dropdown/menu-dropdown.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IMenuDropdown",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/dropdowns/popdowns/menu-dropdown/menu-dropdown.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ISubmenuItem",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/dropdowns/popdowns/notification-dropdown/notification-dropdown.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NotificationDropdownComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/dropdowns/popdowns/notification-dropdown/notification-dropdown.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/dropdowns/popdowns/notification-dropdown/notification-dropdown.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/dropdowns/popdowns/pages-dropdown/pages-dropdown.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PagesDropdownComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/dropdowns/popdowns/table-dropdown/table-dropdown.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TableDropdownComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/dropdowns/popdowns/table-dropdown/table-dropdown.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/dropdowns/popdowns/table-dropdown/table-dropdown.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/dropdowns/popdowns/user-dropdown/user-dropdown.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UserDropdownComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/dropdowns/popdowns/user-dropdown/user-dropdown.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/dropdowns/popdowns/user-dropdown/user-dropdown.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/dropdowns/selects/outline-onlytext-select/outline-onlytext-select.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OutlineOnlytextSelectComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/dropdowns/selects/outline-onlytext-select/outline-onlytext-select.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IOutlineOnlyTextItem",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/dropdowns/selects/outline-onlytext-select/outline-onlytext-select.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/dropdowns/selects/outline-onlytext-select/outline-onlytext-select.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "items",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/dropdowns/selects/outline-onlytext-select/outline-onlytext-select.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/footers/footer-admin/footer-admin.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FooterAdminComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/footers/footer-small/footer-small.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FooterSmallComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/footers/footer/footer.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FooterComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/forms/dateofbirth-form/dateofbirth-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DateofbirthFormComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/forms/dateofbirth-form/dateofbirth-form.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "months",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/forms/dateofbirth-form/dateofbirth-form.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/forms/dateofbirth-form/dateofbirth-form.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/forms/hidden-code-form/hidden-code-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HiddenCodeFormComponent",
                "coveragePercent": 20,
                "coverageCount": "3/15",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/forms/hidden-code-form/hidden-code-form.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/forms/hidden-code-form/hidden-code-form.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "slots",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/forms/hidden-code-form/hidden-code-form.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/forms/know-you-form/know-you-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "KnowYouFormComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/forms/know-you-form/know-you-form.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/forms/know-you-form/know-you-form.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/forms/outline-address-form/outline-address-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OutlineAddressFormComponent",
                "coveragePercent": 9,
                "coverageCount": "1/11",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/forms/outline-address-form/outline-address-form.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "states",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/forms/outline-address-form/outline-address-form.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/forms/outline-address-form/outline-address-form.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/forms/outline-onecolumn-form/outline-onecolumn-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OutlineOnecolumnFormComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/forms/outline-onecolumn-form/outline-onecolumn-form.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/forms/outline-onecolumn-form/outline-onecolumn-form.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/forms/outline-phone-form/outline-phone-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OutlinePhoneFormComponent",
                "coveragePercent": 14,
                "coverageCount": "1/7",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/forms/outline-phone-form/outline-phone-form.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/forms/outline-phone-form/outline-phone-form.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/forms/outline-verificationcode-form/outline-verificationcode-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OutlineVerificationcodeFormComponent",
                "coveragePercent": 14,
                "coverageCount": "1/7",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/forms/outline-verificationcode-form/outline-verificationcode-form.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/forms/outline-verificationcode-form/outline-verificationcode-form.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/forms/simple-signup-form/simple-signup-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SimpleSignupFormComponent",
                "coveragePercent": 22,
                "coverageCount": "2/9",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/forms/simple-signup-form/simple-signup-form.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/forms/simple-signup-form/simple-signup-form.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/forms/ssn-full-form/ssn-full-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SsnFullFormComponent",
                "coveragePercent": 23,
                "coverageCount": "3/13",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/forms/ssn-full-form/ssn-full-form.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/forms/ssn-full-form/ssn-full-form.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/forms/ssn-lastfour-form/ssn-lastfour-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SsnLastfourFormComponent",
                "coveragePercent": 20,
                "coverageCount": "3/15",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/forms/ssn-lastfour-form/ssn-lastfour-form.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/forms/ssn-lastfour-form/ssn-lastfour-form.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "slots",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/forms/ssn-lastfour-form/ssn-lastfour-form.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/inputs/hidden-asterisk-input/hidden-asterisk-input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HiddenAsteriskInputComponent",
                "coveragePercent": 18,
                "coverageCount": "3/16",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/inputs/hidden-asterisk-input/hidden-asterisk-input.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "HiddenAsteriskInputDirective",
                "coveragePercent": 10,
                "coverageCount": "1/10",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/inputs/hidden-asterisk-input/hidden-asterisk-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/inputs/hidden-asterisk-input/hidden-asterisk-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/inputs/hidden-asterisk-input/hidden-asterisk-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/inputs/hidden-asterisk-input/hidden-asterisk-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/inputs/outline-input/outline-input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OutlineInputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/inputs/outline-input/outline-input.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IOutlineInputeConfig",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/inputs/outline-input/outline-input.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "OutlineInputPipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/inputs/outline-input/outline-input.pipe.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "sizeSpecificClass",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/inputs/outline-input/outline-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/inputs/outline-input/outline-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/inputs/outline-input/outline-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "largeConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/inputs/outline-input/outline-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/inputs/outline-input/outline-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "smallConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/inputs/outline-input/outline-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/inputs/outline-select-input/outline-select-input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OutlineSelectInputComponent",
                "coveragePercent": 11,
                "coverageCount": "2/17",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/inputs/outline-select-input/outline-select-input.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IOutlineSelectInputConfig",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/inputs/outline-select-input/outline-select-input.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "OutlineSelectInputPipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/inputs/outline-select-input/outline-select-input.pipe.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "sizeSpecificClass",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/inputs/outline-select-input/outline-select-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/inputs/outline-select-input/outline-select-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/inputs/outline-select-input/outline-select-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "largeConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/inputs/outline-select-input/outline-select-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/inputs/outline-select-input/outline-select-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "smallConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/inputs/outline-select-input/outline-select-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/modals/base-modal-regular/base-modal-regular.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BaseModalRegularComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/modals/base-modal-regular/base-modal-regular.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IBaseModalRegularConfig",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/modals/base-modal-regular/base-modal-regular.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "config",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/modals/base-modal-regular/base-modal-regular.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/modals/base-modal-regular/base-modal-regular.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/modals/base-modal-small/base-modal-small.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BaseModalSmallComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/modals/base-modal-small/base-modal-small.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IBaseModalSmallConfig",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/modals/base-modal-small/base-modal-small.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "config",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/modals/base-modal-small/base-modal-small.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/modals/base-modal-small/base-modal-small.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/navbars/admin-navbar/admin-navbar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AdminNavbarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/navbars/auth-navbar/auth-navbar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AuthNavbarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/navbars/dashboard-navbar/dashboard-navbar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DashboardNavbarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/navbars/dashboard-navbar/dashboard-navbar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/navbars/dashboard-navbar/dashboard-navbar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/navbars/index-navbar/index-navbar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "IndexNavbarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/paginations/outline-prevnext-pagination/outline-prevnext-pagination.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OutlinePrevnextPaginationComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/paginations/outline-prevnext-pagination/outline-prevnext-pagination.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/paginations/outline-prevnext-pagination/outline-prevnext-pagination.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/progressbars/filled-checktext-progressbar/filled-checktext-progressbar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FilledChecktextProgressbarComponent",
                "coveragePercent": 50,
                "coverageCount": "4/8",
                "status": "medium"
            },
            {
                "filePath": "src/app/shared/components/progressbars/filled-checktext-progressbar/filled-checktext-progressbar.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IFilledChecktextProgressbarConfig",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/progressbars/filled-checktext-progressbar/filled-checktext-progressbar.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IProgressStep",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/progressbars/filled-checktext-progressbar/filled-checktext-progressbar.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "FilledChecktextProgressbarPipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/progressbars/filled-checktext-progressbar/filled-checktext-progressbar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "config",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/progressbars/filled-checktext-progressbar/filled-checktext-progressbar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/progressbars/filled-checktext-progressbar/filled-checktext-progressbar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "stack",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/progressbars/filled-checktext-progressbar/filled-checktext-progressbar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/shared-components.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "components",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/shared-components.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "directives",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/shared-components.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "pipes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/sidebar/sidebar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SidebarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/tabs/filled-onlytext-tabs/filled-onlytext-tabs.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FilledOnlytextTabsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/tabs/filled-onlytext-tabs/filled-onlytext-tabs.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/tabs/filled-onlytext-tabs/filled-onlytext-tabs.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/tooltips/outline-tooltip/outline-tooltip.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OutlineTooltipComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/tooltips/outline-tooltip/outline-tooltip.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "OutlineTooltipDirective",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/tooltips/outline-tooltip/outline-tooltip.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Bottom",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/tooltips/outline-tooltip/outline-tooltip.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/tooltips/outline-tooltip/outline-tooltip.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Left",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/tooltips/outline-tooltip/outline-tooltip.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Right",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/tooltips/outline-tooltip/outline-tooltip.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/tooltips/outline-tooltip/outline-tooltip.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Top",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/typography/typography-accent-bg-cooltext.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/typography/typography-accent-bg-cooltext.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/typography/typography-accent-bg.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/typography/typography-accent-bg.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/typography/typography-primary-bg-cooltext.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/typography/typography-primary-bg-cooltext.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/typography/typography-primary-bg.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/typography/typography-primary-bg.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/typography/typography-transparent-bg.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/typography/typography-transparent-bg.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/guards/auth.guard.ts",
                "type": "guard",
                "linktype": "guard",
                "name": "AuthGuard",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/guards/unauth.guard.ts",
                "type": "guard",
                "linktype": "guard",
                "name": "UnauthGuard",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/guards/unconfirmed.guard.ts",
                "type": "guard",
                "linktype": "guard",
                "name": "UnconfirmedGuard",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/interfaces/app-data.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IAppData",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/interfaces/user.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IUser",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/models/app-data.model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "AppData",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/models/user.model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/services/auth/auth.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "AuthService",
                "coveragePercent": 23,
                "coverageCount": "4/17",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/services/auth/auth.service.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "NewUser",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/services/auth/guest.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "GuestService",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/services/auth/iam.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "IamService",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/services/aws/api.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "APIService",
                "coveragePercent": 0,
                "coverageCount": "0/28",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/services/aws/api.service.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "SubscriptionResponse",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/validators/email.validator.ts",
                "type": "function",
                "linksubtype": "function",
                "name": "BraveEmailValidator",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/app-data/app-data.actions.ts",
                "type": "class",
                "linktype": "classe",
                "name": "Add",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/store/app-data/app-data.actions.ts",
                "type": "class",
                "linktype": "classe",
                "name": "Delete",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/store/app-data/app-data.actions.ts",
                "type": "class",
                "linktype": "classe",
                "name": "Edit",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/store/app-data/app-data.actions.ts",
                "type": "class",
                "linktype": "classe",
                "name": "Fetch",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/store/app-data/app-data.state.ts",
                "type": "class",
                "linktype": "classe",
                "name": "AppDataStateModel",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/store/app-data/app-data.state.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "AppDataState",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/testing/dom-helper.ts",
                "type": "class",
                "linktype": "classe",
                "name": "DOMHelper",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/app/testing/test-helper.ts",
                "type": "class",
                "linktype": "classe",
                "name": "Helper",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/views/kyc-address/kyc-address.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "KycAddressComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/views/kyc-address/kyc-address.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/kyc-address/kyc-address.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/kyc-congratulations/kyc-congratulations.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "KycCongratulationsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/views/kyc-congratulations/kyc-congratulations.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/kyc-congratulations/kyc-congratulations.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/kyc-idverification/kyc-idverification.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "KycIdverificationComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/views/kyc-idverification/kyc-idverification.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/kyc-idverification/kyc-idverification.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Error",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/kyc-idverification/kyc-idverification.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Init",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/kyc-idverification/kyc-idverification.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Sent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/kyc-idverification/kyc-idverification.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/kyc-kbaquestions/kyc-kbaquestions.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "KycKbaquestionsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/views/kyc-kbaquestions/kyc-kbaquestions.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/kyc-kbaquestions/kyc-kbaquestions.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/kyc-phonenumber/kyc-phonenumber.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "KycPhonenumberComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/views/kyc-phonenumber/kyc-phonenumber.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/kyc-phonenumber/kyc-phonenumber.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/kyc-ssn-full/kyc-ssn-full.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "KycSsnFullComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/views/kyc-ssn-full/kyc-ssn-full.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/kyc-ssn-full/kyc-ssn-full.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "slots",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/kyc-ssn-full/kyc-ssn-full.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/kyc-ssn/kyc-ssn.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "KycSsnComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/views/kyc-ssn/kyc-ssn.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/kyc-ssn/kyc-ssn.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "slots",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/kyc-ssn/kyc-ssn.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/kyc-welcome/kyc-welcome.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "KycWelcomeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/views/kyc-welcome/kyc-welcome.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/kyc-welcome/kyc-welcome.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/kyc-welcomeback/kyc-welcomeback.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "KycWelcomebackComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/views/kyc-welcomeback/kyc-welcomeback.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/kyc-welcomeback/kyc-welcomeback.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/signup-error-validation/signup-error-validation.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SignupErrorValidationComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/views/signup-error-validation/signup-error-validation.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/signup-error-validation/signup-error-validation.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/signup-error/signup-error.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SignupErrorComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/views/signup-error/signup-error.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/signup-error/signup-error.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/signup-knowyou/signup-knowyou.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SignupKnowyouComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/views/signup-knowyou/signup-knowyou.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/signup-knowyou/signup-knowyou.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/signup-thankyou/signup-thankyou.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SignupThankyouComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/views/signup-thankyou/signup-thankyou.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/signup-thankyou/signup-thankyou.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/signup/signup.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SignupComponent",
                "coveragePercent": 70,
                "coverageCount": "7/10",
                "status": "good"
            },
            {
                "filePath": "src/app/views/signup/signup.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/signup/signup.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/views.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "views",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.dev.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.qa.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}