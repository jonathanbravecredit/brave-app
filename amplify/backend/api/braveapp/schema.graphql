type Query @aws_cognito_user_pools {
  transunion(action: String!, message: String!): String
}

type Mutation @aws_cognito_user_pools {
  patchTransunion(id: ID!, msg: String): Transunion
}

type AppData
  @model
  @auth(rules: [{ allow: owner }, { allow: private, provider: iam, operations: [read, update, create, delete] }]) {
  id: ID!
  user: User!
  agencies: Agencies!
  preferences: Preferences!
  status: String
  statusReason: String
  statusReasonDescription: String
  lastStatusModifiedOn: String
  nextStatusModifiedOn: String
}
type User {
  id: ID!
  userAttributes: UserAttributes
  onboarding: Onboarding
}
type Name {
  first: String!
  middle: String
  last: String!
}
type UserAttributes {
  name: Name
  address: Address
  phone: Phone
  dob: Dob
  ssn: Ssn
}
type Address {
  addressOne: String!
  addressTwo: String
  city: String!
  state: String!
  zip: String!
}
type Phone {
  primary: String!
}
type Dob {
  year: String!
  month: String!
  day: String!
}
type Ssn {
  lastfour: String!
  full: String
}
type Onboarding {
  lastActive: Int!
  lastComplete: Int!
  started: Boolean
  abandoned: Boolean
  display: [OnboardingStep]
}
type OnboardingStep {
  id: Int
  active: Boolean
  complete: Boolean
  name: String
}
type Agencies {
  transunion: Transunion
  equifax: Equifax
  experian: Experian
}
type Preferences {
  showAllAccounts: ShowAccountsPreference
}
type ShowAccountsPreference {
  creditCards: Boolean
  collectionsAccounts: Boolean
  installmentLoans: Boolean
  mortgages: Boolean
}
type Transunion {
  authenticated: Boolean
  indicativeEnrichmentSuccess: Boolean
  indicativeEnrichmentStatus: TUStatusRef
  getAuthenticationQuestionsSuccess: Boolean
  getAuthenticationQuestionsStatus: TUStatusRef
  verifyAuthenticationQuestionsOTPSuccess: Boolean
  verifyAuthenticationQuestionsOTPStatus: TUStatusRef
  verifyAuthenticationQuestionsKBASuccess: Boolean
  verifyAuthenticationQuestionsKBAStatus: TUStatusRef
  serviceBundleFulfillmentKey: String
  currentRawQuestions: String
  currentRawAuthDetails: String
  authAttempt: Int
  pinRequests: Int
  pinAttempts: Int
  pinCurrentAge: Float
  kbaAttempts: Int
  kbaCurrentAge: Float
  enrollmentKey: String
  enrollReport: TUReportResponse
  enrollMergeReport: TUReportResponse
  enrollVantageScore: TUReportResponse
  enrolled: Boolean
  enrolledOn: String
  fulfillReport: TUReportResponse
  fulfillMergeReport: TUReportResponse
  fulfillVantageScore: TUReportResponse
  fulfilledOn: String
  acknowledgedDisputeTerms: Boolean
  acknowledgedDisputeTermsOn: String
  disputeServiceBundleFulfillmentKey: String
  disputeEnrollmentKey: String
  disputeEnrolled: Boolean
  disputeEnrolledOn: String
  disputeStatus: String
  disputes: [Dispute]
}
type Equifax {
  authenticated: Boolean
}
type Experian {
  authenticated: Boolean
}
type TUStatusRef {
  id: ID
  status: String
  statusDescription: String
  statusModifiedOn: String
  statusCode: String
}
type TUReportResponse {
  bureau: String
  errorResponse: String
  serviceProduct: String
  serviceProductFullfillmentKey: String
  serviceProductObject: AWSJSON
  serviceProductTypeId: String
  serviceProductValue: String
  status: String
}
type Dispute {
  id: ID!
  appDataId: ID!
  disputeId: String
  disputeStatus: String
  disputeLetterCode: String
  disputeLetterContent: String
  openDisputes: DisputeSummary
  closedDisputes: DisputeSummary
  pvDisputedItems: PVDisputedItems
  agencyName: String
  openedOn: String
  closedOn: String
  disputeItems: AWSJSON
  disputeInvestigationResults: AWSJSON
  disputeCreditBureau: AWSJSON
  notificationStatus: String
  notificationMessage: AWSJSON
  notificationSentOn: String
}

type DisputeSummary {
  estimatedCompletionDate: String
  lastUpdatedDate: String
  openDate: String
  requestedDate: String
  totalClosedDisputedItems: String
  totalDisputedItems: String
  totalOpenDisputedItems: String
  totalPVDisputedItemCount: String
}

type PVDisputedItems {
  pvTradelines: AWSJSON
  pvPublicRecords: AWSJSON
}
