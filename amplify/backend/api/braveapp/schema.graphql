type AppData
  @model
  @auth(
    rules: [
      { allow: owner }
      {
        allow: private
        provider: iam
        operations: [read, update, create, delete]
      }
    ]
  ) {
  id: ID!
  user: User!
  agencies: Agencies!
}
type User {
  id: ID!
  userAttributes: UserAttributes
  onboarding: Onboarding
}
type Name {
  first: String!
  middle: String
  last: String!
}
type UserAttributes {
  name: Name
  address: Address
  phone: Phone
  dob: Dob
  ssn: Ssn
}
type Address {
  addressOne: String!
  addressTwo: String
  city: String!
  state: String!
  zip: String!
}
type Phone {
  primary: String!
}
type Dob {
  year: String!
  month: String!
  day: String!
}
type Ssn {
  lastfour: String!
  full: String
}
type Onboarding {
  lastActive: Int!
  lastComplete: Int!
  started: Boolean
}
type OnboardingStep {
  id: Int
  active: Boolean
  complete: Boolean
  name: String
}
type Agencies {
  transunion: Transunion
  equifax: Equifax
  experian: Experian
}
type Transunion {
  authenticated: Boolean
  indicativeEnrichmentSuccess: Boolean
  getAuthenticationQuestionsSuccess: Boolean
  serviceBundleFulfillmentKey: String
  currentRawQuestions: String
  currentRawAuthDetails: String
  enrollmentKey: String
  enrollReport: TUEnrollResponse
  enrollMergeReport: TUEnrollResponse
  enrollVantageScore: TUEnrollResponse
}
type Equifax {
  authenticated: Boolean
}
type Experian {
  authenticated: Boolean
}
type Query {
  transunion(action: String!, message: String!): String
}
type TUEnrollResponse {
  bureau: String
  errorResponse: String
  serviceProduct: String
  serviceProductFullfillmentKey: String
  serviceProductObject: String
  serviceProductTypeId: String
  serviceProductValue: String
  status: String
}
type MergeReport {
  TrueLinkCreditReportType: TrueLinkCreditReportType
}
type TrueLinkCreditReportType {
  SB168Frozen: String
  Borrower: Borrower
  TradeLinePartition: [TradeLinePartition]
  InquiryPartition: InquiryPartition
  Message: [{
    code: String
    type: String }]
  Summary: Summary
}
type Borrowr {
  BorrowerAddress: {
    CreditAddress: String
    Dwelling: String
    Origin: String
    Ownership: String
    Source: Source
  },
  Birth: {
    BirthDate: String
    Source: Source
  },
  CreditScore: {
    CreditScoreFactor: [CreditScoreFactor]
    CreditScoreMode: String
    NoScoreReason: String
    Source: Source
  },
  SocialPartition: {
    Social: {
      SocialSecurityNumber: String
      Source: Source
    }
  }
}
type TradeLinePartition {
  Tradeline: {
    AccountCondition: String
    AccountDesignator: String
    DisputeFlag: String
    IndustryCode: String
    OpenClosed: String
    PayStatus: String
    VerificationIndicator: String
    Remark: {
      RemarkCode: String
    }
    GrantedTrade: {
      AccountType: String
      CreditType: String
      PaymentFrequency: String
      TermType: String
      WorstPayStatus: String
      PayStatusHistory: {
        MonthlyPayStatus: [String]
      }
      CreditLimit: String
    }
    Source: Source
  }
}
type InquiryPartition {
  Inquiry: {
    IndustryCode: String
    Source: Source
  }
}
type Summary {
  TradelineSummary: {
    TransUnion: String
  }
  InquirySummary: {
    TransUnion: String
  }
  PublicRecordSummary: {
    TransUnion: String
  }
  Sources: {
    Source: {
      Bureau: String
      InquiryDate: String
      OriginalData: String
    }
  }
  SafetyCheckPassed: String
}
type VantageScore {
  CreditScoreType: CreditScoreType
}
type CreditScoreType {
  CreditScoreFactor: [CreditScoreFactor]
  CreditScoreModel: String
  NoScoreReason: String
  Source: Source
}
type CreditScoreFactor {
  Factor: String
  FactorText: [String]
}
type Source {
  BorrowerKey: String
  Bureau: String
  InquiryDate: String
  Reference: String
}
