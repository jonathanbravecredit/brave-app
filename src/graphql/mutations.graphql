# this is an auto generated file. This will be overwritten
mutation PatchTransunion($id: ID!, $msg: String) {
  patchTransunion(id: $id, msg: $msg) {
    authenticated
    indicativeEnrichmentSuccess
    getAuthenticationQuestionsSuccess
    serviceBundleFulfillmentKey
    currentRawQuestions
    currentRawAuthDetails
    enrollmentKey
    enrollReport {
      bureau
      errorResponse
      serviceProduct
      serviceProductFullfillmentKey
      serviceProductObject
      serviceProductTypeId
      serviceProductValue
      status
    }
    enrollMergeReport {
      bureau
      errorResponse
      serviceProduct
      serviceProductFullfillmentKey
      serviceProductObject
      serviceProductTypeId
      serviceProductValue
      status
    }
    enrollVantageScore {
      bureau
      errorResponse
      serviceProduct
      serviceProductFullfillmentKey
      serviceProductObject
      serviceProductTypeId
      serviceProductValue
      status
    }
    enrolled
    enrolledOn
    fulfillReport {
      bureau
      errorResponse
      serviceProduct
      serviceProductFullfillmentKey
      serviceProductObject
      serviceProductTypeId
      serviceProductValue
      status
    }
    fulfillMergeReport {
      bureau
      errorResponse
      serviceProduct
      serviceProductFullfillmentKey
      serviceProductObject
      serviceProductTypeId
      serviceProductValue
      status
    }
    fulfillVantageScore {
      bureau
      errorResponse
      serviceProduct
      serviceProductFullfillmentKey
      serviceProductObject
      serviceProductTypeId
      serviceProductValue
      status
    }
    fulfilledOn
    acknowledgedDisputeTerms
    acknowledgedDisputeTermsOn
    disputeServiceBundleFulfillmentKey
    disputeEnrollmentKey
    disputeEnrolled
    disputeEnrolledOn
    disputeStatus
  }
}
mutation CreateAppData(
  $input: CreateAppDataInput!
  $condition: ModelAppDataConditionInput
) {
  createAppData(input: $input, condition: $condition) {
    id
    user {
      id
      userAttributes {
        name {
          first
          middle
          last
        }
        address {
          addressOne
          addressTwo
          city
          state
          zip
        }
        phone {
          primary
        }
        dob {
          year
          month
          day
        }
        ssn {
          lastfour
          full
        }
      }
      onboarding {
        lastActive
        lastComplete
        started
      }
    }
    agencies {
      transunion {
        authenticated
        indicativeEnrichmentSuccess
        getAuthenticationQuestionsSuccess
        serviceBundleFulfillmentKey
        currentRawQuestions
        currentRawAuthDetails
        enrollmentKey
        enrollReport {
          bureau
          errorResponse
          serviceProduct
          serviceProductFullfillmentKey
          serviceProductObject
          serviceProductTypeId
          serviceProductValue
          status
        }
        enrollMergeReport {
          bureau
          errorResponse
          serviceProduct
          serviceProductFullfillmentKey
          serviceProductObject
          serviceProductTypeId
          serviceProductValue
          status
        }
        enrollVantageScore {
          bureau
          errorResponse
          serviceProduct
          serviceProductFullfillmentKey
          serviceProductObject
          serviceProductTypeId
          serviceProductValue
          status
        }
        enrolled
        enrolledOn
        fulfillReport {
          bureau
          errorResponse
          serviceProduct
          serviceProductFullfillmentKey
          serviceProductObject
          serviceProductTypeId
          serviceProductValue
          status
        }
        fulfillMergeReport {
          bureau
          errorResponse
          serviceProduct
          serviceProductFullfillmentKey
          serviceProductObject
          serviceProductTypeId
          serviceProductValue
          status
        }
        fulfillVantageScore {
          bureau
          errorResponse
          serviceProduct
          serviceProductFullfillmentKey
          serviceProductObject
          serviceProductTypeId
          serviceProductValue
          status
        }
        fulfilledOn
        acknowledgedDisputeTerms
        acknowledgedDisputeTermsOn
        disputeServiceBundleFulfillmentKey
        disputeEnrollmentKey
        disputeEnrolled
        disputeEnrolledOn
        disputeStatus
      }
      equifax {
        authenticated
      }
      experian {
        authenticated
      }
    }
    preferences {
      showAllAccounts {
        creditCards
        collectionsAccounts
        installmentLoans
        mortgages
      }
    }
    createdAt
    updatedAt
    owner
    disputes {
      items {
        id
        appDataId
        disputeId
        disputeStatus
        disputeLetterCode
        disputeLetterContent
        openDisputes
        agencyName
        openedOn
        closedOn
        disputeItems
        disputeResults
        notificationStatus
        notificationMessage
        notificationSentOn
        createdAt
        updatedAt
        owner
      }
      nextToken
    }
  }
}
mutation UpdateAppData(
  $input: UpdateAppDataInput!
  $condition: ModelAppDataConditionInput
) {
  updateAppData(input: $input, condition: $condition) {
    id
    user {
      id
      userAttributes {
        name {
          first
          middle
          last
        }
        address {
          addressOne
          addressTwo
          city
          state
          zip
        }
        phone {
          primary
        }
        dob {
          year
          month
          day
        }
        ssn {
          lastfour
          full
        }
      }
      onboarding {
        lastActive
        lastComplete
        started
      }
    }
    agencies {
      transunion {
        authenticated
        indicativeEnrichmentSuccess
        getAuthenticationQuestionsSuccess
        serviceBundleFulfillmentKey
        currentRawQuestions
        currentRawAuthDetails
        enrollmentKey
        enrollReport {
          bureau
          errorResponse
          serviceProduct
          serviceProductFullfillmentKey
          serviceProductObject
          serviceProductTypeId
          serviceProductValue
          status
        }
        enrollMergeReport {
          bureau
          errorResponse
          serviceProduct
          serviceProductFullfillmentKey
          serviceProductObject
          serviceProductTypeId
          serviceProductValue
          status
        }
        enrollVantageScore {
          bureau
          errorResponse
          serviceProduct
          serviceProductFullfillmentKey
          serviceProductObject
          serviceProductTypeId
          serviceProductValue
          status
        }
        enrolled
        enrolledOn
        fulfillReport {
          bureau
          errorResponse
          serviceProduct
          serviceProductFullfillmentKey
          serviceProductObject
          serviceProductTypeId
          serviceProductValue
          status
        }
        fulfillMergeReport {
          bureau
          errorResponse
          serviceProduct
          serviceProductFullfillmentKey
          serviceProductObject
          serviceProductTypeId
          serviceProductValue
          status
        }
        fulfillVantageScore {
          bureau
          errorResponse
          serviceProduct
          serviceProductFullfillmentKey
          serviceProductObject
          serviceProductTypeId
          serviceProductValue
          status
        }
        fulfilledOn
        acknowledgedDisputeTerms
        acknowledgedDisputeTermsOn
        disputeServiceBundleFulfillmentKey
        disputeEnrollmentKey
        disputeEnrolled
        disputeEnrolledOn
        disputeStatus
      }
      equifax {
        authenticated
      }
      experian {
        authenticated
      }
    }
    preferences {
      showAllAccounts {
        creditCards
        collectionsAccounts
        installmentLoans
        mortgages
      }
    }
    createdAt
    updatedAt
    owner
    disputes {
      items {
        id
        appDataId
        disputeId
        disputeStatus
        disputeLetterCode
        disputeLetterContent
        openDisputes
        agencyName
        openedOn
        closedOn
        disputeItems
        disputeResults
        notificationStatus
        notificationMessage
        notificationSentOn
        createdAt
        updatedAt
        owner
      }
      nextToken
    }
  }
}
mutation DeleteAppData(
  $input: DeleteAppDataInput!
  $condition: ModelAppDataConditionInput
) {
  deleteAppData(input: $input, condition: $condition) {
    id
    user {
      id
      userAttributes {
        name {
          first
          middle
          last
        }
        address {
          addressOne
          addressTwo
          city
          state
          zip
        }
        phone {
          primary
        }
        dob {
          year
          month
          day
        }
        ssn {
          lastfour
          full
        }
      }
      onboarding {
        lastActive
        lastComplete
        started
      }
    }
    agencies {
      transunion {
        authenticated
        indicativeEnrichmentSuccess
        getAuthenticationQuestionsSuccess
        serviceBundleFulfillmentKey
        currentRawQuestions
        currentRawAuthDetails
        enrollmentKey
        enrollReport {
          bureau
          errorResponse
          serviceProduct
          serviceProductFullfillmentKey
          serviceProductObject
          serviceProductTypeId
          serviceProductValue
          status
        }
        enrollMergeReport {
          bureau
          errorResponse
          serviceProduct
          serviceProductFullfillmentKey
          serviceProductObject
          serviceProductTypeId
          serviceProductValue
          status
        }
        enrollVantageScore {
          bureau
          errorResponse
          serviceProduct
          serviceProductFullfillmentKey
          serviceProductObject
          serviceProductTypeId
          serviceProductValue
          status
        }
        enrolled
        enrolledOn
        fulfillReport {
          bureau
          errorResponse
          serviceProduct
          serviceProductFullfillmentKey
          serviceProductObject
          serviceProductTypeId
          serviceProductValue
          status
        }
        fulfillMergeReport {
          bureau
          errorResponse
          serviceProduct
          serviceProductFullfillmentKey
          serviceProductObject
          serviceProductTypeId
          serviceProductValue
          status
        }
        fulfillVantageScore {
          bureau
          errorResponse
          serviceProduct
          serviceProductFullfillmentKey
          serviceProductObject
          serviceProductTypeId
          serviceProductValue
          status
        }
        fulfilledOn
        acknowledgedDisputeTerms
        acknowledgedDisputeTermsOn
        disputeServiceBundleFulfillmentKey
        disputeEnrollmentKey
        disputeEnrolled
        disputeEnrolledOn
        disputeStatus
      }
      equifax {
        authenticated
      }
      experian {
        authenticated
      }
    }
    preferences {
      showAllAccounts {
        creditCards
        collectionsAccounts
        installmentLoans
        mortgages
      }
    }
    createdAt
    updatedAt
    owner
    disputes {
      items {
        id
        appDataId
        disputeId
        disputeStatus
        disputeLetterCode
        disputeLetterContent
        openDisputes
        agencyName
        openedOn
        closedOn
        disputeItems
        disputeResults
        notificationStatus
        notificationMessage
        notificationSentOn
        createdAt
        updatedAt
        owner
      }
      nextToken
    }
  }
}
mutation CreateDispute(
  $input: CreateDisputeInput!
  $condition: ModelDisputeConditionInput
) {
  createDispute(input: $input, condition: $condition) {
    id
    appDataId
    disputeId
    disputeStatus
    disputeLetterCode
    disputeLetterContent
    openDisputes
    agencyName
    openedOn
    closedOn
    disputeItems
    disputeResults
    notificationStatus
    notificationMessage
    notificationSentOn
    createdAt
    updatedAt
    owner
  }
}
mutation UpdateDispute(
  $input: UpdateDisputeInput!
  $condition: ModelDisputeConditionInput
) {
  updateDispute(input: $input, condition: $condition) {
    id
    appDataId
    disputeId
    disputeStatus
    disputeLetterCode
    disputeLetterContent
    openDisputes
    agencyName
    openedOn
    closedOn
    disputeItems
    disputeResults
    notificationStatus
    notificationMessage
    notificationSentOn
    createdAt
    updatedAt
    owner
  }
}
mutation DeleteDispute(
  $input: DeleteDisputeInput!
  $condition: ModelDisputeConditionInput
) {
  deleteDispute(input: $input, condition: $condition) {
    id
    appDataId
    disputeId
    disputeStatus
    disputeLetterCode
    disputeLetterContent
    openDisputes
    agencyName
    openedOn
    closedOn
    disputeItems
    disputeResults
    notificationStatus
    notificationMessage
    notificationSentOn
    createdAt
    updatedAt
    owner
  }
}
